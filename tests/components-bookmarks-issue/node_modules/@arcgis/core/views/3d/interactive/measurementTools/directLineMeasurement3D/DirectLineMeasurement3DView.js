/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import t from"../../../../../Color.js";import i from"../../../../../core/Accessor.js";import{getContrast as s,multiplyOpacityToUnitRGBA as n,colorVectorEquals as a,colorVectorToColorAndOpacity as o}from"../../../../../core/colorUtils.js";import{destroyMaybe as r}from"../../../../../core/maybe.js";import{watch as l,initial as d}from"../../../../../core/reactiveUtils.js";import{property as h}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/Logger.js";import"../../../../../core/RandomLCG.js";import{subclass as c}from"../../../../../core/accessorSupport/decorators/subclass.js";import{create as p}from"../../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{fromPoints as u}from"../../../../../geometry/support/lineSegment.js";import{MeasurementMode as g}from"../../../analysis/interfaces.js";import{ViewMode as m}from"../../../analysis/DirectLineMeasurement/interfaces.js";import{Manipulator3D as _}from"../../Manipulator3D.js";import{createManipulatorMaterial as y}from"../../manipulatorUtils.js";import{RenderObject as b}from"../../RenderObject.js";import{LaserlineVisualElement as v}from"../../visualElements/LaserlineVisualElement.js";import{createSphereGeometry as w}from"../../../webgl-engine/lib/GeometryUtil.js";var L;!function(e){e.Manipulators="manipulators",e.AnalysisViewDestroyed="analysis-view-destroyed",e.AnalysisView="analysis-view"}(L||(L={}));let P=class extends i{constructor(e){super(e),this.cursorPoint=null,this._visible=!1,this._laserLine=null,this.laserLineEnabled=!0,this._lastDraggedHandle=null}initialize(){this._laserLine=new v({view:this.view,attached:!0,isDecoration:!0}),this._updateVisibility(this._visible),this._connectToAnalysisView(),this.addHandles(l((()=>this._params),(({laserLineGlowColor:e,laserLineInnerColor:t,laserLineGlobalAlpha:i})=>{const s=this._laserLine,n=s.style;s.style={...n,innerColor:t,glowColor:e,globalAlpha:i}})))}destroy(){this._laserLine=r(this._laserLine)}get _params(){const{accentColor:e}=this.view.effectiveTheme;return{laserLineGlowColor:t.toUnitRGB(e),laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:t.toUnitRGB(s(e)),laserLineInnerWidth:.75,laserLineGlobalAlpha:.75*e.a,handleColor:n(e,.5),handleRadius:5}}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get testData(){const e=this._laserLine.testData,t=this.analysisViewData.testData;return{labels:t?.labels,stripeLength:t?.stripeLength,laserLineRenderer:{heightManifoldEnabled:null!=e&&e.heightManifoldEnabled,heightManifoldTarget:null!=e?e.heightManifoldTarget:null,pointDistanceEnabled:null!=e&&e.pointDistanceEnabled,pointDistanceOrigin:null!=e?e.pointDistanceOrigin:null,pointDistanceTarget:null!=e?e.pointDistanceTarget:null,lineVerticalPlaneEnabled:null!=e&&e.lineVerticalPlaneEnabled}}}get _cursorPosition(){const e=p(),t=this.cursorPoint;return t&&this.view.renderCoordsHelper.toRenderCoords(t,e),e}get _startPosition(){const e=p(),t=this.analysis.startPoint;return t&&this.view.renderCoordsHelper.toRenderCoords(t,e),e}get _endPosition(){const e=p(),t=this.analysis.endPoint;return t&&this.view.renderCoordsHelper.toRenderCoords(t,e),e}get _laserLineParams(){const e=this._focusPosition,{active:t,lineState:i}=this.toolState,s=this.analysisViewData,n=this.laserLineEnabled&&!!e&&"measured"!==i&&t;if(!n||!this.visible||null==s||s.destroyed)return{heightManifoldTarget:null,pointDistanceLine:null,lineVerticalPlaneSegment:null};const a=s.actualVisualizedMeasurement,o="local"!==this.view.viewingMode&&n&&!!this.analysis.startPoint&&"geodesic"===a,r=n&&s.viewMode===m.Triangle;return{heightManifoldTarget:"euclidean"===a?e:null,pointDistanceLine:o?this._pointDistanceLine:null,lineVerticalPlaneSegment:r?u(this._startPosition,this._endPosition):null}}get _focusPosition(){const{lineState:e}=this.toolState,t=this.analysisViewData,i=null!=t&&!t.destroyed&&t.measurementMode===g.Euclidean&&t.viewMode===m.Direct;switch(e){case"drawing":return i?this._startPosition:this.analysis.endPoint?this._endPosition:this._startPosition;case"editing":return i?"start"===this._lastDraggedHandle?this._endPosition:this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return null!=this.cursorPoint?this._cursorPosition:null}}get _pointDistanceLine(){return{origin:"drawing"===this.toolState.lineState||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition,target:this._focusPosition}}createManipulators(){const e=this._params,{view:t}=this,i=()=>{const i=y(e.handleColor),s=[new b(w(i,1,32,32))],n=new _({view:t,renderObjects:s});return n.available=!1,n.radius=e.handleRadius,[n,i]},[s,n]=i(),[r,d]=i(),h=new _({view:this.view,available:!1,interactive:!1});null!=this.analysis.startPoint&&(s.location=this.analysis.startPoint,s.available=!0),null!=this.analysis.endPoint&&(r.location=this.analysis.endPoint,r.available=!0);const c=()=>{let e=this._lastDraggedHandle;s.grabbing&&!r.grabbing&&(e="start"),r.grabbing&&!s.grabbing&&(e="end"),s.grabbing||r.grabbing||(e=null),this._lastDraggedHandle=e},p=s.events.on("grab-changed",c),u=r.events.on("grab-changed",c);return this.addHandles([p,u,l((()=>o(this._params.handleColor)),(e=>{n.setParameters({color:e}),d.setParameters({color:e})}),{equals:a})],L.Manipulators),{start:s,end:r,cursor:h}}show(){this.destroyed||this._visible||this._updateVisibility(!0)}hide(){!this.destroyed&&this._visible&&this._updateVisibility(!1)}_connectToAnalysisView(){this.removeHandles(L.AnalysisView),this.addHandles([l((()=>this.analysisViewData?.destroyed),(e=>{e&&this.removeHandles(L.AnalysisView)}),d),l((()=>["measured"===this.toolState.lineState,this.analysisViewData]),(([e,t])=>{null==t||t.destroyed||(t.allowVisualElementsOrientationChange=!e)}),d),l((()=>this._laserLineParams),(e=>{const t=this._laserLine;t.heightManifoldTarget=e.heightManifoldTarget,t.pointDistanceLine=e.pointDistanceLine,t.lineVerticalPlaneSegment=e.lineVerticalPlaneSegment}),d)],L.AnalysisView)}_updateVisibility(e){this.initialized&&(this._visible=e,e?this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha}:this.view.cursor=null,this._laserLine.visible=e)}};e([h({constructOnly:!0})],P.prototype,"view",void 0),e([h()],P.prototype,"_params",null),e([h({constructOnly:!0})],P.prototype,"analysis",void 0),e([h({constructOnly:!0})],P.prototype,"analysisViewData",void 0),e([h()],P.prototype,"cursorPoint",void 0),e([h()],P.prototype,"toolState",void 0),e([h()],P.prototype,"visible",null),e([h()],P.prototype,"testData",null),e([h()],P.prototype,"_visible",void 0),e([h()],P.prototype,"_laserLine",void 0),e([h({constructOnly:!0})],P.prototype,"laserLineEnabled",void 0),e([h()],P.prototype,"_cursorPosition",null),e([h()],P.prototype,"_startPosition",null),e([h()],P.prototype,"_endPosition",null),e([h()],P.prototype,"_lastDraggedHandle",void 0),e([h()],P.prototype,"_laserLineParams",null),e([h()],P.prototype,"_focusPosition",null),e([h()],P.prototype,"_pointDistanceLine",null),P=e([c("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],P);export{P as DirectLineMeasurement3DView};
