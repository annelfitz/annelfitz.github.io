/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{colorVectorEquals as e}from"../../../../core/colorUtils.js";import t from"../../../../core/Handles.js";import{destroyMaybe as r}from"../../../../core/maybe.js";import{watch as s}from"../../../../core/reactiveUtils.js";import{create as o}from"../../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{f as i}from"../../../../chunks/vec32.js";import{create as a}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{c as n}from"../../../../chunks/vec42.js";import{create as h}from"../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{sv3d as l}from"../../../../geometry/support/vectorStacks.js";import{Object3DVisualElement as c}from"./Object3DVisualElement.js";import{createPolylineGeometry as d}from"../../webgl-engine/lib/GeometryUtil.js";import{RenderOccludedFlag as _}from"../../webgl-engine/lib/Material.js";import{MeasurementArrowMaterial as m}from"../../webgl-engine/materials/MeasurementArrowMaterial.js";class p extends c{constructor(e){super(e),this._arrowWidth=16,this._arrowSubdivisions=128,this._origin=a(),this._originTransform=o(),this._arrowCenter=a(),this._renderOccluded=_.OccludeAndTransparent,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._color=h(),this._contrastColor=h(),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._arrowMaterial&&this._arrowMaterial.setParameters({renderOccluded:e}))}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(e){this._stripeLength=e,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(e){if(this._stripesEnabled=e,this.attached){const e=this._stripesEnabled?this._contrastColor:this._color;this._arrowMaterial.setParameters({stripeEvenColor:e})}}get color(){return this._color}set color(t){e(t,this._color)||(n(this._color,t),this._updateArrowColor())}get contrastColor(){return this._contrastColor}set contrastColor(t){e(t,this._color)||(n(this._contrastColor,t),this._updateArrowColor())}createExternalResources(){const e=this._color,r=this._contrastColor,o=this._stripesEnabled?r:e;this._arrowMaterial=new m({outlineColor:e,stripeEvenColor:o,stripeOddColor:e,renderOccluded:this.renderOccluded,polygonOffset:!0,isDecoration:this.isDecoration}),this._handles=new t,this._handles.add(s((()=>this.view.state.camera),(()=>{this._viewChanged()})))}destroyExternalResources(){this._arrowMaterial=null,this._handles=r(this._handles)}forEachExternalMaterial(e){e(this._arrowMaterial)}createGeometries(e){if(null==this._geometry?.startRenderSpace||null==this._geometry.endRenderSpace)return;const t=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);t.transformation=this._originTransform,e.addGeometry(t),this._viewChanged()}_createArrowGeometry(e,t,r,s){const o=this.view.renderCoordsHelper,a=[],n=[],h=(e,t)=>{const s=l.get();i(s,e,r),a.push(s),n.push(t)};if("euclidean"===s.type){s.eval(.5,this._arrowCenter);const r=l.get();o.worldUpAtPosition(this._arrowCenter,r),h(e,r),h(t,r)}else{s.eval(.5,this._arrowCenter);const e=this._arrowSubdivisions+1&-2;for(let t=0;t<e;++t){const r=t/(e-1),i=l.get(),a=l.get();s.eval(r,i),o.worldUpAtPosition(i,a),h(i,a)}}return d(this._arrowMaterial,a,n)}_geometryChanged(){this.recreateGeometry()}_viewChanged(){if(this.view.ready&&this.attached&&null!=this._geometry){const e=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._arrowWidth*e})}}_updateArrowColor(){if(!this.attached)return;const e=this._color,t=this._contrastColor,r=this._stripesEnabled?t:e,s=e,o=e;this._arrowMaterial.setParameters({stripeEvenColor:r,outlineColor:s,stripeOddColor:o})}}export{p as MeasurementArrowVisualElement};
