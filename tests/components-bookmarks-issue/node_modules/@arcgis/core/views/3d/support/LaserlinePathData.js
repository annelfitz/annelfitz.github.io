/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{s as e,f as t}from"../../../chunks/vec32.js";import{create as r}from"../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{newDoubleArray as s}from"../../../geometry/support/DoubleArray.js";import{glLayout as i}from"./buffer/glUtil.js";import{newLayout as o}from"./buffer/InterleavedLayout.js";import{VertexArrayObject as u}from"../webgl-engine/lib/VertexArrayObject.js";import{VertexAttribute as f}from"../webgl-engine/lib/VertexAttribute.js";import{attributeLocations as n}from"../webgl-engine/shaders/LaserlinePathTechnique.js";import{BufferObject as a}from"../../webgl/BufferObject.js";import{PrimitiveType as l,Usage as c}from"../../webgl/enums.js";class h{constructor(e){this._renderCoordsHelper=e,this._buffers=null,this._origin=r(),this._dirty=!1,this._count=0,this._vao=null}set vertices(e){const t=s(3*e.length);let r=0;for(const s of e)t[r++]=s[0],t[r++]=s[1],t[r++]=s[2];this.buffers=[t]}set buffers(t){if(this._buffers=t,this._buffers.length>0){const t=this._buffers[0],r=3*Math.floor(t.length/3/2);e(this._origin,t[r],t[r+1],t[r+2])}else e(this._origin,0,0,0);this._dirty=!0}get origin(){return this._origin}draw(e){const t=this._ensureVAO(e);null!=t&&(e.bindVAO(t),e.drawArrays(l.TRIANGLES,0,this._count))}dispose(){null!=this._vao&&this._vao.dispose()}_ensureVAO(e){return null==this._buffers?null:(null==this._vao&&(this._vao=this._createVAO(e,this._buffers)),this._ensureVertexData(this._vao,this._buffers),this._vao)}_createVAO(e,t){const r=this._createDataBuffer(t);return this._dirty=!1,new u(e,n,{data:i(b)},{data:a.createVertex(e,c.STATIC_DRAW,r)})}_ensureVertexData(e,t){if(!this._dirty)return;const r=this._createDataBuffer(t);e.vertexBuffers.data?.setData(r),this._dirty=!1}_createDataBuffer(r){const s=r.reduce(((e,t)=>e+_(t)),0);this._count=s;const i=b.createBuffer(s),o=this._origin;let u=0,f=0;for(const n of r){for(let r=0;r<n.length;r+=3){const s=e(p,n[r],n[r+1],n[r+2]);0===r?f=this._renderCoordsHelper.getAltitude(s):this._renderCoordsHelper.setAltitude(s,f);const a=this._renderCoordsHelper.worldUpAtPosition(s,d),l=u+2*r,c=t(p,s,o);if(r<n.length-3){i.up.setVec(l,a),i.up.setVec(l+3,a),i.up.setVec(l+5,a);for(let e=0;e<6;e++)i.start.setVec(l+e,c);i.extrude.setValues(l,0,-1),i.extrude.setValues(l+1,1,-1),i.extrude.setValues(l+2,1,1),i.extrude.setValues(l+3,0,-1),i.extrude.setValues(l+4,1,1),i.extrude.setValues(l+5,0,1)}if(r>0){i.up.setVec(l-2,a),i.up.setVec(l-4,a),i.up.setVec(l-5,a);for(let e=-6;e<0;e++)i.end.setVec(l+e,c)}}u+=_(n)}return i.buffer}}function _(e){return 3*(2*(e.length/3-1))}const d=r(),p=r(),b=o().vec3f(f.START).vec3f(f.END).vec3f(f.UP).vec2f(f.EXTRUDE);export{h as LaserlinePathData};
