/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../geometry.js";import{isSome as r}from"../../../../core/arrayUtils.js";import{property as o}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import{fromQuat as t}from"../../../../core/libs/gl-matrix-2/math/mat4.js";import{create as i}from"../../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{c as l,e as p}from"../../../../chunks/vec32.js";import{create as c}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{projectBuffer as a}from"../../../../geometry/projection/projectBuffer.js";import{TileTreeDebugger as m}from"../../../support/TileTreeDebugger.js";import n from"../../../../geometry/Polygon.js";let u=class extends m{constructor(e){super(e)}getTiles(){const e=this.lv.getVisibleNodes(),o=this.view.renderSpatialReference,s=this.nodeSR;return e.map((e=>f(e,o,s))).filter(r).sort(((e,r)=>e.lij[0]===r.lij[0]?e.label>r.label?-1:1:e.lij[0]-r.lij[0]))}};function f(e,r,o){const s=e.serviceObbInIndexSR;if(null==s||null==r)return null;t(h,s.quaternion),l(j,s.center),a(j,o,0,j,r,0,1),h[12]=j[0],h[13]=j[1],h[14]=j[2];const i=[[],[],[]];p(j,s.halfSize,h),a(j,r,0,j,o,0,1),i[0].push([j[0],j[1]]),l(j,s.halfSize),j[0]=-j[0],p(j,j,h),a(j,r,0,j,o,0,1),i[0].push([j[0],j[1]]),l(j,s.halfSize),j[0]=-j[0],j[1]=-j[1],p(j,j,h),a(j,r,0,j,o,0,1),i[0].push([j[0],j[1]]),l(j,s.halfSize),j[1]=-j[1],p(j,j,h),a(j,r,0,j,o,0,1),i[0].push([j[0],j[1]]),i[1].push(i[0][0]),i[1].push(i[0][1]),l(j,s.halfSize),j[0]=-j[0],j[2]=-j[2],p(j,j,h),a(j,r,0,j,o,0,1),i[1].push([j[0],j[1]]),l(j,s.halfSize),j[2]=-j[2],p(j,j,h),a(j,r,0,j,o,0,1),i[1].push([j[0],j[1]]),i[2].push(i[0][0]),i[2].push(i[0][3]),l(j,s.halfSize),j[1]=-j[1],j[2]=-j[2],p(j,j,h),a(j,r,0,j,o,0,1),i[2].push([j[0],j[1]]),i[2].push(i[1][3]);const c=new n({rings:i,spatialReference:o});return{lij:[e.level,e.childCount,0],label:e.id,geometry:c}}e([o({constructOnly:!0})],u.prototype,"lv",void 0),e([o({constructOnly:!0})],u.prototype,"nodeSR",void 0),u=e([s("esri.views.3d.layers.support.I3STreeDebugger")],u);const h=i(),j=c();export{u as I3STreeDebugger};
