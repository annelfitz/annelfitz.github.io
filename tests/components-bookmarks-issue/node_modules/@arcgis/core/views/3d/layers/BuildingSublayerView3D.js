/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Evented.js";import{IdentifiableMixin as r}from"../../../core/Identifiable.js";import{EsriPromiseMixin as s}from"../../../core/Promise.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";const p=(p,l)=>{let n=class extends(s(r(t.EventedMixin(p)))){constructor(e){super(e),this.sublayer=null,this.parent=null,this.view=null}initialize(){}get suspended(){return!this.canResume()}get updating(){return!this.suspended&&this.isUpdating()}get visible(){return!!this.sublayer?.visible}set visible(e){this._overrideIfSome("visible",e)}get fullOpacity(){const e=e=>null!=e?e:1;return e(this.sublayer?.opacity)*e(this.parent?.fullOpacity)}canResume(){return!this.parent?.suspended&&this.view?.ready&&this.visible||!1}isUpdating(){return!1}};return e([i()],n.prototype,"sublayer",void 0),e([i()],n.prototype,"parent",void 0),e([i({readOnly:!0})],n.prototype,"suspended",null),e([i({type:Boolean,readOnly:!0})],n.prototype,"updating",null),e([i()],n.prototype,"view",void 0),e([i()],n.prototype,"visible",null),e([i()],n.prototype,"fullOpacity",null),n=e([o("esri.views.3d.layers.BuildingSublayerView3D")],n),n};export{p as BuildingSublayerView3DMixin};
