/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../../../Color.js";import o from"../../../../core/Error.js";import{loadImageAsync as t}from"../../../../support/requestUtils.js";import{EncodedMeshTexture as r}from"../../glTF/internal/resourceUtils.js";import{TextureUsage as s,TextureEncoding as a}from"./enums.js";import{CullFaceOptions as l}from"../../webgl-engine/lib/basicInterfaces.js";import{downsampleImage as n}from"../../webgl-engine/lib/textureUtils.js";import{useSchematicPBR as i,defaultSchematicMRRFactors as u}from"../../webgl-engine/materials/pbrUtils.js";async function c(o){const t=[],r=[];if(null==o){return{material:{alphaMode:"opaque",alphaCutoff:.1,doubleSided:!0,cullFace:0,normalTextureId:-1,emissiveTextureId:-1,occlusionTextureId:-1,emissiveFactor:[0,0,0],metallicRoughness:{baseColorFactor:[1,1,1,1],baseColorTextureId:-1,metallicRoughnessTextureId:-1,metallicFactor:0,roughnessFactor:.6000000238418579},wrapTextures:!1,hasParametersFromSource:!0},requiredTextures:t,textureData:r}}const a=d(o);"auto"===o.alphaMode&&console.warn('alphaMode "auto" not supported by I3S PBRMaterial - defaulting to "blend".');const n=i({normalTexture:o.normalTexture,emissiveTexture:a?o.emissiveTexture:null,emissiveFactor:a?e.toUnitRGB(o.emissiveColor):null,occlusionTexture:a?o.occlusionTexture:null,metallicRoughnessTexture:a?o.metallicRoughnessTexture:null,metallicFactor:a?o.metallic:null,roughnessFactor:a?o.roughness:null}),c=n?u[0]:a?o.metallic:0,g=n?u[1]:a?o.roughness:0;return{material:{alphaMode:"auto"===o.alphaMode?"blend":o.alphaMode,alphaCutoff:o.alphaCutoff,doubleSided:o.doubleSided,cullFace:o.doubleSided?l.None:l.Back,normalTextureId:await m(o.normalTexture,t,r,s.Normal),emissiveTextureId:a?await m(o.emissiveTexture,t,r,s.Emissive):-1,occlusionTextureId:a?await m(o.occlusionTexture,t,r,s.Occlusion):-1,emissiveFactor:a&&null!=o.emissiveColor?e.toUnitRGB(o.emissiveColor):[0,0,0],metallicRoughness:{baseColorFactor:null!=o.color?e.toUnitRGBA(o.color):[1,1,1,1],baseColorTextureId:await m(o.colorTexture,t,r,s.Color),metallicRoughnessTextureId:a?await m(o.metallicRoughnessTexture,t,r,s.MetallicRoughness):-1,metallicFactor:c,roughnessFactor:g},wrapTextures:!0,hasParametersFromSource:n},requiredTextures:t,textureData:r}}async function m(e,s,l,i){if(null==e)return-1;const u=l.length,c=e.data,m=e.url;if(null!=c){if(c instanceof HTMLImageElement||c instanceof HTMLCanvasElement){const e=n(c);return l.push({id:u,usage:i,data:e,encoding:a.PNG,downsampled:!1}),s.push({id:u,usage:i,encodings:[{name:void 0,encoding:a.PNG}]}),u}if(c instanceof HTMLVideoElement)return-1;if(c instanceof ImageData)throw new o("ImageData textures not supported yet for client side I3S nodes");if(c instanceof r)throw new o("EncodedMeshTexture textures not supported yet for client side I3S nodes")}else if(null!=m){const e=new Image;e.src=m;const o=await t(e,e.src,!1,void 0),r=n(o);return l.push({id:u,usage:i,data:r,encoding:a.PNG,downsampled:!1}),s.push({id:u,usage:i,encodings:[{name:void 0,encoding:a.PNG}]}),u}return-1}function d(e){return e.hasOwnProperty("metallicRoughnessTexture")}export{c as convertMeshMaterialToPBRMaterial};
