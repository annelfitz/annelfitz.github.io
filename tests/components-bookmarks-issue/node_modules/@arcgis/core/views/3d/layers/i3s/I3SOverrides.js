/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../request.js";import i from"../../../../core/Accessor.js";import{splitIntoChunks as r}from"../../../../core/arrayUtils.js";import{resultOrAbort as s,result as o}from"../../../../core/asyncUtils.js";import{estimateStringByteSize as n,estimateNumberByteSize as a}from"../../../../core/byteSizeEstimations.js";import d from"../../../../core/Collection.js";import{makeHandle as c}from"../../../../core/handleUtils.js";import h from"../../../../core/Logger.js";import{destroyMaybe as l,abortMaybe as u}from"../../../../core/maybe.js";import{whenOrAbort as m,createResolver as g}from"../../../../core/promiseUtils.js";import p from"../../../../core/ReactiveSet.js";import{watch as y,initial as f}from"../../../../core/reactiveUtils.js";import{property as b}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import{subclass as _}from"../../../../core/accessorSupport/decorators/subclass.js";import{equals as O}from"../../../../geometry/support/spatialReferenceUtils.js";import{formatNumber as v}from"../../../../intl/number.js";import{getMaximumQuerySize as j,queryAllJSON as C}from"../../../../layers/support/featureQueryAll.js";import{assetMapFromAssetMapsJSON as w,extractMesh as I}from"../../../../rest/support/meshFeatureSet.js";import{direct3DObjectFeatureLayerDisplayEnabled as F,i3sPatchingEnabled as A,sceneLayerEditingEnabled as L}from"../../../../support/featureFlags.js";import{isTimeoutError as x}from"../../../../support/requestUtils.js";import{ViewingMode as E}from"../../../ViewingMode.js";import S from"../FeatureLayerView3D.js";let G=class extends i{constructor(e){super(e),this._warnMaximumChangedObjectsExceeded=!1,this._maximumNumberOfEditOVerrides=V,this._original3DOFLDefinitionExpression=null,this._interactiveEditingSessions=new d,this.geometryOverrides=new d,this._clientGeometryCache=new Map,this._associatedLayerView=null,this._attributeChangedObjectIds=new p,this._geometryChangedObjectIds=new p,this._pendingFetchChangedObjectIds=null,this._pendingFetchAbortController=new AbortController,this._featureIdLocks=new Map}initialize(){this._memCache=this.memoryController.newCache(`i3s-attribute-overrides-${this.layer.uid}`),this._pendingFetchChangedObjectIds=this._fetchChangedObjectIds(this._pendingFetchAbortController?.signal),this._pendingFetchChangedObjectIds.finally((()=>{this._pendingFetchAbortController=null,this._pendingFetchChangedObjectIds=null})),this.is3DOFL&&null!=this._associatedLayer&&(F()?this._associatedLayer.load().then((e=>{this.destroyed||(this._original3DOFLDefinitionExpression=e.definitionExpression,this.addHandles(y((()=>this._definitionExpression),(t=>e.definitionExpression=t),f)),this._associatedLayerView=new S({layer:this._associatedLayer,view:this.view}))})):A())}destroy(){this.is3DOFL&&null!=this._associatedLayer&&(F()?null!=this._associatedLayerView&&(this._associatedLayer.definitionExpression=this._original3DOFLDefinitionExpression):A()),this._set("layer",null),this._memCache=l(this._memCache),this._pendingFetchAbortController=u(this._pendingFetchAbortController),this._pendingFetchChangedObjectIds=null,this._featureIdLocks.clear()}get is3DOFL(){return L()&&null!=this._associatedLayer?.infoFor3D}get sortedGeometryChangedObjectIds(){return this.is3DOFL?[...this._geometryChangedObjectIds].sort(((e,t)=>e-t)):[]}get _associatedLayer(){return null==this.layer?null:this.layer.associatedLayer}get hasGeometryChanges(){return this._geometryChangedObjectIds.size>0}get _definitionExpression(){const e=this.sortedGeometryChangedObjectIds;return 0===e.length?"1 = 0":`OBJECTID IN (${e.join(",")})`}get updating(){if(!this.is3DOFL)return!1;if(this._pendingFetchChangedObjectIds)return!0;if(F()){return!(null!=this._associatedLayerView)||null!=this._associatedLayerView&&this._associatedLayerView.updating}return!1}get isEmpty(){return null==this._pendingFetchChangedObjectIds&&0===this._attributeChangedObjectIds.size&&0===this._geometryChangedObjectIds.size}featureHasGeometryChanges(e){return this._geometryChangedObjectIds.has(e)}featureHasAttributeChanges(e){return this._attributeChangedObjectIds.has(e)}createInteractiveEditSession(e){this._attributeChangedObjectIds.add(e);const t=this._interactiveEditingSessions,i=new D(e,(()=>{t.remove(i)}));return t.unshift(i),i}async applyAttributeOverrides(e,t,i,r=[]){if(this._pendingFetchChangedObjectIds&&await m(this._pendingFetchChangedObjectIds,i),null==t)return;const{attributeData:s,loadedAttributes:o}=t;if(null==o||null==s||0===this._attributeChangedObjectIds.size)return;const n=new Set;for(const d of o)n.add(d.index);for(const d of r)n.has(d.index)||(o.push(d),s[d.name]=new Array(e.length));const a=await this._lockFeatureIds(e);try{const t={attributeData:s,loadedAttributes:o},r=this._getOverridesFromCache(e,t,this._attributeChangedObjectIds),{objectIds:n,fieldNames:a}=r;if(0===n.length||0===a.length)return;const d=await this._queryAttributeOverridesFromAssociatedLayer(n,a,i);if(null==d)return;this._processOverridesFromAssociatedLayer(e,d,a,t)}finally{a.remove()}}updateGeometry(e,t){this._geometryChangedObjectIds.add(e);const i=this._clientGeometryCache.get(e);if(null!=i&&(this.geometryOverrides.remove(i),this._clientGeometryCache.delete(e)),null!=t){const i={oid:e,mesh:t};this.geometryOverrides.add(i),this._clientGeometryCache.set(e,i)}}updateAttributeValue(e,t,i){this._attributeChangedObjectIds.add(e),this._cacheAttributeValue(e,t,i)}featureAdded(e){this.is3DOFL&&A()&&this._geometryChangedObjectIds.add(e),this._attributeChangedObjectIds.add(e)}_cacheAttributeValue(e,t,i){this._memCache.put(this._getAttributeCacheKey(e,t),i,this._memCacheAttributeValueSize(i))}_getOverridesFromCache(e,{loadedAttributes:t,attributeData:i},r){const s=new Set,o=new Array;for(const a of t)o[a.index]=i[a.name];const n=new Set;for(let a=0;a<e.length;a++){const i=e[a];if(r.has(i))for(const e of t){const t=this._attributeFromCache(i,e.index);void 0===t?(s.add(i),n.add(e.name)):o[e.index][a]=t}}return{objectIds:Array.from(s),fieldNames:Array.from(n)}}_attributeFromCache(e,t){const i=this._fromInteractiveEditingSession(e,t);if(void 0!==i)return i;const r=this._getAttributeCacheKey(e,t);return this._memCache.get(r)}_fromInteractiveEditingSession(e,t){if(null!=this._interactiveEditingSessions)for(const i of this._interactiveEditingSessions){if(i.objectId!==e)continue;const r=i.getAttribute(t);if(void 0!==r)return r}}_getAttributeCacheKey(e,t){return`${e}-${t}`}async _queryAttributeOverridesFromAssociatedLayer(e,t,i){if(0===e.length)return null;this._logWarningIfMaximumObjectsExceeded();const{associatedLayer:r}=this.layer;if(null==r)return null;const s=r.createQuery(),{objectIdField:o}=r,n=[o,...t];s.where="1=1",s.returnGeometry=!1,s.outFields=n,s.cacheHint=!0;const a=await this._executeBatchQuery(r,e,s,i),d=[];for(const c of a)if(c.ok)for(const e of c.value.features)d.push(e);return d}async _queryGeometryOverridesFromAssociatedLayer(e,t){if(0===e.length||!this.is3DOFL||!A())return null;const i=this.layer.associatedLayer,r=i.infoFor3D,{spatialReference:s}=i,{state:{viewingMode:o},spatialReference:n}=this.view,a=o===E.Global,d=s.isGeographic;if(a&&!d)return h.getLogger(this).warn("unsupported-pcs-edits-in-global-view",this.layer.title,k(s,n,this.view.viewingMode,$.Mode)),null;if(!a&&d)return h.getLogger(this).warn("unsupported-gcs-edits-in-local-view",this.layer.title,k(s,n,this.view.viewingMode,$.Mode)),null;if(!(O(s,n)||a&&n.isWebMercator&&s.isWGS84))return h.getLogger(this).warn("unsupported-mismatched-spatial-reference-edits",this.layer.title,k(s,n,this.view.viewingMode,$.SpatialReference)),null;this._logWarningIfMaximumObjectsExceeded();const{objectIdField:c,globalIdField:l}=i,u=[c,...null!=l?[l]:[]],m=i.createQuery();m.where="1=1",m.returnGeometry=!0,m.outFields=u,m.cacheHint=!0,m.returnZ=i.hasZ,m.returnM=i.hasM;const g=await this._executeBatchQuery(i,e,m,t),p=[];for(const h of g){if(!h.ok)continue;const e=h.value,{assetMaps:t,features:i,globalIdFieldName:o}=e;if(null==t)continue;const n=w(r,t);for(const a of i){const e=I(a,o,s,r,n),t=a;null!=e?(t.geometry=e,p.push(t)):t.geometry=null}}return p}_logWarningIfMaximumObjectsExceeded(){if(!this._warnMaximumChangedObjectsExceeded)return;this._warnMaximumChangedObjectsExceeded=!1;let e=`The number of edited objects that are not yet cached in the scene service exceeds the maximum limit. Attribute changes will only be available for the first ${v(this._maximumNumberOfEditOVerrides)} objects. Please consider re-caching the scene service`;const t=this.layer.portalItem;t&&t.loaded?e+=` (${t.portal.url}/home/item.html?id=${t.id}#settings)`:e+=` (${this.layer.parsedUrl.path})`,h.getLogger(this).warn("#queryOverrides()",this.layer.title,`${e}.`)}async _executeBatchQuery(e,t,i,o){if(0===t.length)return[];const n=j(e);t=[...t].sort(((e,t)=>e-t));const a=r(t,n).map((t=>{const r=i.clone();return r.objectIds=t,s(C(e,r,{signal:o}))}));return Promise.all(a)}_processOverridesFromAssociatedLayer(e,t,i,{loadedAttributes:r,attributeData:s}){const o=this._associatedLayer;if(null==o)return;const n=o.objectIdField,a=i.map((t=>(t in s||(s[t]=new Array(e.length)),s[t]))),d=new Map(r.map((e=>[e.name,e.index]))),c=i.map((e=>d.get(e))),h=new Map(Array.from(e,((e,t)=>[e,t])));for(const l of t){const e=l.attributes[n];for(let t=0;t<i.length;t++){const r=c[t],s=h.get(e),o=l.attributes[i[t]];a[t][s]=o,this._cacheAttributeValue(e,r,o)}}}_memCacheAttributeValueSize(e){return"string"==typeof e?n(e):a()}async _fetchChangedObjectIds(e){const i=this.layer;await i.load({signal:e}),this._geometryChangedObjectIds.clear(),this._attributeChangedObjectIds.clear();const{associatedLayer:r}=i;if(null==r||!r.capabilities?.operations?.supportsChangeTracking)return;const s=this._getFetchChangedObjectIdsServerGen();if(null==s)return;const n=r.layerId,a=this.is3DOFL,d={f:"json",returnIdsOnly:!0,layers:`[${n}]`,returnUpdates:!0,returnDeletes:a,returnInserts:a,layerServerGens:JSON.stringify([{id:n,serverGen:s}])};if(a){const e=r.infoFor3D;d.fieldsToCompare=JSON.stringify({fields:[...Object.values(e.transformFieldRoles),e.sourceHashField]})}const c=await o(t(`${r.url}/extractChanges`,{method:"post",query:d,timeout:M,signal:e}));if(!c.ok&&x(c.error)){const e=this.layer.title;h.getLogger(this).warn("extractChanges:timeout",e,`${e} could not obtain edited features that are not cached in the scene service. Display of features may not be up to date with the latest edits. Consider re-caching the scene service.`)}if(c.ok&&1===c.value.data?.edits?.length){const t=c.value.data.edits[0],i=t?.objectIds,s=t?.fieldUpdates,o=i?.adds??[],n=i?.updates??[],d=i?.deletes??[],h=[...o,...n,...d],l=a?[...o,...s??n,...d]:[],u=Math.min(this._maximumNumberOfEditOVerrides,h.length);u<h.length&&(this._warnMaximumChangedObjectsExceeded=!0);const m=h.sort(((e,t)=>e-t));for(let e=0;e<u;++e){const t=m[e];this._attributeChangedObjectIds.add(t)}for(const e of l)this._geometryChangedObjectIds.add(e);if(this.is3DOFL&&A()&&this._geometryChangedObjectIds.size>0){const t=await this._queryGeometryOverridesFromAssociatedLayer(Array.from(this._geometryChangedObjectIds),e);if(null!=t)for(const e of t)null!=e.geometry&&this.updateGeometry(e.attributes[r.objectIdField],e.geometry)}}}_getFetchChangedObjectIdsServerGen(){const e=this.layer;if(null!=e.serviceUpdateTimeStamp?.lastUpdate)return e.serviceUpdateTimeStamp.lastUpdate;const t=e.associatedLayer;return null!=t?.serverGens?.minServerGen?t.serverGens.minServerGen:null}async _lockFeatureIds(e){const t=this._featureIdLocks;let i=!0;for(;i;){const r=new Array;for(const i of e){const e=t.get(i);e&&r.push(e)}0===r.length?i=!1:await Promise.all(r)}const r=g(),s=r.promise;for(const o of e)t.set(o,s);return c((()=>{for(const i of e)t.delete(i);r.resolve()}))}get test(){const e=Array.from(this._attributeChangedObjectIds),t=this._pendingFetchChangedObjectIds,i=this;return{changedObjectIds:e,pendingFetchChangedObjectIds:t,get maximumNumberOfEditOVerrides(){return i._maximumNumberOfEditOVerrides},set maximumNumberOfEditOVerrides(e){i._maximumNumberOfEditOVerrides=e}}}};e([b({constructOnly:!0})],G.prototype,"view",void 0),e([b({constructOnly:!0})],G.prototype,"layer",void 0),e([b({readOnly:!0})],G.prototype,"is3DOFL",null),e([b()],G.prototype,"_interactiveEditingSessions",void 0),e([b({readOnly:!0})],G.prototype,"sortedGeometryChangedObjectIds",null),e([b({readOnly:!0})],G.prototype,"geometryOverrides",void 0),e([b()],G.prototype,"_clientGeometryCache",void 0),e([b()],G.prototype,"_associatedLayer",null),e([b()],G.prototype,"_associatedLayerView",void 0),e([b({constructOnly:!0})],G.prototype,"memoryController",void 0),e([b()],G.prototype,"_attributeChangedObjectIds",void 0),e([b()],G.prototype,"_geometryChangedObjectIds",void 0),e([b()],G.prototype,"hasGeometryChanges",null),e([b()],G.prototype,"_pendingFetchChangedObjectIds",void 0),e([b()],G.prototype,"_pendingFetchAbortController",void 0),e([b()],G.prototype,"_definitionExpression",null),e([b()],G.prototype,"updating",null),e([b()],G.prototype,"isEmpty",null),G=e([_("esri.views.3d.layers.i3s.I3SOverrides")],G);class D{constructor(e,t){this.objectId=e,this._remove=t,this._updates=new Map,this._isActive=!0}getAttribute(e){return this._updates.get(e)}setAttribute(e,t){this.isActive&&this._updates.set(e,t)}remove(){this.isActive&&(this._isActive=!1,this._remove())}get isActive(){return this._isActive}}const M=1e4,V=5e4;var $;function k(e,t,i,r){return`Displaying the edits of a SceneLayer with a${r===$.Mode?e.isGeographic?" geographic ":" projected ":" "}spatial reference (wkid:${e.wkid}) in ${i} viewing mode${r===$.SpatialReference?` with spatial reference (wkid:${t.wkid}) `:" "}is not supported. No geometry edits will be displayed for this layer.\nPlease consider re-caching the scene service or changing the ${r===$.Mode?"viewing mode":"view spatial reference"} to display edits.`}!function(e){e[e.Mode=0]="Mode",e[e.SpatialReference=1]="SpatialReference"}($||($={}));export{G as I3SOverrides};
