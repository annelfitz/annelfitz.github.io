/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Error.js";import r from"../../../core/Logger.js";import{destroyMaybe as i}from"../../../core/maybe.js";import{watch as s,initial as o}from"../../../core/reactiveUtils.js";import{schedule as n}from"../../../core/scheduling.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/RandomLCG.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import{fromMat4 as c,invert as m}from"../../../core/libs/gl-matrix-2/math/mat3.js";import{IDENTITY as d,create as h}from"../../../core/libs/gl-matrix-2/factories/mat3f64.js";import{translate as u,getTranslation as p}from"../../../core/libs/gl-matrix-2/math/mat4.js";import{create as f}from"../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{g,t as b}from"../../../chunks/vec32.js";import{fromArray as y,create as w}from"../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{fromValues as _}from"../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{SphericalECEFSpatialReferenceLike as v}from"../../../geometry/ellipsoidUtils.js";import{computeTranslationToOriginAndRotation as x}from"../../../geometry/projection/computeTranslationToOriginAndRotation.js";import{localLinearScaleFactors as j}from"../../../geometry/projection/localLinearScaleFactors.js";import{projectVectorToVector as C}from"../../../geometry/projection/projectVectorToVector.js";import{BufferViewVec4f as T,BufferViewVec4u8 as M,BufferViewVec4u16 as P,BufferViewVec3f as O,BufferViewVec3u8 as U,BufferViewVec3u16 as E,BufferViewVec2f as V,BufferViewInt16 as I,BufferViewUint32 as H,BufferViewUint16 as R}from"../../../geometry/support/buffer/BufferView.js";import{invalidLayerView as F,wasmFailedToInit as A,Lyr3DPrimitiveType as S,Lyr3DLightingModel as L,Lyr3DUvWrapMode as D,Lyr3DImageFormat as k,Lyr3DPixelFormat as B,Lyr3DVtxAtrbSemantic as G,Lyr3DType as N}from"../../../layers/ILyr3DWasmPerSceneView.js";import{getElevationOffsetInMeters as z}from"../../../support/elevationInfoUtils.js";import{ViewingMode as W}from"../../ViewingMode.js";import{IntegratedMesh3DTilesViewPerformanceInfo as $}from"./IntegratedMesh3DTilesViewPerformanceInfo.js";import{DrapeTargetType as J}from"./interfaces.js";import{LayerView3D as q}from"./LayerView3D.js";import{addLayerViewToWasm as K,removeLayerViewFromWasm as Q,getLyr3DWasm as X}from"./Lyr3DWasm.js";import{LayerElevationProvider as Y}from"./i3s/LayerElevationProvider.js";import{primTypeConversion as Z,alphaModeConversion as ee,faceCullingConversion as te,wrapModeConversion as re,lyr3DTypeToByteSize as ie}from"./support/lyr3dTypeConversions.js";import{Tiles3DIntersectionHandler as se}from"./support/Tiles3DIntersectionHandler.js";import{ElevationRange as oe}from"../support/ElevationRange.js";import{compute as ne}from"../support/orientedBoundingBox.js";import{ObjectParameters as ae}from"../webgl-engine/collections/Component/ObjectParameters.js";import{createVertexBufferLayout as le}from"../webgl-engine/collections/Component/SourceGeometry.js";import{Transform as ce}from"../webgl-engine/collections/Component/Transform.js";import{ComponentParameterSummary as me}from"../webgl-engine/collections/Component/Material/ComponentMaterial.js";import{RenderTexture as de}from"../webgl-engine/core/material/RenderTexture.js";import{TextureCoordinateAttributeType as he}from"../webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js";import{getEllipsoidMode as ue}from"../webgl-engine/core/shaderLibrary/util/EllipsoidMode.js";import{Attribute as pe}from"../webgl-engine/lib/Attribute.js";import{CullFaceOptions as fe,AlphaDiscardMode as ge,TextureEncodingMimeType as be}from"../webgl-engine/lib/basicInterfaces.js";import{compressAndTransformNormals as ye}from"../webgl-engine/lib/Normals.js";import{Texture as we}from"../webgl-engine/lib/Texture.js";import{VertexAttribute as _e}from"../webgl-engine/lib/VertexAttribute.js";import{writeDefaultAttribute as ve}from"../webgl-engine/materials/internal/bufferWriterUtils.js";import xe from"../../layers/LayerView.js";var je;!function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error"}(je||(je={}));class Ce{constructor(){this.handle=0,this.isVisible=!1,this.components=[],this.texMemoryUsage=0,this.vboMemoryUsage=0,this.cpuMemoryUsage=0,this.textures=[]}totalMemory(){return this.texMemoryUsage+this.vboMemoryUsage+this.cpuMemoryUsage}}function Te(e){return Math.round(e/1048.576)/1e3}let Me=class extends(q(xe)){constructor(){super(...arguments),this.type="integrated-mesh-3dtiles",this._visibleGeometryChangedSchedulerHandle=null,this._wasmLayerId=-1,this.ignoresMemoryFactor=!1,this.drapeTargetType=J.WithoutRasterImage,this._lyrHandleToObjects=new Map,this._initialCullFace=new Map,this._suspendedHandle=null,this._dbgFlags=new Set}initialize(){if(this._dbgFlags.add(je.Error),this._dbg(je.VerboseAPI,"Tiles3DLayerView3D initialize() called"),!this._canProjectWithoutEngine())throw new t("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const e=K(this).then((e=>{this._intersectionHandler=new se(this),this.view.sceneIntersectionHelper.addIntersectionHandler(this._intersectionHandler),this._updatingHandles.add((()=>this.slicePlaneEnabled),(e=>this._slicePlaneEnabledChange(e))),this._elevationProvider=new Y({view:this.view,layerElevationSource:this,intersectionHandler:this._intersectionHandler}),this.view.elevationProvider.register("im",this._elevationProvider),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this),this._wasmLayerId=e;const t=this.view.resourceController.memoryController.newCache(`t3d-${this.uid}`,(e=>this._onRemoveFromCache(e)));this._memCache=t,this._suspendedHandle=s((()=>this.suspended),(e=>{const t=X(this.view);t&&t.setEnabled(this,!e)}),o),this.addHandles([s((()=>this.layer.elevationInfo),(e=>this._elevationInfoChanged(e)))])})).catch((e=>{if(Q(this),this._wasmLayerId=-1,e===F)throw new t("tiles3d:addLayer-failure","The 3d tiles layer description was invalid.",{});if(e===A)throw new t("tiles3d:addLayer-failure","The 3d tiles layer web assembly module failed to download.",{})}));this.addResolvingPromise(e)}destroy(){this._dbg(je.VerboseAPI,"Tiles3DLayerView3D destroy() called"),Q(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null),this._intersectionHandler&&(this.view.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler),this._intersectionHandler=null),this._elevationProvider&&(this._elevationProvider.objectsChanged(this._obbs),this.view.elevationProvider.unregister(this._elevationProvider),this._elevationProvider=null),this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this),this._lyrHandleToObjects.forEach((e=>this.freeObject(e))),this._lyrHandleToObjects.clear(),this._initialCullFace.clear(),this._memCache=i(this._memCache),this._updatingHandles=i(this._updatingHandles),this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle.remove(),this._visibleGeometryChangedSchedulerHandle=null)}_visibleGeometryChanged(){null==this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle=n((()=>{this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle=null})))}_slicePlaneEnabledChange(e){this._intersectionHandler&&(this._intersectionHandler.slicePlaneEnabled=e),this.objects.forEach((t=>{const r=this._collection.getMaterial(t);r.commonMaterialParameters.hasSlicePlane=e,r.commonMaterialParameters.cullFace=e?fe.None:this._initialCullFace.get(t)}))}_elevationInfoChanged(e){const t=X(this.view);t&&t.setLayerOffset(this,z(e))}get _obbs(){return this.objects.map((e=>this._collection.getComponentObb(e)))}get wasmLayerId(){return this._wasmLayerId}get usedMemory(){let e=0;return this._lyrHandleToObjects.forEach((t=>{t.isVisible&&(e+=t.totalMemory())})),e}get unloadedMemory(){let e=0;return this._lyrHandleToObjects.forEach((t=>{t.isVisible||(e+=t.totalMemory())})),e}get performanceInfo(){let e=0,t=0,r=0,i=0,s=0,o=0;return this._lyrHandleToObjects.forEach((n=>{n.isVisible?(e+=n.texMemoryUsage,t+=n.vboMemoryUsage,s++):(r+=n.texMemoryUsage,i+=n.vboMemoryUsage,o++)})),new $(this.usedMemory,s,o,Te(t),Te(e),Te(i),Te(r))}_canProjectWithoutEngine(){if(this.view.state.viewingMode===W.Local){const e=this.view.renderSpatialReference?.isWebMercator?3857:this.view.renderSpatialReference?.wkid??-1;if(3857!==e&&32662!==e)return!1}return!0}get _stage(){return this.view._stage}get _collection(){return this._stage.renderView.componentObjectCollection}get elevationOffset(){return z(this.layer.elevationInfo)}get elevationRange(){const e=this.fullExtent;return e?.zmin&&e?.zmax?new oe(e.zmin,e.zmax):null}getElevationRange(e){return null}get fullExtent(){return this.layer.fullExtent}get objects(){return Array.from(this._lyrHandleToObjects.values()).reduce(((e,t)=>e.concat(t.components)),new Array)}isUpdating(){const e=X(this.view);return!(this._wasmLayerId<0||null==e)&&e.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}async createRenderable(e){const t=e.meshData;if(null==t.data)throw new Error("meshData.data undefined");if(t.desc=JSON.parse(t.desc),null==t.desc)throw new Error("meshData.desc undefined");const r=y(t.desc.origin),i=new Array,s=new Map,o=new Ce;o.handle=e.handle,this._lyrHandleToObjects.set(e.handle,o);const n=this.view.basemapTerrain.spatialReference;let a,l;if("global"===this.view.viewingMode){const e=f();x(v,r,e,n),a=c(h(),e),l=m(h(),a)}else a=d,l=d;const T=f();u(T,T,r);const M=p(w(),T);let P=null;const O=w();for(let c=0;c<t.desc.prims.length;c++){const e=t.desc.prims[c];if(e.ptype!==S.Lines||null==t.data)continue;const{positionView:i,positionAttr:s,indicesView:o}=this.getBufferViews(e,t.data.buffer,a,!1);null!=s&&null!=i&&null!=o&&(P=ne(s),g(O,P.center,r),P.center=O)}for(let c=0;c<t.desc.prims.length;c++){const e=t.desc.prims[c];if(this._dbg(je.VerboseAPI,JSON.stringify(e)),e.ptype===S.Lines)continue;if(null==Z[e.ptype]||null==t.data){this._dbg(je.VerboseAPI,"[Unsupported Feature] Unsupported primitive mode ("+e.ptype+"). Skipping primitive.");continue}const m=t.desc?.materials&&null!=e.materialId?t.desc.materials[e.materialId]:null,h=null!=m?m.lightingModel:L.Unlit,u=h!==L.Unlit,{positionView:p,positionAttr:f,normalsView:y,normalsAttr:v,colorAttr:x,texCoord0Attr:T,indicesView:U}=this.getBufferViews(e,t.data.buffer,a,u);if(null==f||null==p||null==U)continue;const E={colors:null!=x,textureCoordinates:null!=T?he.Default:he.None,hasNormals:null!=y,needsNormals:u},V=f.data.length/f.size,I=(e,t)=>!e||e.data.length/e.size===V||(this._dbg(je.Error,`${t} !== numPos. Skipping primitive.`),!1);if(!I(T,"numTexcoord")||!I(x,"numColors")||!I(v,"normals"))continue;const H=le(E);let R;if(null!=P?R=P.clone():(R=ne(f),g(O,R.center,r),R.center=O),a!==d)for(let t=0;t<p.count;t++)p.getVec(t,O),b(O,O,a),p.setVec(t,O);const F=H.createBuffer(f.data.length),A=new Map([[_e.POSITION,f]]);null!=T&&A.set(_e.UV0,T),null!=x&&A.set(_e.COLOR,x),null!=v&&A.set(_e.NORMALCOMPRESSED,v),A.forEach(((e,t)=>{null!=e&&ve(t,e,null,null,F,0)}));const D=new Uint32Array([0,U.typedBuffer.length]),k={vertices:{data:F.buffer,count:F.byteLength/H.stride,layoutParameters:E},positionData:{positions:p.typedBuffer,indices:U.typedBuffer},indices:U.typedBuffer,componentOffsets:D};o.cpuMemoryUsage+=p.count,o.cpuMemoryUsage+=U.count;const B=this.view.renderSpatialReference,G=w(),N=[1,1,1];j(M,B,N,n)||this._dbg(je.Error,"Unsupported coordinate system for IM overlay"),C(M,B,G,n);const z=this._collection.createObject(new ae(_(G[0],G[1],N[0],N[1]),new ce(M,l),R,k));m&&this._collection.updateMaterial(z,(e=>{e.baseColor=m.baseColorFactor,e.usePBR=h===L.Pbr,e.hasParametersFromSource=!1,e.baseColorTexture=this._getTexture(m.baseColorTex,t,s),e.usePBR&&(e.mrrFactors=[m.metallicFactor,m.roughnessFactor,0],e.emissiveFactor=m.emissiveFactor??[0,0,0],e.metallicRoughnessTexture=this._getTexture(m.metalTex,t,s),e.emissionTexture=this._getTexture(m.emissiveTex,t,s),e.occlusionTexture=this._getTexture(m.occlusionTex,t,s),e.normalTexture=this._getTexture(m.normalTex,t,s)),e.objectOpacity=0,e.alphaDiscardMode=ge.Mask;const r=[];e.baseColorTexture&&r.push(e.baseColorTexture.loadPromise),e.usePBR&&e.metallicRoughnessTexture&&r.push(e.metallicRoughnessTexture.loadPromise),e.usePBR&&e.emissionTexture&&r.push(e.emissionTexture.loadPromise),e.usePBR&&e.occlusionTexture&&r.push(e.occlusionTexture.loadPromise),e.usePBR&&e.normalTexture&&r.push(e.normalTexture.loadPromise);const n=Promise.all(r);i.push(n),n.then((()=>{e.alphaDiscardMode=ee[m.alphaMode],e.objectOpacity=1,o.texMemoryUsage+=e.baseColorTexture?.glTexture?.usedMemory||0,e.usePBR&&(o.texMemoryUsage+=e.metallicRoughnessTexture?.glTexture?.usedMemory||0,o.texMemoryUsage+=e.emissionTexture?.glTexture?.usedMemory||0,o.texMemoryUsage+=e.occlusionTexture?.glTexture?.usedMemory||0,o.texMemoryUsage+=e.normalTexture?.glTexture?.usedMemory||0)})),e.commonMaterialParameters.doubleSided=m.isDoubleSided,e.commonMaterialParameters.cullFace=m.faceCulling?te[m.faceCulling]:fe.Back,this._initialCullFace.set(z,e.commonMaterialParameters.cullFace),e.commonMaterialParameters.hasSlicePlane=this.slicePlaneEnabled,e.componentParameters.castShadows=me.All,e.textureAlphaCutoff=m.alphaCutoff??.1,e.alphaDiscardMode=ee[m.alphaMode],e.isIntegratedMesh=!0,e.polygonOffsetEnabled=!1,e.hasOccludees=!1,e.ellipsoidMode=ue(this.view.spatialReference)})),o.components.push(z),o.vboMemoryUsage+=this._collection.getObjectGPUMemoryUsage(z)}if(await Promise.all(i),s.forEach((e=>{o.textures.push(e)})),!this._memCache)throw new Error("no memCache");return this._memCache.put(`${o.handle}`,o,o.totalMemory()),{memUsageBytes:o.totalMemory()}}freeRenderable(e){const t=this._lyrHandleToObjects.get(e);t&&(this.freeObject(t),this._lyrHandleToObjects.delete(e))}freeObject(e){this._memCache&&this._memCache.pop(`${e.handle}`),e.components.forEach((t=>{e.textures.forEach((e=>{this._stage.remove(e)})),this._collection.destroyObject(t),this._initialCullFace.delete(t)}))}setRenderableVisibility(e,t,r){if(this._memCache){for(let i=0;i<r;++i){const r=e[i],s=t[i];if(!s)continue;const o=this._lyrHandleToObjects.get(r);o&&(this._visibleGeometryChanged(),o.isVisible=s,o.components.forEach((e=>{this._collection.setObjectVisibility(e,s),this._elevationProvider.objectChanged(this._collection.getComponentObb(e))})),this._memCache.pop(`${r}`))}for(let i=0;i<r;++i){const r=e[i],s=t[i];if(s)continue;const o=this._lyrHandleToObjects.get(r);o&&(this._visibleGeometryChanged(),o.isVisible=s,o.components.forEach((e=>{this._collection.setObjectVisibility(e,s),this._elevationProvider.objectChanged(this._collection.getComponentObb(e))})),this._memCache.put(`${r}`,o,o.totalMemory()))}}}_getTexture(e,t,r){let i=null;if(e&&t.desc?.images&&t.data?.buffer){const s=t.desc.images[e?.imageId];if(i=r.get(s),!i&&s){const o=this._stage.renderView.renderingContext.parameters.maxMaxAnisotropy,n=o>1,a=re[e.wrapMode??D.None];let l=s.alpha?4:3;const c=new Uint8Array(t.data.buffer,s.data.byteOffset,s.data.byteCount);let m=null,d=null,h=null;switch(s.format){case k.Raw:s.pixelFormat===B.R8?(m=c.buffer,l=1,d=""):s.pixelFormat===B.Rgb8?(m=c.buffer,l=3,d=""):s.pixelFormat===B.Rgba8&&(m=c.buffer,l=4,d="");break;case k.Dxt1:m=c.buffer,l=3,d=be.DDS_ENCODING;break;case k.Dxt5:m=c.buffer,l=4,d=be.DDS_ENCODING;break;case k.Png:d="image/png",h=document.createElement("img");break;case k.Jpeg:d="image/jpeg",h=document.createElement("img");break;case k.Etc2:d="image/ktx",h=document.createElement("img");break;case k.Astc:this._dbg(je.Error,"Astc texture not supported");break;case k.Pvrtc:this._dbg(je.Error,"Pvrtc texture not supported")}if(h&&d){const e=new Blob([c],{type:d});h.src=URL.createObjectURL(e),m=h}m&&null!=d&&(i=new we(m,{mipmap:n,maxAnisotropy:o,encoding:d,wrap:a,components:l,noUnpackFlip:!0,width:s.mip0Width,height:s.mip0Height}),this._stage.add(i),r.set(s,i))}}return i?new de(this.view._stage.renderView.textureRepository,i.id):null}getBufferViews(e,t,r,i){let s,o,n,a,l,c,m,d=null;for(let u=0;u<e.atrbs.length;u++){const m=e.atrbs[u],p=m.view,f=void 0,g=p.byteOffset+p.byteCount,b=p.byteCount/ie[p.type],y=[...Array(b).keys()].map((e=>e));try{switch(m.sem){case G.Position:3!==p.ncomp||p.type!==N.F32?this._dbg(je.Error,"[Unsupported Feature] Unsupported view for Position ("+p+")"):(s=new O(t,p.byteOffset,f,g),o=new pe(s.typedBuffer,y,3));break;case G.Normal:if(3!==p.ncomp||p.type!==N.F32)this._dbg(je.Error,"[Unsupported Feature] Unsupported view for Normal ("+p+")");else if(i){const e=new O(t,p.byteOffset,f,g),i=ye(e.typedBuffer,r);l=new I(i),c=new pe(l.typedBuffer,y,2)}break;case G.TexCoord:2!==p.ncomp||p.type!==N.F32?this._dbg(je.Error,"[Unsupported Feature] Unsupported view for Texcoord ("+p+")"):void 0===a&&(a=new pe(new V(t,p.byteOffset,f,g).typedBuffer,y,2));break;case G.Color:4===p.ncomp?(p.type===N.F32&&(d=new T(t,p.byteOffset,f,g)),p.type===N.U8&&(d=new M(t,p.byteOffset,f,g)),p.type===N.U16&&(d=new P(t,p.byteOffset,f,g))):3===p.ncomp&&(p.type===N.F32&&(d=new O(t,p.byteOffset,f,g)),p.type===N.U8&&(d=new U(t,p.byteOffset,f,g)),p.type===N.U16&&(d=new E(t,p.byteOffset,f,g))),null==d?this._dbg(je.VerboseAPI,"[Unsupported Feature] Unsupported view for Color ("+p+")"):n=new pe(d.typedBuffer,y,p.ncomp);break;case G.FeatureIndex:break;default:this._dbg(je.VerboseAPI,"[Unsupported Feature] Unsupported semantic ("+m.sem+"). Skipping vertex attribute.")}}catch(h){this._dbg(je.VerboseAPI,"Error Creating buffer ("+h+"). Skipping vertex attribute.")}}if(e.index){const r=e.index.view,i=void 0,s=r.byteOffset+r.byteCount;switch(e.index.view.type){case N.U16:m=new R(t,r.byteOffset,i,s);break;case N.U32:m=new H(t,r.byteOffset,i,s);break;case N.U8:default:this._dbg(je.Error,"[Unsupported Feature] index type not supported ("+r.type+").")}}if(null==m&&null!=s){const e=s.count;if(e<65535){const t=new Uint16Array(e);m=new R(t)}else{const t=new Uint32Array(e);m=new H(t)}for(let t=0;t<e;t++)m.set(t,t)}return{positionView:s,positionAttr:o,colorAttr:n,texCoord0Attr:a,indicesView:m,normalsView:l,normalsAttr:c}}_onRemoveFromCache(e){const t=X(this.view);t&&t.onRenderableEvicted(this,e.handle,e.totalMemory()),this.freeRenderable(e.handle)}_dbg(e,t){this._dbgFlags.has(e)&&(e===je.Error?r.getLogger(this).error(t):r.getLogger(this).warn(t))}};e([a()],Me.prototype,"_visibleGeometryChangedSchedulerHandle",void 0),e([a()],Me.prototype,"layer",void 0),e([a()],Me.prototype,"elevationOffset",null),Me=e([l("esri.views.3d.layers.IntegratedMesh3DTilesLayerView3D")],Me);const Pe=Me;export{Pe as default};
