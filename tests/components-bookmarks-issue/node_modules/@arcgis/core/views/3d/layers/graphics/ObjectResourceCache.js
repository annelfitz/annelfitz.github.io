/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{removeMaybe as t}from"../../../../core/maybe.js";import{throwIfAborted as o,onAbort as e}from"../../../../core/promiseUtils.js";import{DefaultLoadingContext as r}from"../../glTF/DefaultLoadingContext.js";import{loadGLTF as s}from"../../glTF/loader.js";import{load as l}from"./wosrLoader.js";class a{constructor(t){this._gltfLoading=new Map,this._wosrLoading=new Map,this._gltfMemCache=t("gltf-resources",(()=>{})),this._wosrMemCache=t("wosr-resources",(()=>{}))}destroy(){this._gltfLoading.forEach((t=>t.abortController.abort())),this._wosrLoading.forEach((t=>t.abortController.abort())),this._gltfMemCache.destroy(),this._wosrMemCache.destroy()}loadGLTF(t,o,e){const l=e?`gltfPBR:${t}`:`gltf:${t}`,a=this._gltfMemCache.get(l);return null!=a?Promise.resolve(a):i(this._gltfLoading,this._gltfMemCache,l,(o=>s(new r(o.streamDataRequester),t,o,e)),o)}loadWOSR(t,o){const e=`wosr:${t}:${o.disableTextures}`,r=this._wosrMemCache.get(e);return null!=r?Promise.resolve(r):i(this._wosrLoading,this._wosrMemCache,e,(o=>l(t,o)),o)}}async function i(r,s,l,a,i){o(i);const f=e(i,(()=>n(r,l)));let c=r.get(l);if(c)c.refCount++;else{const t=new AbortController;c={refCount:1,abortController:t,promise:a({...i,signal:t.signal})},r.set(l,c)}try{const t=await c.promise;return s.put(l,t,t.size),r.delete(l),o(i),t}finally{t(f)}}function n(t,o){const e=t.get(o);if(null!=e){if(--e.refCount>0)return}t.delete(o),null!=e&&e.abortController.abort()}export{a as ObjectResourceCache};
