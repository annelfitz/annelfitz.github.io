/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import"../../../../geometry.js";import e from"../../../../core/Error.js";import{px2pt as t,pt2px as r}from"../../../../core/screenUtils.js";import{fromValues as i,clone as a}from"../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{create as s,empty as n,expandWithBuffer as o,intersectsClippingArea as l,expandWithAABB as m}from"../../../../geometry/support/aaBoundingBox.js";import{getDriverAxisSizeValueAny as h}from"../../../../renderers/support/renderingInfoUtils.js";import{sharedGeometryElevationAligner as p}from"./ElevationAligners.js";import{SymbolUpdateType as c,elevationModeChangeUpdateType as d,needsElevationUpdates2D as y}from"./elevationAlignmentUtils.js";import{Graphics3DDrapedGraphicLayer as u}from"./Graphics3DDrapedGraphicLayer.js";import{Graphics3DObject3DGraphicLayer as _}from"./Graphics3DObject3DGraphicLayer.js";import{Graphics3DSymbolLayer as g}from"./Graphics3DSymbolLayer.js";import{ApplyRendererDiffResult as f}from"./interfaces.js";import{parseCapType as b,parseLineMarkerStyle as M}from"./lineUtils.js";import{initFastSymbolUpdatesState as L,updateFastSymbolUpdatesState as E,getAttributeValue as P,ConvertOptions as v}from"../support/FastSymbolUpdates.js";import{debugFlags as C}from"../../support/debugFlags.js";import{createGeometry as R}from"../../support/engineContent/line.js";import{geometryToRenderInfo as w,geometryToRenderInfoDraped as x}from"../../support/renderInfoUtils/line.js";import{Object3D as D}from"../../webgl-engine/lib/Object3D.js";import{RenderGeometry as k}from"../../webgl-engine/lib/RenderGeometry.js";import{LineMarkerMaterial as j}from"../../webgl-engine/materials/LineMarkerMaterial.js";import{getStipplePatternForLinePattern as S}from"../../webgl-engine/materials/lineStippleUtils.js";import{RibbonLineMaterial as A}from"../../webgl-engine/materials/RibbonLineMaterial.js";import U from"../../../../geometry/Extent.js";import z from"../../../../geometry/Polygon.js";const W=["polyline","polygon","extent"],G=new v({size:!0,color:!0,rotation:!1,opacity:!0});class O extends g{constructor(e,t,r,i){super(e,t,r,i)}async doLoad(){if(this._fastUpdates=L(this._context.renderer,G),!this._drivenProperties.size){if((null!=this.symbolLayer.size?this.symbolLayer.size:t(1))<0)throw new e("graphics3dlinesymbollayer:invalid-size","Symbol sizes may not be negative values")}}_getMaterialParameters(e,t=!1){const r=this._getCombinedOpacityAndColor(t&&this._markerColor||this._materialColor);this._patternHidesLine&&!t&&(r[3]=0);const i={width:this._computeMaterialWidth(this.symbolLayer?.size),color:r,hasPolygonOffset:!0,join:this.symbolLayer.join||"miter",cap:b(this.symbolLayer.cap||"butt"),hasSlicePlane:this._context.slicePlaneEnabled,isClosed:e,stipplePattern:S(this.symbolLayer.pattern)};return this._fastUpdates?.visualVariables?{...i,...this._fastUpdates.materialParameters}:i}get _materialColor(){return this.symbolLayer.material?.color}get _markerColor(){return this.symbolLayer.marker?.color}get _lineMaterial(){return null==this._materials[F.Line]&&(this._materials[F.Line]=new A(this._getMaterialParameters(!1)),this._context.stage.add(this._materials[F.Line])),this._materials[F.Line]}get _ringMaterial(){return null==this._materials[F.Ring]&&(this._materials[F.Ring]=new A(this._getMaterialParameters(!0)),this._context.stage.add(this._materials[F.Ring])),this._materials[F.Ring]}get _wireframeLineMaterial(){return null==this._materials[F.LineWireframe]&&(this._materials[F.LineWireframe]=new A({...this._getMaterialParameters(!1),wireframe:!0}),this._context.stage.add(this._materials[F.LineWireframe])),this._materials[F.LineWireframe]}get _wireframeRingMaterial(){return null==this._materials[F.RingWireframe]&&(this._materials[F.RingWireframe]=new A({...this._getMaterialParameters(!0),wireframe:!0}),this._context.stage.add(this._materials[F.RingWireframe])),this._materials[F.RingWireframe]}get _markerMaterial(){return null==this._materials[F.Marker]&&null!=this.symbolLayer.marker&&(this._materials[F.Marker]=new j({...this._getMaterialParameters(!1,!0),placement:this.symbolLayer.marker.placement,markerPrimitive:M(this.symbolLayer.marker.style)}),this._context.stage.add(this._materials[F.Marker])),this._materials[F.Marker]}destroy(){super.destroy(),this._forEachMaterial((e=>this._context.stage.remove(e))),this._materials.length=0}_getDrivenSize(e){return this._drivenProperties.size&&e.size?r(h(e.size)):1}_getDrivenColor(e){const t=i(1,1,1,1);return this._drivenProperties.color&&e.color&&(t[0]=e.color[0],t[1]=e.color[1],t[2]=e.color[2],e.color.length>0&&(t[3]=e.color[3])),this._drivenProperties.opacity&&e.opacity&&(t[3]=e.opacity),t}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,W,this.symbolLayer.type))return null;const r=this.setGraphicElevationContext(t);return this.ensureDrapedStatus("on-the-ground"===r.mode),this.draped?this._createAsOverlay(e,this._context.layer.uid):this._createAs3DShape(e,r,t.uid)}applyRendererDiff(e,t){for(const r in e.diff){if("visualVariables"!==r)return f.RecreateSymbol;{const e=this._fastUpdates;if(!E(e,t,G))return f.RecreateSymbol;this._forEachMaterial((t=>t?.setParameters(e.materialParameters)))}}return f.FastUpdate}prepareSymbolLayerPatch(e){if("partial"!==e.diff.type)return;const t=e.diff.diff,r={};"complete"===t.size?.type&&(r.width=this._computeMaterialWidth(t.size.newValue),delete t.size),"complete"===t.cap?.type&&(r.cap=b(t.cap.newValue??"butt"),delete t.cap);const i=this._prepareMarkerPatch(e,t);this._prepareMaterialPatch(e,t,i),e.symbolLayerStatePatches.push((()=>this._forEachMaterial((e=>e?.setParameters(r)))))}layerOpacityChanged(){this._forEachMaterial(((e,t)=>this._updateMaterialLayerOpacity(e,t===F.Marker)))}_forEachMaterial(e){this._materials.forEach(e)}_updateMaterialLayerOpacity(e,t=!1){if(null==e)return;const r=e.parameters.color,a=this.symbolLayer?.material?.color,s=this._patternHidesLine&&!t?0:this._getCombinedOpacity(a),n=i(r[0],r[1],r[2],s);e.setParameters({color:n})}layerElevationInfoChanged(e,t,r){const i=this._elevationContext.mode,a=d(O.elevationModeChangeTypes,r,i);if(a!==c.UPDATE)return a;const s=y(i);return this.updateGraphics3DGraphicElevationInfo(e,t,(()=>s))}slicePlaneEnabledChanged(){const e={hasSlicePlane:this._context.slicePlaneEnabled};return this._forEachMaterial((t=>t?.setParameters(e))),!0}physicalBasedRenderingChanged(){return!0}_createAs3DShape(e,t,r){const i=V(e.graphic.geometry),a="polygon"===i.type?i.rings:i.paths,m=new Array,h=s(),c=w(i,this._context.elevationProvider,this._context.renderCoordsHelper,t),d="polygon"===i.type?"rings":"paths";this._logGeometryCreationWarnings(c,a,d,"LineSymbol3DLayer");for(let s=0;s<c.lines.length;s++){const t=c.lines[s],a=t.position,p=t.mapPositions;if(null!=this._context.clippingExtent&&(n(h),o(h,p),!l(h,this._context.clippingExtent)))continue;const d=this._createGeometry("polygon"===i.type?this._ringMaterial:this._lineMaterial,e,a,p,i.type,T.ELEVATED,r);m.push(d),C.LINE_WIREFRAMES&&m.push(d.instantiate({material:"polygon"===i.type?this._wireframeRingMaterial:this._wireframeLineMaterial})),null!=this._markerMaterial&&m.push(d.instantiate({material:this._markerMaterial}))}if(0===m.length)return null;const u=new D({geometries:m,castShadow:!1,layerUid:this._context.layer.uid,graphicUid:r}),g=new _(this,u,m,null,null,p,t);return g.alignedSampledElevation=c.sampledElevation,g.needsElevationUpdates=y(t.mode),g}_createGeometry(e,t,r,i,a,s,n){const o=s===T.DRAPED?{spatialReference:this._context.overlaySR,renderCoordsHelper:this._context.renderCoordsHelper}:null,l="polygon"===a,m=this._fastUpdates?.visualVariables.color,h=this._fastUpdates?.visualVariables.size,p=this._fastUpdates?.visualVariables.opacity,c=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:n,layerUid:this._context.layer.uid}),d={position:r,size:h?null:this._getDrivenSize(t.renderingInfo),color:m?null:this._getDrivenColor(t.renderingInfo),sizeFeature:h?P(h.field,t.graphic):null,colorFeature:m?P(m.field,t.graphic):null,opacityFeature:p?P(p.field,t.graphic):null};return R(e,{overlayInfo:o,removeDuplicateStartEnd:l,mapPositions:i,attributeData:d},c)}_createAsOverlay(e,t){const r=e.graphic,i=V(r.geometry),a="polygon"===i.type?i.rings:i.paths,h="polygon"===i.type?this._ringMaterial:this._lineMaterial;h.renderPriority=this._renderPriority;const p=C.LINE_WIREFRAMES?"polygon"===i.type?this._wireframeRingMaterial:this._wireframeLineMaterial:null,c=this._markerMaterial;null!=p&&(p.renderPriority=this._renderPriority-.001),null!=c&&(c.renderPriority=this._renderPriority-.002);const d=new Array,y=s(),_=n(),g=x(i,this._context.overlaySR),f="polygon"===i.type?"rings":"paths";this._logGeometryCreationWarnings(g,a,f,"LineSymbol3DLayer");for(const s of g.lines){if(n(y),o(y,s.position),!l(y,this._context.clippingExtent))continue;m(_,y);const a=a=>{const n=this._createGeometry(a,e,s.position,void 0,i.type,T.DRAPED,r.uid),o=new k(n,{layerUid:t,graphicUid:r.uid});d.push(o)};if(null!=c){a(c);const e=this.symbolLayer.marker.placement;"begin"!==e&&"begin-end"!==e||o(y,s.position,0,1),"end"!==e&&"begin-end"!==e||o(y,s.position,s.position.length-3,1)}a(h),C.LINE_WIREFRAMES&&a(p)}return new u(this,d,_,this._context.drapeSourceRenderer)}get _patternHidesLine(){const e=this.symbolLayer.pattern;return null!=e&&"style"===e.type&&"none"===e.style}_computeMaterialWidth(e){return e=e??t(1),this._drivenProperties.size?this._fastUpdates?.visualVariables.size?r(1):1:r(e)}_prepareMaterialPatch(e,t,r){const i=t.material;if(null==i)return void(r.changed&&r.useMaterialColor&&I(this._getCombinedOpacityAndColor(this._materialColor),this._materials[F.Marker],e));if("collection"===i.type)return;const s="complete"===i.type?i.newValue?.color:"complete"===i.diff.color?.type?i.diff.color.newValue:null,n=this._getCombinedOpacityAndColor(s);r.useMaterialColor&&I(a(n),this._materials[F.Marker],e),this._patternHidesLine&&(n[3]=0),I(n,this._materials[F.Line],e),delete t.material}_prepareMarkerPatch(e,t){const r=t.marker,i=this._markerMaterial;if(null==r||"partial"!==r.type||null==r.diff||null!=r.diff.placement||null!=r.diff.style&&"complete"!==r.diff.style.type||null!=r.diff.color&&"complete"!==r.diff.color.type||null==i)return{changed:!1,useMaterialColor:null==this._markerColor};const a=r.diff.color,s=null!=a,n=s?a.newValue:null,o=null==n&&null==this._markerColor;n&&I(this._getCombinedOpacityAndColor(n),i,e);const l=r.diff.style?.newValue;return l&&e.symbolLayerStatePatches.push((()=>i.setParameters({markerPrimitive:M(l)}))),delete t.marker,{changed:s,useMaterialColor:o}}}function V(e){switch(e.type){case"extent":if(e instanceof U)return z.fromExtent(e);break;case"polygon":case"polyline":return e}return null}function I(e,t,r){null!=t&&r.symbolLayerStatePatches.push((()=>t.setParameters({color:e})))}var T,F;O.elevationModeChangeTypes={definedChanged:c.RECREATE,staysOnTheGround:c.NONE,onTheGroundChanged:c.RECREATE},function(e){e[e.DRAPED=0]="DRAPED",e[e.ELEVATED=1]="ELEVATED"}(T||(T={})),function(e){e[e.Line=0]="Line",e[e.Ring=1]="Ring",e[e.LineWireframe=2]="LineWireframe",e[e.RingWireframe=3]="RingWireframe",e[e.Marker=4]="Marker"}(F||(F={}));export{O as Graphics3DLineSymbolLayer};
