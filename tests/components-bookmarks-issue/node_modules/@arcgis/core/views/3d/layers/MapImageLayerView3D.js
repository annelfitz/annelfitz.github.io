/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/Logger.js";import"../../../core/has.js";import"../../../core/RandomLCG.js";import"../../../core/Error.js";import{subclass as t}from"../../../core/accessorSupport/decorators/subclass.js";import r from"./DynamicLayerView3D.js";import s from"../../layers/MapImageLayerView.js";import{MapServiceLayerViewHelper as i}from"../../layers/support/MapServiceLayerViewHelper.js";import{createQueryGeometry as o}from"../../support/drapedUtils.js";let p=class extends(s(r)){constructor(){super(...arguments),this.type="map-image-3d"}initialize(){this._updatingHandles.add((()=>this.exportImageVersion),(()=>this._updatingHandles.addPromise(this.refreshDebounced()))),this._popupHighlightHelper=new i({createFetchPopupFeaturesQueryGeometry:(e,t)=>o(e,t,this.view),layerView:this,updatingHandles:this._updatingHandles})}destroy(){this._popupHighlightHelper?.destroy()}fetchPopupFeaturesAtLocation(e,t){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(e,t)}getFetchOptions(){return{timeExtent:this.timeExtent}}};p=e([t("esri.views.3d.layers.MapImageLayerView3D")],p);const a=p;export{a as default};
