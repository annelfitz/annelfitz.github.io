/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{create as e}from"../../../core/libs/gl-matrix-2/factories/vec2f64.js";import{create as r}from"../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{create as i}from"../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{C as t}from"../../../chunks/ChapmanAtmosphere.glsl.js";import{NoParameters as o}from"../webgl-engine/core/shaderModules/interfaces.js";import{ReloadableShaderModule as s}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as n}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{Default3D as a}from"../webgl-engine/lib/DefaultVertexAttributeLocations.js";import{Program as l}from"../webgl-engine/lib/Program.js";import{BlendFactor as c,CompareFunction as m}from"../../webgl/enums.js";import{makePipelineState as h,simpleBlendingParams as g,defaultColorWriteParams as d,separateBlendingParams as f}from"../../webgl/renderState.js";class u extends o{constructor(){super(...arguments),this.heightParameters=i(),this.radii=e(),this.innerFadeDistance=0,this.altitudeFade=0,this.hazeStrength=1,this.renderScale=e(),this.backgroundColor=r()}}class p extends n{initializeProgram(e){return new l(e.rctx,p.shader.get().build(this.configuration),a)}initializePipeline(){return this.configuration.reduced?h({blending:g(c.ONE,c.ZERO),depthTest:{func:m.ALWAYS},colorWrite:d}):this.configuration.haze?h({blending:f(c.ONE,c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ONE),colorWrite:d}):h({blending:g(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA),depthTest:{func:m.LEQUAL},colorWrite:d})}}p.shader=new s(t,(()=>import("./ChapmanAtmosphere.glsl.js")));export{u as ChapmanAtmospherePassParameters,p as ChapmanAtmosphereTechnique};
