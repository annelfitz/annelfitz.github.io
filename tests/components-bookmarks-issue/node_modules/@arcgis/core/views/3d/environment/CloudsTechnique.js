/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{a as e}from"../../../chunks/Clouds.glsl.js";import{CloudsTextureChannels as r}from"./CloudsData.js";import{ReloadableShaderModule as i}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{Default3D as o}from"../webgl-engine/lib/DefaultVertexAttributeLocations.js";import{Program as n}from"../webgl-engine/lib/Program.js";import{BlendOperation as s,BlendFactor as l,CompareFunction as a}from"../../webgl/enums.js";import{makePipelineState as m,simpleBlendingParams as u,defaultColorWriteParams as g}from"../../webgl/renderState.js";class d extends t{constructor(e,r){super(e,r,(()=>this.destroy()))}initializeProgram(e){return new n(e.rctx,d.shader.get().build(this.configuration),o)}initializePipeline(){return m({blending:u(l.CONSTANT_COLOR,l.ONE_MINUS_CONSTANT_COLOR,s.ADD,this.configuration.writeTextureChannels===r.RG?[1,1,0,0]:[0,0,1,1]),depthTest:{func:a.LEQUAL},colorWrite:g})}}d.shader=new i(e,(()=>import("./Clouds.glsl.js")));export{d as CloudsTechnique};
