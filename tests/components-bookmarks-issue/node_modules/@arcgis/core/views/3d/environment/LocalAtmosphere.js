/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{disposeMaybe as e}from"../../../core/maybe.js";import{copy as t}from"../../../core/libs/gl-matrix-2/math/mat4.js";import{create as r}from"../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{AtmosphereType as i}from"./AtmosphereType.js";import{S as o}from"../../../chunks/SimpleAtmosphere.glsl.js";import{SimpleAtmosphereTechnique as s}from"./SimpleAtmosphereTechnique.js";import{SimpleAtmosphereTechniqueConfiguration as m,SimpleAtmosphereGeometry as a}from"./SimpleAtmosphereTechniqueConfiguration.js";import{earthAtmosphereTextureSimple as n}from"./resources/SimpleAtmosphereTexture.js";import{glLayout as p}from"../support/buffer/glUtil.js";import{newLayout as f}from"../support/buffer/InterleavedLayout.js";import{Default3D as c}from"../webgl-engine/lib/DefaultVertexAttributeLocations.js";import{createPolySphereData as u}from"../webgl-engine/lib/GeometryUtil.js";import{VertexArrayObject as h}from"../webgl-engine/lib/VertexArrayObject.js";import{VertexAttribute as l}from"../webgl-engine/lib/VertexAttribute.js";import{BufferObject as b}from"../../webgl/BufferObject.js";import{TextureWrapMode as g,PrimitiveType as j,Usage as _}from"../../webgl/enums.js";import{Texture as x}from"../../webgl/Texture.js";import{TextureDescriptor as w}from"../../webgl/TextureDescriptor.js";import{vertexCount as d}from"../../webgl/Util.js";class A{constructor(e,t){this.type=i.Local,this._configuration=new m,this._passParameters=new o,this._configuration.geometry=a.Cylinder,this._technique=t.techniqueRepository.acquire(s,this._configuration);const r=t.renderContext.rctx;this._vao=y(r),this._vaoCount=d(this._vao,"geometry");const p=new w;p.wrapMode=g.CLAMP_TO_EDGE,p.flipped=!0,p.width=1,p.height=512,this._passParameters.texture=new x(r,p,n)}destroy(){this._passParameters.texture=e(this._passParameters.texture),this._vao.dispose(),this._technique.release()}render(e){const t=e.rctx,r=t.bindTechnique(this._technique,e.bindParameters,this._passParameters);T(v,e.bindParameters.camera.viewMatrix),r.setUniformMatrix4fv("view",v),t.bindVAO(this._vao),r.assertCompatibleVertexAttributeLocations(this._vao),t.drawArrays(j.TRIANGLES,0,this._vaoCount)}renderHaze(){return!1}}function y(e){const t=u(1,2,!1),{data:r,indices:i}=t[0][1],o=P.createBuffer(i.length),s=o.position;for(let m=0;m<i.length;++m){const e=3*i[m%3==0?m+2:m%3==2?m-2:m];s.set(m,0,r[e]),s.set(m,1,r[e+1]),s.set(m,2,r[e+2])}return new h(e,c,{geometry:p(P)},{geometry:b.createVertex(e,_.STATIC_DRAW,o.buffer)})}function T(e,r){t(e,r),e[12]=0,e[13]=0,e[14]=0,e[15]=1}const v=r(),P=f().vec3f(l.POSITION);export{A as LocalAtmosphere};
