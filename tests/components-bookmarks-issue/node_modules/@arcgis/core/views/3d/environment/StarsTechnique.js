/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{create as e}from"../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{S as r}from"../../../chunks/Stars.glsl.js";import{NoParameters as i}from"../webgl-engine/core/shaderModules/interfaces.js";import{ReloadableShaderModule as t}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as o}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as s}from"../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as n}from"../webgl-engine/lib/DefaultVertexAttributeLocations.js";import{Program as l}from"../webgl-engine/lib/Program.js";import{BlendFactor as a,CompareFunction as m}from"../../webgl/enums.js";import{makePipelineState as c,separateBlendingParams as g,defaultColorWriteParams as d}from"../../webgl/renderState.js";class u extends i{constructor(){super(...arguments),this.modelMatrix=e()}}class h extends o{constructor(e){super(e,new s,(()=>this.destroy()))}initializeProgram(e){return new l(e.rctx,h.shader.get().build(),n)}initializePipeline(){return c({blending:g(a.SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA),depthTest:{func:m.LEQUAL},colorWrite:d})}}h.shader=new t(r,(()=>import("./Stars.glsl.js")));export{u as StarPassParameters,h as StarsTechnique};
