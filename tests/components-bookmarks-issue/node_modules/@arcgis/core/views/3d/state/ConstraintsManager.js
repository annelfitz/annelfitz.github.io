/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import i from"../../../core/Accessor.js";import{deg2rad as a,rad2deg as s}from"../../../core/mathUtils.js";import{watch as e,sync as n,initial as r}from"../../../core/reactiveUtils.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as c}from"../../../core/accessorSupport/decorators/subclass.js";import{ViewingMode as l}from"../../ViewingMode.js";import{applyAll as u}from"../camera/constraintUtils.js";import{surfaceElevationBelowRenderLocation as p}from"../camera/intersectionUtils.js";import{ConstraintOptions as h}from"../camera/constraintUtils/ConstraintOptions.js";import{ConstraintTypes as d}from"../camera/constraintUtils/ConstraintTypes.js";import{InteractionType as m}from"../camera/constraintUtils/InteractionType.js";import{createNearFarHeuristic as v}from"./NearFarHeuristic.js";import{SurfaceCollisionConstraint as w}from"./SurfaceCollisionConstraint.js";let _=class extends i{constructor(t){super(t),this.nearFarHeuristic=v(t.view.state.viewingMode,t.view.basemapTerrain,t.view.renderCoordsHelper.spatialReference)}initialize(){this.addHandles([e((()=>[this.view.constraints?.clipDistance?.near,this.view.constraints?.clipDistance?.far]),(()=>this._clipDistanceNearFarChanged())),e((()=>this.view.constraints?.clipDistance?.mode),(()=>this._updateNearFar())),this.view.state.events.on("before-camera-change",(t=>this._updateCameraNearFar(t))),e((()=>this.view.renderDataExtent),(()=>this._updateNearFar()),n),e((()=>[this.view.constraints?.altitude?.min,this.view.constraints?.altitude?.max]),(()=>this._updateAltitude()),n),e((()=>this.view.constraints?.tilt?.max),(()=>this._updateTiltMax()),n),e((()=>this.view.constraints?.tilt?.mode),(()=>this._updateTilt()),n),e((()=>this.view.state?.camera),(()=>this._updateTiltAutoMax()),n),e((()=>[this.view.map?.ground?.navigationConstraint?.type,this.view.state?.constraints?.collision?.enabled]),(()=>this._updateCollision()),n)]),this.view.state.isLocal&&this.addHandles(e((()=>this.view.renderDataExtent),(t=>this._updateLocalSurfaceDistance(t)),r)),this._updateNearFar(),this.view.state.viewingMode!==l.Local&&this._updateAltitude(),this._updateTilt(),this._updateCollision(),this._set("surfaceCollisionConstraint",new w({view:this.view}))}destroy(){this.surfaceCollisionConstraint&&(this.surfaceCollisionConstraint.destroy(),this._set("surfaceCollisionConstraint",null))}_clipDistanceNearFarChanged(){const t=this.view.constraints?.clipDistance;t&&"auto"!==t.mode&&this.view.state.updateCamera((i=>C(i,t)))}_updateNearFar(){this.view.state.updateCamera((t=>this._updateCameraNearFar(t)))}_updateCameraNearFar(t){const i=this.view.constraints&&this.view.constraints.clipDistance;"manual"===(i?i.mode:"auto")?C(t,i):this._updateCameraNearFarAuto(t,i)}_updateCameraNearFarAuto(t,i){this.nearFarHeuristic.compute(t.eye,t.center,this.view.renderDataExtent,p(this.view,t.eye),t),i&&i.autoUpdate(t.near,t.far)}_updateCollision(){const t=this.view.map?.ground?.navigationConstraint?.type,i=!t||"stay-above"===t,a=this.view.state.constraints.collision;if(i!==a.enabled){a.enabled=i,i&&this._reapplyConstraints(d.COLLISION);const t=this.view.constraints&&this.view.constraints.tilt;t&&"auto"!==t.mode||this._updateTiltAuto()}}_updateAltitude(){const t=this.view.constraints&&this.view.constraints.altitude;t&&this.view.state.viewingMode!==l.Local?this.view.state.constraints.altitude={min:t.min,max:t.max}:this.view.state.constraints.altitude=null,this._reapplyConstraints()}_updateTiltMax(){const t=this.view.constraints&&this.view.constraints.tilt;t&&"auto"!==t.mode&&(this._updateTiltManual(t),this._reapplyConstraints())}_updateTilt(){const t=this.view.constraints&&this.view.constraints.tilt;"manual"===(t?t.mode:"auto")?this._updateTiltManual(t):this._updateTiltAuto(),this._reapplyConstraints()}_updateTiltManual(t){const i=this.view.state.constraints;i.tilt=i.createConstantMaxTilt(a(t.max))}_updateTiltAuto(){const t=this.view.state.constraints;t.tilt=t.createDefaultTilt(),this._updateTiltAutoMax()}_updateTiltAutoMax(){const t=this.view.constraints&&this.view.constraints.tilt;if(!t||"auto"!==t.mode)return;const i=this.view.state.constraints;if(i.tilt){const a=i.tilt(this.view.state.camera.distance).max;t.autoUpdate(s(a))}}_updateLocalSurfaceDistance(t){if(null==t)return;let i=Math.max(t.width,t.height);if(i<=0)return;null!=t.zmax&&null!=t.zmin&&(i=Math.max(i,t.zmax-t.zmin));const a=this.view.state,s=3*i/Math.atan(a.camera.fov/2);s!==a.constraints.distance&&(a.constraints.distance=s)}_reapplyConstraints(t=d.ALL){this.view.state.updateCamera((i=>u(this.view,i,new h(t,m.NONE,null))))}};function C(t,i){i&&(t.near=i.near,t.far=i.far)}t([o({constructOnly:!0})],_.prototype,"view",void 0),t([o({readOnly:!0})],_.prototype,"surfaceCollisionConstraint",void 0),_=t([c("esri.views.3d.state.ConstraintsManager")],_);export{_ as ConstraintsManager};
