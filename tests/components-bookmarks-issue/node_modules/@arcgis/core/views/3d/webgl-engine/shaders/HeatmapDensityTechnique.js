/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ReloadableShaderModule as r}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as i}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as s}from"../lib/DefaultVertexAttributeLocations.js";import{MaterialParameters as o}from"../lib/Material.js";import{Program as a}from"../lib/Program.js";import{DefaultTechniqueConfiguration as n}from"../materials/DefaultTechniqueConfiguration.js";import{H as l}from"../../../../chunks/HeatmapDensity.glsl.js";import{BlendOperation as u,BlendFactor as m}from"../../../webgl/enums.js";import{makePipelineState as p,simpleBlendingParams as c,defaultColorWriteParams as h}from"../../../webgl/renderState.js";class d extends o{constructor(){super(...arguments),this.searchRadius=128,this.resolutionForScale=0}}class f extends t{initializeProgram(e){return new a(e.rctx,f.shader.get().build(this.configuration),s)}initializePipeline(){return p({blending:c(m.ONE,m.ONE,u.ADD),colorWrite:h,depthTest:null,depthWrite:null})}destroy(){super.destroy()}}f.shader=new r(l,(()=>import("./HeatmapDensity.glsl.js")));class b extends n{constructor(){super(...arguments),this.isAttributeDriven=!1,this.usesHalfFloat=!1}}e([i()],b.prototype,"isAttributeDriven",void 0),e([i()],b.prototype,"usesHalfFloat",void 0);export{d as HeatmapDensityPassParameters,f as HeatmapDensityTechnique,b as HeatmapDensityTechniqueConfiguration};
