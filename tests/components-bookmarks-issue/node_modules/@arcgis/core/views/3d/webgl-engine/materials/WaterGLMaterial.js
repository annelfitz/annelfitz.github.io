/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{ShaderOutput as e}from"../core/shaderLibrary/ShaderOutput.js";import t from"../lib/GLMaterial.js";import{WaterTechnique as a}from"./WaterTechnique.js";class s extends t{_updateShadowState(e){e.shadowMap.enabled!==this._material.parameters.receiveShadows&&this._material.setParameters({receiveShadows:e.shadowMap.enabled})}_updateSSRState(e){const t=null!=e.ssr.lastFrameColor;t!==this._material.parameters.hasScreenSpaceReflections&&this._material.setParameters({hasScreenSpaceReflections:t})}_updateCloudsReflectionState(e){const t=null!=e.cloudsFade.data;t!==this._material.parameters.hasCloudsReflections&&this._material.setParameters({hasCloudsReflections:t})}ensureResources(e){return this._techniqueRepository.constructionContext.waterTextureRepository.ensureResources(e)}beginSlot(t){return this._output===e.Color&&(this._updateShadowState(t),this._updateSSRState(t),this._updateCloudsReflectionState(t)),this._material.setParameters(this._techniqueRepository.constructionContext.waterTextureRepository.passParameters),this.ensureTechnique(a,t)}}export{s as WaterGLMaterial};
