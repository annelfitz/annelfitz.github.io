/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{acosClamped as e,deg2rad as t}from"../../../../../core/mathUtils.js";import o from"../../../../../core/PooledArray.js";import{q as n,s,c as a,k as r,E as c,b as l,f as i,n as h}from"../../../../../chunks/vec32.js";import{create as g}from"../../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{Edge as u}from"./Edge.js";const d=-1;function p(e,t,o){const c=e.vertices.position,l=e.vertices.componentIndex,i=j.position0,h=j.position1,g=j.faceNormal0,u=j.faceNormal1,{edges:p,normals:v}=w(e),V=p.length/4,y=t.allocate(V);let I=0;const N=V,b=o?.allocate(N);let E=0,k=0,M=0;x.length=0;for(let s=0;s<V;++s){const e=4*s;c.getVec(p.data[e],i),c.getVec(p.data[e+1],h);const t=x.pushNew();t.index=4*s,t.length=n(i,h)}x.sort(((e,t)=>t.length-e.length));const L=new Array,P=new Array;x.forAll((({length:e,index:n})=>{const w=p.data[n],x=p.data[n+1],V=p.data[n+2],N=p.data[n+3],U=N===d;if(c.getVec(w,i),c.getVec(x,h),U){const e=3*V;s(g,v.data[e],v.data[e+1],v.data[e+2]),a(u,g),j.componentIndex=l.get(w),j.cosAngle=r(g,u)}else{let e=3*V;if(s(g,v.data[e],v.data[e+1],v.data[e+2]),e=3*N,s(u,v.data[e],v.data[e+1],v.data[e+2]),j.componentIndex=l.get(w),j.cosAngle=r(g,u),m(j,F))return;j.cosAngle<-.9999&&a(u,g)}k+=e,M++,U||f(j,q)?(t.write(y,I++,j),L.push(e)):A(j,D)&&(b&&o&&o.write(b,E++,j),P.push(e))}));const U=new Float32Array(L.reverse()),z=new Float32Array(P.reverse()),B=b&&o?{instancesData:b.slice(0,E),lodInfo:{lengths:z}}:void 0;return{regular:{instancesData:y.slice(0,I),lodInfo:{lengths:U}},silhouette:B,averageEdgeLength:k/M}}function f(e,t){return e.cosAngle<t}function m(e,t){return e.cosAngle>t}function A(t,o){const n=e(t.cosAngle);c(N,t.position1,t.position0);return n*(r(l(I,t.faceNormal0,t.faceNormal1),N)>0?-1:1)>o}function w(e){const t=e.faces.length/3,o=e.faces,n=e.neighbors,s=e.vertices.position;V.length=y.length=0;for(let a=0;a<t;a++){const e=3*a,t=n[e],r=n[e+1],c=n[e+2],g=o[e],u=o[e+1],p=o[e+2];s.getVec(g,b),s.getVec(u,E),s.getVec(p,k),i(E,E,b),i(k,k,b),l(b,E,k),h(b,b),y.pushArray(b),(t===d||g<u)&&(V.push(g),V.push(u),V.push(a),V.push(t)),(r===d||u<p)&&(V.push(u),V.push(p),V.push(a),V.push(r)),(c===d||p<g)&&(V.push(p),V.push(g),V.push(a),V.push(c))}return{edges:V,normals:y}}class v{constructor(){this.index=0,this.length=0}}const x=new o({allocator:e=>e||new v,deallocator:null}),V=new o({deallocator:null}),y=new o({deallocator:null}),j=new u,I=g(),N=g(),b=g(),E=g(),k=g(),D=t(4),F=Math.cos(D),M=t(35),q=Math.cos(M);export{p as extractEdges};
