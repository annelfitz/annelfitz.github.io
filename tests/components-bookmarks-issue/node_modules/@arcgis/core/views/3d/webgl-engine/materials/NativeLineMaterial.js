/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../../../core/Logger.js";import{clamp as t}from"../../../../core/mathUtils.js";import{createRenderScreenPointArray3 as r}from"../../../../core/screenUtils.js";import{copy as s}from"../../../../core/libs/gl-matrix-2/math/vec2.js";import{s as o,f as i,k as a,h as n,g as c,c as l,l as m,q as u}from"../../../../chunks/vec32.js";import{create as f}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{ONES as h}from"../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{PlaneIndex as p}from"../../../../geometry/support/frustum.js";import{create as d,distance2 as g,fromPoints as j,closestLineSegmentPoint as b}from"../../../../geometry/support/lineSegment.js";import{create as S,fromPoints as O,signedDistance as _,getNormal as A}from"../../../../geometry/support/plane.js";import{ShaderOutput as L}from"../core/shaderLibrary/ShaderOutput.js";import x from"../lib/GLMaterial.js";import{Material as y,MaterialParameters as N}from"../lib/Material.js";import{RenderSlot as R}from"../lib/RenderSlot.js";import{isTranslationMatrix as E}from"../lib/Util.js";import{VertexAttribute as M}from"../lib/VertexAttribute.js";import{DefaultBufferWriter as T}from"./DefaultBufferWriter.js";import{PositionColorLayout as v,PositionLayout as w}from"./DefaultLayouts.js";import{NativeLineTechnique as C}from"../shaders/NativeLineTechnique.js";import{NativeLineTechniqueConfiguration as P}from"../shaders/NativeLineTechniqueConfiguration.js";class V extends y{constructor(e){super(e,new U),this._configuration=new P,this.produces=new Map([[R.OPAQUE_MATERIAL,e=>e===L.Color||e===L.Highlight||e===L.ObjectAndLayerIdColor]])}getConfiguration(e){return this._configuration.output=e,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasVertexColors=this.parameters.hasVertexColors,this._configuration.transparent=this.parameters.color[3]<1||this.parameters.width<1,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration}intersect(t,r,f,h,d,S){if(!f.options.selectionMode||!t.visible)return;if(!E(r))return void e.getLogger("esri.views.3d.webgl-engine.materials.NativeLineMaterial").error("intersection assumes a translation-only matrix");const L=t.attributes.get(M.POSITION).data,x=f.camera,y=Z;s(y,f.point);const N=2;o(z[0],y[0]-N,y[1]+N,0),o(z[1],y[0]+N,y[1]+N,0),o(z[2],y[0]+N,y[1]-N,0),o(z[3],y[0]-N,y[1]-N,0);for(let e=0;e<4;e++)if(!x.unprojectFromRenderScreen(z[e],J[e]))return;O(x.eye,J[0],J[1],K),O(x.eye,J[1],J[2],Y),O(x.eye,J[2],J[3],$),O(x.eye,J[3],J[0],ee);let R=Number.MAX_VALUE,T=0;for(let e=0;e<L.length-5;e+=3){if(q[0]=L[e]+r[12],q[1]=L[e+1]+r[13],q[2]=L[e+2]+r[14],B[0]=L[e+3]+r[12],B[1]=L[e+4]+r[13],B[2]=L[e+5]+r[14],_(K,q)<0&&_(K,B)<0||_(Y,q)<0&&_(Y,B)<0||_($,q)<0&&_($,B)<0||_(ee,q)<0&&_(ee,B)<0)continue;if(x.projectToRenderScreen(q,X),x.projectToRenderScreen(B,k),X[2]<0&&k[2]>0){i(D,q,B);const e=x.frustum,t=-_(e[p.NEAR],q)/a(D,A(e[p.NEAR]));n(D,D,t),c(q,q,D),x.projectToRenderScreen(q,X)}else if(X[2]>0&&k[2]<0){i(D,B,q);const e=x.frustum,t=-_(e[p.NEAR],B)/a(D,A(e[p.NEAR]));n(D,D,t),c(B,B,D),x.projectToRenderScreen(B,k)}else if(X[2]<0&&k[2]<0)continue;X[2]=0,k[2]=0;const t=g(j(X,k,H),y);t<R&&(R=t,l(G,q),l(F,B),T=e/3)}const v=f.rayBegin,w=f.rayEnd;if(R<N*N){let e=Number.MAX_VALUE;if(b(j(G,F,H),j(v,w,Q),W)){i(W,W,v);const t=m(W);n(W,W,1/t),e=t/u(v,w)}S(e,W,T,!1)}}intersectDraped(e,r,s,o,i,a){if(!s.options.selectionMode)return;const n=e.attributes.get(M.POSITION).data,c=e.attributes.get(M.SIZE),l=c?c.data[0]:0,m=o[0],u=o[1],f=((l+1)/2+4)*e.screenToWorldRatio;let h=Number.MAX_VALUE,p=0;for(let d=0;d<n.length-5;d+=3){const e=n[d],r=n[d+1],s=m-e,o=u-r,i=n[d+3]-e,a=n[d+4]-r,c=t((i*s+a*o)/(i*i+a*a),0,1),l=i*c-s,f=a*c-o,g=l*l+f*f;g<h&&(h=g,p=d/3)}h<f*f&&i(a.dist,a.normal,p,!1)}createGLMaterial(e){return new I(e)}createBufferWriter(){const e=this.parameters.hasVertexColors?v:w;return new T(e)}}class I extends x{_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){return this._output===L.Color&&this._updateOccludeeState(e),this.ensureTechnique(C,e)}}class U extends N{constructor(){super(...arguments),this.color=h,this.hasVertexColors=!1,this.hasSlicePlane=!1,this.width=1,this.hasOccludees=!1}}const q=f(),B=f(),D=f(),W=f(),X=r(),k=r(),G=f(),F=f(),H=d(),Q=d(),Z=f(),z=[r(),r(),r(),r()],J=[f(),f(),f(),f()],K=S(),Y=S(),$=S(),ee=S();export{V as NativeLineMaterial,U as Parameters};
