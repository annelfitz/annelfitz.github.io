/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import{clamp as t}from"../../../../../core/mathUtils.js";import{disposeMaybe as r}from"../../../../../core/maybe.js";import{watch as s,syncAndInitial as i}from"../../../../../core/reactiveUtils.js";import{Milliseconds as o}from"../../../../../core/time.js";import{property as a}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/Logger.js";import"../../../../../core/RandomLCG.js";import{subclass as n}from"../../../../../core/accessorSupport/decorators/subclass.js";import{set as m}from"../../../../../core/libs/gl-matrix-2/math/vec2.js";import{ColorFormat as u}from"../../../webgl/formats.js";import{distanceFadeEnd as c,distanceFadeStart as l}from"../../core/shaderLibrary/shading/ScreenSpaceConstants.js";import{SyncRenderPlugin as h,ConsumesDepthNormal as p,ConsumesNone as _}from"../RenderPlugin.js";import{SSAOBlurTechnique as d}from"./SSAOBlurTechnique.js";import{noiseData as b}from"./SSAONoiseData.js";import{SSAOPassParameters as x,BlurDrawParameters as f}from"./SSAOParameters.js";import{SSAOTechnique as T}from"./SSAOTechnique.js";import{RenderFeature as w}from"../../lib/RenderFeature.js";import{RenderSlot as S}from"../../lib/RenderSlot.js";import{g as q}from"../../../../../chunks/SSAO.glsl.js";import{TextureWrapMode as P,PixelFormat as j,DepthStencilAttachment as g,ClearBufferBit as R}from"../../../../webgl/enums.js";import{Texture as v}from"../../../../webgl/Texture.js";import{TextureDescriptor as y}from"../../../../webgl/TextureDescriptor.js";const A=2;let C=class extends h{constructor(e){super(e),this._context=null,this._passParameters=new x,this._drawParameters=new f,this.produces=new Map([[S.SSAO,()=>this._produces()]])}_getCameraElevation(){return this._context?.renderContext.bindParameters.camera.relativeElevation??1/0}_produces(){return null!=this._enableTime&&null!=this._context&&this._getCameraElevation()<c}consumes(){return this._produces()?p:_}initializeRenderContext(e){this._context=e,this.addHandles([s((()=>this.view.qualitySettings.ambientOcclusion||this._context?.isFeatureEnabled(w.SSAO)),(e=>e?this._enable():this._disable()),i)])}uninitializeRenderContext(){this._disable(),this._context=null}_disable(){this._passParameters.noiseTexture=r(this._passParameters.noiseTexture),this._enableTime=null}destroy(){this._disable()}_enable(){if(null!=this._enableTime||!this._context)return;const e=Uint8Array.from(atob(b),(e=>e.charCodeAt(0))),t=new y;t.wrapMode=P.CLAMP_TO_EDGE,t.pixelFormat=j.RGB,t.wrapMode=P.REPEAT,t.hasMipmap=!0,t.width=32,t.height=32,this._passParameters.noiseTexture=new v(this._context.renderContext.rctx,t,e),null==this._ssaoTechnique&&(this._ssaoTechnique=this._context.techniqueRepository.acquire(T)),null==this._blurTechnique&&(this._blurTechnique=this._context.techniqueRepository.acquire(d)),this._enableTime=o(0),this._context?.requestRender()}renderNode(e,r,s){const i=e.bindParameters,o=s?.get("normals"),a=o?.getTexture(),n=o?.getTexture(g);if(null==this._enableTime||null==this._context||!a||!n)return;if(!this._ssaoTechnique.compiled||!this._blurTechnique.compiled)return this._enableTime=e.time,void this._context.requestRender();0===this._enableTime&&(this._enableTime=e.time);const h=e.rctx,p=i.camera,_=this.view.qualitySettings.fadeDuration,d=p.relativeElevation,b=t((c-d)/(c-l),0,1),x=_>0?Math.min(_,e.time-this._enableTime)/_:1,f=x*b;this._passParameters.normalTexture=a,this._passParameters.depthTexture=n,this._passParameters.projScale=1/p.computeScreenPixelSizeAtDist(1),this._passParameters.intensity=4*O/q(p)**6*f;const T=p.fullViewport[2],w=p.fullViewport[3],S=Math.round(T/A),P=Math.round(w/A),j=this._context.fbos,v=j.acquire(T,w,"ssao input",u.RG);h.unbindTexture(v.fbo.colorTexture),h.bindFramebuffer(v.fbo),h.setViewport(0,0,T,w),h.bindTechnique(this._ssaoTechnique,i,this._passParameters,this._drawParameters),h.screen.draw();const y=j.acquire(S,P,"ssao blur",u.RED);h.unbindTexture(y.fbo.colorTexture),h.bindFramebuffer(y.fbo),this._drawParameters.colorTexture=v.getTexture(),m(this._drawParameters.blurSize,0,A/w),h.bindTechnique(this._blurTechnique,i,this._passParameters,this._drawParameters),h.setViewport(0,0,S,P),h.screen.draw(),v.release();const C=j.acquire(S,P,"ssao",u.RED);return h.unbindTexture(C.fbo.colorTexture),h.bindFramebuffer(C.fbo),h.setViewport(0,0,T,w),h.setClearColor(1,1,1,0),h.clear(R.COLOR_BUFFER_BIT),this._drawParameters.colorTexture=y.getTexture(),m(this._drawParameters.blurSize,A/T,0),h.bindTechnique(this._blurTechnique,i,this._passParameters,this._drawParameters),h.setViewport(0,0,S,P),h.screen.draw(),h.setViewport4fv(p.fullViewport),y.release(),x<1&&this._context.requestRender(),C}};e([a({constructOnly:!0})],C.prototype,"view",void 0),e([a()],C.prototype,"_context",void 0),C=e([n("esri.views.3d.webgl-engine.effects.ssao.SSAO")],C);const O=.5;export{C as SSAO,A as blurSizePixels};
