/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import{property as r}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/Logger.js";import"../../../../../core/RandomLCG.js";import{subclass as o}from"../../../../../core/accessorSupport/decorators/subclass.js";import{ColorFormat as t}from"../../../webgl/formats.js";import n from"../../../webgl/RenderNode.js";import{Default3D as i}from"../../lib/DefaultVertexAttributeLocations.js";import{ClearBufferBit as s,ColorAttachment as a,BlendFactor as c,SizedPixelFormat as l,PixelFormat as u,DataType as d}from"../../../../webgl/enums.js";let p=class extends n{constructor(e){super(e),this.destroyedCB=null,this.produces="composite-color",this.consumes={required:["composite-color"]},this._focusedFBO=null,this._program=new Array}destroy(){this._program.forEach((e=>e.dispose())),this._program.length=0,this.destroyedCB()}render(e){const r=e.find((({name:e})=>"composite-color"===e));if(!this._focusedFBO)return r;const o=this.renderingContext;o.bindFramebuffer(r.fbo),o.setClearColor(0,0,0,0),o.clear(s.COLOR_BUFFER_BIT);const t=this._ensureShader(o,!1);return o.useProgram(t),o.bindTexture(this._focusedFBO.getTexture(),0),t.setUniform1i("colorTex",0),t.setUniform1i("inputType",0),o.screen.draw(),r}getReplacingFBO(e,r,o,n,i){r===f.ON&&(n=e.width,i=e.height);const u=this.renderingContext,d=e.depthStencilTexture,p=this._ensureShader(u,null!=d),h=this.fboCache.acquire(n,i,"fbo visualizer");u.useProgram(p),d?(h.acquireColor(a.COLOR_ATTACHMENT1,t.RGBA),u.unbindTexture(h.fbo.colorTexture),u.bindFramebuffer(h.fbo),u.gl.drawBuffers([a.COLOR_ATTACHMENT0,a.COLOR_ATTACHMENT1]),u.bindTexture(d,1),p.setUniform1i("depthTex",1)):(u.unbindTexture(h.fbo.colorTexture),u.bindFramebuffer(h.fbo));const m=u.getViewport();u.setViewport(0,0,n,i),u.setClearColor(0,0,0,0),u.clear(s.COLOR_BUFFER_BIT),u.setBlendingEnabled(!0),u.setBlendFunction(c.ONE,c.ONE_MINUS_SRC_ALPHA),u.bindTexture(e.colorTexture,0),p.setUniform1i("colorTex",0);const T=e.colorTexture?.descriptor.internalFormat,v=o.includes("depth")||o.includes("shadow")?3:T===l.R16F||T===l.R32F||T===l.R8?1:T===l.RG8?2:T===l.RGBA16F?4:0;if(p.setUniform1i("inputType",v),o.includes("depth")){const e=this.camera;p.setUniform2fv("nearFar",e.nearFar)}return u.screen.draw(),u.gl.drawBuffers([a.COLOR_ATTACHMENT0]),u.bindFramebuffer(null),u.setViewport(m.x,m.y,m.width,m.height),r===f.ON&&(this._focusedFBO=h),h}clearFocusedFBO(){this._focusedFBO=null}getPreviewContent(e,r,o,t){if(!o)return null;const n=this.renderingContext,i=this.fboCache.acquire(e,r,"fbo visualizer");n.bindFramebuffer(i?.fbo),n.setClearColor(0,0,0,0),n.clear(s.COLOR_BUFFER_BIT),n.setBlendingEnabled(!0),n.setBlendFunction(c.ONE,c.ONE_MINUS_SRC_ALPHA),n.setViewport(0,0,e,r);const a=this._ensureShader(n,!1);n.useProgram(a),n.bindTexture(o.getColorTexture(t),0),a.setUniform1i("colorTex",0),a.setUniform1i("inputType",0),n.screen.draw();const l=new ImageData(new Uint8ClampedArray(e*r*4),e,r);return n.gl.readPixels(0,0,e,r,u.RGBA,d.UNSIGNED_BYTE,new Uint8Array(l.data.buffer)),n.bindFramebuffer(null),i?.release(),l}_ensureShader(e,r){const o=r?1:0;if(this._program[o])return this._program[o];const t="#version 300 es\n      in vec2 position;\n      out vec2 uv;\n\n      void main() {\n        gl_Position = vec4(position, 0.0, 1.0);\n        uv = position * 0.5 + vec2(0.5);\n      }",n=`#version 300 es\n      precision highp float;\n\n      in vec2 uv;\n      uniform sampler2D colorTex;\n      layout(location = 0) out vec4 fragColor;\n      ${r?"\n            layout(location = 1) out vec4 fragDepth;\n            uniform sampler2D depthTex;\n          ":""}\n      uniform int inputType;\n      uniform vec2 nearFar;\n\n      // Factors to convert rgba back to float\n      const vec4 RGBA_2_FLOAT_FACTORS = vec4(\n        255.0 / (256.0),\n        255.0 / (256.0 * 256.0),\n        255.0 / (256.0 * 256.0 * 256.0),\n        255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n      );\n\n\n      float rgba2float(vec4 rgba) {\n        // Convert components from 0->1 back to 0->255 and then add the components together with their corresponding\n        // fixed point factors, i.e. (256^1, 256^2, 256^3, 256^4)\n        return dot(rgba, RGBA_2_FLOAT_FACTORS);\n      }\n\n      float linearDepthFromFloat(float depth) {\n        depth = pow(depth, 0.2);\n        return -(depth * (nearFar[1] - nearFar[0]) + nearFar[0]);\n      }\n\n      float linearDepthFromRGBA(vec4 depth) {\n        return linearDepthFromFloat(rgba2float(depth));\n      }\n\n      float linearDepthFromTexture(sampler2D depthTex, vec2 uv) {\n        ivec2 iuv = ivec2(uv * vec2(textureSize(depthTex, 0)));\n        return linearDepthFromRGBA(texelFetch(depthTex, iuv, 0));\n      }\n\n      void main() {\n        vec4 color;\n        if(inputType == 1) {\n          color = vec4(vec3(texture(colorTex, uv).r), 1.0);\n        } else if(inputType == 2) {\n          color = vec4(texture(colorTex, uv).rg, 0.0, 1.0);\n        } else if(inputType == 3) {\n          float depth = 1.0 - (-linearDepthFromTexture(colorTex, uv) / (nearFar[1] - nearFar[0]));\n          color = vec4(vec3(depth), depth >= 0.999 ? 0.0 : 1.0);\n        } else if(inputType == 4) {\n          color = texture(colorTex, uv);\n          color = vec4(color.rgb / color.a, color.a);\n        } else {\n          color = texture(colorTex, uv);\n        }\n\n\n        if(color.a < 0.000001)\n          discard;\n        else {\n          fragColor = color;\n          ${r?"\n                float depth = 1.0 - pow(texture(depthTex, uv).r, 10.0);\n                fragDepth = vec4(vec3(depth), depth < 0.000001 ? 0.0 : 1.0);\n                ":""}\n        }\n      }`;return this._program[o]=e.programCache.acquire(t,n,i),this._program[o]}};var f;e([r()],p.prototype,"destroyedCB",void 0),e([r()],p.prototype,"produces",void 0),e([r()],p.prototype,"consumes",void 0),p=e([o("esri.views.3d.webgl-engine.effects.debug.RenderNodeVisualizerNode")],p),function(e){e[e.ON=0]="ON",e[e.OFF=1]="OFF"}(f||(f={}));export{f as FocusState,p as RenderNodeVisualizerNode};
