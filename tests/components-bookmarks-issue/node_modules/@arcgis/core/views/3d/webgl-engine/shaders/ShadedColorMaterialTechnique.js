/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ShaderOutput as t}from"../core/shaderLibrary/ShaderOutput.js";import{ReloadableShaderModule as r}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as o}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as i}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{CullFaceOptions as s}from"../lib/basicInterfaces.js";import{blendingDefault as n,oitBlending as a,oitDepthWrite as p,OITPolygonOffset as l}from"../lib/OrderIndependentTransparency.js";import{Program as u}from"../lib/Program.js";import{TransparencyPassType as c}from"../lib/TransparencyPassType.js";import{VertexAttribute as d}from"../lib/VertexAttribute.js";import{DefaultTechniqueConfiguration as h}from"../materials/DefaultTechniqueConfiguration.js";import{S as m}from"../../../../chunks/ShadedColorMaterial.glsl.js";import{CompareFunction as f}from"../../../webgl/enums.js";import{makePipelineState as b,cullingParams as y,defaultDepthWriteParams as S,defaultColorWriteParams as g}from"../../../webgl/renderState.js";class T extends o{initializeProgram(e){return new u(e.rctx,T.shader.get().build(this.configuration),v)}_setPipelineState(e){const r=this.configuration,o=e===c.NONE,i=e===c.FrontFace;return b({blending:r.output!==t.Color&&r.output!==t.Alpha||!r.transparent?null:o?n:a(e),culling:y(r.cullFace),depthTest:{func:i?f.LESS:r.shadingEnabled?f.LEQUAL:f.LESS},depthWrite:o?r.writeDepth?S:null:p(e),colorWrite:g,polygonOffset:o||i?null:l})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}T.shader=new r(m,(()=>import("./ShadedColorMaterial.glsl.js")));class j extends h{constructor(){super(...arguments),this.output=t.Color,this.cullFace=s.None,this.transparencyPassType=c.NONE,this.hasSlicePlane=!1,this.transparent=!1,this.writeDepth=!0,this.screenSizeEnabled=!0,this.shadingEnabled=!0,this.multipassEnabled=!1,this.cullAboveGround=!1}}e([i({count:t.COUNT})],j.prototype,"output",void 0),e([i({count:s.COUNT})],j.prototype,"cullFace",void 0),e([i({count:c.COUNT})],j.prototype,"transparencyPassType",void 0),e([i()],j.prototype,"hasSlicePlane",void 0),e([i()],j.prototype,"transparent",void 0),e([i()],j.prototype,"writeDepth",void 0),e([i()],j.prototype,"screenSizeEnabled",void 0),e([i()],j.prototype,"shadingEnabled",void 0),e([i()],j.prototype,"multipassEnabled",void 0),e([i()],j.prototype,"cullAboveGround",void 0),e([i({constValue:!1})],j.prototype,"occlusionPass",void 0);const v=new Map([[d.POSITION,0],[d.NORMAL,1],[d.OFFSET,2]]);export{T as ShadedColorMaterialTechnique,j as ShadedColorMaterialTechniqueConfiguration,v as vertexAttributeLocations};
