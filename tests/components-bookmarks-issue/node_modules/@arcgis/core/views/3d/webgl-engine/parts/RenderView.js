/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import r from"../../../../core/Evented.js";import has from"../../../../core/has.js";import s from"../../../../core/Logger.js";import{removeMaybe as i,destroyMaybe as n}from"../../../../core/maybe.js";import{watch as o,initial as a,syncAndInitial as h}from"../../../../core/reactiveUtils.js";import{addFrameTask as p}from"../../../../core/scheduling.js";import{Milliseconds as d}from"../../../../core/time.js";import{property as c}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/RandomLCG.js";import{subclass as l}from"../../../../core/accessorSupport/decorators/subclass.js";import{ComponentObjectCollection as m}from"../collections/Component/ComponentObjectCollection.js";import{ShaderTechniqueRepository as u}from"../core/shaderTechnique/ShaderTechniqueRepository.js";import{RenderRequestType as _}from"../lib/basicInterfaces.js";import f from"../lib/CompositingHelper.js";import{textureToDepth as g}from"../lib/depthRangeUtils.js";import{GLMaterialRepository as x}from"../lib/GLMaterialRepository.js";import{MagnifierHelper as b}from"../lib/MagnifierHelper.js";import{UpdateParameters as y}from"../lib/Material.js";import{ObjectAndLayerIdRenderHelper as R}from"../lib/ObjectAndLayerIdRenderHelper.js";import{Renderer as v}from"../lib/Renderer.js";import{RenderingContext as j}from"../lib/RenderingContext.js";import{TextureRepository as w}from"../lib/TextureRepository.js";import{createMarkerTextureRepository as T}from"../materials/markerTextureRepository.js";import{createStippleTextureRepository as A}from"../materials/stippleTextureRepository.js";import{WaterTextureRepository as C}from"../materials/internal/WaterTextureRepository.js";import{getContextCache as U}from"./contextCache.js";import{removeLoadedShaderModules as O}from"./requireUtils.js";import{ScreenshotManager as q,ScreenshotContext as L}from"./ScreenshotManager.js";import{contextCache as D}from"./testUtils.js";import{RenderState as H}from"../../../support/RenderState.js";import{createContext as S}from"../../../webgl/contextUtils.js";let k=class extends t{constructor(e){super({}),this.events=new r,this.waterTextures=new C,this._magnifierHelper=new b,this.objectAndLayerIdRenderHelper=has("enable-feature:objectAndLayerId-rendering")?new R:null,this._needsUpdate=!0,this._needsRender=!0,this._idleSuspend=!0,this._needsWaterReflectionUpdate=!1,this._lastAnimationUpdate=0,this._container=e.container,this._viewingMode=e.viewingMode;try{this._initializeContext(e)}catch(i){return void console.error("Failed to initialize context",i)}this.addHandles([o((()=>this.waterTextures?.updating),(()=>this.requestRender()),a),o((()=>e.view.qualityProfile),(e=>this.renderer?.updateRenderFeatures(e)),h),this._magnifierHelper.events.on("request-render",(()=>this.requestRender()))]);const{memoryController:t}=e.view.resourceController;this.stippleTextures=A(this._rctx,t),this.markerTextures=T(this._rctx,t),this._shaderTechniques=new u({rctx:this._rctx,viewingMode:e.viewingMode,stippleTextureRepository:this.stippleTextures,waterTextureRepository:this.waterTextures,markerTextureRepository:this.markerTextures}),this._textures=new w(e,this._shaderTechniques,this._rctx),this.addHandles(this._textures.events.on("changed",(e=>this.requestRender(e)))),this._materialRepository=new x(this._textures,this._shaderTechniques,(()=>this.requestRender()),(()=>this.requestRender())),this._compositingHelper=new f(this._rctx,this._shaderTechniques),this.renderer=new v(e,this._materialRepository,this._textures,this._shaderTechniques,this._rctx,this._compositingHelper,this._magnifierHelper,(e=>this.requestRender(e)));const s={renderScene:(e,t,r,s)=>this.renderer.render(e,t,r,s),requestRenderScene:e=>this.requestRender(e),prepareOverlay:()=>e.options.screenshot.prepareOverlay(),renderOverlay:(t,r,s)=>e.options.screenshot.renderOverlay(t,r,s)};this._screenshotManager=new q(this._rctx,s,(e=>this.events.emit("force-camera-for-screenshot",e))),this._registerFrameTask(e)}normalizeCtorArgs(){return{}}destroy(){this._container.contains(this._canvas)&&this._container.removeChild(this._canvas),this._frameTask=i(this._frameTask),this._shaderTechniques=n(this._shaderTechniques),this._componentObjects=n(this._componentObjects),this._screenshotManager=n(this._screenshotManager),n(this.renderer),this._textures=n(this._textures),n(this._magnifierHelper),n(this.waterTextures),n(this.markerTextures),n(this.stippleTextures),this._canvas=null,this._container=null,this._rctx=n(this._rctx)}requestRender(e=_.UPDATE){this._needsRender=!0,e===_.UPDATE&&(this._needsUpdate=!0)}get updating(){return this._needsUpdate||this._needsWaterReflectionUpdate||this.renderer.updating||this._textures.updating||this.waterTextures.updating||this._magnifierHelper.updating}get textureRepository(){return this._textures}get compositingHelper(){return this._compositingHelper}set magnifier(e){this._magnifierHelper.magnifier=e}setIdleSuspend(e){this._idleSuspend!==e&&(this._idleSuspend=e,this.requestRender())}get renderingContext(){return this._rctx}get capabilities(){return this._rctx.capabilities}get canvas(){return this._canvas}takeScreenshot(e){return this._screenshotManager.takeScreenshot(e).then((e=>e[0]))}takeScreenshotWithOID(e){return e.objectAndLayerIdColor=!0,this._screenshotManager.takeScreenshot(e)}getAlpha(){return!!this._rctx.contextAttributes.alpha}getMinimalDepthForArea(e,t,r,s,i,n=i){const o=s.constrainWindowSize(t,r,i*s.pixelRatio,n*s.pixelRatio),a=this._ensureDepthBuffer(o);this.renderer.readDepthPixels(s,o,a);let h=Number.MAX_VALUE;for(let p=0;p<o[2]*o[3];p++){const e=g(4*p,a,s.nearFar);h>e&&e!==s.nearFar[0]&&e!==s.nearFar[1]&&(h=e)}if(e){const i=e.pickDepth(t*s.pixelRatio,r*s.pixelRatio,s);null!=i&&h>i&&i!==s.nearFar[0]&&i!==s.nearFar[1]&&(h=i)}return h===Number.MAX_VALUE?void 0:h}_ensureDepthBuffer(e){const t=4*e[2]*e[3];return(null==this._tmpDepthBuffer||this._tmpDepthBuffer.byteLength<t)&&(this._tmpDepthBuffer=new Uint8Array(t)),this._tmpDepthBuffer}async reloadShaders(){O(),await this._shaderTechniques.reloadAll(),this.requestRender()}_registerFrameTask(e){const t=e.view.state;let r=!1,s=_.BACKGROUND,i=!1;const n={preRender:({time:i})=>{r=this.updating,s=this._needsUpdate?_.UPDATE:_.BACKGROUND,e.commitSyncLayers();const n=d(i-this._lastAnimationUpdate);if(n>this.renderer.animationTimestep||null!=t.forcedAnimationTime||r||this._needsRender){const e=d(n/this.renderer.animationTimeDilation),r=new y(t.camera,e,t.forcedAnimationTime);this.renderer.updateAnimation(r)&&this.requestRender(_.BACKGROUND),this._lastAnimationUpdate=i}},render:({time:e})=>{if((this._needsRender||!this._idleSuspend||!this.renderer.isCameraFinal||this._needsWaterReflectionUpdate)&&t.camera.fullWidth>0&&t.camera.fullHeight>0){const r=this._needsUpdate&&this._idleSuspend&&this.renderer.isCameraFinal;this._needsRender=!1,this._needsUpdate=!1,this._needsWaterReflectionUpdate=!1,this.renderer.render(t,e),i=!0,r&&this.renderer.hasReflections&&(this.requestRender(_.BACKGROUND),this._needsWaterReflectionUpdate=!0)}},update:({time:e})=>{const r=this.renderer.hasSlicePlane||this._magnifierHelper.enabled||this.renderer.hasDecorations||this.renderer.hasHighlights,s=new L(t,r,this.renderer.fboCache);this._textures.update(),this._screenshotManager.update(s,e)},finish:()=>{i&&(this.renderer.finish(t.mode===H.IDLE?s:_.UPDATE),i=!1)}};this._frameTask=p(n)}_initializeContext(e){const t=e.options;this._canvas=t.canvas,this._canvas||(this._canvas=document.createElement("canvas")),this._canvas.setAttribute("style","width: 100%; height:100%; display:block;");const r={alpha:t.alpha||!1,premultipliedAlpha:!0,antialias:!1,depth:!0,stencil:t.stencil??!0,powerPreference:"high-performance",preserveDrawingBuffer:t.preserveDrawingBuffer??!1},i=S(this._canvas,r);null!=i?(this._rctx=M(i,e),this._loadShaderOnlyExtensions(),!t.alpha&&this._rctx.contextAttributes.alpha&&s.getLogger(this).error("WebGL context has alpha channel even though no alpha channel was requested"),!this._rctx.contextAttributes.alpha&&has("safari")>=11&&(this._container.style.backgroundColor="black"),this._container.appendChild(this._canvas)):s.getLogger(this).error("A WebGL2 context could not be created.")}_loadShaderOnlyExtensions(){this._rctx.capabilities.enable("textureFloat")}getObjectAndLayerIdColor(e){return null!=this.objectAndLayerIdRenderHelper?this.objectAndLayerIdRenderHelper.getObjectAndLayerIdColor(e):null}get componentObjectCollection(){return null==this._componentObjects&&(this._componentObjects=new m(this.renderer.renderPassManager,this._viewingMode)),this._componentObjects}set componentObjectCollection(e){this._componentObjects=e}};function M(e,t){const r={disabledExtensions:t.options.deactivatedWebGLExtensions||{},debugWebGLExtensions:t.options.debugWebGLExtensions||{},maxAnisotropy:8},s=(e,r)=>t.view.resourceController.memoryController.newCache(e,r);if(D.enabled){let t=E.get(e);return t?(t.configure(r),t.newCache=s,t.ref(),t):(t=new j(e,r,s),E.set(e,t),t.ref(),t)}return new j(e,r,s)}e([c({type:Boolean,readOnly:!0})],k.prototype,"updating",null),e([c()],k.prototype,"_rctx",void 0),e([c()],k.prototype,"_container",void 0),e([c()],k.prototype,"_canvas",void 0),e([c()],k.prototype,"stippleTextures",void 0),e([c()],k.prototype,"markerTextures",void 0),e([c()],k.prototype,"waterTextures",void 0),e([c()],k.prototype,"_magnifierHelper",void 0),e([c({readOnly:!0})],k.prototype,"objectAndLayerIdRenderHelper",void 0),e([c()],k.prototype,"_textures",void 0),e([c({readOnly:!0})],k.prototype,"renderer",void 0),e([c()],k.prototype,"_screenshotManager",void 0),e([c()],k.prototype,"componentObjectCollection",null),e([c()],k.prototype,"_componentObjects",void 0),e([c()],k.prototype,"_needsUpdate",void 0),e([c()],k.prototype,"_needsWaterReflectionUpdate",void 0),k=e([l("esri.views.3d.webgl-engine.parts.RenderView")],k);const E=U();export{k as RenderView};
