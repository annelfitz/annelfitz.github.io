/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{fromValues as e}from"../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{NoParameters as r}from"../core/shaderModules/interfaces.js";import{ReloadableShaderModule as i}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as o}from"../core/shaderTechnique/ShaderTechnique.js";import{Default3D as t}from"../lib/DefaultVertexAttributeLocations.js";import{Program as s}from"../lib/Program.js";import{S as l}from"../../../../chunks/SlicePlaneMaterial.glsl.js";import{BlendFactor as a,CompareFunction as n}from"../../../webgl/enums.js";import{makePipelineState as c,separateBlendingParams as m,defaultColorWriteParams as d}from"../../../webgl/renderState.js";class h extends r{constructor(){super(...arguments),this.backgroundColor=e(1,0,0,.5),this.gridColor=e(0,1,0,.5),this.gridWidth=4}}class u extends o{initializeProgram(e){return new s(e.rctx,u.shader.get().build(this.configuration),t)}initializePipeline(){return c({blending:m(a.ONE,a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA),depthTest:{func:n.LESS},colorWrite:d})}}u.shader=new i(l,(()=>import("./SlicePlaneMaterial.glsl.js")));export{h as SlicePlaneMaterialPassParameters,u as SlicePlaneMaterialTechnique};
