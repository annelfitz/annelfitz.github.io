/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{n as e,s as t,h as r,g as i}from"../../../../chunks/vec32.js";import{create as s}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{fromValues as a}from"../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{center as n,scale as o}from"../../../../geometry/support/aaBoundingBox.js";import{BufferViewVec3f as c}from"../../../../geometry/support/buffer/BufferView.js";import{newLayout as l}from"../../support/buffer/InterleavedLayout.js";import{ShaderOutput as h,isColorAlphaOrOID as u}from"../core/shaderLibrary/ShaderOutput.js";import{CullFaceOptions as p}from"../lib/basicInterfaces.js";import f from"../lib/GLMaterial.js";import{Material as m,MaterialParameters as d}from"../lib/Material.js";import{intersectTriangleGeometry as b}from"../lib/RayIntersections.js";import{RenderSlot as S}from"../lib/RenderSlot.js";import{assert as g}from"../lib/Util.js";import{VertexAttribute as E}from"../lib/VertexAttribute.js";import{writeDefaultAttributes as T,writePosition as _}from"./internal/bufferWriterUtils.js";import{ShadedColorMaterialTechniqueConfiguration as A,vertexAttributeLocations as F,ShadedColorMaterialTechnique as w}from"../shaders/ShadedColorMaterialTechnique.js";class j extends m{constructor(e){super(e,new x),this.supportsEdges=!0,this.produces=new Map([[S.OPAQUE_MATERIAL,e=>e===h.Highlight||u(e)&&!this._isTransparent],[S.TRANSPARENT_MATERIAL,e=>u(e)&&this._isTransparent&&this.parameters.writeDepth],[S.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,e=>u(e)&&this._isTransparent&&!this.parameters.writeDepth]]),this._configuration=new A,this._vertexAttributeLocations=F}getConfiguration(e,t){return this._configuration.output=e,this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this._isTransparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.screenSizeEnabled=this.parameters.screenSizeEnabled,this._configuration.shadingEnabled=this.parameters.shadingEnabled,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration}intersect(e,s,a,c,l,h){if(this.parameters.screenSizeEnabled){const s=e.attributes.get(E.OFFSET),u={applyToVertex:(e,n,o,c)=>{const l=t(O,s.data[3*c],s.data[3*c+1],s.data[3*c+2]),h=t(y,e,n,o);return r(l,l,this.parameters.screenSizeScale*a.camera.computeScreenPixelSizeAt(l)),i(h,h,l),[h[0],h[1],h[2]]},applyToAabb:e=>{const t=n(e,O);return o(e,this.parameters.screenSizeScale*a.camera.computeScreenPixelSizeAt(t))}};b(e,a,c,l,u,h)}else b(e,a,c,l,void 0,h)}createGLMaterial(e){return new v(e)}createBufferWriter(){return new z(this.parameters.screenSizeEnabled)}get _isTransparent(){return this.parameters.color[3]<1||this.parameters.forceTransparentMode}}class v extends f{beginSlot(e){return this.ensureTechnique(w,e)}}class x extends d{constructor(){super(...arguments),this.color=a(1,1,1,1),this.shadingTint=a(0,0,0,.25),this.shadingDirection=e(s(),[.5,-.5,-.5]),this.screenSizeScale=14,this.forceTransparentMode=!1,this.writeDepth=!0,this.hasSlicePlane=!1,this.cullFace=p.None,this.screenSizeEnabled=!1,this.shadingEnabled=!0}}class z{constructor(e){this.screenSizeEnabled=e;const t=l().vec3f(E.POSITION).vec3f(E.NORMAL);this.screenSizeEnabled&&t.vec3f(E.OFFSET),this.vertexBufferLayout=t}elementCount(e){return e.attributes.get(E.POSITION).indices.length}write(e,t,r,i,s){if(T(r,this.vertexBufferLayout,e,t,i,s),this.screenSizeEnabled){if(!r.attributes.has(E.OFFSET))throw new Error(`${E.OFFSET} vertex attribute required for screenSizeEnabled ShadedColorMaterial`);{const e=r.attributes.get(E.OFFSET);g(3===e.size);const a=i.getField(E.OFFSET,c);if(!a)throw new Error("unable to acquire view for "+E.OFFSET);_(e,t,a,s)}}}}const O=s(),y=s();export{j as ShadedColorMaterial,x as ShadedColorMaterialParameters};
