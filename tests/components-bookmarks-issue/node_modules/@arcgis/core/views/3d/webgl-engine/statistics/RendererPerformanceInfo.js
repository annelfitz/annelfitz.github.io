/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{disposeMaybe as e}from"../../../../core/maybe.js";import t from"../../../../core/PerformanceSampler.js";import{Milliseconds as r}from"../../../../core/time.js";import{createElapsedTimerPool as i}from"../../../webgl/TimerPool.js";var a;!function(e){e.OVERLAY="overlay",e.PREPARE="prepare",e.SHADOW_MAP="shadow map",e.LINEAR_DEPTH="linear depth",e.ACCUMULATED_SHADOWS="accumulated shadows",e.OBJECT_AND_LAYER_ID_COLOR="object/layer id color",e.NORMALS="normals",e.SSAO="SSAO",e.OPAQUE="opaque",e.OPAQUE_EDGES="opaque edges",e.VOXEL="voxel",e.TRANSPARENT="transparent",e.TRANSPARENT_EDGES="transparent edges",e.HUD_VISIBILITY="HUD visibility",e.TRANSPARENT_TERRAIN="transparent terrain",e.ENVIRONMENT="environment",e.LASER_LINES="laser lines",e.OCCLUDED="occluded",e.ANTIALIASING="antialiasing",e.HIGHLIGHTS="highlights",e.HUD="HUD",e.HUD_OCCLUDED="HUD occluded",e.FINISH="finish"}(a||(a={}));const s="Total";class o{constructor(e){this._rctx=e,this._startTimeStampCPU=r(0),this._lastTimeStampCPU=r(0),this._totalCPUTime=new t(s),this._cpuTimeSamplers=new Map(Object.values(a).map((e=>[e,new t(e)]))),this._enableGPUTimer=0,this._totalGPUTime=new t("GPU"),this._gpuTimeSamplers=new Map(Object.values(a).map((e=>[e,new t(e)]))),this._totalTime=r(0),this._totalFrameCount=0}get totalCPUTimeSampler(){return this._totalCPUTime}get cpuTimeSamplers(){return Array.from(this._cpuTimeSamplers.values())}get totalGPUTimeSampler(){return this._totalGPUTime}get gpuTimeSamplers(){return Array.from(this._gpuTimeSamplers.values())}get gpuSamplingEnabled(){return null!=this._gpuTimerPool}get totalTime(){return this._totalTime}get totalFrameCount(){return this._totalFrameCount}get elapsedTime(){return r(performance.now()-this._startTimeStampCPU)}enableGPUPerformanceInfo(){if(null==this._gpuTimerPool){const e=[...Object.values(a),s];this._gpuTimerPool=i(this._rctx,e)}if(null==this._gpuTimerPool)return{hasGPUTimerSupport:!1,remove:()=>{}};++this._enableGPUTimer;let t=!1;return{hasGPUTimerSupport:!0,remove:()=>{t||(t=!0,--this._enableGPUTimer,0===this._enableGPUTimer&&(this._gpuTimerPool=e(this._gpuTimerPool)))}}}startFrame(){this._startTimeStampCPU=this._lastTimeStampCPU=r(performance.now()),this._gpuTimerPool&&this._gpuTimerPool.start()}advance(e){const t=r(performance.now());if(this._cpuTimeSamplers.get(e).record(t-this._lastTimeStampCPU),this._lastTimeStampCPU=t,this._gpuTimerPool){const t=this._gpuTimerPool.stop(e);this._gpuTimeSamplers.get(e).record(t),this._gpuTimerPool.start()}}finishFrame(){if(this._gpuTimerPool){const e=this._gpuTimerPool.stop(a.FINISH);this._gpuTimeSamplers.get(a.FINISH).record(e),this._rctx.gl.flush()}const e=r(performance.now()-this._startTimeStampCPU);this._totalTime=r(this._totalTime+e),this._totalCPUTime.record(e),this._gpuTimerPool&&this._totalGPUTime.record(this.gpuTimeSamplers.reduce(((e,t)=>e+(t.last||0)),0)),++this._totalFrameCount}}export{a as PerformanceCategory,o as RendererPerformanceInfo};
