/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../../chunks/tslib.es6.js";import{normalFromMat4 as r}from"../../../../../../core/libs/gl-matrix-2/math/mat3.js";import{create as o}from"../../../../../../core/libs/gl-matrix-2/factories/mat3f64.js";import{IDENTITY as a}from"../../../../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{s as n}from"../../../../../../chunks/vec32.js";import{create as i}from"../../../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{ShaderOutput as t}from"../ShaderOutput.js";import{DoublePrecision as s}from"../util/DoublePrecision.glsl.js";import{addViewNormal as l}from"../util/View.glsl.js";import{Float3DrawUniform as m}from"../../shaderModules/Float3DrawUniform.js";import{NoParameters as c,glsl as d}from"../../shaderModules/interfaces.js";import{Matrix3PassUniform as u}from"../../shaderModules/Matrix3PassUniform.js";import{Matrix4PassUniform as p}from"../../shaderModules/Matrix4PassUniform.js";import{ShaderTechniqueConfiguration as v,parameter as f}from"../../shaderTechnique/ShaderTechniqueConfiguration.js";import{VertexAttribute as g}from"../../../lib/VertexAttribute.js";import{encodeDoubleHi as x,encodeDoubleLo as M}from"../../../../../webgl/doublePrecisionUtils.js";class O extends v{constructor(){super(...arguments),this.instancedDoublePrecision=!1,this.hasModelTransformation=!1}}e([f()],O.prototype,"instancedDoublePrecision",void 0),e([f()],O.prototype,"hasModelTransformation",void 0);class w extends c{constructor(){super(...arguments),this.modelTransformation=null}}const h=o();function N(e,o){const i=o.hasModelTransformation,c=o.instancedDoublePrecision;i&&(e.vertex.uniforms.add(new p("model",(e=>e.modelTransformation??a))),e.vertex.uniforms.add(new u("normalLocalOriginFromModel",(e=>(r(h,e.modelTransformation??a),h))))),o.instanced&&c&&(e.attributes.add(g.INSTANCEMODELORIGINHI,"vec3"),e.attributes.add(g.INSTANCEMODELORIGINLO,"vec3"),e.attributes.add(g.INSTANCEMODEL,"mat3"),e.attributes.add(g.INSTANCEMODELNORMAL,"mat3"));const v=e.vertex;c&&(v.include(s,o),v.uniforms.add(new m("viewOriginHi",((e,r)=>x(n(T,r.camera.viewInverseTransposeMatrix[3],r.camera.viewInverseTransposeMatrix[7],r.camera.viewInverseTransposeMatrix[11]),T))),new m("viewOriginLo",((e,r)=>M(n(T,r.camera.viewInverseTransposeMatrix[3],r.camera.viewInverseTransposeMatrix[7],r.camera.viewInverseTransposeMatrix[11]),T))))),v.code.add(d`
    vec3 getVertexInLocalOriginSpace() {
      return ${i?c?"(model * vec4(instanceModel * localPosition().xyz, 1.0)).xyz":"(model * localPosition()).xyz":c?"instanceModel * localPosition().xyz":"localPosition().xyz"};
    }

    vec3 subtractOrigin(vec3 _pos) {
      ${c?d`
          // Negated inputs are intentionally the first two arguments. The other way around the obfuscation in dpAdd() stopped
          // working for macOS 14+ and iOS 17+.
          // Issue: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/56280
          vec3 originDelta = dpAdd(-instanceModelOriginHi, -instanceModelOriginLo, viewOriginHi, viewOriginLo);
          return _pos - originDelta;`:"return vpos;"}
    }
    `),v.code.add(d`
    vec3 dpNormal(vec4 _normal) {
      return normalize(${i?c?"normalLocalOriginFromModel * (instanceModelNormal * _normal.xyz)":"normalLocalOriginFromModel * _normal.xyz":c?"instanceModelNormal * _normal.xyz":"_normal.xyz"});
    }
    `),o.output===t.Normal&&(l(v),v.code.add(d`
    vec3 dpNormalView(vec4 _normal) {
      return normalize((viewNormal * ${i?c?"vec4(normalLocalOriginFromModel * (instanceModelNormal * _normal.xyz), 1.0)":"vec4(normalLocalOriginFromModel * _normal.xyz, 1.0)":c?"vec4(instanceModelNormal * _normal.xyz, 1.0)":"_normal"}).xyz);
    }
    `)),o.hasVertexTangents&&v.code.add(d`
    vec4 dpTransformVertexTangent(vec4 _tangent) {
      ${i?c?"return vec4(normalLocalOriginFromModel * (instanceModelNormal * _tangent.xyz), _tangent.w);":"return vec4(normalLocalOriginFromModel * _tangent.xyz, _tangent.w);":c?"return vec4(instanceModelNormal * _tangent.xyz, _tangent.w);":"return _tangent;"}
    }`)}const T=i();export{O as InstancedDoubleConfiguration,w as InstancedDoublePassParameters,N as InstancedDoublePrecision};
