/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import{property as e}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/Logger.js";import"../../../../../core/RandomLCG.js";import{subclass as o}from"../../../../../core/accessorSupport/decorators/subclass.js";import{SyncRenderPlugin as r,ConsumesCompositeColor as i}from"../RenderPlugin.js";import{RenderSlot as s}from"../../lib/RenderSlot.js";import{C as n}from"../../../../../chunks/Compositing.glsl.js";import{CompositingTechnique as c}from"../../shaders/CompositingTechnique.js";import{AlphaMode as a,CompositingTechniqueConfiguration as p}from"../../shaders/CompositingTechniqueConfiguration.js";let m=class extends r{constructor(t){super(t),this._context=null,this.opacity=1,this.alphaMode=a.None,this._blitConfiguration=new p,this._blitParameters=new n,this.produces=new Map([[s.BLIT,()=>null!=this._context]])}consumes(){return i}initializeRenderContext(t){this._context=t}uninitializeRenderContext(){this._context=null}destroy(){}renderNode(t,e,o,r){const i=o?.get("composite-color")?.getTexture();if(!this._context||!i)return r;const s=this._context.techniqueRepository.acquire(c,this._blitConfiguration);return s?.compiled?(t.rctx.bindFramebuffer(r?.fbo),this._blitParameters.texture=i,this._blitParameters.opacity=this.opacity,t.rctx.bindTechnique(s,t.bindParameters,this._blitParameters),t.rctx.screen.draw(),s.release(),r):(this._context.requestRender(),r)}};t([e()],m.prototype,"_context",void 0),t([e()],m.prototype,"opacity",void 0),t([e()],m.prototype,"alphaMode",void 0),m=t([o("esri.views.3d.webgl-engine.effects.blit.Blit")],m);export{m as Blit};
