/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{ShaderOutput as e}from"../ShaderOutput.js";import{TextureCoordinateAttributeType as r}from"../attributes/TextureCoordinateAttribute.glsl.js";import{VertexTextureCoordinates as t}from"../attributes/VertexTextureCoordinates.glsl.js";import{TextureAtlasLookup as o}from"../util/TextureAtlasLookup.glsl.js";import{glsl as u}from"../../shaderModules/interfaces.js";import{Texture2DDrawUniform as s}from"../../shaderModules/Texture2DDrawUniform.js";import{AlphaDiscardMode as a}from"../../../lib/basicInterfaces.js";function d(d,i){const l=d.fragment;if(i.hasColorTexture&&(i.output===e.Color||i.alphaDiscardMode!==a.Opaque)){d.include(t,i);const e=i.textureCoordinateType===r.Atlas;l.uniforms.add(new s("baseColorTexture",(e=>e.texture))),e?(d.include(o),l.code.add(u`vec4 readBaseColorTexture() {
return textureAtlasLookup(baseColorTexture, vuv0, vuvRegion);
}`)):l.code.add(u`vec4 readBaseColorTexture() {
return texture(baseColorTexture, vuv0);
}`)}else l.code.add(u`vec4 readBaseColorTexture() { return vec4(1.0); }`)}export{d as ReadBaseColorTexture};
