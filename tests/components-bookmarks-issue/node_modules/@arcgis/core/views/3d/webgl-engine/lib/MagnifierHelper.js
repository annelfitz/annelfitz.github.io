/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import s from"../../../../core/Accessor.js";import{createTask as t}from"../../../../core/asyncUtils.js";import r from"../../../../core/Evented.js";import{clamp as i}from"../../../../core/mathUtils.js";import{watch as a}from"../../../../core/reactiveUtils.js";import{createScreenPointArray as o,createRenderScreenPointArray as n,screenPointObjectToArray as l}from"../../../../core/screenUtils.js";import{isSVG as u}from"../../../../core/urlUtils.js";import{property as m}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{subclass as h}from"../../../../core/accessorSupport/decorators/subclass.js";import{requestImage as p}from"../../../../support/requestImageUtils.js";import{Pos2 as c}from"./DefaultVertexBufferLayouts.js";import{createQuadVAO as _}from"./glUtil3D.js";import{Program as g}from"./Program.js";import{VertexAttribute as d}from"./VertexAttribute.js";import{MagnifierPassParameters as f,build as v}from"../shaders/Magnifier.glsl.js";import{loadMagnifierResources as k}from"../../../magnifier/resources.js";import{PrimitiveType as T,BlendFactor as L,PixelFormat as S,TextureWrapMode as y}from"../../../webgl/enums.js";import{makePipelineState as P,simpleBlendingParams as j,defaultColorWriteParams as x}from"../../../webgl/renderState.js";import{Texture as R}from"../../../webgl/Texture.js";import{TextureDescriptor as b}from"../../../webgl/TextureDescriptor.js";let w=class extends s{constructor(){super(...arguments),this._magnifier=null,this._imageSources=null,this._imageLoadTask=null,this._resources=null,this._passParameters=new f,this.events=new r,this.attributeLocations=new Map([[d.POSITION,0]]),this._tmpScreenPoint=o(),this._tmpRenderPoint=n()}get updating(){return null==this._imageSources&&null!=this._imageLoadTask&&!this._imageLoadTask.task.finished}get magnifier(){return this._magnifier}set magnifier(e){if(e===this._magnifier)return;this.removeAllHandles(),this._magnifier=e;const s=()=>{this._updateResourceLoading(),this.events.emit("request-render")};null!=this._magnifier&&this.addHandles(a((()=>this._magnifier?.version),s)),s()}get enabled(){return null!=this._validMagnifier}get _validMagnifier(){return null!=this._magnifier&&this._magnifier.visible&&null!=this._magnifier.position&&this._magnifier.size>0?this._magnifier:null}get _factor(){return null!=this._magnifier&&this._magnifier.factor||1}destroy(){this._magnifier=null,null!=this._imageLoadTask&&(this._imageLoadTask.task.abort(),this._imageLoadTask=null),this._disposeResources()}render(e,s){const t=this._validMagnifier;if(null==t)return;const r=s.camera.pixelRatio,a=Math.ceil(r*t.size);if(this._updateResources(e,a),null==this._resources)return;const o=this._passParameters.textures,n=Math.ceil(1/this._factor*a);o.input.resize(n,n),l(t.position,this._tmpScreenPoint);const u=s.camera.screenToRender(this._tmpScreenPoint,this._tmpRenderPoint),m=s.camera.fullWidth,h=s.camera.fullHeight,p=.5*n,c=.5*n;u[0]=i(u[0],p,m-p-1),u[1]=i(u[1],c,h-c-1);const _=Math.floor(u[0]-p),g=Math.floor(u[1]-c),d=this._resources.program;d.bindTexture("textureInput",o.input),e.gl.copyTexImage2D(o.input.descriptor.target,0,o.input.descriptor.pixelFormat,_,g,n,n,0),this._passParameters.magnifier=t,e.useProgram(d),d.bindPass(this._passParameters,s),e.bindVAO(this._resources.vao),e.setPipelineState(this._resources.pipelineState),e.drawArrays(T.TRIANGLE_STRIP,0,4)}_updateResourceLoading(){const e=this._validMagnifier;if(null==e)return;const s=e.maskUrl,r=e.overlayUrl;null==this._imageLoadTask||this._imageLoadTask.maskUrl===s&&this._imageLoadTask.overlayUrl===r||(this._imageLoadTask.task.abort(),this._imageLoadTask=null,this._imageSources=null),null==this._imageSources&&null==this._imageLoadTask&&(this._imageLoadTask={maskUrl:s,overlayUrl:r,task:t((async e=>{const t=null==s||null==r?k(e):null,i=null!=s?p(s,{signal:e}):t.then((e=>e.mask)),a=null!=r?p(r,{signal:e}):t.then((e=>e.overlay));this._imageSources={mask:await i,overlay:await a},this._disposeResources(),this.events.emit("request-render")}))},this._imageLoadTask.task.promise.then((()=>this.notifyChange("updating")),(()=>this.notifyChange("updating"))))}_updateResources(e,s){if(!this.enabled)return void this._disposeResources();if(null!=this._resources){if(this._passParameters.textures.size!==s){const t=this._createTextureResources(e,s);if(null==t)return void this._disposeResources();A(this._passParameters.textures),this._passParameters.textures=t}return}const t=this._createTextureResources(e,s);null!=t&&(this._resources={program:this._createProgram(e),vao:_(e,c,this.attributeLocations,0,1),pipelineState:P({blending:j(L.ONE,L.ONE_MINUS_SRC_ALPHA),depthTest:null,depthWrite:null,colorWrite:x})},this._passParameters.textures=t)}_disposeResources(){null!=this._resources&&(A(this._passParameters.textures),this._resources.program.dispose(),this._resources.vao.dispose(),this._resources=null)}_createTextureResources(e,s){if(null==this._imageSources)return null;this._imageSources.overlay.width=s,this._imageSources.overlay.height=s,this._imageSources.mask.width=s,this._imageSources.mask.height=s;const t=new b;t.internalFormat=S.RGBA,t.wrapMode=y.CLAMP_TO_EDGE,t.flipped=!0,t.preMultiplyAlpha=!u(this._imageSources.overlay.src)||!e.driverTest.svgPremultipliesAlpha.result;const r=new R(e,t,this._imageSources.overlay);t.pixelFormat=t.internalFormat=S.ALPHA,t.preMultiplyAlpha=!1;const i=new R(e,t,this._imageSources.mask);t.pixelFormat=t.internalFormat=S.RGBA,t.flipped=!1;return{input:new R(e,t),mask:i,overlay:r,size:s}}_createProgram(e){return new g(e,v(),this.attributeLocations)}};function A(e){e.mask.dispose(),e.overlay.dispose(),e.input.dispose()}e([m()],w.prototype,"_imageSources",void 0),e([m()],w.prototype,"_imageLoadTask",void 0),e([m({readOnly:!0})],w.prototype,"updating",null),w=e([h("esri.views.3d.webgl-engine.lib.MagnifierHelper")],w);export{w as MagnifierHelper};
