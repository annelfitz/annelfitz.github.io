/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{glLayout as r}from"../../../support/buffer/glUtil.js";import{Default3D as t}from"../DefaultVertexAttributeLocations.js";import{GLMaterials as e}from"../GLMaterials.js";import{newIntersectorResult as s}from"../Intersector.js";import{IntersectorType as o,StoreResults as i}from"../IntersectorInterfaces.js";import{VertexArrayObject as a}from"../VertexArrayObject.js";import{LodTarget as n}from"./Intersector.js";import{BufferObject as m}from"../../../../webgl/BufferObject.js";import{Usage as l}from"../../../../webgl/enums.js";class u{constructor(s,o){const i=s.renderContext.rctx,n=o.geometry;this._materialRepository=s.materialRepository,n.material.setParameters({instancedDoublePrecision:!0});const u=n.material.createBufferWriter(),f=u.vertexBufferLayout,d=u.elementCount(n),p=f.createBuffer(d);u.write(null,null,n,p,0),this.geometry=n,this.material=n.material,this.glMaterials=new e(n.material,this._materialRepository),this.vertexBufferLayout=f,this.vbo=m.createVertex(i,l.STATIC_DRAW,p.buffer),this.vao=new a(i,t,{geometry:r(f)},{geometry:this.vbo}),this.vertexCount=d}destroy(){this.glMaterials.dispose(),this.vbo.dispose(),this.vao.dispose()}get boundingInfo(){return this.geometry.boundingInfo}get triangleCount(){return this.vertexCount/3}intersect(r,t,e,a,m,l,u,f){const d=this.geometry.id;this.material.intersect(this.geometry,r.transform.transform,r,e,a,((e,a,p,c,y)=>{if(e>=0){if(null!=t&&!t(r.rayBegin,r.rayEnd,e))return;const c=new n(l.layerUid,l.graphicUid(m),d,p,u,f);if((null==r.results.min.drapedLayerOrder||y>=r.results.min.drapedLayerOrder)&&(null==r.results.min.dist||e<r.results.min.dist)&&r.results.min.set(o.LOD,c,e,a,r.transform.transform,y),r.options.store!==i.MIN&&(null==r.results.max.drapedLayerOrder||y>=r.results.max.drapedLayerOrder)&&(null==r.results.max.dist||e>r.results.max.dist)&&r.results.max.set(o.LOD,c,e,a,r.transform.transform,y),r.options.store===i.ALL){const t=s(r.results.min.ray);t.set(o.LOD,c,e,a,r.transform.transform,y),r.results.all.push(t)}}}))}}export{u as LodComponentData};
