/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{neverReached as r}from"../../../../../../core/compilerUtils.js";import{create as o}from"../../../../../../core/libs/gl-matrix-2/factories/mat3f64.js";import{create as a}from"../../../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{NormalType as e,NormalAttribute as l}from"./NormalAttribute.glsl.js";import{VertexPosition as m,VertexPositionPassParameters as s,VertexPositionDrawParameters as t}from"./VertexPosition.glsl.js";import{glsl as i}from"../../shaderModules/interfaces.js";import{Matrix3DrawUniform as d}from"../../shaderModules/Matrix3DrawUniform.js";import{Matrix3PassUniform as c}from"../../shaderModules/Matrix3PassUniform.js";function n(o,a){switch(a.normalType){case e.Attribute:case e.Compressed:o.include(l,a),o.varyings.add("vNormalWorld","vec3"),o.varyings.add("vNormalView","vec3"),o.vertex.uniforms.add(new d("transformNormalGlobalFromModel",(r=>r.transformNormalGlobalFromModel)),new c("transformNormalViewFromGlobal",(r=>r.transformNormalViewFromGlobal))),o.vertex.code.add(i`void forwardNormal() {
vNormalWorld = transformNormalGlobalFromModel * normalModel();
vNormalView = transformNormalViewFromGlobal * vNormalWorld;
}`);break;case e.Ground:o.include(m,a),o.varyings.add("vNormalWorld","vec3"),o.vertex.code.add(i`
        void forwardNormal() {
          vNormalWorld = ${a.spherical?i`normalize(vPositionWorldCameraRelative);`:i`vec3(0.0, 0.0, 1.0);`}
        }
        `);break;case e.ScreenDerivative:o.vertex.code.add(i`void forwardNormal() {}`);break;default:r(a.normalType);case e.COUNT:}}class f extends s{constructor(){super(...arguments),this.transformNormalViewFromGlobal=o()}}class v extends t{constructor(){super(...arguments),this.transformNormalGlobalFromModel=o(),this.toMapSpace=a()}}export{n as VertexNormal,v as VertexNormalDrawParameters,f as VertexNormalPassParameters};
