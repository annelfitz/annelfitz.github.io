/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as s}from"../../../../../chunks/tslib.es6.js";import{getAssetUrl as e}from"../../../../../assets.js";import r from"../../../../../core/Accessor.js";import{createTask as t}from"../../../../../core/asyncUtils.js";import a from"../../../../../core/Logger.js";import{abortMaybe as o,disposeMaybe as i}from"../../../../../core/maybe.js";import{throwIfAborted as m}from"../../../../../core/promiseUtils.js";import{property as p}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/RandomLCG.js";import{subclass as c}from"../../../../../core/accessorSupport/decorators/subclass.js";import{requestImage as l}from"../../../../../support/requestImageUtils.js";import{NoParameters as n}from"../../core/shaderModules/interfaces.js";import{ResourceState as u}from"../../lib/basicInterfaces.js";import{PixelFormat as h,TextureSamplingMode as g}from"../../../../webgl/enums.js";import{Texture as d}from"../../../../webgl/Texture.js";import{TextureDescriptor as _}from"../../../../webgl/TextureDescriptor.js";let w=class extends r{constructor(){super(...arguments),this._passParameters=new f,this._resourcesTask=null}get passParameters(){return this._passParameters}destroy(){this._resourcesTask=o(this._resourcesTask),this._passParameters.waveNormal=i(this._passParameters.waveNormal),this._passParameters.wavePerturbation=i(this._passParameters.wavePerturbation)}get updating(){return!!this._resourcesTask&&!this._resourcesTask.finished}ensureResources(s){return this._resourcesTask||(this._resourcesTask=t((async r=>{await Promise.allSettled([this._loadImageResource(s,e("esri/images/materials/water/normals.jpg"),(s=>this._passParameters.waveNormal=s),r),this._loadImageResource(s,e("esri/images/materials/water/perturbation.jpg"),(s=>this._passParameters.wavePerturbation=s),r)])}))),this._resourcesTask.finished?u.LOADED:u.LOADING}async _loadImageResource(s,e,r,t){try{const a=await l(e,{signal:t});m(t);const o=new _(a.width,a.height);o.pixelFormat=h.RGB,o.samplingMode=g.LINEAR_MIPMAP_LINEAR,o.hasMipmap=!0,o.maxAnisotropy=8,r(new d(s,o,a))}catch(o){a.getLogger(this).error("Failed to load water material normal texture.",o)}}};s([p()],w.prototype,"_resourcesTask",void 0),s([p({type:Boolean,readOnly:!0})],w.prototype,"updating",null),w=s([c("esri.views.3d.webgl-engine.materials.internal.WaterTextureRepository")],w);class f extends n{}export{f as WaterTexturePassParameters,w as WaterTextureRepository};
