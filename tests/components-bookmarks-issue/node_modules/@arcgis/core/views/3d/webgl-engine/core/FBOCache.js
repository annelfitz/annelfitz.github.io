/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{ColorFormat as e,DepthFormat as t}from"../../webgl/formats.js";import{ManagedColorAttachment as a}from"../../webgl/ManagedColorAttachment.js";import{ManagedDepthAttachment as r}from"../../webgl/ManagedDepthAttachment.js";import h from"../../webgl/ManagedFBO.js";import{AttachmentType as c}from"../../webgl/ManagedFBObject.js";import{FBOPool as i}from"./FBOPool.js";import{PixelFormat as o,SizedPixelFormat as s,TextureWrapMode as n,PixelType as _,TextureSamplingMode as d,RenderbufferFormat as l}from"../../../webgl/enums.js";import{FramebufferObject as m}from"../../../webgl/FramebufferObject.js";import{Renderbuffer as p}from"../../../webgl/Renderbuffer.js";import{RenderbufferDescriptor as u}from"../../../webgl/RenderbufferDescriptor.js";import{Texture as w}from"../../../webgl/Texture.js";import{TextureDescriptor as E}from"../../../webgl/TextureDescriptor.js";class C{constructor(e){this.rctx=e,this._acquired=new Set,this._cache=new i(e.newCache,"FBOCache"),this._depthCache=new i(e.newCache,"DepthAttachmentCache"),this._colorCache=new i(e.newCache,"ColorAttachmentCache")}destroy(){this._cache.destroy(),this._depthCache.destroy(),this._colorCache.destroy()}clean(){this._cache.clean(),this._colorCache.clean(),this._depthCache.clean()}frameStart(){this._cache.frame(),this._colorCache.frame(),this._depthCache.frame(),this.debugCallback&&this.debugCallback()}frameEnd(){const e=this.debugCallback;e&&this._acquired.forEach((t=>t.type===c.FBO&&e(t.name,t.fbo)))}get usedMemory(){return Array.from(this._acquired.values()).reduce(((e,t)=>e+("getTexture"in t?t.getTexture()?.usedMemory??0:t.usedMemory)),this._cache.usedMemory+this._colorCache.usedMemory+this._depthCache.usedMemory)}set interactive(e){this._cache.interactive=this._colorCache.interactive=this._depthCache.interactive=e}acquire(a,r,c,i=e.RGBA){const o=T(i,a,r);let s=this._cache.pop(o);return s?(s.retain(),s.setName(c)):s=new h(o,c,new m(this.rctx,{...F[i],width:a,height:r}),(e=>{e??=t.DEPTH_STENCIL_TEXTURE;const a=this._acquireDepth(e,s.fbo.width,s.fbo.height,`${s.name} depth`);return s.attachDepth(a),a.release(),s}),((t,h)=>{h??=e.RGBA;const c=this._acquireColor(h,a,r,`${s.name} color ${t}`);return s.attachColor(c,t),c.release(),s}),(()=>{this.debugCallback&&this.debugCallback(s.name,s.fbo),this._acquired.delete(s),s.detachAll(),this._cache.put(s)})),this._trackHandle(s)}acquireDepth(e,t,a,r){return this._acquireDepth(e,t,a,r)}_acquireDepth(e,a,h,c){const i=T(e,a,h),o=this._depthCache.pop(i);if(o)return o.retain(),o.name=c,this._trackHandle(o);const s=e===t.DEPTH_STENCIL_TEXTURE?new r(i,new w(this.rctx,{...x[e],width:a,height:h}),(()=>{this._acquired.delete(s),this._depthCache.put(s)})):new r(i,new p(this.rctx,{...x[e],width:a,height:h}),(()=>{this._acquired.delete(s),this._depthCache.put(s)}));return s.name=c,this._trackHandle(s)}_acquireColor(e,t,r,h){const c=T(e,t,r),i=this._colorCache.pop(c);if(i)return i.retain(),i.name=h,this._trackHandle(i);const o=new a(c,new w(this.rctx,{...F[e],width:t,height:r}),(()=>{this._acquired.delete(o),this._colorCache.put(o)}));return o.name=h,this._trackHandle(o)}_trackHandle(e){return this._acquired.add(e),e}}function T(e,t,a){return`${e}x${t}x${a}`}const f=new E;f.pixelFormat=o.RED,f.internalFormat=s.R8,f.wrapMode=n.CLAMP_TO_EDGE;const g=new E;g.pixelFormat=o.RG,g.internalFormat=s.RG8,g.wrapMode=n.CLAMP_TO_EDGE;const A=new E;A.internalFormat=s.RGBA4,A.dataType=_.UNSIGNED_SHORT_4_4_4_4,A.wrapMode=n.CLAMP_TO_EDGE;const M=new E;M.wrapMode=n.CLAMP_TO_EDGE;const b=new E;b.wrapMode=n.CLAMP_TO_EDGE,b.samplingMode=d.LINEAR_MIPMAP_LINEAR,b.hasMipmap=!0,b.maxAnisotropy=8;const R=new E;R.pixelFormat=o.RED,R.dataType=_.HALF_FLOAT,R.internalFormat=s.R16F,R.samplingMode=d.NEAREST;const D=new E;D.dataType=_.HALF_FLOAT,D.internalFormat=s.RGBA16F,D.samplingMode=d.NEAREST;const F={[e.RED]:f,[e.RG]:g,[e.RGBA4]:A,[e.RGBA]:M,[e.RGBA_MIPMAP]:b,[e.R16F]:R,[e.RGBA16F]:D},G=new E;G.pixelFormat=o.DEPTH_STENCIL,G.dataType=_.UNSIGNED_INT_24_8,G.samplingMode=d.NEAREST,G.wrapMode=n.CLAMP_TO_EDGE;const x={[t.DEPTH_STENCIL_TEXTURE]:G,[t.DEPTH16_BUFFER]:new u(l.DEPTH_COMPONENT16,4)};export{C as FBOCache};
