/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{ReadLinearDepth as e}from"../output/ReadDepth.glsl.js";import{Float2PassUniform as r}from"../../shaderModules/Float2PassUniform.js";import{glsl as t}from"../../shaderModules/interfaces.js";import{Texture2DPassUniform as a}from"../../shaderModules/Texture2DPassUniform.js";function o(o,n){if(!n.multipassEnabled)return;o.fragment.include(e),o.fragment.uniforms.add(new a("terrainDepthTexture",((e,r)=>r.multipassTerrain.linearDepth?.getTexture())),new r("nearFar",((e,r)=>r.camera.nearFar)));const s=n.occlusionPass;o.fragment.code.add(t`
   ${s?"bool":"void"} terrainDepthTest(float fragmentDepth) {
      vec4 data = texelFetch(terrainDepthTexture, ivec2(gl_FragCoord.xy), 0);
      float linearDepth = linearDepthFromRGBA(data, nearFar);
      ${s?t`return fragmentDepth < linearDepth && data != vec4(0.0, 0.0, 0.0, 1.0);`:t`
          if(fragmentDepth ${n.cullAboveGround?">":"<="} linearDepth){
            discard;
          }`}
    }`)}class n{constructor(){this.cullAboveGround=!1}}export{n as MultipassTerrainUniforms,o as multipassTerrainTest};
