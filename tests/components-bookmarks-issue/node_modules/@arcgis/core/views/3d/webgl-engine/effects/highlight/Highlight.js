/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import{unitRGBAFromColor as t}from"../../../../../core/colorUtils.js";import has from"../../../../../core/has.js";import{releaseMaybe as r,disposeMaybe as i}from"../../../../../core/maybe.js";import{watch as s,syncAndInitial as o}from"../../../../../core/reactiveUtils.js";import{property as a}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/Logger.js";import"../../../../../core/RandomLCG.js";import{subclass as h}from"../../../../../core/accessorSupport/decorators/subclass.js";import{set as l}from"../../../../../core/libs/gl-matrix-2/math/vec2.js";import{ColorFormat as n}from"../../../webgl/formats.js";import{SyncRenderPlugin as c,ConsumesHighlight as u}from"../RenderPlugin.js";import{HighlightApplyTechnique as p}from"./HighlightApplyTechnique.js";import{HighlightBlurTechnique as m}from"./HighlightBlurTechnique.js";import{defaultColor as g,defaultHaloOpacity as _,defaultFillOpacity as d}from"./HighlightDefaults.js";import{HighlightDownsampleTechnique as b}from"./HighlightDownsampleTechnique.js";import{HighlightPassParameters as f}from"./HighlightPassParameters.js";import{Default3D as w}from"../../lib/DefaultVertexAttributeLocations.js";import{Pos2Tex as T}from"../../lib/DefaultVertexBufferLayouts.js";import{RenderSlot as x}from"../../lib/RenderSlot.js";import{VertexArrayObject as v}from"../../lib/VertexArrayObject.js";import{H as q}from"../../../../../chunks/HighlightBlur.glsl.js";import{H as P,g as y}from"../../../../../chunks/HighlightDownsample.glsl.js";import{BufferObject as C}from"../../../../webgl/BufferObject.js";import{ClearBufferBit as j,Usage as R}from"../../../../webgl/enums.js";import{vertexCount as O}from"../../../../webgl/Util.js";let D=class extends c{constructor(e){super(e),this._context=null,this._passParameters=new f,this._downsampleDrawParameters=new P,this._blurDrawParameters=new q,this._blurColorFormat=has("mac")?n.RGBA:n.RGBA4,this._grid={coverage:null,vao:null,verticalCellCount:0,horizontalCellCount:0,viewportWidth:0,viewportHeight:0},this.produces=new Map([[x.HIGHLIGHT,()=>!0]])}consumes(){return u}initializeRenderContext(e){this._context=e,null==this._blurTechnique&&(this._blurTechnique=this._context.techniqueRepository.acquire(m)),null==this._downsampleTechnique&&(this._downsampleTechnique=this._context.techniqueRepository.acquire(b)),null==this._applyTechnique&&(this._applyTechnique=this._context.techniqueRepository.acquire(p)),this.addHandles([s((()=>this.view.highlightOptions.color),(e=>{this._passParameters.color=t(e??g),this.view.highlightOptions.haloColor||(this._passParameters.haloColor=this._passParameters.color),this._context.requestRender()}),o),s((()=>this.view.highlightOptions.haloColor),(e=>{this._passParameters.haloColor=null!=e?t(e):this._passParameters.color,this._context.requestRender()}),o),s((()=>this.view.highlightOptions.haloOpacity),(e=>{this._passParameters.haloOpacity=e??_,this._passParameters.haloOpacityOccluded=.25*this._passParameters.haloOpacity,this._context.requestRender()}),o),s((()=>this.view.highlightOptions.fillOpacity),(e=>{this._passParameters.fillOpacity=e??d,this._passParameters.fillOpacityOccluded=.25*this._passParameters.fillOpacity,this._context.requestRender()}),o)])}uninitializeRenderContext(){this._context=null}dispose(){this._blurTechnique=r(this._blurTechnique),this._downsampleTechnique=r(this._downsampleTechnique),this._applyTechnique=r(this._applyTechnique),this._grid.coverage=r(this._grid.coverage),this._grid.vao=i(this._grid.vao)}renderNode(e,t,r,i){const s=r?.get("highlights")?.getTexture();if(!this._context||!s)return;if(!(this._blurTechnique.compiled&&this._downsampleTechnique.compiled&&this._applyTechnique.compiled))return void this._context.requestRender();const o=e.bindParameters.camera,a=o.fullWidth,h=o.fullHeight,n=o.pixelRatio,c=Math.ceil(a/n),u=Math.ceil(h/n),p=this._context.fbos,m=p.rctx;this._gridUpdateResources(s),this._gridComputeCoverage(s,e.bindParameters),this._passParameters.highlightTexture=s,this._passParameters.coverageTexture=this._grid.coverage?.getTexture();const{width:g,height:_}=s.descriptor;l(this._passParameters.coverageRounding,g/(Math.ceil(g/y)*y),_/(Math.ceil(_/y)*y));const d=this._grid.vao;m.bindVAO(d);const b=p.acquire(c,u,"highlight blur",this._blurColorFormat);m.unbindTexture(b.fbo.colorTexture),m.bindFramebuffer(b.fbo),m.setClearColor(0,0,0,0),m.clear(j.COLOR_BUFFER_BIT),m.setViewport(0,0,c,u),this._blurDrawParameters.blurInputTexture=s,l(this._blurDrawParameters.blurSize,1/c,0);const f=m.bindTechnique(this._blurTechnique,e.bindParameters,this._passParameters,this._blurDrawParameters);m.drawArrays(this._blurTechnique.primitiveType,0,O(d,"geometry"));const w=p.acquire(c,u,"highlight blur",this._blurColorFormat);m.unbindTexture(w.fbo.colorTexture),m.bindFramebuffer(w.fbo),m.setClearColor(0,0,0,0),m.clear(j.COLOR_BUFFER_BIT),this._blurDrawParameters.blurInputTexture=b.getTexture(),l(this._blurDrawParameters.blurSize,0,1/u),f.bindDraw(this._blurDrawParameters,e.bindParameters,this._passParameters),m.drawArrays(this._blurTechnique.primitiveType,0,O(d,"geometry")),m.bindFramebuffer(i?.fbo),m.setViewport4fv(o.fullViewport),this._passParameters.blurTexture=w.getTexture(),m.bindTechnique(this._applyTechnique,e.bindParameters,this._passParameters),m.drawArrays(this._applyTechnique.primitiveType,0,O(d,"geometry")),b.release(),w.release()}_gridUpdateResources(e){if(!this._context)return;const t=this._context.fbos.rctx,r=this._grid,i=Math.ceil(e.descriptor.height/y),s=Math.ceil(e.descriptor.width/y);if(r.vao&&r.verticalCellCount===i&&r.horizontalCellCount===s)return;r.verticalCellCount=i,r.horizontalCellCount=s;const o=i+1,a=s+1,h=1/i,l=1/s,n=new Float32Array(6*4*o*a);let c=0;for(let u=0;u<o;u++)for(let e=0;e<a;e++)n[c++]=(e-.5)*l*2-1,n[c++]=(u-.5)*h*2-1,n[c++]=e*l,n[c++]=u*h,n[c++]=(e+.5)*l*2-1,n[c++]=(u-.5)*h*2-1,n[c++]=e*l,n[c++]=u*h,n[c++]=(e-.5)*l*2-1,n[c++]=(u+.5)*h*2-1,n[c++]=e*l,n[c++]=u*h,n[c++]=(e-.5)*l*2-1,n[c++]=(u+.5)*h*2-1,n[c++]=e*l,n[c++]=u*h,n[c++]=(e+.5)*l*2-1,n[c++]=(u-.5)*h*2-1,n[c++]=e*l,n[c++]=u*h,n[c++]=(e+.5)*l*2-1,n[c++]=(u+.5)*h*2-1,n[c++]=e*l,n[c++]=u*h;r.vao?.dispose(),r.vao=new v(t,w,{geometry:T},{geometry:C.createVertex(t,R.STATIC_DRAW,n)})}_gridComputeCoverage(e,t){if(!this._context)return;const r=this._context.fbos.rctx,i=this._grid,s=e.descriptor,o=Math.ceil(s.width/y),a=Math.ceil(s.height/y);this._downsampleDrawParameters.input=e,i.coverage?.release(),i.coverage=this._context.fbos.acquire(o,a,"highlight coverage",n.RG),r.unbindTexture(i.coverage.fbo.colorTexture),r.bindFramebuffer(i.coverage.fbo),r.bindTechnique(this._downsampleTechnique,t,this._passParameters,this._downsampleDrawParameters),r.setViewport(0,0,o,a),r.screen.draw()}get test(){return{coverage:this._grid.coverage}}};e([a()],D.prototype,"_context",void 0),e([a()],D.prototype,"view",void 0),D=e([h("esri.views.3d.webgl-engine.effects.highlight.Highlight")],D);export{D as Highlight};
