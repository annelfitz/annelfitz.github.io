/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{ZEROS as o}from"../../../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{LayerBlendMode as r}from"../output/BlendOptions.js";import{BackgroundGrid as e}from"./BackgroundGrid.glsl.js";import{BlendModes as t}from"../util/BlendModes.glsl.js";import{Float3PassUniform as a}from"../../shaderModules/Float3PassUniform.js";import{FloatPassUniform as c}from"../../shaderModules/FloatPassUniform.js";import{NoParameters as i,glsl as s}from"../../shaderModules/interfaces.js";import{Texture2DPassUniform as l}from"../../shaderModules/Texture2DPassUniform.js";var u,n,d;!function(o){o[o.Composite=0]="Composite",o[o.ColorComposite=1]="ColorComposite",o[o.GridComposite=2]="GridComposite",o[o.GroupBackgroundComposite=3]="GroupBackgroundComposite",o[o.COUNT=4]="COUNT"}(u||(u={})),function(o){o[o.NotRequired=0]="NotRequired",o[o.Required=1]="Required",o[o.COUNT=2]="COUNT"}(n||(n={})),function(o){o[o.Off=0]="Off",o[o.On=1]="On",o[o.COUNT=2]="COUNT"}(d||(d={}));class p extends i{constructor(){super(...arguments),this.baseOpacity=1,this.backgroundColor=o,this.fboTexture=null}}function m(o,i){const p=i.output===u.GridComposite,m=i.output===u.ColorComposite,f=i.output===u.GroupBackgroundComposite,C=i.output===u.Composite;p&&o.fragment.include(e),m&&o.fragment.uniforms.add(new a("backgroundColor",(o=>o.backgroundColor)));const g=i.baseOpacityMode===n.Required;g&&o.fragment.uniforms.add(new c("baseOpacity",(o=>o.baseOpacity))),C&&o.fragment.uniforms.add(new l("fboColor",(o=>o.fboTexture)));const b=i.blendMode!==r.Normal,y=i.premultipliedSource===d.On;o.fragment.include(t,i),o.fragment.code.add(s`
    vec4 getBackground(vec2 uv) {
      return ${g?s`baseOpacity *`:""} ${f?s`vec4(0.0, 0.0, 0.0, 0.0)`:m?s`vec4(backgroundColor, 1.0)`:p?s`vec4(gridColor(uv), 1.0)`:s`texelFetch(fboColor, ivec2(gl_FragCoord.xy), 0)`};
    }

    vec4 blendLayers(vec4 bgColor, vec4 colorLayer, float opacity) {
      ${b?s`
          vec3 cl = colorLayer.a == 0.0 ? colorLayer.rgb : colorLayer.rgb / colorLayer.a;
          vec3 cb = bgColor.a == 0.0 ? bgColor.rgb : bgColor.rgb / bgColor.a;
          return applyBlendMode(clamp(cl, vec3(0.0), vec3(1.0)), colorLayer.a * opacity, cb, bgColor.a);`:s`
          float composeAlpha = colorLayer.a * opacity;
          return ${!y&&(C&&!g||f)?s`colorLayer * opacity;`:s`bgColor * (1.0 - composeAlpha) + colorLayer * opacity;`}`}
    }`)}export{n as BaseOpacityMode,u as BlendLayersOutput,d as PremultipliedAlphaSource,m as TileBackground,p as TileBackgroundPassParameters};
