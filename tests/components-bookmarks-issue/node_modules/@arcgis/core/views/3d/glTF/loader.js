/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../../core/Logger.js";import{clone as t}from"../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{makeMaterialParameters as o,makeTextureSource as r}from"./LoaderResult.js";import{GLTFResource as s}from"./internal/Resource.js";import{TextureSamplingMode as a,PrimitiveType as i}from"../../webgl/enums.js";let n=0;async function l(o,r,a={},l=!0){const m=await s.load(o,r,a),p="gltf_"+n++,T={lods:[],materials:new Map,textures:new Map,meta:u(m)},f=!(!m.json.asset.extras||"symbolResource"!==m.json.asset.extras.ESRI_type),x=m.json.asset.extras?.ESRI_webstyleSymbol?.webstyle,g=new Map;await c(m,(async(o,r,s,n)=>{const u=g.get(s)??0;g.set(s,u+1);const c=void 0!==o.mode?o.mode:i.TRIANGLES,f=c===i.TRIANGLES||c===i.TRIANGLE_STRIP||c===i.TRIANGLE_FAN?c:null;if(null==f)return void e.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] Unsupported primitive mode ("+i[c]+"). Skipping primitive.");if(!m.hasPositions(o))return void e.getLogger("esri.views.3d.glTF").warn("Skipping primitive without POSITION vertex attribute.");const x=m.getPositionData(o,a),h=m.getMaterial(o,a,l),w=m.hasNormals(o)?m.getNormalData(o,a):null,v=m.hasTangents(o)?m.getTangentData(o,a):null,S=m.hasTextureCoordinates(o)?m.getTextureCoordinates(o,a):null,R=m.hasVertexColors(o)?m.getVertexColors(o,a):null,_=m.getIndexData(o,a),E={name:n,transform:t(r),attributes:{position:await x,normal:w?await w:null,texCoord0:S?await S:null,color:R?await R:null,tangent:v?await v:null},indices:await _,primitiveType:f,material:d(T,await h,p)};let I=null;null!=T.meta?.ESRI_lod&&"screenSpaceRadius"===T.meta.ESRI_lod.metric&&(I=T.meta.ESRI_lod.thresholds[s]),T.lods[s]=T.lods[s]||{parts:[],name:n,lodThreshold:I},T.lods[s].parts[u]=E}));for(const e of T.lods)e.parts=e.parts.filter((e=>!!e));const h=await m.getLoadedBuffersSize();return{model:T,meta:{isEsriSymbolResource:f,uri:m.uri,ESRI_webstyle:x},customMeta:{},size:h}}function u(e){const t=e.json;let o=null;return t.nodes.forEach((e=>{const t=e.extras;null!=t&&(t.ESRI_proxyEllipsoid||t.ESRI_lod)&&(o=t)})),o}async function c(t,o){const r=t.json,s=r.scenes[r.scene||0].nodes,a=s.length>1,i=[];for(const e of s){const t=r.nodes[e];if(i.push(n(e,0)),m(t)&&!a){t.extensions.MSFT_lod.ids.forEach(((e,t)=>n(e,t+1)))}}async function n(s,a){const l=r.nodes[s],u=t.getNodeTransform(s);if(null!=l.weights&&e.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] Morph targets are not supported."),null!=l.mesh){const e=r.meshes[l.mesh];for(const t of e.primitives)i.push(o(t,u,a,e.name))}for(const e of l.children||[])i.push(n(e,a))}await Promise.all(i)}function m(e){return e.extensions?.MSFT_lod&&Array.isArray(e.extensions.MSFT_lod.ids)}function d(e,t,s){const a=t=>{const o=`${s}_tex_${t&&t.id}${t?.name?"_"+t.name:""}`;if(t&&!e.textures.has(o)){const s=r(t.data,{wrap:{s:t.wrapS,t:t.wrapT},mipmap:p.has(t.minFilter),noUnpackFlip:!0});e.textures.set(o,s)}return o},i=`${s}_mat_${t.id}_${t.name}`;if(!e.materials.has(i)){const r=o({color:[t.color[0],t.color[1],t.color[2]],opacity:t.color[3],alphaMode:t.alphaMode,alphaCutoff:t.alphaCutoff,doubleSided:t.doubleSided,colorMixMode:t.ESRI_externalColorMixMode,textureColor:t.colorTexture?a(t.colorTexture):void 0,textureNormal:t.normalTexture?a(t.normalTexture):void 0,textureOcclusion:t.occlusionTexture?a(t.occlusionTexture):void 0,textureEmissive:t.emissiveTexture?a(t.emissiveTexture):void 0,textureMetallicRoughness:t.metallicRoughnessTexture?a(t.metallicRoughnessTexture):void 0,emissiveFactor:[t.emissiveFactor[0],t.emissiveFactor[1],t.emissiveFactor[2]],colorTextureTransform:t.colorTextureTransform,normalTextureTransform:t.normalTextureTransform,occlusionTextureTransform:t.occlusionTextureTransform,emissiveTextureTransform:t.emissiveTextureTransform,metallicRoughnessTextureTransform:t.metallicRoughnessTextureTransform,metallicFactor:t.metallicFactor,roughnessFactor:t.roughnessFactor,receiveShadows:t.receiveShadows,receiveAmbientOcclustion:t.receiveAmbientOcclusion});e.materials.set(i,r)}return i}const p=new Set([a.LINEAR_MIPMAP_LINEAR,a.LINEAR_MIPMAP_NEAREST]);export{l as loadGLTF};
