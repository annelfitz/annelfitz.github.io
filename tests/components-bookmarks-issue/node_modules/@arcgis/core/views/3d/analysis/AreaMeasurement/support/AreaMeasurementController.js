/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import a from"../../../../../core/Accessor.js";import{watch as e,sync as s}from"../../../../../core/reactiveUtils.js";import{property as r}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/Logger.js";import"../../../../../core/RandomLCG.js";import{subclass as o}from"../../../../../core/accessorSupport/decorators/subclass.js";import{MeasurementDataManager as i}from"./MeasurementData.js";let n=class extends a{constructor(t){super(t)}initialize(){this._measurementDataManager=new i(this.view),this.addHandles([this.analysisViewData.path.on("change",(()=>this._update())),e((()=>this.analysisViewData.stagedPoint),(()=>this._update()),s),e((()=>this.analysisViewData.mode),(()=>this._update()),s)]),this._update()}_update(t=!1){const{analysisViewData:a,view:e}=this,s={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(a.path,a.stagedPoint,e,s,a.mode,t)&&(a.measurementData=this._measurementDataManager.getData())}};t([r({constructOnly:!0})],n.prototype,"view",void 0),t([r({constructOnly:!0})],n.prototype,"analysis",void 0),t([r({constructOnly:!0})],n.prototype,"analysisViewData",void 0),n=t([o("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],n);export{n as AreaMeasurementController};
