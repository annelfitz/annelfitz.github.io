/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import i from"../../../../core/Logger.js";import{watch as o,syncAndInitial as r}from"../../../../core/reactiveUtils.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/RandomLCG.js";import{subclass as n}from"../../../../core/accessorSupport/decorators/subclass.js";import{MeasurementMode as a}from"../interfaces.js";import{applyProjectionAndElevationAlignment as l,logFailedGeometryProjectionError as c}from"../support/projectionUtils.js";import{euclideanDistanceBetweenPoints as p}from"../../../support/euclideanLengthMeasurementUtils.js";import{geodesicDistanceBetweenPoints as u}from"../../../support/geodesicLengthMeasurementUtils.js";import{geodesicDistanceThreshold as d}from"../../../support/geodesicMeasurementUtils.js";let m=class extends t{constructor(e){super(e)}initialize(){this.addHandles([o((()=>({viewData:this.viewData,startPoint:this.analysis.startPoint})),(({viewData:e,startPoint:t})=>{e.elevationAlignedStartPoint=this._applyProjectionAndElevationAlignment(t)}),r),o((()=>({viewData:this.viewData,endPoint:this.analysis.endPoint})),(({viewData:e,endPoint:t})=>{e.elevationAlignedEndPoint=this._applyProjectionAndElevationAlignment(t)}),r),o((()=>({result:this._computedResult,viewData:this.viewData})),(({result:e,viewData:t})=>{t.result=e}),r)])}_applyProjectionAndElevationAlignment(e){if(null==e)return e;const{spatialReference:t,elevationProvider:o}=this.view,r=l(e,t,o);return r??(c(this.analysis,e.spatialReference,i.getLogger(this)),null)}get _computedResult(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,measurementMode:i}=this.viewData;if(null==e||null==t)return null;const o=p(e,t),r=u(e,t);if(null==o)return null;let s,n;switch(i){case a.Auto:n=null!=r?"geodesic":"euclidean",s=r??o.horizontal;break;case a.Geodesic:if(null==r)return null;n="geodesic",s=r;break;case a.Euclidean:n="euclidean",s=o.horizontal}return{mode:n,directDistance:o.direct,horizontalDistance:s,verticalDistance:o.vertical,distance:i===a.Euclidean||o.horizontal.value<=d?o.direct:r??o.horizontal}}};e([s()],m.prototype,"view",void 0),e([s()],m.prototype,"analysis",void 0),e([s()],m.prototype,"viewData",void 0),e([s()],m.prototype,"_computedResult",null),m=e([n("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],m);export{m as DirectLineMeasurementController};
