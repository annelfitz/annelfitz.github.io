/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../Color.js";import i from"../../../core/Accessor.js";import{difference as r}from"../../../core/arrayUtils.js";import s from"../../../core/CollectionFlattener.js";import a from"../../../core/Evented.js";import n from"../../../core/Logger.js";import{clamp as l}from"../../../core/mathUtils.js";import{releaseMaybe as o,destroyMaybe as h}from"../../../core/maybe.js";import{MemCachePool as d}from"../../../core/MemCachePool.js";import p from"../../../core/ObjectPool.js";import u from"../../../core/PooledArray.js";import{throwIfAborted as c,isAbortError as g,isAborted as _,createAbortError as m}from"../../../core/promiseUtils.js";import{watch as f,syncAndInitial as T,sync as y,initial as v}from"../../../core/reactiveUtils.js";import{property as E}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import{subclass as S}from"../../../core/accessorSupport/decorators/subclass.js";import{multiply as w}from"../../../core/libs/gl-matrix-2/math/mat4.js";import{create as L}from"../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{s as P,c as b}from"../../../chunks/vec32.js";import{create as C}from"../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{UpdatingHandles as D}from"../../../core/support/UpdatingHandles.js";import{getReferenceEllipsoid as j}from"../../../geometry/ellipsoidUtils.js";import M from"../../../geometry/SpatialReference.js";import{createEmptyProjectorCache as x,getProjector as U}from"../../../geometry/projection/projectors.js";import{projectPointToVector as R}from"../../../geometry/projection/projectPointToVector.js";import{projectVectorToVector as A}from"../../../geometry/projection/projectVectorToVector.js";import{create as I,equals as B,intersection as V,intersectsSphere as k,empty as O,expand as N}from"../../../geometry/support/aaBoundingRect.js";import{create as G,copy as q}from"../../../geometry/support/frustum.js";import{isPlateCarree as F}from"../../../geometry/support/spatialReferenceUtils.js";import{a as W,g as H,c as $}from"../../../chunks/sphere.js";import{isRefreshableLayer as Q}from"../../../layers/mixins/RefreshableLayer.js";import{ElevationQueryTileCache as z}from"../../../layers/support/ElevationQueryTileCache.js";import{ElevationTileData as X}from"../../../layers/support/ElevationTileData.js";import{isBaseLayer as Y}from"../../../layers/support/layerUtils.js";import{acquireDecoder as K}from"../../../layers/support/LercDecoder.js";import{printAllocations as J}from"../../2d/engine/vectorTiles/VectorTile.js";import{directionToHeadingTilt as Z}from"../support/cameraUtils.js";import{debugFlags as ee}from"../support/debugFlags.js";import{ElevationRange as te}from"../support/ElevationRange.js";import{ElevationUpdateEvent as ie}from"../support/ElevationUpdateEvent.js";import{toBoundingRect as re}from"../support/extentUtils.js";import{ClientType as se}from"../support/index.js";import{updatingProgress as ae}from"../support/updatingProperties.js";import{ElevationBounds as ne}from"./ElevationBounds.js";import{ElevationData as le,sampleElevation as oe}from"./ElevationData.js";import{create as he}from"./ExtentHelper.js";import{LODSnapping as de,TextureUpdate as pe}from"./interfaces.js";import{LayerClass as ue,LayerClasses as ce}from"./LayerClass.js";import{OverlayManager as ge}from"./OverlayManager.js";import{PlanarPatch as _e}from"./PlanarPatch.js";import{RenderOrder as me}from"./RenderOrder.js";import{ScaleRangeQueries as fe}from"./ScaleRangeQueries.js";import{SphericalPatch as Te}from"./SphericalPatch.js";import{SplitLimits as ye}from"./SplitLimits.js";import{maxRootTiles as ve,tooManyRootTilesAfterChangeError as Ee,tooManyRootTilesForLayerError as Se,maxTileNeighborLevelDelta as we,maxMemoryLodBias as Le,elevationNodataValue as Pe}from"./TerrainConst.js";import{TerrainRenderer as be,TransparencyMode as Ce}from"./TerrainRenderer.js";import De from"./TerrainSurfacePerformanceInfo.js";import{weakAssert as je,isVectorTileLayerView as Me,neighborEdgeIndices as xe,internalAssert as Ue,oppositeEdge as Re,isSurfaceLayerView as Ae,isGroupLayerView as Ie,isMapTileLayerView as Be,isBlendableLayerView as Ve,isElevationLayerView as ke,useFetchTileForLayer as Oe,isImageryTileLayerView as Ne,isTileLayerView as Ge,releaseTileData as qe,enableTerrainInternalChecks as Fe,neighborCornerIndices as We,oppositeCorner as He,enableWaterproofnessTests as $e,enableInternalTerrainChecks as Qe,enableTerrainWaterproofnessChecks as ze}from"./terrainUtils.js";import{Tile as Xe,lijEquals as Ye}from"./Tile.js";import{printAllocations as Ke}from"./TilePerLayerInfo.js";import{TileUpdate as Je}from"./TileUpdate.js";import{IteratorPreorder as Ze,IteratorPostorder as et,compareTilesByLij as tt,hasLoadableSiblings as it,sortTilesByPOI as rt,sortTiles as st}from"./tileUtils.js";import{TilingSchemeLogic as at}from"./TilingSchemeLogic.js";import{UpsampleInfo as nt}from"./UpsampleInfo.js";import{isCompositeBlendMode as lt,blendModeFromString as ot}from"../webgl-engine/core/shaderLibrary/output/BlendOptions.js";import{PBRMode as ht}from"../webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{RenderRequestType as dt}from"../webgl-engine/lib/basicInterfaces.js";import{RenderState as pt}from"../../support/RenderState.js";import{ImmediateTask as ut,TaskPriority as ct,noBudget as gt}from"../../support/Scheduler.js";import{Yield as _t}from"../../support/Yield.js";var mt;let ft=mt=class extends(a.EventedMixin(i)){constructor(e){super(e),this._scaleRangeQueries=new fe,this._iteratorPool=new p(Ze,(e=>e.remove=()=>this._iteratorPool.release(e))),this._postorderIterator=new et,this._hasPendingUpdates=!1,this._pendingUpdates=0,this._asyncWorkItems=0,this._allTilesDirty=!0,this._allTilesSorted=!0,this._usedMemory=null,this._performanceInfo=new De,this._viewChanged=!1,this._inFrameTask=!1,this._viewChangeUpdateDirty=!1,this._eyePosRenderSR=C(),this._eyePosSurfaceSR=C(),this._splitLimits=new ye,this._frustum=G(),this._viewProjectionMatrix=L(),this._layerViews=[new Array,new Array],this._layerIndexByUid=[new Map,new Map],this._basemapLayerViewHandles=new Map,this._watchUpdatingTracking=new D,this._frameTask=ut,this._allTiles=new u,this._upsampleInfoPool=new p(nt),this._shouldEmitChangeEvent=!1,this._rootTilesExtent=I(),this.updatingProgress=.5,this._maxNumUpdating=1,this.maxTextureScale=1.2,this._spatialReference=M.WebMercator,this._elevationProjectorCache=new Map,this.visibleElevationBounds=new ne(1/0,-1/0),this.rootTileElevationBounds=new ne(1/0,-1/0),this._sebProjectorMap=new Map,this._sebProjectorCache=x(),this._tilingSchemeSpatialReference=null,this._updatingRootTiles=!1,this._pendingTilesForElevationUpdateEvent=new Set,this._pendingTilesToUpdate=new Set,this.totalGeometryUpdates=0,this.totalTileUpdates=0,this._oneBatchPerFrameTask=!0,this._layerViewsDirty=!1,this.unloadedMemory=0,this.ignoresMemoryFactor=!1,this._isWebMercator=!1,this._isWebMercatorOnPlateCarree=!1,this.overlayManager=new ge({...e,surface:this}),this._isGlobal=!e.view?.state?.isLocal,this._isGeographic=this._spatialReference?.isGeographic??!1,this._tileConstructor=this._isGlobal?Te:_e}initialize(){const e=this.view,t=e.resourceController;this._lercDecoder=K(t);const i=t.memoryController;this._tileCache=new d(((e,t)=>i.newCache(e,t)),"terrain-tile"),this._upsampleMapCache=i.newCache("terrain-upsample",(e=>e.unloadMapData())),this._elevationQueryCache=new z(i.newCache("elevation-query"));const r=this.overlayManager;this._renderer=new be(r.renderer,e._stage,this._allTiles,j(e.spatialReference).radius,i),this.addHandles([f((()=>r.renderer.isEmpty),(()=>this._evaluateTransparency())),f((()=>this.renderer.visible),(e=>this.suspended=!e))],"overlayManager"),this.addHandles([f((()=>this.baseOpacity),(()=>{this._handleLayerViewChanges(),this._updateTileTextures(this._evaluateTransparency()?pe.UNFADED:pe.IMMEDIATE)}),T),f((()=>this.hasCompositeBlendMode),(()=>this._updateTileTextures(this._evaluateTransparency()?pe.UNFADED:pe.IMMEDIATE)),T),f((()=>this.backgroundColor),((e,t)=>{e?.equals(t)||(this._handleLayerViewChanges(),this._renderer.updateTileBackground(e))}),y),f((()=>this.snapLevel),(()=>this._viewChanged=!0),y),f((()=>this.view.pointsOfInterest),(e=>{this._renderer.pointsOfInterest=e,this._watchUpdatingTracking.removeAll(),e&&this._watchUpdatingTracking.add((()=>e.focus.renderLocation),(()=>this._allTilesSorted=!1))})),f((()=>ee.TERRAIN_TILE_TREE_SHOW_TILES),(t=>{t&&!this._treeDebugger?import("../layers/support/TerrainTileTree3DDebugger.js").then((({TerrainTileTree3DDebugger:t})=>{!this._treeDebugger&&ee.TERRAIN_TILE_TREE_SHOW_TILES&&(this._treeDebugger=new t({view:e}))})):t||(this._treeDebugger=h(this._treeDebugger))}),v)]);const{spatialReference:a}=e;this._extentHelper=he(this.viewingMode,{layers:e.map.allLayers,layerViews:e.allLayerViews,viewSpatialReference:a});const n=new s({getCollections:()=>e.defaultsFromMap?.mapCollections?.map((({layers:e})=>e)),getChildrenFunction:e=>e&&"layers"in e?e.layers:null}),l=new at({layers:n,extentHelper:this._extentHelper,viewingMode:this.viewingMode,viewSpatialReference:a});this._set("tilingSchemeLogic",l),this._updateTilingScheme(),this._elevationDataRequester=t.createStreamDataRequester(se.ELEVATION),this._mapDataRequester=t.createStreamDataRequester(se.BASEMAP);const o=t.scheduler;this._frameTask=o.registerTask(ct.TERRAIN_SURFACE,this),this.addHandles([f((()=>this._extentHelper.stencilEnabledExtents),(e=>this._renderer.setStencilEnabledLayerExtents(e)),v),f((()=>this.tilingSchemeLogic.tilingScheme),(()=>this._updateTilingScheme()),y),f((()=>this.extent),(()=>this._updateRootTiles()),v),e.on("resize",(()=>this._viewChangeUpdate())),f((()=>{const t=e.state;return[this._lodBias,this.lodSnapping,e.quality,t.camera,t.contentCamera,t.fixedContentCamera]}),(()=>this._viewChangeUpdate()),T),f((()=>e.qualitySettings?.fadeDuration),(e=>this._renderer.textureFadingEnabled=e>0),v),f((()=>e.qualitySettings?.physicallyBasedRenderingEnabled),(e=>this._renderer.pbrMode=e?ht.Simplified:ht.Disabled),v),f((()=>this._userClippingExtent),(()=>this._updateClippingExtent()),y)]),this.addHandles(e.allLayerViews.on("after-changes",(()=>this._layerViewsDirty=!0))),this._layerViewsDirty=!0,this._handleLayerViewChanges(),this._renderer.updateTileBackground(this.backgroundColor)}destroy(){this._frameTask.remove(),this._watchUpdatingTracking.destroy(),this._lercDecoder=o(this._lercDecoder),this._removeAllTiles(),this._set("tilingSchemeLogic",h(this.tilingSchemeLogic)),this._basemapLayerViewHandles.forEach(((e,t)=>this._unregisterTiledLayerView(t))),this._elevationDataRequester=null,this._mapDataRequester=null,this._set("overlayManager",h(this.overlayManager)),this._tileCache=h(this._tileCache),Xe.prune(),this._treeDebugger=h(this._treeDebugger),this._renderer=h(this._renderer),this._iteratorPool=h(this._iteratorPool),this._upsampleMapCache=h(this._upsampleMapCache),this._elevationQueryCache=h(this._elevationQueryCache),this._set("view",null),this._extentHelper=h(this._extentHelper),this._upsampleInfoPool=h(this._upsampleInfoPool),J(),Ke()}get renderer(){return this._renderer}get frustum(){return this._frustum}get snapLevel(){if(this.lodSnapping===de.ON){const e=this.view,t=this.tilingScheme,i=e.pointsOfInterest?.cameraOnSurface?.scale;if(t&&i){const r=e.state.contentCamera;let s=Z(e,r.eye,r.viewForward,r.up).tilt;s>90&&(s=180-s);const a=2*(s/90)**2,n=t.levelAtScale(i)-a,l=Math.min(n+e.qualitySettings.tiledSurface.lodBias,this._splitLimits.maxLod||1/0);return l<=0?null:l}}return null}get lodSnapping(){return this.view.qualitySettings.tiledSurface.reduceTileLevelDifferences?de.ON:de.OFF}get upsampleInfoPool(){return this._upsampleInfoPool}get upsampleMapCache(){return this._upsampleMapCache}get elevationQueryCache(){return this._elevationQueryCache}get mapTileRequester(){return this._mapDataRequester}get _userClippingExtent(){const{spatialReference:e}=this,{clippingArea:t}=this.view;if(null==t||null==e)return null;const i=I(),r=re(t,i,e)?i:null,s=this._get("extent");return B(r,s)?s:r}get rootTilesExtent(){return this._rootTilesExtent}get extent(){const e=V(this.groundExtent,this._userClippingExtent,I()),t=this._get("extent");return B(e,t)?t:e}get groundExtent(){return null!=this._tilingSchemeExtent?this._tilingSchemeExtent:this._rootTilesExtent}get _tilingSchemeExtent(){return this.tilingSchemeLogic?.extent}get updating(){return this._hasPendingUpdates||(this._maxNumUpdating=1),!!((this.running||this._watchUpdatingTracking?.updating||this._asyncWorkItems>0)&&this.ready&&!this.suspended||this.overlayManager?.updating)}get running(){return(this._hasPendingUpdates||this._viewChanged||this._allTilesDirty||!this._allTilesSorted||this._layerViewsDirty||this._scaleRangeQueries.updating||this._frameTask.updating)&&this.ready&&!this.suspended}get updatingProgressValue(){return this._maxNumUpdating=Math.max(this._pendingUpdates,this._maxNumUpdating),1-this._pendingUpdates/this._maxNumUpdating}get baseOpacity(){return this.view?.map?.ground?.opacity??1}set baseOpacity(e){this.view.map.ground.opacity=e}get viewingMode(){return this.view.state.viewingMode}get ready(){return null!=this._rootTiles}set renderOrder(e){this._renderer.renderOrder=e,this._set("renderOrder",e)}get rootTiles(){return this._rootTiles}get spatialReference(){return this.tilingScheme?.spatialReference??null}get backgroundColor(){return this.view?.map?.ground?.surfaceColor}set backgroundColor(e){this.view.map.ground.surfaceColor=e}set slicePlaneEnabled(e){this._renderer.slicePlaneEnabled=e,this._set("slicePlaneEnabled",e),this._evaluateTransparency()}get tilingSchemeLocked(){return this.tilingSchemeLogic?.tilingSchemeLocked??!1}get wireframe(){return this._renderer?.wireframe}set wireframe(e){e!==this._renderer.wireframe&&(this._renderer.wireframe=e,this._updateAllTileGeometries())}get opaque(){return this._renderer.transparency===Ce.Opaque}set suspended(e){this._set("suspended",e),this._viewChangeUpdate()}get fadeDuration(){return this.view.qualitySettings.fadeDuration??0}intersect(e,t,i,r){this._renderer.intersect(e,t,i,r)}getElevation(e,t,i,r){const s=this._rootTiles;if(!s?.length)return null;if(0===s[0].layerInfo[ue.ELEVATION].length)return null;let a=this._elevationProjectorCache.get(r);if(void 0===a&&(a=U(r,this._spatialReference)??null,this._elevationProjectorCache.set(r,a)),null==a)return n.getLogger(this).error("TerrainSurface.getElevation(): could not project given point to tiling scheme coordinate system"),null;const l=P(yt,e,t,i);a(l,0,l,0);return Pt(s,l[0],l[1])}getElevations(e,t,i){const r=this._rootTiles,s=r?r[0].layerInfo[ue.ELEVATION].length:0;if(r?.length&&0!==s)for(let a=0;a<t;++a){const t=3*a;i(a,Pt(r,e[t],e[t+1]))}else for(let a=0;a<t;++a)i(a,null)}getScale(e){if(!this.tilingScheme)return null;if(!R(e,yt,this.spatialReference))return n.getLogger(this).error("TerrainSurface.getScale(): could not project given point to tiling scheme coordinate system"),null;const t=this._rootTiles;if(null!=t)for(const i of t)if(i?.containsPoint(yt)){let e=i;for(;e.children[0]&&!e.rendered;){const t=e.children[0].extent;let i=0;yt[0]>t[2]&&(i+=1),yt[1]<t[1]&&(i+=2),e=e.children[i]}return this._getLodBiasCorrectedScale(e.level)}return 1/0}_ensureSEBProject(e){const t=this._sebProjectorMap.get(e);if(t)return t;const i=U(e,this._tilingSchemeSpatialReference,this._sebProjectorCache)??null;return this._sebProjectorMap.set(e,i),i}getSphereElevationBounds(e,t){const i=this._ensureSEBProject(t);if(null==i)return n.getLogger(this).error("TerrainSurface.getSphereElevationBounds(): could not project given point to tiling scheme coordinate system"),null;W(e,vt);const r=H(vt);i(r,0,r,0);const s=new te,a=this._rootTiles;if(null!=a){const e=[];for(const i of a)e.push(i);let t=0;for(;t<e.length;){const i=e[t];if(++t,!k(i.extent,vt))continue;const r=i.children;if(null==r[0]||i.rendered)s.expandElevationRangeValues(i.elevationBoundsMin,i.elevationBoundsMax);else for(const t of r)e.push(t)}}return s}getRootElevationBounds(){return new te(this.rootTileElevationBounds.min,this.rootTileElevationBounds.max)}getSphereScale(e,t){if(!this.tilingScheme)return null;if(!R(e,H(vt),this.spatialReference))return n.getLogger(this).error("TerrainSurface.getSphereScale(): could not project given point to tiling scheme coordinate system"),null;vt[3]=t;let i=null;const r=e=>{if(e&&k(e.extent,vt)){const t=e.children;if(t[0]&&!e.rendered)for(const e of t)r(e);else{const t=this._getLodBiasCorrectedScale(e.level);i=null==i?t:Math.min(i,t)}}},s=this._rootTiles;if(null!=s)for(const a of s)r(a);return i}queryVisibleScaleRange(e,t,i,r){const s=t?this.tilingScheme.levelAtScale(t):0,a=i?this.tilingScheme.levelAtScale(i):1/0,n=this._lodBias;this._scaleRangeQueries.queryVisibleLevelRange(e,s+n,a+n,r)}_evaluateTransparency(){const e=this.baseOpacity,t=this.overlayManager.renderer.isEmpty,i=this._renderer.transparency,r=this._allSurfaceLayersTransparent()?t?Ce.Empty:Ce.TransparentWithDraped:e>=1&&!this.hasCompositeBlendMode&&!this._renderer.slicePlaneEnabled?Ce.Opaque:Ce.Semitransparent,s=i!==r;return s&&(this._renderer.transparency=r,this.view?._stage?.renderer.setParameters({terrainTransparency:this._renderer.transparency})),s}_updateTilingScheme(){const e=this.tilingSchemeLogic.tilingScheme;if(!(e!==this.tilingScheme))return;je(!!e,"tiling scheme cannot be reset to undefined"),this._isGlobal=!this.view?.state?.isLocal,this.tilingScheme&&this._removeAllTiles();const t=e?.spatialReference??M.WebMercator;this._spatialReference=t,this._isWebMercator=!!t?.isWebMercator,this._isWebMercatorOnPlateCarree=this._isWebMercator&&F(this.view?.renderSpatialReference),this._isGeographic=t?.isGeographic??!1,this._set("tilingScheme",e),this._tilingSchemeSpatialReference=this.tilingScheme?.spatialReference,this._sebProjectorMap.clear(),this._updateClippingExtent(),e&&(this._updateTiledLayers(),this._renderer.setTileSize(e.pixelSize),this.overlayManager.setSpatialReference(e.spatialReference),this._updateRootTiles())}_acquireTile(e,t,i,r){const s=this._tileCache.pop(mt._tileMemcacheKey);return s?(s.init(e,t,i,r,this),s):new this._tileConstructor(e,t,i,r,this)}get updatingRootTiles(){return this._updatingRootTiles}_updateRootTiles(){const{extent:e,tilingScheme:t}=this;if(!t)return;const i=Et;let s=t.rootTilesInExtent(e,i,5*ve);if(null!=this._rootTiles){if(s.length>ve)return void n.getLogger(this).warn(Ee);const e=this._rootTiles.map((e=>e.lij)),t=r(e,s,Ye);if(this._updatingRootTiles=!0,t.removed.length>0||t.added.length>0){const e=this._rootTiles.filter((e=>!(t.removed.findIndex((t=>Ye(t,e.lij)))>-1)||(this._purgeTile(e),!1)));t.added.forEach((t=>e.push(this._newRootTile(t)))),this._setRootTiles(e)}}else this._updatingRootTiles=!0,s.length>ve&&(n.getLogger(this).warn(Se),s=t.rootTilesInExtent(e,i,ve)),this._setRootTiles(s.map((e=>this._newRootTile(e))));B(i,this._rootTilesExtent)||(this._rootTilesExtent=I(i)),this.renderer.visible=!0,this._viewChangeUpdate(),this.overlayManager.setPlacementDirty(),this.notifyChange("ready"),this._updateAllTileGeometries(),this._updatingRootTiles=!1,this.checkAllTilesWaterproofness()}_updateAllTileGeometries(){const e=this._allTiles.filter((e=>e.isLoaded&&e.intersectsClippingArea));e.forEach((e=>this._renderer.updateTileGeometryState(e))),e.forEach((e=>e.renderData.updateNeighborData())),this._updateTilesGeometries(e),this._pendingTilesToUpdate.clear()}_updateTilesGeometries(e){if(0===e.length)return;e.sort(tt);const t=this.renderer;e.forEach((e=>t.updateGeometryIfNeeded(e))),e.forEach((e=>this._pendingTilesForElevationUpdateEvent.add(e)))}_shouldSplit(e){return e.shouldSplit(this._splitLimits,this._eyePosRenderSR,this.snapLevel)===Je.SPLIT}_newRootTile(e){const t=this._acquireTile(0,e[1],e[2],null);return this._shouldSplit(t)&&t.setPendingUpdate(Je.SPLIT),this._loadTile(t),this._markTileToUpdate(t),this._updateRootTileElevationBounds(),t}_setRootTiles(e){if(this._rootTiles=e,this._allTiles.clear(),null!=e){const t=this._iteratorPool.acquire();for(t.reset(e);!t.done;)this._allTiles.push(t.next());t.remove()}this._renderer.setRootTiles(this._rootTiles),this._updateTilesVisibility(e)}_runViewChangeUpdateIfDirty(){this._viewChangeUpdateDirty&&(this._viewChangeUpdateDirty=!1,this._viewChangeUpdate())}_viewChangeUpdate(){this.view&&!this.suspended&&this.tilingScheme&&this.renderer.visible&&(this._inFrameTask?this._viewChangeUpdateDirty=!0:(this._viewChangeUpdateDirty=!1,this._updateViewDependentParameters(),this._updateTilesVisibility(this._rootTiles)))}_updateClippingStatus(e){e.updateClippingStatus(this.extent)&&e.resetPendingUpdate(Je.GEOMETRY)&&this._updateTileGeometryState(e)}_updateTilesVisibility(e){if(null==e)return;const t=it(e),i=this.visibleElevationBounds;let r=t?i.min:1/0,s=t?i.max:-1/0;const a=this.extent,n=this._viewProjectionMatrix;this.setTileTreeDirty();const l=this._iteratorPool.acquire();for(l.reset(e);!l.done;){const e=l.next();e.updateClippingStatus(a)&&e.resetPendingUpdate(Je.GEOMETRY)&&this._updateTileGeometryState(e),e.computeVisibility(),e.updateScreenDepth(n),e.renderData&&(r=Math.min(e.elevationBoundsMin,r),s=Math.max(e.elevationBoundsMax,s))}l.remove(),this._viewChanged=!0,this._allTilesDirty=!0,this._updatePendingTileGeometries(),isFinite(r)&&isFinite(s)&&(i.min!==r||i.max!==s)&&(this.visibleElevationBounds=new ne(r,s))}_updateRootTileElevationBounds(){let e=1/0,t=-1/0;const i=this._rootTiles;null!=i&&i.forEach((({elevationBoundsMin:i,elevationBoundsMax:r})=>{e=Math.min(e,i),t=Math.max(t,r)}));const r=this.rootTileElevationBounds;r.min===e&&r.max===t||(this.rootTileElevationBounds=new ne(e,t))}_updateViewDependentParameters(){const{camera:e,contentCamera:t}=this.view.state,i=Math.tan(.5*t.fovX),r=Math.tan(.5*t.fovY),s=this.tilingScheme.pixelSize,a=2**-this._lodBias*e.pixelRatio;this._splitLimits.aboveGround=e.aboveGround,this._splitLimits.fovX=i,this._splitLimits.fovY=r,this._splitLimits.relativeWidthLimit=s/e.width*this.maxTextureScale*a,this._splitLimits.relativeHeightLimit=s/e.height*this.maxTextureScale*a,this._splitLimits.maxLod=this.tilingScheme.getMaxLod(),this._splitLimits.angledSplitBias=this.view.qualitySettings.tiledSurface.angledSplitBias,this.view.state.fixedContentCamera?this._splitLimits.frustum=q(this._splitLimits.frustum??G(),t.frustum):this._splitLimits.frustum=null,q(this._frustum,e.frustum),w(this._viewProjectionMatrix,t.projectionMatrix,t.viewMatrix),b(this._eyePosRenderSR,t.eye),A(e.eye,this.view.renderSpatialReference,this._eyePosSurfaceSR,this.spatialReference)}_updateTileGeometryState(e){e.updateVisibility();this._renderer.updateTileGeometryState(e)&&this._markTileToUpdate(e),this._usedMemory=null}_markAllTileNeighborsForUpdate(e){e.forEachLoadedNeighbor((e=>{this._layerViews[ue.MAP].some(Me)&&e.setPendingUpdate(Je.TEXTURE_FADING),this._pendingTilesToUpdate.add(e)}))}_updateTileTexture(e,t){const i=e.resetPendingUpdate(Je.TEXTURE_FADING)?Je.TEXTURE_FADING:!!e.resetPendingUpdate(Je.TEXTURE_NOFADING)&&Je.TEXTURE_NOFADING;i&&(this._renderer.updateTileTexture(e,i),this._usedMemory=null,t.madeProgress())}_emitElevationUpdateEventForTiles(){if(!this._shouldEmitChangeEvent)return;const e=wt.extent;O(e),this._pendingTilesForElevationUpdateEvent.forEach((t=>N(e,t.extent,e))),this._pendingTilesForElevationUpdateEvent.clear(),wt.spatialReference=this.spatialReference,this.emit("elevation-change",wt),this._shouldEmitChangeEvent=!1}runTask(e){this._handleLayerViewChanges(e),this._frameTask.processQueue(e),this.renderer.processScaleRangeQueries(this._scaleRangeQueries,e),this._inFrameTask=!0,this._pendingUpdates=0,this._hasPendingUpdates=!1,this._updateAllTilesStatus(e),this._sortTiles(e);const t=!this.view.state.fixedContentCamera;if(this._mergeAndSplit(e,t),this._updateElevation(e),this._updateTextures(e),t||this._mergeAndSplit(e,!0),this._inFrameTask=!1,this._runViewChangeUpdateIfDirty(),this._updatePendingTileGeometries(),this._emitElevationUpdateEventForTiles(),e.done&&e.hasProgressed&&this.requestUpdate(),this.notifyChange("updatingProgressValue"),Fe&&this._checkTileInvariant(),!e.hasProgressed)return _t}_checkTileInvariant(){const e=new Map;this._allTiles.forAll((t=>e.set(t,new Set))),this._allTiles.forAll((t=>{if(je(t.rendered===t.isLeaf,` rendered ${t.rendered} != ${t.isLeaf} leaf`),!t.isLeaf){const e=e=>0===e.unmergableChildCount&&0===e.maxLevelDeltaNeighborCount,i=t.children.reduce(((t,i)=>t+(e(i)?0:1)),0);if(je(t.unmergableChildCount===i,` Tile[${t.lij.toString()}] unmergeable child count mismatch: actual ${t.unmergableChildCount} vs ${i}`),t.hasPendingUpdate(Je.MERGE)){je(!t.hasPendingUpdate(Je.SPLIT),"Tile can be both split and merge at the same time");for(const e of t.children)je(e.isLeaf||e.hasPendingUpdate(Je.MERGE),"Child of tile to merge must also merge")}}for(let i=0;i<4;++i){if(t.rendered){const e=t.renderData?.geometryState.edgePeerNeighbors[i];if(null!=e){{const r=t.level-e.level<=we;r||(console.log(`tile level delta [${t.lij.toString()}] vs [${e.lij.toString()}] > ${we}  (edge[${i}])`),je(r,`tile level delta [${t.level}] vs [${e.level}] > ${we}`))}je(t.level-e.level<=we,`Max tile lod delta exceeded: [${t.lij.toString()}] vs [${e.lij.toString()}]`)}}const r=t.level-we,s=e=>e.isLeaf||e.level===t.level,a=t.findNeighborTile(xe[i],s);if(null!=a){if(t.isLeaf&&t.level>=we){let i=a;for(;t.level-i.level<we;)i=i.parent;const s=[r,t.lij[1]>>we,t.lij[2]>>we];if(!Ye(s,i.lij)){const r=e.get(i);je(!r.has(t),"Cannot already have neighbor"),r.add(t)}}je(a.rendered||a.level===t.level,"Non-same-level-neighbor of rendered must be rendered"),je(t.level-a.level<=we,`Tile level delta [${t.level}] vs [${a.level}] > ${we}`)}}})),this._allTiles.forAll((t=>{const i=t.maxLevelDeltaNeighborCount,r=e.get(t);je(i===r.size,`Tile[${t.lij.toString()}] merge-blocker mismatch: actual ${i} vs ${r.size}`)}))}_updateAllTilesStatus(e){if(!this._viewChanged||!this._rootTiles||e.done)return;this._viewChanged=!1;const t=new bt(this._allTiles.length);t.pushAll(this._rootTiles);const i=this.snapLevel,r=this._splitLimits,s=this._eyePosRenderSR;this._allTiles.forAll((e=>{e.maxLevelDeltaNeighborCount=0,e.unmergableChildCount=0}));const a=this._viewProjectionMatrix;for(;!t.empty;){const e=t.pop(),n=e.parent,l=null!=n&&n.hasPendingUpdate(Je.MERGE),o=l?Je.MERGE:e.shouldSplit(r,s,i),h=o===Je.SPLIT;e.isLeaf?Ct(e,h):t.pushAll(e.children),l?(e.resetPendingUpdate(Je.SPLIT),e.isLeaf||e.setPendingUpdate(Je.MERGE),this._updateClippingStatus(e),e.updateVisibility(),e.updateScreenDepth(a)):h?(e.resetPendingUpdate(Je.MERGE),e.isLeaf&&e.setPendingUpdate(Je.SPLIT)):(e.resetPendingUpdate(Je.SPLIT)&&e.updateAgentSuspension(),o===Je.ELEVATION&&e.updateAgents(ue.ELEVATION),e.isLeaf||(e.setPendingUpdate(Je.MERGE),e.resetPendingUpdate(Je.SPLIT)))}this.requestUpdate(),(this._shortBatches||!this._oneBatchPerFrameTask)&&this._updatePendingTileGeometries(),e.madeProgress()}_sortTiles(e){e.done||this._allTilesSorted||(rt(this._allTiles,this.view.pointsOfInterest.focus.renderLocation),this._allTilesSorted=!0,this._treeDebugger&&this._treeDebugger.update(),e.madeProgress())}_markTileToUpdate(e){Ue(e.isLoaded),e.intersectsClippingArea&&(this._pendingTilesToUpdate.add(e),this._markAllTileNeighborsForUpdate(e))}_updatePendingTileGeometries(){const e=this._pendingTilesToUpdate,t=Array.from(e.keys()).filter((e=>e.isLoaded&&e.intersectsClippingArea));if(0===t.length)return void e.clear();const i=(i,r)=>{!r?.isLoaded||!r.intersectsClippingArea||r.level<i.level||e.has(r)||(e.add(r),t.push(r),r.renderData.updateNeighborData())};t.sort(tt);const r=t.length;for(let s=0;s<r;++s){const r=t[s];Ue(r.isLoaded),Ue(r.intersectsClippingArea);const a=r.renderData;a.updateNeighborData();const n=a.dirtyEdgeResolutions,l=a.geometryState,o=e=>{const t=We[e];i(r,l.cornerPeerNeighbors[e]?.findCorner(He(t),(e=>e.isLoaded)))};for(let t=0;t<4;++t)if(n&1<<t){const s=a.geometryState.edgePeerNeighbors[t];s&&s?.level>=r.level&&s.forAllSubtreeOnSide(Re(xe[t]),(t=>!(!t.isLoaded||!t.intersectsClippingArea)&&(Ue(e.has(t)||tt(r,t)<0),i(r,t),!0))),o((t+1)%4),o(t)}}e.clear(),this._updateTilesGeometries(t),this._shouldEmitChangeEvent=!0,Fe&&$e&&this.checkAllTilesWaterproofness()}_mergeAndSplit(e,t){if(this.suspended||e.done||!this._allTilesDirty)return;this._allTilesDirty=!1,this.requestUpdate();let i=!1;const r=this.view.state.fixedContentCamera;let s=!1;for(;!e.done;){s=!0;let a=!1;const n=!this._allTiles.some((s=>{if(!i&&!r&&!s.visible)return e.done;let n=s;if(s.hasPendingUpdate(Je.MERGE)){if(!t||s.unmergableChildCount>0)return e.done;for(s.resetPendingUpdate(Je.MERGE);null!=n.parent&&0===n.parent.unmergableChildCount&&n.parent.resetPendingUpdate(Je.MERGE);)n=n.parent;this._mergeTile(n),a=!0,e.madeProgress()}else if(s.resetPendingUpdate(Je.SPLIT)){let t=!0;const i=s.level;if(i>=we){const e=e=>e.isLeaf||i-e.level<we;for(let r=0;r<4;++r){const a=s.findNeighborTile(xe[r],e);null!=a&&i-a.level===we&&(t=!1,Fe&&(Ue(a.isLeaf),Ue(a.hasPendingUpdate(Je.SPLIT))))}}t?(this._splitTile(s),e.madeProgress(),a=!0):s.setPendingUpdate(Je.SPLIT)}return e.done}));if(a&&(this._allTilesSorted=!1,this._allTilesDirty=!0,!this._oneBatchPerFrameTask&&this._updatePendingTileGeometries()),n){if(!i){i=!0;continue}if(!a)break}else this._allTilesDirty=!0}s?e.madeProgress():this._allTilesDirty=!0,!this._oneBatchPerFrameTask&&this._updatePendingTileGeometries(),this._sortTiles(e)}_updateElevation(e){e.done||(this._allTiles.some((t=>(t.resetPendingUpdate(Je.GEOMETRY)&&(this._updateTileGeometryState(t),this._shortBatches&&this._updatePendingTileGeometries(),e.madeProgress()),e.done))),!this._oneBatchPerFrameTask&&this._updatePendingTileGeometries())}_updateTextures(e){e.done||this._allTiles.some((t=>(this._updateTileTexture(t,e),e.done)))}_updateClippingExtent(){this.spatialReference&&(this.updateTileOverlayParams(dt.UPDATE),this.overlayManager.setPlacementDirty(),this._updateRootTiles())}get _lodBias(){const e=this.view.quality;return this.view.qualitySettings.tiledSurface.lodBias-(1-e)*Le}_getLodBiasCorrectedScale(e){const t=this.tilingScheme.levels,i=l(e-this._lodBias,0,t.length-1),r=i-Math.floor(i);return t[Math.floor(i)].scale*(1-r)+t[Math.ceil(i)].scale*r}_removeAllTiles(){null!=this._rootTiles&&(this._rootTiles.forEach((e=>this._purgeTile(e))),this._setRootTiles(null),this.notifyChange("ready")),this._allTiles.clear(),this.renderer.visible=!1}_purgeDescendantTiles(e){if(!e.children[0])return;const t=e.children.slice();e.unsetChildren();for(let i=0;i<4;++i)this._purgeTile(t[i])}_purgeTile(e){e.isLeaf?jt(e):this._purgeDescendantTiles(e),this._allTiles.removeUnordered(e),this._unloadTile(e),this._tileCache.put(mt._tileMemcacheKey,e)}_unloadTile(e){this._pendingTilesToUpdate.delete(e),this._pendingTilesForElevationUpdateEvent.delete(e),e.unload(this._renderer)}_splitTile(e){je(e.isLeaf,"Tile that is already split should not be split again!"),je(e.rendered,"Tile marked to split is not rendered"),jt(e);const t=e.level+1,i=2*e.lij[1],r=2*e.lij[2],s=e.setChildren(this._createTile(t,i,r,e),this._createTile(t,i,r+1,e),this._createTile(t,i+1,r,e),this._createTile(t,i+1,r+1,e));this._allTiles.pushArray(s),e.updateAgentSuspension(),je(e.rendered,"parent should be rendered"),this._unloadTile(e),s.forEach((e=>this._loadTile(e))),s.forEach((e=>this._pendingTilesToUpdate.add(e))),this._markAllTileNeighborsForUpdate(e),this._emitTileScaleChange(e,e.level+1),this._allTilesDirty=!0,this._shortBatches&&this._updatePendingTileGeometries(),s.forEach((e=>Ct(e,e.hasPendingUpdate(Je.SPLIT)))),++this._performanceInfo.numSplit}_emitTileScaleChange(e,t=e.level){Lt.spatialReference=this.spatialReference,Lt.extent=e.extent,Lt.scale=this._getLodBiasCorrectedScale(t),this.emit("scale-change",Lt)}_createTile(e,t,i,r){je(!!r,"_createTile sanity check");const s=this._acquireTile(e,t,i,r);return s.updateClippingStatus(this.extent),s.updateScreenDepth(this._viewProjectionMatrix),this._shouldSplit(s)&&s.setPendingUpdate(Je.SPLIT),s}get _shortBatches(){return this.view.state.mode!==pt.IDLE}_mergeTile(e){je(!e.hasPendingUpdate(Je.SPLIT),"_mergeTile sanity check"),je(!e.isLeaf,"Cannot merge a leaf"),e.isLeaf||(this._purgeDescendantTiles(e),je(!e.renderData,"_mergeTile sanity check"),this._loadTile(e),this._markTileToUpdate(e),this._emitTileScaleChange(e),this._shortBatches&&this._updatePendingTileGeometries(),Ct(e,!1),this._allTilesDirty=!0,++this._performanceInfo.numMerged)}_loadTile(e){e.load(),this.requestUpdate(),this._allTilesDirty=!0,this.overlayManager&&this.overlayManager.hasOverlays&&this.overlayManager.setTileParameters(e)}_elevationDataArrived(e,t,i){const r=new le(e.lij,e.extent,i);e.dataArrived(t,ue.ELEVATION,r);const s=[e],a=e.level,n=this._iteratorPool.acquire();for(n.reset(s);!n.done;){const e=n.next();e.findElevationBoundsForLayer(t,a),e.computeElevationBounds()}0===a&&this._updateRootTileElevationBounds(),n.remove(),this._updateTilesVisibility(s)}_handleLayerViewChanges(e=gt){if(!this._layerViewsDirty)return;this._layerViewsDirty=!1;let t=!1;const i=new Set;let r=-1;for(let s=this.view.allLayerViews.length-1;s>=0;s--){const e=this.view.allLayerViews.items[s];if(i.add(e.uid),Ae(e)||Ie(e))if(this._basemapLayerViewHandles.has(e.uid)&&!Ie(e)){const i=this._layerClassFromLayerView(e),s=this._getLayerIdxByUID(i,e.uid);null!=s&&((s<r||null==r)&&(t=!0),r=s)}else this._registerTiledLayerView(e),e.layer.loaded&&(t=!0)}this._basemapLayerViewHandles.forEach(((e,r)=>{i.has(r)||(this._unregisterTiledLayerView(r),t=!0)})),t&&this._updateTiledLayers(),this.hasCompositeBlendMode=this._hasCompositeBlendMode(),this._evaluateTransparency(),e.madeProgress()}_allSurfaceLayersTransparent(){let e=0===this.view.map?.ground?.opacity;for(const t of this.view.allLayerViews.items)if(Be(t)&&!Y(t.layer)&&0!==t.fullOpacity)return e=!1,e;return e}_hasCompositeBlendMode(){for(const e of this.view.allLayerViews.items)if((Ve(e)||Ie(e))&&lt(ot[e.layer.blendMode]))return!0;return!1}_layerClassFromLayerView(e){return ke(e)?ue.ELEVATION:ue.MAP}_registerTiledLayerView(e){const t=[];if((Ve(e)||Ie(e))&&t.push(f((()=>e.layer.blendMode),(()=>{this.hasCompositeBlendMode=this._hasCompositeBlendMode(),this._updateTileTextures(pe.UNFADED)}))),!Ie(e)){const i=this._layerClassFromLayerView(e);t.push(f((()=>e.suspended),(()=>this._updateTiledLayers()))),t.push(f((()=>e.fullOpacity),(()=>this._updateTileTextures(pe.UNFADED)))),t.push(f((()=>"effectiveScaleRange"in e.layer?e.layer.effectiveScaleRange:null),(()=>this._restartAllAgents(i)))),t.push(e.on("data-changed",(()=>{const t=this._getLayerIdxByUID(i,e.uid);null!=t&&this._invalidateLayerData(t,i)})))}this._unregisterTiledLayerView(e.uid),this._basemapLayerViewHandles.set(e.uid,t)}_unregisterTiledLayerView(e){const t=this._basemapLayerViewHandles.get(e);if(t){for(const e of t)e.remove();this._basemapLayerViewHandles.delete(e)}}_updateTiledLayers(){if(!this.tilingScheme||this.view.suspended)return;const e=this.view.allLayerViews,t=[[],[]];let i=null;e.forEach((e=>{if(!e.layer||e.suspended||!Ae(e)||!e.fullExtent)return;const r=this._layerClassFromLayerView(e);if(r===ue.MAP){const t=e.displayLevelRange.maxLevel;t!==1/0&&(null===i||t>i)&&(i=t)}t[r].push(e)}));for(const r of ce){const e=this._layerViews[r],i=t[r];i.reverse();const s=i.length;let a=e.length!==s;const n=new Array(s),l=new Array(e.length);this._layerIndexByUid[r].clear();for(let t=0;t<s;t++){const s=i[t].uid;this._layerIndexByUid[r].set(s,t);const o=e.indexOf(i[t]);n[t]=o,t!==o&&(a=!0),o>-1&&(l[o]=t)}if(a){const e=this._postorderIterator;for(e.reset(this._rootTiles);!e.done;)e.next().modifyLayers(l,n,r);this._layerViews[r]=i,this._restartAllAgents(r),this._updateTilesVisibility(this._rootTiles)}}this.tilingScheme.ensureMaxLod(i)&&this._viewChangeUpdate()}_restartAllAgents(e){const t=this._postorderIterator;for(t.reset(this._rootTiles);!t.done;){const i=t.next();i.restartAgents(e),e===ue.ELEVATION&&i.computeElevationBounds()}this._updateRootTileElevationBounds()}layerViewByIndex(e,t){return this._layerViews[t][e]}numLayers(e){return this._layerViews[e].length}_updateTileTextures(e){this._allTiles.forAll((t=>{t.updateAgents(ue.MAP),e===pe.IMMEDIATE?this.renderer.updateTileTexture(t,Je.TEXTURE_NOFADING):t.updateRenderData(ue.MAP,e)})),this._evaluateTransparency()}_invalidateLayerData(e,t){this._allTiles.forAll((i=>i.removeLayerAgent(e,t))),this._allTiles.forAll((i=>i.invalidateLayerData(e,t)))}setTileTreeDirty(){this._allTilesDirty=!0}requestRender(e=dt.UPDATE){this.renderer.setNeedsRender(e)}requestUpdate(){1==++this._pendingUpdates&&(this._hasPendingUpdates=!0)}requestTileData(e,t,i,r){const s=this.layerViewByIndex(t,i),a=s.layer;return!a.tilemapCache||Me(s)?this._requestTileData(e,i,s,r):(++this._asyncWorkItems,a.tilemapCache.fetchAvailability(e.lij[0],e.lij[1],e.lij[2],{...r,timeout:6e3}).then((()=>--this._asyncWorkItems)).catch((t=>{throw--this._asyncWorkItems,c(r),g(t)||this._dataMissing(e,i,s,{notInTilemap:!0}),t})).then((()=>this._frameTask.schedule((()=>this._requestTileData(e,i,s,r)),r.signal))))}_requestTileData(e,t,i,r){return t===ue.ELEVATION?ke(i)?this._requestElevationTileData(e,i,r):Promise.reject():Be(i)?this._requestMapTileData(e,i,r):Promise.reject()}_requestElevationTileData(e,t,i){++this._asyncWorkItems;const r=r=>{if(_(i))return;const s=this._layerIndexByUid[ue.ELEVATION].get(t.uid);null!=s?(this._usedMemory=null,this.requestUpdate(),this._elevationDataArrived(e,s,r)):n.getLogger(this).warn("TerrainSurface: received data from unknown layer %d %s",ue.ELEVATION,e.lij.toString())},s=i=>{g(i)||(this._dataMissing(e,ue.ELEVATION,t,i),this.requestUpdate())};if(Oe(t.layer))return t.layer.fetchTile(e.lij[0],e.lij[1],e.lij[2],{noDataValue:Pe,signal:i.signal}).then((e=>{if(!_(i))return this._frameTask.schedule((()=>r(e)),i.signal,s);n.getLogger(this).warnOnce("A call to fetchTile resolved even though the request was aborted. fetchTile should not resolve if options.signal.aborted is true.")}),s).finally((()=>{--this._asyncWorkItems}));const a=t.getTileUrl(e.lij[0],e.lij[1],e.lij[2]);return this._elevationDataRequester.request(a,"binary",i).then((e=>this._lercDecoder.decode(e,{noDataValue:Pe},i.signal))).then((e=>{e?r(new X(e)):s(new Error("LERC decoding failed"))}),s).finally((()=>{--this._asyncWorkItems}))}_requestMapTileData(e,t,i){++this._asyncWorkItems;const r=(r,s)=>{--this._asyncWorkItems,qe(s),_(i)||(this._dataMissing(e,ue.MAP,t,r),this.requestUpdate())},s=e=>t=>r(t,e),a=r=>this._frameTask.schedule((()=>{--this._asyncWorkItems,this.requestUpdate(),_(i)?qe(r):this._mapTileDataArrived(e,t,r)}),i.signal,s(r)).catch(s(r)),l=(e,t=null)=>this._frameTask.schedule((()=>r(e,t)));if(Me(t)){const r=t.schemaHelper.getLevelRowColumn(e.lij);return t.fetchTile(r[0],r[1],r[2],i).then(a,l)}if(Ne(t))return t.fetchTile(e.lij[0],e.lij[1],e.lij[2],i).then(a,l);if(Ge(t)&&Oe(t.layer))return t.layer.fetchTile(e.lij[0],e.lij[1],e.lij[2],i).then((e=>{if(_(i))return n.getLogger(this).warnOnce("A call to fetchTile resolved even though the request was aborted. fetchTile should not resolve if options.signal.aborted is true."),void l(m());a(e)}),l);let o=t.getTileUrl(e.lij[0],e.lij[1],e.lij[2]);Q(t.layer)&&t.layer.refreshTimestamp&&(o+=`${o.includes("?")?"&":"?"}_ts=${t.layer.refreshTimestamp}`);const h=t.hasMixedImageFormats?"image+type":"image";return this._mapDataRequester.request(o,h,i).then(a,l)}_mapTileDataArrived(e,t,i){const r=this._getLayerIdxByUID(ue.MAP,t.uid);null!=r?e.dataArrived(r,ue.MAP,i):(qe(i),n.getLogger(this).warn("TerrainSurface: received data from unknown layer"))}_getLayerIdxByUID(e,t){return this._layerIndexByUid[e].get(t)}_dataMissing(e,t,i,r){const s=this._getLayerIdxByUID(t,i.uid);null!=s?e.dataMissing(s,t,r):n.getLogger(this).warn("TerrainSurface: received data from unknown layer")}updateTileOverlayParams(e){this._rootTiles&&this.overlayManager&&(this._allTiles.forAll((e=>{e.renderData&&this.overlayManager.setTileParameters(e)})),this._renderer.setNeedsRender(e))}get performanceInfo(){const e=this._performanceInfo;return e.numNodes=this._allTiles.length,e.numLeaves=e.numVisible=e.numRendered=e.numLoadedPerLevel.length=e.numRenderedPerLevel.length=0,this._allTiles.forAll((t=>{t.isLeaf&&e.numLeaves++;const i=t.level;t.renderData&&(e.numLoadedPerLevel[i]=(e.numLoadedPerLevel[i]||0)+1),t.visible&&(e.numVisible++,t.rendered&&(e.numRenderedPerLevel[i]=(e.numRenderedPerLevel[i]||0)+1,e.numRendered++))})),e}get usedMemory(){return this.tilingScheme?(null==this._usedMemory&&(this._usedMemory=this._recalculateUsedMemory()),this._usedMemory??0):0}_recalculateUsedMemory(){return this.tilingScheme?Math.round(this._allTiles.reduce(((e,t)=>e+t.usedMemory),0)):null}getUsedMemoryForLayerView(e){let t=0;const i=this._layerClassFromLayerView(e),r=this._getLayerIdxByUID(i,e.uid);return null!=r&&this._allTiles.forAll((e=>t+=e.getUsedMemoryForLayer(i,r))),t}getTile(e){if(null==e||null==this._rootTiles)return null;const t=e.split("/").map((e=>+e));if(0===t[0])return this._rootTiles.find((e=>e.lij[1]===t[1]&&e.lij[2]===t[2]));const i=t[0],r=t[1]>>i,s=t[2]>>i;let a;if(this._rootTiles.some((e=>e.lij[1]===r&&e.lij[2]===s&&(a=e,!0))),a){let e=1<<t[0]-1;for(;a.lij[0]<t[0];){let i=t[1]&e?2:0;if((t[2]&e)>0&&i++,!a.children[i])return null;a=a.children[i],e>>=1}return je(a.lij[0]===t[0]&&a.lij[1]===t[1]&&a.lij[2]===t[2],"not the right tile?"),a}return null}get renderPatchBorders(){return this._renderer.renderPatchBorders}set renderPatchBorders(e){this._renderer.renderPatchBorders=e}get visualizeNormals(){return this._renderer.visualizeNormals}set visualizeNormals(e){this._renderer.visualizeNormals=e}get renderingDisabled(){return this._renderer.renderingDisabled}set renderingDisabled(e){this._renderer.renderingDisabled=e}get test(){const e=this;return{renderer:e._renderer,lercDecoder:e._lercDecoder,forceReload:()=>{null!=e._rootTiles&&e._rootTiles.length>0&&(e._mergeTile(e._rootTiles[0]),e._viewChangeUpdate())},getTiles:()=>e._allTiles.toArray(),getRenderedTiles(){St.clear(),e._allTiles.forAll((e=>{e.visible&&e.rendered&&St.push(e)}));const t=St.toArray();return st(e.renderOrder,t),t},lockTilingScheme(t,i){e._extentHelper.defaultTiledLayersExtent=i,e.tilingSchemeLogic.test.lockTilingScheme(t)}}}checkAllTilesWaterproofness(){if(!$e)return;const e=this._rootTiles;if(null==e)return;const t=e=>e?.renderData?.geometry?.indices?.length>0,i=(e,i)=>{t(e)&&console.error("Tile[",e.lij,"] has geometry although parent[",i.lij,"] has geom")},r=e=>{if(e.intersectsClippingArea)if(e.renderData&&!e.renderData.geometryState&&console.error("Tile[",e.lij,"] has renderData but not geometryState"),e.renderData&&!e.renderData.geometry&&console.error("Tile[",e.lij,"] has renderData but not geometryInfo"),!e.renderData?.geometry||(e.renderData.geometry.indices?.length??0)>0||console.error("Tile[",e.lij,"] has renderData but no indices - geometryInfo: ",e.renderData.geometry),t(e)){e.checkGeometryWaterproofness();for(const t of e.children)i(t,e)}else if(e.isLeaf)console.error("Tile[",e.lij,"] has no geometry and no children, from root to leaf");else for(const t of e.children)r(t)},s=e=>{const t=e.parent?.visible??!0,i=e.visible;e.computeVisibility();const r=e.visible;if(i!==r&&t&&console.error(" Tile[",e.lij,"] has out of date visibility: ",i," instead of ",r),!e.isLeaf)for(const a of e.children)s(a)};for(const a of e)r(a),s(a)}get isGlobal(){return this._isGlobal}get isGeographic(){return this._isGeographic}get isWebMercator(){return this._isWebMercator}get isWebMercatorOnPlateCarree(){return this._isWebMercatorOnPlateCarree}isEastEndWrap(e){return this._isGlobal&&e[2]===this.lijEastEnd(e[0])-1}isWestEndWrap(e){return this._isGlobal&&0===e[2]}lijEastEnd(e){return 1<<e+(this._isGeographic?1:0)}wrapEastWest(e){const t=this.lijEastEnd(e[0]),i=e[2];if(0<=i&&i<t)return e;if(!this._isGlobal)return null;const r=(i+(i<0?t:0))%t;return[e[0],e[1],r]}enableInternalChecks(e){Qe(e)}enableWaterproofnessChecks(e){ze(e)}};ft._tileMemcacheKey="TerrainTileMemcache",e([E()],ft.prototype,"_renderer",void 0),e([E({constructOnly:!0})],ft.prototype,"_scaleRangeQueries",void 0),e([E({constructOnly:!0})],ft.prototype,"view",void 0),e([E({constructOnly:!0})],ft.prototype,"overlayManager",void 0),e([E()],ft.prototype,"_hasPendingUpdates",void 0),e([E()],ft.prototype,"_asyncWorkItems",void 0),e([E()],ft.prototype,"_allTilesDirty",void 0),e([E()],ft.prototype,"_allTilesSorted",void 0),e([E()],ft.prototype,"_viewChanged",void 0),e([E()],ft.prototype,"_splitLimits",void 0),e([E({readOnly:!0})],ft.prototype,"_watchUpdatingTracking",void 0),e([E()],ft.prototype,"_frameTask",void 0),e([E({readOnly:!0})],ft.prototype,"snapLevel",null),e([E({readOnly:!0})],ft.prototype,"lodSnapping",null),e([E()],ft.prototype,"_userClippingExtent",null),e([E()],ft.prototype,"_rootTilesExtent",void 0),e([E({readOnly:!0})],ft.prototype,"extent",null),e([E({readOnly:!0})],ft.prototype,"groundExtent",null),e([E({readOnly:!0})],ft.prototype,"_tilingSchemeExtent",null),e([E({readOnly:!0})],ft.prototype,"updating",null),e([E({readOnly:!0})],ft.prototype,"running",null),e([E(ae)],ft.prototype,"updatingProgress",void 0),e([E({readOnly:!0})],ft.prototype,"updatingProgressValue",null),e([E()],ft.prototype,"_maxNumUpdating",void 0),e([E()],ft.prototype,"baseOpacity",null),e([E()],ft.prototype,"hasCompositeBlendMode",void 0),e([E({readOnly:!0})],ft.prototype,"viewingMode",null),e([E()],ft.prototype,"maxTextureScale",void 0),e([E({readOnly:!0})],ft.prototype,"ready",null),e([E({value:me.FRONT_TO_BACK})],ft.prototype,"renderOrder",null),e([E({readOnly:!0})],ft.prototype,"rootTiles",null),e([E()],ft.prototype,"_rootTiles",void 0),e([E({readOnly:!0})],ft.prototype,"spatialReference",null),e([E({type:t})],ft.prototype,"backgroundColor",null),e([E({value:!1})],ft.prototype,"slicePlaneEnabled",null),e([E({readOnly:!0})],ft.prototype,"tilingScheme",void 0),e([E({readOnly:!0})],ft.prototype,"tilingSchemeLocked",null),e([E({readOnly:!0})],ft.prototype,"tilingSchemeLogic",void 0),e([E()],ft.prototype,"wireframe",null),e([E({value:!1})],ft.prototype,"suspended",null),e([E()],ft.prototype,"fadeDuration",null),e([E()],ft.prototype,"visibleElevationBounds",void 0),e([E()],ft.prototype,"rootTileElevationBounds",void 0),e([E()],ft.prototype,"_layerViewsDirty",void 0),e([E()],ft.prototype,"renderPatchBorders",null),e([E()],ft.prototype,"visualizeNormals",null),e([E()],ft.prototype,"renderingDisabled",null),ft=mt=e([S("esri.views.3d.terrain.TerrainSurface")],ft);const Tt=ft,yt=C(),vt=$(),Et=I(),St=new u,wt=new ie("ground"),Lt={spatialReference:null,extent:null,scale:0};function Pt(e,t,i){for(const r of e){if(!r.containsPointXY(t,i))continue;let e=r;for(;e&&!e.renderData;){const r=(t>e.extentMidX?1:0)+(i<e.extentMidY?2:0);e=e.children[r]}const s=e?.renderData?.geometryState.samplerData??null;return oe(t,i,s)}return null}class bt{constructor(e){this.capacity=e,this._head=0,this._tail=0,this._data=new Array(e)}push(e){const t=this._tail;if(!(t<this.capacity))throw new Error("Queue full");this._data[t]=e,this._tail=t+1}pushAll(e){const t=e.length;if(0===t)return;const i=this._tail;if(!(i+t<=this.capacity))throw new Error("Queue full");for(let r=0;r<t;++r)this._data[i+r]=e[r];this._tail=i+t}pop(){const e=this._head;if(e<this._tail){const t=this._data[e];return this._head=e+1,t}}get empty(){return this._head>=this._tail}get full(){return this._tail>=this._data.length}}function Ct(e,t){!e.isLeaf||e.level<we||xt(e,(e=>{t&&Dt(e);const i=Mt(e);if(e.maxLevelDeltaNeighborCount++,i){let t=e.parent;for(;t;){const e=Mt(t);if(t.unmergableChildCount++,!e)break;t=t.parent}}}))}function Dt(e){if(e.hasPendingUpdate(Je.SPLIT))return;let t=e.parent;for(;t&&t.resetPendingUpdate(Je.MERGE);)t=t.parent;e.resetPendingUpdate(Je.MERGE),e.isLeaf&&e.setPendingUpdate(Je.SPLIT),e.level<we||xt(e,(e=>{Dt(e)}))}function jt(e){e.level<we||xt(e,(e=>{if(e.maxLevelDeltaNeighborCount--,0===e.maxLevelDeltaNeighborCount&&0===e.unmergableChildCount){let t=e.parent;for(;t&&(t.unmergableChildCount--,Mt(t));)t=t.parent}}))}function Mt(e){return 0===e.maxLevelDeltaNeighborCount&&0===e.unmergableChildCount}function xt(e,t){if(e.level<we)return;const i=e.level-we,r=e.lij[1]>>we,s=e.lij[2]>>we,a=e=>e.isLeaf||e.level===i;for(let n=0;n<4;++n){const l=e.findNeighborTile(xe[n],a);if(!l||l.level!==i)continue;const o=l.lij;o[1]===r&&o[2]===s||t(l)}}export{Tt as default};
