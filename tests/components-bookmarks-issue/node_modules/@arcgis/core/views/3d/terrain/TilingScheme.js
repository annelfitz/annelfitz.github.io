/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import"../../../geometry.js";import e from"../../../core/Error.js";import{deg2rad as i,floatEqualAbsolute as t,floatEqualRelative as s}from"../../../core/mathUtils.js";import{getMetersPerUnitForSR as r}from"../../../core/unitUtils.js";import n from"../../../geometry/Extent.js";import l from"../../../geometry/SpatialReference.js";import{create as o}from"../../../geometry/support/aaBoundingRect.js";import{isGeographic as a}from"../../../geometry/support/spatialReferenceUtils.js";import{x2lon as h,y2lat as c}from"../../../geometry/support/webMercatorUtils.js";import m from"../../../layers/support/LOD.js";import u from"../../../layers/support/TileInfo.js";import p from"../../../geometry/Point.js";const g=12;class f{constructor(e){const i=f.checkUnsupported(e);if(null!=i)throw i;const t=e;this.spatialReference=t.spatialReference,this._isWebMercator=this.spatialReference.isWebMercator,this._isGCS=a(this.spatialReference),this.origin=[t.origin.x,t.origin.y],this.pixelSize=t.size[0],this.dpi=t.dpi;const s=t.lods.reduce(((e,i,t)=>(i.level<e.min&&(e.min=i.level,e.minIndex=t),e.max=Math.max(e.max,i.level),e)),{min:1/0,minIndex:0,max:-1/0}),r=t.lods[s.minIndex],n=2**r.level;let l=r.resolution*n,o=r.scale*n;this.levels=new Array(s.max+1);for(let a=0;a<this.levels.length;a++)this.levels[a]={resolution:l,scale:o,tileSize:[l*t.size[0],l*t.size[1]]},l/=2,o/=2}clone(){return new f(this.toTileInfo())}toTileInfo(){return new u({dpi:this.dpi,origin:new p({x:this.origin[0],y:this.origin[1],spatialReference:this.spatialReference}),size:[this.pixelSize,this.pixelSize],spatialReference:this.spatialReference,lods:this.levels.map(((e,i)=>new m({level:i,scale:e.scale,resolution:e.resolution})))})}getExtent(e,i,t,s){const r=this.levels[e],n=r.tileSize[0],l=r.tileSize[1];s[0]=this.origin[0]+t*n,s[2]=this.origin[0]+(t+1)*n,s[3]=this.origin[1]-i*l,s[1]=this.origin[1]-(i+1)*l}convertExtentToRadians(e,t){this._isWebMercator?(t[0]=h(e[0]),t[1]=c(e[1]),t[2]=h(e[2]),t[3]=c(e[3])):this._isGCS&&(t[0]=i(e[0]),t[1]=i(e[1]),t[2]=i(e[2]),t[3]=i(e[3]))}getExtentGeometry(e,i,t,s=new n){return this.getExtent(e,i,t,v),s.spatialReference=this.spatialReference,s.xmin=v[0],s.ymin=v[1],s.xmax=v[2],s.ymax=v[3],s.zmin=void 0,s.zmax=void 0,s}ensureMaxLod(e){if(null==e)return!1;let i=!1;for(;this.levels.length<=e;){const{resolution:e,scale:t}=this.levels[this.levels.length-1],s=e/2*this.pixelSize;this.levels.push({resolution:e/2,scale:t/2,tileSize:[s,s]}),i=!0}return i}capMaxLod(e){this.levels.length>e+1&&(this.levels.length=e+1)}getMaxLod(){return this.levels.length-1}scaleAtLevel(e){return this.levels[0].scale/2**e}levelAtScale(e){const i=this.levels[0].scale;return e>=i?0:Math.log(i/e)*Math.LOG2E}resolutionAtLevel(e){return this.levels[0].resolution/2**e}compatibleWith(e,i=1/0){if(f.checkUnsupported(e))return!1;const s=new f(e);if(!s.spatialReference.equals(this.spatialReference))return!1;if(s.pixelSize!==this.pixelSize)return!1;const r=Math.min(this.levels.length-1,s.levels.length-1,i),n=this.levels[r].resolution;let l=.5*n;if(!t(s.origin[0],this.origin[0],l)||!t(s.origin[1],this.origin[1],l))return!1;return l=.5*n/2**r/this.pixelSize*g,t(n,s.levels[r].resolution,l)}rootTilesInExtent(e,i=null,t=1/0){const s=new Array,r=this.levels[0].tileSize;if(null==e||0===r[0]||0===r[1])return s;f.computeRowColExtent(e,r,this.origin,v);let n=v[1],l=v[3],o=v[0],a=v[2];const h=a-o,c=l-n;if(h*c>t){const e=Math.floor(Math.sqrt(t));c>e&&(n=n+Math.floor(.5*c)-Math.floor(.5*e),l=n+e),h>e&&(o=o+Math.floor(.5*h)-Math.floor(.5*e),a=o+e)}for(let m=n;m<l;m++)for(let e=o;e<a;e++)s.push([0,m,e]);return null!=i&&(i[0]=this.origin[0]+o*r[0],i[1]=this.origin[1]-l*r[1],i[2]=this.origin[0]+a*r[0],i[3]=this.origin[1]-n*r[1]),s}static computeRowColExtent(e,i,t,s){const r=.001*(e[2]-e[0]+(e[3]-e[1]));s[0]=Math.max(0,Math.floor((e[0]+r-t[0])/i[0])),s[2]=Math.max(0,Math.ceil((e[2]-r-t[0])/i[0])),s[1]=Math.max(0,Math.floor((t[1]-e[3]+r)/i[1])),s[3]=Math.max(0,Math.ceil((t[1]-e[1]-r)/i[1]))}static isPowerOfTwo(e){const i=e.lods,t=i[0].resolution*2**i[0].level;return!i.some((e=>!s(e.resolution,t/2**e.level)))}static hasGapInLevels(e){const i=e.lods.map((e=>e.level));i.sort(((e,i)=>e-i));for(let t=1;t<i.length;t++)if(i[t]!==i[0]+t)return!0;return!1}static tileSizeSupported(e){const i=e.size[1];return i===e.size[0]&&!(i&i-1)&&i>=128&&i<=512}static hasOriginPerLODs(e){const i=e.origin;return e.lods.some((e=>null!=e.origin&&(e.origin[0]!==i.x||e.origin[1]!==i.y)))}static getMissingTileInfoError(){return new e("tilingscheme:tile-info-missing","Tiling scheme must have tiling information")}static checkUnsupported(i){return null==i?x():i.lods.length<1?new e("tilingscheme:generic","Tiling scheme must have at least one level"):f.isPowerOfTwo(i)?f.hasGapInLevels(i)?new e("tilingscheme:gaps","Tiling scheme levels must not have gaps between min and max level"):f.tileSizeSupported(i)?f.hasOriginPerLODs(i)?new e("tilingscheme:multiple-origin","Tiling scheme levels must not have their own origin"):null:new e("tilingscheme:tile-size","Tiles must be square and size must be one of [128, 256, 512]"):new e("tilingscheme:power-of-two","Tiling scheme must be power of two")}static fromExtent(e,i){const t=e[2]-e[0],s=e[3]-e[1],n=r(i),l=1.2*Math.max(t,s),o=256,a=l/o,h=a*n*(96/.0254),c=new f(new u({size:[o,o],origin:new p({x:e[0]-.5*(l-t),y:e[3]+.5*(l-s)}),lods:[new m({level:0,resolution:a,scale:h})],spatialReference:i}));return c.ensureMaxLod(20),c}static makeWebMercatorAuxiliarySphere(e){const i=new f(f.WebMercatorAuxiliarySphereTileInfo);return i.ensureMaxLod(e),i}static makeGCSWithTileSize(e,i=256,t=16){const s=256/i,r=new f(new u({size:[i,i],origin:new p({x:-180,y:90,spatialReference:e}),spatialReference:e,lods:[new m({level:0,resolution:.703125*s,scale:295497598.570834*s})]}));return r.ensureMaxLod(t),r}get test(){return{isWebMercator:this._isWebMercator,isGCS:this._isGCS}}}function x(){return new e("tilingscheme:tile-info-missing","Tiling scheme must have tiling information")}f.WebMercatorAuxiliarySphereTileInfo=new u({size:[256,256],origin:new p({x:-20037508.342787,y:20037508.342787,spatialReference:l.WebMercator}),spatialReference:l.WebMercator,lods:[new m({level:0,resolution:156543.03392800014,scale:591657527.591555})]}),f.WebMercatorAuxiliarySphere=f.makeWebMercatorAuxiliarySphere(19);const v=o();export{f as TilingScheme,x as getMissingTileInfoError};
