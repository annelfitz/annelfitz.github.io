/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{isArrayLike as e}from"../../core/arrayUtils.js";import t from"../../core/Logger.js";import{isUint16Array as s,isUint32Array as i}from"../../core/typedArrayUtil.js";import{checkWebGLError as r}from"./checkWebGLError.js";import{BufferType as n,Usage as _,ResourceType as a,DataType as f}from"./enums.js";const o=()=>t.getLogger("esri.views.webgl.BufferObject"),u=null;class h{static createIndex(e,t,s){return new h(e,n.ELEMENT_ARRAY_BUFFER,t,s)}static createVertex(e,t,s){return new h(e,n.ARRAY_BUFFER,t,s)}static createUniform(e,t,s){return new h(e,n.UNIFORM_BUFFER,t,s)}static createPixelPack(e,t=_.STREAM_READ,s){const i=new h(e,n.PIXEL_PACK_BUFFER,t);return s&&i.setSize(s),i}static createPixelUnpack(e,t=_.STREAM_DRAW,s){return new h(e,n.PIXEL_UNPACK_BUFFER,t,s)}static createTransformFeedback(e,t=_.STATIC_DRAW,s){const i=new h(e,n.TRANSFORM_FEEDBACK_BUFFER,t);return i.setSize(s),i}constructor(e,t,s,i){this._context=e,this.bufferType=t,this.usage=s,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(a.BufferObject,this),this._glName=this._context.gl.createBuffer(),r(this._context.gl),i&&this.setData(i)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get usedMemory(){return this.bufferType===n.ELEMENT_ARRAY_BUFFER?this._indexType===f.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===n.ELEMENT_ARRAY_BUFFER||this.bufferType===n.ARRAY_BUFFER}dispose(){if(this._context?.gl){if(this._glName){this._context.gl.deleteBuffer(this._glName),this._glName=null}this._context.instanceCounter.decrement(a.BufferObject,this),this._context=null}else this._glName&&o().warn("Leaked WebGL buffer object")}setSize(e,t=null){if(e<=0&&o().error("Buffer size needs to be positive!"),this.bufferType===n.ELEMENT_ARRAY_BUFFER&&null!=t)switch(this._indexType=t,t){case f.UNSIGNED_SHORT:e*=2;break;case f.UNSIGNED_INT:e*=4}this._setBufferData(e)}setData(e){if(!e)return;let t=e.byteLength;this.bufferType===n.ELEMENT_ARRAY_BUFFER&&(s(e)&&(t/=2,this._indexType=f.UNSIGNED_SHORT),i(e)&&(t/=4,this._indexType=f.UNSIGNED_INT)),this._setBufferData(t,e)}_setBufferData(e,t=null){this._size=e;const s=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const i=this._context.gl;null!=t?i.bufferData(this.bufferType,t,this.usage):i.bufferData(this.bufferType,e,this.usage),r(i),this._isVAOAware&&this._context.bindVAO(s)}setSubData(e,t,s,i){if(!e)return;(t<0||t*e.BYTES_PER_ELEMENT>=this.usedMemory)&&o().error("offset is out of range!"),s>=i&&o().error("end must be bigger than start!"),(t+(i-s))*e.BYTES_PER_ELEMENT>this.usedMemory&&o().error("An attempt to write beyond the end of the buffer!");const n=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const{gl:_}=this._context;_.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,e,s,i-s),r(_),this._isVAOAware&&this._context.bindVAO(n)}getSubData(e,t=0,s,i){if(s<0||i<0)return void o().error("Problem getting subdata: offset and length were less than zero!");const r=E(e)?e.BYTES_PER_ELEMENT:1;if(r*((s??0)+(i??0))>e.byteLength)return void o().error("Problem getting subdata: offset and length exceeded destination size!");t+r*(i??0)>this.usedMemory&&o().warn("Potential problem getting subdata: requested data exceeds buffer size!");const _=this._context.gl;this.bufferType===n.TRANSFORM_FEEDBACK_BUFFER?(this._context.bindBuffer(this,n.TRANSFORM_FEEDBACK_BUFFER),_.getBufferSubData(n.TRANSFORM_FEEDBACK_BUFFER,t,e,s,i),this._context.unbindBuffer(n.TRANSFORM_FEEDBACK_BUFFER)):(this._context.bindBuffer(this,n.COPY_READ_BUFFER),_.getBufferSubData(n.COPY_READ_BUFFER,t,e,s,i),this._context.unbindBuffer(n.COPY_READ_BUFFER))}async getSubDataAsync(e,t=0,s,i){await this._context.clientWaitAsync(),this.getSubData(e,t,s,i)}}function E(t){return e(t)}export{h as BufferObject,u as tracer};
