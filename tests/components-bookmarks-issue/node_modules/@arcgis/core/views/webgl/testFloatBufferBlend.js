/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{blendingAlpha as e}from"../3d/webgl-engine/lib/OrderIndependentTransparency.js";import{BufferObject as r}from"./BufferObject.js";import{TextureWrapMode as t,PixelType as o,SizedPixelFormat as n,TextureSamplingMode as i,Usage as s,DataType as a,PrimitiveType as p}from"./enums.js";import{FramebufferObject as c}from"./FramebufferObject.js";import{makePipelineState as m}from"./renderState.js";import{TextureDescriptor as f}from"./TextureDescriptor.js";import{VertexArrayObject as l}from"./VertexArrayObject.js";import{VertexElementDescriptor as d}from"./VertexElementDescriptor.js";import{WebGLDriverTestModule as b}from"./WebGLDriverTestModule.js";class u extends b{constructor(e){if(super(),this._rctx=e,!e.gl)return;if(!(e.capabilities.colorBufferFloat?.textureFloat&&e.capabilities.colorBufferFloat?.floatBlend))return;const r="\n    precision highp float;\n    attribute vec2 a_pos;\n\n    void main() {\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ",t="\n     precision highp float;\n\n     void main() {\n      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);\n     }\n    ";this._program=e.programCache.acquire(r,t,new Map([["a_pos",0]]))}_test(b){const u=this._rctx,g=new f(1);g.wrapMode=t.CLAMP_TO_EDGE,g.dataType=o.FLOAT,g.internalFormat=n.RGBA32F,g.samplingMode=i.NEAREST;const _=new c(u,g),w=r.createVertex(u,s.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),T=new l(u,new Map([["a_pos",0]]),{geometry:[new d("a_pos",2,a.UNSIGNED_SHORT,0,4)]},{geometry:w});u.useProgram(b);const j=u.getBoundFramebufferObject(),{x:A,y:x,width:h,height:F}=u.getViewport();u.bindFramebuffer(_),u.setViewport(0,0,1,1),u.bindVAO(T),u.drawArrays(p.TRIANGLE_STRIP,0,4);const y=m({blending:e});u.setPipelineState(y),u.drawArrays(p.TRIANGLE_STRIP,0,4);const E=u.gl.getError();return u.setViewport(A,x,h,F),u.bindFramebuffer(j),T.dispose(),_.dispose(),1282!==E||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}}export{u as FloatBufferBlend};
