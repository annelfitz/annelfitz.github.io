/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import t from"../../request.js";import e from"../../geometry/Point.js";import{project as r}from"../../geometry/projection.js";import{projectResolution as i,getProjectionOffsetGrid as a}from"../../layers/support/rasterFunctions/rasterProjectionHelper.js";import{isImageSource as s,rasterize as n}from"../2d/engine/Bitmap.js";import o from"../2d/engine/webgl/VertexStream.js";import{createProgramTemplate as m}from"../2d/engine/webgl/shaders/MaterialPrograms.js";import{createContext as c}from"../webgl/contextUtils.js";import{TextureWrapMode as p,PixelFormat as h,PixelType as x,ColorAttachment as u}from"../webgl/enums.js";import{FramebufferObject as d}from"../webgl/FramebufferObject.js";import{createTransformTexture as _}from"../webgl/rasterUtils.js";import{RenderingContext as g}from"../webgl/RenderingContext.js";import{Texture as f}from"../webgl/Texture.js";import{TextureDescriptor as l}from"../webgl/TextureDescriptor.js";class w{constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(w._instance)return w._instanceRefCount++,w._instance;w._instanceRefCount=1,w._instance=this,this._ownsRctx=!0;const t=document.createElement("canvas"),e=c(t);e.getExtension("OES_texture_float"),this._rctx=new g(e,{})}const e={applyProjection:!0,bilinear:!1,bicubic:!1},r=m("raster/reproject","raster/reproject",new Map([["a_position",0]]),e);this._program=this._rctx.programCache.acquire(r.shaders.vertexShader,r.shaders.fragmentShader,r.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new o(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,s,n=!1){const o=r(t.extent,s),m=new e({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:c,y:g}=i(m,s,t.extent);let f=(c+g)/2;const w=Math.round((o.xmax-o.xmin)/f),b=Math.round((o.ymax-o.ymin)/f);f=(o.width/w+o.height/b)/2;const j=new e({x:f,y:f,spatialReference:o.spatialReference}),D=a({projectedExtent:o,srcBufferExtent:t.extent,pixelSize:j,hasWrapAround:!0,spacing:[16,16]}),R=_(this._rctx,D),T=new l(w,b);T.wrapMode=p.CLAMP_TO_EDGE;const C=new d(this._rctx,T);this._rctx.bindFramebuffer(C),this._rctx.setViewport(0,0,w,b),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(R,1),this._quad.bind();const{width:y=0,height:E=0}=t.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",y,E),this._program.setUniform2fv("u_transformSpacing",D.spacing),this._program.setUniform2fv("u_transformGridSize",D.size),this._program.setUniform2f("u_targetImageSize",w,b),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),R.dispose(),n){const{width:t,height:e}=C,r=new ImageData(t??0,e??0);C.readPixels(0,0,t??0,e??0,h.RGBA,x.UNSIGNED_BYTE,r.data);const i=C.detachColorTexture(u.COLOR_ATTACHMENT0);return C.dispose(),{texture:i,extent:o,imageData:r}}const U=C.detachColorTexture(u.COLOR_ATTACHMENT0);return C.dispose(),{texture:U,extent:o}}reprojectBitmapData(t,e){const r=s(t.bitmapData)?n(t.bitmapData):t.bitmapData,i=new l;i.wrapMode=p.CLAMP_TO_EDGE,i.width=t.bitmapData.width,i.height=t.bitmapData.height;const a=new f(this._rctx,i,r),o=this.reprojectTexture({texture:a,extent:t.extent},e,!0);o.texture.dispose();const m=document.createElement("canvas"),c=o.imageData;m.width=c.width,m.height=c.height;return m.getContext("2d").putImageData(c,0,0),{bitmapData:m,extent:o.extent}}async loadAndReprojectBitmapData(e,r,i){const a=(await t(e,{responseType:"image"})).data,s=document.createElement("canvas");s.width=a.width,s.height=a.height;const n=s.getContext("2d");n.drawImage(a,0,0);const o=n.getImageData(0,0,s.width,s.height);if(r.spatialReference.equals(i))return{bitmapData:o,extent:r};const m=this.reprojectBitmapData({bitmapData:o,extent:r},i);return{bitmapData:m.bitmapData,extent:m.extent}}destroy(){this._ownsRctx?(w._instanceRefCount--,0===w._instanceRefCount&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),w._instance=null)):(this._quad.dispose(),this._program.dispose())}}w._instanceRefCount=0;export{w as ImageReprojector};
