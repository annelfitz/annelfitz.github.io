/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as e}from"../../../core/accessorSupport/decorators/subclass.js";import t from"../../../geometry/Geometry.js";import{fromJSON as s}from"../../../geometry/support/jsonUtils.js";import m from"./ClipArea.js";import p from"../../../geometry/Extent.js";import i from"../../../geometry/Polygon.js";var y;const c={base:t,key:"type",typeMap:{extent:p,polygon:i}};let n=y=class extends m{constructor(o){super(o),this.type="geometry",this.geometry=null}clone(){return new y({geometry:this.geometry?.clone()??null})}commitVersionProperties(){this.commitProperty("geometry")}};o([r({types:c,json:{read:s,write:!0}})],n.prototype,"geometry",void 0),n=y=o([e("esri.views.layers.support.Geometry")],n);const a=n;export{a as default};
