/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import s from"../../../core/Accessor.js";import t from"../../../core/Collection.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import{LineSnapper as e}from"./LineSnapper.js";import{ParallelLineSnapper as p}from"./ParallelLineSnapper.js";import{RightAngleSnapper as n}from"./RightAngleSnapper.js";import{RightAngleTriangleSnapper as a}from"./RightAngleTriangleSnapper.js";import{SnappingDomain as c}from"./SnappingDomain.js";import{sortCandidatesInPlace as m}from"./snappingUtils.js";let h=class extends s{constructor(o){super(o),this.updating=!1,this._snappers=new t,this._domain=c.SELF}initialize(){this._snappers.push(new p(this.view,this.options),new e(this.view,this.options),new n(this.view,this.options),new a(this.view,this.options))}set options(o){this._set("options",o);for(const s of this._snappers)s.options=o}async fetchCandidates(o,s,t){if(!(s&this._domain&&this.options.effectiveSelfEnabled))return[];const i=[];for(const r of this._snappers.items)for(const s of r.snap(o,t))i.push(s);return m(o,i),i}};o([i({readOnly:!0})],h.prototype,"updating",void 0),o([i({constructOnly:!0})],h.prototype,"view",void 0),o([i()],h.prototype,"options",null),h=o([r("esri.views.interactive.snapping.SelfSnappingEngine")],h);export{h as SelfSnappingEngine};
