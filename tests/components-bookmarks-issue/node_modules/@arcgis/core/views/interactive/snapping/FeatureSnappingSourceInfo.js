/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import r from"../../../core/Accessor.js";import t from"../../../core/Logger.js";import{watch as i,syncAndInitial as l}from"../../../core/reactiveUtils.js";import{sqlAnd as o}from"../../../core/sql.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/RandomLCG.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import n from"../../../layers/support/FeatureFilter.js";import{getFloorFilterClause as u}from"../../../layers/support/floorFilterUtils.js";import{isSubtypeGroupLayer as p,isFeatureLayer as c}from"../../../layers/support/layerUtils.js";import{isUtilityNetworkWebMap as d}from"./snappingUtils.js";import{scaleBoundsPredicate as y}from"../../support/layerViewUtils.js";let f=class extends r{get layerView(){return this.view?.allLayerViews?.find((e=>e.layer===this.layer))}get valid(){return this._valid}get subtypeFilter(){const{layer:e,snappingSource:r}=this;if(!p(e)||!e.subtypes?.length)return{mode:"not-in-use",filter:null};const t=r.layerSource.sublayerSources.filter((e=>e.enabled&&e.layer.visible&&y(this.view?.scale,e.layer.effectiveScaleRange.minScale,e.layer.effectiveScaleRange.maxScale))).map((e=>e.layer.subtypeCode));if(!t.length)return{mode:"none-visible",filter:null};if(t.length===e.subtypes.length)return{mode:"all-visible",filter:null};const i=e.fieldsIndex.get(e.subtypeField)?.name??e.subtypeField;return 1===t.length?{mode:"in-use",filter:`${i} = ${t.getItemAt(0)}`}:{mode:"in-use",filter:`${i} IN (${t.join(", ")})`}}get floorFilter(){const{view:e,layer:r}=this;return e&&r?u({view:e,layer:r}):null}constructor(e){super(e),this.rulesTable=null,this._valid=!1}initialize(){if(!this.snappingSource||!this.layer)return;const{layer:e,snappingSource:r}=this;if("refresh"in e){const t=e;this.addHandles(t.on("refresh",(()=>r.refresh())))}this.loadRules(),this.addHandles([i((()=>r.updating),(e=>r.layerSource.updating=e),l),i((()=>r.availability),(e=>r.layerSource.availability=e),l)])}getFetchCandidatesParameters(e,r,t){if(!this.valid)return[];const{layer:i,layerView:l,floorFilter:s,rulesTable:a,subtypeFilter:u}=this,y={distance:t,mode:this.view?.type??"2d",point:e,coordinateHelper:r.coordinateHelper,...m(),filter:l&&"filter"in l?l.filter:null};if(s&&(y.filter=h(y.filter,s)),"not-in-use"!==u.mode&&"all-visible"!==u.mode){if("none-visible"===u.mode)return[];y.filter?y.filter.where=o(y.filter.where,u.mode):y.filter=new n({where:u.filter})}const f=r.feature,v="subtype-sublayer"===f?.sourceLayer?.type?f.sourceLayer.parent:f?.sourceLayer;if(a&&f&&d(this.view?.map)&&(c(i)||p(i))&&i.layerId&&(c(v)||p(v))&&this.view.map.utilityNetworks?.find((e=>e.isUtilityLayer(v)))){if("loaded"!==a.loadStatus)return[];const e=[],r=i.layerId,t=a.getFeatureSQL(v,f)?.[r];if(!t)return[];const l=t.anyVertex;let o=t.endVertex;return o&&l&&o===l&&(o=""),o&&e.push({...y,returnEdge:!1,vertexMode:"ends",filter:h(y.filter,o)}),l&&e.push({...y,returnEdge:!1,vertexMode:"all",filter:h(y.filter,l)}),e}return[y]}async loadRules(){const{layer:e,view:r}=this;if(e&&r&&d(r?.map)&&(c(e)||p(e))){const l=r.map.utilityNetworks?.find((r=>r.isUtilityLayer(e)));if(l)try{this.rulesTable=await l.getRulesTable(),await(this.rulesTable?.load())}catch(i){return void t.getLogger("esri.views.interactive.snapping.FeatureSnappingSourceInfo").error("Failed to load rules table for snapping source",e.title)}}this._valid=!0}remove(){this.destroy()}destroy(){this.snappingSource?.destroy()}};function m(){return{returnEdge:!0,vertexMode:"all"}}function h(e,r){return null==e?new n({where:r}):e.where?new n({where:o(e.where,r)}):new n({where:r})}e([s({constructOnly:!0})],f.prototype,"layer",void 0),e([s({constructOnly:!0})],f.prototype,"snappingSource",void 0),e([s({constructOnly:!0})],f.prototype,"view",void 0),e([s()],f.prototype,"layerView",null),e([s()],f.prototype,"rulesTable",void 0),e([s()],f.prototype,"valid",null),e([s()],f.prototype,"subtypeFilter",null),e([s()],f.prototype,"floorFilter",null),e([s()],f.prototype,"_valid",void 0),f=e([a("esri.views.interactive.snapping.FeatureSnappingSourceInfo")],f);export{f as FeatureSnappingSourceInfo};
