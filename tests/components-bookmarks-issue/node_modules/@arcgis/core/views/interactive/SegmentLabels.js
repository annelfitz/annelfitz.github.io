/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../Color.js";import o from"../../core/Accessor.js";import{createTask as s}from"../../core/asyncUtils.js";import{multiplyOpacity as r,getContrast as i,BrightnessThreshold as n}from"../../core/colorUtils.js";import{makeHandle as l}from"../../core/handleUtils.js";import{deg2rad as a}from"../../core/mathUtils.js";import{throwIfAborted as c}from"../../core/promiseUtils.js";import{formatLength as p}from"../../core/quantityFormatUtils.js";import{watch as h,on as m}from"../../core/reactiveUtils.js";import{createScreenPointArray as d}from"../../core/screenUtils.js";import{getMetersPerUnit as u,getMetersPerVerticalUnitForSR as f}from"../../core/unitUtils.js";import{property as b}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as g}from"../../core/accessorSupport/decorators/subclass.js";import{squaredDistance as x,set as _,normalize as y,scale as v,lerp as j,add as L}from"../../core/libs/gl-matrix-2/math/vec2.js";import{create as U}from"../../core/libs/gl-matrix-2/factories/vec2f64.js";import{G as I}from"../../chunks/vec32.js";import{isClockwise as C}from"../../geometry/support/coordsUtils.js";import{sv3d as w}from"../../geometry/support/vectorStacks.js";import{fetchMessageBundle as k}from"../../intl/messages.js";import{getConvertedElevationFromVector as S,absoluteHeightElevationInfo as D}from"../../support/elevationInfoUtils.js";import{getDefaultUnitForView as O}from"../../support/getDefaultUnitForView.js";import P from"../overlay/TextOverlayItem.js";import{autoDistance2D as V}from"../support/automaticLengthMeasurementUtils.js";const G=3025,M={default:15,far:25};let A=class extends o{constructor(t){super(t),this.context=null,this.stagedVertex=null,this.visible=!0,this.edgeDistance="default",this._messagesUnits=null,this._labelInfos=[],this._nextLabelIndex=0}initialize(){const t=s((async t=>{const e=await k("esri/core/t9n/Units");c(t),this._messagesUnits=e}));this.addHandles([h((()=>[null!=this.context&&this.getCameraOrExtent(this.context),this.visible,this._edgeDistancePixels,this.stagedVertex,this._messagesUnits]),(()=>this._update())),...["vertex-add","vertex-update","vertex-remove"].map((t=>m((()=>this.context?.editGeometryOperations),t,(()=>this._update())))),l((()=>t.abort())),h((()=>this._colors),(t=>this._updateStyle(t)))])}destroy(){for(this._nextLabelIndex=0;this._labelInfos.length;)this._destroyLabel(this._labelInfos.pop())}get updating(){return null==this._messagesUnits}get test(){return{labelContents:this._labelInfos.slice(0,this._nextLabelIndex).map((t=>t.label.text))}}get _edgeDistancePixels(){return M[this.edgeDistance]}get _colors(){const t=this.context?.view.effectiveTheme.textColor??e.fromArray([255,255,255]);return{textColor:t,backgroundColor:r(i(t,n.Low),.6)}}_update(){if(this.destroyed)return;this._nextLabelIndex=0;const{context:t,stagedVertex:e}=this;if(!t)return this._destroyUnusedLabels();const{editGeometryOperations:o}=t,{components:s,geometry:r,coordinateHelper:i}=o.data;if(!r)return this._destroyUnusedLabels();const n=s.length;for(let l=0;l<n;++l){const s=R(r,o,e,i,l);if(s.length<2||!q(s,t.view,t.elevationInfo,i.spatialReference))continue;const a=1===n&&!C(s);let c=T,p=X;this.toScreenPointArray(t,s[0],c);for(let e=1;e<s.length;++e){const o=s[e-1],r=s[e];this.toScreenPointArray(t,r,p),this._addLabel(t,o,c,r,p,a),[c,p]=[p,c]}}this._destroyUnusedLabels()}_updateStyle({textColor:t,backgroundColor:e}){const o=this._nextLabelIndex,s=this._labelInfos;for(let r=0;r<o;++r){const{label:o}=s[r];o.textColor=t,o.backgroundColor=e}}_addLabel(t,e,o,s,r,i){const{label:n}=this._getOrCreateLabel(t);if(!this.visible||x(o,r)<G)return void(n.visible=!1);const{spatialReference:l}=t.editGeometryOperations.data,a=V(e,s,l),c=this._messagesUnits,h=O(t.view);n.text=null!=c&&null!=a?p(c,a,h):"",n.visible=!0;const m=r[0]-o[0],d=r[1]-o[1];i?_(F,-d,m):_(F,d,-m),y(F,F),v(F,F,this._edgeDistancePixels),j(H,o,r,.5),L(H,H,F),n.position=[H[0],H[1]],Math.abs(F[0])>Math.abs(F[1])?n.anchor=F[0]>0?"left":"right":n.anchor=-F[1]<0?"top":"bottom"}_getOrCreateLabel(t){const e=this._labelInfos.length>this._nextLabelIndex,{textColor:o,backgroundColor:s}=this._colors;if(e){const t=this._labelInfos[this._nextLabelIndex++],{label:e}=t;return e.textColor=o,e.backgroundColor=s,t}const r=new P({anchor:"center",fontSize:8,textColor:o,backgroundColor:s});t.view.overlay?.items.add(r);const i={label:r};return this._labelInfos.push(i),this._nextLabelIndex=this._labelInfos.length,i}_destroyUnusedLabels(){for(;this._labelInfos.length>this._nextLabelIndex;)this._destroyLabel(this._labelInfos.pop())}_destroyLabel({label:t}){this.context?.view.overlay?.items.remove(t),t.destroy()}};function R(t,e,o,s,r){const i=[];if(e.data.components[r].iterateVertices((t=>{i.push(s.toXYZ(t.pos,w.get()))})),0===r&&null!=o&&i.push(s.toXYZ(o,w.get())),i.length<2)return i;const n=i[0],l=i[i.length-1];return"polygon"===t.type&&i.length>2&&!I(n,l)&&i.push(n),i}function q(t,e,o,s){if("2d"===e.type)return!0;const r=u(s)??1,i=f(s),n=t=>S(e,t,s,o,D)??0;for(let l=1;l<t.length;++l){const e=t[l-1],o=t[l],s=(o[0]-e[0])*r,a=(o[1]-e[1])*r,c=(n(o)-n(e))*i;if(Math.abs(c)/Math.sqrt(s*s+a*a)>z)return!1}return!0}t([b()],A.prototype,"context",void 0),t([b()],A.prototype,"stagedVertex",void 0),t([b()],A.prototype,"visible",void 0),t([b()],A.prototype,"edgeDistance",void 0),t([b()],A.prototype,"updating",null),t([b()],A.prototype,"_messagesUnits",void 0),t([b()],A.prototype,"_edgeDistancePixels",null),t([b()],A.prototype,"_colors",null),A=t([g("esri.views.interactive.SegmentLabels")],A);const z=a(5),F=U(),H=U(),T=d(),X=d();export{A as SegmentLabels};
