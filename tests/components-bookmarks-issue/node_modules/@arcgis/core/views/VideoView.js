/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../Color.js";import"../geometry.js";import i from"../Viewpoint.js";import s from"../core/Accessor.js";import r from"../core/Evented.js";import{EsriPromiseMixin as o}from"../core/Promise.js";import{watch as a,whenOnce as n,initial as d,syncAndInitial as l}from"../core/reactiveUtils.js";import{property as h}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/Logger.js";import"../core/RandomLCG.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import p from"../layers/support/ExtentAndRotationGeoreference.js";import{MediaElementView as c}from"../layers/support/MediaElementView.js";import y from"../layers/support/VideoElement.js";import{DOMContainer as g}from"./DOMContainer.js";import{extentToScale as w}from"./2d/viewpointUtils.js";import{ViewStateManager as v}from"./2d/ViewStateManager.js";import u from"./2d/engine/webgl/Overlay.js";import f from"./2d/engine/webgl/OverlayContainer.js";import j from"../geometry/SpatialReference.js";import V from"../geometry/Extent.js";const _=new t("#000");let C;async function E(){const[,{Stage:e}]=await Promise.all([import("./2d/webglDeps.js"),import("./2d/mapViewDeps.js")]);C=e}function x(e,t){const[i,s]=e,[r,o]=t,a=r/o,n=s*a,d=i/a;return i/s>=1?a>=1?n<=i?[n,s]:[i,d]:d<=s?[i,d]:[n,s]:a>=1?d<=s?[i,d]:[n,s]:n<=i?[n,s]:[i,d]}function M(e,t){const s=e&&w(e,t);return new i({targetGeometry:e.center,scale:s})}function b(e){return new V({xmin:0,ymin:0,xmax:e[0],ymax:e[1],spatialReference:{wkid:0}})}let R=class extends s{};R=e([m("esri.views.VideoView.Base")],R);let H=class extends(g(r.EventedMixin(o(R)))){constructor(e){super(e),this.stateManager=new v,this._isValid=!1,this.layer=null,this.ready=!1,this.addHandles([a((()=>this.preconditionsReady),(e=>{e?this._startup():this._teardown()})),a((()=>this.layer),(()=>this.addResolvingPromise(n((()=>this.ready)))),d)])}initialize(){this.addResolvingPromise(Promise.all([E()]).then((()=>(this._isValid=!0,n((()=>this.ready))))))}destroy(){this._teardown()}get state(){return this.stateManager.state}get preconditionsReady(){return!(!this._isValid||0===this.width||0===this.height||0===this.videoWidth||0===this.videoHeight)}get videoHeight(){return this.layer?.videoHeight||0}get videoWidth(){return this.layer?.videoWidth||0}_startup(){if(!this.layer)return;const e=x(this.size,[this.videoWidth,this.videoHeight]),t=b(e),i=M(t,e);this._mediaElementView=new c({element:new y({video:this.layer.videoElement,georeference:new p({extent:t}),autoplay:!1}),spatialReference:new j({wkid:0})}),this.stateManager.startup(i,this.size,i.targetGeometry.spatialReference);const s=new C(this.surface,{renderingOptions:{samplingMode:"dynamic",edgeLabelsVisible:!0,labelsAnimationTime:125,labelCollisionsEnabled:!0},backgroundColor:_});this.stage=s,this.addHandles([a((()=>this.state.id),(()=>s.state=this.state),l),this.on("resize",(({width:e,height:t})=>{if(this._mediaElementView){const i=x([e,t],[this.videoWidth,this.videoHeight]),s=b(i);this._mediaElementView.element.georeference=new p({extent:s}),this.stateManager.viewpoint=M(s,i),this.stateManager.resize(e,t)}}))],"video-view");const r=new u(this._mediaElementView);this.overlayContainer=new f,this.overlayContainer.addChild(r),this.stage.addChild(this.overlayContainer),this._set("ready",!0)}_teardown(){this.stage.destroy(),this.stage=null,this._mediaElementView=null,this.overlayContainer.removeAllChildren(),this.overlayContainer=null,this.removeHandles("video-view"),this._set("ready",!1),this.stateManager.teardown()}};e([h()],H.prototype,"stateManager",void 0),e([h({readOnly:!0})],H.prototype,"state",null),e([h()],H.prototype,"_isValid",void 0),e([h()],H.prototype,"layer",void 0),e([h({readOnly:!0})],H.prototype,"preconditionsReady",null),e([h({readOnly:!0})],H.prototype,"ready",void 0),e([h({readOnly:!0})],H.prototype,"videoHeight",null),e([h({readOnly:!0})],H.prototype,"videoWidth",null),H=e([m("esri.views.VideoView")],H);const O=H;export{O as default};
