/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import has from"../../../../../core/has.js";import{AttributeDataType as e}from"../definitions.js";import t from"../VertexStream.js";import{Effect as r}from"./Effect.js";class i extends r{constructor(){super(...arguments),this.defines=[],this._desc={vsPath:"fx/integrate",fsPath:"fx/integrate",attributes:new Map([["a_position",0]])}}dispose(){this._quad&&this._quad.dispose()}bind(){}unbind(){}draw(r,i){if(!i?.size)return;const{context:n,renderingOptions:o}=r;this._quad||(this._quad=new t(n,[0,0,1,0,0,1,1,1]));const a=n.getBoundFramebufferObject(),{x:s,y:u,width:m,height:d}=n.getViewport(),f=i.getBlock(e.Animation);if(null==f)return;const l=i.getUniforms(n);n.setViewport(0,0,i.size,i.size);const c=l.filterFlags,x=l.animation,p=has("featurelayer-animation-enabled")?o.labelsAnimationTime:1,_=f.getFBO(n,1);n.unbindTexture(_.colorTexture),this._computeDelta(r,_,x,c,p);const g=f.getFBO(n);n.unbindTexture(g.colorTexture),this._updateAnimationState(r,_,g),n.bindFramebuffer(a),n.setViewport(s,u,m,d)}_computeDelta(e,t,r,i,n){const{context:o,painter:a,displayLevel:s}=e,u=a.materialManager.getProgram(this._desc,["delta"]);if(o.bindFramebuffer(t),o.setColorMask(!0,!0,!0,!0),o.setClearColor(0,0,0,0),o.clear(o.gl.COLOR_BUFFER_BIT),o.useProgram(u),!("type"in i.texture)||!("type"in r.texture))throw new Error("InternalError: Expected to find texture");o.bindTexture(i.texture,i.unit),o.bindTexture(r.texture,r.unit),u.setUniform1i("u_maskTexture",i.unit),u.setUniform1i("u_sourceTexture",r.unit),u.setUniform1f("u_timeDelta",e.deltaTime),u.setUniform1f("u_animationTime",n),u.setUniform1f("u_zoomLevel",Math.round(10*s)),this._quad.draw()}_updateAnimationState(e,t,r){const{context:i,painter:n}=e,o=n.materialManager.getProgram(this._desc,["update"]);i.bindTexture(t.colorTexture,1),i.useProgram(o),o.setUniform1i("u_sourceTexture",1),i.bindFramebuffer(r),i.setColorMask(!0,!0,!0,!0),i.setClearColor(0,0,0,0),i.clear(i.gl.COLOR_BUFFER_BIT),this._quad.draw()}}export{i as AnimationEffect};
