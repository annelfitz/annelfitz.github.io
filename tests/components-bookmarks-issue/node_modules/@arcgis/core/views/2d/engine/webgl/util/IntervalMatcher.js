/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{createMeshWriterGroupFromSchema as t}from"../shaderGraph/techniques/mesh/createMeshWriter.js";import{FeatureMatcher as e}from"./Matcher.js";class s extends e{constructor(t,e){super(),this._intervals=[],this._isMaxInclusive=e,this._field=t}static async fromIntervalSchema(e,i,a,r){const n=await e.createComputedField(a),l=new s(n,a.isMaxInclusive);await Promise.all(a.intervals.map((async s=>{const a=await t(e,i,s.meshes,r);l.add(s,a)})));const c=await t(e,i,a.defaultSymbol,r);l.setDefault(c);const u=await t(e,i,a.backgroundFill,r);return l.setBackgroundFill(u),l}add(t,e){this._intervals.push({interval:t,result:e}),this._intervals.sort(((t,e)=>t.interval.min-e.interval.min))}size(){return super.size()+this._intervals.length}doMatch(t,e){const s=this._field?.read(t,e);if(null==s||isNaN(s)||s===1/0||s===-1/0)return null;for(let i=0;i<this._intervals.length;i++){const{interval:t,result:e}=this._intervals[i],a=s>=t.min,r=this._isMaxInclusive?s<=t.max:s<t.max;if(a&&r)return e}return null}}export{s as IntervalMatcher};
