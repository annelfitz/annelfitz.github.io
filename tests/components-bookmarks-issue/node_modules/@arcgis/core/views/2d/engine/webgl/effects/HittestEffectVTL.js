/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{hittestRadius as t}from"../definitions.js";import{Effect as e}from"./Effect.js";import{PixelFormat as s,PixelType as o}from"../../../../webgl/enums.js";class r extends e{constructor(){super(...arguments),this.name=this.constructor.name,this.defines=["id"],this._lastSize=0,this._boundFBO=null}dispose(){null!=this._fbo&&this._fbo.dispose()}bind({context:t,painter:e}){this._boundFBO=t.getBoundFramebufferObject();const s=e.getFbos().effect0;t.bindFramebuffer(s),t.setColorMask(!0,!0,!0,!0),t.setClearColor(0,0,0,0),t.clear(t.gl.COLOR_BUFFER_BIT)}unbind({context:t}){t.bindFramebuffer(this._boundFBO),this._boundFBO=null}draw(e,s,o=2*t){this._resolve(e,s,o)}async _resolve({context:t,state:e,pixelRatio:r},i,n){const f=t.getBoundFramebufferObject(),a=e.size[1]*r,u=Math.round(n*r),h=u/2,l=u/2;this._ensureBuffer(u),i.forEach((async(t,e)=>{const n=new Map,b=Math.floor(e.x*r-u/2),c=Math.floor(a-e.y*r-u/2);await f.readPixelsAsync(b,c,u,u,s.RGBA,o.UNSIGNED_BYTE,this._buf);for(let s=0;s<this._buf32.length;s++){const t=this._buf32[s];if(4294967295!==t&&0!==t){const e=s%u,o=u-Math.floor(s/u),r=(h-e)*(h-e)+(l-o)*(l-o),i=n.has(t)?n.get(t):4294967295;n.set(t,Math.min(r,i))}}const _=Array.from(n).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]));t.resolve(_),i.delete(e)}))}_ensureBuffer(t){this._lastSize!==t&&(this._lastSize=t,this._buf=new Uint8Array(4*t*t),this._buf32=new Uint32Array(this._buf.buffer))}}export{r as HittestEffectVTL};
