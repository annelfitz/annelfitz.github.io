/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t,a as e}from"../../../../../../../chunks/tslib.es6.js";import{location as r,uniform as o,input as i}from"../../GraphShaderModule.js";import{Vec2 as s,Vec3 as l,mod as n,Float as a,mix as p,texture2D as u,Mat3 as d,negate as c,Vec4 as m}from"../../graph/glsl.js";import{FeatureFragmentInput as f,BaseHittestVertexInput as x}from"./AFeatureShader.js";import{FillVertexInput as y,FillShader as v}from"./FillShader.js";import{LocalTileOffset as b}from"./LocalTileOffset.js";import{MosaicInfo as w}from"./MosaicInfo.js";class h extends y{}t([r(5,m)],h.prototype,"tlbr",void 0),t([r(6,a)],h.prototype,"inverseRasterizationScale",void 0);class g extends f{}function j(t){const e=new a(1),r=new a(0);return new d(e.divide(t.x),r.divide(t.y),0,c(r.divide(t.x)),e.divide(t.y),0,0,0,1)}function O(t,e){const r=e.tlbr.xy,o=e.tlbr.zw,i=o.x.subtract(r.x),n=r.y.subtract(o.y),a=new s(i,n).multiply(e.inverseRasterizationScale),p=a.multiply(t.view.requiredZoomFactor),u=j(p),d=t.localTileOffset.getPatternOffsetAtTileOrigin(a).divide(p),c=new l(e.pos,1);return{tileTextureCoord:u.multiply(c).xy.subtract(d),tlbr:e.tlbr.divide(t.mosaicInfo.size.xyxy)}}function T(t,e){const r=n(t.tileTextureCoord,new a(1)),o=p(t.tlbr.xy,t.tlbr.zw,r),i=u(e.texture,o);return t.color.multiply(i)}class z extends v{vertex(t,e){return{...super.vertex(t,e),...O(this,t)}}fragment(t){const e=T(t,this.mosaicInfo);return this.getFragmentOutput(e,t,new a(0))}}t([o(w)],z.prototype,"mosaicInfo",void 0),t([o(b)],z.prototype,"localTileOffset",void 0),t([e(0,i(h)),e(1,i(x))],z.prototype,"vertex",null),t([e(0,i(g))],z.prototype,"fragment",null);export{g as PatternFillFragmentInput,z as PatternFillShader,h as PatternFillVertexInput,T as getPatternFillFragmentColor,O as getPatternFillVertexData};
