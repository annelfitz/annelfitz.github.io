/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import has from"../../../../../core/has.js";import{filterFlag0 as e,effectFlag0 as t}from"../definitions.js";import{CollisionBitsetGrid as o,none as i,hasCollision as n,outsideExtent as l}from"./CollisionGrid.js";const s=254,r=255,c=0;function a(e,t){const o=e.children.slice();o.sort(((e,t)=>e.tileAge-t.tileAge)),o.forEach((e=>{null!=e.labelMetrics&&e.isReady&&t(e,e.labelMetrics)}))}function f(e,t){return(!e.minScale||e.minScale>=t)&&(!e.maxScale||e.maxScale<=t)}class d{run(e,t,o,i){const n=[];for(let l=e.length-1;l>=0;l--){const t=e[l];t.labelingCollisionInfos?.length&&n.push(...t.labelingCollisionInfos)}has("esri-2d-update-debug")&&n.length&&console.debug("CollisionEngine.run"),this._transformMetrics(n),this._runCollision(n,t,o,i);for(const l of n)l.container.requestRender()}_runCollision(e,t,i,n){const[l,d]=t.state.size,u=new o(l,d,t.pixelRatio);for(const{container:o,deconflictionEnabled:b,visible:h}of e){const e=o.attributeView;b?h?(this._prepare(o),this._collideVisible(u,o,i,n),this._collideInvisible(u,o)):a(o,((t,o)=>{for(const i of o)e.setLabelMinZoom(i.entityTexel,r)})):a(o,((t,o)=>{for(const n of o)f(n,i)?(e.setLabelMinZoom(n.entityTexel,c),h&&u.insertMetrics(n)):e.setLabelMinZoom(n.entityTexel,s)}))}}_isFiltered(o,i,n){const l=i.getFilterFlags(o),s=!n.hasFilter||!!(l&e),r=null==n.featureEffect||n.featureEffect.excludedLabelsVisible||!!(l&t);return!(s&&r)}_prepare(e){const t=e.attributeView,o=new Set;a(e,((i,n)=>{for(const l of n){const i=l.entityTexel;if(o.has(i))continue;if(o.add(i),this._isFiltered(i,t,e.layerView)){t.setLabelMinZoom(i,s);continue}t.getLabelMinZoom(i)!==c?t.setLabelMinZoom(i,r):t.setLabelMinZoom(i,c)}}))}_collideVisible(e,t,o,r){const d=t.attributeView,u=new Set;a(t,((t,a)=>{for(let b=0;b<a.length;b++){const h=a[b].entityTexel;if(u.has(h))continue;if(t.key.level!==r){d.setLabelMinZoom(h,s),u.add(h);continue}if(!f(a[b],o)){d.setLabelMinZoom(h,s),u.add(h);continue}if(0!==d.getLabelMinZoom(h)){u.add(h);continue}let m=!1,M=!0;const g=b;let p=b;for(;p<a.length;p++){const t=a[p];if(t.entityTexel!==h)break;if(m)continue;switch(e.hasCollision(t)){case l:break;case n:m=!0,M=!1;break;case i:M=!1}}if(!m)for(let t=g;t<p;t++)e.insertMetrics(a[t]);b=p-1,M||(u.add(h),d.setLabelMinZoom(h,m?s:c))}}))}_collideInvisible(e,t){const o=t.attributeView,s=new Set;a(t,((t,a)=>{for(let f=0;f<a.length;f++){const t=a[f].entityTexel;if(s.has(t))continue;if(o.getLabelMinZoom(t)!==r){s.add(t);continue}let d=!1,u=!0;const b=f;let h=f;for(;h<a.length;h++){const o=a[h];if(o.entityTexel!==t)break;if(d)continue;switch(e.hasCollision(o)){case l:break;case n:d=!0,u=!1;break;case i:u=!1}}if(!d)for(let o=b;o<h;o++)e.insertMetrics(a[o]);f=h-1,u||(s.add(t),o.setLabelMinZoom(t,d?r:c))}}))}_transformMetrics(e){for(const{container:t,geometryType:o,vvEvaluators:i}of e)a(t,((e,n)=>{const l=t.attributeView,s=e.transforms.labelMat2d;s[4]=Math.round(s[4]),s[5]=Math.round(s[5]);const r="polyline"===o;for(const t of n){const{entityTexel:e,anchorX:o,anchorY:n}=t;let c=t.referenceBounds?.size??0;const a=i[0];if(null!=a){const t=a(l.getVVSize(e));c=isNaN(t)||null==t||t===1/0?c:t}const f=t.directionX*(c/2),d=t.directionY*(c/2);for(const i of t.bounds){let e=o,t=n;if(r){let o=e+i.x+f,n=t+i.y+d;o=s[0]*o+s[2]*n+s[4],n=s[1]*o+s[3]*n+s[5],i.computedX=Math.floor(o),i.computedY=Math.floor(n)}else{e=s[0]*o+s[2]*n+s[4],t=s[1]*o+s[3]*n+s[5];const l=e+i.x+f,r=t+i.y+d;i.computedX=l,i.computedY=r}}}}))}}export{d as CollisionEngine};
