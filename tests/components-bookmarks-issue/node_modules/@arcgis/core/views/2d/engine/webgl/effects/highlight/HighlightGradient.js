/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import o from"../../../../../../core/Logger.js";import{highlightReasons as i}from"../../../highlightReasons.js";import{textureBindingHighlight1 as t}from"../../definitions.js";import{highlightSizing as e,shadeTextureSize as l,sigma as r}from"./parameters.js";import{TextureWrapMode as n}from"../../../../../webgl/enums.js";import{Texture as h}from"../../../../../webgl/Texture.js";import{TextureDescriptor as s}from"../../../../../webgl/TextureDescriptor.js";const a=()=>o.getLogger("esri.views.2d.engine.webgl.painter.highlight.HighlightGradient");function u(o,i){i.fillColor[0]=o.color.r/255,i.fillColor[1]=o.color.g/255,i.fillColor[2]=o.color.b/255,i.fillColor[3]=o.color.a,o.haloColor?(i.outlineColor[0]=o.haloColor.r/255,i.outlineColor[1]=o.haloColor.g/255,i.outlineColor[2]=o.haloColor.b/255,i.outlineColor[3]=o.haloColor.a):(i.outlineColor[0]=i.fillColor[0],i.outlineColor[1]=i.fillColor[1],i.outlineColor[2]=i.fillColor[2],i.outlineColor[3]=i.fillColor[3]),i.fillColor[3]*=o.fillOpacity,i.outlineColor[3]*=o.haloOpacity,i.fillColor[0]*=i.fillColor[3],i.fillColor[1]*=i.fillColor[3],i.fillColor[2]*=i.fillColor[3],i.outlineColor[0]*=i.outlineColor[3],i.outlineColor[1]*=i.outlineColor[3],i.outlineColor[2]*=i.outlineColor[3],i.outlineWidth=e.outlineWidth,i.outerHaloWidth=e.outerHaloWidth,i.innerHaloWidth=e.innerHaloWidth,i.outlinePosition=e.outlinePosition}const d=[0,0,0,0];class g{constructor(){this.type="single",this._convertedHighlightOptions={fillColor:[.2*.75,.6*.75,.675,.75],outlineColor:[.2*.9,.54,.81,.9],outlinePosition:e.outlinePosition,outlineWidth:e.outlineWidth,innerHaloWidth:e.innerHaloWidth,outerHaloWidth:e.outerHaloWidth},this._shadeTexChanged=!0,this._texelData=new Uint8Array(4*l),this._minMaxDistance=[0,0]}setHighlightOptions(o){const i=this._convertedHighlightOptions;u(o,i);const t=i.outlinePosition-i.outlineWidth/2-i.outerHaloWidth,e=i.outlinePosition-i.outlineWidth/2,n=i.outlinePosition+i.outlineWidth/2,h=i.outlinePosition+i.outlineWidth/2+i.innerHaloWidth,s=Math.sqrt(Math.PI/2)*r,g=Math.abs(t)>s?Math.round(10*(Math.abs(t)-s))/10:0,f=Math.abs(h)>s?Math.round(10*(Math.abs(h)-s))/10:0;let C;g&&!f?a().error("The outer rim of the highlight is "+g+"px away from the edge of the feature; consider reducing some width values or shifting the outline position towards positive values (inwards)."):!g&&f?a().error("The inner rim of the highlight is "+f+"px away from the edge of the feature; consider reducing some width values or shifting the outline position towards negative values (outwards)."):g&&f&&a().error("The highlight is "+Math.max(g,f)+"px away from the edge of the feature; consider reducing some width values.");const c=[void 0,void 0,void 0,void 0];function m(o,i,t){c[0]=(1-t)*o[0]+t*i[0],c[1]=(1-t)*o[1]+t*i[1],c[2]=(1-t)*o[2]+t*i[2],c[3]=(1-t)*o[3]+t*i[3]}const{_texelData:p}=this;for(let r=0;r<l;++r)C=t+r/(l-1)*(h-t),C<t?(c[0]=0,c[1]=0,c[2]=0,c[3]=0):C<e?m(d,i.outlineColor,(C-t)/(e-t)):C<n?[c[0],c[1],c[2],c[3]]=i.outlineColor:C<h?m(i.outlineColor,i.fillColor,(C-n)/(h-n)):[c[0],c[1],c[2],c[3]]=i.fillColor,p[4*r]=255*c[0],p[4*r+1]=255*c[1],p[4*r+2]=255*c[2],p[4*r+3]=255*c[3];this._minMaxDistance[0]=t,this._minMaxDistance[1]=h,this._shadeTexChanged=!0}applyHighlightOptions(o,i){if(!this._shadeTex){const i=new s;i.wrapMode=n.CLAMP_TO_EDGE,i.width=l,i.height=1,this._shadeTex=new h(o,i)}this._shadeTexChanged&&(this._shadeTex.updateData(0,0,0,l,1,this._texelData),this._shadeTexChanged=!1),o.bindTexture(this._shadeTex,t),i.setUniform2fv("u_minMaxDistance",this._minMaxDistance)}destroy(){this._shadeTex?.dispose(),this._shadeTex=null}getReasonsWithGradients(){return[{activeReasons:(1<<i.length)-1,activeGradient:this}]}}export{g as default};
