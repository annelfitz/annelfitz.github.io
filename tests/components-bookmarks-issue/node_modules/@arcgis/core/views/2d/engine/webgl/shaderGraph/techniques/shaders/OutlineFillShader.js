/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t,a as o}from"../../../../../../../chunks/tslib.es6.js";import{location as i,uniform as e,option as r,input as s}from"../../GraphShaderModule.js";import{greaterThan as a,Float as l,ifElse as p,Vec3 as n,Vec4 as m,Vec2 as u}from"../../graph/glsl.js";import{FeatureVertexInput as d,AFeatureShader as c,BaseHittestVertexInput as f}from"./AFeatureShader.js";import{bitsetTypeFillOutline as v}from"./constants.js";import{hittestFill as y,failHittest as V}from"./hittestUtils.js";import{LineFragmentInput as h,getLineVertexData as S,getLineFragmentColor as b,AntialiasingControls as j}from"./LineShader.js";import{getBit as x}from"./utils.js";import{VisualVariableColor as g}from"./VisualVariableColor.js";import{VisualVariableOpacity as w}from"./VisualVariableOpacity.js";import{VisualVariableSizeMinMaxValue as z}from"./VisualVariableSizeMinMaxValue.js";import{VisualVariableSizeScaleStops as M}from"./VisualVariableSizeScaleStops.js";import{VisualVariableSizeStops as O}from"./VisualVariableSizeStops.js";import{VisualVariableSizeUnitValue as C}from"./VisualVariableSizeUnitValue.js";import{getVisualVariableOpacity as P,getVisualVariableColor as U}from"./vvUtils.js";class W extends d{}t([i(3,u)],W.prototype,"offset",void 0),t([i(4,m)],W.prototype,"color",void 0),t([i(5,u)],W.prototype,"normal",void 0),t([i(6,l)],W.prototype,"halfWidth",void 0),t([i(7,l)],W.prototype,"referenceHalfWidth",void 0),t([i(8,u)],W.prototype,"zoomRange",void 0);class R extends h{}function A(t,o,i){const{id:e,bitset:r}=o,s=x(r,v),u=a(s,new l(.5)),d=S(t,o),c=p(u,d.halfWidth,new l(0)),f=P(t,e),y=U(t,e,o.color),V=p(u,o.color,y.multiply(f)),h=t.view.displayViewScreenMat3.multiply(new n(o.pos.xy,1)),b=t.clip(o.id),j=new m(h.xy,b,1),g=p(u,d.glPosition,j),w=i&&t.maybeRunHittest(o,i,u);return{isOutline:s,color:V,opacity:new l(1),halfWidth:c,normal:d.normal,glPosition:g,...w}}class F extends c{constructor(){super(...arguments),this.computeAttributes={pos:["nextPos1","nextPos2"]}}}t([e(j)],F.prototype,"antialiasingControls",void 0),t([r(g)],F.prototype,"visualVariableColor",void 0),t([r(w)],F.prototype,"visualVariableOpacity",void 0),t([r(z)],F.prototype,"visualVariableSizeMinMaxValue",void 0),t([r(M)],F.prototype,"visualVariableSizeScaleStops",void 0),t([r(O)],F.prototype,"visualVariableSizeStops",void 0),t([r(C)],F.prototype,"visualVariableSizeUnitValue",void 0);class H extends F{vertex(t,o){return A(this,t,o)}fragment(t){const{color:o,isOutline:i}=t,e=a(i,new l(.5)),r=b(t,this.antialiasingControls.blur),s=p(e,r,o),n=p(e,new l(1/255),new l(0));return this.getFragmentOutput(s,t,n)}hittest(t,o,i){return p(i,V(this.hittestRequest),y(this,t,o))}}t([o(0,s(W)),o(1,s(f))],H.prototype,"vertex",null),t([o(0,s(R))],H.prototype,"fragment",null);export{F as AOutlineFillShader,R as OutlineFillFragmentInput,H as OutlineFillShader,W as OutlineFillVertexInput,A as getOutlineFillVertexData};
