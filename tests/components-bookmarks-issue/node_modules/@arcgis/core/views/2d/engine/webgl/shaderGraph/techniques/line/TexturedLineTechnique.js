/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{FeatureSymbologyDrawOrder as e}from"../../../enums.js";import{resolveDynamicUniforms as t,getFeatureUniforms as r,getSelectionDefines as s,isHittest as i,getFeaturePipelineState as o}from"../featureTechniqueUtils.js";import{Technique as n}from"../Technique.js";import{getAntialiasingControls as a}from"./utils.js";import{meshWriterRegistry as m}from"../mesh/MeshWriterRegistry.js";import{TexturedLineShader as u}from"../shaders/TexturedLineShader.js";class h extends n{constructor(){super(...arguments),this.meshWriter=m.TexturedLineMeshWriter,this.shaders={geometry:new u},this.symbologyPlane=e.LINE}render(e,n){const{context:m,painter:u,pixelRatio:h}=e;u.setShader({shader:this.shaders.geometry,uniforms:{...t(e,n.target,n.instance.getInput().geometry),...r(e,n.target),antialiasingControls:a(h),mosaicInfo:u.textureManager.getMosaicInfo(m,n.textureKey)},defines:{...s(e)},optionalAttributes:n.instance.optionalAttributes,useComputeBuffer:i(e)}),u.setPipelineState(o(e)),u.submitDraw(m,n)}}export{h as TexturedLineTechnique};
