/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t,a as o}from"../../../../../../../chunks/tslib.es6.js";import{location as r,uniform as e,input as s}from"../../GraphShaderModule.js";import{greaterThan as i,Float as a,ifElse as l,Vec4 as n}from"../../graph/glsl.js";import{BaseHittestVertexInput as p}from"./AFeatureShader.js";import{getLineFragmentColor as m}from"./LineShader.js";import{LocalTileOffset as f}from"./LocalTileOffset.js";import{MosaicInfo as d}from"./MosaicInfo.js";import{OutlineFillVertexInput as h,OutlineFillFragmentInput as u,OutlineFillShader as c,getOutlineFillVertexData as j}from"./OutlineFillShader.js";import{getPatternFillVertexData as g,getPatternFillFragmentColor as v}from"./PatternFillShader.js";class x extends h{}t([r(9,n)],x.prototype,"tlbr",void 0),t([r(10,a)],x.prototype,"inverseRasterizationScale",void 0);class y extends u{}class S extends c{vertex(t,o){return{...j(this,t,o),...g(this,t)}}fragment(t){const{isOutline:o}=t,r=i(o,new a(.5)),e=m(t,this.antialiasingControls.blur),s=v(t,this.mosaicInfo),n=l(r,e,s),p=l(r,new a(1/255),new a(0));return this.getFragmentOutput(n,t,p)}}t([e(d)],S.prototype,"mosaicInfo",void 0),t([e(f)],S.prototype,"localTileOffset",void 0),t([o(0,s(x)),o(1,s(p))],S.prototype,"vertex",null),t([o(0,s(y))],S.prototype,"fragment",null);export{y as PatternOutlineFillFragmentInput,S as PatternOutlineFillShader,x as PatternOutlineFillVertexInput};
