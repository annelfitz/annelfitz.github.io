/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{FeatureSymbologyDrawOrder as e}from"../../../enums.js";import{getSelectionDefines as s,resolveDynamicUniforms as t,getFeatureUniforms as r,isHittest as i,getFeaturePipelineState as a}from"../featureTechniqueUtils.js";import{Technique as o}from"../Technique.js";import{meshWriterRegistry as n}from"../mesh/MeshWriterRegistry.js";import{TextShader as m}from"./TextShader.js";class u extends o{constructor(){super(...arguments),this.meshWriter=n.TextMeshWriter,this.shaders={geometry:new m},this.symbologyPlane=e.TEXT}render(e,o){const{context:n,painter:m}=e,u=s(e),h={shader:this.shaders.geometry,uniforms:{...t(e,o.target,o.instance.getInput().geometry),...r(e,o.target),mosaicInfo:m.textureManager.getMosaicInfo(n,o.textureKey)},defines:{...u,isHaloPass:!1,isBackgroundPass:!0,isLabel:!1},optionalAttributes:o.instance.optionalAttributes,useComputeBuffer:i(e)};m.setShader(h),m.setPipelineState(a(e)),m.submitDraw(n,o),m.setShader({...h,defines:{...u,isHaloPass:!0,isBackgroundPass:!1,isLabel:!1}}),m.submitDraw(n,o),m.setShader({...h,defines:{...u,isHaloPass:!1,isBackgroundPass:!1,isLabel:!1}}),m.submitDraw(n,o)}}export{u as TextTechnique};
