/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
const e=5;function t(e,t,r){const n=t.split("\n");for(const i of n)if(i.trim().length){{let t="";null!=r&&(t+=`/*id:${r??"000"}*/   `),e.body+=t.padEnd(14)}e.body+=" ".repeat(e.indent)+i+"\n"}}class r{write(e){for(const t of e.rootOutputNodes())e.shouldPruneOutputNode(t)||(t.variableName=this._write(e,t.node));return e}_createVarName(e,t){let r="";return"boolean"!=typeof t&&"number"!=typeof t&&t.debugInfo.name&&(r=`${t.debugInfo.name}_`),`${r}v${e.varCount++}`}_write(e,t,r=!1){if("number"==typeof t)return t.toString();if("boolean"==typeof t)return t.toString();let n=e.getEmit(t);if(n)return n;switch(t.shaderType){case"scope-node":n=this._writeScopeNode(e,t);break;case"primitive-node":n=this._writePrimitiveNode(e,t,r);break;case"function-node":n=this._writeFunctionNode(e,t);break;case"property-access-node":n=this._writePropertyAccessNode(e,t);break;case"text-node":n=t.text;break;case"block-node":n=this._writeBlockNode(e,t);break;case"condition-node":n=this._writeConditionNode(e,t)}return e.setEmit(t,n),n}_writeScopeNode(e,r){const n=new r.child.constructor;n.setDebugName(r.debugInfo.name);const i=this._write(e,n,!0);t(e,`{ /*ScopeStart: ${r.uid} ${r.debugInfo.name}*/`),e.indent+=2;return t(e,`${i} = ${this._write(e,r.child)};`),e.indent-=2,t(e,`} /*ScopeEnd: ${r.uid} ${r.debugInfo.name}*/`),i}_writeConditionNode(e,r){const n=new r.ifTrue.constructor,i=this._write(e,n,!0);t(e,`if (${this._write(e,r.condition)}) {`),e.indent+=2;const o=e.createSubgraphContext(),d=this._write(o,r.ifTrue);if(e.body+=o.body,d&&t(e,`${i} = ${d};`),e.indent-=2,t(e,"}"),r.ifFalse){t(e,"else {"),e.indent+=2;const n=e.createSubgraphContext(),o=this._write(n,r.ifFalse);e.body+=n.body,o&&t(e,`${i} = ${o};`),e.indent-=2,t(e,"}")}return i}_writeBlockNode(e,r){const{captureList:n,generator:i,returnType:o}=r,d={};for(const t in n){if(!n[t])continue;const r=this._write(e,n[t]);d[t]=r}const s=new o,c=this._write(e,s,!0);if(d.out=c,r.subgraph){const t=e.createSubgraphContext(),n=this._write(t,r.subgraph.child),i=t.body;d.subgraph={varName:n,body:i}}const a=i(d);return t(e,"{\n"),e.indent+=2,t(e,a),e.indent-=2,t(e,"}\n"),c}_writePropertyAccessNode(e,t){const r=this._write(e,t.target);if("string"==typeof t.property&&t.property.includes("["))return`${r}${t.property}`;if("string"!=typeof t.property){return`${r}[${this._write(e,t.property)}]`}return`${r}.${t.property}`}_writeFunctionNode(r,n){const i=n.returnType.type;if(n.isInfix){const[o,d]=n.children.map((e=>this._write(r,e))),s=this._createVarName(r,n);return t(r,`${i.padEnd(e)} ${s} = ${o} ${n.token} ${d};`,n.uid),s}const o=n.children.map((e=>this._write(r,e))).join(", "),d=this._createVarName(r,n);return t(r,`${i.padEnd(e)} ${d} = ${n.token}(${o});`,n.uid),d}_writePrimitiveNode(r,n,i=!1){const o=r.getInput(n);if(o)return o.isUsed=!0,o.variableName;const d=1===n.children.length&&n.children[0]?.type===n.type;if(n.isImplicit||d)return this._write(r,n.children[0]);const s=this._createVarName(r,n);if(i)return t(r,`${n.type.padEnd(e)} ${s};`,n.uid),s;const c=!n.debugInfo.name&&!n.isMutable;if(c&&"float"===n.type&&"number"==typeof n.children[0])return Number.isInteger(n.children[0])?n.children[0].toFixed(1):n.children[0].toString();if(c&&"int"===n.type&&"number"==typeof n.children[0]&&Number.isInteger(n.children[0]))return n.children[0].toString();const a=n.children.map((e=>this._write(r,e))).join(", ");return"array"===n.type?(t(r,`${n.type.padEnd(e)} ${s} = [${a}];`,n.uid),s):c?`${n.type}(${a})`:(t(r,`${n.type.padEnd(e)} ${s} = ${n.type}(${a});`,n.uid),s)}}export{r as GlslShaderWriter};
