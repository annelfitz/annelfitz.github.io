/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import s from"./TileKey.js";function e(s,e){const i=new Set;for(const t of s instanceof Set?s.values():s.keys())e.has(t)||i.add(t);return i}class i{constructor(s){this.version=s}}class t{constructor(s){this._subscriptions=new Map,this._visible=new Set,this._paused=new Set,this._version=0,this._config=s}destroy(){}get _coverageSet(){const s=this._coverage?Array.from(this._coverage.keys()).map((s=>s.id)):[];return new Set(s)}suspend(){this._suspendedOverage=this._coverage,this._coverage=null,this._updateSubscriptions()}resume(){null==this._coverage&&(this._coverage=this._suspendedOverage,this._suspendedOverage=null,this._updateSubscriptions())}update(s){return this._version=this._version+1%Number.MAX_SAFE_INTEGER,this._updateCoverage(s),this._updateSubscriptions(),new Set(this._visible)}_updateCoverage(s){this._coverage=this._config.tileInfoView.getTileCoverage(s.state,0,!0,"closest")}_updateSubscriptions(){const s=this._coverageSet,t=this._updateVisibility(),o=e(t,s),n=e(this._subscriptions,t),r=e(s,this._subscriptions),a=e(n,s),u=e(o,a),c=e(u,this._paused);this._visible=t;for(const e of r.values())this._subscriptions.set(e,new i(this._version));for(const e of c.values())this._paused.add(e);for(const e of a.values())this._subscriptions.delete(e),this._paused.delete(e);(r.size||a.size||c.size)&&this._sendUpdateSubscriptions(r,a,c)}_sendUpdateSubscriptions(s,e,i){const t=Array.from(s.values()).map((s=>({tileId:s,version:this._subscriptions.get(s).version})));this._config.updateSubscriptions({subscribe:t,unsubscribe:Array.from(e.values()),pause:Array.from(i.values()),tileInfoJSON:this._config.tileInfoView.tileInfo.toJSON()})}_updateVisibility(){const s=new Set;if(!this._coverage)return s;for(const e of this._coverage.keys()){if(this._config.isDone(e)){s.add(e.id);continue}if(this._addVisibleParent(s,e))continue;this._addVisibleChildren(s,e)||s.add(e.id)}return s}_addVisibleParent(e,i){let t=!1;for(const o of this._visible.values()){new s(o).containsChild(i)&&(e.add(o),t=!0)}return t}_addVisibleChildren(e,i){let t=!1;for(const o of this._visible.values()){const n=new s(o);i.containsChild(n)&&(e.add(o),t=!0)}return t}}export{t as FeatureTileSubscriptionManager};
