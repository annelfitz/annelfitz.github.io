/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{getMetersPerUnitForSR as e,inchesPerMeter as t}from"../../../../../core/unitUtils.js";import{tileSize as i}from"../../../engine/webgl/definitions.js";import{GridCell as s}from"./GridCell.js";const o=96;function l(i,s){return e(i)*t*o/s}class r{constructor(e){this._options=e,this._cells=new Map,this._pixelsPerMapUnit=l(e.spatialReference,e.scale)}insert(e,t){const i=e.getCursor(),s={$view:{scale:this._options.scale,timeZone:this._options.timeZone}};for(;i.next();)this._insertFeature(i,s,t)}putCellsInBounds(e,t){const[i,s,o,l]=t,r=Math.floor(i*this._pixelsPerMapUnit/this._options.cellSize),n=Math.floor(s*this._pixelsPerMapUnit/this._options.cellSize),c=Math.ceil(o*this._pixelsPerMapUnit/this._options.cellSize),p=Math.ceil(l*this._pixelsPerMapUnit/this._options.cellSize);for(let a=n;a<=p;a++)for(let t=r;t<=c;t++){const i=`${t}.${a}`,s=this._cells.get(i);if(!s)continue;const o=e.get(s.id);o?s&&!e.has(s.id)&&o.merge(s):e.set(s.id,s.clone())}}putCells(e){for(const t of this._cells.values()){const i=e.get(t.id);i?i.merge(t):e.set(t.id,t.clone())}}_insertFeature(e,t,s){const{featureFilter:o}=this._options;if(null!==o&&!o.check(e))return;let l=0,r=0;if("esriGeometryPoint"===e.geometryType)l=e.readXWorldSpace(),r=e.readYWorldSpace();else{if(s){const t=e.readCentroidForDisplay();if(null==t)return;const[s,o]=t.coords;if(s<0||s>i||o<0||o>i)return}const t=e.readCentroidWorldSpace();if(null==t)return;l=t.coords[0],r=t.coords[1]}const n=l*this._pixelsPerMapUnit,c=r*this._pixelsPerMapUnit,p=Math.floor(n/this._options.cellSize),a=Math.floor(c/this._options.cellSize);this._getCellOrCreate(p,a).insert(e,t,l,r)}_getCellOrCreate(e,t){const i=s.createId(e,t);let o=this._cells.get(i);if(!o){const l=1*this._options.cellSize/this._pixelsPerMapUnit;o=s.create(e,t,this._options.fields,l),this._cells.set(i,o)}return o}}export{r as GridSpatialIndex,l as pixelsPerMapUnit};
