/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{isAborted as t,throwIfAborted as e,onAbort as o}from"../../../../../../core/promiseUtils.js";import{ATileLoadStrategy as s}from"./ATileLoadStrategy.js";import{PagedTileSourceChunk as r}from"./chunks/PagedTileSourceChunk.js";import{FeatureSetReaderJSON as i}from"../../support/FeatureSetReaderJSON.js";class n{constructor(t,e){this.subscription=t,this._pages=new Set,this._controller=new AbortController,this._done=!1,o(t.options,(()=>this._controller.abort())),o(e,(()=>this._controller.abort()))}resetAbortController(){this._controller=new AbortController}get pageStart(){let t=-1;for(const e of this._pages.values())t=Math.max(t,e);return t+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(t,e){this._pages.add(t),this._done=this._done||e}}class a extends s{constructor(){super(...arguments),this._loadStates=new Map}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new n(e,this._options));const o=this._loadStates.get(e.key.id);let s;o.resetAbortController();try{await this._fetchPages(o)}catch(l){s=l}const a=new r(i.empty(this._metadata),null,e.tile,-1,!0);if(t(o.options)||this._addChunk(a),s)throw s}unload(t){super.unload(t),this._loadStates.delete(t.key.id)}async _fetchPages(t){const o=4,s=20;let r=0,i=t.pageStart,n=1;for(;r<s&&!t.done;){const s=[];for(let e=0;e<n;e++)s.push(this._fetchChunk(t,i++));const a=await Promise.all(s);for(const o of a)(0!==o.size()||o.first)&&(t.add(o.page,!o.reader.exceededTransferLimit),e(t.options),this._addChunk(o));r++,n=Math.min(n+1,o)}}async _fetchChunk(t,e){const o=t.subscription.tile,s=this._queryInfo.createPagedTileQuery(o,e),i=await this._fetch(s,t.options);return new r(i,s.inner.toJSON(),o,e,!1)}}export{a as PagedTileLoadStrategy};
