/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{numericHash as e}from"../../../../../core/string.js";import{createRendererExpression as r}from"../../../../../support/arcadeOnDemand.js";import{callExpressionWithCursor as t,callExpressionWithCursorWithDefault as s}from"../../../arcade/callExpressionWithCursor.js";import{AComputedField as a}from"./AComputedField.js";class c extends a{static async create(t,s){const a=await r(t,s.spatialReference,s.fields),i=e(t);return new c(a,i)}constructor(e,r){super(),this._compiled=e,this._cacheKey=r}resize(e){}read(e,r){return this.referencesScale()||"system"!==r.$view.timeZone?t(this._compiled,e,r):this._readCached(e,r)}readWithDefault(e,r,t){return this.referencesScale()||"system"!==r.$view.timeZone?s(this._compiled,e,r,t):this._readWithDefaultCached(e,r,t)}referencesScale(){return this._compiled?.referencesScale()??!1}referencesGeometry(){return this._compiled?.referencesGeometry()??!1}_readCached(e,r){if(e.setCache(this._cacheKey),e.hasCachedValue())return e.getCachedValue();const s=t(this._compiled,e,r);return e.setCachedValue(s),s}_readWithDefaultCached(e,r,t){if(e.setCache(this._cacheKey),e.hasCachedValue())return e.getCachedValue();const a=s(this._compiled,e,r,t);return e.setCachedValue(a),a}}export{c as ComputedExpression};
