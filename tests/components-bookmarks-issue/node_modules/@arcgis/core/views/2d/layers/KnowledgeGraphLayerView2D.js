/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import r from"../../../core/Collection.js";import{referenceSetter as t,castForReferenceSetter as s}from"../../../core/collectionUtils.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{LayerView2DMixin as a}from"./LayerView2D.js";import l from"../../layers/LayerView.js";let n=class extends(a(l)){constructor(e){super(e),this.layerViews=new r}set layerViews(e){this._set("layerViews",t(e,this._get("layerViews")))}get updatingProgress(){return 0===this.layerViews.length?1:this.layerViews.reduce(((e,r)=>e+r.updatingProgress),0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",(()=>this._updateStageChildren())))}detach(){this.container.removeAllChildren()}update(e){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach(((e,r)=>this.container.addChildAt(e.container,r)))}};e([o({cast:s})],n.prototype,"layerViews",null),e([o({readOnly:!0})],n.prototype,"updatingProgress",null),n=e([i("esri.views.2d.layers.KnowledgeGraphLayerView2D")],n);const c=n;export{c as default};
