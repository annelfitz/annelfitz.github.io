/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import r from"../../../core/Collection.js";import t from"../../../core/Logger.js";import{debounce as i}from"../../../core/promiseUtils.js";import{when as s,watch as a}from"../../../core/reactiveUtils.js";import{sqlAnd as o}from"../../../core/sql.js";import"../../../core/has.js";import"../../../core/RandomLCG.js";import"../../../core/Error.js";import{subclass as d}from"../../../core/accessorSupport/decorators/subclass.js";import{LayerView2DMixin as n}from"./LayerView2D.js";import l from"../../layers/LayerView.js";const c=Symbol();let m=class extends(n(l)){constructor(){super(...arguments),this.layerViews=new r,this._debouncedUpdate=i((async()=>{const{layer:e,parent:{footprintLayerView:r}}=this;let t=[];if(r){const i=this._createQuery(),{features:s}=await r.queryFeatures(i);this.suspended||(t=s.map((r=>e.acquireLayer(r))))}this.removeHandles(c),this.addHandles(t,c)}))}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange((()=>this.layerViews),(()=>this._updateStageChildren()),{initial:!0}),s((()=>!1===this.parent.footprintLayerView?.dataUpdating),(()=>this._updateLayers())),a((()=>[this.layer.maximumVisibleSublayers,this.suspended,this.parent.footprintLayerView?.filter]),(()=>this._updateLayers()))])}detach(){this.container.removeAllChildren(),this.removeHandles(c)}update(e){}viewChange(){}moveEnd(){}isUpdating(){return this.layerViews.some((e=>e.updating))}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach(((e,r)=>this.container.addChildAt(e.container,r)))}_updateLayers(){this.suspended?this.removeHandles(c):this._updatingHandles.addPromise(this._debouncedUpdate().catch((e=>{t.getLogger(this).error(e)})))}_createQuery(){const{parent:{footprintLayerView:e},layer:{maximumVisibleSublayers:r,parent:{itemTypeField:t,itemSourceField:i,itemNameField:s,minScaleField:a,maxScaleField:d,objectIdField:n,orderBy:l}}}=this,c=`${t} <> 'Scene Service'`,m=e.createQuery();m.returnGeometry=!1,m.num=r,m.outFields=[n,i,s,a,d],m.where=o(m.where,c);const p=l?.find((e=>e.field&&!e.valueExpression));return p?.field&&(m.orderByFields=[`${p.field} ${"descending"===p.order?"DESC":"ASC"}`]),m}};m=e([d("esri.views.2d.layers.CatalogDynamicGroupLayerView2D")],m);const p=m;export{p as default};
