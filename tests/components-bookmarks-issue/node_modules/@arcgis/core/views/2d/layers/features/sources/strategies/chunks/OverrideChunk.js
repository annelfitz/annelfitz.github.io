/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{ASourceChunk as e}from"./ASourceChunk.js";import{FeatureSetReaderJSON as r}from"../../../support/FeatureSetReaderJSON.js";class t extends e{constructor(e){super(),this.metadata=e,this.chunkId="override",this.normalizedChunkId="override",this.removed=new Set,this.overriddenIds=new Set,this._features=[]}get reader(){return r.fromOptimizedFeatures(this._features,this.metadata)}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}applyOverrides(e){super.invalidate();const{reader:r,removed:t}=e,s=[],d=new Set,o=r.getCursor(),i=new Set(t);for(this.overriddenIds.clear();o.next();){const e=o.readOptimizedFeatureWorldSpace(),r=e.objectId;s.push(e),d.add(r),this.overriddenIds.add(r),this.removed.delete(r)}for(const n of this._features){const e=n.objectId;i.has(e)||d.has(e)||(s.push(n),this.overriddenIds.add(e))}this._features=s;for(const n of d.values())this.removed.delete(n);for(const n of t)this.removed.add(n),this.overriddenIds.add(n)}getTileReader(e){if(!this._features.length)return null;const r=this.queryFeaturesInBounds(e.bounds);return r.setTransformForDisplay(e.transform),r}}export{t as OverrideChunk};
