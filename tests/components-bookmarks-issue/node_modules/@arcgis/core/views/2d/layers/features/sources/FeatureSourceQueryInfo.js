/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../../../../TimeExtent.js";import has from"../../../../../core/has.js";import{sqlAnd as t}from"../../../../../core/sql.js";import r from"../../../../../geometry/SpatialReference.js";import{isHostedAgolService as i}from"../../../../../layers/support/arcgisLayerUrl.js";import a from"../../../../../rest/support/Query.js";const s=4;function o(t,a){const{service:s}=t,o=s.orderByFields??a.objectIdField+" ASC",n=s.source,l={returnCentroid:!(null!==n&&"object"==typeof n&&"path"in n&&i(n.path))&&"esriGeometryPolygon"===a.geometryType,returnGeometry:!0,timeReferenceUnknownClient:a.timeReferenceUnknownClient??void 0,outSpatialReference:r.fromJSON(t.mutable.dataFilter.outSpatialReference),orderByFields:[o],where:t.mutable.dataFilter.definitionExpression??"1=1",outFields:t.mutable.availableFields};if("feature"===t.type){const{gdbVersion:r,historicMoment:i,timeExtent:a}=t.mutable.dataFilter;return{...l,gdbVersion:r,historicMoment:i?new Date(i):null,timeExtent:a?e.fromJSON(a):null,outFields:t.mutable.availableFields}}return l}class n{static fromSchema(e,t){const r="feature"===e.type?e.mutable.dataFilter.queryScaleRanges:[];return new n(o(e,t),r,t.subtypeField,e.mutable.dataFilter.customParameters,t.geometryType,e.service.queryMetadata.capabilities)}constructor(e,t,r,i,a,s){this._queryParams=e,this._queryScaleRanges=t,this._subtypeField=r,this._customParameters=i,this._geometryType=a,this._capabilities=s}get pageSize(){if(null==this._capabilities)throw new Error("InternalError: Service does not support paged queries");const{query:e}=this._capabilities,t=e.supportsMaxRecordCountFactor?s:null,r=(e.maxRecordCount??8e3)*(t??1);return Math.min(8e3,r)}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t){const r=e.clone();if("*"===this._queryParams.outFields[0]){if("*"===(r.outFields??[])[0])return null;r.outFields=this._queryParams.outFields}else{const e=new Set(this._queryParams.outFields),i=[];for(const r of e)t.hasField(r)||i.push(r);if(0===i.length)return null;r.outFields=i}return r.returnGeometry=!1,r.returnCentroid=!1,r.quantizationParameters=null,r.cacheHint=!0,{inner:r,customParameters:this._customParameters}}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new a({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,r){if(null==this._capabilities)throw new Error("InternalError: Service does not support tile queries");const i=this.createQuery(r),a=i.inner;if(this._queryScaleRanges.length){const r=this._queryScaleRanges.filter((t=>(!t.minScale||t.minScale>=e.maxScale)&&(!t.maxScale||t.maxScale<=e.minScale))).map((e=>e.subtypeCode));if(r.length){const e=`${this._subtypeField} IN (${r})`;a.where=t(a.where,e)}}return a.quantizationParameters=r.quantizationParameters??e.getQuantizationParameters(),a.resultType="tile",a.geometry=e.extent,this._capabilities.query.supportsQuantization?"esriGeometryPolyline"===this._geometryType&&(a.maxAllowableOffset=e.resolution*has("feature-polyline-generalization-factor")):"esriGeometryPolyline"!==this._geometryType&&"esriGeometryPolygon"!==this._geometryType||(a.maxAllowableOffset=e.resolution,"esriGeometryPolyline"===this._geometryType&&(a.maxAllowableOffset*=has("feature-polyline-generalization-factor"))),a.defaultSpatialReferenceEnabled=this._capabilities.query.supportsDefaultSpatialReference,a.compactGeometryEnabled=this._capabilities.query.supportsCompactGeometry,this._capabilities.query.supportsMaxRecordCountFactor&&(a.maxRecordCountFactor=s),i}createPagedTileQuery(e,t){const r=this.pageSize;return this.createTileQuery(e,{start:r*t,num:r,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:s})}}export{n as FeatureSourceQueryInfo};
