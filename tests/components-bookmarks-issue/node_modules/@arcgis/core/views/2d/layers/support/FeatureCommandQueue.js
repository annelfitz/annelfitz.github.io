/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{UpdateTracking2D as e}from"./UpdateTracking2D.js";import{QueueProcessor as s}from"../../../support/QueueProcessor.js";function t(e){return e.some((e=>e.globalId))}function r(e){return e.filter((e=>!e.error)).map((e=>e.objectId??e.globalId)).filter((e=>null!=e))}function o(e,s){const t=new Set(e);for(const r of s.values())t.add(r);return t}function d(e,s){const t=new Set(e);for(const r of s.values())t.delete(r);return t}class a{constructor(t){this.updateTracking=new e({debugName:"FeatureCommandQueue"}),this._hasGlobalIds=!1,this._queueProcessor=new s({concurrency:1,process:t.process})}destroy(){this.updateTracking.destroy(),this._queueProcessor.destroy(),this.clear()}clear(){this._queueProcessor.clear()}async push(e){return this.updateTracking.addPromise(this._doPush(e))}async _doPush(e){const s=this._queueProcessor,t=s.last(),r=[];switch(e.type){case"update":if(t?.type===e.type)return;r.push(s.push(e));break;case"edit":{const o="processed-edit"===t?.type?t:null;o&&s.popLast();const d=this._mergeEdits(o,e);for(const e of d)e&&r.push(s.push(e));break}}await Promise.all(r)}_mergeEdits(e,s){const{addedFeatures:a,deletedFeatures:i,updatedFeatures:u}=s.edits;if(this._hasGlobalIds=this._hasGlobalIds||t(a)||t(u)||t(i),this._hasGlobalIds){return[e,{type:"processed-edit",edits:{addOrModified:[...a,...u],removed:i}}]}const n=new Set(r(e?.edits.addOrModified??[])),c=new Set(r(e?.edits.removed??[])),p=new Set([...r(a),...r(u)]),l=new Set(r(i));return[{type:"processed-edit",edits:{addOrModified:Array.from(o(d(n,l),p)).map((e=>({objectId:e}))),removed:Array.from(o(d(c,p),l)).map((e=>({objectId:e})))}}]}}export{a as default};
