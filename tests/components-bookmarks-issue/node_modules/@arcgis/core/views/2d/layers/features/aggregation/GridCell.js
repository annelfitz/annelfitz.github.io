/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{quantizeX as t,quantizeY as r,quantizeOptimizedGeometry as e}from"../../../../../layers/graphics/featureConversionUtils.js";import s from"../../../../../layers/graphics/OptimizedGeometry.js";import{AccumulatedStatistics as i}from"./AccumulatedStatistics.js";class o{static createId(t,r){return`${t}.${r}`}static create(t,r,e,s){return new o(t,r,i.create(e),s)}constructor(t,r,e,s){this.gridX=t,this.gridY=r,this._statistics=e,this._worldUnitsPerCell=s,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return o.createId(this.gridX,this.gridY)}get count(){return this._count}get statistics(){return this._statistics}get objectIds(){return this._objectIds}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const t=new o(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return t._count=this._count,t._xWorldTotal=this._xWorldTotal,t._yWorldTotal=this._yWorldTotal,t._firstFeatureAttributes=this._firstFeatureAttributes,t._objectIds=new Set(this._objectIds),t}insert(t,r,e,s){0===this._count?this._firstFeatureAttributes=t.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=e,this._yWorldTotal+=s,this._statistics.insert(t,r),this._objectIds.add(t.getObjectId())}merge(t){if(0!==t._count){this._count+=t._count,this._firstFeatureAttributes=t._firstFeatureAttributes,this._xWorldTotal+=t._xWorldTotal,this._yWorldTotal+=t._yWorldTotal,this._statistics.merge(t._statistics);for(const r of t._objectIds.values())this._objectIds.add(r)}}getCentroidX(r){return null==r?this.centroidXWorld:t(r,this.centroidXWorld)}getCentroidY(t){return null==t?this.centroidYWorld:r(t,this.centroidYWorld)}getCentroid(t){const r=new s([],[this.centroidXWorld,this.centroidYWorld]);if(null!=t){const i=new s;return e(i,r,!1,!1,"esriGeometryPoint",t)}return r}getGeometricCentroid(t){const r=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,i=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,o=new s([],[r,i]);if(null!=t){const r=new s;return e(r,o,!1,!1,"esriGeometryPoint",t)}return o}getAttributes(){const t={aggregateId:this.id};for(const r of this._statistics.values())t[r.field.name]=r.value;return null!=this._firstFeatureAttributes?{...t,...this._firstFeatureAttributes}:t}}export{o as GridCell};
