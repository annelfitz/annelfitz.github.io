/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{GeohashTree as e}from"../../../../../geohash/GeohashTree.js";import{getGeohash as t}from"../../../../../geohash/geohashUtils.js";import{tileSize as r}from"../../../engine/webgl/definitions.js";class o{constructor(t){this._options=t,this._tree=new e(t.fields)}insert(e,t){const r=e.getCursor(),o={$view:{scale:0,timeZone:this._options.timeZone}};for(;r.next();)this._insertFeature(r,o,t)}putBins(e,t){this._tree.putBins(e,t)}_insertFeature(e,o,s){const{featureFilter:i,geohashLevel:n,spatialReference:a}=this._options;if(null!==i&&!i.check(e))return;let l=0,c=0;if("esriGeometryPoint"===e.geometryType)l=e.readXWorldSpace(),c=e.readYWorldSpace();else{if(s){const t=e.readCentroidForDisplay();if(null==t)return;const[o,s]=t.coords;if(o<0||o>r||s<0||s>r)return}const t=e.readCentroidWorldSpace();if(null==t)return;l=t.coords[0],c=t.coords[1]}const h=t(l,c,n,a);h&&this._tree.insert(e,l,c,h[0],h[1],n,o)}}export{o as GeohashSpatialIndex};
