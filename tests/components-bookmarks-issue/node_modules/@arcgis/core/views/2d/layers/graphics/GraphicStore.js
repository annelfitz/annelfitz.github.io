/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import has from"../../../../core/has.js";import{pt2px as e}from"../../../../core/screenUtils.js";import{r as t}from"../../../../chunks/rbush.js";import{create as s,intersects as o}from"../../../../geometry/support/aaBoundingRect.js";import{getBoundsXY as i}from"../../../../geometry/support/boundsUtils.js";import{normalizeMapX as r}from"../../../../geometry/support/normalizeUtils.js";import{getInfo as n}from"../../../../geometry/support/spatialReferenceUtils.js";import{HittestDrawHelper as m}from"../../../../symbols/cim/CIMSymbolDrawHelper.js";import{CIMSymbolInflatedSizeHelper as l}from"../../../../symbols/cim/CIMSymbolHelper.js";import{GraphicStoreItem as a}from"./GraphicStoreItem.js";import{pixelBuffer as c}from"./graphicsUtils.js";import{GraphicUpdateMessage as h}from"./GraphicUpdateMessage.js";const u=1e-5;function d(e,t){return t.zOrder-e.zOrder}class p{constructor(e,t,s,o,i){this._items=new Map,this._boundsDirty=!1,this._outSpatialReference=e,this._cimResourceManager=t,this._hittestDrawHelper=new m(t),this._tileInfoView=s,this._store=i;const r=s.getClosestInfoForScale(o);this._resolution=this._tileInfoView.getTileResolution(r.level)}items(){return this._items.values()}getItem(e){return this._items.get(e)}async update(e,t,s){const o=[],i=[],r=[],n=new Set,m=[];let l=0;for(const c of e.items){l++;const e=c.uid,r=this._items.get(e),h=t(c);if(n.add(e),r){r.update(c,h,l)&&(i.push(r),m.push(this._updateItem(r,s)));continue}const u=this._store.createDisplayIdForObjectId(e),d=a.fromGraphic(c,h,l,u);m.push(this._updateItem(d,s)),this._items.set(d.objectId,d),o.push(d)}for(const[a,c]of this._items.entries())n.has(a)||(this._store.releaseDisplayIdForObjectId(a),this._items.delete(a),r.push(c));return await Promise.all(m),this._index=null,new h(o,i,r)}updateLevel(e){this._resolution!==e&&(this._index=null,this._boundsDirty=!0,this._resolution=e)}hitTest(e,t,i,n,m){const l=has("esri-mobile"),a=has(l?"hittest-2d-mobile-tolerance":"hittest-2d-desktop-tolerance"),h=a+(l?0:has("hittest-2d-small-symbol-tolerance"));e=r(e,this._tileInfoView.spatialReference);const u=n*window.devicePixelRatio*h,p=s();p[0]=e-u,p[1]=t-u,p[2]=e+u,p[3]=t+u;const _=n*window.devicePixelRatio*a,f=s();f[0]=e-_,f[1]=t-_,f[2]=e+_,f[3]=t+_;const b=.5*n*(h+c),y=this._searchIndex(e-b,t-b,e+b,t+b);if(!y||0===y.length)return[];const I=[],g=s(),j=s();for(const s of y){if(!s.visible)continue;const{projectedGeometry:e,symbolResource:t}=s;this._getSymbolBounds(g,t,e,j,m),j[3]=j[2]=j[1]=j[0]=0,o(g,p)&&I.push(s)}if(0===I.length)return[];const x=this._hittestDrawHelper,w=[];for(const s of I){const{projectedGeometry:e,symbolResource:t}=s;if(!t)continue;const{textInfo:o,symbolInfo:i}=t,r=i.cimSymbol;x.hitTest(f,r.symbol,e,o,m,n)&&w.push(s)}return w.sort(d),w.map((e=>e.objectId))}queryItems(e){return 0===this._items.size?[]:this._searchForItems(e)}clear(){this._items.clear(),this._index=null}async _updateItem(e,t){await e.projectAndNormalize(this._outSpatialReference),await t(e);const{size:s}=e;s[0]=s[1]=s[2]=s[3]=0,this._getSymbolBounds(e.bounds,e.symbolResource,e.projectedGeometry,e.size,0)}_searchIndex(e,s,o,i){return this._boundsDirty&&(this._items.forEach((e=>this._getSymbolBounds(e.bounds,e.symbolResource,e.projectedGeometry,e.size,0))),this._boundsDirty=!1),this._index||(this._index=t(9,(e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}))),this._index.load(Array.from(this._items.values()))),this._index.search({minX:e,minY:s,maxX:o,maxY:i})}_searchForItems(e){const t=this._tileInfoView.spatialReference,o=e.bounds,i=n(t);if(i&&t.isWrappable){const[t,r]=i.valid,n=Math.abs(o[2]-r)<u,m=Math.abs(o[0]-t)<u;if((!n||!m)&&(n||m)){const i=e.resolution;let m;m=s(n?[t,o[1],t+i*c,o[3]]:[r-i*c,o[1],r,o[3]]);const l=this._searchIndex(o[0],o[1],o[2],o[3]),a=this._searchIndex(m[0],m[1],m[2],m[3]);return[...new Set([...l,...a])]}}return this._searchIndex(o[0],o[1],o[2],o[3])}_getSymbolBounds(t,o,r,n,m){if(!o||!o.symbolInfo.linearCIM||!r)return null;if(t||(t=s()),i(t,r),!n||0===n[0]&&0===n[1]&&0===n[2]&&0===n[3]){const{textInfo:t,symbolInfo:s}=o,i=s.cimSymbol;n||(n=[0,0,0,0]);const r=l.getSymbolInflateSize(n,i.symbol,this._cimResourceManager,m,t);n[0]=e(r[0]),n[1]=e(r[1]),n[2]=e(r[2]),n[3]=e(r[3])}const a=this._resolution,c=l.safeSize(n);return t[0]-=c*a,t[1]-=c*a,t[2]+=c*a,t[3]+=c*a,t}}export{p as default};
