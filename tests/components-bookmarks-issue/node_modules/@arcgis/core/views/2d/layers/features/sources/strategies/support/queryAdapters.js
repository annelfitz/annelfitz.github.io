/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import has from"../../../../../../../core/has.js";import e from"../../../../../../../core/workers/Connection.js";import{toQuantizationTransform as t}from"../../../../../../../geometry/support/quantizationUtils.js";import{convertFromFeatureSet as a,quantizeOptimizedFeatureSet as r}from"../../../../../../../layers/graphics/featureConversionUtils.js";import{queryOptimizedFeatureSet as s}from"../../../../../../../layers/ogc/ogcFeatureUtils.js";import{executeQueryPBFBuffer as i,executeQuery as o}from"../../../../../../../rest/query/operations/query.js";import{FeatureSetReaderJSON as n}from"../../../support/FeatureSetReaderJSON.js";import{FeatureSetReaderPBF as u}from"../../../support/FeatureSetReaderPBF.js";class c{constructor(e,t){this.service=e,this._metadata=t}destroy(){}}function m(e,t){switch(e.type){case"memory":return new l(e,t);case"ogc":return new f(e,t);case"feature-service":return e.queryMetadata.capabilities.query.supportsFormatPBF&&has("featurelayer-pbf")?new y(e,t):new d(e,t)}}async function p(t){const a=new e;return await a.open(t,{}),a}class l extends c{constructor(e,t){super(e,t),this._portsOpen=p(e.source).then((e=>this.client=e))}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const a=await this.client.invoke("queryFeatures",e.toJSON(),t);return n.fromFeatureSet(a,this._metadata)}}class y extends c{async executeQuery(e,t){const{data:a}=await i(this.service.source,e,t),r=!e.quantizationParameters;return u.fromBuffer(a,this._metadata,r)}}class d extends c{async executeQuery(e,s){const{source:i,queryMetadata:u}=this.service,c=u.capabilities;if(null!=e.quantizationParameters&&!c.query.supportsQuantization){const u=e.clone(),c=t(u.quantizationParameters);u.quantizationParameters=null;const{data:m}=await o(i,u,this._metadata.spatialReference,s),p=a(m,this._metadata.objectIdField);return r(c,p),n.fromOptimizedFeatureSet(p,this._metadata)}const{data:m}=await o(i,e,this._metadata.spatialReference,s);return"esriGeometryPoint"===this._metadata.geometryType&&(m.features=m.features?.filter((e=>{if(null!=e.geometry){const t=e.geometry;return Number.isFinite(t.x)&&Number.isFinite(t.y)}return!0}))),n.fromFeatureSet(m,this._metadata)}}class f extends c{async executeQuery(e,a){const{capabilities:i}=this.service.queryMetadata;if(e.quantizationParameters&&!i.query.supportsQuantization){const i=e.clone(),o=t(i.quantizationParameters);i.quantizationParameters=null;const u=await s(this.service.source,e,a);return r(o,u),n.fromOptimizedFeatureSet(u,this._metadata)}const o=await s(this.service.source,e,a);return n.fromOptimizedFeatureSet(o,this._metadata)}}export{c as SourceAdapter,m as createQueryAdapter};
