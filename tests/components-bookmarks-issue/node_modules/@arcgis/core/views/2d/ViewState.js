/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../geometry.js";import e from"../../Viewpoint.js";import{JSONSupport as i}from"../../core/JSONSupport.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import{toRadian as r}from"../../core/libs/gl-matrix-2/math/common.js";import{fromTranslation as a,rotate as n,translate as p,invert as m}from"../../core/libs/gl-matrix-2/math/mat2d.js";import{create as c}from"../../core/libs/gl-matrix-2/factories/mat2df32.js";import{create as h}from"../../core/libs/gl-matrix-2/factories/mat2df64.js";import{set as l,identity as f,translate as v,rotate as w,multiply as d}from"../../core/libs/gl-matrix-2/math/mat3.js";import{create as u}from"../../core/libs/gl-matrix-2/factories/mat3f32.js";import{copy as x,transformMat2d as j}from"../../core/libs/gl-matrix-2/math/vec2.js";import{fromValues as g}from"../../core/libs/gl-matrix-2/factories/vec2f32.js";import{create as y}from"../../core/libs/gl-matrix-2/factories/vec2f64.js";import{isVec2 as R}from"../../core/libs/gl-matrix-2/types/vec2.js";import{getClosestDenormalizedXToReference as _}from"../../geometry/support/normalizeUtils.js";import{copy as z,getMatrix as b,getResolution as S,getExtent as M,getTransform as N,getTransformNoRotation as T,getWorldScreenWidth as D}from"./viewpointUtils.js";import V from"../../geometry/Extent.js";import G from"../../geometry/Point.js";var C;const L=[0,0];let O=C=class extends i{constructor(t){super(t),this._viewpoint2D={center:y(),rotation:0,scale:0,spatialReference:void 0},this.center=[0,0],this.extent=new V,this.id=0,this.inverseTransform=h(),this.resolution=0,this.rotation=0,this.scale=0,this.transform=h(),this.transformNoRotation=h(),this.displayMat3=u(),this.displayViewMat3=u(),this.viewMat3=u(),this.viewMat2d=c(),this.worldScreenWidth=0,this.size=[0,0]}set pixelRatio(t){this._set("pixelRatio",t),this._update()}set size(t){this._set("size",t),this._update()}set viewpoint(t){if(t){const e=this._viewpoint2D,i=t.targetGeometry;e.center[0]=i.x,e.center[1]=i.y,e.rotation=t.rotation,e.scale=t.scale,e.spatialReference=i.spatialReference}this._update()}copy(t){const e=this.size,i=this.viewpoint;return i&&e?(this.viewpoint=z(i,t.viewpoint),this._set("size",x(e,t.size))):(this.viewpoint=t.viewpoint.clone(),this._set("size",[t.size[0],t.size[1]])),this._set("pixelRatio",t.pixelRatio),this}clone(){return new C({size:this.size,viewpoint:this.viewpoint.clone(),pixelRatio:this.pixelRatio})}toMap(t,e,i){return R(e)?j(t,e,this.inverseTransform):(L[0]=e,L[1]=i,j(t,L,this.inverseTransform))}toScreen(t,e,i){return R(e)?j(t,e,this.transform):(L[0]=e,L[1]=i,j(t,L,this.transform))}toScreenNoRotation(t,e,i){return R(e)?j(t,e,this.transformNoRotation):(L[0]=e,L[1]=i,j(t,L,this.transformNoRotation))}toScreenClosest(t,e,i){R(e)?(L[0]=e[0],L[1]=e[1]):(L[0]=e,L[1]=i);const[s]=L,{center:o,extent:r,spatialReference:a,transform:n}=this;return(s<r.xmin||s>r.xmax)&&(L[0]=_(s,o[0],a)),j(t,L,n)}getScreenTransform(t,e){const{center:i}=this._viewpoint2D,s=this._get("pixelRatio")||1,o=this._get("size");return b(t,i,o,e,0,s),t}_update(){const{center:t,spatialReference:i,scale:s,rotation:o}=this._viewpoint2D,c=this._get("pixelRatio")||1,h=this._get("size"),u=new e({targetGeometry:new G(t[0],t[1],i),scale:s,rotation:o});if(this._set("viewpoint",u),!h||!i||!s)return;this.resolution=S(u),this.rotation=o,this.scale=s,this.spatialReference=i,x(this.center,t);const j=0!==h[0]?2/h[0]:0,y=0!==h[1]?-2/h[1]:0;l(this.displayMat3,j,0,0,0,y,0,-1,1,1);const R=f(this.viewMat3),_=g(h[0]/2,h[1]/2),z=g(-h[0]/2,-h[1]/2),b=r(o);v(R,R,_),w(R,R,b),v(R,R,z),d(this.displayViewMat3,this.displayMat3,R);const V=a(this.viewMat2d,_);return n(V,V,b),p(V,V,z),M(this.extent,u,h),N(this.transform,u,h,c),m(this.inverseTransform,this.transform),T(this.transformNoRotation,u,h,c),this.worldScreenWidth=D(this.spatialReference,this.resolution),this._set("id",this.id+1),this}};t([s({readOnly:!0})],O.prototype,"id",void 0),t([s({value:1,json:{write:!0}})],O.prototype,"pixelRatio",null),t([s({json:{write:!0}})],O.prototype,"size",null),t([s()],O.prototype,"spatialReference",void 0),t([s({type:e,json:{write:!0}})],O.prototype,"viewpoint",null),O=C=t([o("esri.views.2d.ViewState")],O);const U=O;export{U as default};
