/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as r}from"./chunks/tslib.es6.js";import o from"./Map.js";import e from"./core/Loadable.js";import{loadAll as t}from"./core/loadAll.js";import i from"./core/Logger.js";import{MultiOriginJSONMixin as s}from"./core/MultiOriginJSONSupport.js";import{EsriPromiseMixin as a}from"./core/Promise.js";import{Version as n}from"./core/Version.js";import{property as p}from"./core/accessorSupport/decorators/property.js";import"./core/has.js";import"./core/RandomLCG.js";import{reader as l}from"./core/accessorSupport/decorators/reader.js";import{subclass as c}from"./core/accessorSupport/decorators/subclass.js";import{writer as m}from"./core/accessorSupport/decorators/writer.js";import{readLoadable as d}from"./core/accessorSupport/read.js";import u from"./linkchart/InitialViewProperties.js";import h from"./portal/PortalItem.js";import{loadFromSource as j}from"./webdoc/support/webdocLoadUtils.js";const f=new n(2,28),v="Link Chart",y="linkchart",g="link-chart",w={currentVersion:f,createInitialViewProperties:()=>new u,parseVersion:n.parse,itemType:v,name:y,origin:g};let V=class extends(s(e.LoadableMixin(a(o)))){constructor(r){super(r),this.resourceReferences={portalItem:null,paths:[]},this.initialViewProperties=new u,this.portalItem=null,this.sourceVersion=null}load(r){return this.addResolvingPromise(j(w,this)),Promise.resolve(this)}destroy(){const r=this.portalItem;this.portalItem=null,r?.destroy()}initialize(){if(this.when().catch((r=>{i.getLogger(this).error("#load()","Failed to load link chart",r)})),this.resourceInfo){let o;try{o=this._validateJSON(this.resourceInfo)}catch(r){return void this.addResolvingPromise(Promise.reject(r))}this.read(o)}}readSourceVersion(r,o){return n.parse(o.version,y)}writeSourceVersion(r,o,e){o[e]=`${f.major}.${f.minor}`}loadAll(){return t(this,(r=>{r(this.ground,this.basemap,this.layers,this.tables)}))}read(r,o){o={...o,origin:g},d(this,r,(o=>super.read(r,o)),o)}_validateJSON(r){const o=n.parse(r.version||"","link-chart");return f.validate(o),r.version=`${o.major}.${o.minor}`,r}};r([p({type:u,nonNullable:!0,json:{read:{source:["background","initialState.viewpoint","mapRangeInfo","spatialReference"]}}})],V.prototype,"initialViewProperties",void 0),r([p({json:{read:!1}})],V.prototype,"layers",void 0),r([p()],V.prototype,"linkChartProperties",void 0),r([p({type:h})],V.prototype,"portalItem",void 0),r([p()],V.prototype,"resourceInfo",void 0),r([p({readOnly:!0,type:n,json:{read:{source:"version"},write:{allowNull:!0,ignoreOrigin:!0,target:"version",isRequired:!0}}})],V.prototype,"sourceVersion",void 0),r([l("sourceVersion")],V.prototype,"readSourceVersion",null),r([m("sourceVersion")],V.prototype,"writeSourceVersion",null),r([p({json:{read:!1}})],V.prototype,"tables",void 0),V=r([c("esri.LinkChart")],V);const S=V;export{S as default};
