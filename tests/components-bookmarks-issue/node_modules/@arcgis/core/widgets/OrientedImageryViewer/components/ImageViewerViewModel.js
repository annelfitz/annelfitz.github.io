/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import t from"../../../Map.js";import i from"../../../core/Error.js";import r from"../../../core/Evented.js";import s from"../../../core/Logger.js";import{clamp as a}from"../../../core/mathUtils.js";import{destroyMaybe as o}from"../../../core/maybe.js";import{isAbortError as n}from"../../../core/promiseUtils.js";import{watch as m,syncAndInitial as l,initial as h}from"../../../core/reactiveUtils.js";import{property as d}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/RandomLCG.js";import{subclass as p}from"../../../core/accessorSupport/decorators/subclass.js";import{rotate as c,intersect as g,nearestCoordinate as y}from"../../../geometry/geometryEngine.js";import u from"../../../layers/GraphicsLayer.js";import _ from"../../../layers/ImageryTileLayer.js";import f from"../../../layers/support/RasterFunction.js";import{convolutionKernel as v}from"../../../layers/support/rasterFunctionConstants.js";import R from"../../../layers/support/TileInfo.js";import x from"../../../views/MapView.js";import{getResolutionToScaleFactor as w}from"../../../views/2d/viewpointUtils.js";import{logAndThrow as C,getMissingPropertyErrorName as j,getMissingPropertyErrorMessage as I,castImageSource as b}from"../utils.js";import S from"../../../geometry/SpatialReference.js";import P from"../../../geometry/Polygon.js";import k from"../../../geometry/Point.js";const E={click:"click-handle",enhancements:"enhancements-handle",rotation:"rotation-handle"};let L=class extends r.EventedAccessor{constructor(e){super(e),this._imageChanged=!1,this._panConstraint=null,this._image=null,this._loadController=null,this._overlays=new u,this._map=new t,this.autoLoad=!1,this.clickAction="none",this.error=null,this.imageSource=null,this.imageRotation=0,this.state="ready",this._cancelLoadWithController=()=>{this._loadController?.abort(),this._loadController=null},this._createImageHandles=()=>{this.removeHandles(E.enhancements),this.addHandles(m((()=>[this.brightness,this.contrast,this.sharpness]),(([e,t,i])=>{this.image?.loaded&&(this.image.effect=`contrast(${10*(t+10)}%) brightness(${10*(e+10)}%)`,this.sharpenImage(this.image,i))}),l))},this._createPanConstraint=()=>{const{image:e,imageRenderer:t}=this,i=i=>{if(!e||!t||!i.targetGeometry)return i;const{extent:r}=e.serviceRasterInfo,{constraints:s,rotation:a,width:o,height:n}=t,{extent:m}=c(P.fromExtent(r),a),{width:l,height:h}=m,d=i.targetGeometry.clone(),p=s.scaleToZoom(i.scale),g=1/2**p,u=o/n;let _=g*l,f=g*h;p&&(l/o>h/n?f=_/u:_=f*u);const v=m.clone();return v.xmin+=_/2,v.xmax-=_/2,v.ymin+=f/2,v.ymax-=f/2,i.targetGeometry=y(v,d).coordinate,this.state="image-loaded",i};return{constrain:i,applyPanConstraint:i}},this._createResizeHandles=e=>{e.removeHandles("resize"),e.addHandles(m((()=>{if(!this.imageRenderer.ready)return;const{extent:t}=e.serviceRasterInfo,{width:i,height:r,rotation:s}=this.imageRenderer,{extent:a}=c(P.fromExtent(t),s),{width:o,height:n}=a;return Math.max(o/i,n/r)}),(e=>{if(!this.imageRenderer||null==e)return;const{constraints:t,scale:i,spatialReference:r}=this.imageRenderer,s=t.minScale,a=w(r),o=.25*a,n=a*e;let m=n;const l=[];for(;m>o;)l.push(m),m/=2;l.push(m);const{lods:h}=R.create({scales:l});if(t.set({minScale:n,lods:h}),this._imageChanged)return this.imageRenderer.scale=n,void(this._imageChanged=!1);this.imageRenderer.scale=Math.abs(i-s)<=1e-6?n:i}),l),"resize")},this._loadImageInternal=(e,t)=>{this.clearImage(),this.error=null,this._imageChanged=!0,this.state="image-loading";const i="string"==typeof e,r=i?void 0:e.datasetFormat,a=i?e:e.url;return this._image=new _({ioConfig:{skipExtensions:["aux.xml","jgw"],skipMapInfo:!0,datasetFormat:r},url:a}),this._image.when((e=>{this._updatePanConstraint(),this._createResizeHandles(e),this._map.add(e),this.state="image-loaded"}),(t=>{n(t)?this.state="image-load-aborted":(this.state="image-load-error",this.error=t,s.getLogger(this).error(`error occurred while loading image ${i?e:JSON.stringify(e)}`,t),this.imageSource=null)})),this._image.load(t)},this._loadWithController=()=>{this._cancelLoadWithController(),this._loadController=new AbortController,this.loadImage(this._loadController)},this._updatePanConstraint=()=>{this._panConstraint&&this.imageRenderer.constraints.customConstraints.remove(this._panConstraint),this._panConstraint=this._createPanConstraint(),this.imageRenderer.constraints.customConstraints.add(this._panConstraint)},this.addGraphic=(e,t)=>{this._overlays.graphics.add(e,t)},this.addManyGraphics=e=>{this._overlays.addMany(e)},this.clearGraphics=()=>{this._overlays.graphics.removeAll()},this.clearImage=()=>{this.image&&(this._map.layers.remove(this.image),this._image=o(this._image))},this.loadImage=e=>{const{imageSource:t}=this;return t?this._loadImageInternal(t,e):C(this.declaredClass,new i(j("image-viewer"),I("ImageViewerViewModel","imageSource")))},this.removeGraphic=e=>{this._overlays.remove(e)},this.removeManyGraphics=e=>{this._overlays.removeMany(e)},this._imageRenderer=new x({constraints:{snapToZoom:!0,rotationEnabled:!1},map:this._map,popupEnabled:!1,spatialReference:S.WebMercator,ui:{components:["zoom"]}})}initialize(){this.state="initialized",this.addHandles([m((()=>this.imageSource),(e=>{e&&this.autoLoad&&this._loadWithController()}),l),m((()=>this.image?.loaded),(()=>{this._createImageHandles()})),m((()=>this.imageRotation),(()=>{this._rotateImage()})),m((()=>this.imageRenderer.map),((e,t)=>{t?.layers.remove(this._overlays),e?.layers.add(this._overlays)}),h),m((()=>this.imageRenderer.map.allLayers.length),(e=>{e&&this.imageRenderer.map.layers.reorder(this._overlays,e-1)}),l),m((()=>this.clickAction),(e=>{this.removeHandles(E.click),"none"!==e&&this.addHandles(this.imageRenderer.on("click",(t=>{if(this.image?.loaded&&this.imageRenderer.ready)switch(e){case"emit":t.stopPropagation(),this.emit("click",t);break;case"hittest":t.stopPropagation(),t.async((async()=>{const e=await this.imageRenderer.hitTest(t.screenPoint,{include:this._overlays});this.emit("hittest-response",e)}));break;case"pixel-location":{if(t.stopPropagation(),!this.image||!t.mapPoint)return void this.emit("pixel-location",null);const{extent:e,pixelSize:i}=this.image.serviceRasterInfo,r=(t.mapPoint.x-e.xmin)*i.x,s=(e.ymax-t.mapPoint.y)*i.y,a=new k({x:r,y:s,spatialReference:e.spatialReference});this.emit("pixel-location",a);break}}})))}),l)])}get brightness(){return this._get("brightness")??0}set brightness(e){this._set("brightness",a(e,-10,10))}get contrast(){return this._get("contrast")??0}set contrast(e){this._set("contrast",a(e,-10,10))}get image(){return this._image}get imagePointsInView(){const{extent:e,ready:t}=this.imageRenderer,i=this.imageRotation,r=this.image?.fullExtent,s=this.image?.serviceRasterInfo,a=!0===this._imageRenderer.allLayerViews.find((({layer:e})=>e===this.image))?.attached;if(!(t&&e&&r&&s&&a))return null;const o=c(P.fromExtent(e),i),n=P.fromExtent(r),m=g(o,n),{rings:l}=m;return l.flat().map((([e,t])=>({x:(e-s.extent.xmin)*s.pixelSize.x,y:(s.extent.ymax-t)*s.pixelSize.y})))}get imageSize(){const{image:e}=this;if(!e?.raster)return null;const{width:t,height:i}=e.raster.rasterInfo;return[t,i]}get imageRenderer(){return this._imageRenderer}get imageView(){return this.imageRenderer.allLayerViews.find((e=>e.layer===this.image))}get sharpness(){return this._get("sharpness")??0}set sharpness(e){this._set("sharpness",a(e,0,1))}_rotateImage(){this.imageRenderer.constraints.rotationEnabled=!0,this.imageRenderer.rotation=this.imageRotation,this.imageRenderer.constraints.rotationEnabled=!1}sharpenImage(e,t){const i=[0,-1*t,0,-1*t,4*t+1,-1*t,0,-1*t,0],r=new f({functionName:"Convolution",functionArguments:{type:v.userDefined,cols:3,rows:3,kernel:i,convolutionType:v.userDefined}});e.renderer=null,e.rasterFunction=r}};e([d()],L.prototype,"_image",void 0),e([d()],L.prototype,"_imageRenderer",void 0),e([d()],L.prototype,"_loadController",void 0),e([d()],L.prototype,"_overlays",void 0),e([d()],L.prototype,"_map",void 0),e([d({type:Boolean})],L.prototype,"autoLoad",void 0),e([d({type:Number})],L.prototype,"brightness",null),e([d()],L.prototype,"clickAction",void 0),e([d({type:Number})],L.prototype,"contrast",null),e([d({type:i})],L.prototype,"error",void 0),e([d({readOnly:!0})],L.prototype,"image",null),e([d({readOnly:!0})],L.prototype,"imagePointsInView",null),e([d({readOnly:!0})],L.prototype,"imageSize",null),e([d({cast:b})],L.prototype,"imageSource",void 0),e([d({readOnly:!0})],L.prototype,"imageRenderer",null),e([d({type:Number})],L.prototype,"imageRotation",void 0),e([d()],L.prototype,"imageView",null),e([d({type:Number})],L.prototype,"sharpness",null),e([d()],L.prototype,"state",void 0),L=e([p("esri.widgets.OrientedImageryViewer.components.ImageViewerViewModel")],L);const z=L;export{z as default};
