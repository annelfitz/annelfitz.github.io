/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{id as e}from"../../kernel.js";import r from"../../request.js";import{isSome as o}from"../../core/arrayUtils.js";import s from"../../core/Collection.js";import i from"../../core/Error.js";import{clone as a}from"../../core/lang.js";import l from"../../core/Loadable.js";import{isAbortError as p}from"../../core/promiseUtils.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import{formatDate as u,convertDateFormatToIntlOptions as c}from"../../intl/date.js";import{getLanguage as f}from"../../intl/locale.js";import d from"../../portal/Portal.js";import y from"../../portal/PortalQueryParams.js";import{execute as h}from"../../rest/geoprocessor/execute.js";import"../../rest/geoprocessor/GPOptions.js";import"../../geometry/SpatialReference.js";import"../../config.js";import"../../geometry/Polygon.js";import"../../geometry/Polyline.js";import"../../geometry/support/normalizeUtilsCommon.js";import"../../geometry/support/spatialReferenceUtils.js";import"../../geometry/support/Ellipsoid.js";import"../../geometry.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../geometry/Multipoint.js";import"../../geometry/Point.js";import"../../core/urlUtils.js";import"../../layers/support/Field.js";import"../../layers/support/MapImage.js";import"../../rest/support/DataFile.js";import"../../rest/support/FeatureSet.js";import"../../rest/support/LinearUnit.js";import"../../rest/support/ParameterValue.js";import"../../rest/support/parameterValueUtils.js";import"../../rest/support/RasterData.js";import"../../rest/support/JobInfo.js";import{execute as v}from"../../rest/print.js";import{fromJSON as T}from"../../rest/support/fileFormat.js";import{fromJSON as w}from"../../rest/support/layoutTemplate.js";import j from"../../rest/support/PrintParameters.js";import g from"../../rest/support/PrintTemplate.js";import P from"./CustomTemplate.js";const S=s.ofType(P);function x(t){t.layoutOptions??={},t.layoutOptions.customTextElements??=[];const e="date";if(!t.layoutOptions.customTextElements.find((t=>e in t))){const{customTextElements:e}=t.layoutOptions;let r=u(Date.now(),c("short-date"));"ar"===f()&&(r="‏"+r),e.push({date:r})}}let L=class extends l{constructor(t){super(t),this._serviceTemplateCustomTextElements=null,this.allowedFormats="all",this.allowedLayouts="all",this.defaultTemplates=new S,this.error=null,this.extraParameters=null,this.includeDefaultTemplates=!0,this.portal=d.getDefault(),this.printServiceUrl=null,this.printTimeout=12e4,this.templatesInfo=null,this.updateDelay=1e3,this.view=null,this.templateCustomTextElements=null}destroy(){this.view=null}get effectivePrintServiceUrl(){return this.printServiceUrl??null}get effectiveTemplateCustomTextElements(){if(!this._serviceTemplateCustomTextElements)return{};const t=a(this._serviceTemplateCustomTextElements);return this.templateCustomTextElements&&Object.keys(this.templateCustomTextElements).forEach((e=>{const r=t[e];if(r){const t=this.templateCustomTextElements?.[e];r.forEach((e=>{const[r]=Object.entries(e)[0];t?.forEach((t=>{const[o,s]=Object.entries(t)[0];r===o&&(e[r]=s)}))}))}})),Object.freeze(t)}get state(){return"loading"===this.loadStatus?"initializing":"failed"===this.loadStatus||this.error?"error":"loaded"===this.loadStatus&&this.view?.ready?"ready":"disabled"}async load(t){return this.addResolvingPromise(this._loadResources(t).catch((t=>this.error=t))),this}async getLayoutTemplateInfo(t,r){const{id:o}=t;"public"!==t.access&&e&&await e.getCredential(this._printServiceLayoutsUrl);const s={Layout_Item_ID:JSON.stringify({id:o})},{results:i}=await h(this._printServiceLayoutsUrl,s,null,r),a=i[0].value[0],l=a.layoutOptions.mapSurroundInfos.find((({type:t})=>"CIMMarkerNorthArrow"===t));return l&&(this.templateToNorthArrowInfo[o]=l),a}async print(t){const{view:e,extraParameters:r,updateDelay:o}=this;if(!e)throw new i("print:view-required","view is not set");x(t);const s=new j({view:e,template:t,extraParameters:r,updateDelay:o});try{return await v(this.effectivePrintServiceUrl,s,{timeout:this.printTimeout})}catch(a){throw new i("print:export-error","An error occurred while exporting the web map.",{error:a})}}toPrintTemplate({attributionEnabled:t,author:e,copyright:r,customTextElements:o,dpi:s,forceFeatureAttributes:i,format:a,height:l,includeTables:p,layout:n,layoutItem:m,legendEnabled:u,northArrowEnabled:c,scale:f,scaleEnabled:d,title:y,width:h}){const v=new g({attributionVisible:t,forceFeatureAttributes:i,format:a,includeTables:p,layout:n,layoutItem:m,layoutOptions:{authorText:e||"",copyrightText:r||"",customTextElements:o,titleText:y||""},outScale:f??0,scalePreserved:d});h&&(v.exportOptions.width=h),l&&(v.exportOptions.height=l),s&&(v.exportOptions.dpi=s),!u&&v.layoutOptions&&(v.layoutOptions.legendLayers=[]);const T=this.templateToNorthArrowInfo[m?.id??n];if(T){!(T.visible===c)&&v.layoutOptions&&(v.layoutOptions.elementOverrides={[T.name]:{visible:c}})}return v}async _loadResources(t){let e=[];if(!this.printServiceUrl){if(this.destroyed)return;try{await this.portal.load(t)}catch(a){throw new i("print:could-not-load-portal","Cannot load print resource information from portal",{error:a,url:this.effectivePrintServiceUrl})}const r=this.portal.helperServices?.printTask;r&&(this._set("effectivePrintServiceUrl",r.url),e=r.templates?.map((t=>P.fromJSON(t)))??[])}this.defaultTemplates.addMany(e);const r=this.effectivePrintServiceUrl?.toLowerCase().split("/");if(!r?.includes("gpserver"))throw new i("print:invalid-print-service-url","Can't fetch print templates information from provided URL",{url:this.effectivePrintServiceUrl});const[o,s]=await Promise.all([this._getPrintServiceLayouts(t),this._getPrintServiceTemplates(t)]);if(this._processPrintServiceLayouts(o),this._processPrintServiceTemplates(s),!this.printServiceUrl){const e=await this._getPortalCustomTemplates(t);this.defaultTemplates.addMany(e)}}async _getPortalCustomTemplates(t){const{layoutGroupQuery:e}=this.portal;if(!e)return[];const r=new y({query:e,disableExtraQuery:!0}),o=await this.portal.queryGroups(r,t);if(!o.total)return[];const s=o.results[0],i=new y({num:100,query:"type:Layout"}),a=(await s.queryItems(i,t)).results;return a.length?a.map((t=>new P({label:t.title,layoutItem:t}))):[]}_processPrintServiceTemplates(t){this._set("templatesInfo",t)}async _getPrintServiceLayouts(t){let e=[];const r=async e=>{this._printServiceLayoutsUrl=this.effectivePrintServiceUrl.replace(/(\/GPServer\/).+/i,`$1${encodeURI(e)}`);return(await h(this._printServiceLayoutsUrl,null,null,t)).results[0].value};try{e=await r("Get Layout Templates Info Task")}catch{}if(!e||e.length<1)try{e=await r("Get Layout Templates Info")}catch{}return e}_processPrintServiceLayouts(t){const e={},r={};t.forEach((({layoutTemplate:t,layoutOptions:{customTextElements:o,mapSurroundInfos:s}})=>{const i=w(t);e[i]=o,s&&(r[i]=s.find((({type:t})=>"CIMMarkerNorthArrow"===t)))})),this._serviceTemplateCustomTextElements=Object.freeze(e),this.templateToNorthArrowInfo=r}async _getPrintServiceTemplates(t){let e;try{({data:e}=await r(this.effectivePrintServiceUrl,{...t,query:{f:"json"},timeout:this.printTimeout}))}catch(l){throw p(l)?l:new i("print:unavailable-service-info","Can't fetch templates info from service",{error:l})}const{parameters:o}=e,s=o.find((({name:t})=>"Format"===t)),a=o.find((({name:t})=>"Layout_Template"===t));return{format:this._getFormat(s),layout:this._getLayout(a)}}_getFormat(t){const e="all"===this.allowedFormats?t.choiceList:t.choiceList.filter((t=>this.allowedFormats.includes(T(t)))),r=(e.length?e:t.choiceList).map(T).filter(o),s=T(t.defaultValue),i=r.includes(s)?s:r[0];return{choiceList:r,defaultValue:i}}_getLayout(t){const e=t.choiceList.filter((t=>"map_only"!==t.toLowerCase())),r="all"===this.allowedLayouts?e:e.filter((t=>this.allowedLayouts.includes(w(t)))),s=(r.length?r:e).map(w).filter(o),i=w(t.defaultValue),a=s.includes(i)?i:s.find((t=>/(?=.*letter)(?=.*landscape)/i.test(t)))??s.find((t=>/(?=.*a4)(?=.*landscape)/i.test(t)))??s[0];return{choiceList:s,defaultValue:a}}};t([n()],L.prototype,"_serviceTemplateCustomTextElements",void 0),t([n()],L.prototype,"allowedFormats",void 0),t([n()],L.prototype,"allowedLayouts",void 0),t([n({type:S})],L.prototype,"defaultTemplates",void 0),t([n()],L.prototype,"error",void 0),t([n()],L.prototype,"extraParameters",void 0),t([n()],L.prototype,"includeDefaultTemplates",void 0),t([n({readOnly:!0})],L.prototype,"effectivePrintServiceUrl",null),t([n()],L.prototype,"effectiveTemplateCustomTextElements",null),t([n({type:d})],L.prototype,"portal",void 0),t([n()],L.prototype,"printServiceUrl",void 0),t([n()],L.prototype,"printTimeout",void 0),t([n({readOnly:!0})],L.prototype,"state",null),t([n({readOnly:!0})],L.prototype,"templatesInfo",void 0),t([n()],L.prototype,"updateDelay",void 0),t([n()],L.prototype,"view",void 0),t([n()],L.prototype,"templateCustomTextElements",void 0),t([n()],L.prototype,"templateToNorthArrowInfo",void 0),L=t([m("esri.widgets.Print.PrintViewModel")],L);const _=L;export{_ as default};
