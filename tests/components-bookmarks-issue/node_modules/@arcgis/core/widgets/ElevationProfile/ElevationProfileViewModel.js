/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../Graphic.js";import i from"../../core/Accessor.js";import{isSome as o,min as r}from"../../core/arrayUtils.js";import{ByteSizeUnit as s}from"../../core/ByteSizeUnit.js";import l from"../../core/Collection.js";import{referenceSetter as n}from"../../core/collectionUtils.js";import{deprecatedProperty as u}from"../../core/deprecate.js";import a from"../../core/Logger.js";import{LRUCache as h}from"../../core/LRUCache.js";import{destroyMaybe as p}from"../../core/maybe.js";import{memoize as c}from"../../core/memoize.js";import{watch as d,syncAndInitial as f}from"../../core/reactiveUtils.js";import{adaptiveLengthUnit as m,adaptiveVerticalLengthUnit as v,measurementLengthUnits as g}from"../../core/unitUtils.js";import{property as y}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import{subclass as _}from"../../core/accessorSupport/decorators/subclass.js";import{ElevationQueryTileCache as b}from"../../layers/support/ElevationQueryTileCache.js";import{defaultUnitPropertyMetadata as U}from"../../properties/defaultUnit.js";import{ElevationProfileController as P}from"./ElevationProfileController.js";import j from"./ElevationProfileLineGround.js";import{ElevationProfileLineCollection as w}from"./elevationProfileLineTypes.js";import{ElevationProfileTool as E}from"./ElevationProfileTool.js";import{ElevationProfileState as C,ElevationProfileErrorState as O}from"./support/constants.js";import{isPolyline as S,isValidInputPath as T}from"./support/geometryUtils.js";import{isProfileGenerationError as D,ProfileGenerationErrorCause as G}from"./support/ProfileGenerationError.js";import{createProfileQueue as L}from"./support/profileUtils.js";import{getBoundsInMeters as I,mergeStatistics as k}from"./support/statisticsUtils.js";let R=class extends i{constructor(t){super(t),this.view=null,this.input=null,this._getEffectiveUnitsMemoized=c(((t,e)=>({distance:t,elevation:e}))),this.hoveredChartPosition=null,this.uniformChartScaling=!1,this.defaultUnit=null,this.queue=null,this._currentTileCache=null,this.error=null,this._defaultProfileLineGround=new j,this._userUnitOptions=null,this._userUnit=null,t?.profiles||(this.profiles=new l([this._defaultProfileLineGround]))}initialize(){this.addHandles(d((()=>this.view),(t=>{if(null==t)return void a.getLogger(this).warnOnce("no view. Widget will be disabled until a view is provided.");this.removeHandles(q);const e="3d"===t.type?t.resourceController:void 0;this.queue?.destroy(),this.queue=L(e?.scheduler);const i=e?.addUpdatingObject(this);i&&this.addHandles(i,q)}),f)),this.tool=new E({viewModel:this}),this._controller=new P({viewModel:this})}destroy(){this._defaultProfileLineGround=p(this._defaultProfileLineGround),this._controller=p(this._controller),this._currentTileCache=p(this._currentTileCache),this.tool=p(this.tool),this.queue=p(this.queue)}get profiles(){return this._get("profiles")}set profiles(t){const e=this._get("profiles"),i=t??new l;this._set("profiles",n(i,e))}get state(){const t=this.view;return null!=t&&t.ready?this.tool.state:C.Disabled}get progress(){let t=0,e=0;for(const i of this.visibleProfiles)t++,e+=i.progress;return t>0?e/t:0}set unitOptions(t){this._userUnitOptions=t,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(t){this._userUnit=t?this._findSelectableUnit(t,this._userUnit):null,this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}get effectiveUnits(){const t=I(this.visibleProfiles.map((t=>t.result))),e=m(t.maxDistance,"meters",this.unit),i=v(t.maxElevation,"meters",this.unit);return this._getEffectiveUnitsMemoized(e,i)}get geodesicDistanceThreshold(){return this._get("geodesicDistanceThreshold")}set geodesicDistanceThreshold(t){u(a.getLogger(this),"geodesicDistanceThreshold",{version:"4.29",warnOnce:!0}),this._set("geodesicDistanceThreshold",t)}get highlightEnabled(){return this.tool.highlightEnabled}set highlightEnabled(t){this.tool.highlightEnabled=t}get hasVertices(){const t=this.input?.geometry;return S(t)&&t.paths.reduce(((t,e)=>t+e.length),0)>0}get hoveredPoints(){return null!=this.input&&this.visible&&this.tool.editable?this.visibleProfiles.map((t=>{const e=t.hoveredPoint;return null!=e?{hoveredPoint:e,color:t.color}:null})).filter(o):[]}get statistics(){return k(this.visibleProfiles.map((t=>t.statistics)))}get chartData(){if(null==this.input)return null;const{effectiveUnits:t,progress:e,statistics:i,visibleProfiles:o,uniformChartScaling:r}=this,s=o.filter((t=>t.hasZ)).map((t=>({id:t.id,type:t.type,title:t.title,color:t.color,samples:t.samples,progress:t.progress,chartFillEnabled:t.chartFillEnabled,chartStrokeWidth:t.chartStrokeWidth,chartStrokeOffsetY:t.chartStrokeOffsetY,viewVisualizationEnabled:t.viewVisualizationEnabled})));return 0===s.length?null:{lines:s,effectiveUnits:t,statistics:i,refined:1===e,dynamicElevationRange:o.some((t=>"view"===t.type)),uniformScaling:r}}get visibleProfiles(){return this.profiles.toArray().filter((t=>t.available&&t.visible))}get minDemResolutions(){const t=[];for(const{minDemResolution:e}of this.visibleProfiles)null!=e&&t.push(e);return t}get minDemResolution(){return r(this.minDemResolutions)}get errorState(){const t=this.input?.geometry;if(!T(t))return O.NoValidInput;if(null!=this.error){if(D(this.error))switch(this.error.cause){case G.TooComplex:return O.TooComplex;case G.InvalidGeometry:return O.InvalidGeometry;case G.InvalidElevationInfo:return O.InvalidElevationInfo;case G.ElevationQueryError:return O.NoValidInput}return O.UnknownError}return 0===this.visibleProfiles.length?O.NoVisibleProfiles:null==this.chartData&&1===this.progress?O.RefinedButNoChartData:O.None}get tileCache(){this._currentTileCache=p(this._currentTileCache);const t=this.view;if(null!=t&&"3d"===t?.type){const e=t.basemapTerrain?.elevationQueryCache;if(null!=e)return e}return null==this._currentTileCache&&(this._currentTileCache=new b(new h(20*s.MEGABYTES))),this._currentTileCache}get visible(){return this.tool.visible}set visible(t){this.tool.visible=t}get inputIsSketched(){return this.tool.interaction.isSketchedGraphic(this.input)}get elevationProvider(){const t=this.view;return null!=t&&"3d"===t.type?t.elevationProvider:null}get updating(){const{progress:t}=this,e=!!this.queue?.updating;return t>0&&t<1||e}start(t){this.tool.interaction.start(t)}stop(){this.tool.interaction.stop()}cancel(){this.tool.interaction.cancel()}clear(){this.tool.interaction.clear()}_findSelectableUnit(t,e){const i=this.unitOptions;return null!=t&&i.includes(t)?t:e?this._findSelectableUnit(e):i[0]}_filteredOrAllUnits(t){const e=(null!=t?t:[]).filter((t=>g.includes(t)));return 0===e.length?g.slice():e}};t([y()],R.prototype,"view",void 0),t([y({type:e})],R.prototype,"input",void 0),t([y({type:w,nonNullable:!0})],R.prototype,"profiles",null),t([y({readOnly:!0})],R.prototype,"state",null),t([y({readOnly:!0})],R.prototype,"progress",null),t([y()],R.prototype,"unitOptions",null),t([y()],R.prototype,"unit",null),t([y({readOnly:!0})],R.prototype,"effectiveUnits",null),t([y()],R.prototype,"geodesicDistanceThreshold",null),t([y()],R.prototype,"hoveredChartPosition",void 0),t([y()],R.prototype,"uniformChartScaling",void 0),t([y()],R.prototype,"highlightEnabled",null),t([y({readOnly:!0})],R.prototype,"hoveredPoints",null),t([y({readOnly:!0})],R.prototype,"statistics",null),t([y()],R.prototype,"chartData",null),t([y()],R.prototype,"visibleProfiles",null),t([y()],R.prototype,"minDemResolutions",null),t([y({readOnly:!0})],R.prototype,"minDemResolution",null),t([y({readOnly:!0})],R.prototype,"errorState",null),t([y(U)],R.prototype,"defaultUnit",void 0),t([y()],R.prototype,"queue",void 0),t([y()],R.prototype,"tileCache",null),t([y()],R.prototype,"tool",void 0),t([y()],R.prototype,"visible",null),t([y()],R.prototype,"error",void 0),t([y()],R.prototype,"inputIsSketched",null),t([y()],R.prototype,"elevationProvider",null),t([y()],R.prototype,"updating",null),t([y()],R.prototype,"_defaultProfileLineGround",void 0),t([y()],R.prototype,"_userUnitOptions",void 0),t([y()],R.prototype,"_controller",void 0),t([y()],R.prototype,"_userUnit",void 0),R=t([_("esri.widgets.ElevationProfile.ElevationProfileViewModel")],R);const q=Symbol("updating-object"),z=R;export{z as default};
