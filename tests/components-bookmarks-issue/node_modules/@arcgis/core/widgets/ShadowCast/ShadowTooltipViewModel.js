/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../core/Accessor.js";import{createTask as o}from"../../core/asyncUtils.js";import{makeHandle as i}from"../../core/handleUtils.js";import{abortMaybe as s}from"../../core/maybe.js";import{watch as a,syncAndInitial as r}from"../../core/reactiveUtils.js";import{createScreenPoint as n}from"../../core/screenUtils.js";import{throttle as d}from"../../core/throttle.js";import{property as c}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as h}from"../../core/accessorSupport/decorators/subclass.js";var l;!function(t){t.PointerMove="pointer-move",t.Main="main"}(l||(l={}));const m=300;let u=class extends e{constructor(t){super(t),this._screenPoint=null,this._accumulatedShadowTime=null,this._shadowTimeTask=null,this._updateAccumulatedShadowTime=(t,e)=>{this._shadowTimeTask=s(this._shadowTimeTask),this._shadowTimeTask=o((async o=>{const{results:i,ground:s}=await t.hitTest(e);if(0===i.length&&!s.mapPoint)return void(this._accumulatedShadowTime=null);const a=await this.getDuration(e,o);this._accumulatedShadowTime=a}))},this._throttledUpdateAccumulatedShadowTime=d(this._updateAccumulatedShadowTime,m)}initialize(){this.addHandles(a((()=>({enabled:this.enabled,view:this.view})),(({enabled:t,view:e})=>{t&&null!=e?this._startTracking(e):this._stopTracking()}),r))}get screenPoint(){return this.enabled?this._screenPoint:null}get accumulatedShadowTime(){return this.enabled?this._accumulatedShadowTime:null}get testData(){return{setThrottleDelay:t=>{this._throttledUpdateAccumulatedShadowTime.remove(),this._throttledUpdateAccumulatedShadowTime=d(this._updateAccumulatedShadowTime,t)}}}_startTracking(t){if(this.hasHandles(l.Main))return;const e=()=>{this.hasHandles(l.PointerMove)||this.addHandles(t.on("pointer-move",(e=>{const o=n(e.x,e.y);this._screenPoint=o,this._throttledUpdateAccumulatedShadowTime(t,o)})),l.PointerMove)},o=()=>{this.removeHandles(l.PointerMove),this._screenPoint=null,this._accumulatedShadowTime=null};this.addHandles([this._throttledUpdateAccumulatedShadowTime,t.on("pointer-enter",e),t.on("pointer-leave",o),t.on("pointer-down",o),t.on("pointer-drag",o),t.on("pointer-up",e),t.on("click",(e=>{const o=n(e.x,e.y);this._screenPoint=o,this._updateAccumulatedShadowTime(t,o)})),i((()=>{this._shadowTimeTask=s(this._shadowTimeTask)}))],l.Main),e()}_stopTracking(){this.removeHandles(l.Main)}};t([c()],u.prototype,"getDuration",void 0),t([c()],u.prototype,"view",void 0),t([c()],u.prototype,"enabled",void 0),t([c()],u.prototype,"screenPoint",null),t([c()],u.prototype,"accumulatedShadowTime",null),t([c()],u.prototype,"_screenPoint",void 0),t([c()],u.prototype,"_accumulatedShadowTime",void 0),t([c()],u.prototype,"_shadowTimeTask",void 0),u=t([h("esri.widgets.ShadowCast.ShadowTooltipViewModel")],u);export{u as ShadowTooltipViewModel};
