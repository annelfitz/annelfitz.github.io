/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Error.js";import{makeHandle as i}from"../../core/handleUtils.js";import{destroyMaybe as s}from"../../core/maybe.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import a from"../../layers/GraphicsLayer.js";import{highlightsSupported as l}from"../../views/support/layerViewUtils.js";import h from"./UpdateFeatureWorkflowData.js";import{handleKeys as c,UpdateRecordWorkflow as n}from"./UpdateRecordWorkflow.js";import{getVisualVariableAttributes as d,setUpGeometryUpdate as p,isTerminalUpdateEventType as w,updateGraphicSymbolWhenRequired as u,swapForEditingSession as m,cloneGraphicExceptMesh as y,canCreateInteractiveEditSession as f}from"./workflowUtils.js";import k from"../Sketch/SketchViewModel.js";var g;const _={...c,highlights:Symbol(),sketchGraphics:Symbol(),sketchViewModel:Symbol()};let V=g=class extends n{constructor(e){super(e),this.type="update-feature",this._layerViewEditSession=null,this._sketchGraphicClone=null,this._sketchViewModel=null,this._webStyleCache=new Map}destroy(){this._layerViewEditSession?.rollback()}async commit(){this.removeHandles(_.sketchGraphics);try{const e=this.data.edits.stagedForDelete;await super.commit();const t=this._layerViewEditSession;e?t?.rollback():t?.commit()}catch(e){throw await this._configureSketchViewModel(),new t("editor-workflow:failed-to-commit","An error occurred when sending the updates to the service",{error:e})}}async start(){return await super.start(),await this._initializeSketchViewModel()}_initializeFeatureFormViewModel(){super._initializeFeatureFormViewModel(),this.addHandles(this._featureFormViewModel.on("value-change",(e=>{this._layerViewEditSession?.setAttribute(e.fieldName,e.value)})))}_configureHighlight(){const{edits:e,layerView:t}=this.data;l(t)&&this.addHandles(t.highlight(e.feature),_.highlights)}async _configureSketchViewModel(){const e=this._sketchViewModel;if(!e)return;const{data:t,_featureFormViewModel:i,_sketchGraphicClone:s}=this,{edits:o,viewModel:r}=t,a=o.feature,{view:l}=r,h=d(a),c=await p({feature:a,featureClone:s,visualVariableAttributes:h,sketchViewModel:e,view:l,onUpdate:({geometry:e,attributes:t},s)=>{if(o.updateAttributes(t),o.updateGeometry(e),i.feature.geometry=e,null!=h.rotation){const{field:e}=h.rotation;i.setValue(e,t[e])}if(null!=h.size){const{field:e}=h.size;i.setValue(e,t[e])}("undo"===s.type||"redo"===s.type||"update"===s.type&&null!=s.toolEventInfo&&w(s.toolEventInfo.type))&&i.notifyFeatureGeometryChanged()},webStyleCache:this._webStyleCache});this.addHandles(c,_.sketchGraphics),e.addHandles(c)}async _initializeSketchViewModel(){const{data:e,_sketchGraphicClone:t}=this,o=e.edits.feature,{capabilities:r,layer:l}=e.editorItem,{view:h}=e.viewModel;if(this.removeHandles([_.highlights,_.sketchGraphics,_.sketchViewModel]),!r.update.geometry)return{enter:async()=>{this.hasHandles(_.highlights)||this._configureHighlight()},exit:()=>this.removeHandles([_.highlights])};const c=new a({elevationInfo:l.elevationInfo,internal:!0,listMode:"hide"}),n=new k({allowDeleteKey:!1,layer:c,sketchOptions:e.sketchOptions,snappingManager:e.snappingManager,updateOnGraphicClick:!1,view:h});return this._sketchViewModel=n,h?.map.add(c),this.addHandles(i((()=>{h?.destroyed||h?.map.remove(c),c.destroy(),this._sketchViewModel=s(n)})),_.sketchViewModel),await u(t,this._webStyleCache,"2d"===h?.type?h.scale:null),this.addHandles([await m(n,o,t)]),{enter:async()=>{this.hasHandles(_.sketchGraphics)||await this._configureSketchViewModel()},exit:()=>this.removeHandles([_.sketchGraphics]),viewModel:n}}_onFullFeatureLoaded(e){super._onFullFeatureLoaded(e);const t=this._sketchGraphicClone=y(e),{edits:i,layerView:s}=this.data;i.updateGeometry(e.geometry),i.trackChanges(),f(s)&&(this._layerViewEditSession=s.createInteractiveEditSession(t))}static async create(e){const t=new g({data:await h.create(e),onCommit:this._onCommitFactory(e.applyEdits)});return t._set("steps",this._createWorkflowSteps(t)),t}get test(){return{graphicClone:this._sketchGraphicClone,sketchViewModel:this._sketchViewModel}}};e([o()],V.prototype,"_layerViewEditSession",void 0),e([o()],V.prototype,"_sketchGraphicClone",void 0),e([o()],V.prototype,"_sketchViewModel",void 0),V=g=e([r("esri.widgets.Editor.UpdateFeatureWorkflow")],V);export{V as UpdateFeatureWorkflow,_ as handleKeys};
