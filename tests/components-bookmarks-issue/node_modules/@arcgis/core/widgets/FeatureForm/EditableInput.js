/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import{getEffectiveLayerCapabilities as s}from"../../layers/support/layerUtils.js";import{capabilitiesAllowEditType as o}from"./featureFormUtils.js";import i from"./InputBase.js";let a=class extends i{constructor(t){super(t),this.arcadeEditType="NA",this.editableExpressionExecutor=null}get editable(){return!!this.layerAllowsEdits&&(this.evaluatedEditableExpression??!0)}get evaluatedEditableExpression(){const{editableExpressionExecutor:t}=this;return null!=t?!!t.lastEvaluatedValue:null}get layerAllowsEdits(){const{layer:t}=this;if(!t)return!1;const e=s(t),r=e?.operations.supportsEditing,i=o(e,this.arcadeEditType);return!(!r||!i)}};t([e()],a.prototype,"arcadeEditType",void 0),t([e()],a.prototype,"editable",null),t([e()],a.prototype,"editableExpressionExecutor",void 0),t([e()],a.prototype,"evaluatedEditableExpression",null),t([e()],a.prototype,"layerAllowsEdits",null),a=t([r("esri.widgets.FeatureForm.EditableInput")],a);const l=a;export{l as default};
