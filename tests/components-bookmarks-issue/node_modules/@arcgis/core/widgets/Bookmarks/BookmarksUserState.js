/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../core/Accessor.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";let s=class extends e{constructor(t){super(t)}get editedBookmark(){const{bookmark:t}=this;return t?this._get("editedBookmark")||t.clone():null}get customUrl(){return this.editedBookmark?.thumbnail?.isSecureUrl?this.editedBookmark?.thumbnail?.url:null}set customUrl(t){this._override("customUrl",t)}get screenshotUrl(){return this.editedBookmark?.thumbnail?.isDataURI?this.editedBookmark?.thumbnail?.url:null}set screenshotUrl(t){this._override("screenshotUrl",t)}get state(){return this._get("state")}set state(t){this.validationState=void 0,this.loading=void 0,this._set("state",t)}get thumbnailState(){return this.editedBookmark?.thumbnail?.url?this.editedBookmark?.thumbnail?.isSecureUrl?"url":"screenshot":"none"}set thumbnailState(t){this._overrideIfSome("thumbnailState",t)}};t([o()],s.prototype,"bookmark",void 0),t([o({readOnly:!0})],s.prototype,"editedBookmark",null),t([o()],s.prototype,"customUrl",null),t([o()],s.prototype,"screenshotUrl",null),t([o()],s.prototype,"state",null),t([o()],s.prototype,"thumbnailState",null),t([o()],s.prototype,"validationState",void 0),t([o()],s.prototype,"loading",void 0),s=t([r("esri.widgets.Bookmarks.BookmarksUserState")],s);const i=s;export{i as default};
