/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../geometry.js";import t from"../../Graphic.js";import"../../intl.js";import"../../symbols.js";import{multiplyOpacity as r,getContrast as s,BrightnessThreshold as i}from"../../core/colorUtils.js";import{destroyMaybe as a}from"../../core/maybe.js";import{watch as n,initial as o}from"../../core/reactiveUtils.js";import{formatDecimal as m,formatImperialArea as l,formatMetricArea as p,formatImperialLength as c,formatMetricLength as u}from"../../core/unitFormatUtils.js";import{convertUnit as h}from"../../core/unitUtils.js";import{property as d}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as g}from"../../core/accessorSupport/decorators/subclass.js";import{UpdatingHandles as v}from"../../core/support/UpdatingHandles.js";import{geodesicDensify as y,planarLength as f,simplify as _,geodesicLength as w,geodesicArea as b,planarArea as L}from"../../geometry/geometryEngine.js";import{isLoaded as j,project as S}from"../../geometry/projection.js";import{isSupported as G,geodesicDensify as M,geodesicLengths as A,geodesicAreas as x}from"../../geometry/support/geodesicUtils.js";import k from"../../layers/GraphicsLayer.js";import{ViewingMode as q}from"../../views/ViewingMode.js";import{SnappingVisualizer2D as C}from"../../views/2d/interactive/SnappingVisualizer2D.js";import R from"../../views/draw/Draw.js";import{createCoordinateHelper as T}from"../../views/interactive/coordinateHelper.js";import{createManipulatorDragEventPipeline as D,screenToMap as H,dragManipulatedObject as U}from"../../views/interactive/dragEventPipeline.js";import{GraphicManipulator as O}from"../../views/interactive/GraphicManipulator.js";import{InteractiveToolBase as W}from"../../views/interactive/InteractiveToolBase.js";import{EditGeometry as z}from"../../views/interactive/editGeometry/EditGeometry.js";import{EditGeometryOperations as E}from"../../views/interactive/editGeometry/EditGeometryOperations.js";import{SnappingContext as P}from"../../views/interactive/snapping/SnappingContext.js";import{createSnapDragEventPipelineStep as V}from"../../views/interactive/snapping/SnappingDragPipelineStep.js";import{acquire as F}from"../../views/interactive/snapping/SnappingManagerPool.js";import{setupSnappingToggleHandles as I}from"../../views/interactive/snapping/snappingUtils.js";import{fetchMessageBundle as B}from"../../intl/messages.js";import{onLocaleChange as N}from"../../intl/locale.js";import J from"../../geometry/Point.js";import K from"../../symbols/SimpleFillSymbol.js";import Q from"../../symbols/SimpleLineSymbol.js";import X from"../../symbols/TextSymbol.js";import Y from"../../symbols/Font.js";import Z from"../../symbols/SimpleMarkerSymbol.js";import $ from"../../geometry/Polyline.js";import ee from"../../geometry/SpatialReference.js";import te from"../../geometry/Polygon.js";const re=1e5;let se=class extends W{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new k({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new k({internal:!0,listMode:"hide",visible:!1}),this._snappingLayer=new k({internal:!0,listMode:"hide",visible:!1}),this._updatingHandles=new v,this._vertices=[],this.geodesicDistanceThreshold=null,this.measurement=null,this.measurementLabel=null}initialize(){B("esri/core/t9n/Units").then((e=>{this.messages=e}));const e=this.view;this._draw=new R({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this._snappingManagerResult=F(e),this.addHandles([N((async()=>{this.messages=await B("esri/core/t9n/Units")})),n((()=>[this.unit,this.geodesicDistanceThreshold,this.messages]),(()=>{this._updateGraphics()}),o),n((()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor]),(()=>{if(!this._vertices.length)return;const e=this._vertices.map((({coord:e})=>e));for(const{handle:t}of this._vertices)t.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(e)})),n((()=>this.snappingOptions.featureSources),(e=>{for(const t of e)t.layer!==this._measurementLayer&&t.layer!==this._manipulatorLayer||(t.enabled=!1)}),o),this._snappingManagerResult]),I(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=a(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=a(this._measurementLayer),this._manipulatorLayer=a(this._manipulatorLayer),this._snappingLayer=a(this._snappingLayer),this._updatingHandles=a(this._updatingHandles),this._resetVertices()}get _snappingManager(){return this._snappingManagerResult.snappingManager}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this._snappingManager.options}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onActivate(){this._drawActive||0!==this._vertices.length||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}reset(){this.manipulators.removeAll(),this._resetVertices(),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1}_getSnappingContext(e){return new P({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new E(new z("point",T(!1,!1,this.view.spatialReference)),q.Local),visualizer:new C(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._snappingManager,t=this._draw.create("polyline",{mode:"click",snappingManager:e});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],(e=>this._updateSketch(e.vertices))),t.on("draw-complete",(()=>this._stopSketch()))}_stopSketch(){if(this._vertices.length<3)return this.reset(),void this._startSketch();this.manipulators.forEach((({manipulator:e})=>{e.interactive=!0})),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const t=this.view.spatialReference;if(t&&(!oe(t)||j())){for(;this._vertices.length>e.length;){const{handle:e,manipulator:t}=this._vertices.pop();e.remove(),this.manipulators.remove(t)}for(let r=this._vertices.length;r<e.length;r++){const[s,i]=e[r],a=new J({x:s,y:i,spatialReference:t}),n=ie(a,this.view,this._manipulatorLayer);this.manipulators.add(n);const o=E.fromGeometry(a,q.Local);o.on("vertex-update",(e=>{const t=e.vertices.at(0);t&&(this._vertices[r].coord=[t.pos[0],t.pos[1]],this._updateGraphics())}));const m=D(n,((e,t,r,s)=>{const i=this._getSnappingContext(s),a=this._snappingManager,n=this._updatingHandles,{snappingStep:m}=V({snappingContext:i,snappingManager:a,updatingHandles:n});t.next(H(this.view)).next((t=>{if("start"===t.action){const r=new J(t.mapStart);e.graphic.geometry=r,o.trySetGeometry(r)}return t})).next(...m).next(U({operations:o})).next((()=>{e.graphic.geometry=o.data.geometry}))}));this._vertices.push({manipulator:n,coord:[s,i],handle:m})}if(this._vertices.length){const r=this._vertices.length-1,s=this._vertices[r],[i,a]=e[r];s.coord[0]===i&&s.coord[1]===a||(s.coord=[i,a],s.manipulator.graphic.geometry=new J({x:i,y:a,spatialReference:t}));const n=this._drawActive?this._vertices[r].manipulator:null;this.manipulators.forEach((({manipulator:e})=>{e.interactive=null==n||e!==n}))}this._updateGraphics()}}_updateGraphics(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=ae(this._vertices.map((({coord:e})=>e)),this.view.spatialReference,this.geodesicDistanceThreshold);if(!e)return;const{measurement:a,fillGeometry:n,outlineGeometry:o}=e;this._set("measurement",a);const m=a?me(this.messages,a,this.unit):null;if(this._set("measurementLabel",m),!n&&!o)return;let l,p,c;const{graphics:u}=this._measurementLayer,h=3===u.length,{effectiveTheme:d}=this.view;h?(l=u.at(0),p=u.at(1),c=u.at(2)):(l=new t({symbol:new K({color:r(d.accentColor,.3),outline:null})}),p=new t({symbol:new Q({color:d.accentColor,width:2})}),c=new t({symbol:new X({color:d.textColor,font:new Y({size:14,family:"sans-serif"}),haloColor:r(s(d.textColor,i.Low),.5),haloSize:2})}),u.removeAll(),u.addMany([l,p,c])),l.geometry=n,p.geometry=o,c.geometry=n?.centroid,c.symbol.text=m?.area??""}};function ie(e,s,i){const a=8,n={style:"circle",color:r(s.effectiveTheme.accentColor,.5),outline:{type:"simple-line",width:0}},o=new Z({...n,size:a}),m=new Z({...n,size:1.5*a}),l=new t({geometry:e,symbol:o});return new O({view:s,layer:i,graphic:l,focusedSymbol:m})}function ae(e,t,r){if(2===e.length){const s=new $({paths:e,spatialReference:t});let i;if(t?.isGeographic)if(G(t))i=M(s,re);else{const e=S(s,ee.WGS84),r=M(e,re);i=S(r,t)}else if(t?.isWebMercator)i=y(s,re,"meters");else{if(f(s,"meters")>=pe(r)){const e=S(s,ee.WGS84),r=M(e,re);i=S(r,t)}else i=s}return{measurement:null,fillGeometry:null,outlineGeometry:i}}e.push(e[0]);const s=new $({paths:[e],spatialReference:t}),i=new te({rings:[e],spatialReference:t});let a,n,o=null,m=null;if(t?.isGeographic)if(G(t)){if(o=M(s,re),m=M(i,re),m=_(m),!m)return null;a=A([s],"meters")[0],n=x([m],"square-meters")[0]}else{const e=ee.WGS84,r=S(s,e),l=S(i,e);if(o=M(r,re),m=M(l,re),m=_(m),!m)return null;a=A([r],"meters")[0],n=x([m],"square-meters")[0],o=S(o,t),m=S(m,t)}else if(t?.isWebMercator){if(o=y(s,re,"meters"),m=y(i,re,"meters"),m=_(m),!m)return null;a=w(s,"meters"),n=b(m,"square-meters")}else{const e=f(s,"meters");if(e>=pe(r)){const e=ee.WGS84,r=S(s,e),l=S(i,e);if(o=M(r,re),m=M(l,re),m=_(m),!m)return null;a=A([r],"meters")[0],n=x([m],"square-meters")[0],o=S(o,t),m=S(m,t)}else{if(o=s,m=_(i),!m)return null;a=e,n=L(m,"square-meters")}}return{measurement:{geometry:m,area:n,perimeter:a},fillGeometry:m,outlineGeometry:o}}function ne(e){return null!=e}function oe(e){if(!e)return!1;const{isGeographic:t,isWebMercator:r,isWGS84:s}=e;return t&&!s&&!G(e)||!t&&!r}function me(e,t,r){if(!t||!e)return null;const s={area:null,perimeter:null},{area:i,perimeter:a}=t;switch(r){case"metric":s.area=p(e,i,"square-meters");break;case"imperial":s.area=l(e,i,"square-meters");break;default:{const t=h(i,"square-meters",r);s.area=m(e,t,r);break}}const n=le(r);if(n)switch(n){case"metric":s.perimeter=u(e,a,"meters");break;case"imperial":s.perimeter=c(e,a,"meters");break;default:{const t=h(a,"meters",n);s.perimeter=m(e,t,n);break}}else s.perimeter="";return s}function le(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";default:return null}}function pe(e){return e??1/0}e([d()],se.prototype,"_drawActive",void 0),e([d({readOnly:!0})],se.prototype,"cursor",null),e([d({value:!0})],se.prototype,"editable",null),e([d({type:Number})],se.prototype,"geodesicDistanceThreshold",void 0),e([d({readOnly:!0})],se.prototype,"measurement",void 0),e([d({readOnly:!0})],se.prototype,"measurementLabel",void 0),e([d()],se.prototype,"messages",void 0),e([d()],se.prototype,"unit",void 0),e([d()],se.prototype,"updating",null),e([d({constructOnly:!0})],se.prototype,"view",void 0),se=e([g("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],se);export{se as AreaMeasurement2DTool,ae as createAreaMeasurementInfo2D,me as createAreaMeasurementLabel,oe as isProjectionEngineRequired,ne as isSupported};
