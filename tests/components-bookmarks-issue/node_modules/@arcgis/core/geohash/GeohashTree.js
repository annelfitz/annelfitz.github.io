/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{decodeGeohashXY as t}from"./geohashUtils.js";import e from"../geometry/SpatialReference.js";import{convertFromPolygon as s,quantizeOptimizedGeometry as o,convertFromPoint as i}from"../layers/graphics/featureConversionUtils.js";import r from"../layers/graphics/OptimizedGeometry.js";import{project as h}from"../layers/graphics/data/projectionSupport.js";import{AccumulatedStatistics as n}from"../views/2d/layers/features/aggregation/AccumulatedStatistics.js";class a{static create(t,e,s,o){const i=n.create(t),r=new Array(32);for(let h=0;h<r.length;h++)r[h]=null;return new a(i,e,s,o,r)}constructor(t,e,s,o,i){this._statistics=t,this.xNode=e,this.yNode=s,this.depth=o,this.children=i,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get objectIds(){return this._objectIds}clone(){const t=new a(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return t._count=this._count,t._xWorldTotal=this._xWorldTotal,t._yWorldTotal=this._yWorldTotal,t._xGeohashTotal=this._xGeohashTotal,t._yGeohashTotal=this._yGeohashTotal,t.next=this.next,t.cachedFeature=this.cachedFeature,t._objectIds=new Set(this._objectIds),t}insert(t,e,s,o,i,r){this._count+=1,this._xWorldTotal+=e,this._yWorldTotal+=s,this._xGeohashTotal+=o,this._yGeohashTotal+=i,this._statistics.insert(t,r),this._objectIds.add(t.getObjectId())}merge(t){if(0!==t._count){this._count+=t._count,this._xWorldTotal+=t._xWorldTotal,this._yWorldTotal+=t._yWorldTotal,this._xGeohashTotal+=t._xWorldTotal,this._yGeohashTotal+=t._yWorldTotal,this._statistics.merge(t._statistics);for(const e of t._objectIds.values())this._objectIds.add(e)}}getGeometry(t,i){const n=this._getLngLatBounds(),[a,l,c,d]=n,_=h({rings:[[[a,l],[a,d],[c,d],[c,l],[a,l]]]},e.WGS84,t),u=s(new r,_,!1,!1);if(null!=i){return o(new r,u,!1,!1,"esriGeometryPolygon",i,!1,!1)}return u}getGeometryCentroid(t,s){const n=this._getLngLatBounds(),[a,l,c,d]=n,_=h({x:(a+c)/2,y:(l+d)/2},e.WGS84,t),u=i(new r,_);if(null!=s){return o(new r,u,!1,!1,"esriGeometryPoint",s,!1,!1)}return u}getAttributes(){const t={aggregateId:this.id};for(const e of this._statistics.values())t[e.field.name]=e.value;return t.aggregateCount=this._count,t}_getLngLatBounds(){const e=this.depth,s=Math.ceil(e/2),o=Math.floor(e/2),i=30-(3*s+2*o),r=30-(2*s+3*o),h=this.xNode<<i,n=this.yNode<<r;return t({geohashX:h,geohashY:n},this.depth)}}class l{constructor(t){this._fields=t,this._root=a.create(this._fields,0,0,0)}destroy(){}insert(t,e,s,o,i,r,h){let n=this._root,l=0,c=0,d=0;for(;null!==n;){if(n.insert(t,e,s,o,i,h),l>=r)return;const _=Math.ceil((l+1)/2),u=Math.floor((l+1)/2),g=1-l%2,x=30-(3*_+2*u),y=30-(2*_+3*u),f=(o&7*g+3*(1-g)<<x)>>x,m=(i&3*g+7*(1-g)<<y)>>y,T=f+m*(8*g+4*(1-g));c=c<<3*g+2*(1-g)|f,d=d<<2*g+3*(1-g)|m,null==n.children[T]&&(n.children[T]=a.create(this._fields,c,d,l+1)),l+=1,n=n.children[T]}}putBins(t,e){for(const s of this.getNodes(e)){const e=t.get(s.id);e?e.merge(s):t.set(s.id,s.clone())}}getNodes(t){const e=[],{geohashBounds:s,level:o}=t;let i=this._root;for(;null!==i;){const t=i.depth,r=i.xNode,h=i.yNode;if(t>=o){e.push(i),i=i.next;continue}const n=Math.ceil((t+1)/2),a=Math.floor((t+1)/2),l=1-t%2,c=30-(3*n+2*a),d=30-(2*n+3*a),_=~((1<<c)-1),u=~((1<<d)-1),g=(s.xLL&_)>>c,x=(s.yLL&u)>>d,y=(s.xTR&_)>>c,f=(s.yTR&u)>>d,m=r<<3*l+2*(1-l),T=h<<2*l+3*(1-l),p=m+8*l+4*(1-l),G=T+4*l+8*(1-l),j=Math.max(m,g),W=Math.max(T,x),N=Math.min(p,y),b=Math.min(G,f);let w=null,I=null;for(let e=W;e<=b;e++)for(let t=j;t<=N;t++){const s=t-m+(e-T)*(8*l+4*(1-l)),o=i.children[s];o&&(w||(w=o,w.next=i.next),I&&(I.next=o),I=o,o.next=i.next)}i=w||i.next}return e}}export{a as GeohashCell,l as GeohashTree};
