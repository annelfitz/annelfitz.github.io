/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{verticalLengthUnitFromSpatialReference as e,convertUnit as n}from"../core/unitUtils.js";import{getMetersPerUnit as t}from"../symbols/support/unitConversionUtils.js";function o(e){return e?$:R}function r(e,n){return n?.mode?n.mode:o(e).mode}function u(e,n){return null!=n?n:o(e)}function i(e,n){return r(null!=e&&e.hasZ,n)}function l(e,n){return u(null!=e&&!!e.hasZ,n)}function s(e){const n=d(e);return i(e.geometry,n)}function a(e){const n=d(e),t=i(e.geometry,n);return{mode:t,offset:null!=n&&"on-the-ground"!==t?w(n):0}}function c(e){return f(a(e))}function f(e){if("on-the-ground"===e.mode)return!1;const n=e?.featureExpressionInfo?e.featureExpressionInfo.expression:null;return!(!n||"0"===n)}function d(e){return e.layer&&"elevationInfo"in e.layer?e.layer.elevationInfo:null}function v(t,o){if(!t?.offset)return 0;const{offset:r,unit:u}=t;if("decimal-degrees"===u)return 0;const i="unknown"!==u&&u?u:"meters",l=e(o);return l?n(r,i,l):0}function g(e,n,t){if(!t?.mode)return;const o=e.hasZ?e.z:0,r=v(t,e.spatialReference);switch(t.mode){case"absolute-height":return o-r;case"on-the-ground":return 0;case"relative-to-ground":return o-((n.elevationProvider.getElevation(e.x,e.y,o,e.spatialReference,"ground")??0)+r);case"relative-to-scene":return o-((n.elevationProvider.getElevation(e.x,e.y,o,e.spatialReference,"scene")??0)+r)}}function h(e,n,t,o=null){return p(e,n.x,n.y,n.hasZ?n.z:0,n.spatialReference,t,o)}function m(e,n,t,o,r=null){return p(e,n[0],n[1],n.length>2?n[2]:0,t,o,r)}function p(e,n,t,o,r,u,i=null){if(null==u)return;const l=null!=i?i.mode:"absolute-height";if("on-the-ground"===l)return 0;const{absoluteZ:s}=b(n,t,o,r,e,u);return E(s,n,t,o,r,e,i,l)}function b(e,n,t,o,r,u){const i=v(u,o);switch(u.mode){case"absolute-height":return{absoluteZ:t+i,elevation:0};case"on-the-ground":{const t=r.elevationProvider.getElevation(e,n,0,o,"ground")??0;return{absoluteZ:t,elevation:t}}case"relative-to-ground":{const u=r.elevationProvider.getElevation(e,n,t,o,"ground")??0;return{absoluteZ:t+u+i,elevation:u}}case"relative-to-scene":{const u=r.elevationProvider.getElevation(e,n,t,o,"scene")??0;return{absoluteZ:t+u+i,elevation:u}}}}function E(e,n,t,o,r,u,i,l){const s=v(i,r);switch(l){case"absolute-height":return e-s;case"relative-to-ground":return e-((u.elevationProvider.getElevation(n,t,o,r,"ground")??0)+s);case"relative-to-scene":return e-((u.elevationProvider.getElevation(n,t,o,r,"scene")??0)+s)}}function x(e,n){if(null==n)return!1;const{mode:t}=n;return null!=t&&("scene"===e&&"relative-to-scene"===t||"ground"===e&&"absolute-height"!==t)}function y(e,n,t){return t&&t.mode!==n?`${e} only support ${n} elevation mode`:null}function Z(e,n,t){return t?.mode===n?`${e} do not support ${n} elevation mode`:null}function I(e,n){return null!=n?.featureExpressionInfo&&"0"!==n.featureExpressionInfo.expression?`${e} do not support featureExpressionInfo`:null}function P(e,n){n&&e.warn(".elevationInfo=",n)}function w(e){return(e?.offset??0)*t(e?.unit)}const $={mode:"absolute-height",offset:0},R={mode:"on-the-ground",offset:null};export{$ as absoluteHeightElevationInfo,x as elevationContextAffectsAlignment,y as elevationModeRequiredMessage,Z as elevationModeUnsupportedMessage,I as featureExpressionUnsupportedMessage,h as getConvertedElevation,m as getConvertedElevationFromVector,p as getConvertedElevationFromXYZ,u as getEffectiveElevationInfo,r as getEffectiveElevationMode,v as getElevationOffset,w as getElevationOffsetInMeters,l as getGeometryEffectiveElevationInfo,i as getGeometryEffectiveElevationMode,a as getGraphicEffectiveElevationInfo,s as getGraphicEffectiveElevationMode,g as getZForElevationMode,f as hasEffectiveFeatureExpressionInfo,c as hasGraphicFeatureExpressionInfo,P as logInvalidElevationInfoWarning,R as onTheGroundElevationInfo,b as zValueInAbsoluteHeightMode};
