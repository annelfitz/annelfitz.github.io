/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{ShaderOutput as e}from"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js";import{SliceDraw as r}from"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js";import{Transform as i}from"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js";import{multipassTerrainTest as o}from"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{defaultMaskAlphaCutoff as s}from"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js";import{ColorConversion as a}from"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js";import{addProjViewLocalOrigin as t}from"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js";import{FloatPassUniform as d}from"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js";import{glsl as l}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as n}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";import{Texture2DPassUniform as p}from"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js";import{TransparencyPassType as g}from"../views/3d/webgl-engine/lib/TransparencyPassType.js";import{VertexAttribute as c}from"../views/3d/webgl-engine/lib/VertexAttribute.js";function v(v){const m=new n,{vertex:f,fragment:u}=m;return t(f,v),m.include(i,v),m.attributes.add(c.POSITION,"vec3"),m.attributes.add(c.UV0,"vec2"),v.perspectiveInterpolation&&m.attributes.add(c.PERSPECTIVEDIVIDE,"float"),m.varyings.add("vpos","vec3"),v.multipassEnabled&&m.varyings.add("depth","float"),f.code.add(l`
    void main(void) {
      vpos = position;
      ${v.multipassEnabled?"depth = (view * vec4(vpos, 1.0)).z;":""}
      vTexCoord = uv0;
      gl_Position = transformPosition(proj, view, vpos);

      ${v.perspectiveInterpolation?"gl_Position *= perspectiveDivide;":""}
    }
  `),m.include(r,v),m.include(o,v),u.uniforms.add(new p("tex",(e=>e.texture)),new d("opacity",(e=>e.opacity))),m.varyings.add("vTexCoord","vec2"),v.output===e.Alpha?u.code.add(l`
    void main() {
      discardBySlice(vpos);
      ${v.multipassEnabled?"terrainDepthTest(depth);":""}

      float alpha = texture(tex, vTexCoord).a * opacity;
      if (alpha  < ${l.float(s)}) {
        discard;
      }

      fragColor = vec4(alpha);
    }
    `):(u.include(a),u.code.add(l`
    void main() {
      discardBySlice(vpos);
      ${v.multipassEnabled?"terrainDepthTest(depth);":""}
      fragColor = texture(tex, vTexCoord) * opacity;

      if (fragColor.a < ${l.float(s)}) {
        discard;
      }

      fragColor = highlightSlice(fragColor, vpos);
      ${v.transparencyPassType===g.Color?"fragColor = premultiplyAlpha(fragColor);":""}
    }
    `)),m}const m=Object.freeze(Object.defineProperty({__proto__:null,build:v},Symbol.toStringTag,{value:"Module"}));export{m as I,v as b};
