/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import i from"../../core/Error.js";import{numericTypes as e,isTimeOnlyField as r}from"../../layers/support/fieldUtils.js";import{verifyBasicFieldValidity as s,verifyFieldType as a,verifyFilterValidty as o}from"./support/utils.js";import{verifyBinningParams as t}from"../support/binningUtils.js";import{dateTypes as n,getNormalizationType as l,getFieldsList as p,isAnyDateField as m}from"../support/utils.js";import{binningCapableLayerTypes as f,defaultSupportedLayerTypes as d,createLayerAdapter as h,getLayerTypeLabels as u}from"../support/adapters/support/layerUtils.js";const w=[...n,"time-only",...e];async function c(e){if(!e?.layer||!(e.field||e.valueExpression||e.sqlExpression))throw new i("histogram:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new i("histogram:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&t(e,"histogram");const{layer:n,...c}=e,g=e.forBinning?f:d,v=h(n,g,e.forBinning);if(!v)throw new i("histogram:invalid-parameters","'layer' must be one of these types: "+u(g).join(", "));const x={layerAdapter:v,...c};x.normalizationType=l(x);const E=null!=x.signal?{signal:x.signal}:null;await v.load(E);const y=x.valueExpression||x.sqlExpression,q=x.field,j=q?v.getField(q):null,z=!x.classificationMethod||"equal-interval"===x.classificationMethod,M=await p({field:q,normalizationField:x.normalizationField,valueExpression:x.valueExpression}),B=s(v,M,"histogram:invalid-parameters");if(B)throw B;if(j){const e=a(v,j,"histogram:invalid-parameters",w);if(e)throw e;if(m(j)||r(j)){if(x.normalizationType)throw new i("histogram:invalid-parameters","Normalization is not allowed for date fields");if(!z)throw new i("histogram:invalid-parameters","'classificationMethod' other than 'equal-interval' is not allowed for date fields")}}else if(y){if(x.normalizationType)throw new i("histogram:invalid-parameters","Normalization is not allowed when 'valueExpression' or 'sqlExpression' is specified");if(!z)throw new i("histogram:invalid-parameters","'classificationMethod' other than 'equal-interval' is not allowed when 'valueExpression' or 'sqlExpression' is specified")}const F=o(x.filter,"histogram:invalid-parameters");if(F)throw F;return x}async function g(i){const{layerAdapter:e,...r}=await c(i);return e.histogram(r)}export{g as default};
