/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import r from"../../core/Error.js";import{numericTypes as t}from"../../layers/support/fieldUtils.js";import{gaussianBlurRadiusPxToKernelDensityRadiusPt as a}from"../../renderers/support/heatmapUtils.js";import{verifyBasicFieldValidity as e,verifyFieldType as s}from"./support/utils.js";import{getFieldsList as i}from"../support/utils.js";import{LayerType as o,createLayerAdapter as l,getLayerTypeLabels as n}from"../support/adapters/support/layerUtils.js";const p=t;async function u(t){if(!t?.layer||!t.view)throw new r("heatmap-statistics:missing-parameters","'layer' and 'view' parameters are required");const u=[o.CSVLayer,o.FeatureLayer,o.GeoJSONLayer,o.OGCFeatureLayer,o.OrientedImageryLayer,o.WFSLayer],{layer:m,...d}=t,f=l(m,u);if(!f)throw new r("heatmap-statistics:invalid-parameters","'layer' must be one of these types: "+n(u).join(", "));const y={layerAdapter:f,...d};y.radius=null==y.radius?null==y.blurRadius?18:a(y.blurRadius):y.radius;const c=null!=y.signal?{signal:y.signal}:null;await f.load(c);const h=y.field,w=h?f.getField(h):null,j=await i({field:h}),g=e(f,j,"heatmap-statistics:invalid-parameters");if(g)throw g;if(w){const r=s(f,w,"heatmap-statistics:invalid-parameters",p);if(r)throw r}return y}async function m(r){const{layerAdapter:t,...a}=await u(r);return t.heatmapStatistics(a)}export{m as default};
