/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../Graphic.js";import{pickRandom as r}from"../../../core/arrayUtils.js";import i from"../../../core/Error.js";import{assertIsSome as s}from"../../../core/maybe.js";import{throwIfAborted as a}from"../../../core/promiseUtils.js";import{property as n}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import{isHostedAgolService as l}from"../../../layers/support/arcgisLayerUrl.js";import{isTimeOnlyField as u,isNumericField as m}from"../../../layers/support/fieldUtils.js";import{generateRenderer as c}from"../../../rest/generateRenderer.js";import h from"../../../rest/support/GenerateRendererParameters.js";import p from"../../../rest/support/StatisticDefinition.js";import d from"../../../rest/support/UniqueValueDefinition.js";import{getArcadeForPredominantCategory as f,getSQLForPredominantCategoryName as y}from"../../statistics/support/predominanceUtils.js";import{getSQLFilterForNormalization as F,mergeWhereClauses as S,getRangeExpr as g}from"../../statistics/support/utils.js";import{WorkerClient as v}from"../../statistics/support/WorkerClient.js";import{isAnyDateField as w,fieldDelimiter as x}from"../utils.js";import _ from"./InMemoryLayerAdapter.js";import{ensureFeaturesJSON as z,getSummaryStatsQuery as E,getSummaryStatisticsFromFeatureSet as q,getUVQuery as T,getUniqueValuesFromFeatureSet as L,getSQLExpressionForDateOrTimeField as V,getFieldExpr as j,defaultNumBins as Q,updateQueryWithFeatureFilter as b,getHistogramFromFeatureSet as N,generateBinParams as R,getDomainsForFields as C,getBins as I,getPredominantCategoriesFromUVInfos as M,getMissingFields as $}from"./support/utils.js";import{processSummaryStatisticsResult as k,createUVResult as D,getEqualIntervalBins as B,createClassBreaksDefinition as G,resolveCBResult as O}from"../../../statistics/utils.js";const P=5,A=2e4,U=4e5;let W=class extends _{constructor(){super(...arguments),this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){const e=this.layer;if(!e.capabilities?.query?.supportsStatistics||"multipatch"===this.geometryType&&!l(e.url)&&e.version<10.5)throw new i(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then((e=>e.features))}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(z)}_summaryStatsFromGenRend(e){const t=e.normalizationType,r=e.normalizationField;return this.classBreaks({field:e.field,numClasses:P,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:"field"===t?r:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then((e=>{let t,r,i;if(e.classBreakInfos?.some((e=>(e.hasAvg&&(t=e),!!t))),t){const e=t.maxValue-t.minValue;r=t.minValue+e/2,i=4*e}const s={min:e.minValue,max:e.maxValue,avg:r,stddev:i};return k(s)}))}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),"percent-of-total"===e.normalizationType&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const r=w(t)||u(t),i=E(this,e,t),s=await this.layer.queryFeatures(i,{signal:e.signal}),a=q(s,r);return k(a)}_uvFromGenRenderer(e,t){const r=e.field??void 0,i=new d({attributeField:r}),s=new h({classificationDefinition:i});return this.generateRenderer(s,e.signal).then((e=>{const t={},i=this.getField(r);return e.uniqueValues.forEach((e=>{let r=e.value;null!=r&&""!==r&&("string"!=typeof r||""!==r.trim()&&"<null>"!==r.toLowerCase())||(r=null),null==t[r]?t[r]={count:e.count,data:m(i)&&r?Number(r):r}:t[r].count=t[r].count+e.count})),{count:t}})).then((r=>D(r,[t],e.returnAllCodedValues)))}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then((()=>this.layer.queryFeatures(T(this,e),{signal:e.signal}))).then((t=>L(t,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:x,view:e.view,signal:e.signal}))).then((r=>D(r,t,e.returnAllCodedValues,x)))}_getNormalizationTotal(e,t,r,i){return e&&"percent-of-total"===t?this.summaryStatistics({field:e,filter:r,signal:i}).then((e=>e.sum)):Promise.resolve(null)}_getQueryParamsForExpr(e,t){const r=e.valueExpression||e.sqlExpression,i=e.signal;if(!r){const{field:r,normalizationType:s,normalizationField:a}=e,n=r?this.getField(r):null,o=w(n)||u(n),l={field:r,normalizationType:s,normalizationField:a,normalizationTotal:t,layer:this};return{sqlExpression:o?V(this,n):j(l),sqlWhere:o?null:e.sqlWhere||F({field:r,normalizationType:s,normalizationField:a}),filter:e.filter,signal:i}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:i}}_getDataRange(e,t,r){return null!=t&&null!=r?Promise.resolve({min:t,max:r}):this.summaryStatistics(e).then((e=>({min:e.min,max:e.max})))}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then((t=>{const r=this._getQueryParamsForExpr(e,t);return this._getDataRange(r,e.minValue,e.maxValue).then((i=>{const s=i.min,a=i.max;if(null==s||null==a)return{bins:[],minValue:s,maxValue:a,normalizationTotal:t};const n=e.numBins||Q,o=B(s,a,n),l=J(r.sqlExpression,o,null!=e.minValue&&null!=e.maxValue),u=new p({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),m=this.layer.createQuery();return m.where=S(m.where,r.sqlWhere),m.sqlFormat="standard",m.outStatistics=[u],m.groupByFieldsForStatistics=[l],m.orderByFields=[l],b(m,e.filter),this._isStatsSupportedOnService().then((()=>this.layer.queryFeatures(m,{signal:r.signal}))).then((e=>N(e,s,a,n,t)))}))}))}_binParamsFromGenRend(e,t){const{field:r,normalizationType:i,normalizationField:s,signal:a}=e,n=F({field:r,normalizationType:i,normalizationField:s}),o=new h({classificationDefinition:G({field:r,normalizationType:i,normalizationField:s,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numBins||Q}),where:S(n,t)});return this.generateRenderer(o,a).then((e=>{const{normalizationTotal:t,classBreaks:a}=e;return R({field:r,normalizationType:i,normalizationField:s,normalizationTotal:t,classBreaks:a,where:n,layer:this})}))}_classBreaksFromGenRend(e){const{field:t,normalizationType:r,normalizationField:i,normalizationTotal:s,signal:a}=e,n=F({field:t,normalizationType:r,normalizationField:i}),o=j({field:t,normalizationType:r,normalizationField:i,normalizationTotal:s,layer:this}),l=g(o,e.minValue,e.maxValue),u=G({field:t,normalizationType:r,normalizationField:i,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||P}),m=new h({classificationDefinition:u});return m.where=S(n,l),this.generateRenderer(m,a).then((t=>O(t,e.classificationMethod)))}async summaryStatistics(e){const{field:t,normalizationType:r,sqlExpression:s,view:n,features:o,useFeaturesInView:l}=e,m=t?this.getField(t):null,c=w(m)||u(m),h=e.valueExpression||s,p=h&&!s,d=this._hasLocalSource||o||l,f=n&&"3d"===n.type;if(d||p)return p||o||l||f?this._summaryStatsFromMemory(e,m):this._summaryStatsFromClientQuery(e,m);if(!this.supportsSQLExpression&&(c||h||"natural-log"===r||"square-root"===r))throw new i(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(r&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,m)).catch((()=>(a(e.signal),this._summaryStatsFromMemory(e,m))))}async uniqueValues(e){const{valueExpression:t,sqlExpression:r,features:i,useFeaturesInView:s,signal:n}=e,o=t&&(!r||!this.supportsSQLExpression),l=this._hasLocalSource||i||s||o,u=e.view,m=u&&"3d"===u.type,c=await C(e,this);return l?o||i||s||m?this._uvFromMemory(e,c):this._uvFromClientQuery(e,c):this._uvFromServiceQuery(e,c).catch((t=>(a(n),!e.field||e.field2||e.field3||e.filter?t:this._uvFromGenRenderer(e,c[0])))).catch((()=>(a(n),m?this._uvFromMemory(e,c):this._uvFromClientQuery(e,c))))}async histogram(e){const{field:t,normalizationType:r,normalizationField:s,classificationMethod:a,view:n,filter:o,signal:l}=e,m=t?this.getField(t):null,c=w(m)||u(m),h=e.valueExpression||e.sqlExpression,p=h&&!e.sqlExpression,d=this._hasLocalSource||e.features||e.useFeaturesInView||p,f=this.supportsSQLExpression,y=!a||"equal-interval"===a,F=e.minValue,S=e.maxValue,v=null!=F&&null!=S,x=e.numBins||Q;if(d)return this._histogramFromMemory(e);if((h||f)&&y){if(!f&&(h||"natural-log"===r||"square-root"===r))throw new i(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(e)}if(c&&y)throw new i(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");return r||!y?this._binParamsFromGenRend(e).then((a=>{if(!v)return I(this,a,t,x,n,o,l);if(F>a.max||S<a.min)throw new i(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(y)return I(this,{min:F,max:S,sqlExpr:a.sqlExpr,excludeZerosExpr:a.excludeZerosExpr},t,x,n,o,l);{const i={field:t,normalizationType:r,normalizationField:s,normalizationTotal:a.normTotal,layer:this},u=j(i),m=g(u,F,S);return this._binParamsFromGenRend(e,m).then((e=>I(this,e,t,x,n,o,l)))}})):this._histogramForField(e)}async classBreaks(e){const t=!1!==e.analyzeData,r=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;if(t&&r)return this._classBreaksFromMemory(e);return(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch((()=>(a(e.signal),this._classBreaksFromMemory(e))))}async queryFeatureCount(e){if(this._hasLocalSource)throw new i(`${this.adapterName}:not-supported`,"Layer does not support count query");const t=this.layer,r=t.createQuery();return r.where=S(r.where,e.whereClause),b(r,e.filter),t.queryFeatureCount(r,{signal:e.signal})}async generateRenderer(e,t){const r=this.layer;if(this._hasLocalSource||r.version<10.1)throw new i(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const s=r.createQuery();return e.where=S(e.where,s.where),c(r.parsedUrl.path,{source:r.dynamicDataSource??void 0,gdbVersion:r.gdbVersion??void 0},e,{signal:t})}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new i(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:r,signal:s}=e,a=f(t),n=y(t),o=r&&this._hasLocalSource?await this._uvFromMemory({valueExpression:a,view:r,signal:s}):await this._uvFromServiceQuery({sqlExpression:n.expression,valueExpression:a,signal:s});return M(o.uniqueValueInfos,t)}async getSampleFeatures(e,i){const{view:n,requiredFields:o,returnGeometry:l,filter:u,signal:m}=e,c=e.sampleSize;if(null==c||0===c)return[];const h=this.layer.createQuery(),p=1,d="json"===i;h.outSpatialReference=n?.spatialReference,h.returnGeometry=!!l,h.outFields=o,b(h,u);let f=[],y=!1;if(n)try{const s=await n.whenLayerView(this.layer);if(y=!$(this,o,s).length,y){if(c>=1&&!e.filter&&"getSampleFeatures"in s){const e=await s.getSampleFeatures({minFeatureCount:c,sampleSize:c});if(null!=e)return d?e:e.map((e=>t.fromJSON(e)))}if(f=await this._fetchFeaturesFromMemory(s,h,m,i),f.length>=c&&c>0)return r(f,c,p)}}catch(F){a(m)}try{if(this._hasLocalSource)return y?f:d?this._fetchFeaturesJSONFromService(h,m):this._fetchFeaturesFromService(h,m);const t=await this.queryFeatureCount({view:n,filter:u,signal:m}),i=this.layer.capabilities.query.maxRecordCount;let a=-1===c?t:c;if(a=i&&a>i?i:a,t<=f.length||f.length>=i)return f;s(n,"FeatureLayerAdapter: must have a view");const o=n.extent.width/n.width/n.scale*U;if(h.maxAllowableOffset=e.resolution||o,t<=a)return d?this._fetchFeaturesJSONFromService(h,m):this._fetchFeaturesFromService(h,m);if(t<=A){const e=this.layer.createQuery();b(e,u);const t=await this.layer.queryObjectIds();return h.objectIds=r(t,a,p),d?this._fetchFeaturesJSONFromService(h,m):this._fetchFeaturesFromService(h,m)}return this.layer.capabilities?.query?.supportsPagination&&(h.num=Math.min(a,A)),d?this._fetchFeaturesJSONFromService(h,m):this._fetchFeaturesFromService(h,m)}catch(F){return a(m),f}}load(e){const t=this.layer.load(e).then((async t=>{this.geometryType=t.geometryType,this.objectIdField=t.objectIdField,this.supportsSQLExpression=t.capabilities?.query?.supportsSqlExpression,this._hasLocalSource=!t.url&&!!t.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=t.minScale,this.maxScale=t.maxScale,this.fullExtent=t.fullExtent,this.workerClient=v.getInstance(),await this.workerClient.open(e.signal)}));return this.addResolvingPromise(t),Promise.resolve(this)}};function J(e,t,r){const i=[],s=t.length;return t.forEach(((t,a)=>{const[n,o]=t;let l=null;l=0!==a||r?a!==s-1||r?S(`${e} >= ${n}`,`${e} ${a===s-1?" <= ":" < "} ${o}`):`${e} >= ${n}`:`${e} < ${o}`,i.push("WHEN ("+l+") THEN "+(a+1))})),["CASE",i.join(" "),"ELSE 0","END"].join(" ")}e([n({constructOnly:!0})],W.prototype,"layer",void 0),W=e([o("esri.smartMapping.support.adapters.FeatureLayerAdapter")],W);const H=W;export{H as default};
