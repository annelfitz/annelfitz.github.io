/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{fetchMessageBundle as i}from"../../intl/messages.js";import a from"../../renderers/support/AuthoringInfo.js";import r from"../../renderers/support/AuthoringInfoVisualVariable.js";import{round as n}from"../../renderers/support/numberUtils.js";import s from"../../renderers/visualVariables/OpacityVariable.js";import l from"../heuristics/outline.js";import{createVisualVariables as o}from"./size.js";import{createRenderer as t}from"./type.js";import{verifyBasicFieldValidity as p,getBasemapInfo as m,errorCallback as d,createSymbol as u,getSymbolOutlineFromScheme as c,createColors as y}from"./support/utils.js";import b from"../statistics/predominantCategories.js";import f from"../statistics/summaryStatistics.js";import{getPredominanceExpressions as g}from"../statistics/support/predominanceUtils.js";import{verifyBinningParams as h}from"../support/binningUtils.js";import{binningCapableLayerTypes as v,featureCapableLayerTypes as w,createLayerAdapter as z,getLayerTypeLabels as T}from"../support/adapters/support/layerUtils.js";import{cloneScheme as V,getSchemes as E}from"../symbology/predominance.js";async function S(i){if(!(i?.layer&&i.view&&i.fields?.length))throw new e("predominance-renderer:missing-parameters","'layer', 'view' and 'fields' parameters are required");if(i.fields.length<2)throw new e("predominance-renderer:invalid-parameters","Minimum 2 fields are required");if(i.fields.length>10)throw new e("predominance-renderer:invalid-parameters","Maximum 10 fields are supported");i.forBinning&&h(i,"predominance-renderer");const a={...i,layer:i.layer,fields:i.fields};a.symbolType=a.symbolType||"2d",a.defaultSymbolEnabled??=!0,a.includeOpacityVariable=i.includeOpacityVariable||!1,a.includeSizeVariable=i.includeSizeVariable||!1,a.sortBy??="count";const r=i.forBinning?v:w,n=z(a.layer,r,i.forBinning);if(!n)throw new e("predominance-renderer:invalid-parameters","'layer' must be one of these types: "+T(w).join(", "));a.layer=n;const s=null!=a.signal?{signal:a.signal}:null;await n.load(s);const l=n.geometryType,o=a.symbolType.includes("3d");if(a.outlineOptimizationEnabled="polygon"===l&&a.outlineOptimizationEnabled,a.includeSizeVariable||(a.sizeOptimizationEnabled=("point"===l||"multipoint"===l||"polyline"===l)&&a.sizeOptimizationEnabled),"mesh"===l)a.symbolType="3d-volumetric",a.colorMixMode=a.colorMixMode||"replace",a.edgesType=a.edgesType||"none",a.sizeOptimizationEnabled=!1;else{if(o&&("polyline"===l||"polygon"===l))throw new e("predominance-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new e("predominance-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const t=a.fields.map((e=>e.name)),m=p(n,t,"predominance-renderer:invalid-parameters");if(m)throw m;return a}async function x(e){let i=e.predominanceScheme,a=null,r=null;const n=await m(e.basemap,e.view);if(a=null!=n.basemapId?n.basemapId:null,r=null!=n.basemapTheme?n.basemapTheme:null,i)return{scheme:V(i),basemapId:a,basemapTheme:r};const s=E({basemapTheme:r,geometryType:e.geometryType,numColors:e.numColors,theme:e.theme,worldScale:e.worldScale,view:e.view});return s&&(i=s.primaryScheme,a=s.basemapId,r=s.basemapTheme),{scheme:i,basemapId:a,basemapTheme:r}}async function I(e,r,n,s){const o=await i("esri/smartMapping/t9n/smartMapping"),p=e.layer,m={layer:e.layer,view:e.view,signal:e.signal},[f,g]=await Promise.all([b({layer:p,fields:s,view:e.view,signal:e.signal}),e.outlineOptimizationEnabled?l(m).catch(d):null]);let h=f;f?.predominantCategoryInfos||(h={predominantCategoryInfos:s.map((e=>({value:e,count:0})))});const v=g&&g.opacity,w=await t({layer:p,basemap:e.basemap,valueExpression:r.valueExpression,valueExpressionTitle:o.predominantCategory,numTypes:-1,defaultSymbolEnabled:e.defaultSymbolEnabled,sortBy:e.sortBy,typeScheme:n,statistics:{uniqueValueInfos:h.predominantCategoryInfos},legendOptions:e.legendOptions,outlineOptimizationEnabled:!1,sizeOptimizationEnabled:(!e.includeSizeVariable||!e.sizeOptimizationEnabled)&&e.sizeOptimizationEnabled,symbolType:e.symbolType,colorMixMode:e.colorMixMode,edgesType:e.edgesType,view:e.view,signal:e.signal}),{renderer:z,basemapId:T,basemapTheme:V,uniqueValueInfos:E,excludedUniqueValueInfos:S}=w,x=z.uniqueValueInfos??[],I={};for(const i of e.fields){const e=p.getField(i.name);I[e.name]=i.label||e&&e.alias||i.name}if(x.forEach(((e,i)=>{const a=I[e.value];e.label=a,E[i].label=a})),e.includeSizeVariable){let i=p.geometryType,a=null;if("polygon"===i){const r=n.sizeScheme,s=r.background;z.backgroundFillSymbol=u(i,{type:e.symbolType,color:s.color,outline:c(s,i,v)}),a=r.marker.size,i="point"}else if("polyline"===i){a=n.width}else{a=n.size}const r=y(n.colors,x.length);x.forEach(((s,l)=>{const o=u(i,{type:e.symbolType,color:r[l],size:a,outline:c(n,i,v),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}});s.symbol=o,E[l].symbol=o.clone()}))}return g&&g.visualVariables&&g.visualVariables.length&&(z.visualVariables=g.visualVariables.map((e=>e.clone()))),z.authoringInfo=new a({type:"predominance",fields:[...s]}),{renderer:z,predominantCategoryInfos:E,excludedCategoryInfos:S,predominanceScheme:n,basemapId:T,basemapTheme:V}}async function O(e,a,r){const n=await i("esri/smartMapping/t9n/smartMapping");return o({layer:e.layer,basemap:e.basemap,valueExpression:a.valueExpression,sqlExpression:a.statisticsQuery.sqlExpression,sqlWhere:a.statisticsQuery.sqlWhere,sizeScheme:r,sizeOptimizationEnabled:e.sizeOptimizationEnabled,worldScale:!!e.symbolType?.includes("3d-volumetric"),legendOptions:{title:n.sumOfCategories},view:e.view,signal:e.signal})}async function M(e,l){const o=await i("esri/smartMapping/t9n/smartMapping"),t=await f({layer:e.layer,valueExpression:l.valueExpression,sqlExpression:l.statisticsQuery.sqlExpression,sqlWhere:l.statisticsQuery.sqlWhere,view:e.view,signal:e.signal}),{avg:p,stddev:m}=t,d=null==p||null==m,u=1/e.fields.length*100;let c=d?100:p+1.285*m;c>100&&(c=100);const y=n([u,c],{strictBounds:!0}),b=new s({valueExpression:l.valueExpression,stops:[{value:y[0],opacity:.15},{value:y[1],opacity:1}],legendOptions:{title:o.strengthOfPredominance}}),g=new r({type:"opacity",minSliderValue:t.min,maxSliderValue:t.max});return{visualVariable:b,statistics:t,defaultValuesUsed:d,authoringInfo:new a({visualVariables:[g]})}}async function j(e){const i=await S(e),a=i.layer,r=(await x({basemap:i.basemap,geometryType:a.geometryType,numColors:i.fields.length,predominanceScheme:i.predominanceScheme,worldScale:!!i.symbolType?.includes("3d-volumetric"),view:i.view})).scheme,n=i.fields.map((e=>e.name)),s=g(a,n),l=I(i,s.predominantCategory,r,n),o=i.includeSizeVariable?O(i,s.size,r.sizeScheme):null,t=i.includeOpacityVariable?M(i,s.opacity):null,[p,m,d]=await Promise.all([l,o,t]),u=[],c=[];if(m&&(Array.prototype.push.apply(u,m.visualVariables.map((e=>e.clone()))),delete m.sizeScheme,p.size=m,Array.prototype.push.apply(c,m.authoringInfo.visualVariables.map((e=>e.clone())))),d&&(u.push(d.visualVariable.clone()),p.opacity=d,Array.prototype.push.apply(c,d.authoringInfo.visualVariables.map((e=>e.clone())))),u.length){const e=p.renderer.visualVariables||[];Array.prototype.push.apply(e,u),p.renderer.visualVariables=e,p.renderer.authoringInfo.visualVariables=c}return p}export{j as createRenderer};
