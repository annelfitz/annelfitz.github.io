/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../Color.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/HeatmapRenderer.js";import r from"../../renderers/PieChartRenderer.js";import"../../renderers/Renderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../renderers/support/jsonUtils.js";import"../../core/Logger.js";import"../../symbols.js";import{isSome as a}from"../../core/arrayUtils.js";import t from"../../core/Error.js";import{toPt as n}from"../../core/screenUtils.js";import{fetchMessageBundle as i}from"../../intl/messages.js";import s from"../../layers/support/AggregateField.js";import o from"../../layers/support/ExpressionInfo.js";import l from"../../renderers/support/AttributeColorInfo.js";import{OthersCategory as u}from"../../renderers/support/OthersCategory.js";import p from"../heuristics/outline.js";import m from"../heuristics/sizeRange.js";import{createVisualVariables as c}from"./size.js";import{errorCallback as d,createColors as f,createSymbol as h,getSymbolOutlineFromScheme as b,verifyBasicFieldValidity as y,getBasemapInfo as w}from"./support/utils.js";import g from"../statistics/predominantCategories.js";import{getSumOfAttributesExpr as v}from"../statistics/support/utils.js";import{verifyBinningParams as S}from"../support/binningUtils.js";import{getFieldsList as z}from"../support/utils.js";import{LayerType as E,binningCapableLayerTypes as j,createLayerAdapter as C,getLayerTypeLabels as x,getLayerTypes as V}from"../support/adapters/support/layerUtils.js";import{cloneScheme as $,getSchemes as T}from"../symbology/pieChart.js";import{getCIMSymbolColor as I}from"../../symbols/support/cimSymbolUtils.js";import k from"../../symbols/SimpleLineSymbol.js";const O=[E.CSVLayer,E.FeatureLayer,E.GeoJSONLayer,E.OGCFeatureLayer,E.OrientedImageryLayer,E.StreamLayer,E.WFSLayer];async function q(e){if(!(e?.layer&&e.view&&e.attributes?.length))throw new t("pie-chart-renderer:missing-parameters","'layer', 'view' and 'attributes' parameters are required");if(e.attributes.length>10)throw new t("pie-chart-renderer:invalid-parameters","PieChart renderer does not support more than 10 attributes");e.forBinning&&S(e,"pie-chart-renderer");const r={...e,layer:e.layer,view:e.view,attributes:e.attributes};r.shape=r.shape||"pie",r.othersCategoryEnabled??=!0,r.includeSizeVariable=e.includeSizeVariable||!1;const a=e.forBinning?j:O,n=C(r.layer,a,e.forBinning);if(!n)throw new t("pie-chart-renderer:invalid-parameters","'layer' must be one of these types: "+x(a).join(", "));r.layer=n;const i=null!=r.signal?{signal:r.signal}:null;await Promise.all([e.view.when(),n.load(i)]);const s=n.geometryType,o="polygon"===s,l="point"===s||"multipoint"===s||o;if(r.outlineOptimizationEnabled=!!o&&r.outlineOptimizationEnabled,r.sizeOptimizationEnabled=!!l&&r.sizeOptimizationEnabled,!l)throw new t("pie-chart-renderer:not-supported","PieChart renderer is only supported for point and polygon layers");const u=[],p=r.attributes;for(const t of p){const e=await z({field:t.field,valueExpression:t.valueExpression});u.push(...e)}const m=y(n,u.filter(Boolean),"pie-chart-renderer:invalid-parameters");if(m)throw m;return r}async function L(e){let r=e.pieChartScheme,a=null,t=null;const n=await w(e.basemap,e.view);if(a=null!=n.basemapId?n.basemapId:null,t=null!=n.basemapTheme?n.basemapTheme:null,r)return{scheme:$(r),basemapId:a,basemapTheme:t};const i=T({numColors:e.attributes.length,geometryType:e.layer.geometryType,basemapTheme:t});return i&&(r=i.primaryScheme,a=i.basemapId,t=i.basemapTheme),{scheme:r,basemapId:a,basemapTheme:t}}async function B(e,r){const{valueExpression:a,sqlExpression:t,sqlWhere:n}=v(e.attributes),s=await i("esri/smartMapping/t9n/smartMapping");return c({layer:e.layer,basemap:e.basemap,valueExpression:a,sqlExpression:t,sqlWhere:n,sizeScheme:r,sizeOptimizationEnabled:e.sizeOptimizationEnabled,legendOptions:{title:s.sumOfCategories},view:e.view,signal:e.signal})}async function R(e){const[s,o]=await Promise.all([q(e),i("esri/smartMapping/t9n/smartMapping")]),c=await L(s),y=c?.scheme;if(!y)throw new t("pie-chart-renderer:insufficient-info","Unable to find pie-chart scheme");const w=s.layer,{includeSizeVariable:v,sizeOptimizationEnabled:S,outlineOptimizationEnabled:z,view:E,signal:j}=s,C=y.sizeScheme,x=s.attributes,V=x.map((e=>e.field)).filter(a),[T,I,O,R]=await Promise.all([V.length>1?g({layer:w,fields:V,view:E,signal:j}):null,v?B(s,C):null,!v&&S?m({layer:w,view:E,signal:j}).catch(d):null,z?p({layer:w,view:E,signal:j}).catch(d):null]),P=T?.predominantCategoryInfos?{uniqueValueInfos:T.predominantCategoryInfos}:{uniqueValueInfos:V.map((e=>({value:e,count:0})))},U=f(y.colors,x.length),F=x.map(((e,r)=>new l({field:e.field,valueExpression:e.valueExpression,label:e.label,valueExpressionTitle:e.valueExpressionTitle,color:U[r]}))),M=w.geometryType,N=null!=C&&"background"in C&&C.background,_=new r({attributes:F,othersCategory:new u({label:o.other,color:s.othersCategoryEnabled?y.colorForOthersCategory:null,threshold:.04}),holePercentage:"donut"===s.shape?.45:0,backgroundFillSymbol:N?h(M,{type:"2d",color:N.color,outline:b(N,M,R?.opacity)}):null,size:n(y.size),outline:new k(b(y,"point",R?.opacity)),legendOptions:s.legendOptions});if(I&&(S||I.visualVariables.forEach((e=>{"number"==typeof e.minSize&&"number"==typeof e.maxSize&&(e.minSize*=2.5,e.maxSize*=1.8)})),S&&"point"===M&&I.visualVariables.forEach((e=>{e?.minSize&&"object"==typeof e.minSize&&e.minSize?.stops?.forEach((e=>{e.size*=1.8}))})),_.authoringInfo=I.authoringInfo.clone(),_.visualVariables=I.visualVariables?.map((e=>e.clone()))),R?.visualVariables?.length){const e=R.visualVariables.map((e=>e.clone()));_.visualVariables?_.visualVariables.push(...e):_.visualVariables=e}return O?.minSize&&("point"===M&&O.minSize.stops?.forEach((e=>{e.size*=2.5})),"polygon"===M&&O.minSize.stops?.forEach((e=>{e.size*=1.8})),_.visualVariables?_.visualVariables.push(O.minSize):_.visualVariables=[O.minSize]),{renderer:_,pieChartScheme:$(y),size:I,basemapId:c.basemapId,basemapTheme:c.basemapTheme,statistics:P}}const P=new Set(["unique-value","class-breaks"]),U=new e("#aaaaaa"),F=new e("#5c5c5c"),M=[new e("#e60049"),new e("#0bb4ff"),new e("#50e991"),new e("#e6d800"),new e("#9b19f5"),new e("#ffa300"),new e("#dc0ab4"),new e("#b3d4ff"),new e("#00bfa0"),new e("#f0cccc")];async function N(e){if(!e||!e.layer)throw new t("pie-chart-cluster-renderer:missing-parameters","'layer' parameter is required");const r={...e};r.shape=r.shape||"pie",r.defaultSymbolEnabled??=!0;const a=e.layer;if(!V(O).includes(a.type))throw new t("pie-chart-cluster-renderer:invalid-parameters","'layer' must be one of these types: "+x(O).join(", "));const n=null!=r.signal?{signal:r.signal}:null;await a.load(n);if(!("point"===a.geometryType))throw new t("pie-chart-cluster-renderer:invalid-parameters","Cluster renderers are only supported for point layers");const{renderer:i}=a;if(!i)throw new t("pie-chart-cluster-renderer:invalid-parameters","input layer does not have a renderer.");if(!P.has(i.type))throw new t("pie-chart-cluster-renderer:invalid-parameters",`Cannot create a pie chart renderer for clusters based on a ${i.type} renderer.`);if("valueExpression"in i&&i.valueExpression)throw new t("pie-chart-cluster-renderer:invalid-parameters","Cannot create a pie chart renderer for clusters from a layer whose renderer contains a valueExpression.");if("unique-value"===i.type){if(i.field2)throw new t("pie-chart-cluster-renderer:invalid-parameters","Cannot create a pie chart renderer for clusters from a UniqueValueRenderer using more than one field.");if(null!=i.uniqueValueInfos&&i.uniqueValueInfos.length>10)throw new t("pie-chart-cluster-renderer:invalid-parameters","PieChart cluster renderer cannot be created from a UniqueValueRenderer with more than 10 unique value infos.")}if("class-breaks"===i.type){if(i.classBreakInfos.length<2)throw new t("pie-chart-cluster-renderer:invalid-parameters","Cannot create a pie chart renderer for clusters from a layer renderer with a continuous color or size gradient.");if(i.classBreakInfos.length>10)throw new t("pie-chart-cluster-renderer:invalid-parameters","PieChart cluster renderer can not be created from a ClassBreaksRenderer with more than 10 class break infos.");if("class-breaks-size"===i?.authoringInfo?.type)throw new t("pie-chart-cluster-renderer:invalid-parameters","PieChart cluster renderer can not be created from a ClassBreaksRenderer with breaks varied by size instead of color.")}return r}async function _(e){const a=await N(e),{layer:t,shape:n,defaultSymbolEnabled:s,legendOptions:o}=a,{renderer:u}=t,p=(await i("esri/smartMapping/t9n/smartMapping")).other;let m=[];"unique-value"===u?.type&&(m=A({renderer:u,defaultSymbolEnabled:s,defaultLabelBackup:p})),"class-breaks"===u?.type&&(m=D({renderer:u,defaultSymbolEnabled:s,defaultLabelBackup:p}));const c=[],d=[];for(const r of m){const{field:e,color:a}=r;c.push(e),d.push(new l({color:a,field:e.name,label:e.alias}))}return{fields:c,renderer:new r({attributes:d,legendOptions:o,holePercentage:"donut"===n?.45:0,outline:null,size:9,othersCategory:null})}}function A(e){const{renderer:r,defaultSymbolEnabled:a,defaultLabelBackup:t}=e,{field:n,defaultSymbol:i,defaultLabel:l}=r,u=r.uniqueValueInfos??[],p=i&&a,m=p?9:10,c=f(M,m),d=u.slice(0,m).map(((e,r)=>{const a=e.label,t=c[r];return{field:new s({name:W(e.value?.toString()),alias:a,onStatisticExpression:new o({title:`Field definition - ${a}`,expression:H(n,e),returnType:"number"}),statisticType:"sum"}),color:G(e.symbol,t)}}))??[];if(p){const e="cluster_default",r=l||t;d.push({field:new s({name:W(e),alias:r,onStatisticExpression:new o({title:`Field definition - ${r}`,expression:J(n,u),returnType:"number"}),statisticType:"sum"}),color:G(i,F)})}return d}function D(e){const{renderer:r,defaultSymbolEnabled:a,defaultLabelBackup:t}=e,{field:n,classBreakInfos:i,defaultSymbol:l,defaultLabel:u}=r,p=l&&a,m=p?9:10,c=f(M,m),d=i.slice(0,m).map(((e,r)=>{const a=e.label||`${e.minValue} - ${e.maxValue}`,t=c[r];return{field:new s({name:W(a),alias:a,onStatisticExpression:new o({title:`Field definition - ${a}`,expression:Z(n,e),returnType:"number"}),statisticType:"sum"}),color:G(e.symbol,t)}}));if(p){const e="cluster_default",r=u||t;d.push({field:new s({name:W(e),alias:r,onStatisticExpression:new o({title:`Field definition - ${r}`,expression:K(n,i),returnType:"number"}),statisticType:"sum"}),color:G(l,F)})}return d}function W(e){return"SUM_"+(e+"").replaceAll(/[^a-zA-Z0-9_]/g,"_")}function G(e,r){if("simple-marker"===e?.type&&e.color)return e.color.clone();if("cim"===e?.type){const r=I(e);if(r)return r.clone()}return r?r.clone():U.clone()}function H(e,r){return`Number(Text($feature["${e}"]) == "${r.value+""}")`}function J(e,r){return`Number(!(${r.map((r=>`(Text($feature["${e}"]) == "${r.value+""}")`)).join(" || ")}))`}function Z(e,r){return`Number($feature["${e}"] >= ${r.minValue} && $feature["${e}"] < ${r.maxValue})`}function K(e,r){return`Number(!(${r.map((r=>`($feature["${e}"] >= ${r.minValue} && $feature["${e}"] < ${r.maxValue})`)).join(" || ")}))`}export{R as createRenderer,_ as createRendererForClustering};
