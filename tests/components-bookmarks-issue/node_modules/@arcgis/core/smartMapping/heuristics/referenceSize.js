/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{px2pt as t}from"../../core/screenUtils.js";import{getGeometryExtent as n}from"../../geometry/support/extentUtils.js";import i from"../statistics/spatialStatistics.js";import{verifyBinningParams as r}from"../support/binningUtils.js";import{binningCapableLayerTypes as s,featureCapableLayerTypes as o,createLayerAdapter as a,getLayerTypeLabels as f}from"../support/adapters/support/layerUtils.js";const c=.1,p=.25,l=.1,u=.1;async function m(t){const{view:n}=t;if(!(t&&n&&t.layer))throw new e("reference-size:missing-parameters","'view' and 'layer' parameters are required");t.forBinning&&r(t,"reference-size");const{layer:i,...c}=t,p=t.forBinning?s:o,l=a(i,p,t.forBinning);if(!l)throw new e("reference-size:invalid-parameters","'reference-size' must be one of these types: "+f(p).join(", "));const u={layerAdapter:l,...c,view:n};await n.when();const m=null!=u.signal?{signal:u.signal}:null;if(await l.load(m),!t.forBinning&&"polygon"!==l.geometryType)throw new e("reference-size:not-supported",`reference-size is not supported for geometryType: ${l.geometryType}`);return u}function y(e){let t=0;for(const n of e)t+=n;return t/e.length}function g(e,t){const n=t??y(e),i=e.reduce(((e,t)=>e+(t-n)**2),0);return Math.sqrt(i/e.length)}async function h(t,r){const s=await i({features:t,geometryType:r});if(!(s&&"avgSize"in s&&s.avgSize))throw new e("reference-size:insufficient-info","average polygon size is invalid");const o=s.avgSize,a=[],f=[];for(const e of t){const t=n(e.geometry);if(!t){a.push(0),f.push(0);continue}const i=Math.abs(t.xmax-t.xmin),r=Math.abs(t.ymax-t.ymin);a.push(i/r),f.push(Math.sqrt(i*r))}const c=y(a),m=g(a,c),h=g(f);return{isGrid:m<l&&c>1-p&&c<1+p&&h/o<u,avgSize:o}}async function w(i,r){const{view:s}=r;if(r.forBinning){const r=i[Math.floor(i.length/2)].geometry,o=n(r);if(!o)throw new e("reference-size:insufficient-info","Extent is invalid");const a=Math.abs(o.xmax-o.xmin),f=Math.abs(o.ymax-o.ymin),c=Math.min(a,f);return{size:t(c/s.resolution),isGrid:!0}}const{isGrid:o,avgSize:a}=await h(i,r.layerAdapter.geometryType);return{size:t((o?a*(1-c):.25*a)/s.resolution),isGrid:o}}async function d(t){const n=await m(t),i=-1,r=await n.layerAdapter.getSampleFeatures({sampleSize:i,returnGeometry:!0,...n},"json");if(!r?.length)throw new e("reference-size:insufficient-info","No features are available to calculate statistics");return w(r,n)}export{d as default};
