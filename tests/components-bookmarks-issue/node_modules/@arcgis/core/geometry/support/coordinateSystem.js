/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{copy as t}from"../../core/libs/gl-matrix-2/math/mat4.js";import{s as e,k as n,c as o,n as r,b as i}from"../../chunks/vec32.js";import{create as s}from"../../core/libs/gl-matrix-2/factories/vec3f64.js";import{getReferenceEllipsoid as a}from"../ellipsoidUtils.js";import u from"../SpatialReference.js";import{getSphericalPCPF as c}from"../spatialReferenceEllipsoidUtils.js";import{Axis as l}from"./Axis.js";import{f,b as p}from"../../chunks/boundedPlane.js";import{f as m,s as v}from"../../chunks/sphere.js";function h(t){const{value:e,operations:n}=t;return{operations:n,value:n.create(e)}}function j(t,e,n){return t.operations.setExtent(t.value,e,n.value),n}function d(t){return{operations:t,value:t.create()}}function x(t,e,n=d(t)){return n.operations=t,t.copy(e,n.value),n}function A(t){return x(v,m(0,0,0,a(t).radius))}const b=2**50;function k(){return x(p,f([0,0,0],[b,0,0],[0,b,0]))}function P(t,e,n){return t.operations.axisAt(t.value,e,l.Z,n)}function R(t,e,n,o){return t.operations.axisAt(t.value,e,n,o)}function S(t,e,n){return t.operations.intersectRay(t.value,e,n)}function g(t,e,n){return t.operations.closestPoint(t.value,e,n)}function y(t,e,n){return t.operations.intersectRayClosestSilhouette(t.value,e,n)}function C(t,e,n){return t.operations.closestPointOnSilhouette(t.value,e,n)}function E(t,e){return t.operations.distanceToSilhouette(t.value,e)}function U(t,e){return t.operations.altitudeAt(t.value,e)}function G(t,e,n,o){return t.operations.setAltitudeAt(t.value,e,n,o)}function O(n,o,r,i){return o!==i&&t(i,o),e(Z,i[12],i[13],i[14]),G(n,Z,r,Z),i[12]=Z[0],i[13]=Z[1],i[14]=Z[2],i}function T(t,e,n){return t.operations.elevate(t.value,e,n.value)}const Z=s();function q(t,e,o,r,i){return i[0]=n(t,e),i[1]=n(t,o),i[2]=n(t,r),i}function w(t,e,n,s,a){o(n,t),o(B,e),r(B,B),i(s,B,n),i(a,s,n)}function z(t,e){return t?c(e):e.isGeographic?u.PlateCarree:e}const B=s();export{U as altitudeAt,R as axisAt,g as closestPoint,C as closestPointOnSilhouette,w as coordinateSystemFromOneAxisAndNormalVector,h as create,d as createFromOperations,A as createGlobal,k as createLocal,E as distanceToSilhouette,T as elevate,x as fromValues,S as intersectRay,y as intersectRayClosestSilhouette,P as normalAt,z as renderSRFromViewSR,G as setAltitudeAt,O as setAltitudeOfTransformation,j as setExtent,q as vectorCoordinates};
