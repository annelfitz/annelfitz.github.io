/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{fromRotationTranslationScale as e,invert as i,exactEquals as a}from"../../core/libs/gl-matrix-2/math/mat4.js";import{create as l}from"../../core/libs/gl-matrix-2/factories/mat4f64.js";import{setAxisAngle as n}from"../../core/libs/gl-matrix-2/math/quat.js";import{create as c}from"../../core/libs/gl-matrix-2/factories/quatf64.js";import{e as p}from"../../chunks/vec32.js";import{create as m,fromArray as u,fromValues as h,clone as x}from"../../core/libs/gl-matrix-2/factories/vec3f64.js";import{up as f,fromAxisAndAngle as g,axis as j,angle as b,angleRad as y}from"./axisAngleDegrees.js";var A;let v=A=class extends o{constructor(t){super(t),this.translation=m(),this.rotationAxis=u(f),this.rotationAngle=0,this.scale=h(1,1,1)}get rotation(){return g(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=x(j(t)),this.rotationAngle=b(t)}get localMatrix(){const t=l();return n(M,j(this.rotation),y(this.rotation)),e(t,M,this.translation,this.scale),t}get localMatrixInverse(){return i(l(),this.localMatrix)}applyLocal(t,o){return p(o,t,this.localMatrix)}applyLocalInverse(t,o){return p(o,t,this.localMatrixInverse)}equals(t){return this===t||null!=t&&a(this.localMatrix,t.localMatrix)}clone(){const t={translation:x(this.translation),rotationAxis:x(this.rotationAxis),rotationAngle:this.rotationAngle,scale:x(this.scale)};return new A(t)}};t([r({type:[Number],nonNullable:!0,json:{write:!0}})],v.prototype,"translation",void 0),t([r({type:[Number],nonNullable:!0,json:{write:!0}})],v.prototype,"rotationAxis",void 0),t([r({type:Number,nonNullable:!0,json:{write:!0}})],v.prototype,"rotationAngle",void 0),t([r({type:[Number],nonNullable:!0,json:{write:!0}})],v.prototype,"scale",void 0),t([r()],v.prototype,"rotation",null),t([r()],v.prototype,"localMatrix",null),t([r()],v.prototype,"localMatrixInverse",null),v=A=t([s("esri.geometry.support.MeshTransform")],v);const M=c(),d=v;export{d as default};
