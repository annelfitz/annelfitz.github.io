/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../../core/Logger.js";import{G as t,g as r,h as n}from"../../../chunks/vec32.js";import{create as o}from"../../../core/libs/gl-matrix-2/factories/vec3f64.js";import s from"../MeshComponent.js";import i from"../MeshTransform.js";import{MeshVertexAttributes as l}from"../MeshVertexAttributes.js";import{vertexSpaceOriginToPoint as a}from"../meshVertexSpaceUtils.js";import{georeferenceApplyTransform as c,ungeoreference as f}from"./georeference.js";const u=()=>e.getLogger("esri.geometry.support.triangleMeshMerge");function p(e,t){if(0===e.length)return u().error("merge()","Must specify one more geometries to merge"),null;const r=e[0].spatialReference;for(const c of e){if(!c.spatialReference.equals(r))return u().error("merge()","Geometries must all be in the same spatial reference"),null;if(!c.loaded)return u().error("merge()","Geometries must all be loaded before merging"),null}const n=m(e);if(null==n)return null;const o=y(e),s=[],i={position:0,uv:0,normal:0,tangent:0,color:0},l=new Map,a=new Map;for(const c of e){const e=g(c,n);if(t&&t.reuseMaterials&&c.components)for(const t of c.components)t.material&&l.set(t.material,t.material);x(c,i,l,a,s),b("position",e,o,i,0),b("normal",e,o,i,0),b("tangent",e,o,i,0),b("uv",c.vertexAttributes,o,i,0),b("color",c.vertexAttributes,o,i,255)}return{vertexAttributes:o,components:s,vertexSpace:n.vertexSpace,transform:n.transform,spatialReference:r}}function m(e){let s=null,l=null,a=!0,c=!0,f=null;const p=o();let m=0;for(const n of e){const{vertexSpace:e,transform:o}=n;if(null==l){l=e;const t=l.origin;t&&(f=t)}if(l.type!==e.type)return u().error("merge()",`Inconsistent mesh vertex space for provided geometries. One was ${l.type} while another is ${e.type}. Unable to merge geometries.`),null;null==s||null!=o&&o.equals(s)||(a=!1),null!=o&&null==s&&(s=o);const i=e.origin;i&&(f&&!t(i,f)&&(c=!1),m++,r(p,p,i))}if(null==l)throw new Error;const g=l.clone();if(null==g.origin)return{transform:null,vertexSpace:g,rebake:!1};if(c&&a)return{transform:s?.clone(),vertexSpace:g,rebake:!1};const h=n(p,p,1/m);return g.origin=h,{transform:new i,vertexSpace:g,rebake:!0}}function g(e,t){if(!t.rebake)return e.vertexAttributes;const r=e.vertexSpace,n=t.vertexSpace;if(r.type!==n.type)throw new Error;const o=c(e.vertexAttributes,r,e.transform,e.spatialReference),s="local"===n.type;return f(o,a(n,e.spatialReference),{geographic:s})}function h(e,t){return t.normal>0&&!e.vertexAttributes.normal}function v(e,t,r){h(e,t)&&"source"===r.shading&&(r.shading="flat")}function x(e,t,r,n,o){if(e.components)for(const s of e.components){const i=s.cloneWithDeduplication(r,n),l=t.position/3;if(i.faces)for(let e=0;e<i.faces.length;e++)i.faces[e]+=l;else{i.faces=new Uint32Array(e.vertexAttributes.position.length/3);for(let e=0;e<i.faces.length;e++)i.faces[e]=e+l}v(e,t,i),o.push(i)}else if(e.vertexAttributes&&e.vertexAttributes.position){const r=e.vertexAttributes.position.length/3,n=new Uint32Array(r),i=t.position/3;for(let e=0;e<r;e++)n[e]=e+i;const l=new s({faces:n});v(e,t,l),o.push(l)}}function b(e,t,r,n,o){if(!t)return;const s=t.position;if(!s)return;const i=t[e],l=r[e];if(null==i){let t=n[e];const r=d[e];if(null!=l){for(let e=0;e<s.length;e+=3)for(let n=0;n<r;n++)l[t++]=o;n[e]=t}}else null!=l&&null!=i&&(A(i,0,l,n[e],i.length),n[e]+=i.length)}function A(e,t,r,n,o){for(let s=0;s<o;s++)r[n++]=e[t++];return r}function w(e){let t=!1,r=!1,n=!1,o=!1;for(const s of e){const e=s.vertexAttributes;if(e?.position&&(e.uv&&(t=!0),e.normal&&(r=!0),e.tangent&&(o=!0),e.color&&(n=!0),r&&t&&n&&o))break}return{normal:r,uv:t,color:n,tangent:o}}function y(e){let t=0,r=0,n=0,o=0,s=0;const i=w(e);for(const l of e){const e=l.vertexAttributes;e?.position&&(t+=e.position.length,i.uv&&(r+=e.position.length/d.position*d.uv),i.normal&&(n+=e.position.length/d.position*d.normal),i.color&&(o+=e.position.length/d.position*d.color),i.tangent&&(s+=e.position.length/d.position*d.tangent))}return new l({position:new Float64Array(t),uv:r?new Float32Array(r):null,normal:n?new Float32Array(n):null,tangent:s?new Float32Array(s):null,color:o?new Uint8Array(o):null})}const d={position:3,normal:3,tangent:4,uv:2,color:4};export{p as merge};
