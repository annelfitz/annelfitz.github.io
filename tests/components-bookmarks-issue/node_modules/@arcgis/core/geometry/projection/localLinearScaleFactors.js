/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{l as r}from"../../chunks/vec32.js";import{classifySpatialReference as t,sourceClassificationCache as s,destClassificationCache as o,ProjectionID as i,invPlateCarreeScale as n}from"./projectors.js";import{earth as e}from"../support/Ellipsoid.js";import{equals as u}from"../support/spatialReferenceUtils.js";function f(f,p,E,c){if(null==p||null==c)return!1;const l=t(p,s),C=t(c,o);if(l===C&&l!==i.UNKNOWN||u(p,c))return E[0]=1,E[1]=1,E[2]=1,!0;if(l===i.SPHERICAL_ECEF){const t=r(f),s=t/Math.sqrt(f[0]*f[0]+f[1]*f[1]),o=t/e.radius;if(C===i.WEB_MERCATOR)return E[0]=s*o,E[1]=s*o,E[2]=1,!0;if(C===i.WGS84||C===i.CGCS2000){const r=n;return E[0]=r*s*o,E[1]=r*o,E[2]=1,!0}}else if(l===i.PLATE_CARREE){if(C===i.WGS84||C===i.CGCS2000)return E[0]=n,E[1]=n,E[2]=1,!0;if(C===i.WEB_MERCATOR){const r=f[1]/e.radius;return E[0]=1,E[1]=1/Math.cos(r),E[2]=1,!0}}return!1}export{f as localLinearScaleFactors};
