/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../request.js";import t from"../core/Collection.js";import o from"../core/Error.js";import{MultiOriginJSONMixin as i}from"../core/MultiOriginJSONSupport.js";import{throwIfAbortError as s}from"../core/promiseUtils.js";import{urlToObject as a,join as p}from"../core/urlUtils.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/Logger.js";import"../core/RandomLCG.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import m from"./Layer.js";import y from"./catalog/CatalogDynamicGroupLayer.js";import u from"./catalog/CatalogFootprintLayer.js";import c from"./graphics/sources/FeatureLayerSource.js";import{APIKeyMixin as d}from"./mixins/APIKeyMixin.js";import{ArcGISService as f}from"./mixins/ArcGISService.js";import{BlendLayer as h}from"./mixins/BlendLayer.js";import{CustomParametersMixin as j}from"./mixins/CustomParametersMixin.js";import{FeatureLayerBase as g}from"./mixins/FeatureLayerBase.js";import{OperationalLayer as S}from"./mixins/OperationalLayer.js";import{OrderedLayer as L}from"./mixins/OrderedLayer.js";import{PortalLayer as x}from"./mixins/PortalLayer.js";import{RefreshableLayer as v}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as F}from"./mixins/ScaleRangeLayer.js";import{TemporalLayer as w}from"./mixins/TemporalLayer.js";import{id as I}from"./support/commonProperties.js";import{ensureLayerCredential as C}from"./support/featureLayerUtils.js";import{defineFieldProperties as P}from"./support/fieldProperties.js";import{serviceSupportsSpatialReference as O}from"./support/versionUtils.js";import T from"../rest/support/Query.js";const b=P();function q(){return{renderer:{type:"simple",symbol:{type:"esriSFS",style:"esriSFSSolid",color:[96,96,96,0],outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[96,96,96,191]}}}}}let E=class extends(g(h(L(w(F(v(f(S(x(i(j(d(m))))))))))))){constructor(e){super(e),this.dynamicGroupLayer=new y({parent:this}),this.fields=null,this.fieldsIndex=null,this.footprintLayer=new u({parent:this}),this.itemNameField="cd_itemname",this.itemSourceField="cd_itemsource",this.itemTypeField="cd_itemtype",this.layers=new t([this.dynamicGroupLayer,this.footprintLayer]),this.maxScaleField="cd_maxscale",this.minScaleField="cd_minscale",this.supportedSourceTypes=new Set(["Catalog Layer"]),this.source=new c({layer:this,supportedSourceTypes:this.supportedSourceTypes}),this.type="catalog"}load(e){const r=null!=e?e.signal:null,t=this.loadFromPortal({supportedTypes:["Feature Service"]},e).catch(s).then((async()=>{const{url:e,source:t,portalItem:i}=this;if(!e)throw new o("catalog-layer:missing-url","Catalog layer must be created with a url");if(null==this.layerId){const t=await this._fetchFirstValidLayerId(r);if(null==t)throw new o("catalog-layer:missing-layerId","There is no Catalog Layer in the service",{service:e});this.layerId=t}await t.load({signal:r});const{sourceJSON:s}=t;s&&(this.sourceJSON=s,this.read(s,{origin:"service",portalItem:i,portal:i?.portal,url:this.parsedUrl}))})).then((()=>C(this,"load",e)));return this.addResolvingPromise(t),Promise.resolve(this)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")??0)+1}get parsedUrl(){const e=a(this.url);return null!=e&&null!=this.layerId&&(e.path=p(e.path,this.layerId.toString())),e}createQuery(){const e=new T,r=this.capabilities?.query;e.returnGeometry=!0,r&&(e.compactGeometryEnabled=r.supportsCompactGeometry,e.defaultSpatialReferenceEnabled=r.supportsDefaultSpatialReference),e.outFields=["*"];const{timeOffset:t,timeExtent:o}=this;return e.timeExtent=null!=t&&null!=o?o.offset(-t.value,t.unit):o||null,e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,r){return this.fieldsIndex.get(e)?.domain}async queryFeatures(e,r){const t=await this.load(),o=await t.source.queryFeatures(T.from(e)??t.createQuery(),r);if(o?.features)for(const i of o.features)i.layer=i.sourceLayer=t.footprintLayer;return o}async queryObjectIds(e,r){return(await this.load()).source.queryObjectIds(T.from(e)??this.createQuery(),r)}async queryFeatureCount(e,r){return(await this.load()).source.queryFeatureCount(T.from(e)??this.createQuery(),r)}async queryExtent(e,r){return(await this.load()).source.queryExtent(T.from(e)??this.createQuery(),r)}serviceSupportsSpatialReference(e){return this.loaded&&O(this,e)}read(e,r){super.read(e,r);let t=e.footprintLayer;t||"service"!==r?.origin||(t={layerDefinition:{drawingInfo:q()}}),this.footprintLayer.read(t,r)}async _fetchFirstValidLayerId(e){const{data:t}=await r(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e});if(Array.isArray(t?.layers))return t.layers.find((({type:e})=>this.supportedSourceTypes.has(e)))?.id}};e([l({readOnly:!0})],E.prototype,"createQueryVersion",null),e([l({...b.fields,json:{origins:{service:{name:"fields"}}}})],E.prototype,"fields",void 0),e([l(b.fieldsIndex)],E.prototype,"fieldsIndex",void 0),e([l({json:{read:!1,write:!1}})],E.prototype,"footprintLayer",void 0),e([l(I)],E.prototype,"id",void 0),e([l()],E.prototype,"itemNameField",void 0),e([l()],E.prototype,"itemSourceField",void 0),e([l()],E.prototype,"itemTypeField",void 0),e([l()],E.prototype,"layers",void 0),e([l()],E.prototype,"maxScaleField",void 0),e([l()],E.prototype,"minScaleField",void 0),e([l({value:"CatalogLayer",type:["CatalogLayer"]})],E.prototype,"operationalLayerType",void 0),e([l()],E.prototype,"outFields",void 0),e([l({readOnly:!0})],E.prototype,"parsedUrl",null),e([l()],E.prototype,"source",void 0),e([l({json:{read:!1}})],E.prototype,"type",void 0),E=e([n("esri.layers.CatalogLayer")],E);const Q=E;export{Q as default};
