/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import{ClonableMixin as r}from"../../../core/Clonable.js";import t from"../../../core/Error.js";import{JSONSupport as a}from"../../../core/JSONSupport.js";import o from"../../../core/Logger.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import{cast as n}from"../../../core/accessorSupport/decorators/cast.js";import{enumeration as p}from"../../../core/accessorSupport/decorators/enumeration.js";import{reader as c}from"../../../core/accessorSupport/decorators/reader.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{writer as l}from"../../../core/accessorSupport/decorators/writer.js";import m from"./CameraOrientation.js";import y from"./cameraOrientationFactory.js";import{appendPrefixAndSuffix as u,getEffectiveElevationSource as d,orientedImageryTypeMap as f}from"./utils.js";import{CameraOrientationType as g}from"../enums/CameraOrientationType.js";import h from"../../../geometry/Point.js";function v(e){throw new t("exposure-point:missing-default-value",`a value for ${e} is missing in default properties`)}function O(e,r){throw new t("exposure-point:missing-attribute-value",`a value for ${e} is missing in attribute table`,{exposurePoint:r})}let w=class extends(r(a)){constructor(e){super(e),this.cameraOrientation=null,this.elevation=null,this.elevationSource=null,this.name=null}read(e,r){const t={},{attributes:a,layer:o,geometry:i}=e;for(const n in a)t[n.toLowerCase()]=a[n];super.read({geometry:i,layer:o??{},...t},r)}readCameraHeading(e,r){const{cameraheading:t,camheading:a,layer:o}=r;return t??a??o.cameraHeading}readCameraHeight(e,r){const{cameraheight:t,avghtag:a,layer:o}=r;return t??a??o.cameraHeight}readCamOffset(e,r){const{cameraoffset:t,camoffset:a}=r;return t?.split(";").map(Number)??a?.split(";").map(Number)??null}writeCameraOffset(e,r){e&&(r.cameraOffset=e.join(";"))}readCameraOrientation(e,r){const{cameraorientation:t,camori:a}=r;return t??a}readCameraPitch(e,r){const{camerapitch:t,campitch:a,layer:o}=r;return t??a??o.cameraPitch}readCameraRoll(e,r){const{cameraroll:t,camroll:a,layer:o}=r;return t??a??o.cameraRoll}readDepthImage(e,r){const{depthimage:t,depthimg:a,layer:o}=r,i=t??a??null,{depthImagePathPrefix:n,depthImagePathSuffix:p}=o??{};return u(i,n,p)}readElevationSource(e,r){const{elevationsource:t,layer:a}=r,{demPathSuffix:o,demPathPrefix:i}=a;if(t){const e=this._parseIfJSON(t);return d(e,i,o)}return a.effectiveElevationSource}readFarDistance(e,r){const{fardistance:t,fardist:a,layer:o}=r;return t??a??o.farDistance}readHFOV(e,r){const{horizontalfieldofview:t,hfov:a,layer:o}=r;return t??a??o.horizontalFieldOfView}readImageURL(e,r){const{imagepath:t,layer:a}=r;t||O("imagePath",this);const{imagePathPrefix:o,imagePathSuffix:i}=a;return u(t,o,i)}readImageRotation(e,r){const{imagerotation:t,imgrot:a,layer:o}=r;return t??a??o.imageRotation}get isHorizontal(){return"horizontal"===this.orientedImageryType}get isInspection(){return"inspection"===this.orientedImageryType}get isNadir(){return"nadir"===this.orientedImageryType}get isOblique(){return"oblique"===this.orientedImageryType}get isSpherical(){return"360"===this.orientedImageryType}get location(){const{cameraOrientation:e,geometry:r,cameraHeight:t,elevation:a}=this;if(e){const{type:r,x:t,y:a,z:o,horizontalWKID:i}=e;return new h({x:t,y:a,z:o,spatialReference:{wkid:r===g.LTP?4326:i}})}if("number"!=typeof t)throw v("cameraHeight");return r.z=(a??0)+t,r}readNearDistance(e,r){const{neardistance:t,neardist:a,layer:o}=r;return t??a??o.nearDistance}readOrientationAccuracy(e,r){const{accuracy:t,orientationaccuracy:a}=r;return a?.split(";").map(Number)??t?.split(";").map(Number)??null}writeOrientationAccuracy(e,r){e&&(r.orientationAccuracy=e.join(";"))}readOIType(e,r){const{orientedimagerytype:t,oitype:a,camerapitch:o,campitch:i,layer:n}=r,p=f.read(t??a??n.orientedImageryType),c=o??i??n.cameraPitch;return"oblique"===p?c<10?"nadir":"oblique":p}readVFOV(e,r){const{verticalfieldofview:t,vfov:a,layer:o}=r;return t??a??o.verticalFieldOfView}_parseIfJSON(e){let r=null;try{r=JSON.parse(e)}catch(t){o.getLogger(this).error("couldn't parse the given elevation source JSON",e,t)}return r}};e([i({type:Date,json:{write:{enabled:!0,target:"aquisitionDate"},name:"acquisitiondate"}})],w.prototype,"acquisitionDate",void 0),e([i({type:Number,json:{write:!0,read:{source:["cameraheading","camheading","layer.cameraHeading"]}}})],w.prototype,"cameraHeading",void 0),e([c("cameraHeading")],w.prototype,"readCameraHeading",null),e([i({type:Number,json:{write:!0}})],w.prototype,"cameraHeight",void 0),e([c("cameraHeight",["cameraheight","avghtag","layer.cameraHeight"])],w.prototype,"readCameraHeight",null),e([i()],w.prototype,"cameraOffset",void 0),e([c("cameraOffset",["cameraoffset","camoffset"])],w.prototype,"readCamOffset",null),e([l("cameraOffset")],w.prototype,"writeCameraOffset",null),e([i({json:{write:!0},type:m}),n((e=>e?y.getCameraOrientation(e):null))],w.prototype,"cameraOrientation",void 0),e([c("cameraOrientation",["cameraorientation","camori"])],w.prototype,"readCameraOrientation",null),e([i({type:Number,json:{write:!0}})],w.prototype,"cameraPitch",void 0),e([c("cameraPitch",["camerapitch","campitch","layer.cameraPitch"])],w.prototype,"readCameraPitch",null),e([i({type:Number,json:{write:!0}})],w.prototype,"cameraRoll",void 0),e([c("cameraRoll",["cameraroll","camroll","layer.cameraRoll"])],w.prototype,"readCameraRoll",null),e([i({json:{write:!0},type:String})],w.prototype,"depthImage",void 0),e([c("depthImage",["depthimage","depthimg"])],w.prototype,"readDepthImage",null),e([i({type:Number,json:{write:!0}})],w.prototype,"elevation",void 0),e([i({json:{write:!0}})],w.prototype,"elevationSource",void 0),e([c("elevationSource",["elevationsource","layer.effectiveElevationSource"])],w.prototype,"readElevationSource",null),e([i({json:{name:"exposurestationid",write:{target:"exposureStationId"}},type:String})],w.prototype,"exposureStationId",void 0),e([i({type:Number,json:{write:!0}})],w.prototype,"farDistance",void 0),e([c("farDistance",["fardistance","fardist","layer.farDistance"])],w.prototype,"readFarDistance",null),e([i({type:h,json:{name:"geometry"}})],w.prototype,"geometry",void 0),e([i({type:Number,json:{write:!0}})],w.prototype,"horizontalFieldOfView",void 0),e([c("horizontalFieldOfView",["horizontalfieldofview","hfov","layer.horizontalFieldOfView"])],w.prototype,"readHFOV",null),e([i({json:{write:!0},type:String})],w.prototype,"imagePath",void 0),e([c("imagePath",["imagepath"])],w.prototype,"readImageURL",null),e([i({type:Number,json:{write:!0}})],w.prototype,"imageRotation",void 0),e([c("imageRotation",["imagerotation","imgrot","layer.imageRotation"])],w.prototype,"readImageRotation",null),e([i()],w.prototype,"isHorizontal",null),e([i()],w.prototype,"isInspection",null),e([i()],w.prototype,"isNadir",null),e([i()],w.prototype,"isOblique",null),e([i()],w.prototype,"isSpherical",null),e([i()],w.prototype,"location",null),e([i({json:{write:!0},type:String})],w.prototype,"name",void 0),e([i({type:Number,json:{write:!0}})],w.prototype,"nearDistance",void 0),e([c("nearDistance",["neardistance","neardist","layer.nearDistance"])],w.prototype,"readNearDistance",null),e([i({json:{write:!0,name:"objectid"},type:Number})],w.prototype,"objectId",void 0),e([i()],w.prototype,"orientationAccuracy",void 0),e([c("orientationAccuracy",["accuracy","orientationaccuracy"])],w.prototype,"readOrientationAccuracy",null),e([l("orientationAccuracy")],w.prototype,"writeOrientationAccuracy",null),e([p(f)],w.prototype,"orientedImageryType",void 0),e([c("orientedImageryType",["orientedimagerytype","oitype","layer.orientedImageryType"])],w.prototype,"readOIType",null),e([i({type:Number,json:{name:"sortorder",write:{target:"sortOrder"}}})],w.prototype,"sortOrder",void 0),e([i({type:Number,json:{write:!0}})],w.prototype,"verticalFieldOfView",void 0),e([c("verticalFieldOfView",["verticalfieldofview","vfov","layer.verticalFieldOfView"])],w.prototype,"readVFOV",null),w=e([s("esri.layers.orientedImagery.core.ExposurePoint")],w);const j=w;export{j as default};
