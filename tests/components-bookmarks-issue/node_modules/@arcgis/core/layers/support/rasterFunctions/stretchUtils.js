/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{assertIsSome as t}from"../../../core/maybe.js";import n from"../PixelBlock.js";import{getPixelValueRange as s}from"../rasterFormats/pixelRangeUtils.js";import{stretchTypeFunctionEnum as e}from"../../../renderers/support/stretchRendererUtils.js";const i=1,o=[.299,.587,.114];function r(t,n=256){n=Math.min(n,256);const{size:s,counts:e}=t,i=new Uint8Array(s),o=e.reduce(((t,s)=>t+s/n),0);let r=0,a=0,l=0,f=o;for(let u=0;u<s;u++)if(l+=e[u],!(u<s-1&&l+e[u+1]<f)){for(;r<n-1&&f<l;)r++,f+=o;for(let t=a;t<=u;t++)i[t]=r;a=u+1}for(let u=a;u<s;u++)i[u]=n-1;return i}function a(t){const{minCutOff:n,maxCutOff:s,gamma:e,pixelType:i,rounding:o}=t,r=t.outMin||0,a=t.outMax||255;if(!["u8","u16","s8","s16"].includes(i))return null;const f=n.length;let u,c,m=0;"s8"===i?m=-127:"s16"===i&&(m=-32767);let h=256;["u16","s16"].includes(i)&&(h=65536);const g=[],p=[],d=a-r;for(u=0;u<f;u++)p[u]=s[u]-n[u],g[u]=0===p[u]?0:d/p[u];let M;const y=[];let b,k,v;if(e&&e.length>=f){const t=x(f,e);for(u=0;u<f;u++){for(v=[],c=0;c<h;c++)if(0!==p[u])if(b=c+m,M=(b-n[u])/p[u],k=1,e[u]>1&&(k-=(1/d)**(M*t[u])),b<s[u]&&b>n[u]){const t=k*d*M**(1/e[u])+r;v[c]="floor"===o?Math.floor(t):"round"===o?Math.round(t):t}else b>=s[u]?v[c]=a:v[c]=r;else v[c]=r;y[u]=v}}else for(u=0;u<f;u++){for(v=[],c=0;c<h;c++)if(b=c+m,b<=n[u])v[c]=r;else if(b>=s[u])v[c]=a;else{const t=(b-n[u])*g[u]+r;v[c]="floor"===o?Math.floor(t):"round"===o?Math.round(t):t}y[u]=v}if(null!=t.contrastOffset){const n=l(t.contrastOffset,t.brightnessOffset);for(u=0;u<f;u++)for(v=y[u],c=0;c<h;c++)v[c]=n[v[c]]}return{lut:y,offset:m}}function l(t,n){const s=Math.min(Math.max(t,-100),100),e=Math.min(Math.max(n??0,-100),100),i=255,o=128;let r=0,a=0;const l=new Uint8Array(256);for(r=0;r<256;r++)s>0&&s<100?a=(200*r-100*i+2*i*e)/(2*(100-s))+o:s<=0&&s>-100?a=(200*r-100*i+2*i*e)*(100+s)/2e4+o:100===s?(a=200*r-100*i+(i+1)*(100-s)+2*i*e,a=a>0?i:0):-100===s&&(a=o),l[r]=a>i?i:a<0?0:a;return l}function f(t,n,s){const e=[];for(let i=0;i<n.length;i++){let r=0,a=0,l=0;"min"in n[i]?({min:r,max:a,avg:l}=n[i]):[r,a,l]=n[i];let f=l??0;"u8"!==t&&(f=255*(f-r)/(a-r)),s&&(f*=o[i]),e.push(u(f))}return e}function u(t){if(t<=0||t>=255)return i;let n=0;150!==t&&(n=t<=150?45*Math.cos(.01047*t):17*Math.sin(.021*t));const s=255,e=t+n,o=Math.log(t/s),r=Math.log(e/s);if(0===r)return i;const a=o/r;return isNaN(a)?i:Math.min(9.9,Math.max(.01,a))}function c(t,n,s,e){let i=1/0,o=-1/0,r=0,a=0,l=0,f=0;const u=t.length,c=new Map,m=[];for(let w=0;w<u;w++){const s=t[w];if(!n||n[w]){m.push(s);const t=(c.get(s)??0)+1;c.set(s,t),t>f&&(f=t,l=s),i=s<i?s:i,o=s>o?s:o,r+=s,a++}}if(0===a)return{statistics:{min:0,max:0,avg:0,stddev:0,mode:0,median:0},histogram:null};const h=r/a;let g=0;for(let w=0;w<u;w++)n&&!n[w]||(g+=(t[w]-h)**2);const p=n?n.filter((t=>t)).length:u,d=p<=1?0:Math.sqrt(g/(p-1));m.sort(((t,n)=>t-n));const x=a>>>1,M={min:i,max:o,avg:h,stddev:d,mode:l,median:a%2?m[Math.floor(x)]:(m[x-1]+m[x])/2};if(!e)return{statistics:M,histogram:null};if(["u8","s8","u4","u2","u1"].includes(s)){const s=o-i+1,e=new Uint32Array(s);for(let o=0;o<u;o++)n&&!n[o]||e[t[o]-i]++;return{statistics:M,histogram:{min:i-.5,max:o+.5,size:s,counts:e}}}const y=256,b=new Uint32Array(y),k=(o-i)/y;if(0===k)return{statistics:M,histogram:{min:i,max:o,size:1,counts:new Uint32Array(1).fill(a)}};const v=new Uint32Array(y+1);for(let w=0;w<u;w++)n&&!n[w]||v[Math.floor((t[w]-i)/k)]++;for(let w=0;w<y-1;w++)b[w]=v[w];return b[y-1]=v[y-1]+v[y],{statistics:M,histogram:{min:i,max:o,size:y,counts:b}}}function m(t){const{pixels:n,mask:s,pixelType:e,bandMasks:i}=t,o=n.map(((t,n)=>c(t,i?.[n]??s,e,!0)));return{statistics:o.map((({statistics:t})=>t)),histograms:o.map((({histogram:t})=>t))}}function h(t){if(!t?.pixels?.length)return null;const{pixels:n,mask:s,bandMasks:e,pixelType:i}=t,o=t.width*t.height,r=n.length,a=[],l=[],f=256;let u,c,m,h;for(let g=0;g<r;g++){m=new Uint32Array(f);const r=n[g],p=e?.[g]??s;if("u8"===i){if(u=255,c=0,p){for(let t=0;t<o;t++)if(p[t]){const n=r[t];u=n<u?n:u,c=n>c?n:c,m[n]++}}else for(let t=0;t<o;t++){const n=r[t];u=n<u?n:u,c=n>c?n:c,m[n]++}m=m.slice(u,c+1)}else{let n=!1;t.statistics||(t.updateStatistics(),n=!0);const s=t.statistics;u=s[g].minValue,c=s[g].maxValue;const e=(c-u)/f;if(0===e){!s||t.validPixelCount||n||t.updateStatistics();const e=(t.validPixelCount||t.width*t.height)/f;for(let t=0;t<f;t++)m[t]=Math.round(e*(t+1))-Math.round(e*t)}else{h=new Uint32Array(f+1);for(let t=0;t<o;t++)p&&!p[t]||h[Math.floor((r[t]-u)/e)]++;for(let t=0;t<f-1;t++)m[t]=h[t];m[f-1]=h[f-1]+h[f]}}const d="u8"===i?u-.5:u,x="u8"===i?c+.5:c;a.push({min:d,max:x,size:m.length,counts:m});let M=0,y=0,b=0;for(let t=0;t<m.length;t++)M+=m[t],y+=t*m[t];const k=y/M;for(let t=0;t<m.length;t++)b+=m[t]*(t-k)**2;const v=Math.sqrt(b/(M-1)),w=(x-d)/m.length,z=(k+("u8"===i?0:.5))*w+u,C=v*w;l.push({min:u,max:c,avg:z,stddev:C})}return{statistics:l,histograms:a}}function g(t){const n=[];for(let s=0;s<t.length;s++){const{min:e,max:i,size:o,counts:r}=t[s];let a=0,l=0;for(let t=0;t<o;t++)a+=r[t],l+=t*r[t];const f=l/a;let u=0;for(let t=0;t<o;t++)u+=r[t]*(t-f)**2;const c=(i-e)/o,m=(f+.5)*c+e,h=Math.sqrt(u/(a-1))*c;n.push({min:e,max:i,avg:m,stddev:h})}return n}function p(n,i){const{pixelBlock:o,bandIds:a,returnHistogramLut:l,rasterInfo:f}=i;let u=null,c=null,m=n.stretchType;if("number"==typeof m&&(m=e[m]),n.dra)if("minMax"===m&&o?.statistics)u=o.statistics.map((t=>[t.minValue,t.maxValue,0,0]));else{const t=h(o);u=null!=t?t.statistics:null,c=null!=t?t.histograms:null}else u=n.statistics?.length?n.statistics:f.statistics,c="histograms"in n?n.histograms:void 0,c||(c=f.histograms);"percentClip"!==m&&"histogramEqualization"!==m||c?.length||(m="minMax");const g=u?.length||c?.length||f.bandCount,p=[],x=[];let M,y,b,k,v,w,z,C,O;u&&!Array.isArray(u[0])&&(u=u.map((t=>[t.min,t.max,t.avg,t.stddev])));const[A,U]=s(f.pixelType);if(!u?.length){for(u=[],C=0;C<g;C++)u.push([A,U,1,1]);"standardDeviation"===m&&(m="minMax")}switch(m){case"none":for(C=0;C<g;C++)p[C]=A,x[C]=U;break;case"minMax":for(C=0;C<g;C++){const t=u[C];p[C]=t[0],x[C]=t[1]}break;case"standardDeviation":{const{numberOfStandardDeviations:t=2}=n;for(C=0;C<g;C++){const n=u[C];p[C]=n[2]-t*n[3],x[C]=n[2]+t*n[3],p[C]<n[0]&&(p[C]=n[0]),x[C]>n[1]&&(x[C]=n[1])}}break;case"histogramEqualization":for(t(c),C=0;C<g;C++)p[C]=c[C].min,x[C]=c[C].max;break;case"percentClip":for(t(c),C=0;C<c.length;C++){for(M=c[C],v=new Uint32Array(M.size),k=[...M.counts],k.length>=20&&(k[0]=k[1]=k[2]=k[k.length-1]=k[k.length-2]=0),b=0,y=(M.max-M.min)/M.size,z=-.5===M.min&&1===y?.5:0,O=0;O<M.size;O++)b+=k[O],v[O]=b;for(w=(n.minPercent||0)*b/100,p[C]=M.min+z,O=0;O<M.size;O++)if(v[O]>w){p[C]=M.min+y*(O+z);break}for(w=(1-(n.maxPercent||0)/100)*b,x[C]=M.max+z,O=M.size-2;O>=0;O--)if(v[O]<w){x[C]=M.min+y*(O+2-z);break}if(x[C]<p[C]){const t=p[C];p[C]=x[C],x[C]=t}}break;default:for(C=0;C<g;C++){const t=u[C];p[C]=t[0],x[C]=t[1]}}let T,q,P;"histogramEqualization"===m?(t(c),q=c[0].size||256,T=0,l&&(P=c.map((t=>r(t))))):(q=n.max||255,T=n.min||0);return d({minCutOff:p,maxCutOff:x,outMax:q,outMin:T,histogramLut:P},a)}function d(t,n){if(null==n||0===n.length)return t;const s=Math.max.apply(null,n),{minCutOff:e,maxCutOff:i,outMin:o,outMax:r,histogramLut:a}=t;return e.length===n.length||e.length<=s?t:{minCutOff:n.map((t=>e[t])),maxCutOff:n.map((t=>i[t])),histogramLut:a?n.map((t=>a[t])):null,outMin:o,outMax:r}}function x(t,n){const s=new Float32Array(t);for(let e=0;e<t;e++)n[e]>1?n[e]>2?s[e]=6.5+(n[e]-2)**2.5:s[e]=6.5+100*(2-n[e])**4:s[e]=1;return s}function M(t,s){if(!t?.pixels?.length)return t;const{mask:e,bandMasks:i,width:o,height:r,pixels:a}=t,{minCutOff:l,maxCutOff:f,gamma:u}=s,c=s.outMin||0,m=s.outMax||255,h=o*r,g=s.outputPixelType||"u8",p=t.pixels.map((()=>n.createEmptyBand(g,h))),d=p.length,M=m-c,y=[],b=[];for(let n=0;n<d;n++)b[n]=f[n]-l[n],y[n]=0===b[n]?0:M/b[n];const k=g.startsWith("u")||g.startsWith("s"),v=u&&u.length>=d,w=!!s.isRenderer;if(v){const t=x(d,u);for(let n=0;n<d;n++){const s=i?.[n]??e;for(let e=0;e<h;e++)if(null==s||s[e]){if(0===b[n]){p[n][e]=c;continue}const s=a[n][e],i=(s-l[n])/b[n];let o=1;if(u[n]>1&&(o-=(1/M)**(i*t[n])),s<f[n]&&s>l[n]){const t=o*M*i**(1/u[n])+c;p[n][e]=w?Math.floor(t):k?Math.round(t):t}else s>=f[n]?p[n][e]=m:p[n][e]=c}}}else for(let n=0;n<d;n++){const t=i?.[n]??e;for(let s=0;s<h;s++)if(null==t||t[s]){const t=a[n][s];if(t<f[n]&&t>l[n]){const e=(t-l[n])*y[n]+c;p[n][s]=w?Math.floor(e):k?Math.round(e):e}else t>=f[n]?p[n][s]=m:p[n][s]=c}}const z=new n({width:o,height:r,mask:e,bandMasks:i,pixels:p,pixelType:g});return z.updateStatistics(),z}export{x as computeGammaCorrection,f as computeGammaValues,m as computeStatisticsHistograms,l as createContrastBrightnessLUT,r as createHistogramEqualizationLUT,a as createStretchLUT,g as estimateStatisticsFromHistograms,h as estimateStatisticsHistograms,p as getStretchCutoff,M as stretch};
