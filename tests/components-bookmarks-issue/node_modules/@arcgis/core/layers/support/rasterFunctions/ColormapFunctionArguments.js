/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import{clone as r}from"../../../core/lang.js";import{property as e}from"../../../core/accessorSupport/decorators/property.js";import{cast as t}from"../../../core/accessorSupport/decorators/cast.js";import{reader as p}from"../../../core/accessorSupport/decorators/reader.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import a from"./BaseFunctionArguments.js";import{colorRampDict as m,rasterColormapNames as l}from"../../../renderers/support/colorRampUtils.js";import{fromJSON as c,types as n}from"../../../rest/support/colorRamps.js";var i;let u=i=class extends a{castColormapName(o){if(!o)return null;const r=o.toLowerCase();return l.includes(r)?r:null}readColorRamp(o){return c(o)}readColorRampName(o,r){if(!o)return null;const e=m.jsonValues.find((r=>r.toLowerCase()===o.toLowerCase()));return e?m.fromJSON(e):null}clone(){return new i({colormap:r(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};o([e({type:[[Number]],json:{write:!0}})],u.prototype,"colormap",void 0),o([e({type:String,json:{write:!0}})],u.prototype,"colormapName",void 0),o([t("colormapName")],u.prototype,"castColormapName",null),o([e({types:n,json:{write:!0}})],u.prototype,"colorRamp",void 0),o([p("colorRamp")],u.prototype,"readColorRamp",null),o([e({type:m.apiValues,json:{type:m.jsonValues,write:m.write}})],u.prototype,"colorRampName",void 0),o([p("colorRampName")],u.prototype,"readColorRampName",null),u=i=o([s("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],u);const d=u;export{d as default};
