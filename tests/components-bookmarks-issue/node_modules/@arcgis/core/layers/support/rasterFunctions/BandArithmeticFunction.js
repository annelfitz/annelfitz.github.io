/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as t}from"../../../core/accessorSupport/decorators/subclass.js";import r from"./BandArithmeticFunctionArguments.js";import{calculateBandIndex as n,getBandMatrix3 as i}from"./bandIndexUtils.js";import a from"./BaseRasterFunction.js";const o=new Set(["vari","mtvi2","rtvi-core","evi"]);let c=class extends a{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const e=this.sourceRasterInfos[0];if(e.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const s=e.clone();s.pixelType=this.outputPixelType,s.bandCount="sultan"===this.functionArguments.method?3:1,this._removeStatsHistColormapVAT(s),s.keyProperties={...s.keyProperties,BandProperties:void 0},this.rasterInfo=s;return{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(e){const s=e.pixelBlocks?.[0];if(null==s)return s;const{method:t,bandIndexes:r}=this.functionArguments,i=r.split(" ").map((e=>parseFloat(e)));return n(s,{method:t,bandIndexes:i,equation:r})}_getWebGLParameters(){const e=this.functionArguments.bandIndexes.split(" ").map((e=>parseFloat(e)-1));2===e.length&&e.push(0);const s=this.isInputBandIdsSwizzled?[0,1,2]:e;let t,r;const n=new Float32Array(3),{method:a}=this.functionArguments;switch(a){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":t=i([s[0],s[1],0]),r="ndxi";break;case"ndwi":t=i([s[1],s[0],0]),r="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":t=i([s[0],s[1],0]),r="sr";break;case"ci-g":case"ci-re":t=i([s[0],s[1],0]),r="ci";break;case"savi":t=i([s[0],s[1],0]),r="savi",n[0]=e[2]+1;break;case"tsavi":t=i([s[0],s[1],0]),r="tsavi",n[0]=e[2]+1,n[1]=e[3]+1,n[2]=e[4]+1;break;case"msavi":t=i([s[0],s[1],0]),r="msavi";break;case"gemi":t=i([s[0],s[1],0]),r="gemi";break;case"pvi":t=i([s[0],s[1],0]),r="tsavi",n[0]=e[2]+1,n[1]=e[3]+1;break;case"vari":t=i([s[0],s[1],s[2]]),r="vari";break;case"mtvi2":t=i([s[0],s[1],s[2]]),r="mtvi";break;case"rtvi-core":t=i([s[0],s[1],s[2]]),r="rtvicore";break;case"evi":t=i([s[0],s[1],s[2]]),r="evi";break;case"wndwi":t=i([s[0],s[1],0]),r="wndwi",n[0]=e[3]?e[3]+1:.5;break;case"bai":t=i([s[1],s[0],0]),r="bai";break;default:t=i([0,1,2]),r="custom"}return{bandIndexMat3:t,indexType:r,adjustments:n}}_getInputBandIds(e){if("custom"===this.functionArguments.method)return e;const s=this.functionArguments.bandIndexes.split(" ").map((e=>parseFloat(e)-1)),t=e.length,r=s.map((e=>e>=t?t-1:e)),n=o.has(this.functionArguments.method)?3:2,i=r.slice(0,n).map((s=>e[s]));return 2===i.length&&i.push(0),i}};e([s({json:{write:!0,name:"rasterFunction"}})],c.prototype,"functionName",void 0),e([s({type:r,json:{write:!0,name:"rasterFunctionArguments"}})],c.prototype,"functionArguments",void 0),e([s()],c.prototype,"rasterArgumentNames",void 0),c=e([t("esri.layers.support.rasterFunctions.BandArithmeticFunction")],c);const u=c;export{u as default};
