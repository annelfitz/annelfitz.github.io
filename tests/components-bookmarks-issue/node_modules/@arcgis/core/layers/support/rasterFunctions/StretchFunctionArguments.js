/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{JSONMap as e}from"../../../core/jsonMap.js";import{clone as o}from"../../../core/lang.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import{enumeration as s}from"../../../core/accessorSupport/decorators/enumeration.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{writer as a}from"../../../core/accessorSupport/decorators/writer.js";import m from"./BaseFunctionArguments.js";var n;const p=new e({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let c=n=class extends m{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,o){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[o]=t)}clone(){return new n({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:o(this.statistics),gamma:o(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:o(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};t([r({type:Boolean,json:{write:!0}})],c.prototype,"computeGamma",void 0),t([r({type:Boolean,json:{name:"dra",write:!0}})],c.prototype,"dynamicRangeAdjustment",void 0),t([r({type:[Number],json:{write:!0}})],c.prototype,"gamma",void 0),t([r()],c.prototype,"histograms",void 0),t([r({type:Number,json:{write:!0}})],c.prototype,"maxPercent",void 0),t([r({type:Number,json:{write:!0}})],c.prototype,"minPercent",void 0),t([r({type:Number,json:{write:!0}})],c.prototype,"numberOfStandardDeviations",void 0),t([r({type:Number,json:{name:"max",write:!0}})],c.prototype,"outputMax",void 0),t([r({type:Number,json:{name:"min",write:!0}})],c.prototype,"outputMin",void 0),t([r({type:Number,json:{write:!0}})],c.prototype,"sigmoidStrengthLevel",void 0),t([r({json:{type:[[Number]],write:!0}})],c.prototype,"statistics",void 0),t([a("statistics")],c.prototype,"writeStatistics",null),t([s(p)],c.prototype,"stretchType",void 0),t([r({type:Boolean,json:{write:!0}})],c.prototype,"useGamma",void 0),c=n=t([i("esri.layers.support.rasterFunctions.StretchFunctionArguments")],c);const u=c;export{u as default};
