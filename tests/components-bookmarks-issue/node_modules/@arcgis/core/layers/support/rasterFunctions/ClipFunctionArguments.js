/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import{geometryTypes as r}from"../../../geometry.js";import{JSONMap as e}from"../../../core/jsonMap.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as t}from"../../../core/accessorSupport/decorators/subclass.js";import{fromJSON as p}from"../../../geometry/support/jsonUtils.js";import i from"./BaseFunctionArguments.js";var c;const n=new e({1:"outside",2:"inside"},{useNumericKeys:!0});let m=c=class extends i{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new c({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};o([s({types:r,json:{read:p,write:!0}})],m.prototype,"clippingGeometry",void 0),o([s({json:{read:n.read,write:n.write}})],m.prototype,"clippingType",void 0),m=c=o([t("esri.layers.support.rasterFunctions.ClipFunctionArguments")],m);const a=m;export{a as default};
