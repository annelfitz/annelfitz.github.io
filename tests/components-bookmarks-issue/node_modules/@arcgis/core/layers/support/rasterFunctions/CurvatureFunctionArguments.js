/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as r}from"../../../chunks/tslib.es6.js";import{JSONMap as e}from"../../../core/jsonMap.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{enumeration as o}from"../../../core/accessorSupport/decorators/enumeration.js";import{reader as s}from"../../../core/accessorSupport/decorators/reader.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import p from"./BaseFunctionArguments.js";var c;const u=new e({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let i=c=class extends p{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(r,e){return u.fromJSON(e.type??e.curvatureType??0)}clone(){return new c({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};r([t({json:{write:{target:"type"}}}),o(u)],i.prototype,"curvatureType",void 0),r([s("curvatureType",["type","curvatureType"])],i.prototype,"readCurvatureType",null),r([t({type:Number,json:{write:!0}})],i.prototype,"zFactor",void 0),i=c=r([a("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],i);const n=i;export{n as default};
