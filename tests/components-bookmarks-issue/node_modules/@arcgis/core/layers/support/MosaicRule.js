/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{deprecatedProperty as t}from"../../core/deprecate.js";import{strict as o}from"../../core/jsonMap.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{clone as i}from"../../core/lang.js";import s from"../../core/Logger.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import{cast as a}from"../../core/accessorSupport/decorators/cast.js";import{reader as c}from"../../core/accessorSupport/decorators/reader.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{writer as p}from"../../core/accessorSupport/decorators/writer.js";import{Integer as d}from"../../core/accessorSupport/ensureType.js";import m from"../../geometry/Point.js";import u from"./DimensionalDefinition.js";import h from"./RasterFunction.js";var w;const y=o()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),M=o()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function g(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return M.fromJSON(t)}let f=w=class extends r{constructor(e){super(e),this.ascending=!0,this.itemRasterFunction=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}get itemRenderingRule(){return t(s.getLogger(this),"itemRenderingRule",{replacement:"itemRasterFunction",version:"4.27",warnOnce:!0}),this._get("itemRasterFunction")}set itemRenderingRule(e){t(s.getLogger(this),"itemRenderingRule",{replacement:"itemRasterFunction",version:"4.27",warnOnce:!0}),this._set("itemRasterFunction",e)}readMethod(e,t){return g(t.mosaicMethod||t.defaultMosaicMethod)}writeMultidimensionalDefinition(e,t,o){null!=e&&(e=e.filter((({variableName:e,dimensionName:t})=>e&&"*"!==e||t))).length&&(t[o]=e.map((e=>e.toJSON())))}readOperation(e,t){const o=t.mosaicOperation,r=t.mosaicOperator?.toLowerCase(),i=o||(r?y.toJSON(r):null);return y.fromJSON(i)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new w({ascending:this.ascending,itemRasterFunction:i(this.itemRasterFunction),lockRasterIds:i(this.lockRasterIds),method:this.method,multidimensionalDefinition:i(this.multidimensionalDefinition),objectIds:i(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:i(this.viewpoint),where:this.where})}};e([n({type:Boolean,json:{write:!0}})],f.prototype,"ascending",void 0),e([c("ascending",["ascending","sortAscending"])],f.prototype,"readAscending",null),e([n({type:h,json:{name:"itemRenderingRule",write:!0}})],f.prototype,"itemRasterFunction",void 0),e([n({type:h})],f.prototype,"itemRenderingRule",null),e([n({type:[d],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],f.prototype,"lockRasterIds",void 0),e([n({type:String,json:{type:M.jsonValues,write:{target:"mosaicMethod",writer:M.write}}})],f.prototype,"method",void 0),e([c("method",["mosaicMethod","defaultMosaicMethod"])],f.prototype,"readMethod",null),e([n({type:[u],json:{write:!0}})],f.prototype,"multidimensionalDefinition",void 0),e([p("multidimensionalDefinition")],f.prototype,"writeMultidimensionalDefinition",null),e([n({type:[d],json:{name:"fids",write:!0}})],f.prototype,"objectIds",void 0),e([n({json:{type:y.jsonValues,read:{reader:y.read},write:{target:"mosaicOperation",writer:y.write}}})],f.prototype,"operation",void 0),e([c("operation",["mosaicOperation","mosaicOperator"])],f.prototype,"readOperation",null),e([n({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],f.prototype,"sortField",void 0),e([n({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],f.prototype,"sortValue",void 0),e([a("sortValue")],f.prototype,"castSortValue",null),e([n({type:m,json:{write:!0}})],f.prototype,"viewpoint",void 0),e([n({type:String,json:{write:!0}})],f.prototype,"where",void 0),f=w=e([l("esri.layers.support.MosaicRule")],f);const j=f;export{j as default};
