/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../core/Error.js";import{MultiOriginJSONMixin as o}from"../core/MultiOriginJSONSupport.js";import{schedule as s}from"../core/scheduling.js";import{property as t}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/Logger.js";import"../core/RandomLCG.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";import p from"./Layer.js";import{PortalLayer as n}from"./mixins/PortalLayer.js";let a=class extends(n(o(p))){constructor(e){super(e),this.resourceInfo=null,this.persistenceEnabled=!0,this.type="unsupported"}initialize(){this.addResolvingPromise(new Promise(((e,o)=>{s((()=>{const e=this.resourceInfo&&(this.resourceInfo.layerType||this.resourceInfo.type);let s="Unsupported layer type";e&&(s+=" "+e),o(new r("layer:unsupported-layer-type",s,{layerType:e}))}))})))}read(e,r){const o={resourceInfo:e};null!=e.id&&(o.id=e.id),null!=e.title&&(o.title=e.title),super.read(o,r)}write(e,r){return Object.assign(e||{},this.resourceInfo,{id:this.id})}};e([t({readOnly:!0})],a.prototype,"resourceInfo",void 0),e([t({type:["show","hide"]})],a.prototype,"listMode",void 0),e([t({type:Boolean,readOnly:!1})],a.prototype,"persistenceEnabled",void 0),e([t({json:{read:!1},readOnly:!0,value:"unsupported"})],a.prototype,"type",void 0),a=e([i("esri.layers.UnsupportedLayer")],a);const l=a;export{l as default};
