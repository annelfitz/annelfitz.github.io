/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import{geometryTypes as o}from"../../geometry.js";import{JSONSupport as e}from"../../core/JSONSupport.js";import{clone as t}from"../../core/lang.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import{writer as m}from"../../core/accessorSupport/decorators/writer.js";import{getJsonType as i,fromJSON as a}from"../../geometry/support/jsonUtils.js";var c;let n=c=class extends e{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(r,o,e){null!=r&&(o.geometryType=i(r),o[e]={...r.toJSON(),spatialReference:void 0})}clone(){const r=t({geometry:this.geometry,rasterId:this.rasterId});return new c(r)}};r([s({types:o,json:{name:"fromGeometry",read:a,write:!0}})],n.prototype,"geometry",void 0),r([m("geometry")],n.prototype,"writeGeometry",null),r([s({json:{write:!0}})],n.prototype,"rasterId",void 0),n=c=r([p("esri.rest.support.MeasureFromImageParameters")],n);const y=n;export{y as default};
