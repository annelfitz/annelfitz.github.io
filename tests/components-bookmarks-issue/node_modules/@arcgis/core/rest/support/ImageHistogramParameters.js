/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{geometryTypes as r}from"../../geometry.js";import t from"../../TimeExtent.js";import{deprecatedProperty as o}from"../../core/deprecate.js";import{JSONSupport as s}from"../../core/JSONSupport.js";import{clone as i}from"../../core/lang.js";import n from"../../core/Logger.js";import{property as p}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import{writer as a}from"../../core/accessorSupport/decorators/writer.js";import{getJsonType as c,fromJSON as u}from"../../geometry/support/jsonUtils.js";import l from"../../layers/support/MosaicRule.js";import g from"../../layers/support/RasterFunction.js";import y from"../../geometry/Point.js";var j;let d=j=class extends s{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.rasterFunction=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,r,t){null!=e&&(r.geometryType=c(e),r[t]=e.toJSON())}get renderingRule(){return o(n.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(e){o(n.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}clone(){return new j(i({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};e([p({types:r,json:{read:u}})],d.prototype,"geometry",void 0),e([a("geometry")],d.prototype,"writeGeometry",null),e([p({type:l,json:{write:!0}})],d.prototype,"mosaicRule",void 0),e([p({type:g})],d.prototype,"renderingRule",null),e([p({type:g,json:{write:!0,name:"renderingRule"}})],d.prototype,"rasterFunction",void 0),e([p({type:y,json:{write:!0}})],d.prototype,"pixelSize",void 0),e([p({json:{write:!0}})],d.prototype,"raster",void 0),e([p({type:t,json:{read:{source:"time"},write:{target:"time"}}})],d.prototype,"timeExtent",void 0),d=j=e([m("esri.rest.support.ImageHistogramParameters")],d);const h=d;export{h as default};
