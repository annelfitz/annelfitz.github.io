/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../TimeExtent.js";import{deprecatedProperty as r}from"../../core/deprecate.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{clone as i}from"../../core/lang.js";import n from"../../core/Logger.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{writer as u}from"../../core/accessorSupport/decorators/writer.js";import a from"../../geometry/Point.js";import{getJsonType as p}from"../../geometry/support/jsonUtils.js";import m from"../../layers/support/MosaicRule.js";import c from"../../layers/support/RasterFunction.js";var y;let g=y=class extends o{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(t,e,r){null!=t&&(e.geometryType=p(t),e[r]=JSON.stringify(t.toJSON()))}set mosaicRule(t){let e=t;e?.mosaicMethod&&(e=m.fromJSON({...e.toJSON(),mosaicMethod:e.mosaicMethod,mosaicOperation:e.mosaicOperation})),this._set("mosaicRule",e)}writeMosaicRule(t,e,r){null!=t&&(e[r]=JSON.stringify(t.toJSON()))}get renderingRule(){return r(n.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(t){r(n.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",t)}get renderingRules(){return r(n.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._get("rasterFunctions")}set renderingRules(t){r(n.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._set("rasterFunctions",t)}set rasterFunction(t){let e=t;e?.rasterFunction&&(e=c.fromJSON({...e.toJSON(),rasterFunction:e.rasterFunction,rasterFunctionArguments:e.rasterFunctionArguments})),this._set("rasterFunction",e)}writeRasterFunction(t,e,r){null!=t&&(e[r]=JSON.stringify(t.toJSON())),t.rasterFunctionDefinition&&(e[r]=JSON.stringify(t.rasterFunctionDefinition))}writeRasterFunctions(t,e,r){null!=t&&(e[r]=JSON.stringify(t.map((t=>t.rasterFunctionDefinition||t.toJSON()))))}writePixelSize(t,e,r){null!=t&&(e[r]=JSON.stringify(t))}writeTimeExtent(t,e,r){if(null!=t){const o=null!=t.start?t.start.getTime():null,i=null!=t.end?t.end.getTime():null;e[r]=null!=o?null!=i?`${o},${i}`:`${o}`:null}}clone(){return new y(i({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};t([s({json:{write:!0}})],g.prototype,"geometry",void 0),t([u("geometry")],g.prototype,"writeGeometry",null),t([s({type:m,json:{write:!0}})],g.prototype,"mosaicRule",null),t([u("mosaicRule")],g.prototype,"writeMosaicRule",null),t([s({type:c})],g.prototype,"renderingRule",null),t([s({type:[c]})],g.prototype,"renderingRules",null),t([s({type:c,json:{write:!0,name:"renderingRule"}})],g.prototype,"rasterFunction",null),t([u("rasterFunction")],g.prototype,"writeRasterFunction",null),t([s({type:[c],json:{write:!0,name:"renderingRules"}})],g.prototype,"rasterFunctions",void 0),t([u("rasterFunctions")],g.prototype,"writeRasterFunctions",null),t([s({type:a,json:{write:!0}})],g.prototype,"pixelSize",void 0),t([u("pixelSize")],g.prototype,"writePixelSize",null),t([s({type:Boolean,json:{write:!0}})],g.prototype,"returnGeometry",void 0),t([s({type:Boolean,json:{write:!0}})],g.prototype,"returnCatalogItems",void 0),t([s({type:Boolean,json:{write:!0}})],g.prototype,"returnPixelValues",void 0),t([s({type:Number,json:{write:!0}})],g.prototype,"maxItemCount",void 0),t([s({type:e,json:{write:{target:"time"}}})],g.prototype,"timeExtent",void 0),t([u("timeExtent")],g.prototype,"writeTimeExtent",null),t([s({json:{write:!0}})],g.prototype,"raster",void 0),t([s({json:{write:!0}})],g.prototype,"viewId",void 0),t([s({type:Boolean,json:{write:!0}})],g.prototype,"processAsMultidimensional",void 0),g=y=t([l("esri.rest.support.ImageIdentifyParameters")],g);const d=g;export{d as default};
