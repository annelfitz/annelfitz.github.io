/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{JSONSupport as e}from"../../core/JSONSupport.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{reader as o}from"../../core/accessorSupport/decorators/reader.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{writer as i}from"../../core/accessorSupport/decorators/writer.js";import{impedanceAttributeNameJsonMap as p}from"./networkEnums.js";import u from"./TravelMode.js";let a=class extends e{constructor(t){super(t),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(t){return null==t?null:t.map((t=>p.fromJSON(t)))}writeAccumulateAttributes(t,e,r){t?.length&&(e[r]=t.map((t=>p.toJSON(t))))}};t([r({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],a.prototype,"accumulateAttributes",void 0),t([o("accumulateAttributes")],a.prototype,"readAccumulateAttributes",null),t([i("accumulateAttributes")],a.prototype,"writeAccumulateAttributes",null),t([r({type:String,json:{write:!0}})],a.prototype,"directionsLanguage",void 0),t([r({type:Boolean,json:{write:!0}})],a.prototype,"findBestSequence",void 0),t([r({type:Boolean,json:{write:!0}})],a.prototype,"preserveFirstStop",void 0),t([r({type:Boolean,json:{write:!0}})],a.prototype,"preserveLastStop",void 0),t([r({type:Boolean,json:{write:!0}})],a.prototype,"startTimeIsUTC",void 0),t([r({type:Boolean,json:{write:!0}})],a.prototype,"timeWindowsAreUTC",void 0),t([r({type:u,json:{write:!0}})],a.prototype,"travelMode",void 0),a=t([s("esri.rest.support.RouteSettings")],a);const c=a;export{c as default};
