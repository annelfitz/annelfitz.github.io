/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import{JSONSupport as e}from"../../../core/JSONSupport.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{reader as t}from"../../../core/accessorSupport/decorators/reader.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import{writer as s}from"../../../core/accessorSupport/decorators/writer.js";import{associationTypeKebabDict as n}from"../../../networks/support/typeUtils.js";import m from"./NetworkElement.js";import i from"../../../geometry/Polyline.js";let p=class extends e{constructor(o){super(o),this.globalId=null,this.associationType=null,this.fromNetworkElement=null,this.toNetworkElement=null,this.geometry=null,this.errorMessage=null,this.percentAlong=null,this.errorCode=null,this.isContentVisible=null,this.status=null}readFromNetworkElement(o,e){return new m({globalId:e.fromGlobalId,networkSourceId:e.fromNetworkSourceId,terminalId:e.fromTerminalId})}writeFromNetworkElement(o,e){o&&(e.fromGlobalId=o.globalId,e.fromNetworkSourceId=o.networkSourceId,e.fromTerminalId=o.terminalId)}readToNetworkElement(o,e){return new m({globalId:e.toGlobalId,networkSourceId:e.toNetworkSourceId,terminalId:e.toTerminalId})}writeToNetworkElement(o,e){o&&(e.toGlobalId=o.globalId,e.toNetworkSourceId=o.networkSourceId,e.toTerminalId=o.terminalId)}};o([r({type:String,json:{write:!0}})],p.prototype,"globalId",void 0),o([r({type:n.apiValues,json:{type:n.jsonValues,read:n.read,write:n.write}})],p.prototype,"associationType",void 0),o([r({type:m,json:{write:{target:{fromGlobalId:{type:String},fromNetworkSourceId:{type:Number},fromTerminalId:{type:Number}}},read:{source:["fromGlobalId","fromNetworkSourceId","fromTerminalId"]}}})],p.prototype,"fromNetworkElement",void 0),o([t("fromNetworkElement")],p.prototype,"readFromNetworkElement",null),o([s("fromNetworkElement")],p.prototype,"writeFromNetworkElement",null),o([r({type:m,json:{write:{target:{toGlobalId:{type:String},toNetworkSourceId:{type:Number},toTerminalId:{type:Number}}},read:{source:["toGlobalId","toNetworkSourceId","toTerminalId"]}}})],p.prototype,"toNetworkElement",void 0),o([t("toNetworkElement")],p.prototype,"readToNetworkElement",null),o([s("toNetworkElement")],p.prototype,"writeToNetworkElement",null),o([r({type:i,json:{write:!0}})],p.prototype,"geometry",void 0),o([r({type:String,json:{write:!0}})],p.prototype,"errorMessage",void 0),o([r({type:Number,json:{write:!0}})],p.prototype,"percentAlong",void 0),o([r({type:Number,json:{write:!0}})],p.prototype,"errorCode",void 0),o([r({type:Boolean,json:{write:!0}})],p.prototype,"isContentVisible",void 0),o([r({type:Number,json:{write:!0}})],p.prototype,"status",void 0),p=o([l("esri.rest.networks.support.Association")],p);const d=p;export{d as default};
