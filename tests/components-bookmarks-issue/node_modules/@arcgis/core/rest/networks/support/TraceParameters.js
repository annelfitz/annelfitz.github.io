/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{JSONSupport as o}from"../../../core/JSONSupport.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import{ensureClass as e}from"../../../core/accessorSupport/ensureType.js";import"../../../core/RandomLCG.js";import"../../../core/has.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import i from"../../../geometry/SpatialReference.js";import{traceTypeKebabDict as p}from"../../../networks/support/typeUtils.js";import a from"../../../networks/support/UNTraceConfiguration.js";import n from"./TraceLocation.js";var c;let l=c=class extends o{static from(t){return e(c,t)}constructor(t){super(t),this.namedTraceConfigurationGlobalId=null,this.gdbVersion=null,this.traceLocations=[],this.moment=null,this.outSpatialReference=null,this.traceConfiguration=null,this.resultTypes=null,this.traceType=null}};t([r({type:String,json:{read:{source:"traceConfigurationGlobalId"},write:{target:"traceConfigurationGlobalId"}}})],l.prototype,"namedTraceConfigurationGlobalId",void 0),t([r({type:String,json:{write:!0}})],l.prototype,"gdbVersion",void 0),t([r({type:[n],json:{write:!0}})],l.prototype,"traceLocations",void 0),t([r({type:Date,json:{type:Number,write:{writer:(t,o)=>{o.moment=t?t.getTime():null}}}})],l.prototype,"moment",void 0),t([r({type:i,json:{read:!1}})],l.prototype,"outSpatialReference",void 0),t([r({type:a,json:{write:!0}})],l.prototype,"traceConfiguration",void 0),t([r({type:[Object],json:{write:!0}})],l.prototype,"resultTypes",void 0),t([r({type:p.apiValues,json:{type:p.jsonValues,read:p.read,write:p.write}})],l.prototype,"traceType",void 0),l=c=t([s("esri.rest.networks.support.TraceParameters")],l);const u=l;export{u as default};
