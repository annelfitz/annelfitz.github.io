import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type TimeSlider from "@arcgis/core/widgets/TimeSlider";
import type { ArcgisReferenceElement, WidgetElement } from "../../utils/component-utils";
import type { ArcGISMapView, ArcGISSceneView } from "../types";
export type TimeSliderWidget = InstanceType<typeof TimeSlider>;
export declare class ArcgisTimeSlider implements WidgetElement {
    el: HTMLDivElement;
    childElem: HTMLDivElement;
    referenceElement: ArcgisReferenceElement | string;
    referenceElementWatcher(value: ArcgisReferenceElement | string): void;
    actions: TimeSliderWidget["actions"];
    actionsWatcher(value: TimeSliderWidget["actions"]): void;
    disabled: boolean;
    disabledWatcher(value: boolean, old: boolean): void;
    effectiveStops: TimeSliderWidget["effectiveStops"];
    fullTimeExtent: TimeSliderWidget["fullTimeExtent"];
    fullTimeExtentWatcher(value: TimeSliderWidget["fullTimeExtent"]): void;
    layout: TimeSliderWidget["layout"];
    layoutWatcher(value: TimeSliderWidget["layout"]): void;
    loop: boolean;
    loopWatcher(value: boolean): void;
    mode: TimeSliderWidget["mode"];
    modeWatcher(value: TimeSliderWidget["mode"]): void;
    playRate: number;
    playRateWatcher(value: number): void;
    stops: TimeSliderWidget["stops"];
    stopsWatcher(value: TimeSliderWidget["stops"]): void;
    tickConfigs: TimeSliderWidget["tickConfigs"];
    tickConfigsWatcher(value: TimeSliderWidget["tickConfigs"]): void;
    timeExtent: TimeSliderWidget["timeExtent"];
    timeExtentWatcher(value: TimeSliderWidget["timeExtent"]): void;
    timeVisible: boolean;
    timeVisibleWatcher(value: boolean): void;
    timeZone: TimeSliderWidget["timeZone"];
    timeZoneWatcher(value: TimeSliderWidget["timeZone"]): void;
    position: string;
    positionWatcher(value: string): void;
    /**
     * Internal view of the component.
     *
     * @internal
     */
    view: ArcGISMapView | ArcGISSceneView;
    viewWatcher(value: ArcGISMapView | ArcGISSceneView): void;
    /**
     * Internal widget of the component.
     *
     * @internal
     */
    widget: TimeSliderWidget;
    _watchHandles: __esri.WatchHandle[];
    arcgisTimeSliderReady: EventEmitter<void>;
    arcgisPropertyChange: EventEmitter<{
        name: string;
    }>;
    timeSliderTriggerAction: EventEmitter<__esri.TimeSliderTriggerActionEvent>;
    next(): Promise<void>;
    play(): Promise<void>;
    previous(): Promise<void>;
    stop(): Promise<void>;
    updateWebDocument(webmap: __esri.WebMap): Promise<void>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _addContainer;
    private _addWatchers;
    private _createParams;
    private _proxyEvents;
}
