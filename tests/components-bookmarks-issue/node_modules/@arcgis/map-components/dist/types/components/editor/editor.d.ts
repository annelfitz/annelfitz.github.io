import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type Editor from "@arcgis/core/widgets/Editor";
import type { ArcgisReferenceElement, WidgetElement } from "../../utils/component-utils";
import type { ArcGISGraphic, ArcGISMapView, ArcGISSceneView } from "../types";
export type EditorWidget = InstanceType<typeof Editor>;
export declare class ArcgisEditor implements WidgetElement {
    el: HTMLDivElement;
    childElem: HTMLDivElement;
    referenceElement: ArcgisReferenceElement | string;
    referenceElementWatcher(value: ArcgisReferenceElement | string): void;
    activeWorkflow: EditorWidget["activeWorkflow"];
    allowedWorkflows: EditorWidget["allowedWorkflows"];
    allowedWorkflowsWatcher(value: EditorWidget["allowedWorkflows"]): void;
    icon: EditorWidget["icon"];
    iconWatcher(value: EditorWidget["icon"]): void;
    labelOptions: EditorWidget["labelOptions"];
    labelOptionsWatcher(value: EditorWidget["labelOptions"]): void;
    layerInfos: EditorWidget["layerInfos"];
    layerInfosWatcher(value: EditorWidget["layerInfos"]): void;
    snappingOptions: EditorWidget["snappingOptions"];
    snappingOptionsWatcher(value: EditorWidget["snappingOptions"]): void;
    supportingWidgetDefaults: EditorWidget["supportingWidgetDefaults"];
    supportingWidgetDefaultsWatcher(value: EditorWidget["supportingWidgetDefaults"]): void;
    tooltipOptions: EditorWidget["tooltipOptions"];
    tooltipOptionsWatcher(value: EditorWidget["tooltipOptions"]): void;
    visibleElementsCreateFeaturesSection: boolean;
    visibleElementsCreateFeaturesSectionWatcher(value: boolean): void;
    visibleElementsEditFeaturesSection: boolean;
    visibleElementsEditFeaturesSectionWatcher(value: boolean): void;
    visibleElementsLabelsToggle: boolean;
    visibleElementsLabelsToggleWatcher(value: boolean): void;
    visibleElementsTooltipsToggle: boolean;
    visibleElementsTooltipsToggleWatcher(value: boolean): void;
    visibleElementsSnappingControls: boolean;
    visibleElementsSnappingControlsWatcher(value: boolean): void;
    visibleElementsSnappingControlsHeader: boolean;
    visibleElementsSnappingControlsHeaderWatcher(value: boolean): void;
    visibleElementsSnappingControlsEnabledToggle: boolean;
    visibleElementsSnappingControlsEnabledToggleWatcher(value: boolean): void;
    visibleElementsSnappingControlsSelfEnabledToggle: boolean;
    visibleElementsSnappingControlsSelfEnabledToggleWatcher(value: boolean): void;
    visibleElementsSnappingControlsFeatureEnabledToggle: boolean;
    visibleElementsSnappingControlsFeatureEnabledToggleWatcher(value: boolean): void;
    visibleElementsSnappingControlsLayerList: boolean;
    visibleElementsSnappingControlsLayerListWatcher(value: boolean): void;
    position: string;
    positionWatcher(value: string): void;
    /**
     * Internal view of the component.
     *
     * @internal
     */
    view: ArcGISMapView | ArcGISSceneView;
    viewWatcher(value: ArcGISMapView | ArcGISSceneView): void;
    /**
     * Internal widget of the component.
     *
     * @internal
     */
    widget: EditorWidget;
    _watchHandles: __esri.WatchHandle[];
    arcgisEditorReady: EventEmitter<void>;
    arcgisPropertyChange: EventEmitter<{
        name: string;
    }>;
    cancelWorkflow(): Promise<void>;
    deleteFeatureFromWorkflow(): Promise<void>;
    startCreateFeaturesWorkflowAtFeatureCreation(info: __esri.CreationInfo): Promise<void>;
    startCreateFeaturesWorkflowAtFeatureTypeSelection(): Promise<void>;
    startUpdateWorkflowAtFeatureEdit(feature: ArcGISGraphic): Promise<void>;
    startUpdateWorkflowAtFeatureSelection(): Promise<void>;
    startUpdateWorkflowAtMultipleFeatureSelection(candidates: ArcGISGraphic[]): Promise<void>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _addContainer;
    private _addWatchers;
    private _createParams;
}
