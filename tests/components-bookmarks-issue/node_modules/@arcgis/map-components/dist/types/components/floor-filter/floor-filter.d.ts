import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type FloorFilter from "@arcgis/core/widgets/FloorFilter";
import type { ArcgisReferenceElement, WidgetElement } from "../../utils/component-utils";
import type { ArcGISMapView, ArcGISSceneView } from "../types";
export type FloorFilterWidget = InstanceType<typeof FloorFilter>;
export declare class ArcgisFloorFilter implements WidgetElement {
    el: HTMLDivElement;
    childElem: HTMLDivElement;
    referenceElement: ArcgisReferenceElement | string;
    referenceElementWatcher(value: ArcgisReferenceElement | string): void;
    facility: FloorFilterWidget["facility"];
    facilityWatcher(value: FloorFilterWidget["facility"]): void;
    level: FloorFilterWidget["level"];
    levelWatcher(value: FloorFilterWidget["level"]): void;
    longNames: boolean;
    longNamesWatcher(value: boolean): void;
    site: FloorFilterWidget["site"];
    siteWatcher(value: FloorFilterWidget["site"]): void;
    position: string;
    positionWatcher(value: string): void;
    /**
     * Internal view of the component.
     *
     * @internal
     */
    view: ArcGISMapView | ArcGISSceneView;
    viewWatcher(value: ArcGISMapView | ArcGISSceneView): void;
    /**
     * Internal widget of the component.
     *
     * @internal
     */
    widget: FloorFilterWidget;
    _watchHandles: __esri.WatchHandle[];
    arcgisFloorFilterReady: EventEmitter<void>;
    updateWebDocument(webmap: __esri.WebMap): Promise<void>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _addContainer;
    private _addWatchers;
    private _createParams;
}
