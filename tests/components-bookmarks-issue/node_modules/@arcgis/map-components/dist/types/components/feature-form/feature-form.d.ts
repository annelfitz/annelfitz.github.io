import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type FeatureForm from "@arcgis/core/widgets/FeatureForm";
import type { ArcgisReferenceElement } from "../../utils/component-utils";
import type { ExpandableComponent } from "../../utils/expandable";
import type { ArcGISMapView, ArcGISSceneView } from "../types";
export type FeatureFormWidget = InstanceType<typeof FeatureForm>;
export declare class ArcgisFeatureForm implements ExpandableComponent {
    el: HTMLDivElement;
    childElem: HTMLDivElement;
    expandElem: HTMLArcgisExpandElement;
    referenceElement: ArcgisReferenceElement | string;
    referenceElementWatcher(newValue: ArcgisReferenceElement | string): void;
    position: string;
    positionWatcher(newValue: string): void;
    expandable: boolean;
    feature: FeatureFormWidget["feature"];
    featureWatcher(newValue: FeatureFormWidget["feature"]): void;
    formTemplate: FeatureFormWidget["formTemplate"];
    formTemplateWatcher(newValue: FeatureFormWidget["formTemplate"]): void;
    groupDisplay: FeatureFormWidget["groupDisplay"];
    groupDisplayWatcher(newValue: FeatureFormWidget["groupDisplay"]): void;
    layer: FeatureFormWidget["layer"];
    layerWatcher(newValue: FeatureFormWidget["layer"]): void;
    timeZone: FeatureFormWidget["timeZone"];
    timeZoneWatcher(newValue: FeatureFormWidget["timeZone"]): void;
    view: ArcGISMapView | ArcGISSceneView;
    viewWatcher(newValue: ArcGISMapView | ArcGISSceneView): void;
    widget: FeatureFormWidget;
    _watchHandles: __esri.WatchHandle[];
    widgetReady: EventEmitter<{
        widget: __esri.FeatureForm;
    }>;
    featureFormSubmit: EventEmitter<__esri.FeatureFormSubmitEvent>;
    featureFormValueChange: EventEmitter<__esri.FeatureFormValueChangeEvent>;
    getValues(): Promise<any>;
    submit(): Promise<void>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _createParams;
    private _proxyEvents;
}
