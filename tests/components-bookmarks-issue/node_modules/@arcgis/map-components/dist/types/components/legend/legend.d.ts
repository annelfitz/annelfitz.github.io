import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type Legend from "@arcgis/core/widgets/Legend";
import type { ArcgisReferenceElement, WidgetElement } from "../../utils/component-utils";
import type { ArcGISMapView, ArcGISSceneView } from "../types";
export type LegendWidget = InstanceType<typeof Legend>;
export declare class ArcgisLegend implements WidgetElement {
    el: HTMLDivElement;
    childElem: HTMLDivElement;
    referenceElement: ArcgisReferenceElement | string;
    referenceElementWatcher(value: ArcgisReferenceElement | string): void;
    activeLayerInfos: LegendWidget["activeLayerInfos"];
    activeLayerInfosWatcher(value: LegendWidget["activeLayerInfos"]): void;
    basemapLegendVisible: boolean;
    basemapLegendVisibleWatcher(value: boolean): void;
    hideLayersNotInCurrentView: boolean;
    hideLayersNotInCurrentViewWatcher(value: boolean): void;
    icon: LegendWidget["icon"];
    iconWatcher(value: LegendWidget["icon"]): void;
    respectLayerVisibilityDisabled: boolean;
    respectLayerVisibilityDisabledWatcher(value: boolean): void;
    legendStyle: LegendWidget["style"];
    styleWatcher(value: LegendWidget["style"]): void;
    position: string;
    positionWatcher(value: string): void;
    /**
     * Internal view of the component.
     *
     * @internal
     */
    view: ArcGISMapView | ArcGISSceneView;
    viewWatcher(value: ArcGISMapView | ArcGISSceneView): void;
    /**
     * Internal widget of the component.
     *
     * @internal
     */
    widget: LegendWidget;
    _watchHandles: __esri.WatchHandle[];
    arcgisLegendReady: EventEmitter<void>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _addContainer;
    private _addWatchers;
    private _createParams;
}
