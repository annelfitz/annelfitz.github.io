import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type CoordinateConversion from "@arcgis/core/widgets/CoordinateConversion";
import type { ArcgisReferenceElement, WidgetElement } from "../../utils/component-utils";
import type { ArcGISMapView, ArcGISSceneView } from "../types";
export type CoordinateConversionWidget = InstanceType<typeof CoordinateConversion>;
export declare class ArcgisCoordinateConversion implements WidgetElement {
    el: HTMLDivElement;
    childElem: HTMLDivElement;
    referenceElement: ArcgisReferenceElement | string;
    referenceElementWatcher(value: ArcgisReferenceElement | string): void;
    conversions: CoordinateConversionWidget["conversions"];
    conversionsWatcher(value: CoordinateConversionWidget["conversions"]): void;
    currentLocation: CoordinateConversionWidget["currentLocation"];
    formats: CoordinateConversionWidget["formats"];
    formatsWatcher(value: CoordinateConversionWidget["formats"]): void;
    icon: CoordinateConversionWidget["icon"];
    iconWatcher(value: CoordinateConversionWidget["icon"]): void;
    locationSymbol: CoordinateConversionWidget["locationSymbol"];
    locationSymbolWatcher(value: CoordinateConversionWidget["locationSymbol"]): void;
    mode: CoordinateConversionWidget["mode"];
    modeWatcher(value: CoordinateConversionWidget["mode"]): void;
    multipleConversions: boolean;
    multipleConversionsWatcher(value: boolean): void;
    orientation: CoordinateConversionWidget["orientation"];
    orientationWatcher(value: CoordinateConversionWidget["orientation"]): void;
    storageEnabled: boolean;
    storageEnabledWatcher(value: boolean): void;
    storageType: CoordinateConversionWidget["storageType"];
    storageTypeWatcher(value: CoordinateConversionWidget["storageType"]): void;
    visibleElementsSettingsButton: boolean;
    visibleElementsSettingsButtonWatcher(value: boolean): void;
    visibleElementsEditButton: boolean;
    visibleElementsEditButtonWatcher(value: boolean): void;
    visibleElementsExpandButton: boolean;
    visibleElementsExpandButtonWatcher(value: boolean): void;
    visibleElementsCaptureButton: boolean;
    visibleElementsCaptureButtonWatcher(value: boolean): void;
    position: string;
    positionWatcher(value: string): void;
    /**
     * Internal view of the component.
     *
     * @internal
     */
    view: ArcGISMapView | ArcGISSceneView;
    viewWatcher(value: ArcGISMapView | ArcGISSceneView): void;
    /**
     * Internal widget of the component.
     *
     * @internal
     */
    widget: CoordinateConversionWidget;
    _watchHandles: __esri.WatchHandle[];
    arcgisCoordinateConversionReady: EventEmitter<void>;
    arcgisPropertyChange: EventEmitter<{
        name: string;
    }>;
    reverseConvert(coordinate: string, format: __esri.Format): Promise<__esri.Point>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _addContainer;
    private _addWatchers;
    private _createParams;
}
