import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type ShadowCast from "@arcgis/core/widgets/ShadowCast";
import type { ArcgisReferenceElement, WidgetElement } from "../../utils/component-utils";
import type { ArcGISSceneView } from "../types";
export type ShadowCastWidget = InstanceType<typeof ShadowCast>;
export declare class ArcgisShadowCast implements WidgetElement {
    el: HTMLDivElement;
    childElem: HTMLDivElement;
    referenceElement: ArcgisReferenceElement | string;
    referenceElementWatcher(value: ArcgisReferenceElement | string): void;
    discreteOptions: ShadowCastWidget["viewModel"]["discreteOptions"];
    discreteOptionsWatcher(value: ShadowCastWidget["viewModel"]["discreteOptions"]): void;
    durationOptions: ShadowCastWidget["viewModel"]["durationOptions"];
    durationOptionsWatcher(value: ShadowCastWidget["viewModel"]["durationOptions"]): void;
    endTimeOfDay: number;
    endTimeOfDayWatcher(value: number): void;
    startTimeOfDay: number;
    startTimeOfDayWatcher(value: number): void;
    thresholdOptions: ShadowCastWidget["viewModel"]["thresholdOptions"];
    thresholdOptionsWatcher(value: ShadowCastWidget["viewModel"]["thresholdOptions"]): void;
    utcOffset: number;
    utcOffsetWatcher(value: number): void;
    visualizationType: ShadowCastWidget["viewModel"]["visualizationType"];
    visualizationTypeWatcher(value: ShadowCastWidget["viewModel"]["visualizationType"]): void;
    icon: ShadowCastWidget["icon"];
    iconWatcher(value: ShadowCastWidget["icon"]): void;
    visibleElementsTimeRangeSlider: boolean;
    visibleElementsTimeRangeSliderWatcher(value: boolean): void;
    visibleElementsTimezone: boolean;
    visibleElementsTimezoneWatcher(value: boolean): void;
    visibleElementsDatePicker: boolean;
    visibleElementsDatePickerWatcher(value: boolean): void;
    visibleElementsVisualizationOptions: boolean;
    visibleElementsVisualizationOptionsWatcher(value: boolean): void;
    visibleElementsColorPicker: boolean;
    visibleElementsColorPickerWatcher(value: boolean): void;
    visibleElementsTooltip: boolean;
    visibleElementsTooltipWatcher(value: boolean): void;
    position: string;
    positionWatcher(value: string): void;
    /**
     * Internal view of the component.
     *
     * @internal
     */
    view: ArcGISSceneView;
    viewWatcher(value: ArcGISSceneView): void;
    /**
     * Internal widget of the component.
     *
     * @internal
     */
    widget: ShadowCastWidget;
    _watchHandles: __esri.WatchHandle[];
    arcgisShadowCastReady: EventEmitter<void>;
    getDuration(point: __esri.Point): Promise<number>;
    start(): Promise<void>;
    stop(): Promise<void>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _addContainer;
    private _createParams;
    private _setViewModelParams;
}
