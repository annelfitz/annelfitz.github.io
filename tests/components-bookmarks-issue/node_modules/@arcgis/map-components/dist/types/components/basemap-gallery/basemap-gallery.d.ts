import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type BasemapGallery from "@arcgis/core/widgets/BasemapGallery";
import type { ArcgisReferenceElement, WidgetElement } from "../../utils/component-utils";
import type { ArcGISMapView, ArcGISSceneView } from "../types";
export type BasemapGalleryWidget = InstanceType<typeof BasemapGallery>;
export declare class ArcgisBasemapGallery implements WidgetElement {
    el: HTMLDivElement;
    childElem: HTMLDivElement;
    referenceElement: ArcgisReferenceElement | string;
    referenceElementWatcher(value: ArcgisReferenceElement | string): void;
    activeBasemap: BasemapGalleryWidget["activeBasemap"];
    disabled: boolean;
    disabledWatcher(value: boolean, old: boolean): void;
    icon: BasemapGalleryWidget["icon"];
    iconWatcher(value: BasemapGalleryWidget["icon"]): void;
    source: BasemapGalleryWidget["source"];
    sourceWatcher(value: BasemapGalleryWidget["source"]): void;
    position: string;
    positionWatcher(value: string): void;
    /**
     * Internal view of the component.
     *
     * @internal
     */
    view: ArcGISMapView | ArcGISSceneView;
    viewWatcher(value: ArcGISMapView | ArcGISSceneView): void;
    /**
     * Internal widget of the component.
     *
     * @internal
     */
    widget: BasemapGalleryWidget;
    _watchHandles: __esri.WatchHandle[];
    arcgisBasemapGalleryReady: EventEmitter<void>;
    arcgisPropertyChange: EventEmitter<{
        name: string;
    }>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _addContainer;
    private _addWatchers;
    private _createParams;
}
