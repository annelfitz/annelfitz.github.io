import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type Feature from "@arcgis/core/widgets/Feature";
import type { ArcgisReferenceElement, WidgetElement } from "../../utils/component-utils";
import type { ArcGISMapView, ArcGISSceneView } from "../types";
export type FeatureWidget = InstanceType<typeof Feature>;
export declare class ArcgisFeature implements WidgetElement {
    el: HTMLDivElement;
    childElem: HTMLDivElement;
    referenceElement: ArcgisReferenceElement | string;
    referenceElementWatcher(value: ArcgisReferenceElement | string): void;
    defaultPopupTemplateEnabled: boolean;
    defaultPopupTemplateEnabledWatcher(value: boolean): void;
    graphic: FeatureWidget["graphic"];
    graphicWatcher(value: FeatureWidget["graphic"]): void;
    location: __esri.Point;
    locationWatcher(value: __esri.Point): void;
    map: FeatureWidget["map"];
    spatialReference: FeatureWidget["spatialReference"];
    spatialReferenceWatcher(value: FeatureWidget["spatialReference"]): void;
    visibleElementsTitle: boolean;
    visibleElementsTitleWatcher(value: boolean): void;
    visibleElementsContentAttachments: boolean;
    visibleElementsContentAttachmentsWatcher(value: boolean): void;
    visibleElementsContentFields: boolean;
    visibleElementsContentFieldsWatcher(value: boolean): void;
    visibleElementsContentMedia: boolean;
    visibleElementsContentMediaWatcher(value: boolean): void;
    visibleElementsContentText: boolean;
    visibleElementsContentTextWatcher(value: boolean): void;
    visibleElementsContentExpression: boolean;
    visibleElementsContentExpressionWatcher(value: boolean): void;
    visibleElementsLastEditInfo: boolean;
    visibleElementsLastEditInfoWatcher(value: boolean): void;
    position: string;
    positionWatcher(value: string): void;
    /**
     * Internal view of the component.
     *
     * @internal
     */
    view: ArcGISMapView | ArcGISSceneView;
    viewWatcher(value: ArcGISMapView | ArcGISSceneView): void;
    /**
     * Internal widget of the component.
     *
     * @internal
     */
    widget: FeatureWidget;
    _watchHandles: __esri.WatchHandle[];
    arcgisFeatureReady: EventEmitter<void>;
    nextMedia(contentElementIndex: number): Promise<void>;
    previousMedia(contentElementIndex: number): Promise<void>;
    setActiveMedia(contentElementIndex: number, mediaInfoIndex: number): Promise<void>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _addContainer;
    private _addWatchers;
    private _createParams;
    private _setViewModelParams;
}
