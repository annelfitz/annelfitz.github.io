import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type BuildingExplorer from "@arcgis/core/widgets/BuildingExplorer";
import type { ArcgisReferenceElement, WidgetElement } from "../../utils/component-utils";
import type { ArcGISSceneView } from "../types";
export type BuildingExplorerWidget = InstanceType<typeof BuildingExplorer>;
export declare class ArcgisBuildingExplorer implements WidgetElement {
    el: HTMLDivElement;
    childElem: HTMLDivElement;
    referenceElement: ArcgisReferenceElement | string;
    referenceElementWatcher(value: ArcgisReferenceElement | string): void;
    icon: BuildingExplorerWidget["icon"];
    iconWatcher(value: BuildingExplorerWidget["icon"]): void;
    layers: BuildingExplorerWidget["layers"];
    layersWatcher(value: BuildingExplorerWidget["layers"]): void;
    level: BuildingExplorerWidget["viewModel"]["level"];
    phase: BuildingExplorerWidget["viewModel"]["phase"];
    state: BuildingExplorerWidget["viewModel"]["state"];
    visibleElementsLevels: boolean;
    visibleElementsLevelsWatcher(value: boolean): void;
    visibleElementsPhases: boolean;
    visibleElementsPhasesWatcher(value: boolean): void;
    visibleElementsDisciplines: boolean;
    visibleElementsDisciplinesWatcher(value: boolean): void;
    position: string;
    positionWatcher(value: string): void;
    /**
     * Internal view of the component.
     *
     * @internal
     */
    view: ArcGISSceneView;
    viewWatcher(value: ArcGISSceneView): void;
    /**
     * Internal widget of the component.
     *
     * @internal
     */
    widget: BuildingExplorerWidget;
    _watchHandles: __esri.WatchHandle[];
    arcgisBuildingExplorerReady: EventEmitter<void>;
    arcgisPropertyChange: EventEmitter<{
        name: string;
    }>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _addContainer;
    private _addWatchers;
    private _createParams;
}
