import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type AreaMeasurement3D from "@arcgis/core/widgets/AreaMeasurement3D";
import type { ArcgisReferenceElement, WidgetElement } from "../../utils/component-utils";
import type { ArcGISSceneView } from "../types";
export type AreaMeasurement3dWidget = InstanceType<typeof AreaMeasurement3D>;
export declare class ArcgisAreaMeasurement3d implements WidgetElement {
    el: HTMLDivElement;
    childElem: HTMLDivElement;
    referenceElement: ArcgisReferenceElement | string;
    referenceElementWatcher(value: ArcgisReferenceElement | string): void;
    analysis: AreaMeasurement3dWidget["analysis"];
    icon: AreaMeasurement3dWidget["icon"];
    iconWatcher(value: AreaMeasurement3dWidget["icon"]): void;
    unit: AreaMeasurement3dWidget["unit"];
    unitWatcher(value: AreaMeasurement3dWidget["unit"]): void;
    unitOptions: AreaMeasurement3dWidget["unitOptions"];
    position: string;
    positionWatcher(value: string): void;
    /**
     * Internal view of the component.
     *
     * @internal
     */
    view: ArcGISSceneView;
    viewWatcher(value: ArcGISSceneView): void;
    /**
     * Internal widget of the component.
     *
     * @internal
     */
    widget: AreaMeasurement3dWidget;
    _watchHandles: __esri.WatchHandle[];
    arcgisAreaMeasurement3dReady: EventEmitter<void>;
    arcgisPropertyChange: EventEmitter<{
        name: string;
    }>;
    clear(): Promise<void>;
    start(): Promise<void>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _addWatchers;
    private _createParams;
}
