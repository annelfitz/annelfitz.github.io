import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type UtilityNetworkTrace from "@arcgis/core/widgets/UtilityNetworkTrace";
import type { ArcgisReferenceElement, WidgetElement } from "../../utils/component-utils";
import type { ArcGISMapView } from "../types";
export type UtilityNetworkTraceWidget = InstanceType<typeof UtilityNetworkTrace>;
export declare class ArcgisUtilityNetworkTrace implements WidgetElement {
    el: HTMLDivElement;
    childElem: HTMLDivElement;
    referenceElement: ArcgisReferenceElement | string;
    referenceElementWatcher(value: ArcgisReferenceElement | string): void;
    enableResultArea: boolean;
    enableResultAreaWatcher(value: boolean): void;
    defaultGraphicColor: UtilityNetworkTraceWidget["defaultGraphicColor"];
    defaultGraphicColorWatcher(value: UtilityNetworkTraceWidget["defaultGraphicColor"]): void;
    disabled: boolean;
    disabledWatcher(value: boolean, old: boolean): void;
    flags: UtilityNetworkTraceWidget["flags"];
    flagsWatcher(value: UtilityNetworkTraceWidget["flags"]): void;
    gdbVersion: string;
    gdbVersionWatcher(value: string): void;
    inputSettings: UtilityNetworkTraceWidget["inputSettings"];
    inputSettingsWatcher(value: UtilityNetworkTraceWidget["inputSettings"]): void;
    resultAreaProperties: UtilityNetworkTraceWidget["resultAreaProperties"];
    resultAreaPropertiesWatcher(value: UtilityNetworkTraceWidget["resultAreaProperties"]): void;
    selectedTraces: UtilityNetworkTraceWidget["selectedTraces"];
    selectedTracesWatcher(value: UtilityNetworkTraceWidget["selectedTraces"]): void;
    selectOnComplete: boolean;
    selectOnCompleteWatcher(value: boolean): void;
    showGraphicsOnComplete: boolean;
    showGraphicsOnCompleteWatcher(value: boolean): void;
    showSelectionAttributes: boolean;
    showSelectionAttributesWatcher(value: boolean): void;
    position: string;
    positionWatcher(value: string): void;
    /**
     * Internal view of the component.
     *
     * @internal
     */
    view: ArcGISMapView;
    viewWatcher(value: ArcGISMapView): void;
    /**
     * Internal widget of the component.
     *
     * @internal
     */
    widget: UtilityNetworkTraceWidget;
    _watchHandles: __esri.WatchHandle[];
    arcgisUtilityNetworkTraceReady: EventEmitter<void>;
    utilityNetworkTraceAddFlag: EventEmitter<__esri.UtilityNetworkTraceAddFlagEvent>;
    utilityNetworkTraceAddFlagComplete: EventEmitter<__esri.UtilityNetworkTraceAddFlagCompleteEvent>;
    utilityNetworkTraceAddFlagError: EventEmitter<__esri.UtilityNetworkTraceAddFlagErrorEvent>;
    utilityNetworkTraceAddResultArea: EventEmitter<__esri.UtilityNetworkTraceAddResultAreaEvent>;
    utilityNetworkTraceRemoveResultArea: EventEmitter<__esri.UtilityNetworkTraceRemoveResultAreaEvent>;
    checkCanTrace(): Promise<void>;
    confirmReset(): Promise<void>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _addContainer;
    private _addWatchers;
    private _createParams;
    private _proxyEvents;
}
