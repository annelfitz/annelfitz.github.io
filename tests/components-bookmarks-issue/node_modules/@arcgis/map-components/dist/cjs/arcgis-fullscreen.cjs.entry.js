/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.13
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-6e62126d.js');
const index$1 = require('./index-b2323407.js');
const componentUtils = require('./component-utils-e47db275.js');
const disconnected = require('./disconnected-bc6a8942.js');

const fullscreenCss = "";

const ArcgisFullscreen = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.widgetReady = index.createEvent(this, "widgetReady", 7);
        this._watchHandles = [];
        this.referenceElement = undefined;
        this.element = undefined;
        this.position = "bottom-left";
        this.view = undefined;
        this.widget = undefined;
    }
    referenceElementWatcher(newValue) {
        componentUtils.referenceElementHelper(this, newValue);
    }
    elementWatcher(newValue) {
        if (this.widget) {
            this.widget.element = newValue;
        }
    }
    positionWatcher(newValue) {
        if (newValue !== undefined && this.widget) {
            this.view.ui.move(this.childElem, newValue);
        }
    }
    viewWatcher(newValue) {
        if (newValue !== undefined && this.widget) {
            this.widget.view = newValue;
        }
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    async componentDidLoad() {
        const params = this._createParams();
        const widget = await index$1.newWidgetsFullscreen(params);
        this.widget = widget;
        this.widgetReady.emit({ widget: this.widget });
        componentUtils.checkForView(this);
    }
    disconnectedCallback() {
        disconnected.onDisconnectedHelper(this);
    }
    render() {
        return index.h("div", { ref: (el) => (this.childElem = el) });
    }
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    _createParams() {
        const params = {
            container: this.childElem
        };
        if (this.element) {
            params.element = this.element;
        }
        if (this.view) {
            params.view = this.view;
        }
        return params;
    }
    get el() { return index.getElement(this); }
    static get watchers() { return {
        "referenceElement": ["referenceElementWatcher"],
        "element": ["elementWatcher"],
        "position": ["positionWatcher"],
        "view": ["viewWatcher"]
    }; }
};
ArcgisFullscreen.style = fullscreenCss;

exports.arcgis_fullscreen = ArcgisFullscreen;
