/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.13
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-6e62126d.js');
const index$1 = require('./index-b2323407.js');
const componentUtils = require('./component-utils-e47db275.js');
const disconnected = require('./disconnected-bc6a8942.js');

const utilityNetworkAssociationsCss = "arcgis-utility-network-associations{}";

const ArcgisUtilityNetworkAssociations = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.arcgisUtilityNetworkAssociationsReady = index.createEvent(this, "arcgisUtilityNetworkAssociationsReady", 7);
        this._watchHandles = [];
        this.referenceElement = undefined;
        this.autoRefreshAssociations = true;
        this.connectivityAssociationsLineSymbol = undefined;
        this.includeConnectivityAssociations = true;
        this.includeStructuralAttachmentAssociations = true;
        this.maxAllowableAssociations = 250;
        this.maxAllowableAssociationsSliderMax = undefined;
        this.maxAllowableAssociationsSliderMin = undefined;
        this.maxAllowableAssociationsSliderStep = undefined;
        this.showArrowsConnectivity = false;
        this.showArrowsStructuralAttachment = false;
        this.showAssociationsEnabled = false;
        this.structuralAttachmentAssociationsLineSymbol = undefined;
        this.utilityNetwork = undefined;
        this.visibleElementsConnectivityAssociationsSettingsArrowsToggle = true;
        this.visibleElementsConnectivityAssociationsSettingsCapSelect = true;
        this.visibleElementsConnectivityAssociationsSettingsColorPicker = true;
        this.visibleElementsConnectivityAssociationsSettingsStylePicker = true;
        this.visibleElementsConnectivityAssociationsSettingsWidthInput = true;
        this.visibleElementsMaxAllowableAssociationsSlider = true;
        this.visibleElementsStructuralAttachmentAssociationsSettingsArrowsToggle = true;
        this.visibleElementsStructuralAttachmentAssociationsSettingsCapSelect = true;
        this.visibleElementsStructuralAttachmentAssociationsSettingsStylePicker = true;
        this.visibleElementsStructuralAttachmentAssociationsSettingsWidthInput = true;
        this.position = "bottom-left";
        this.view = undefined;
        this.widget = undefined;
    }
    referenceElementWatcher(value) {
        void componentUtils.referenceElementHelper(this, value);
    }
    autoRefreshAssociationsWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.autoRefreshAssociations = value;
        }
    }
    connectivityAssociationsLineSymbolWatcher(value) {
        if (this.widget) {
            this.widget.connectivityAssociationsLineSymbol = value;
        }
    }
    includeConnectivityAssociationsWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.includeConnectivityAssociations = value;
        }
    }
    includeStructuralAttachmentAssociationsWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.includeStructuralAttachmentAssociations = value;
        }
    }
    maxAllowableAssociationsWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.maxAllowableAssociations = value;
        }
    }
    maxAllowableAssociationsSliderMaxWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.maxAllowableAssociationsSliderMax = value;
        }
    }
    maxAllowableAssociationsSliderMinWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.maxAllowableAssociationsSliderMin = value;
        }
    }
    maxAllowableAssociationsSliderStepWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.maxAllowableAssociationsSliderStep = value;
        }
    }
    showArrowsConnectivityWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.showArrowsConnectivity = value;
        }
    }
    showArrowsStructuralAttachmentWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.showArrowsStructuralAttachment = value;
        }
    }
    showAssociationsEnabledWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.showAssociationsEnabled = value;
        }
    }
    structuralAttachmentAssociationsLineSymbolWatcher(value) {
        if (this.widget) {
            this.widget.structuralAttachmentAssociationsLineSymbol = value;
        }
    }
    utilityNetworkWatcher(value) {
        if (this.widget) {
            this.widget.utilityNetwork = value;
        }
    }
    visibleElementsConnectivityAssociationsSettingsArrowsToggleWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                connectivityAssociationsSettings: {
                    ...this.widget.visibleElements.connectivityAssociationsSettings,
                    arrowsToggle: value
                }
            };
        }
    }
    visibleElementsConnectivityAssociationsSettingsCapSelectWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                connectivityAssociationsSettings: {
                    ...this.widget.visibleElements.connectivityAssociationsSettings,
                    capSelect: value
                }
            };
        }
    }
    visibleElementsConnectivityAssociationsSettingsColorPickerWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                connectivityAssociationsSettings: {
                    ...this.widget.visibleElements.connectivityAssociationsSettings,
                    colorPicker: value
                }
            };
        }
    }
    visibleElementsConnectivityAssociationsSettingsStylePickerWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                connectivityAssociationsSettings: {
                    ...this.widget.visibleElements.connectivityAssociationsSettings,
                    stylePicker: value
                }
            };
        }
    }
    visibleElementsConnectivityAssociationsSettingsWidthInputWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                connectivityAssociationsSettings: {
                    ...this.widget.visibleElements.connectivityAssociationsSettings,
                    widthInput: value
                }
            };
        }
    }
    visibleElementsMaxAllowableAssociationsSliderWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                maxAllowableAssociationsSlider: value
            };
        }
    }
    visibleElementsStructuralAttachmentAssociationsSettingsArrowsToggleWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                structuralAttachmentAssociationsSettings: {
                    ...this.widget.visibleElements.structuralAttachmentAssociationsSettings,
                    arrowsToggle: value
                }
            };
        }
    }
    visibleElementsStructuralAttachmentAssociationsSettingsCapSelectWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                structuralAttachmentAssociationsSettings: {
                    ...this.widget.visibleElements.structuralAttachmentAssociationsSettings,
                    capSelect: value
                }
            };
        }
    }
    visibleElementsStructuralAttachmentAssociationsSettingsStylePickerWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                structuralAttachmentAssociationsSettings: {
                    ...this.widget.visibleElements.structuralAttachmentAssociationsSettings,
                    stylePicker: value
                }
            };
        }
    }
    visibleElementsStructuralAttachmentAssociationsSettingsWidthInputWatcher(value) {
        if (this.widget) {
            this.widget.visibleElements = {
                ...this.widget.visibleElements,
                structuralAttachmentAssociationsSettings: {
                    ...this.widget.visibleElements.structuralAttachmentAssociationsSettings,
                    widthInput: value
                }
            };
        }
    }
    positionWatcher(value) {
        if (value !== undefined && this.widget) {
            this.view.ui.move(this.childElem, value);
        }
    }
    viewWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.view = value;
        }
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    async componentDidLoad() {
        const params = this._createParams();
        const widget = await index$1.newWidgetsUtilityNetworkAssociations(params);
        this.widget = widget;
        this._addContainer();
        this.arcgisUtilityNetworkAssociationsReady.emit();
        componentUtils.checkForView(this);
    }
    disconnectedCallback() {
        disconnected.onDisconnectedHelper(this);
    }
    render() {
        return index.h("div", { ref: (el) => (this.childElem = el) });
    }
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    _addContainer() {
        this.widget.container = this.childElem;
    }
    _createParams() {
        const params = {};
        params.visibleElements = {
            connectivityAssociationsSettings: {
                arrowsToggle: this.visibleElementsConnectivityAssociationsSettingsArrowsToggle,
                capSelect: this.visibleElementsConnectivityAssociationsSettingsCapSelect,
                colorPicker: this.visibleElementsConnectivityAssociationsSettingsColorPicker,
                stylePicker: this.visibleElementsConnectivityAssociationsSettingsStylePicker,
                widthInput: this.visibleElementsConnectivityAssociationsSettingsWidthInput
            },
            maxAllowableAssociationsSlider: this.visibleElementsMaxAllowableAssociationsSlider,
            structuralAttachmentAssociationsSettings: {
                arrowsToggle: this.visibleElementsStructuralAttachmentAssociationsSettingsArrowsToggle,
                capSelect: this.visibleElementsStructuralAttachmentAssociationsSettingsCapSelect,
                stylePicker: this.visibleElementsStructuralAttachmentAssociationsSettingsStylePicker,
                widthInput: this.visibleElementsStructuralAttachmentAssociationsSettingsWidthInput
            }
        };
        if (this.autoRefreshAssociations !== undefined) {
            params.autoRefreshAssociations = this.autoRefreshAssociations;
        }
        if (this.connectivityAssociationsLineSymbol !== undefined) {
            params.connectivityAssociationsLineSymbol = this.connectivityAssociationsLineSymbol;
        }
        if (this.includeConnectivityAssociations !== undefined) {
            params.includeConnectivityAssociations = this.includeConnectivityAssociations;
        }
        if (this.includeStructuralAttachmentAssociations !== undefined) {
            params.includeStructuralAttachmentAssociations = this.includeStructuralAttachmentAssociations;
        }
        if (this.maxAllowableAssociations !== undefined) {
            params.maxAllowableAssociations = this.maxAllowableAssociations;
        }
        if (this.maxAllowableAssociationsSliderMax !== undefined) {
            params.maxAllowableAssociationsSliderMax = this.maxAllowableAssociationsSliderMax;
        }
        if (this.maxAllowableAssociationsSliderMin !== undefined) {
            params.maxAllowableAssociationsSliderMin = this.maxAllowableAssociationsSliderMin;
        }
        if (this.maxAllowableAssociationsSliderStep !== undefined) {
            params.maxAllowableAssociationsSliderStep = this.maxAllowableAssociationsSliderStep;
        }
        if (this.showArrowsConnectivity !== undefined) {
            params.showArrowsConnectivity = this.showArrowsConnectivity;
        }
        if (this.showArrowsStructuralAttachment !== undefined) {
            params.showArrowsStructuralAttachment = this.showArrowsStructuralAttachment;
        }
        if (this.showAssociationsEnabled !== undefined) {
            params.showAssociationsEnabled = this.showAssociationsEnabled;
        }
        if (this.structuralAttachmentAssociationsLineSymbol !== undefined) {
            params.structuralAttachmentAssociationsLineSymbol = this.structuralAttachmentAssociationsLineSymbol;
        }
        if (this.utilityNetwork !== undefined) {
            params.utilityNetwork = this.utilityNetwork;
        }
        return params;
    }
    get el() { return index.getElement(this); }
    static get watchers() { return {
        "referenceElement": ["referenceElementWatcher"],
        "autoRefreshAssociations": ["autoRefreshAssociationsWatcher"],
        "connectivityAssociationsLineSymbol": ["connectivityAssociationsLineSymbolWatcher"],
        "includeConnectivityAssociations": ["includeConnectivityAssociationsWatcher"],
        "includeStructuralAttachmentAssociations": ["includeStructuralAttachmentAssociationsWatcher"],
        "maxAllowableAssociations": ["maxAllowableAssociationsWatcher"],
        "maxAllowableAssociationsSliderMax": ["maxAllowableAssociationsSliderMaxWatcher"],
        "maxAllowableAssociationsSliderMin": ["maxAllowableAssociationsSliderMinWatcher"],
        "maxAllowableAssociationsSliderStep": ["maxAllowableAssociationsSliderStepWatcher"],
        "showArrowsConnectivity": ["showArrowsConnectivityWatcher"],
        "showArrowsStructuralAttachment": ["showArrowsStructuralAttachmentWatcher"],
        "showAssociationsEnabled": ["showAssociationsEnabledWatcher"],
        "structuralAttachmentAssociationsLineSymbol": ["structuralAttachmentAssociationsLineSymbolWatcher"],
        "utilityNetwork": ["utilityNetworkWatcher"],
        "visibleElementsConnectivityAssociationsSettingsArrowsToggle": ["visibleElementsConnectivityAssociationsSettingsArrowsToggleWatcher"],
        "visibleElementsConnectivityAssociationsSettingsCapSelect": ["visibleElementsConnectivityAssociationsSettingsCapSelectWatcher"],
        "visibleElementsConnectivityAssociationsSettingsColorPicker": ["visibleElementsConnectivityAssociationsSettingsColorPickerWatcher"],
        "visibleElementsConnectivityAssociationsSettingsStylePicker": ["visibleElementsConnectivityAssociationsSettingsStylePickerWatcher"],
        "visibleElementsConnectivityAssociationsSettingsWidthInput": ["visibleElementsConnectivityAssociationsSettingsWidthInputWatcher"],
        "visibleElementsMaxAllowableAssociationsSlider": ["visibleElementsMaxAllowableAssociationsSliderWatcher"],
        "visibleElementsStructuralAttachmentAssociationsSettingsArrowsToggle": ["visibleElementsStructuralAttachmentAssociationsSettingsArrowsToggleWatcher"],
        "visibleElementsStructuralAttachmentAssociationsSettingsCapSelect": ["visibleElementsStructuralAttachmentAssociationsSettingsCapSelectWatcher"],
        "visibleElementsStructuralAttachmentAssociationsSettingsStylePicker": ["visibleElementsStructuralAttachmentAssociationsSettingsStylePickerWatcher"],
        "visibleElementsStructuralAttachmentAssociationsSettingsWidthInput": ["visibleElementsStructuralAttachmentAssociationsSettingsWidthInputWatcher"],
        "position": ["positionWatcher"],
        "view": ["viewWatcher"]
    }; }
};
ArcgisUtilityNetworkAssociations.style = utilityNetworkAssociationsCss;

exports.arcgis_utility_network_associations = ArcgisUtilityNetworkAssociations;
