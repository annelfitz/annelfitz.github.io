
/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.13
 */
/**
 * Get the base path to where the package assets can be found.
 * By default, the package asset path is set to "https://js.arcgis.com/<simplified-package-name>/<released-verion>/".
 * We are hosting our assets on a CDN (Content Delivery Network) to ensure fast and reliable access.
 * It is CORS-enabled, so you can load the assets from any domain.
 * Use "setArcgisAssetPath(path)" if the path needs to be customized.
 */
export declare const getArcgisAssetPath: (path: string) => string;

/**
 * Used to manually set the base path where package assets can be found.
 * 
 * By default, the package asset path is set to "https://js.arcgis.com/<simplified-package-name>/<released-verion>/".
 * For example, "https://js.arcgis.com/map-components/4.29/".
 * We are hosting our assets on a CDN (Content Delivery Network) to ensure fast and reliable access. 
 * It is CORS-enabled, so you can load the assets from any domain.
 * This is the recommended way to load the assets and avoid bundling them with your application.
 * It means that by default, you don't need to use "setArcgisAssetPath" since the path is already set.
 * 
 * However, if you need to host the assets locally, you can use "setArcgisAssetPath" to set the base path.
 * If the script is used as "module", it's recommended to use "import.meta.url",
 * such as "setArcgisAssetPath(import.meta.url)". Other options include
 * "setArcgisAssetPath(document.currentScript.src)", or using a bundler's replace plugin to
 * dynamically set the path at build time, such as "setArcgisAssetPath(process.env.ASSET_PATH)".
 * But do note that this configuration depends on how your script is bundled, or lack of
 * bundling, and where your assets can be loaded from. Additionally custom bundling
 * will have to ensure the static assets are copied to its build directory.
 */
export declare const setArcgisAssetPath: (path: string) => void;
