/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.13
 */
import { proxyCustomElement, HTMLElement, createEvent, h } from '@stencil/core/internal/client';
import { O as newWidgetsScaleBar } from './index2.js';
import { r as referenceElementHelper, c as checkForView } from './component-utils.js';
import { o as onDisconnectedHelper } from './disconnected.js';

const scaleBarCss = "arcgis-scale-bar{}";

const ArcgisScaleBar$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisScaleBar extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.arcgisScaleBarReady = createEvent(this, "arcgisScaleBarReady", 7);
        this._watchHandles = [];
        this.referenceElement = undefined;
        this.barStyle = "line";
        this.unit = undefined;
        this.position = "bottom-left";
        this.view = undefined;
        this.widget = undefined;
    }
    referenceElementWatcher(value) {
        void referenceElementHelper(this, value);
    }
    styleWatcher(value) {
        if (this.widget) {
            this.widget.style = value;
        }
    }
    unitWatcher(value) {
        if (this.widget) {
            this.widget.unit = value;
        }
    }
    positionWatcher(value) {
        if (value !== undefined && this.widget) {
            this.view.ui.move(this.childElem, value);
        }
    }
    viewWatcher(value) {
        if (value !== undefined && this.widget) {
            this.widget.view = value;
        }
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    async componentDidLoad() {
        const params = this._createParams();
        const widget = await newWidgetsScaleBar(params);
        this.widget = widget;
        this._addContainer();
        this.arcgisScaleBarReady.emit();
        checkForView(this);
    }
    disconnectedCallback() {
        onDisconnectedHelper(this);
    }
    render() {
        return h("div", { ref: (el) => (this.childElem = el) });
    }
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    _addContainer() {
        this.widget.container = this.childElem;
    }
    _createParams() {
        const params = {};
        if (this.unit) {
            params.unit = this.unit;
        }
        if (this.barStyle) {
            params.style = this.barStyle;
        }
        if (this.view) {
            params.view = this.view;
        }
        return params;
    }
    get el() { return this; }
    static get watchers() { return {
        "referenceElement": ["referenceElementWatcher"],
        "barStyle": ["styleWatcher"],
        "unit": ["unitWatcher"],
        "position": ["positionWatcher"],
        "view": ["viewWatcher"]
    }; }
    static get style() { return scaleBarCss; }
}, [0, "arcgis-scale-bar", {
        "referenceElement": [1, "reference-element"],
        "barStyle": [1, "bar-style"],
        "unit": [1],
        "position": [1],
        "view": [1040],
        "widget": [1040]
    }, undefined, {
        "referenceElement": ["referenceElementWatcher"],
        "barStyle": ["styleWatcher"],
        "unit": ["unitWatcher"],
        "position": ["positionWatcher"],
        "view": ["viewWatcher"]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-scale-bar"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-scale-bar":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisScaleBar$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisScaleBar = ArcgisScaleBar$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisScaleBar, defineCustomElement };
