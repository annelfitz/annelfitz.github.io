/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.0-next.13
 */
import { proxyCustomElement, HTMLElement, createEvent, h } from '@stencil/core/internal/client';
import { r as referenceElementHelper, c as checkForView } from './component-utils.js';
import { o as onDisconnectedHelper } from './disconnected.js';

const placementCss = "arcgis-placement{}";

const ArcgisPlacement$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisPlacement extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.placementReady = createEvent(this, "placementReady", 7);
        this.referenceElement = undefined;
        this.view = undefined;
        this.position = "bottom-left";
    }
    referenceElementWatcher(newValue) {
        void referenceElementHelper(this, newValue);
    }
    positionWatcher(newValue) {
        if (newValue !== undefined) {
            this.view.ui.move(this.childElem, newValue);
        }
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    async componentDidLoad() {
        this.placementReady.emit({ ready: true });
        checkForView(this);
    }
    disconnectedCallback() {
        onDisconnectedHelper(this);
    }
    render() {
        return (h("div", { ref: (el) => (this.childElem = el) }, h("slot", null)));
    }
    get el() { return this; }
    static get watchers() { return {
        "referenceElement": ["referenceElementWatcher"],
        "position": ["positionWatcher"]
    }; }
    static get style() { return placementCss; }
}, [4, "arcgis-placement", {
        "referenceElement": [1, "reference-element"],
        "view": [1040],
        "position": [1]
    }, undefined, {
        "referenceElement": ["referenceElementWatcher"],
        "position": ["positionWatcher"]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-placement"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-placement":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisPlacement$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisPlacement = ArcgisPlacement$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisPlacement, defineCustomElement };
