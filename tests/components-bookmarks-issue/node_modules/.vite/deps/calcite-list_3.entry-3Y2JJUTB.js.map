{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/esm/src/components/list-item/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/list-item/utils.ts", "../../@esri/calcite-components/dist/esm/src/components/list/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/list/list.scss?tag=calcite-list&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/list/list.tsx", "../../@esri/calcite-components/dist/esm/src/components/list-item/list-item.scss?tag=calcite-list-item&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/list-item/list-item.tsx", "../../@esri/calcite-components/dist/esm/src/components/list-item-group/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/list-item-group/list-item-group.scss?tag=calcite-list-item-group&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/list-item-group/list-item-group.tsx"],
  "sourcesContent": ["export const CSS = {\n  container: \"container\",\n  containerHover: \"container--hover\",\n  containerBorder: \"container--border\",\n  containerBorderSelected: \"container--border-selected\",\n  containerBorderUnselected: \"container--border-unselected\",\n  contentContainer: \"content-container\",\n  contentContainerSelectable: \"content-container--selectable\",\n  contentContainerHasCenterContent: \"content-container--has-center-content\",\n  nestedContainer: \"nested-container\",\n  nestedContainerHidden: \"nested-container--hidden\",\n  content: \"content\",\n  customContent: \"custom-content\",\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  label: \"label\",\n  description: \"description\",\n  contentEnd: \"content-end\",\n  contentBottom: \"content-bottom\",\n  actionsEnd: \"actions-end\",\n  selectionContainer: \"selection-container\",\n  selectionContainerSingle: \"selection-container--single\",\n  openContainer: \"open-container\",\n  dragContainer: \"drag-container\",\n};\n\nexport const SLOTS = {\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentEnd: \"content-end\",\n  actionsEnd: \"actions-end\",\n};\n\n// Set to zero to extend until the end of the table section.\nexport const MAX_COLUMNS = 0;\n\nexport const ICONS = {\n  selectedMultiple: \"check-square-f\",\n  selectedSingle: \"bullet-point-large\",\n  unselectedMultiple: \"square\",\n  unselectedSingle: \"bullet-point-large\",\n  closedLTR: \"chevron-right\",\n  closedRTL: \"chevron-left\",\n  open: \"chevron-down\",\n  blank: \"blank\",\n  close: \"x\",\n};\n\nexport const activeCellTestAttribute = \"data-test-active\";\n", "import { Build } from \"@stencil/core\";\n\nconst listSelector = \"calcite-list\";\nconst listItemGroupSelector = \"calcite-list-item-group\";\nconst listItemSelector = \"calcite-list-item\";\n\nexport function getListItemChildLists(slotEl: HTMLSlotElement): HTMLCalciteListElement[] {\n  return Array.from(\n    slotEl.assignedElements({ flatten: true }).filter((el) => el.matches(listSelector)),\n  ) as HTMLCalciteListElement[];\n}\n\nexport function getListItemChildren(slotEl: HTMLSlotElement): HTMLCalciteListItemElement[] {\n  const assignedElements = slotEl.assignedElements({ flatten: true });\n\n  const listItemGroupChildren = (\n    assignedElements.filter((el) => el?.matches(listItemGroupSelector)) as HTMLCalciteListItemGroupElement[]\n  )\n    .map((group) => Array.from(group.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  const listItemChildren = assignedElements.filter(\n    (el) => el?.matches(listItemSelector),\n  ) as HTMLCalciteListItemElement[];\n\n  const listItemListChildren = (assignedElements.filter((el) => el?.matches(listSelector)) as HTMLCalciteListElement[])\n    .map((list) => Array.from(list.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  return [...listItemListChildren, ...listItemGroupChildren, ...listItemChildren];\n}\n\nexport function updateListItemChildren(listItemChildren: HTMLCalciteListItemElement[]): void {\n  listItemChildren.forEach((listItem) => {\n    listItem.setPosition = listItemChildren.indexOf(listItem) + 1;\n    listItem.setSize = listItemChildren.length;\n  });\n}\n\nexport function getDepth(element: HTMLElement, includeGroup = false): number {\n  if (!Build.isBrowser) {\n    return 0;\n  }\n\n  const expression = includeGroup\n    ? \"ancestor::calcite-list-item | ancestor::calcite-list-item-group\"\n    : \"ancestor::calcite-list-item\";\n\n  const result = document.evaluate(expression, element, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null);\n\n  return result.snapshotLength;\n}\n", "export const CSS = {\n  container: \"container\",\n  table: \"table\",\n  scrim: \"scrim\",\n  stack: \"stack\",\n  tableContainer: \"table-container\",\n  sticky: \"sticky-pos\",\n  assistiveText: \"assistive-text\",\n};\n\nexport const debounceTimeout = 0;\n\nexport type SelectionAppearance = \"border\" | \"icon\";\n\nexport const SLOTS = {\n  filterNoResults: \"filter-no-results\",\n  filterActionsStart: \"filter-actions-start\",\n  filterActionsEnd: \"filter-actions-end\",\n};\n", ":host {\n  @apply block;\n}\n\n@include disabled();\n\n.container {\n  position: relative;\n}\n\n.table-container {\n  @apply box-border\n  flex\n  w-full\n  flex-col\n  bg-transparent;\n  * {\n    @apply box-border;\n  }\n}\n\n.table {\n  @apply w-full border-collapse;\n}\n\n.stack {\n  --calcite-stack-padding-inline: 0;\n  --calcite-stack-padding-block: 0;\n}\n\n::slotted(calcite-list-item) {\n  @apply shadow-border-top;\n  margin-block-start: 1px;\n}\n\n::slotted(calcite-list-item:first-of-type) {\n  @apply shadow-none;\n}\n\n// removes shadow for the first item in filteredItems of the list.\n::slotted(calcite-list-item[data-filter]) {\n  @apply shadow-none;\n  margin-block-start: 0px;\n}\n\n.sticky-pos {\n  @apply sticky\n  top-0\n  z-sticky\n  bg-foreground-1;\n  & th {\n    @apply p-0;\n  }\n}\n\n.assistive-text {\n  @apply sr-only;\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport Sortable from \"sortablejs\";\nimport { debounce } from \"lodash-es\";\nimport { slotChangeHasAssignedElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { createObserver } from \"../../utils/observers\";\nimport { SelectionMode } from \"../interfaces\";\nimport { ItemData } from \"../list-item/interfaces\";\nimport { MAX_COLUMNS } from \"../list-item/resources\";\nimport { getListItemChildren, updateListItemChildren } from \"../list-item/utils\";\nimport { CSS, debounceTimeout, SelectionAppearance, SLOTS } from \"./resources\";\nimport {\n  connectSortableComponent,\n  disconnectSortableComponent,\n  SortableComponent,\n  dragActive,\n} from \"../../utils/sortableComponent\";\nimport { SLOTS as STACK_SLOTS } from \"../stack/resources\";\n\nconst listItemSelector = \"calcite-list-item\";\nconst listItemSelectorDirect = `:scope > calcite-list-item`;\nconst parentSelector = \"calcite-list-item-group, calcite-list-item\";\n\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { HandleNudge } from \"../handle/interfaces\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ListMessages } from \"./assets/list/t9n\";\nimport { NumberingSystem, numberStringFormatter } from \"../../utils/locale\";\nimport { ListDragDetail } from \"./interfaces\";\n\n/**\n * A general purpose list that enables users to construct list items that conform to Calcite styling.\n *\n * @slot - A slot for adding `calcite-list-item` elements.\n * @slot filter-actions-start - A slot for adding actionable `calcite-action` elements before the filter component.\n * @slot filter-actions-end - A slot for adding actionable `calcite-action` elements after the filter component.\n */\n@Component({\n  tag: \"calcite-list\",\n  styleUrl: \"list.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class List\n  implements InteractiveComponent, LoadableComponent, SortableComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When provided, the method will be called to determine whether the element can  move from the list.\n   */\n  @Prop() canPull: (detail: ListDragDetail) => boolean;\n\n  /**\n   * When provided, the method will be called to determine whether the element can be added from another list.\n   */\n  @Prop() canPut: (detail: ListDragDetail) => boolean;\n\n  /**\n   * When `true`, `calcite-list-item`s are sortable via a draggable button.\n   */\n  @Prop({ reflect: true }) dragEnabled = false;\n\n  /**\n   * The list's group identifier.\n   *\n   * To drag elements from one list into another, both lists must have the same group value.\n   */\n  @Prop({ reflect: true }) group?: string;\n\n  /**\n   * When `true`, an input appears at the top of the component that can be used by end users to filter `calcite-list-item`s.\n   */\n  @Prop({ reflect: true }) filterEnabled = false;\n\n  /**\n   * The currently filtered `calcite-list-item`s.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) filteredItems: HTMLCalciteListItemElement[] = [];\n\n  /**\n   * The currently filtered `calcite-list-item` data.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) filteredData: ItemData = [];\n\n  /**\n   * Placeholder text for the component's filter input field.\n   */\n  @Prop({ reflect: true }) filterPlaceholder: string;\n\n  /**\n   * Text for the component's filter input field.\n   */\n  @Prop({ reflect: true, mutable: true }) filterText: string;\n\n  @Watch(\"filterText\")\n  async handleFilterTextChange(): Promise<void> {\n    this.performFilter();\n  }\n\n  /**\n   * Specifies an accessible name for the component.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ListMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ListMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop() numberingSystem: NumberingSystem;\n\n  /**\n   * One of the items within the list can be opened.\n   *\n   * @internal\n   */\n  @Prop() openable = false;\n\n  /**\n   * The currently selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteListItemElement[] = [];\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection,\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection, and\n   *\n   * `\"none\"` does not allow any selections.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"none\" | \"multiple\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = \"none\";\n\n  /**\n   * Specifies the selection appearance - `\"icon\"` (displays a checkmark or dot) or `\"border\"` (displays a border).\n   */\n  @Prop({ reflect: true }) selectionAppearance: SelectionAppearance = \"icon\";\n\n  @Watch(\"filterEnabled\")\n  @Watch(\"group\")\n  @Watch(\"dragEnabled\")\n  @Watch(\"selectionMode\")\n  @Watch(\"selectionAppearance\")\n  handleListItemChange(): void {\n    this.updateListItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's selected items have changed.\n   */\n  @Event({ cancelable: false }) calciteListChange: EventEmitter<void>;\n\n  /**\n   * Fires when the component's dragging has ended.\n   */\n  @Event({ cancelable: false }) calciteListDragEnd: EventEmitter<ListDragDetail>;\n\n  /**\n   * Fires when the component's dragging has started.\n   */\n  @Event({ cancelable: false }) calciteListDragStart: EventEmitter<ListDragDetail>;\n\n  /**\n   * Fires when the component's filter has changed.\n   */\n  @Event({ cancelable: false }) calciteListFilter: EventEmitter<void>;\n\n  /**\n   * Fires when the component's item order changes.\n   */\n  @Event({ cancelable: false }) calciteListOrderChange: EventEmitter<ListDragDetail>;\n\n  /**\n   * Fires when the default slot has changes in order to notify parent lists.\n   */\n  @Event({ cancelable: false }) calciteInternalListDefaultSlotChange: EventEmitter<void>;\n\n  @Listen(\"calciteInternalFocusPreviousItem\")\n  handleCalciteInternalFocusPreviousItem(event: CustomEvent): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    const { focusableItems } = this;\n    const currentIndex = focusableItems.findIndex((listItem) => listItem.active);\n\n    const prevIndex = currentIndex - 1;\n\n    if (focusableItems[prevIndex]) {\n      this.focusRow(focusableItems[prevIndex]);\n    }\n  }\n\n  @Listen(\"calciteInternalListItemActive\")\n  handleCalciteInternalListItemActive(event: CustomEvent): void {\n    if (!!this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    const target = event.target as HTMLCalciteListItemElement;\n    const { listItems } = this;\n\n    listItems.forEach((listItem) => {\n      listItem.active = listItem === target;\n    });\n  }\n\n  @Listen(\"calciteListItemSelect\")\n  handleCalciteListItemSelect(): void {\n    if (!!this.parentListEl) {\n      return;\n    }\n\n    this.updateSelectedItems(true);\n  }\n\n  @Listen(\"calciteInternalAssistiveTextChange\")\n  handleCalciteInternalAssistiveTextChange(event: CustomEvent): void {\n    this.assistiveText = event.detail.message;\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteHandleNudge\")\n  handleCalciteHandleNudge(event: CustomEvent<HandleNudge>): void {\n    if (!!this.parentListEl) {\n      return;\n    }\n\n    this.handleNudgeEvent(event);\n  }\n\n  @Listen(\"calciteInternalListItemSelect\")\n  handleCalciteInternalListItemSelect(event: CustomEvent): void {\n    if (!!this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    const target = event.target as HTMLCalciteListItemElement;\n    const { listItems, selectionMode } = this;\n\n    if (target.selected && (selectionMode === \"single\" || selectionMode === \"single-persist\")) {\n      listItems.forEach((listItem) => (listItem.selected = listItem === target));\n    }\n\n    this.updateSelectedItems();\n  }\n\n  @Listen(\"calciteInternalListItemSelectMultiple\")\n  handleCalciteInternalListItemSelectMultiple(\n    event: CustomEvent<{\n      selectMultiple: boolean;\n    }>,\n  ): void {\n    if (!!this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    const { target, detail } = event;\n    const { focusableItems, lastSelectedInfo } = this;\n    const selectedItem = target as HTMLCalciteListItemElement;\n\n    if (detail.selectMultiple && !!lastSelectedInfo) {\n      const currentIndex = focusableItems.indexOf(selectedItem);\n      const lastSelectedIndex = focusableItems.indexOf(lastSelectedInfo.selectedItem);\n      const startIndex = Math.min(lastSelectedIndex, currentIndex);\n      const endIndex = Math.max(lastSelectedIndex, currentIndex);\n\n      focusableItems\n        .slice(startIndex, endIndex + 1)\n        .forEach((item) => (item.selected = lastSelectedInfo.selected));\n    } else {\n      this.lastSelectedInfo = { selectedItem, selected: selectedItem.selected };\n    }\n  }\n\n  @Listen(\"calciteInternalListItemChange\")\n  handleCalciteInternalListItemChange(event: CustomEvent): void {\n    if (!!this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    this.updateListItems();\n  }\n\n  @Listen(\"calciteInternalListItemGroupDefaultSlotChange\")\n  handleCalciteInternalListItemGroupDefaultSlotChange(event: CustomEvent): void {\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (dragActive(this)) {\n      return;\n    }\n\n    connectMessages(this);\n    this.connectObserver();\n    this.updateListItems();\n    this.setUpSorting();\n    connectInteractive(this);\n    this.setParentList();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    if (dragActive(this)) {\n      return;\n    }\n\n    this.disconnectObserver();\n    disconnectSortableComponent(this);\n    disconnectInteractive(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ListMessages;\n\n  @Element() el: HTMLCalciteListElement;\n\n  @State() assistiveText: string;\n\n  @State() dataForFilter: ItemData = [];\n\n  dragSelector = listItemSelector;\n\n  filterEl: HTMLCalciteFilterElement;\n\n  focusableItems: HTMLCalciteListItemElement[] = [];\n\n  handleSelector = \"calcite-handle\";\n\n  @State() hasFilterActionsEnd = false;\n\n  @State() hasFilterActionsStart = false;\n\n  @State() hasFilterNoResults = false;\n\n  listItems: HTMLCalciteListItemElement[] = [];\n\n  mutationObserver = createObserver(\"mutation\", () => this.updateListItems());\n\n  visibleItems: HTMLCalciteListItemElement[] = [];\n\n  parentListEl: HTMLCalciteListElement;\n\n  sortable: Sortable;\n\n  private ancestorOfFirstFilteredItem: HTMLCalciteListItemElement;\n\n  private lastSelectedInfo: { selectedItem: HTMLCalciteListItemElement; selected: boolean };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   *\n   * @returns {Promise<void>}\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    if (this.filterEnabled) {\n      return this.filterEl?.setFocus();\n    }\n\n    return this.focusableItems.find((listItem) => listItem.active)?.setFocus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      loading,\n      label,\n      disabled,\n      dataForFilter,\n      filterEnabled,\n      filterPlaceholder,\n      filterText,\n      filteredItems,\n      hasFilterActionsStart,\n      hasFilterActionsEnd,\n      hasFilterNoResults,\n    } = this;\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div class={CSS.container}>\n          {this.dragEnabled ? (\n            <span aria-live=\"assertive\" class={CSS.assistiveText}>\n              {this.assistiveText}\n            </span>\n          ) : null}\n          {this.renderItemAriaLive()}\n          {loading ? <calcite-scrim class={CSS.scrim} loading={loading} /> : null}\n          <table\n            aria-busy={toAriaBoolean(loading)}\n            aria-label={label || \"\"}\n            class={CSS.table}\n            onKeyDown={this.handleListKeydown}\n            role=\"treegrid\"\n          >\n            {filterEnabled || hasFilterActionsStart || hasFilterActionsEnd ? (\n              <thead>\n                <tr class={{ [CSS.sticky]: true }}>\n                  <th colSpan={MAX_COLUMNS}>\n                    <calcite-stack class={CSS.stack}>\n                      <slot\n                        name={SLOTS.filterActionsStart}\n                        onSlotchange={this.handleFilterActionsStartSlotChange}\n                        slot={STACK_SLOTS.actionsStart}\n                      />\n                      <calcite-filter\n                        aria-label={filterPlaceholder}\n                        disabled={disabled}\n                        items={dataForFilter}\n                        onCalciteFilterChange={this.handleFilterChange}\n                        placeholder={filterPlaceholder}\n                        value={filterText}\n                        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                        ref={this.setFilterEl}\n                      />\n                      <slot\n                        name={SLOTS.filterActionsEnd}\n                        onSlotchange={this.handleFilterActionsEndSlotChange}\n                        slot={STACK_SLOTS.actionsEnd}\n                      />\n                    </calcite-stack>\n                  </th>\n                </tr>\n              </thead>\n            ) : null}\n            <tbody class={CSS.tableContainer}>\n              <slot onSlotchange={this.handleDefaultSlotChange} />\n            </tbody>\n          </table>\n          <div\n            aria-live=\"polite\"\n            data-test-id=\"no-results-container\"\n            hidden={!(hasFilterNoResults && filterEnabled && filterText && !filteredItems.length)}\n          >\n            <slot\n              name={SLOTS.filterNoResults}\n              onSlotchange={this.handleFilterNoResultsSlotChange}\n            />\n          </div>\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private renderItemAriaLive(): VNode {\n    const {\n      messages,\n      filteredItems,\n      parentListEl,\n      effectiveLocale,\n      numberingSystem,\n      filterEnabled,\n      filterText,\n      filteredData,\n    } = this;\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: effectiveLocale,\n      numberingSystem,\n    };\n\n    return !parentListEl ? (\n      <div aria-live=\"polite\" class={CSS.assistiveText}>\n        {filterEnabled && filterText && filteredData?.length ? (\n          <div key=\"aria-filter-enabled\">{messages.filterEnabled}</div>\n        ) : null}\n        <div key=\"aria-item-count\">\n          {messages.total.replace(\n            \"{count}\",\n            numberStringFormatter.localize(filteredItems.length.toString()),\n          )}\n        </div>\n        {filteredItems.length ? (\n          <ol key=\"aria-item-list\">\n            {filteredItems.map((item) => (\n              <li>{item.label}</li>\n            ))}\n          </ol>\n        ) : null}\n      </div>\n    ) : null;\n  }\n\n  private connectObserver(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  private disconnectObserver(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  private setUpSorting(): void {\n    const { dragEnabled } = this;\n\n    if (!dragEnabled) {\n      return;\n    }\n\n    connectSortableComponent(this);\n  }\n\n  onGlobalDragStart(): void {\n    this.disconnectObserver();\n  }\n\n  onGlobalDragEnd(): void {\n    this.connectObserver();\n  }\n\n  onDragEnd(detail: ListDragDetail): void {\n    this.calciteListDragEnd.emit(detail);\n  }\n\n  onDragStart(detail: ListDragDetail): void {\n    this.calciteListDragStart.emit(detail);\n  }\n\n  onDragSort(detail: ListDragDetail): void {\n    this.setParentList();\n    this.updateListItems();\n\n    this.calciteListOrderChange.emit(detail);\n  }\n\n  private setParentList(): void {\n    this.parentListEl = this.el.parentElement?.closest(\"calcite-list\");\n  }\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    updateListItemChildren(getListItemChildren(event.target as HTMLSlotElement));\n    if (this.parentListEl) {\n      this.calciteInternalListDefaultSlotChange.emit();\n    }\n  };\n\n  private handleFilterActionsStartSlotChange = (event: Event): void => {\n    this.hasFilterActionsStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleFilterActionsEndSlotChange = (event: Event): void => {\n    this.hasFilterActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleFilterNoResultsSlotChange = (event: Event): void => {\n    this.hasFilterNoResults = slotChangeHasAssignedElement(event);\n  };\n\n  private setActiveListItem = (): void => {\n    const { focusableItems } = this;\n\n    if (!focusableItems.some((item) => item.active)) {\n      if (focusableItems[0]) {\n        focusableItems[0].active = true;\n      }\n    }\n  };\n\n  private updateSelectedItems = (emit = false): void => {\n    this.selectedItems = this.visibleItems.filter((item) => item.selected);\n    if (emit) {\n      this.calciteListChange.emit();\n    }\n  };\n\n  private filterElements({\n    el,\n    filteredItems,\n    visibleParents,\n  }: {\n    el: HTMLCalciteListItemElement | HTMLCalciteListItemGroupElement;\n    filteredItems: HTMLCalciteListItemElement[];\n    visibleParents: WeakSet<HTMLCalciteListItemElement | HTMLCalciteListItemGroupElement>;\n  }): void {\n    const filterHidden =\n      !visibleParents.has(el) && !filteredItems.includes(el as HTMLCalciteListItemElement);\n\n    el.filterHidden = filterHidden;\n\n    const closestParent = el.parentElement.closest(parentSelector) as\n      | HTMLCalciteListItemElement\n      | HTMLCalciteListItemGroupElement;\n\n    if (!closestParent) {\n      return;\n    }\n\n    if (!filterHidden) {\n      visibleParents.add(closestParent);\n    }\n\n    this.filterElements({\n      el: closestParent,\n      filteredItems,\n      visibleParents,\n    });\n  }\n\n  private updateFilteredItems = (emit = false): void => {\n    const { visibleItems, filteredData, filterText } = this;\n\n    const values = filteredData.map((item) => item.value);\n\n    const lastDescendantItems = visibleItems?.filter((listItem) =>\n      visibleItems.every((li) => li === listItem || !listItem.contains(li)),\n    );\n\n    const filteredItems =\n      visibleItems.filter((item) => !filterText || values.includes(item.value)) || [];\n\n    const visibleParents = new WeakSet<HTMLElement>();\n\n    lastDescendantItems.forEach((listItem) =>\n      this.filterElements({ el: listItem, filteredItems, visibleParents }),\n    );\n\n    if (filteredItems.length > 0) {\n      this.findAncestorOfFirstFilteredItem(filteredItems);\n    }\n\n    this.filteredItems = filteredItems;\n\n    if (emit) {\n      this.calciteListFilter.emit();\n    }\n  };\n\n  private updateFilteredData(emit = false): void {\n    const { filterEl } = this;\n\n    if (!filterEl) {\n      return;\n    }\n\n    if (filterEl.filteredItems) {\n      this.filteredData = filterEl.filteredItems as ItemData;\n    }\n\n    this.updateListItems(emit);\n  }\n\n  private async performFilter(): Promise<void> {\n    const { filterEl, filterText } = this;\n\n    if (!filterEl) {\n      return;\n    }\n\n    filterEl.value = filterText;\n    await filterEl.filter(filterText);\n    this.updateFilteredData();\n  }\n\n  private setFilterEl = (el: HTMLCalciteFilterElement): void => {\n    this.filterEl = el;\n    this.performFilter();\n  };\n\n  private handleFilterChange = (event: CustomEvent): void => {\n    event.stopPropagation();\n    const { value } = event.currentTarget as HTMLCalciteFilterElement;\n    this.filterText = value;\n    this.updateFilteredData(true);\n  };\n\n  private getItemData = (): ItemData => {\n    return this.listItems.map((item) => ({\n      label: item.label,\n      description: item.description,\n      metadata: item.metadata,\n      value: item.value,\n    }));\n  };\n\n  private updateListItems = debounce((emit = false): void => {\n    const { selectionAppearance, selectionMode, dragEnabled } = this;\n\n    if (!!this.parentListEl) {\n      const items = this.queryListItems(true);\n\n      items.forEach((item) => {\n        item.dragHandle = dragEnabled;\n      });\n\n      this.setUpSorting();\n      return;\n    }\n\n    const items = this.queryListItems();\n    items.forEach((item) => {\n      item.selectionAppearance = selectionAppearance;\n      item.selectionMode = selectionMode;\n    });\n    const dragItems = this.queryListItems(true);\n    dragItems.forEach((item) => {\n      item.dragHandle = dragEnabled;\n    });\n    this.listItems = items;\n    if (this.filterEnabled) {\n      this.dataForFilter = this.getItemData();\n      if (this.filterEl) {\n        this.filterEl.items = this.dataForFilter;\n      }\n    }\n    this.visibleItems = this.listItems.filter((item) => !item.closed && !item.hidden);\n    this.updateFilteredItems(emit);\n    this.focusableItems = this.filteredItems.filter((item) => !item.disabled);\n    this.setActiveListItem();\n    this.updateSelectedItems(emit);\n    this.setUpSorting();\n  }, debounceTimeout);\n\n  private queryListItems = (direct = false): HTMLCalciteListItemElement[] => {\n    return Array.from(this.el.querySelectorAll(direct ? listItemSelectorDirect : listItemSelector));\n  };\n\n  private focusRow = (focusEl: HTMLCalciteListItemElement): void => {\n    const { focusableItems } = this;\n\n    if (!focusEl) {\n      return;\n    }\n\n    focusableItems.forEach((listItem) => (listItem.active = listItem === focusEl));\n\n    focusEl.setFocus();\n  };\n\n  private isNavigable = (listItem: HTMLCalciteListItemElement): boolean => {\n    const parentListItemEl = listItem.parentElement?.closest(listItemSelector);\n\n    if (!parentListItemEl) {\n      return true;\n    }\n\n    return parentListItemEl.open && this.isNavigable(parentListItemEl);\n  };\n\n  private handleListKeydown = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented || !!this.parentListEl) {\n      return;\n    }\n\n    const { key } = event;\n    const navigableItems = this.focusableItems.filter((listItem) => this.isNavigable(listItem));\n    const currentIndex = navigableItems.findIndex((listItem) => listItem.active);\n\n    if (key === \"ArrowDown\") {\n      event.preventDefault();\n      const nextIndex = event.target === this.filterEl ? 0 : currentIndex + 1;\n\n      if (navigableItems[nextIndex]) {\n        this.focusRow(navigableItems[nextIndex]);\n      }\n    } else if (key === \"ArrowUp\") {\n      event.preventDefault();\n\n      if (currentIndex === 0 && this.filterEnabled) {\n        this.filterEl?.setFocus();\n        return;\n      }\n\n      const prevIndex = currentIndex - 1;\n\n      if (navigableItems[prevIndex]) {\n        this.focusRow(navigableItems[prevIndex]);\n      }\n    } else if (key === \"Home\") {\n      event.preventDefault();\n      const homeItem = navigableItems[0];\n\n      if (homeItem) {\n        this.focusRow(homeItem);\n      }\n    } else if (key === \"End\") {\n      event.preventDefault();\n      const endItem = navigableItems[navigableItems.length - 1];\n\n      if (endItem) {\n        this.focusRow(endItem);\n      }\n    }\n  };\n\n  private findAncestorOfFirstFilteredItem = (filteredItems: HTMLCalciteListItemElement[]): void => {\n    this.ancestorOfFirstFilteredItem?.removeAttribute(\"data-filter\");\n    filteredItems.forEach((item) => {\n      item.removeAttribute(\"data-filter\");\n    });\n\n    this.ancestorOfFirstFilteredItem = this.getTopLevelAncestorItemElement(filteredItems[0]);\n    filteredItems[0].setAttribute(\"data-filter\", \"0\");\n    this.ancestorOfFirstFilteredItem?.setAttribute(\"data-filter\", \"0\");\n  };\n\n  private getTopLevelAncestorItemElement = (\n    el: HTMLCalciteListItemElement,\n  ): HTMLCalciteListItemElement | null => {\n    let closestParent = el.parentElement.closest<HTMLCalciteListItemElement>(listItemSelector);\n\n    while (closestParent) {\n      const closestListItemAncestor =\n        closestParent.parentElement.closest<HTMLCalciteListItemElement>(listItemSelector);\n\n      if (closestListItemAncestor) {\n        closestParent = closestListItemAncestor;\n      } else {\n        return closestParent;\n      }\n    }\n    return null;\n  };\n\n  handleNudgeEvent(event: CustomEvent<HandleNudge>): void {\n    const { handleSelector, dragSelector } = this;\n    const { direction } = event.detail;\n\n    const composedPath = event.composedPath();\n\n    const handle = composedPath.find(\n      (el: HTMLElement) => el?.tagName && el.matches(handleSelector),\n    ) as HTMLCalciteHandleElement;\n\n    const dragEl = composedPath.find(\n      (el: HTMLElement) => el?.tagName && el.matches(dragSelector),\n    ) as HTMLCalciteListItemElement;\n\n    const parentEl = dragEl?.parentElement as HTMLCalciteListElement;\n\n    if (!parentEl) {\n      return;\n    }\n\n    const { filteredItems } = this;\n\n    const sameParentItems = filteredItems.filter((item) => item.parentElement === parentEl);\n\n    const lastIndex = sameParentItems.length - 1;\n    const oldIndex = sameParentItems.indexOf(dragEl);\n    let newIndex: number;\n\n    if (direction === \"up\") {\n      newIndex = oldIndex === 0 ? lastIndex : oldIndex - 1;\n    } else {\n      newIndex = oldIndex === lastIndex ? 0 : oldIndex + 1;\n    }\n\n    this.disconnectObserver();\n    handle.blurUnselectDisabled = true;\n\n    const referenceEl =\n      (direction === \"up\" && newIndex !== lastIndex) || (direction === \"down\" && newIndex === 0)\n        ? sameParentItems[newIndex]\n        : sameParentItems[newIndex].nextSibling;\n\n    parentEl.insertBefore(dragEl, referenceEl);\n\n    this.updateListItems();\n    this.connectObserver();\n\n    this.calciteListOrderChange.emit({\n      dragEl,\n      fromEl: parentEl,\n      toEl: parentEl,\n      newIndex,\n      oldIndex,\n    });\n\n    handle.setFocus().then(() => (handle.blurUnselectDisabled = false));\n  }\n}\n", ":host {\n  @apply flex flex-col;\n  --calcite-list-item-icon-color: theme(\"colors.brand\");\n  --calcite-list-item-spacing-indent: theme(\"spacing.4\");\n}\n\n:host([filter-hidden]) {\n  @apply hidden;\n}\n\n@include disabled();\n\n.container {\n  @apply bg-foreground-1\n  box-border\n  flex\n  flex-1 font-sans;\n  * {\n    @apply box-border;\n  }\n  padding-inline-start: calc(\n    var(--calcite-list-item-spacing-indent) * var(--calcite-list-item-spacing-indent-multiplier)\n  );\n}\n\n.container--hover:hover {\n  @apply bg-foreground-2 cursor-pointer;\n}\n\n.container:active {\n  @apply bg-foreground-1;\n}\n\n.container--border {\n  border-inline-start-width: theme(\"borderWidth.4\");\n  border-inline-start-style: solid;\n}\n\n.container--border-selected {\n  border-inline-start-color: theme(\"colors.brand\");\n}\n\n.container--border-unselected {\n  border-inline-start-color: transparent;\n}\n\n.container:hover {\n  &.container--border-unselected {\n    @apply border-color-1;\n  }\n}\n\n.nested-container {\n  @apply bg-foreground-1 flex flex-col;\n}\n\n.nested-container--hidden {\n  @apply hidden;\n}\n\n.content-container {\n  @apply text-color-2\n    select-none\n    flex\n    flex-auto\n    font-sans\n    font-normal\n    items-stretch\n    p-0;\n}\n\ntr,\ntd {\n  @apply focus-base;\n}\n\ntr:focus,\ntd:focus {\n  @apply focus-inset;\n}\n\n.content,\n.custom-content {\n  @apply text-n2-wrap\n    flex\n    flex-auto\n    flex-col\n    justify-center\n    px-3\n    py-2;\n}\n\n.label,\n.description,\n.content-bottom {\n  @apply text-n2 word-break font-sans font-normal;\n  &:only-child {\n    @apply m-0 py-1;\n  }\n}\n\n.label {\n  @apply text-color-1;\n}\n\n:host([selected]) .label {\n  @apply font-medium;\n}\n\n.description {\n  @apply text-color-3 mt-0.5;\n}\n\n:host([selected]) .description {\n  @apply text-color-2;\n}\n\n.content-start {\n  @apply justify-start;\n}\n\n.content-end {\n  @apply justify-end;\n}\n\n.content-start,\n.content-end {\n  @apply flex-auto;\n}\n\n.content-bottom {\n  @apply bg-foreground-1 flex flex-col;\n  padding-inline-start: calc(\n    var(--calcite-list-item-spacing-indent) * var(--calcite-list-item-spacing-indent-multiplier)\n  );\n}\n\n.content-container--has-center-content .content-start,\n.content-container--has-center-content .content-end {\n  @apply flex-initial;\n}\n\n.selection-container {\n  @apply flex px-3;\n  color: theme(\"borderColor.color.input\");\n}\n\n.selection-container--single {\n  color: transparent;\n}\n\n:host(:not([disabled]):not([selected])) .container:hover .selection-container--single {\n  color: theme(\"borderColor.color.1\");\n}\n\n:host([selected]:hover) .selection-container,\n:host([selected]:hover) .selection-container--single,\n:host([selected]) .selection-container {\n  color: var(--calcite-list-item-icon-color);\n}\n\n.open-container {\n  color: theme(\"textColor.color.3\");\n}\n\n:host(:not([disabled])) .container:hover .open-container {\n  color: theme(\"textColor.color.1\");\n}\n\n.actions-start,\n.actions-end,\n.content-start,\n.content-end,\n.selection-container,\n.drag-container,\n.open-container {\n  @apply flex items-center;\n}\n\n.open-container,\n.selection-container {\n  @apply cursor-pointer;\n}\n\n.content-start,\n.content-end {\n  ::slotted(calcite-icon) {\n    @apply self-center mx-3;\n  }\n}\n\n.actions-start,\n.actions-end {\n  ::slotted(calcite-action),\n  ::slotted(calcite-action-menu),\n  ::slotted(calcite-handle),\n  ::slotted(calcite-dropdown) {\n    @apply self-stretch;\n\n    color: inherit;\n  }\n}\n\n::slotted(calcite-list-item),\n::slotted(calcite-list) {\n  @apply border-solid border-0 border-t border-color-3;\n}\n\n::slotted(calcite-list:empty) {\n  @apply py-3;\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getFirstTabbable,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { SelectionMode } from \"../interfaces\";\nimport { SelectionAppearance } from \"../list/resources\";\nimport { CSS, activeCellTestAttribute, ICONS, SLOTS } from \"./resources\";\nimport {\n  getDepth,\n  getListItemChildren,\n  getListItemChildLists,\n  updateListItemChildren,\n} from \"./utils\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ListItemMessages } from \"./assets/list-item/t9n\";\n\nconst focusMap = new Map<HTMLCalciteListElement, number>();\n\nconst listSelector = \"calcite-list\";\n\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { SortableComponentItem } from \"../../utils/sortableComponent\";\n\n/**\n * @slot - A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.\n * @slot actions-start - A slot for adding actionable `calcite-action` elements before the content of the component.\n * @slot content-start - A slot for adding non-actionable elements before the label and description of the component.\n * @slot content - A slot for adding non-actionable, centered content in place of the `label` and `description` of the component.\n * @slot content-end - A slot for adding non-actionable elements after the label and description of the component.\n * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the component.\n * @slot content-bottom - A slot for adding content below the component's `label` and `description`.\n */\n@Component({\n  tag: \"calcite-list-item\",\n  styleUrl: \"list-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ListItem\n  implements\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent,\n    SortableComponentItem\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets the item as focusable. Only one item should be focusable within a list.\n   *\n   * @internal\n   */\n  @Prop() active = false;\n\n  @Watch(\"active\")\n  activeHandler(active: boolean): void {\n    if (!active) {\n      this.focusCell(null, false);\n    }\n  }\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  @Watch(\"closed\")\n  handleClosedChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * A description for the component. Displays below the label text.\n   */\n  @Prop() description: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * When `true`, the item is not draggable.\n   */\n  @Prop({ reflect: true }) dragDisabled = false;\n\n  /**\n   * When `true`, the component displays a draggable button.\n   *\n   * @internal\n   */\n  @Prop() dragHandle = false;\n\n  /**\n   * When `true`, the component's drag handle is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) dragSelected = false;\n\n  /**\n   * Hides the component when filtered.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterHidden = false;\n\n  /**\n   * The label text of the component. Displays above the description text.\n   */\n  @Prop() label: string;\n\n  /**\n   * Provides additional metadata to the component. Primary use is for a filter on the parent `calcite-list`.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  /**\n   * When `true`, the item is open to show child components.\n   */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  /**\n   * Used to specify the aria-setsize attribute to define the number of items in the current set of list for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setSize: number = null;\n\n  /**\n   * Used to specify the aria-posinset attribute to define the number or position in the current set of list items for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setPosition: number = null;\n\n  /**\n   * When `true` and the parent `calcite-list`'s `selectionMode` is `\"single\"`, `\"single-persist\"', or `\"multiple\"`, the component is selected.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(): void {\n    this.calciteInternalListItemSelect.emit();\n  }\n\n  /**\n   * The component's value.\n   */\n  @Prop() value: any;\n\n  /**\n   * Specifies the selection mode - `\"multiple\"` (allow any number of selected items), `\"single\"` (allow one selected item), `\"single-persist\"` (allow one selected item and prevent de-selection), or `\"none\"` (no selected items).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionMode: Extract<\n    \"none\" | \"multiple\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = null;\n\n  /**\n   * Specifies the selection appearance - `\"icon\"` (displays a checkmark or dot) or `\"border\"` (displays a border).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionAppearance: SelectionAppearance = null;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ListItemMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ListItemMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemSelect: EventEmitter<void>;\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemClose: EventEmitter<void>;\n\n  /**\n   * Fires when the drag handle is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemDragHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the open button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemToggle: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemSelect: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalListItemSelectMultiple: EventEmitter<{\n    selectMultiple: boolean;\n  }>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemActive: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalFocusPreviousItem: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemChange: EventEmitter<void>;\n\n  @Listen(\"calciteInternalListItemGroupDefaultSlotChange\")\n  @Listen(\"calciteInternalListDefaultSlotChange\")\n  handleCalciteInternalListDefaultSlotChanges(event: CustomEvent<void>): void {\n    event.stopPropagation();\n    this.handleOpenableChange(this.defaultSlotEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteListItemElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ListItemMessages;\n\n  @State() level: number = null;\n\n  @State() visualLevel: number = null;\n\n  @State() parentListEl: HTMLCalciteListElement;\n\n  @State() openable = false;\n\n  @State() hasActionsStart = false;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasCustomContent = false;\n\n  @State() hasContentStart = false;\n\n  @State() hasContentEnd = false;\n\n  @State() hasContentBottom = false;\n\n  containerEl: HTMLTableRowElement;\n\n  contentEl: HTMLTableCellElement;\n\n  actionsStartEl: HTMLTableCellElement;\n\n  actionsEndEl: HTMLTableCellElement;\n\n  handleGridEl: HTMLTableCellElement;\n\n  defaultSlotEl: HTMLSlotElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    const { el } = this;\n    this.parentListEl = el.closest(listSelector);\n    this.level = getDepth(el) + 1;\n    this.visualLevel = getDepth(el, true);\n    this.setSelectionDefaults();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    const { containerEl, parentListEl } = this;\n    const focusIndex = focusMap.get(parentListEl);\n\n    if (typeof focusIndex === \"number\") {\n      const cells = this.getGridCells();\n      if (cells[focusIndex]) {\n        this.focusCell(cells[focusIndex]);\n      } else {\n        containerEl?.focus();\n      }\n      return;\n    }\n\n    containerEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderSelected(): VNode {\n    const { selected, selectionMode, selectionAppearance } = this;\n\n    if (selectionMode === \"none\" || selectionAppearance === \"border\") {\n      return null;\n    }\n\n    return (\n      <td\n        class={{\n          [CSS.selectionContainer]: true,\n          [CSS.selectionContainerSingle]:\n            selectionMode === \"single\" || selectionMode === \"single-persist\",\n        }}\n        key=\"selection-container\"\n        onClick={this.handleItemClick}\n      >\n        <calcite-icon\n          icon={\n            selected\n              ? selectionMode === \"multiple\"\n                ? ICONS.selectedMultiple\n                : ICONS.selectedSingle\n              : selectionMode === \"multiple\"\n                ? ICONS.unselectedMultiple\n                : ICONS.unselectedSingle\n          }\n          scale=\"s\"\n        />\n      </td>\n    );\n  }\n\n  renderDragHandle(): VNode {\n    const { label, dragHandle, dragSelected, dragDisabled, setPosition, setSize } = this;\n\n    return dragHandle ? (\n      <td\n        aria-label={label}\n        class={CSS.dragContainer}\n        key=\"drag-handle-container\"\n        onFocusin={this.focusCellHandle}\n        role=\"gridcell\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.handleGridEl = el)}\n      >\n        <calcite-handle\n          disabled={dragDisabled}\n          label={label}\n          onCalciteHandleChange={this.dragHandleSelectedChangeHandler}\n          selected={dragSelected}\n          setPosition={setPosition}\n          setSize={setSize}\n        />\n      </td>\n    ) : null;\n  }\n\n  renderOpen(): VNode {\n    const { el, open, openable, messages } = this;\n    const dir = getElementDir(el);\n    const icon = open ? ICONS.open : dir === \"rtl\" ? ICONS.closedRTL : ICONS.closedLTR;\n    const tooltip = open ? messages.collapse : messages.expand;\n\n    return openable ? (\n      <td\n        class={CSS.openContainer}\n        key=\"open-container\"\n        onClick={this.handleToggleClick}\n        title={tooltip}\n      >\n        <calcite-icon icon={icon} key={icon} scale=\"s\" />\n      </td>\n    ) : null;\n  }\n\n  renderActionsStart(): VNode {\n    const { label, hasActionsStart } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsStart}\n        hidden={!hasActionsStart}\n        key=\"actions-start-container\"\n        onFocusin={this.focusCellActionsStart}\n        role=\"gridcell\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.actionsStartEl = el)}\n      >\n        <slot name={SLOTS.actionsStart} onSlotchange={this.handleActionsStartSlotChange} />\n      </td>\n    );\n  }\n\n  renderActionsEnd(): VNode {\n    const { label, hasActionsEnd, closable, messages } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsEnd}\n        hidden={!(hasActionsEnd || closable)}\n        key=\"actions-end-container\"\n        onFocusin={this.focusCellActionsEnd}\n        role=\"gridcell\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.actionsEndEl = el)}\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        {closable ? (\n          <calcite-action\n            appearance=\"transparent\"\n            icon={ICONS.close}\n            key=\"close-action\"\n            label={messages.close}\n            onClick={this.handleCloseClick}\n            text={messages.close}\n          />\n        ) : null}\n      </td>\n    );\n  }\n\n  renderContentStart(): VNode {\n    const { hasContentStart } = this;\n    return (\n      <div class={CSS.contentStart} hidden={!hasContentStart}>\n        <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n      </div>\n    );\n  }\n\n  renderCustomContent(): VNode {\n    const { hasCustomContent } = this;\n    return (\n      <div class={CSS.customContent} hidden={!hasCustomContent}>\n        <slot name={SLOTS.content} onSlotchange={this.handleContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentEnd(): VNode {\n    const { hasContentEnd } = this;\n    return (\n      <div class={CSS.contentEnd} hidden={!hasContentEnd}>\n        <slot name={SLOTS.contentEnd} onSlotchange={this.handleContentEndSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    const { hasContentBottom, visualLevel } = this;\n    return (\n      <div\n        class={CSS.contentBottom}\n        hidden={!hasContentBottom}\n        style={{ \"--calcite-list-item-spacing-indent-multiplier\": `${visualLevel}` }}\n      >\n        <slot name={SLOTS.contentBottom} onSlotchange={this.handleContentBottomSlotChange} />\n      </div>\n    );\n  }\n\n  renderDefaultContainer(): VNode {\n    return (\n      <div\n        class={{\n          [CSS.nestedContainer]: true,\n          [CSS.nestedContainerHidden]: this.openable && !this.open,\n        }}\n      >\n        <slot\n          onSlotchange={this.handleDefaultSlotChange}\n          ref={(el: HTMLSlotElement) => (this.defaultSlotEl = el)}\n        />\n      </div>\n    );\n  }\n\n  renderContentProperties(): VNode {\n    const { label, description, hasCustomContent } = this;\n\n    return !hasCustomContent && (!!label || !!description) ? (\n      <div class={CSS.content} key=\"content\">\n        {label ? (\n          <div class={CSS.label} key=\"label\">\n            {label}\n          </div>\n        ) : null}\n        {description ? (\n          <div class={CSS.description} key=\"description\">\n            {description}\n          </div>\n        ) : null}\n      </div>\n    ) : null;\n  }\n\n  renderContentContainer(): VNode {\n    const { description, label, selectionMode, hasCustomContent } = this;\n    const hasCenterContent = hasCustomContent || !!label || !!description;\n    const content = [\n      this.renderContentStart(),\n      this.renderCustomContent(),\n      this.renderContentProperties(),\n      this.renderContentEnd(),\n    ];\n\n    return (\n      <td\n        aria-label={label}\n        class={{\n          [CSS.contentContainer]: true,\n          [CSS.contentContainerSelectable]: selectionMode !== \"none\",\n          [CSS.contentContainerHasCenterContent]: hasCenterContent,\n        }}\n        key=\"content-container\"\n        onClick={this.handleItemClick}\n        onFocusin={this.focusCellContent}\n        role=\"gridcell\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.contentEl = el)}\n      >\n        {content}\n      </td>\n    );\n  }\n\n  render(): VNode {\n    const {\n      openable,\n      open,\n      level,\n      setPosition,\n      setSize,\n      active,\n      label,\n      selected,\n      selectionAppearance,\n      selectionMode,\n      closed,\n      visualLevel,\n    } = this;\n\n    const showBorder = selectionMode !== \"none\" && selectionAppearance === \"border\";\n    const borderSelected = showBorder && selected;\n    const borderUnselected = showBorder && !selected;\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <tr\n            aria-expanded={openable ? toAriaBoolean(open) : null}\n            aria-label={label}\n            aria-level={level}\n            aria-posinset={setPosition}\n            aria-selected={toAriaBoolean(selected)}\n            aria-setsize={setSize}\n            class={{\n              [CSS.container]: true,\n              [CSS.containerHover]: true,\n              [CSS.containerBorder]: showBorder,\n              [CSS.containerBorderSelected]: borderSelected,\n              [CSS.containerBorderUnselected]: borderUnselected,\n            }}\n            hidden={closed}\n            onFocus={this.focusCellNull}\n            onFocusin={this.emitInternalListItemActive}\n            onKeyDown={this.handleItemKeyDown}\n            role=\"row\"\n            style={{ \"--calcite-list-item-spacing-indent-multiplier\": `${visualLevel}` }}\n            tabIndex={active ? 0 : -1}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(el) => (this.containerEl = el)}\n          >\n            {this.renderDragHandle()}\n            {this.renderSelected()}\n            {this.renderOpen()}\n            {this.renderActionsStart()}\n            {this.renderContentContainer()}\n            {this.renderActionsEnd()}\n          </tr>\n          {this.renderContentBottom()}\n          {this.renderDefaultContainer()}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private dragHandleSelectedChangeHandler = (event: CustomEvent): void => {\n    this.dragSelected = (event.target as HTMLCalciteHandleElement).selected;\n    this.calciteListItemDragHandleChange.emit();\n    event.stopPropagation();\n  };\n\n  private emitInternalListItemActive = (): void => {\n    this.calciteInternalListItemActive.emit();\n  };\n\n  private focusCellHandle = (): void => {\n    this.handleCellFocusIn(this.handleGridEl);\n  };\n\n  private focusCellActionsStart = (): void => {\n    this.handleCellFocusIn(this.actionsStartEl);\n  };\n\n  private focusCellContent = (): void => {\n    this.handleCellFocusIn(this.contentEl);\n  };\n\n  private focusCellActionsEnd = (): void => {\n    this.handleCellFocusIn(this.actionsEndEl);\n  };\n\n  private emitCalciteInternalListItemChange(): void {\n    this.calciteInternalListItemChange.emit();\n  }\n\n  private handleCloseClick = (): void => {\n    this.closed = true;\n    this.calciteListItemClose.emit();\n  };\n\n  private handleContentSlotChange = (event: Event): void => {\n    this.hasCustomContent = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsStartSlotChange = (event: Event): void => {\n    this.hasActionsStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    this.hasContentStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentEndSlotChange = (event: Event): void => {\n    this.hasContentEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentBottomSlotChange = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n\n  private setSelectionDefaults(): void {\n    const { parentListEl, selectionMode, selectionAppearance } = this;\n\n    if (!parentListEl) {\n      return;\n    }\n\n    if (!selectionMode) {\n      this.selectionMode = parentListEl.selectionMode;\n    }\n\n    if (!selectionAppearance) {\n      this.selectionAppearance = parentListEl.selectionAppearance;\n    }\n  }\n\n  private handleOpenableChange(slotEl: HTMLSlotElement): void {\n    if (!slotEl) {\n      return;\n    }\n\n    const listItemChildren = getListItemChildren(slotEl);\n    const listItemChildLists = getListItemChildLists(slotEl);\n    updateListItemChildren(listItemChildren);\n\n    this.openable = !!listItemChildren.length || !!listItemChildLists.length;\n  }\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.handleOpenableChange(event.target as HTMLSlotElement);\n  };\n\n  private handleToggleClick = (): void => {\n    this.toggle();\n  };\n\n  private toggle = (value = !this.open): void => {\n    this.open = value;\n    this.calciteListItemToggle.emit();\n  };\n\n  private handleItemClick = (event: PointerEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    this.toggleSelected(event.shiftKey);\n  };\n\n  private toggleSelected = (shiftKey: boolean): void => {\n    const { selectionMode, selected } = this;\n\n    if (this.disabled) {\n      return;\n    }\n\n    if (selectionMode === \"multiple\" || selectionMode === \"single\") {\n      this.selected = !selected;\n    } else if (selectionMode === \"single-persist\") {\n      this.selected = true;\n    }\n\n    this.calciteInternalListItemSelectMultiple.emit({\n      selectMultiple: shiftKey && selectionMode === \"multiple\",\n    });\n    this.calciteListItemSelect.emit();\n  };\n\n  private getGridCells(): HTMLTableCellElement[] {\n    return [this.handleGridEl, this.actionsStartEl, this.contentEl, this.actionsEndEl].filter(\n      (el) => el && !el.hidden,\n    );\n  }\n\n  private handleItemKeyDown = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const { key } = event;\n    const composedPath = event.composedPath();\n    const { containerEl, actionsStartEl, actionsEndEl, open, openable } = this;\n\n    const cells = this.getGridCells();\n    const currentIndex = cells.findIndex((cell) => composedPath.includes(cell));\n\n    if (\n      key === \"Enter\" &&\n      !composedPath.includes(actionsStartEl) &&\n      !composedPath.includes(actionsEndEl)\n    ) {\n      event.preventDefault();\n      this.toggleSelected(event.shiftKey);\n    } else if (key === \"ArrowRight\") {\n      event.preventDefault();\n      const nextIndex = currentIndex + 1;\n      if (currentIndex === -1) {\n        if (!open && openable) {\n          this.toggle(true);\n          this.focusCell(null);\n        } else if (cells[0]) {\n          this.focusCell(cells[0]);\n        }\n      } else if (cells[currentIndex] && cells[nextIndex]) {\n        this.focusCell(cells[nextIndex]);\n      }\n    } else if (key === \"ArrowLeft\") {\n      event.preventDefault();\n      const prevIndex = currentIndex - 1;\n      if (currentIndex === -1) {\n        this.focusCell(null);\n        if (open && openable) {\n          this.toggle(false);\n        } else {\n          this.calciteInternalFocusPreviousItem.emit();\n        }\n      } else if (currentIndex === 0) {\n        this.focusCell(null);\n        containerEl.focus();\n      } else if (cells[currentIndex] && cells[prevIndex]) {\n        this.focusCell(cells[prevIndex]);\n      }\n    }\n  };\n\n  private focusCellNull = (): void => {\n    this.focusCell(null);\n  };\n\n  private handleCellFocusIn = (focusEl: HTMLTableCellElement): void => {\n    this.setFocusCell(focusEl, getFirstTabbable(focusEl), true);\n  };\n\n  // Only one cell within a list-item should be focusable at a time. Ensures the active cell is focusable.\n  private setFocusCell = (\n    focusEl: HTMLTableCellElement | null,\n    focusedEl: HTMLElement,\n    saveFocusIndex: boolean,\n  ): void => {\n    const { parentListEl } = this;\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, null);\n    }\n\n    const gridCells = this.getGridCells();\n\n    gridCells.forEach((tableCell) => {\n      tableCell.tabIndex = -1;\n      tableCell.removeAttribute(activeCellTestAttribute);\n    });\n\n    if (!focusEl) {\n      return;\n    }\n\n    focusEl.tabIndex = focusEl === focusedEl ? 0 : -1;\n    focusEl.setAttribute(activeCellTestAttribute, \"\");\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, gridCells.indexOf(focusEl));\n    }\n  };\n\n  private focusCell = (focusEl: HTMLTableCellElement | null, saveFocusIndex = true): void => {\n    const focusedEl = getFirstTabbable(focusEl);\n    this.setFocusCell(focusEl, focusedEl, saveFocusIndex);\n    focusedEl?.focus();\n  };\n}\n", "export const CSS = {\n  container: \"container\",\n  heading: \"heading\",\n};\n", ":host {\n  @apply flex flex-col bg-foreground-1;\n  --calcite-list-item-spacing-indent: theme(\"spacing.4\");\n}\n\n:host([filter-hidden]) {\n  @apply hidden;\n}\n\n@include disabled();\n\n.container {\n  @apply bg-foreground-2 text-n1 text-color-2 m-0 flex flex-1 p-3 font-sans font-bold;\n}\n\n.heading {\n  padding-inline-start: calc(\n    var(--calcite-list-item-spacing-indent) * var(--calcite-list-item-spacing-indent-multiplier)\n  );\n}\n\n::slotted(calcite-list-item) {\n  @apply shadow-border-top;\n  margin-block-start: 1px;\n}\n\n// removes shadow for the first item of the group for both filtered and unfiltered items.\n::slotted(calcite-list-item:nth-child(1 of :not([hidden]))) {\n  @apply shadow-none;\n  margin-block-start: 0px;\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n  VNode,\n} from \"@stencil/core\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { MAX_COLUMNS } from \"../list-item/resources\";\nimport { getDepth } from \"../list-item/utils\";\nimport { CSS } from \"./resources\";\n/**\n * @slot - A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.\n */\n@Component({\n  tag: \"calcite-list-item-group\",\n  styleUrl: \"list-item-group.scss\",\n  shadow: true,\n})\nexport class ListItemGroup implements InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Hides the component when filtered.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterHidden = false;\n\n  /**\n   * The header text for all nested `calcite-list-item` rows.\n   *\n   */\n  @Prop({ reflect: true }) heading: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when changes occur in the default slot, notifying parent lists of the changes.\n   */\n  @Event({ cancelable: false })\n  calciteInternalListItemGroupDefaultSlotChange: EventEmitter<DragEvent>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    const { el } = this;\n    this.visualLevel = getDepth(el, true);\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteListItemGroupElement;\n\n  @State() visualLevel: number = null;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { disabled, heading, visualLevel } = this;\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <tr\n            class={CSS.container}\n            style={{ \"--calcite-list-item-spacing-indent-multiplier\": `${visualLevel}` }}\n          >\n            <td class={CSS.heading} colSpan={MAX_COLUMNS}>\n              {heading}\n            </td>\n          </tr>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (): void => {\n    this.calciteInternalListItemGroupDefaultSlotChange.emit();\n  };\n}\n"],
  "mappings": "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",
  "names": ["CSS", "SLOTS", "listSelector", "listItemSelector", "items", "STACK_SLOTS"]
}
