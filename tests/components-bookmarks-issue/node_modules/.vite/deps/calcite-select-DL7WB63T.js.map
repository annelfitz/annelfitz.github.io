{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/components/src/components/select/resources.ts", "../../@esri/calcite-components/dist/components/src/components/select/select.scss?tag=calcite-select&encapsulation=shadow", "../../@esri/calcite-components/dist/components/src/components/select/select.tsx"],
  "sourcesContent": ["export const CSS = {\n  icon: \"icon\",\n  iconContainer: \"icon-container\",\n  select: \"select\",\n  wrapper: \"wrapper\",\n};\n", "/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-select-font-size: The font size of `calcite-option`s in the component.\n * @prop --calcite-select-spacing: The padding around the selected option text.\n */\n\n:host {\n  @extend %component-spacing;\n  @apply flex flex-col;\n}\n\n.wrapper {\n  @apply relative flex items-stretch;\n  inline-size: var(--select-width);\n}\n\n@include disabled();\n\n:host([scale=\"s\"]) {\n  --calcite-select-font-size: theme(\"fontSize.n2h\");\n  --calcite-select-spacing-inline: theme(\"spacing.2\") theme(\"spacing.8\");\n\n  .wrapper {\n    @apply h-6;\n  }\n\n  .icon-container {\n    @apply px-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-select-font-size: theme(\"fontSize.n1h\");\n  --calcite-select-spacing-inline: theme(\"spacing.3\") theme(\"spacing.10\");\n\n  .wrapper {\n    @apply h-8;\n  }\n\n  .icon-container {\n    @apply px-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-select-font-size: theme(\"fontSize.0h\");\n  --calcite-select-spacing-inline: theme(\"spacing.4\") theme(\"spacing.12\");\n\n  .wrapper {\n    block-size: 44px;\n  }\n\n  .icon-container {\n    @apply px-4;\n  }\n}\n\n:host([width=\"auto\"]) {\n  @apply w-auto;\n}\n\n:host([width=\"half\"]) {\n  @apply w-1/2;\n}\n\n:host([width=\"full\"]) {\n  @apply w-full;\n}\n\n.select {\n  @apply bg-foreground-1 border-color-input text-color-2 font-inherit focus-base m-0 box-border w-full cursor-pointer appearance-none truncate rounded-none border border-solid;\n  font-size: var(--calcite-select-font-size);\n  padding-inline: var(--calcite-select-spacing-inline);\n  border-inline-end-width: theme(\"borderWidth.0\");\n\n  &:focus {\n    @apply focus-inset;\n  }\n\n  &:hover {\n    @apply bg-foreground-2;\n  }\n}\n\n// override user agent stylesheet disabled styling\nselect:disabled {\n  @apply border-color-input bg-opacity-100;\n}\n\n.icon-container {\n  @apply border-color-input text-color-2 pointer-events-none absolute inset-y-0 flex items-center border-0 border-solid bg-transparent;\n  inset-inline-end: theme(\"inset.0\");\n  border-inline-width: theme(\"borderWidth.0\") theme(\"borderWidth.DEFAULT\");\n}\n\n:host([status=\"invalid\"]) {\n  select,\n  .icon-container {\n    @apply border-color-danger;\n  }\n\n  select:focus,\n  .icon-container:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n.select:focus ~ .icon-container {\n  @apply border-color-transparent;\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { focusElement } from \"../../utils/dom\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, LabelableComponent, getLabelText } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale, Status, Width } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\n\ntype OptionOrGroup = HTMLCalciteOptionElement | HTMLCalciteOptionGroupElement;\ntype NativeOptionOrGroup = HTMLOptionElement | HTMLOptGroupElement;\n\nfunction isOption(optionOrGroup: OptionOrGroup): optionOrGroup is HTMLCalciteOptionElement {\n  return optionOrGroup.tagName === \"CALCITE-OPTION\";\n}\n\nfunction isOptionGroup(\n  optionOrGroup: OptionOrGroup,\n): optionOrGroup is HTMLCalciteOptionGroupElement {\n  return optionOrGroup.tagName === \"CALCITE-OPTION-GROUP\";\n}\n\n/**\n * @slot - A slot for adding `calcite-option`s.\n */\n@Component({\n  tag: \"calcite-select\",\n  styleUrl: \"select.scss\",\n  shadow: true,\n})\nexport class Select\n  implements LabelableComponent, FormComponent, InteractiveComponent, LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * Accessible name for the component.\n   *\n   */\n  @Prop() label!: string;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: string | boolean;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /** The component's `selectedOption` value. */\n  @Prop({ mutable: true }) value: string = null;\n\n  @Watch(\"value\")\n  valueHandler(value: string): void {\n    const items = this.el.querySelectorAll(\"calcite-option\");\n    items.forEach((item) => (item.selected = item.value === value));\n  }\n\n  /**\n   * The component's selected option `HTMLElement`.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedOption: HTMLCalciteOptionElement;\n\n  @Watch(\"selectedOption\")\n  selectedOptionHandler(selectedOption: HTMLCalciteOptionElement): void {\n    this.value = selectedOption?.value;\n  }\n\n  /**\n   * Specifies the width of the component.\n   */\n  @Prop({ reflect: true }) width: Width = \"auto\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSelectElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Select[\"value\"];\n\n  private componentToNativeEl = new Map<OptionOrGroup, NativeOptionOrGroup>();\n\n  private mutationObserver = createObserver(\"mutation\", () => this.populateInternalSelect());\n\n  private selectEl: HTMLSelectElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    const { el } = this;\n\n    this.mutationObserver?.observe(el, {\n      subtree: true,\n      childList: true,\n    });\n\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    afterConnectDefaultValueSet(this, this.selectedOption?.value ?? \"\");\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusElement(this.selectEl);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the `selectedOption` changes.\n   */\n  @Event({ cancelable: false }) calciteSelectChange: EventEmitter<void>;\n\n  private handleInternalSelectChange = (): void => {\n    const selected = this.selectEl.selectedOptions[0];\n    this.selectFromNativeOption(selected);\n    requestAnimationFrame(() => this.emitChangeEvent());\n  };\n\n  @Listen(\"calciteInternalOptionChange\")\n  @Listen(\"calciteInternalOptionGroupChange\")\n  protected handleOptionOrGroupChange(event: CustomEvent): void {\n    event.stopPropagation();\n\n    const optionOrGroup = event.target as OptionOrGroup;\n    const nativeEl = this.componentToNativeEl.get(optionOrGroup);\n\n    if (!nativeEl) {\n      return;\n    }\n\n    this.updateNativeElement(optionOrGroup, nativeEl);\n\n    if (isOption(optionOrGroup) && optionOrGroup.selected) {\n      this.deselectAllExcept(optionOrGroup);\n      this.selectedOption = optionOrGroup;\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private updateNativeElement(\n    optionOrGroup: OptionOrGroup,\n    nativeOptionOrGroup: NativeOptionOrGroup,\n  ): void {\n    nativeOptionOrGroup.disabled = optionOrGroup.disabled;\n    nativeOptionOrGroup.label = optionOrGroup.label;\n\n    if (isOption(optionOrGroup)) {\n      const option = nativeOptionOrGroup as HTMLOptionElement;\n      option.selected = optionOrGroup.selected;\n      option.value = optionOrGroup.value;\n\n      // need to set innerText for mobile\n      // see https://stackoverflow.com/questions/35021620/ios-safari-not-showing-all-options-for-select-menu/41749701\n      option.innerText = optionOrGroup.label;\n    }\n  }\n\n  private populateInternalSelect = (): void => {\n    const optionsAndGroups = Array.from(\n      this.el.children as HTMLCollectionOf<OptionOrGroup | HTMLSlotElement>,\n    ).filter(\n      (child) => child.tagName === \"CALCITE-OPTION\" || child.tagName === \"CALCITE-OPTION-GROUP\",\n    ) as OptionOrGroup[];\n\n    this.clearInternalSelect();\n\n    optionsAndGroups.forEach(\n      (optionOrGroup) => this.selectEl?.append(this.toNativeElement(optionOrGroup)),\n    );\n  };\n\n  private clearInternalSelect(): void {\n    this.componentToNativeEl.forEach((value) => value.remove());\n    this.componentToNativeEl.clear();\n  }\n\n  private storeSelectRef = (node: HTMLSelectElement): void => {\n    this.selectEl = node;\n    this.populateInternalSelect();\n\n    const selected = this.selectEl.selectedOptions[0];\n    this.selectFromNativeOption(selected);\n  };\n\n  private selectFromNativeOption(nativeOption: HTMLOptionElement): void {\n    if (!nativeOption) {\n      return;\n    }\n\n    let futureSelected: HTMLCalciteOptionElement;\n\n    this.componentToNativeEl.forEach((nativeOptionOrGroup, optionOrGroup) => {\n      if (isOption(optionOrGroup) && nativeOptionOrGroup === nativeOption) {\n        optionOrGroup.selected = true;\n        futureSelected = optionOrGroup;\n        this.deselectAllExcept(optionOrGroup as HTMLCalciteOptionElement);\n      }\n    });\n\n    if (futureSelected) {\n      this.selectedOption = futureSelected;\n    }\n  }\n\n  private toNativeElement(\n    optionOrGroup: HTMLCalciteOptionElement | HTMLCalciteOptionGroupElement,\n  ): NativeOptionOrGroup {\n    if (isOption(optionOrGroup)) {\n      const option = document.createElement(\"option\");\n      this.updateNativeElement(optionOrGroup, option);\n      this.componentToNativeEl.set(optionOrGroup, option);\n\n      return option;\n    }\n\n    if (isOptionGroup(optionOrGroup)) {\n      const group = document.createElement(\"optgroup\");\n      this.updateNativeElement(optionOrGroup, group);\n\n      Array.from(optionOrGroup.children as HTMLCollectionOf<HTMLCalciteOptionElement>).forEach(\n        (option) => {\n          const nativeOption = this.toNativeElement(option);\n          group.append(nativeOption);\n          this.componentToNativeEl.set(optionOrGroup, nativeOption);\n        },\n      );\n\n      this.componentToNativeEl.set(optionOrGroup, group);\n\n      return group;\n    }\n\n    throw new Error(\"unsupported element child provided\");\n  }\n\n  private deselectAllExcept(except: HTMLCalciteOptionElement): void {\n    this.el.querySelectorAll<HTMLCalciteOptionElement>(\"calcite-option\").forEach((option) => {\n      if (option === except) {\n        return;\n      }\n\n      option.selected = false;\n    });\n  }\n\n  private emitChangeEvent = (): void => {\n    this.calciteSelectChange.emit();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderChevron(): VNode {\n    return (\n      <div class={CSS.iconContainer}>\n        <calcite-icon class={CSS.icon} icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </div>\n    );\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div class={CSS.wrapper}>\n            <select\n              aria-label={getLabelText(this)}\n              class={CSS.select}\n              disabled={disabled}\n              onChange={this.handleInternalSelectChange}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.storeSelectRef}\n            >\n              <slot />\n            </select>\n            {this.renderChevron()}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["Select"]
}
