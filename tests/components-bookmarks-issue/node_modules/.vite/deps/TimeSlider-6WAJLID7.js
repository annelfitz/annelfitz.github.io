import {
  A as A3
} from "./chunk-BJMVCX7I.js";
import {
  c as c4,
  n2 as n4
} from "./chunk-IHPJVVBQ.js";
import {
  e as e5
} from "./chunk-D5LHX57G.js";
import {
  t
} from "./chunk-CDYT7KXF.js";
import {
  i as i2
} from "./chunk-WK2KEW7P.js";
import {
  e as e4
} from "./chunk-EAAEPSBY.js";
import {
  l
} from "./chunk-BYK4ZOU2.js";
import {
  n as n3
} from "./chunk-SCHTG6ZQ.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-TGXFDJCS.js";
import {
  e as e3
} from "./chunk-6AQIVLDN.js";
import {
  c as c3
} from "./chunk-I5RCKVDX.js";
import {
  c as c2,
  o as o3
} from "./chunk-6CWL7BCV.js";
import {
  c
} from "./chunk-CXNX736Z.js";
import {
  D,
  e2,
  r as r2
} from "./chunk-RGCWZ2KZ.js";
import {
  n as n2
} from "./chunk-5VMSFOCB.js";
import "./chunk-LGQXPGTM.js";
import {
  h as h2
} from "./chunk-2SDMYJDE.js";
import "./chunk-TPLOIZC7.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import {
  E,
  j,
  o as o2,
  r
} from "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import {
  A as A2,
  P,
  d as d2,
  w
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import {
  o
} from "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  i,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a,
  d
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  A,
  b
} from "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  n2 as n
} from "./chunk-7RBRCL6S.js";
import {
  h
} from "./chunk-J2EGIWT6.js";
import "./chunk-MDRC3XUT.js";
import "./chunk-NCF6OYL5.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/widgets/TimeSlider/css.js
var t2 = "esri-time-slider";
var e6 = { timeSlider: `${t2}`, timeSliderOutOfBounds: `${t2}--out-of-bounds`, timeSliderMode: `${t2}__mode--`, timeSliderLayout: `${t2}__layout--`, timeSliderRow: `${t2}__row`, animation: `${t2}__animation`, animationButton: `${t2}__animation-button`, timeExtent: `${t2}__time-extent`, timeExtentGroup: `${t2}__time-extent-group`, timeExtentDate: `${t2}__time-extent-date`, timeExtentTime: `${t2}__time-extent-time`, timeExtentSeparator: `${t2}__time-extent-separator`, playbackControls: `${t2}__playback-controls`, min: `${t2}__min`, minDate: `${t2}__min-date`, minTime: `${t2}__min-time`, slider: `${t2}__slider`, sliderMajorTick: "majorTick", sliderMinorTick: "minorTick", max: `${t2}__max`, maxDate: `${t2}__max-date`, maxTime: `${t2}__max-time`, previous: `${t2}__previous`, previousButton: `${t2}__previous-button`, next: `${t2}__next`, nextButton: `${t2}__next-button`, warning: `${t2}__warning`, warningText: `${t2}__warning-text`, hasActions: `${t2}--has-actions`, actions: `${t2}__actions`, actionsButton: `${t2}__actions-button` };

// node_modules/@arcgis/core/widgets/TimeSlider/TimeSliderViewModel.js
var x = 1e4;
function E2(t3) {
  return null != t3 && void 0 !== t3.count;
}
function _(t3) {
  return null != t3 && void 0 !== t3.interval;
}
function y2(t3) {
  return null != t3 && void 0 !== t3.dates;
}
var b2 = class extends o.EventedAccessor {
  constructor(t3) {
    super(t3), this._animationController = null, this._isViewTimeExtentInitialized = false, this._timerId = null, this.actions = new V(), this.fullTimeExtent = null, this.loop = false, this.mode = "time-window", this.stops = { count: 10 }, this.timeExtent = null, this.view = null;
  }
  initialize() {
    this.addHandles([d2(() => this.effectiveStops, () => {
      null == this.timeExtent && (this.timeExtent = this._getDefaultTimeExtent());
    }, P), d2(() => this.view, (t3, e7) => {
      this._unregisterWidget(e7), this._registerWidget(t3);
    }, A2), d2(() => this.timeExtent, (t3) => {
      if (null == this.view)
        return;
      const e7 = this.view.timeExtent;
      (null != t3 && !t3.isAllTime || null != e7 && !e7.isAllTime) && (null != t3 && null != e7 && t3.equals(e7) || (this.view.timeExtent = t3));
    }, P), d2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.timeExtent;
    }, (t3) => {
      this._isViewTimeExtentInitialized ? (null != t3 && !t3.isAllTime || null != this.timeExtent && !this.timeExtent.isAllTime) && (null != t3 && null != this.timeExtent && t3.equals(this.timeExtent) || (this.timeExtent = t3)) : this._isViewTimeExtentInitialized = true;
    })]);
  }
  destroy() {
    null != this._timerId && (clearInterval(this._timerId), this._timerId = null), this._unregisterWidget(this.view), this.view = null, null != this._animationController && (this._animationController.abort(), this._animationController = null);
  }
  get effectiveStops() {
    const { fullTimeExtent: t3, stops: e7 } = this;
    if (y2(e7)) {
      const { dates: i3 } = e7;
      if (null == i3 || 0 === i3.length)
        return null;
      const n5 = i3.sort((t4, e8) => t4.getTime() - e8.getTime());
      if (null == t3)
        return n5;
      const { start: l2, end: s } = t3;
      if (null == l2 || null == s)
        return n5;
      return n5.filter((t4) => !(t4.getTime() < l2.getTime() || t4.getTime() > s.getTime()));
    }
    if (E2(e7)) {
      const i3 = e7.timeExtent ?? t3;
      return this._divideTimeExtentByCount(i3, e7.count);
    }
    if (_(e7)) {
      const i3 = e7.timeExtent ?? t3;
      return this._divideTimeExtentByInterval(i3, e7.interval);
    }
    return [];
  }
  set playRate(t3) {
    t3 <= 0 || t3 > 36e5 || ("playing" === this.state && this._startAnimation(), this._set("playRate", t3));
  }
  get state() {
    return null == this.fullTimeExtent ? "disabled" : null != this._animationController ? "playing" : "ready";
  }
  get timeExtentValues() {
    const { mode: t3, timeExtent: e7 } = this;
    if (null == e7 || e7.isAllTime || e7.isEmpty)
      return null;
    const { start: i3, end: n5 } = e7;
    switch (t3) {
      case "cumulative-from-end":
      case "instant":
        return null != i3 ? [i3.getTime()] : null;
      case "cumulative-from-start":
        return null != n5 ? [n5.getTime()] : null;
      case "time-window":
        return null != i3 && null != n5 ? [i3.getTime(), n5.getTime()] : null;
    }
  }
  static async getPropertiesFromWebMap(t3, e7) {
    i(n.getLogger("esri.widgets.TimeSlider.TimeSliderViewModel"), "`TimeSliderViewModel.getPropertiesFromWebMap` is deprecated in favor of 'timeUtils.getTimeSliderSettingsFromWebMap'", { replacement: "timeUtils.getTimeSliderSettingsFromWebMap", version: "4.29", see: "https://developers.arcgis.com/javascript/latest/api-reference/esri-support-timeUtils.html#getTimeSliderSettingsFromWebMap", warnOnce: true });
    const { getTimeSliderSettingsFromWebMap: i3 } = await import("./timeUtils-QJIRU3RI.js");
    return i3(t3, e7);
  }
  next() {
    this._step({ forward: true, allowRestart: false });
  }
  play() {
    this._startAnimation();
  }
  previous() {
    this._step({ forward: false, allowRestart: false });
  }
  stop() {
    this._stopAnimation();
  }
  triggerAction(t3) {
    this.emit("trigger-action", { action: t3 });
  }
  updateWebDocument(t3) {
    if (e3(t3)) {
      const e7 = new c4({ currentTimeExtent: this.timeExtent, fullTimeExtent: this.fullTimeExtent, loop: this.loop, numStops: E2(this.stops) ? this.stops.count : null, numThumbs: "time-window" === this.mode ? 2 : 1, stopDelay: this.playRate, stopInterval: _(this.stops) ? this.stops.interval : null, stops: y2(this.stops) ? this.stops.dates : null });
      t3.widgets ? t3.widgets.timeSlider = e7 : t3.widgets = new n4({ timeSlider: e7 });
    }
  }
  valuesToTimeExtent(t3) {
    if (null == t3)
      return null;
    const i3 = t3.sort((t4, e7) => t4 - e7).map((t4) => new Date(t4)), n5 = i3.length > 0 ? i3[0] : null, l2 = i3.length > 1 ? i3[1] : null;
    switch (this.mode) {
      case "time-window":
        return new c3({ start: n5, end: l2 });
      case "instant":
        return new c3({ start: n5, end: n5 });
      case "cumulative-from-start":
        return new c3({ start: null, end: n5 });
      case "cumulative-from-end":
        return new c3({ start: n5, end: null });
      default:
        return c3.allTime;
    }
  }
  async _animate() {
    var _a;
    try {
      const t3 = this.view, e7 = (_a = this._animationController) == null ? void 0 : _a.signal;
      await Promise.all([A(this.playRate, null, e7), null != t3 && w(() => false === t3.updating, e7)]);
    } catch (t3) {
      return b(t3) || n.getLogger(this).error(t3), void (this._animationController = null);
    }
    this._step({ forward: true, allowRestart: false }), null != this._animationController && this._animate();
  }
  _divideTimeExtentByCount(t3, e7 = 10) {
    if (!t3 || !e7)
      return [];
    const { start: i3, end: n5 } = t3;
    if (null == i3 || null == n5)
      return [];
    if (e7 > x)
      return this._divideTimeExtentByCount(t3);
    const l2 = [], s = i3.getTime(), r3 = n5.getTime() - s;
    for (let o4 = 0; o4 <= e7; o4++)
      l2.push(new Date(s + o4 / e7 * r3));
    return l2;
  }
  _divideTimeExtentByInterval(t3, e7, i3 = x) {
    if (!t3 || !e7)
      return [];
    const { start: n5, end: l2 } = t3;
    if (null == n5 || null == l2)
      return [];
    const s = l2.getTime() - n5.getTime(), r3 = e7.toMilliseconds();
    if (r3 <= 0 || s / r3 > i3)
      return this._divideTimeExtentByCount(t3);
    const o4 = [], { value: a2, unit: m } = e7;
    let u = n5;
    for (; u.getTime() <= l2.getTime(); )
      o4.push(new Date(u.getTime())), u = o3(u, a2, m);
    return o4;
  }
  _getDefaultTimeExtent() {
    const { effectiveStops: t3, mode: i3 } = this;
    if (null == t3 || !i3)
      return null;
    switch (i3) {
      case "time-window":
        return t3.length > 1 ? new c3({ start: t3[0], end: t3[1] }) : null;
      case "cumulative-from-start":
        return t3.length > 0 ? new c3({ start: null, end: t3[0] }) : null;
      case "cumulative-from-end":
        return t3.length > 0 ? new c3({ start: t3[0], end: null }) : null;
      case "instant":
        return t3.length > 0 ? new c3({ start: t3[0], end: t3[0] }) : null;
      default:
        return null;
    }
  }
  _registerWidget(t3) {
    if (null != t3) {
      t3.persistableViewModels.includes(this) || t3.persistableViewModels.add(this);
    }
  }
  _startAnimation() {
    this._stopAnimation(), this._animationController = new AbortController(), this._step({ forward: true, allowRestart: true }), this._animate();
  }
  _step(t3) {
    const { forward: e7, allowRestart: i3 } = t3, { effectiveStops: n5 } = this;
    if (null == this.timeExtentValues || null == n5)
      return;
    const l2 = n5.map((t4) => t4.getTime()), s = this.timeExtentValues.map((t4) => {
      const e8 = l2.indexOf(t4);
      if (-1 !== e8)
        return e8;
      const i4 = l2.reduce((e9, i5) => Math.abs(i5 - t4) < Math.abs(e9 - t4) ? i5 : e9);
      return l2.indexOf(i4);
    }), r3 = s.map((t4) => t4 + (e7 ? 1 : -1)), o4 = r3.some((t4) => t4 < 0 || t4 > l2.length - 1), { loop: a2, state: m } = this;
    if (o4)
      if (a2 || i3) {
        const t4 = Math.min(...s), i4 = Math.max(...s), n6 = (e7 ? s.map((e8) => e8 - t4) : s.map((t5) => t5 + (l2.length - 1 - i4))).map((t5) => l2[t5]);
        this.timeExtent = this.valuesToTimeExtent(n6);
      } else
        "playing" === m && this.stop();
    else {
      const t4 = r3.map((t5) => l2[t5]);
      this.timeExtent = this.valuesToTimeExtent(t4);
    }
  }
  _stopAnimation() {
    null != this._animationController && (this._animationController.abort(), this._animationController = null);
  }
  _unregisterWidget(t3) {
    null != t3 && t3.persistableViewModels.remove(this);
  }
};
e([y()], b2.prototype, "_animationController", void 0), e([y({ type: V })], b2.prototype, "actions", void 0), e([y({ readOnly: true })], b2.prototype, "effectiveStops", null), e([y({ type: c3 })], b2.prototype, "fullTimeExtent", void 0), e([y({ nonNullable: true })], b2.prototype, "loop", void 0), e([y({ nonNullable: true })], b2.prototype, "mode", void 0), e([y({ nonNullable: true, value: 1e3 })], b2.prototype, "playRate", null), e([y({ readOnly: true })], b2.prototype, "state", null), e([y({ cast: (t3) => null == t3 ? null : (_(t3) && (t3.interval = d(l, t3.interval)), (_(t3) || E2(t3)) && (t3.timeExtent = d(c3, t3.timeExtent)), t3) })], b2.prototype, "stops", void 0), e([y({ type: c3 })], b2.prototype, "timeExtent", void 0), e([y({ readOnly: true })], b2.prototype, "timeExtentValues", null), e([y()], b2.prototype, "view", void 0), e([y()], b2.prototype, "next", null), e([y()], b2.prototype, "play", null), e([y()], b2.prototype, "previous", null), e([y()], b2.prototype, "stop", null), e([y()], b2.prototype, "updateWebDocument", null), b2 = e([a("esri.widgets.TimeSlider.TimeSliderViewModel")], b2);
var S = b2;

// node_modules/@arcgis/core/widgets/TimeSlider.js
var F = 3;
var C = 858;
var D2 = [{ minor: { value: 100, unit: "milliseconds" }, major: { value: 1, unit: "seconds" }, format: { second: "numeric" } }, { minor: { value: 500, unit: "milliseconds" }, major: { value: 5, unit: "seconds" }, format: { second: "numeric" } }, { minor: { value: 1, unit: "seconds" }, major: { value: 20, unit: "seconds" }, format: { minute: "numeric", second: "numeric" } }, { minor: { value: 2, unit: "seconds" }, major: { value: 30, unit: "seconds" }, format: { minute: "numeric", second: "numeric" } }, { minor: { value: 10, unit: "seconds" }, major: { value: 1, unit: "minutes" }, format: { minute: "numeric" } }, { minor: { value: 15, unit: "seconds" }, major: { value: 5, unit: "minutes" }, format: { hour: "numeric", minute: "numeric" } }, { minor: { value: 1, unit: "minutes" }, major: { value: 20, unit: "minutes" }, format: { hour: "numeric", minute: "numeric" } }, { minor: { value: 5, unit: "minutes" }, major: { value: 2, unit: "hours" }, format: { hour: "numeric", minute: "numeric" } }, { minor: { value: 15, unit: "minutes" }, major: { value: 6, unit: "hours" }, format: { hour: "numeric", minute: "numeric" } }, { minor: { value: 1, unit: "hours" }, major: { value: 1, unit: "days" }, format: { day: "numeric", month: "short" } }, { minor: { value: 6, unit: "hours" }, major: { value: 1, unit: "weeks" }, format: { day: "numeric", month: "short" } }, { minor: { value: 1, unit: "days" }, major: { value: 1, unit: "months" }, format: { month: "long" } }, { minor: { value: 2, unit: "days" }, major: { value: 1, unit: "months" }, format: { month: "short" } }, { minor: { value: 3, unit: "days" }, major: { value: 1, unit: "months" }, format: { month: "short" } }, { minor: { value: 4, unit: "days" }, major: { value: 3, unit: "months" }, format: { month: "short", year: "numeric" } }, { minor: { value: 1, unit: "weeks" }, major: { value: 1, unit: "years" }, format: { year: "numeric" } }, { minor: { value: 1, unit: "months" }, major: { value: 1, unit: "years" }, format: { year: "numeric" } }, { minor: { value: 2, unit: "months" }, major: { value: 2, unit: "years" }, format: { year: "numeric" } }, { minor: { value: 1, unit: "years" }, major: { value: 1, unit: "decades" }, format: { year: "numeric" } }, { minor: { value: 2, unit: "years" }, major: { value: 5, unit: "decades" }, format: { year: "numeric" } }, { minor: { value: 5, unit: "decades" }, major: { value: 10, unit: "centuries" }, format: { era: "short", year: "numeric" } }, { minor: { value: 1, unit: "centuries" }, major: { value: 10, unit: "centuries" }, format: { era: "short", year: "numeric" } }, { minor: { value: 2, unit: "centuries" }, major: { value: 20, unit: "centuries" }, format: { era: "short", year: "numeric" } }, { minor: { value: 5, unit: "centuries" }, major: { value: 50, unit: "centuries" }, format: { era: "short", year: "numeric" } }, { minor: { value: 10, unit: "centuries" }, major: { value: 100, unit: "centuries" }, format: { era: "short", year: "numeric" } }, { minor: { value: 20, unit: "centuries" }, major: { value: 200, unit: "centuries" }, format: { era: "short", year: "numeric" } }, { minor: { value: 50, unit: "centuries" }, major: { value: 500, unit: "centuries" }, format: { era: "short", year: "numeric" } }, { minor: { value: 100, unit: "centuries" }, major: { value: 1e3, unit: "centuries" }, format: { era: "short", year: "numeric" } }, { minor: { value: 200, unit: "centuries" }, major: { value: 1e3, unit: "centuries" }, format: { era: "short", year: "numeric" } }, { minor: { value: 500, unit: "centuries" }, major: { value: 5e3, unit: "centuries" }, format: { era: "short", year: "numeric" } }, { minor: { value: 1e3, unit: "centuries" }, major: { value: 1e4, unit: "centuries" }, format: { era: "short", year: "numeric" } }];
var U = class extends D {
  constructor(t3, e7) {
    super(t3, e7), this._ignoreNextSliderUpdate = false, this._slider = new A3({ precision: 0, visibleElements: { rangeLabels: false }, rangeLabelInputsEnabled: false, thumbsConstrained: false }), this._tickFormat = null, this.disabled = false, this.labelFormatFunction = null, this.messages = null, this.messagesCommon = null, this.tickConfigs = null, this.timeVisible = false, this.viewModel = new S();
  }
  initialize() {
    this.addHandles([d2(() => this._slider.values, (t3) => {
      if (this._ignoreNextSliderUpdate)
        return void (this._ignoreNextSliderUpdate = false);
      const e7 = this.viewModel.valuesToTimeExtent(t3);
      null != this.timeExtent ? null != e7 ? this.timeExtent.equals(e7) || (this.timeExtent = e7) : this.timeExtent = null : null != e7 && (this.timeExtent = e7);
    }), d2(() => this.effectiveStops, () => this._updateSliderSteps(), P)]);
  }
  loadDependencies() {
    return r2({ action: () => import("./calcite-action-P2CTRNG2.js"), "action-menu": () => import("./calcite-action-menu-43IE6S65.js") });
  }
  destroy() {
    this._slider.destroy(), this._tickFormat = null;
  }
  get _dateFormat() {
    return this._getIntlOptions("short-date");
  }
  get _timeFormat() {
    return this._getIntlOptions("long-time");
  }
  get actions() {
    return this.viewModel.actions;
  }
  set actions(t3) {
    this.viewModel.actions = t3;
  }
  get effectiveStops() {
    return this.viewModel.effectiveStops;
  }
  get fullTimeExtent() {
    return this.viewModel.fullTimeExtent;
  }
  set fullTimeExtent(t3) {
    this.viewModel.fullTimeExtent = t3;
  }
  get icon() {
    return "clock";
  }
  set icon(t3) {
    this._overrideIfSome("icon", t3);
  }
  get interactive() {
    return !(this.disabled || "disabled" === this.viewModel.state || this.timeZone === r);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(t3) {
    this._overrideIfSome("label", t3);
  }
  set layout(t3) {
    ["auto", "compact", "wide"].includes(t3) || (t3 = "auto"), this._set("layout", t3);
  }
  get loop() {
    return this.viewModel.loop;
  }
  set loop(t3) {
    this.viewModel.loop = t3;
  }
  get mode() {
    return this.viewModel.mode;
  }
  set mode(t3) {
    this.viewModel.mode = t3;
  }
  get playRate() {
    return this.viewModel.playRate;
  }
  set playRate(t3) {
    this.viewModel.playRate = t3;
  }
  get stops() {
    return this.viewModel.stops;
  }
  set stops(t3) {
    this.viewModel.stops = t3;
  }
  get tickFormats() {
    const { timeZone: t3 } = this;
    return D2.map(({ minor: i3, major: s, format: o4 }) => ({ minor: new l(i3), major: new l(s), format: { ...o4, timeZone: t3 } }));
  }
  get timeExtent() {
    return this.viewModel.timeExtent;
  }
  set timeExtent(t3) {
    this.viewModel.timeExtent = t3;
  }
  get timeZone() {
    var _a;
    return ((_a = this.viewModel.view) == null ? void 0 : _a.timeZone) ?? o2;
  }
  set timeZone(t3) {
    this._overrideIfSome("timeZone", t3);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(t3) {
    this.viewModel.view = t3;
  }
  static async getPropertiesFromWebMap(t3, e7) {
    return i(n.getLogger("esri.widgets.TimeSlider"), "`TimeSlider.getPropertiesFromWebMap` is deprecated in favor of 'timeUtils.getTimeSliderSettingsFromWebMap'", { replacement: "timeUtils.getTimeSliderSettingsFromWebMap", version: "4.29", see: "https://developers.arcgis.com/javascript/latest/api-reference/esri-support-timeUtils.html#getTimeSliderSettingsFromWebMap", warnOnce: true }), S.getPropertiesFromWebMap(t3, e7);
  }
  next() {
    return this.viewModel.next();
  }
  play() {
    return this.viewModel.play();
  }
  previous() {
    return this.viewModel.previous();
  }
  stop() {
    return this.viewModel.stop();
  }
  render() {
    var _a, _b;
    const { _slider: t3, actions: e7, domNode: s, effectiveStops: o4, fullTimeExtent: r3, interactive: a2, messages: n5, messagesCommon: l2, mode: m, tickConfigs: u, timeExtent: d3, timeVisible: p, viewModel: { state: v, timeExtentValues: h3 } } = this;
    if (null != r3) {
      const { start: e8, end: i3 } = r3;
      if (null != e8 && null != i3) {
        const s2 = e8.getTime(), o5 = i3.getTime(), r4 = t3.min !== s2 || t3.max !== o5;
        if (r4 && (t3.min = s2, t3.max = o5), null != u)
          t3.tickConfigs !== u && (t3.tickConfigs = u);
        else {
          const e9 = (o5 - s2) / (((_a = t3.trackElement) == null ? void 0 : _a.offsetWidth) || 400), i4 = this.tickFormats.find((t4) => t4.minor.toMilliseconds() > F * e9) ?? this.tickFormats.at(-1), a3 = this._tickFormat !== i4 && null != i4;
          if (a3 && (this._tickFormat = i4), r4 || a3) {
            const e10 = { mode: "position", values: this._getTickPositions(i4.minor), labelsVisible: false, tickCreatedFunction: (t4, e11) => {
              e11 == null ? void 0 : e11.classList.add(e6.sliderMinorTick);
            } }, s3 = { mode: "position", values: this._getTickPositions(i4.major), labelsVisible: true, tickCreatedFunction: (t4, e11) => {
              e11 == null ? void 0 : e11.classList.add(e6.sliderMajorTick);
            }, labelFormatFunction: (t4) => j(t4, i4.format) };
            t3.tickConfigs = [e10, s3];
          }
        }
      }
    }
    const f = null == ((_b = this.fullTimeExtent) == null ? void 0 : _b.start) || null == this.fullTimeExtent.end || null == this.timeExtent || this.timeExtent.isAllTime || this.timeExtent.isEmpty || null != this.timeExtent.start && (this.timeExtent.start < this.fullTimeExtent.start || this.timeExtent.start > this.fullTimeExtent.end) || null != this.timeExtent.end && (this.timeExtent.end > this.fullTimeExtent.end || this.timeExtent.end < this.fullTimeExtent.start);
    if (f)
      switch (this._ignoreNextSliderUpdate = true, m) {
        case "time-window":
          t3.values = [t3.min, t3.max];
          break;
        case "instant":
        case "cumulative-from-end":
          t3.values = [t3.min];
          break;
        case "cumulative-from-start":
          t3.values = [t3.max];
      }
    else
      null != h3 ? h(t3.values, h3) || (t3.values = h3) : t3.values = null;
    t3.disabled = !a2;
    const y3 = "ready" === v, g = "playing" === v, w2 = f || !a2 || null == o4 || 0 === o4.length, j2 = "auto" === this.layout ? s.clientWidth < C ? "compact" : "wide" : this.layout, k = n2("div", { class: e6.animation }, n2("button", { "aria-disabled": w2 ? "true" : "false", "aria-label": g ? l2.control.stop : l2.control.play, bind: this, class: this.classes(e4.widgetButton, e6.animationButton, w2 && e4.buttonDisabled), disabled: w2, onclick: this._playOrStopClick, title: g ? l2.control.stop : l2.control.play, type: "button" }, n2("div", { class: this.classes((y3 || w2) && i2.play, g && i2.pause) }))), M = null != this.labelFormatFunction ? n2("div", { afterCreate: this._createLabel, afterUpdate: this._createLabel, bind: this, class: e6.timeExtentDate, "data-date": d3 ? [d3.start, d3.end] : null, "data-layout": j2, "data-type": "extent", key: "extent" }) : null == d3 || null != d3 && d3.isAllTime ? [n2("div", { class: this.classes(e6.warning, i2.noticeTriangle) }), n2("div", { class: e6.warningText, key: "warning-text" }, n5.noTimeExtent)] : d3.isEmpty ? [n2("div", { class: this.classes(e6.warning, i2.noticeTriangle) }), n2("div", { class: e6.warningText, key: "warning-text" }, n5.emptyTimeExtent)] : [null != d3.start && n2("div", { class: e6.timeExtentGroup, key: "start-date-group" }, n2("div", { class: e6.timeExtentDate, key: "start-date" }, this._formatDate(d3.start)), p ? n2("div", { class: e6.timeExtentTime, key: "start-time" }, this._formatTime(d3.start)) : null), null != d3.start && null != d3.end && d3.start.getTime() !== d3.end.getTime() && n2("div", { class: e6.timeExtentSeparator, key: "separator" }, "–"), null != d3.end && (null == d3.start || d3.start.getTime() !== d3.end.getTime()) && n2("div", { class: e6.timeExtentGroup, key: "end-date-group" }, n2("div", { class: e6.timeExtentDate, key: "end-date" }, this._formatDate(d3.end)), p ? n2("div", { class: e6.timeExtentTime, key: "end-time" }, this._formatTime(d3.end)) : null)], D3 = n2("div", { class: this.classes(e6.timeExtent, !a2 && e4.buttonDisabled) }, [M]), U2 = null != this.labelFormatFunction ? n2("div", { afterCreate: this._createLabel, afterUpdate: this._createLabel, bind: this, class: e6.minDate, "data-date": r3 == null ? void 0 : r3.start, "data-layout": j2, "data-type": "min", key: "min-date" }) : null != (r3 == null ? void 0 : r3.start) && [n2("div", { class: e6.minDate, key: "min-date" }, this._formatDate(r3.start)), p && n2("div", { class: e6.minTime, key: "min-time" }, this._formatTime(r3.start))], L2 = n2("div", { class: this.classes(e6.min, !a2 && e4.buttonDisabled) }, [U2]), Z = n2("div", { class: e6.slider }, t3.render()), W = null != this.labelFormatFunction ? n2("div", { afterCreate: this._createLabel, afterUpdate: this._createLabel, bind: this, class: e6.maxDate, "data-date": r3 == null ? void 0 : r3.end, "data-layout": j2, "data-type": "max", key: "max-date" }) : null != (r3 == null ? void 0 : r3.end) && [n2("div", { class: e6.maxDate, key: "max-date" }, this._formatDate(r3.end)), p && n2("div", { class: e6.maxTime, key: "max-time" }, this._formatTime(r3.end))], O = n2("div", { class: this.classes(e6.max, !a2 && e4.buttonDisabled) }, [W]), R = n2("div", { class: e6.previous }, n2("button", { "aria-disabled": w2 ? "true" : "false", "aria-label": l2.pagination.previous, bind: this, class: this.classes(e4.widgetButton, e6.previousButton, (g || w2) && e4.buttonDisabled), disabled: w2, onclick: this._previousClick, title: l2.pagination.previous, type: "button" }, n2("div", { class: i2.reverse }))), B = n2("div", { class: e6.next }, n2("button", { "aria-disabled": w2 ? "true" : "false", "aria-label": l2.pagination.next, bind: this, class: this.classes(e4.widgetButton, e6.nextButton, (g || w2) && e4.buttonDisabled), disabled: w2, onclick: this._nextClick, title: l2.pagination.next, type: "button" }, n2("div", { class: i2.forward }))), I = (e7 == null ? void 0 : e7.length) > 0, A4 = I && n2("div", { class: e6.actions, title: l2.options }, n2("calcite-action-menu", { class: e6.actionsButton, label: l2.options }, e7.toArray().map((t4) => n2("calcite-action", { bind: this, icon: t4.icon, id: t4.id, onclick: () => this.viewModel.triggerAction(t4), text: t4.title, textEnabled: true, title: t4.title }))));
    return n2("div", { afterCreate: (t4) => {
      this.addHandles(h2(t4, () => this.scheduleRender()));
    }, "aria-label": n5.widgetLabel, class: this.classes(e6.timeSlider, e4.widget, `${e6.timeSliderMode}${m}`, `${e6.timeSliderLayout}${j2}`, !a2 && e4.disabled, f && e6.timeSliderOutOfBounds, I && e6.hasActions, c()) }, "wide" === j2 && n2("div", { class: e6.timeSliderRow }, n2("div", { class: e6.playbackControls }, [k, D3, L2, Z, O, R, B]), A4), "compact" === j2 && [n2("div", { class: e6.timeSliderRow, key: "time-slider-row-1" }, [D3, A4]), n2("div", { class: e6.timeSliderRow, key: "time-slider-row-2" }, [Z]), n2("div", { class: e6.timeSliderRow, key: "time-slider-row-3" }, [L2, R, k, B, O])]);
  }
  updateWebDocument(t3) {
    var _a;
    (_a = this.viewModel) == null ? void 0 : _a.updateWebDocument(t3);
  }
  _createLabel(t3) {
    if (null == this.labelFormatFunction)
      return;
    const e7 = t3.getAttribute("data-type"), i3 = t3.getAttribute("data-layout"), s = t3["data-date"];
    this.labelFormatFunction(s, e7, t3, i3);
  }
  _formatDate(t3) {
    return j(t3, this._dateFormat);
  }
  _formatTime(t3) {
    return j(t3, this._timeFormat);
  }
  _getIntlOptions(t3) {
    const { timeZone: e7 } = this;
    return { ...E(t3), timeZone: e7 };
  }
  _getTickPositions(t3) {
    const { fullTimeExtent: e7 } = this;
    if (null == (e7 == null ? void 0 : e7.start) || null == e7.end)
      return [];
    const { start: i3, end: s } = e7, o4 = [], { value: r3, unit: a2 } = t3;
    let n5 = c2(i3, a2, this.timeZone);
    for (; n5.getTime() <= s.getTime(); )
      n5.getTime() >= i3.getTime() && o4.push(n5.getTime()), n5 = o3(n5, r3, a2, this.timeZone);
    return o4;
  }
  _updateSliderSteps() {
    this._slider.steps = null != this.effectiveStops && this.effectiveStops.length > 0 ? this.effectiveStops.map((t3) => t3.getTime()) : null;
  }
  _playOrStopClick() {
    switch (this.viewModel.state) {
      case "ready":
        this.viewModel.play();
        break;
      case "playing":
        this.viewModel.stop();
        break;
      case "disabled":
        break;
      default:
        n3(this.viewModel.state);
    }
  }
  _previousClick() {
    this.viewModel.previous();
  }
  _nextClick() {
    this.viewModel.next();
  }
};
e([y()], U.prototype, "_dateFormat", null), e([y()], U.prototype, "_timeFormat", null), e([y()], U.prototype, "actions", null), e([y()], U.prototype, "disabled", void 0), e([y()], U.prototype, "effectiveStops", null), e([y()], U.prototype, "fullTimeExtent", null), e([y()], U.prototype, "icon", null), e([y({ readOnly: true })], U.prototype, "interactive", null), e([y()], U.prototype, "label", null), e([y()], U.prototype, "labelFormatFunction", void 0), e([y({ value: "auto" })], U.prototype, "layout", null), e([y()], U.prototype, "loop", null), e([y(), e2("esri/widgets/TimeSlider/t9n/TimeSlider")], U.prototype, "messages", void 0), e([y(), e2("esri/t9n/common")], U.prototype, "messagesCommon", void 0), e([y()], U.prototype, "mode", null), e([y()], U.prototype, "playRate", null), e([y()], U.prototype, "stops", null), e([y()], U.prototype, "tickConfigs", void 0), e([y()], U.prototype, "tickFormats", null), e([y()], U.prototype, "timeExtent", null), e([y({ nonNullable: true })], U.prototype, "timeVisible", void 0), e([y()], U.prototype, "timeZone", null), e([y()], U.prototype, "view", null), e([y({ type: S }), e5("trigger-action")], U.prototype, "viewModel", void 0), e([t()], U.prototype, "_playOrStopClick", null), e([t()], U.prototype, "_previousClick", null), e([t()], U.prototype, "_nextClick", null), U = e([a("esri.widgets.TimeSlider")], U);
var L = U;
export {
  L as default
};
//# sourceMappingURL=TimeSlider-6WAJLID7.js.map
