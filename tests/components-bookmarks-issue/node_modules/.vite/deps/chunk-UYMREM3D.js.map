{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Error.js\";import t from\"../../../../../core/Logger.js\";import{BindType as r}from\"../shaderTechnique/BindType.js\";import{assert as n}from\"../../lib/Util.js\";const s=()=>t.getLogger(\"esri.views.3d.webgl-engine.core.shaderModules.shaderBuilder\");class i{constructor(){this._includedModules=new Map}include(e,t){if(this._includedModules.has(e)){const r=this._includedModules.get(e);if(r!==t){s().error(\"Shader module included multiple times with different configuration.\");const t=new Set;for(const n of Object.keys(r))r[n]!==e[n]&&t.add(n);for(const n of Object.keys(e))r[n]!==e[n]&&t.add(n);t.forEach((t=>console.error(`  ${t}: current ${r[t]} new ${e[t]}`)))}}else this._includedModules.set(e,t),e(this.builder,t)}}class o extends i{constructor(){super(...arguments),this.vertex=new u,this.fragment=new u,this.attributes=new h,this.varyings=new m,this.extensions=new l,this.constants=new _,this.outputs=new d}get fragmentUniforms(){return this.fragment.uniforms.entries}get builder(){return this}generate(e){const t=this.extensions.generateSource(e),r=this.attributes.generateSource(e),n=this.varyings.generateSource(e),s=\"vertex\"===e?this.vertex:this.fragment,i=s.uniforms.generateSource(),o=s.code.generateSource(),a=\"vertex\"===e?g:f,c=this.constants.generateSource().concat(s.constants.generateSource()),u=this.outputs.generateSource(e);return`#version 300 es\\n${t.join(\"\\n\")}\\n\\n${a}\\n\\n${c.join(\"\\n\")}\\n\\n${i.join(\"\\n\")}\\n\\n${r.join(\"\\n\")}\\n\\n${n.join(\"\\n\")}\\n\\n${u.join(\"\\n\")}\\n\\n${o.join(\"\\n\")}`}generateBindPass(e){const t=new Map;this.vertex.uniforms.entries.forEach((e=>{const n=e.bind[r.Pass];n&&t.set(e.name,n)})),this.fragment.uniforms.entries.forEach((e=>{const n=e.bind[r.Pass];n&&t.set(e.name,n)}));const n=Array.from(t.values()),s=n.length;return(t,r)=>{for(let i=0;i<s;++i)n[i](e,t,r)}}generateBindDraw(e){const t=new Map;this.vertex.uniforms.entries.forEach((e=>{const n=e.bind[r.Draw];n&&t.set(e.name,n)})),this.fragment.uniforms.entries.forEach((e=>{const n=e.bind[r.Draw];n&&t.set(e.name,n)}));const n=Array.from(t.values()),s=n.length;return(t,r,i)=>{for(let o=0;o<s;++o)n[o](e,t,r,i)}}}class a{constructor(){this._entries=new Map}add(...e){for(const t of e)this._add(t)}get(e){return this._entries.get(e)}_add(t){if(null!=t){if(this._entries.has(t.name)&&!this._entries.get(t.name).equals(t))throw new e(`Duplicate uniform name ${t.name} for different uniform type`);this._entries.set(t.name,t)}else s().error(`Trying to add null Uniform from ${(new Error).stack}.`)}generateSource(){return Array.from(this._entries.values()).map((e=>null!=e.arraySize?`uniform ${e.type} ${e.name}[${e.arraySize}];`:`uniform ${e.type} ${e.name};`))}get entries(){return Array.from(this._entries.values())}}class c{constructor(){this._entries=new Array}add(e){this._entries.push(e)}generateSource(){return this._entries}}class u extends i{constructor(){super(...arguments),this.uniforms=new a,this.code=new c,this.constants=new _}get builder(){return this}}class h{constructor(){this._entries=new Array}add(e,t){this._entries.push([e,t])}generateSource(e){return\"fragment\"===e?[]:this._entries.map((e=>`in ${e[1]} ${e[0]};`))}}class m{constructor(){this._entries=new Map}add(e,t){this._entries.has(e)&&n(this._entries.get(e)===t),this._entries.set(e,t)}generateSource(e){const t=new Array;return this._entries.forEach(((r,n)=>t.push(\"vertex\"===e?`out ${r} ${n};`:`in ${r} ${n};`))),t}}class l{constructor(){this._entries=new Set}add(e){this._entries.add(e)}generateSource(e){const t=\"vertex\"===e?l.ALLOWLIST_VERTEX:l.ALLOWLIST_FRAGMENT;return Array.from(this._entries).filter((e=>t.includes(e))).map((e=>`#extension ${e} : enable`))}}l.ALLOWLIST_FRAGMENT=[\"GL_EXT_shader_texture_lod\",\"GL_OES_standard_derivatives\"],l.ALLOWLIST_VERTEX=[];class d{constructor(){this._entries=new Map}add(e,t,r=0){const s=this._entries.get(r);s?n(s.name===e&&s.type===t,`Fragment shader output location ${r} occupied`):this._entries.set(r,{name:e,type:t})}generateSource(e){if(\"vertex\"===e)return[];0===this._entries.size&&this._entries.set(0,{name:d.DEFAULT_NAME,type:d.DEFAULT_TYPE});const t=new Array;return this._entries.forEach(((e,r)=>t.push(`layout(location = ${r}) out ${e.type} ${e.name};`))),t}}d.DEFAULT_TYPE=\"vec4\",d.DEFAULT_NAME=\"fragColor\";class _{constructor(){this._entries=new Set}add(e,t,r){let n=\"ERROR_CONSTRUCTOR_STRING\";switch(t){case\"float\":n=_._numberToFloatStr(r);break;case\"int\":n=_._numberToIntStr(r);break;case\"bool\":n=r.toString();break;case\"vec2\":n=`vec2(${_._numberToFloatStr(r[0])},                            ${_._numberToFloatStr(r[1])})`;break;case\"vec3\":n=`vec3(${_._numberToFloatStr(r[0])},                            ${_._numberToFloatStr(r[1])},                            ${_._numberToFloatStr(r[2])})`;break;case\"vec4\":n=`vec4(${_._numberToFloatStr(r[0])},                            ${_._numberToFloatStr(r[1])},                            ${_._numberToFloatStr(r[2])},                            ${_._numberToFloatStr(r[3])})`;break;case\"ivec2\":n=`ivec2(${_._numberToIntStr(r[0])},                             ${_._numberToIntStr(r[1])})`;break;case\"ivec3\":n=`ivec3(${_._numberToIntStr(r[0])},                             ${_._numberToIntStr(r[1])},                             ${_._numberToIntStr(r[2])})`;break;case\"ivec4\":n=`ivec4(${_._numberToIntStr(r[0])},                             ${_._numberToIntStr(r[1])},                             ${_._numberToIntStr(r[2])},                             ${_._numberToIntStr(r[3])})`;break;case\"mat2\":case\"mat3\":case\"mat4\":n=`${t}(${Array.prototype.map.call(r,(e=>_._numberToFloatStr(e))).join(\", \")})`}return this._entries.add(`const ${t} ${e} = ${n};`),this}static _numberToIntStr(e){return e.toFixed(0)}static _numberToFloatStr(e){return Number.isInteger(e)?e.toFixed(1):e.toString()}generateSource(){return Array.from(this._entries)}}const f=\"#ifdef GL_FRAGMENT_PRECISION_HIGH\\n  precision highp float;\\n  precision highp sampler2D;\\n#else\\n  precision mediump float;\\n  precision mediump sampler2D;\\n#endif\",g=\"precision highp float;\\nprecision highp sampler2D;\";export{c as Code,i as Includes,o as ShaderBuilder,u as Stage,a as Uniforms};\n"],
  "mappings": "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",
  "names": ["s", "t", "n", "i", "o", "a", "c", "u", "e"]
}
