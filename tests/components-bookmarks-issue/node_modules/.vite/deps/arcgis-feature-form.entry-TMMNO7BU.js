import {
  onDisconnectedHelper
} from "./chunk-K4WPYNMJ.js";
import {
  newWidgetsFeatureForm
} from "./chunk-YXW2SI4L.js";
import {
  referenceElementHelper
} from "./chunk-UXZQL3ZN.js";
import {
  createEvent,
  getElement,
  h,
  registerInstance
} from "./chunk-KMIMZXFW.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/map-components/dist/esm/arcgis-feature-form.entry.js
var featureFormCss = "";
var ArcgisFeatureForm = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.widgetReady = createEvent(this, "widgetReady", 7);
    this.featureFormSubmit = createEvent(this, "featureFormSubmit", 7);
    this.featureFormValueChange = createEvent(this, "featureFormValueChange", 7);
    this._watchHandles = [];
    this.referenceElement = void 0;
    this.position = "bottom-left";
    this.expandable = false;
    this.feature = void 0;
    this.formTemplate = void 0;
    this.groupDisplay = void 0;
    this.layer = void 0;
    this.timeZone = void 0;
    this.view = void 0;
    this.widget = void 0;
  }
  referenceElementWatcher(newValue) {
    referenceElementHelper(this, newValue);
  }
  positionWatcher(newValue) {
    if (newValue !== void 0 && this.widget) {
      this.view.ui.move(this.childElem, newValue);
    }
  }
  featureWatcher(newValue) {
    if (this.widget) {
      this.widget.feature = newValue;
    }
  }
  formTemplateWatcher(newValue) {
    if (this.widget) {
      this.widget.formTemplate = newValue;
    }
  }
  groupDisplayWatcher(newValue) {
    if (this.widget) {
      this.widget.groupDisplay = newValue;
    }
  }
  layerWatcher(newValue) {
    if (this.widget) {
      this.widget.layer = newValue;
    }
  }
  timeZoneWatcher(newValue) {
    if (this.widget) {
      this.widget.timeZone = newValue;
    }
  }
  viewWatcher(newValue) {
    if (newValue !== void 0 && this.widget) {
      this.widget.map = newValue.map;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Methods
  //
  //--------------------------------------------------------------------------
  async getValues() {
    var _a;
    return (_a = this.widget) == null ? void 0 : _a.getValues();
  }
  async submit() {
    var _a;
    return (_a = this.widget) == null ? void 0 : _a.submit();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  async componentDidLoad() {
    const params = this._createParams();
    const widget = await newWidgetsFeatureForm(params);
    this.widget = widget;
    this._proxyEvents();
    this.widgetReady.emit({ widget: this.widget });
  }
  disconnectedCallback() {
    onDisconnectedHelper(this);
  }
  render() {
    if (this.expandable) {
      return h("arcgis-expand", { position: this.position, ref: (el) => this.expandElem = el }, h("div", { ref: (el) => this.childElem = el }));
    }
    return h("div", { ref: (el) => this.childElem = el });
  }
  //--------------------------------------------------------------------------
  //
  //  Private Interal Methods
  //
  //--------------------------------------------------------------------------
  _createParams() {
    const params = {
      container: this.childElem
    };
    if (this.feature) {
      params.feature = this.feature;
    }
    if (this.formTemplate) {
      params.formTemplate = this.formTemplate;
    }
    if (this.groupDisplay) {
      params.groupDisplay = this.groupDisplay;
    }
    if (this.layer) {
      params.layer = this.layer;
    }
    if (this.timeZone) {
      params.timeZone = this.timeZone;
    }
    if (this.view) {
      params.map = this.view.map;
    }
    return params;
  }
  _proxyEvents() {
    this.widget.on("submit", (e) => this.featureFormSubmit.emit(e));
    this.widget.on("value-change", (e) => this.featureFormValueChange.emit(e));
  }
  get el() {
    return getElement(this);
  }
  static get watchers() {
    return {
      "referenceElement": ["referenceElementWatcher"],
      "position": ["positionWatcher"],
      "feature": ["featureWatcher"],
      "formTemplate": ["formTemplateWatcher"],
      "groupDisplay": ["groupDisplayWatcher"],
      "layer": ["layerWatcher"],
      "timeZone": ["timeZoneWatcher"],
      "view": ["viewWatcher"]
    };
  }
};
ArcgisFeatureForm.style = featureFormCss;
export {
  ArcgisFeatureForm as arcgis_feature_form
};
/*! Bundled license information:

@arcgis/map-components/dist/esm/arcgis-feature-form.entry.js:
  (*!
   * All material copyright Esri, All Rights Reserved, unless otherwise specified.
   * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
   * v4.30.0-next.13
   *)
*/
//# sourceMappingURL=arcgis-feature-form.entry-TMMNO7BU.js.map
