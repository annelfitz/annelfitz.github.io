{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/esm/src/components/tooltip/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/tooltip/utils.ts", "../../@esri/calcite-components/dist/esm/src/components/tooltip/TooltipManager.ts", "../../@esri/calcite-components/dist/esm/src/components/tooltip/tooltip.scss?tag=calcite-tooltip&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/tooltip/tooltip.tsx"],
  "sourcesContent": ["export const CSS = {\n  container: \"container\",\n};\n\nexport const TOOLTIP_OPEN_DELAY_MS = 300;\nexport const TOOLTIP_CLOSE_DELAY_MS = 500;\n\nexport const ARIA_DESCRIBED_BY = \"aria-describedby\";\n", "import { ReferenceElement } from \"../../utils/floating-ui\";\nimport { queryElementRoots } from \"../../utils/dom\";\n\nexport function getEffectiveReferenceElement(tooltip: HTMLCalciteTooltipElement): ReferenceElement {\n  const { referenceElement } = tooltip;\n\n  return (\n    (typeof referenceElement === \"string\" ? queryElementRoots(tooltip, { id: referenceElement }) : referenceElement) ||\n    null\n  );\n}\n", "import { getShadowRootNode, isPrimaryPointerButton } from \"../../utils/dom\";\nimport { ReferenceElement } from \"../../utils/floating-ui\";\nimport { TOOLTIP_OPEN_DELAY_MS, TOOLTIP_CLOSE_DELAY_MS } from \"./resources\";\nimport { getEffectiveReferenceElement } from \"./utils\";\n\nexport default class TooltipManager {\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  private registeredElements = new WeakMap<ReferenceElement, HTMLCalciteTooltipElement>();\n\n  private registeredShadowRootCounts = new WeakMap<ShadowRoot, number>();\n\n  private hoverOpenTimeout: number = null;\n\n  private hoverCloseTimeout: number = null;\n\n  private hoveredTooltip: HTMLCalciteTooltipElement = null;\n\n  private clickedTooltip: HTMLCalciteTooltipElement = null;\n\n  private activeTooltip: HTMLCalciteTooltipElement = null;\n\n  private registeredElementCount = 0;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  registerElement(referenceEl: ReferenceElement, tooltip: HTMLCalciteTooltipElement): void {\n    this.registeredElementCount++;\n    this.registeredElements.set(referenceEl, tooltip);\n    const shadowRoot = this.getReferenceElShadowRootNode(referenceEl);\n\n    if (shadowRoot) {\n      this.registerShadowRoot(shadowRoot);\n    }\n\n    if (this.registeredElementCount === 1) {\n      this.addListeners();\n    }\n  }\n\n  unregisterElement(referenceEl: ReferenceElement): void {\n    const shadowRoot = this.getReferenceElShadowRootNode(referenceEl);\n\n    if (shadowRoot) {\n      this.unregisterShadowRoot(shadowRoot);\n    }\n\n    if (this.registeredElements.delete(referenceEl)) {\n      this.registeredElementCount--;\n    }\n\n    if (this.registeredElementCount === 0) {\n      this.removeListeners();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private queryTooltip = (composedPath: EventTarget[]): HTMLCalciteTooltipElement => {\n    const { registeredElements } = this;\n\n    const registeredElement = (composedPath as HTMLElement[]).find((pathEl) => registeredElements.has(pathEl));\n\n    return registeredElements.get(registeredElement);\n  };\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.key === \"Escape\" && !event.defaultPrevented) {\n      const { activeTooltip } = this;\n\n      if (activeTooltip?.open) {\n        this.clearHoverTimeout();\n        this.closeActiveTooltip();\n\n        const referenceElement = getEffectiveReferenceElement(activeTooltip);\n\n        if (referenceElement instanceof Element && referenceElement.contains(event.target as HTMLElement)) {\n          event.preventDefault();\n        }\n      }\n    }\n  };\n\n  private pointerMoveHandler = (event: PointerEvent): void => {\n    const composedPath = event.composedPath();\n    const { activeTooltip } = this;\n    const hoveringActiveTooltip = activeTooltip?.open && composedPath.includes(activeTooltip);\n\n    if (hoveringActiveTooltip) {\n      this.clearHoverTimeout();\n      return;\n    }\n\n    const tooltip = this.queryTooltip(composedPath);\n    this.hoveredTooltip = tooltip;\n\n    if (this.isClosableClickedTooltip(tooltip)) {\n      return;\n    }\n\n    this.clickedTooltip = null;\n\n    if (tooltip) {\n      this.openHoveredTooltip(tooltip);\n    } else if (activeTooltip) {\n      this.closeHoveredTooltip();\n    }\n  };\n\n  private pointerDownHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const clickedTooltip = this.queryTooltip(event.composedPath());\n\n    this.clickedTooltip = clickedTooltip;\n\n    if (clickedTooltip?.closeOnClick) {\n      this.toggleTooltip(clickedTooltip, false);\n      this.clearHoverTimeout();\n    }\n  };\n\n  private focusInHandler = (event: FocusEvent): void => {\n    this.queryFocusedTooltip(event, true);\n  };\n\n  private focusOutHandler = (event: FocusEvent): void => {\n    this.queryFocusedTooltip(event, false);\n  };\n\n  private addShadowListeners(shadowRoot: ShadowRoot): void {\n    shadowRoot.addEventListener(\"focusin\", this.focusInHandler, { capture: true });\n    shadowRoot.addEventListener(\"focusout\", this.focusOutHandler, { capture: true });\n  }\n\n  private removeShadowListeners(shadowRoot: ShadowRoot): void {\n    shadowRoot.removeEventListener(\"focusin\", this.focusInHandler, { capture: true });\n    shadowRoot.removeEventListener(\"focusout\", this.focusOutHandler, { capture: true });\n  }\n\n  private addListeners(): void {\n    window.addEventListener(\"keydown\", this.keyDownHandler, { capture: true });\n    window.addEventListener(\"pointermove\", this.pointerMoveHandler, { capture: true });\n    window.addEventListener(\"pointerdown\", this.pointerDownHandler, { capture: true });\n    window.addEventListener(\"focusin\", this.focusInHandler, { capture: true });\n    window.addEventListener(\"focusout\", this.focusOutHandler, { capture: true });\n  }\n\n  private removeListeners(): void {\n    window.removeEventListener(\"keydown\", this.keyDownHandler, { capture: true });\n    window.removeEventListener(\"pointermove\", this.pointerMoveHandler, { capture: true });\n    window.removeEventListener(\"pointerdown\", this.pointerDownHandler, { capture: true });\n    window.removeEventListener(\"focusin\", this.focusInHandler, { capture: true });\n    window.removeEventListener(\"focusout\", this.focusOutHandler, { capture: true });\n  }\n\n  private clearHoverOpenTimeout(): void {\n    window.clearTimeout(this.hoverOpenTimeout);\n    this.hoverOpenTimeout = null;\n  }\n\n  private clearHoverCloseTimeout(): void {\n    window.clearTimeout(this.hoverCloseTimeout);\n    this.hoverCloseTimeout = null;\n  }\n\n  private clearHoverTimeout(): void {\n    this.clearHoverOpenTimeout();\n    this.clearHoverCloseTimeout();\n  }\n\n  private closeActiveTooltip(): void {\n    const { activeTooltip } = this;\n\n    if (activeTooltip?.open) {\n      this.toggleTooltip(activeTooltip, false);\n    }\n  }\n\n  private toggleFocusedTooltip(tooltip: HTMLCalciteTooltipElement, open: boolean): void {\n    this.closeActiveTooltip();\n\n    if (open) {\n      this.clearHoverTimeout();\n    }\n\n    this.toggleTooltip(tooltip, open);\n  }\n\n  private toggleTooltip(tooltip: HTMLCalciteTooltipElement, open: boolean): void {\n    tooltip.open = open;\n\n    this.activeTooltip = open ? tooltip : null;\n  }\n\n  private openHoveredTooltip = (tooltip: HTMLCalciteTooltipElement): void => {\n    this.hoverOpenTimeout = window.setTimeout(\n      () => {\n        if (this.hoverOpenTimeout === null) {\n          return;\n        }\n\n        this.clearHoverCloseTimeout();\n\n        if (this.activeTooltip === this.hoveredTooltip) {\n          return;\n        }\n\n        this.closeActiveTooltip();\n\n        if (tooltip !== this.hoveredTooltip) {\n          return;\n        }\n\n        this.toggleTooltip(tooltip, true);\n      },\n      this.activeTooltip ? 0 : TOOLTIP_OPEN_DELAY_MS,\n    );\n  };\n\n  private closeHoveredTooltip = (): void => {\n    this.hoverCloseTimeout = window.setTimeout(() => {\n      if (this.hoverCloseTimeout === null) {\n        return;\n      }\n\n      this.closeActiveTooltip();\n    }, TOOLTIP_CLOSE_DELAY_MS);\n  };\n\n  private queryFocusedTooltip(event: FocusEvent, open: boolean): void {\n    const tooltip = this.queryTooltip(event.composedPath());\n\n    if (!tooltip || this.isClosableClickedTooltip(tooltip)) {\n      return;\n    }\n\n    this.toggleFocusedTooltip(tooltip, open);\n  }\n\n  private isClosableClickedTooltip(tooltip: HTMLCalciteTooltipElement): boolean {\n    return tooltip?.closeOnClick && tooltip === this.clickedTooltip;\n  }\n\n  private registerShadowRoot(shadowRoot: ShadowRoot): void {\n    const { registeredShadowRootCounts } = this;\n\n    const newCount = (registeredShadowRootCounts.get(shadowRoot) ?? 0) + 1;\n\n    if (newCount === 1) {\n      this.addShadowListeners(shadowRoot);\n    }\n\n    registeredShadowRootCounts.set(shadowRoot, newCount);\n  }\n\n  private unregisterShadowRoot(shadowRoot: ShadowRoot): void {\n    const { registeredShadowRootCounts } = this;\n\n    const newCount = registeredShadowRootCounts.get(shadowRoot) - 1;\n\n    if (newCount === 0) {\n      this.removeShadowListeners(shadowRoot);\n    }\n\n    registeredShadowRootCounts.set(shadowRoot, newCount);\n  }\n\n  private getReferenceElShadowRootNode(referenceEl: ReferenceElement): ShadowRoot | null {\n    return referenceEl instanceof Element ? getShadowRootNode(referenceEl) : null;\n  }\n}\n", "/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-tooltip-z-index: Sets the z-index value for the component.\n */\n\n:host {\n  --calcite-floating-ui-z-index: var(--calcite-tooltip-z-index, theme(\"zIndex.tooltip\"));\n}\n\n@include floatingUIHost();\n@include floatingUIArrow();\n\n.container {\n  @apply text-color-1\n    text-n2-wrap\n    relative\n    overflow-hidden\n    rounded\n    py-3\n    px-4\n    font-medium;\n  max-inline-size: 20rem;\n  max-block-size: 20rem;\n  text-align: start;\n}\n\n.calcite-floating-ui-anim {\n  @apply bg-foreground-1\n    border-color-3\n    rounded\n    border\n    border-solid;\n}\n\n.arrow::before {\n  outline: 1px solid var(--calcite-color-border-3);\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultOffsetDistance,\n  disconnectFloatingUI,\n  FloatingCSS,\n  FloatingLayout,\n  FloatingUIComponent,\n  LogicalPlacement,\n  OverlayPositioning,\n  ReferenceElement,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { ARIA_DESCRIBED_BY, CSS } from \"./resources\";\n\nimport TooltipManager from \"./TooltipManager\";\nimport { getEffectiveReferenceElement } from \"./utils\";\nimport { FloatingArrow } from \"../functional/FloatingArrow\";\n\nconst manager = new TooltipManager();\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-tooltip\",\n  styleUrl: \"tooltip.scss\",\n  shadow: true,\n})\nexport class Tooltip implements FloatingUIComponent, OpenCloseComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Closes the component when the `referenceElement` is clicked. */\n  @Prop({ reflect: true }) closeOnClick = false;\n\n  /**\n   * Accessible name for the component.\n   *\n   * @deprecated No longer necessary. Overrides the context of the component's description, which could confuse assistive technology users.\n   */\n  @Prop() label: string;\n\n  /**\n   * Offset the position of the component away from the `referenceElement`.\n   *\n   * @default 6\n   */\n  @Prop({ reflect: true }) offsetDistance = defaultOffsetDistance;\n\n  @Watch(\"offsetDistance\")\n  offsetDistanceOffsetHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Offset the position of the component along the `referenceElement`.\n   */\n  @Prop({ reflect: true }) offsetSkidding = 0;\n\n  @Watch(\"offsetSkidding\")\n  offsetSkiddingHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, the component is open.\n   */\n  @Prop({ reflect: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n    this.reposition(true);\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * The `\"fixed\"` value should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = \"auto\";\n\n  @Watch(\"placement\")\n  placementHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * The `referenceElement` to position the component according to its `\"placement\"` value.\n   *\n   * Setting to the `HTMLElement` is preferred so the component does not need to query the DOM for the `referenceElement`.\n   *\n   * However, a string ID of the reference element can be used.\n   */\n  @Prop() referenceElement: ReferenceElement | string;\n\n  @Watch(\"referenceElement\")\n  referenceElementHandler(): void {\n    this.setUpReferenceElement();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTooltipElement;\n\n  @State() effectiveReferenceElement: ReferenceElement;\n\n  @State() floatingLayout: FloatingLayout = \"vertical\";\n\n  arrowEl: SVGElement;\n\n  guid = `calcite-tooltip-${guid()}`;\n\n  hasLoaded = false;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.setUpReferenceElement(this.hasLoaded);\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n    connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    if (this.referenceElement && !this.effectiveReferenceElement) {\n      this.setUpReferenceElement();\n    }\n    this.reposition(true);\n    this.hasLoaded = true;\n  }\n\n  disconnectedCallback(): void {\n    this.removeReferences();\n    disconnectFloatingUI(this, this.effectiveReferenceElement, this.el);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteTooltipBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteTooltipClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteTooltipBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteTooltipOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const {\n      el,\n      effectiveReferenceElement,\n      placement,\n      overlayPositioning,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n    } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl: el,\n        referenceEl: effectiveReferenceElement,\n        overlayPositioning,\n        placement,\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type: \"tooltip\",\n      },\n      delayed,\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  onBeforeOpen(): void {\n    this.calciteTooltipBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteTooltipOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteTooltipBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteTooltipClose.emit();\n  }\n\n  private setTransitionEl = (el): void => {\n    this.transitionEl = el;\n  };\n\n  setUpReferenceElement = (warn = true): void => {\n    this.removeReferences();\n    this.effectiveReferenceElement = getEffectiveReferenceElement(this.el);\n    connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n\n    const { el, referenceElement, effectiveReferenceElement } = this;\n    if (warn && referenceElement && !effectiveReferenceElement) {\n      console.warn(`${el.tagName}: reference-element id \"${referenceElement}\" was not found.`, {\n        el,\n      });\n    }\n\n    this.addReferences();\n  };\n\n  getId = (): string => {\n    return this.el.id || this.guid;\n  };\n\n  addReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    const id = this.getId();\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_DESCRIBED_BY, id);\n    }\n\n    manager.registerElement(effectiveReferenceElement, this.el);\n  };\n\n  removeReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"removeAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.removeAttribute(ARIA_DESCRIBED_BY);\n    }\n\n    manager.unregisterElement(effectiveReferenceElement);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { effectiveReferenceElement, label, open, floatingLayout } = this;\n    const displayed = effectiveReferenceElement && open;\n    const hidden = !displayed;\n\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-label={label}\n        aria-live=\"polite\"\n        calcite-hydrated-hidden={hidden}\n        id={this.getId()}\n        role=\"tooltip\"\n      >\n        <div\n          class={{\n            [FloatingCSS.animation]: true,\n            [FloatingCSS.animationActive]: displayed,\n          }}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={this.setTransitionEl}\n        >\n          <FloatingArrow\n            floatingLayout={floatingLayout}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(arrowEl: SVGElement) => (this.arrowEl = arrowEl)}\n          />\n          <div class={CSS.container}>\n            <slot />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
