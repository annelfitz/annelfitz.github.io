{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/materials/ProceduralTextureRepository.js", "../../@arcgis/core/views/3d/webgl-engine/materials/stippleTextureRepository.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/ensureColor4.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/LineStipple.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/RibbonLineTechniqueConfiguration.js", "../../@arcgis/core/chunks/RibbonLine.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{generateUID as e}from\"../../../../core/uid.js\";class t{constructor(t,r,s){this._createTexture=t,this._parametersKey=r,this._repository=new Map,this._orphanCache=s.newCache(`procedural-texture-repository:${e()}`,(e=>e.dispose()))}destroy(){for(const[e,{texture:t}]of this._repository)t.dispose();this._repository.clear(),this._orphanCache.destroy()}swap(e,t=null){const r=this._acquire(e);return this.release(t),r}release(e){if(null==e)return;const t=this._parametersKey(e),r=this._repository.get(t);if(r&&(r.refCount--,0===r.refCount)){this._repository.delete(t);const{texture:e}=r,s=e.usedMemory;this._orphanCache.put(t,e,s)}}_acquire(e){if(null==e)return null;const t=this._parametersKey(e),s=this._repository.get(t);if(s)return s.refCount++,s.texture;const o=this._orphanCache.pop(t)??this._createTexture(e),i=new r(o);return this._repository.set(t,i),o}}class r{constructor(e){this.texture=e,this.refCount=1}}export{t as ProceduralTextureRepository};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{packFloatRGBA as t}from\"../../../../core/floatRGBA.js\";import{ProceduralTextureRepository as e}from\"./ProceduralTextureRepository.js\";import{PixelFormat as r,TextureWrapMode as o}from\"../../../webgl/enums.js\";import{Texture as n}from\"../../../webgl/Texture.js\";import{TextureDescriptor as i}from\"../../../webgl/TextureDescriptor.js\";function u(t,u){return new e((e=>{const{encodedData:u,textureSize:c}=a(e),f=new i;return f.internalFormat=r.RGBA,f.width=c,f.height=1,f.wrapMode=o.REPEAT,new n(t,f,u)}),(t=>`${t.pattern.join(\",\")}-r${t.pixelRatio}`),u)}function a(e){const r=c(e),o=1/e.pixelRatio,n=f(e),i=s(e),u=(Math.floor(.5*(i-1))+.5)*o,a=[];let l=1;for(const t of r){for(let e=0;e<t;e++){const r=l*(Math.min(e,t-1-e)+.5)*o/u*.5+.5;a.push(r)}l=-l}const p=Math.round(r[0]/2),m=[...a.slice(p),...a.slice(0,p)],d=new Uint8Array(4*n);let x=0;for(const c of m)t(c,d,x),x+=4;return{encodedData:d,textureSize:n}}function c(t){return t.pattern.map((e=>Math.round(e*t.pixelRatio)))}function f(t){if(null==t)return 1;const e=c(t);return Math.floor(e.reduce(((t,e)=>t+e)))}function s(t){return c(t).reduce(((t,e)=>Math.max(t,e)))}export{s as computeLongestPattern,f as computeTextureSize,u as createStippleTextureRepository};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{s as r}from\"../../../../chunks/vec42.js\";import{ZEROS as o,create as t}from\"../../../../core/libs/gl-matrix-2/factories/vec4f64.js\";function s(t){return null==t?o:4===t.length?t:r(c,t[0],t[1],t[2],1)}const c=t();export{s as ensureColor4};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{RgbaFloatEncoding as e}from\"../util/RgbaFloatEncoding.glsl.js\";import{addCameraPosition as t,addPixelRatio as o}from\"../util/View.glsl.js\";import{Float4PassUniform as i}from\"../../shaderModules/Float4PassUniform.js\";import{FloatPassUniform as r}from\"../../shaderModules/FloatPassUniform.js\";import{glsl as l}from\"../../shaderModules/interfaces.js\";import{Texture2DPassUniform as a}from\"../../shaderModules/Texture2DPassUniform.js\";import{computeLongestPattern as p,computeTextureSize as n}from\"../../../materials/stippleTextureRepository.js\";import{ensureColor4 as s}from\"../../../shaders/ensureColor4.js\";function d(e,t){e.constants.add(\"stippleAlphaColorDiscard\",\"float\",.001),e.constants.add(\"stippleAlphaHighlightDiscard\",\"float\",.5),t.stippleEnabled?c(e,t):f(e)}function c(p,n){const d=!(n.draped&&n.stipplePreferContinuous),{vertex:c,fragment:f}=p;f.include(e),n.draped||(t(c,n),c.uniforms.add(new r(\"worldToScreenPerDistanceRatio\",((e,t)=>1/t.camera.perScreenPixelRatio))),c.code.add(l`float computeWorldToScreenRatio(vec3 segmentCenter) {\nfloat segmentDistanceToCamera = length(segmentCenter - cameraPosition);\nreturn worldToScreenPerDistanceRatio / segmentDistanceToCamera;\n}`)),p.varyings.add(\"vStippleDistance\",\"float\"),p.varyings.add(\"vStippleDistanceLimits\",\"vec2\"),p.varyings.add(\"vStipplePatternStretch\",\"float\"),c.code.add(l`\n    float discretizeWorldToScreenRatio(float worldToScreenRatio) {\n      float step = ${u};\n\n      float discreteWorldToScreenRatio = log(worldToScreenRatio);\n      discreteWorldToScreenRatio = ceil(discreteWorldToScreenRatio / step) * step;\n      discreteWorldToScreenRatio = exp(discreteWorldToScreenRatio);\n      return discreteWorldToScreenRatio;\n    }\n  `),c.code.add(l`vec2 computeStippleDistanceLimits(float startPseudoScreen, float segmentLengthPseudoScreen, float segmentLengthScreen, float patternLength) {`),c.code.add(l`\n    if (segmentLengthPseudoScreen >= ${d?\"patternLength\":\"1e4\"}) {\n  `),o(c),c.code.add(l`float repetitions = segmentLengthScreen / (patternLength * pixelRatio);\nfloat flooredRepetitions = max(1.0, floor(repetitions + 0.5));\nfloat segmentLengthScreenRounded = flooredRepetitions * patternLength;\nfloat stretch = repetitions / flooredRepetitions;\nvStipplePatternStretch = max(0.75, stretch);\nreturn vec2(0.0, segmentLengthScreenRounded);\n}\nreturn vec2(startPseudoScreen, startPseudoScreen + segmentLengthPseudoScreen);\n}`),f.uniforms.add(new a(\"stipplePatternTexture\",(e=>e.stippleTexture)),new r(\"stipplePatternSDFNormalizer\",(e=>m(e.stipplePattern))),new r(\"stipplePatternPixelSizeInv\",(e=>1/S(e)))),f.code.add(l`float getStippleSDF(out bool isClamped) {\nfloat stippleDistanceClamped = clamp(vStippleDistance, vStippleDistanceLimits.x, vStippleDistanceLimits.y);\nvec2 aaCorrectedLimits = vStippleDistanceLimits + vec2(1.0, -1.0) / gl_FragCoord.w;\nisClamped = vStippleDistance < aaCorrectedLimits.x || vStippleDistance > aaCorrectedLimits.y;\nfloat u = stippleDistanceClamped * gl_FragCoord.w * stipplePatternPixelSizeInv * vLineSizeInv;\nu = fract(u);\nfloat encodedSDF = rgba2float(texture(stipplePatternTexture, vec2(u, 0.5)));\nfloat sdf = (encodedSDF * 2.0 - 1.0) * stipplePatternSDFNormalizer;\nreturn (sdf - 0.5) * vStipplePatternStretch + 0.5;\n}\nfloat getStippleSDF() {\nbool ignored;\nreturn getStippleSDF(ignored);\n}\nfloat getStippleAlpha() {\nbool isClamped;\nfloat stippleSDF = getStippleSDF(isClamped);\nfloat antiAliasedResult = clamp(stippleSDF * vLineWidth + 0.5, 0.0, 1.0);\nreturn isClamped ? floor(antiAliasedResult + 0.5) : antiAliasedResult;\n}`),n.stippleOffColorEnabled?(f.uniforms.add(new i(\"stippleOffColor\",(e=>s(e.stippleOffColor)))),f.code.add(l`#define discardByStippleAlpha(stippleAlpha, threshold) {}\n#define blendStipple(color, stippleAlpha) mix(color, stippleOffColor, stippleAlpha)`)):f.code.add(l`#define discardByStippleAlpha(stippleAlpha, threshold) if (stippleAlpha < threshold) { discard; }\n#define blendStipple(color, stippleAlpha) vec4(color.rgb, color.a * stippleAlpha)`)}function f(e){e.fragment.code.add(l`float getStippleAlpha() { return 1.0; }\n#define discardByStippleAlpha(_stippleAlpha_, _threshold_) {}\n#define blendStipple(color, _stippleAlpha_) color`)}function m(e){return e?(Math.floor(.5*(p(e)-1))+.5)/e.pixelRatio:1}function S(e){const t=e.stipplePattern;return t?n(e.stipplePattern)/t.pixelRatio:1}const u=l.float(.4);export{d as LineStipple,S as computePixelSize};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{_ as o}from\"../../../../chunks/tslib.es6.js\";import{ShaderOutput as t}from\"../core/shaderLibrary/ShaderOutput.js\";import{parameter as e}from\"../core/shaderTechnique/ShaderTechniqueConfiguration.js\";import{TransparencyPassType as p}from\"../lib/TransparencyPassType.js\";import{DefaultTechniqueConfiguration as i}from\"../materials/DefaultTechniqueConfiguration.js\";var r;!function(o){o[o.BUTT=0]=\"BUTT\",o[o.SQUARE=1]=\"SQUARE\",o[o.ROUND=2]=\"ROUND\",o[o.COUNT=3]=\"COUNT\"}(r||(r={}));class s extends i{constructor(){super(...arguments),this.output=t.Color,this.capType=r.BUTT,this.transparencyPassType=p.NONE,this.occluder=!1,this.hasSlicePlane=!1,this.hasPolygonOffset=!1,this.writeDepth=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stipplePreferContinuous=!0,this.roundJoins=!1,this.applyMarkerOffset=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.falloffEnabled=!1,this.innerColorEnabled=!1,this.hasOccludees=!1,this.multipassEnabled=!1,this.cullAboveGround=!1,this.wireframe=!1,this.objectAndLayerIdColorInstanced=!1}}o([e({count:t.COUNT})],s.prototype,\"output\",void 0),o([e({count:r.COUNT})],s.prototype,\"capType\",void 0),o([e({count:p.COUNT})],s.prototype,\"transparencyPassType\",void 0),o([e()],s.prototype,\"occluder\",void 0),o([e()],s.prototype,\"hasSlicePlane\",void 0),o([e()],s.prototype,\"hasPolygonOffset\",void 0),o([e()],s.prototype,\"writeDepth\",void 0),o([e()],s.prototype,\"draped\",void 0),o([e()],s.prototype,\"stippleEnabled\",void 0),o([e()],s.prototype,\"stippleOffColorEnabled\",void 0),o([e()],s.prototype,\"stipplePreferContinuous\",void 0),o([e()],s.prototype,\"roundJoins\",void 0),o([e()],s.prototype,\"applyMarkerOffset\",void 0),o([e()],s.prototype,\"vvSize\",void 0),o([e()],s.prototype,\"vvColor\",void 0),o([e()],s.prototype,\"vvOpacity\",void 0),o([e()],s.prototype,\"falloffEnabled\",void 0),o([e()],s.prototype,\"innerColorEnabled\",void 0),o([e()],s.prototype,\"hasOccludees\",void 0),o([e()],s.prototype,\"multipassEnabled\",void 0),o([e()],s.prototype,\"cullAboveGround\",void 0),o([e()],s.prototype,\"wireframe\",void 0),o([e()],s.prototype,\"objectAndLayerIdColorInstanced\",void 0),o([e({constValue:!1})],s.prototype,\"occlusionPass\",void 0),o([e({constValue:!0})],s.prototype,\"hasVvInstancing\",void 0),o([e({constValue:!0})],s.prototype,\"hasSliceTranslatedView\",void 0);export{r as CapType,s as RibbonLineTechniqueConfiguration};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{addLinearDepth as e,addCalculateLinearDepth as i}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{ShaderOutput as t}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{ObjectAndLayerIdColor as r}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js\";import{RibbonVertexPosition as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/RibbonVertexPosition.glsl.js\";import{OutputDepth as a}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js\";import{LineStipple as s,computePixelSize as l}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/LineStipple.glsl.js\";import{MarkerSizing as d}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MarkerSizing.glsl.js\";import{multipassTerrainTest as p}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{PiUtils as c}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PiUtils.glsl.js\";import{symbolAlphaCutoff as m}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{ColorConversion as v}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{addProjViewLocalOrigin as f,addPixelRatio as g}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float2PassUniform as h}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float4PassUniform as u}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as D}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as S}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as L}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as b}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{TransparencyPassType as x}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as w}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{LineMarkerSpace as y}from\"../views/3d/webgl-engine/shaders/LineMarkerTechniqueConfiguration.js\";import{CapType as C}from\"../views/3d/webgl-engine/shaders/RibbonLineTechniqueConfiguration.js\";const j=1;function P(P){const R=new b,{attributes:A,varyings:F,constants:E,vertex:T,fragment:z}=R;R.include(c),R.include(n,P),R.include(s,P);const O=P.applyMarkerOffset&&!P.draped;O&&(T.uniforms.add(new D(\"markerScale\",(e=>e.markerScale))),R.include(d,{space:y.World,draped:!1})),P.output===t.LinearDepth&&R.include(a,P),R.include(r,P),f(T,P),T.uniforms.add(new L(\"inverseProjectionMatrix\",((e,i)=>i.camera.inverseProjectionMatrix)),new h(\"nearFar\",((e,i)=>i.camera.nearFar)),new D(\"miterLimit\",(e=>\"miter\"!==e.join?0:e.miterLimit)),new u(\"viewport\",((e,i)=>i.camera.fullViewport))),T.constants.add(\"LARGE_HALF_FLOAT\",\"float\",65500),A.add(w.POSITION,\"vec3\"),A.add(w.PREVPOSITION,\"vec3\"),A.add(w.NEXTPOSITION,\"vec3\"),A.add(w.SUBDIVISIONFACTOR,\"float\"),A.add(w.UV0,\"vec2\"),F.add(\"vColor\",\"vec4\"),F.add(\"vpos\",\"vec3\"),F.add(\"vLineDistance\",\"float\"),F.add(\"vLineWidth\",\"float\"),e(R);const V=P.multipassEnabled&&(P.output===t.Color||P.output===t.Alpha);V&&F.add(\"depth\",\"float\");const W=P.stippleEnabled;W&&F.add(\"vLineSizeInv\",\"float\"),E.add(\"aaWidth\",\"float\",P.stippleEnabled?0:1);const I=P.capType===C.ROUND,N=P.stippleEnabled&&I,$=P.falloffEnabled||N;$&&F.add(\"vLineDistanceNorm\",\"float\"),I&&(F.add(\"vSegmentSDF\",\"float\"),F.add(\"vReverseSegmentSDF\",\"float\")),T.code.add(S`#define PERPENDICULAR(v) vec2(v.y, -v.x);\nfloat interp(float ncp, vec4 a, vec4 b) {\nreturn (-ncp - a.z) / (b.z - a.z);\n}\nvec2 rotate(vec2 v, float a) {\nfloat s = sin(a);\nfloat c = cos(a);\nmat2 m = mat2(c, -s, s, c);\nreturn m * v;\n}`),T.code.add(S`vec4 projectAndScale(vec4 pos) {\nvec4 posNdc = proj * pos;\nposNdc.xy *= viewport.zw / posNdc.w;\nreturn posNdc;\n}`),i(R),T.code.add(S`\n    void clipAndTransform(inout vec4 pos, inout vec4 prev, inout vec4 next, in bool isStartVertex) {\n      float vnp = nearFar[0] * 0.99;\n\n      if(pos.z > -nearFar[0]) {\n        //current pos behind ncp --> we need to clip\n        if (!isStartVertex) {\n          if(prev.z < -nearFar[0]) {\n            //previous in front of ncp\n            pos = mix(prev, pos, interp(vnp, prev, pos));\n            next = pos;\n          } else {\n            pos = vec4(0.0, 0.0, 0.0, 1.0);\n          }\n        } else {\n          if(next.z < -nearFar[0]) {\n            //next in front of ncp\n            pos = mix(pos, next, interp(vnp, pos, next));\n            prev = pos;\n          } else {\n            pos = vec4(0.0, 0.0, 0.0, 1.0);\n          }\n        }\n      } else {\n        //current position visible\n        if (prev.z > -nearFar[0]) {\n          //previous behind ncp\n          prev = mix(pos, prev, interp(vnp, pos, prev));\n        }\n        if (next.z > -nearFar[0]) {\n          //next behind ncp\n          next = mix(next, pos, interp(vnp, next, pos));\n        }\n      }\n\n      ${V?\"depth = pos.z;\":\"\"}\n      linearDepth = calculateLinearDepth(nearFar,pos.z);\n\n      pos = projectAndScale(pos);\n      next = projectAndScale(next);\n      prev = projectAndScale(prev);\n    }\n  `),g(T),T.code.add(S`\n  void main(void) {\n    // unpack values from uv0.y\n    bool isStartVertex = abs(abs(uv0.y)-3.0) == 1.0;\n\n    float coverage = 1.0;\n\n    // Check for special value of uv0.y which is used by the Renderer when graphics\n    // are removed before the VBO is recompacted. If this is the case, then we just\n    // project outside of clip space.\n    if (uv0.y == 0.0) {\n      // Project out of clip space\n      gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n    }\n    else {\n      bool isJoin = abs(uv0.y) < 3.0;\n      float lineSize = getSize();\n\n      if (lineSize < 1.0) {\n        coverage = lineSize; // convert sub-pixel coverage to alpha\n        lineSize = 1.0;\n      }\n      lineSize += aaWidth;\n\n      float lineWidth = lineSize * pixelRatio;\n      vLineWidth = lineWidth;\n      ${W?S`vLineSizeInv = 1.0 / lineSize;`:\"\"}\n\n      vec4 pos  = view * vec4(position, 1.0);\n      vec4 prev = view * vec4(prevPosition, 1.0);\n      vec4 next = view * vec4(nextPosition, 1.0);\n  `),O&&T.code.add(S`vec4 other = isStartVertex ? next : prev;\nbool markersHidden = areWorldMarkersHidden(pos, other);\nif(!isJoin && !markersHidden) {\npos.xyz += normalize(other.xyz - pos.xyz) * getWorldMarkerSize(pos) * 0.5;\n}`),T.code.add(S`clipAndTransform(pos, prev, next, isStartVertex);\nvec2 left = (pos.xy - prev.xy);\nvec2 right = (next.xy - pos.xy);\nfloat leftLen = length(left);\nfloat rightLen = length(right);`);(P.stippleEnabled||I)&&T.code.add(S`\n      float isEndVertex = float(!isStartVertex);\n      vec2 segmentOrigin = mix(pos.xy, prev.xy, isEndVertex);\n      vec2 segment = mix(right, left, isEndVertex);\n      ${I?S`vec2 segmentEnd = mix(next.xy, pos.xy, isEndVertex);`:\"\"}\n    `),T.code.add(S`left = (leftLen > 0.001) ? left/leftLen : vec2(0.0, 0.0);\nright = (rightLen > 0.001) ? right/rightLen : vec2(0.0, 0.0);\nvec2 capDisplacementDir = vec2(0, 0);\nvec2 joinDisplacementDir = vec2(0, 0);\nfloat displacementLen = lineWidth;\nif (isJoin) {\nbool isOutside = (left.x * right.y - left.y * right.x) * uv0.y > 0.0;\njoinDisplacementDir = normalize(left + right);\njoinDisplacementDir = PERPENDICULAR(joinDisplacementDir);\nif (leftLen > 0.001 && rightLen > 0.001) {\nfloat nDotSeg = dot(joinDisplacementDir, left);\ndisplacementLen /= length(nDotSeg * left - joinDisplacementDir);\nif (!isOutside) {\ndisplacementLen = min(displacementLen, min(leftLen, rightLen)/abs(nDotSeg));\n}\n}\nif (isOutside && (displacementLen > miterLimit * lineWidth)) {`),P.roundJoins?T.code.add(S`\n        vec2 startDir = leftLen < 0.001 ? right : left;\n        startDir = PERPENDICULAR(startDir);\n\n        vec2 endDir = rightLen < 0.001 ? left : right;\n        endDir = PERPENDICULAR(endDir);\n\n        float factor = ${P.stippleEnabled?S`min(1.0, subdivisionFactor * ${S.float((j+2)/(j+1))})`:S`subdivisionFactor`};\n\n        float rotationAngle = acos(clamp(dot(startDir, endDir), -1.0, 1.0));\n        joinDisplacementDir = rotate(startDir, -sign(uv0.y) * factor * rotationAngle);\n      `):T.code.add(S`if (leftLen < 0.001) {\njoinDisplacementDir = right;\n}\nelse if (rightLen < 0.001) {\njoinDisplacementDir = left;\n}\nelse {\njoinDisplacementDir = (isStartVertex || subdivisionFactor > 0.0) ? right : left;\n}\njoinDisplacementDir = PERPENDICULAR(joinDisplacementDir);`);const M=P.capType!==C.BUTT;return T.code.add(S`\n        displacementLen = lineWidth;\n      }\n    } else {\n      // CAP handling ---------------------------------------------------\n      joinDisplacementDir = isStartVertex ? right : left;\n      joinDisplacementDir = PERPENDICULAR(joinDisplacementDir);\n\n      ${M?S`capDisplacementDir = isStartVertex ? -right : left;`:\"\"}\n    }\n  `),T.code.add(S`\n    // Displacement (in pixels) caused by join/or cap\n    vec2 dpos = joinDisplacementDir * sign(uv0.y) * displacementLen + capDisplacementDir * displacementLen;\n    float lineDistNorm = sign(uv0.y) * pos.w;\n\n    vLineDistance =  lineWidth * lineDistNorm;\n    ${$?S`vLineDistanceNorm = lineDistNorm;`:\"\"}\n\n    pos.xy += dpos;\n  `),I&&T.code.add(S`vec2 segmentDir = normalize(segment);\nvSegmentSDF = (isJoin && isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentOrigin, segmentDir) * pos.w) ;\nvReverseSegmentSDF = (isJoin && !isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentEnd, -segmentDir) * pos.w);`),P.stippleEnabled&&(P.draped?T.uniforms.add(new D(\"worldToScreenRatio\",((e,i)=>1/i.screenToPCSRatio))):T.code.add(S`vec3 segmentCenter = mix((nextPosition + position) * 0.5, (position + prevPosition) * 0.5, isEndVertex);\nfloat worldToScreenRatio = computeWorldToScreenRatio(segmentCenter);`),T.code.add(S`float segmentLengthScreenDouble = length(segment);\nfloat segmentLengthScreen = segmentLengthScreenDouble * 0.5;\nfloat discreteWorldToScreenRatio = discretizeWorldToScreenRatio(worldToScreenRatio);\nfloat segmentLengthRender = length(mix(nextPosition - position, position - prevPosition, isEndVertex));\nvStipplePatternStretch = worldToScreenRatio / discreteWorldToScreenRatio;`),P.draped?T.code.add(S`float segmentLengthPseudoScreen = segmentLengthScreen / pixelRatio * discreteWorldToScreenRatio / worldToScreenRatio;\nfloat startPseudoScreen = uv0.x * discreteWorldToScreenRatio - mix(0.0, segmentLengthPseudoScreen, isEndVertex);`):T.code.add(S`float startPseudoScreen = mix(uv0.x, uv0.x - segmentLengthRender, isEndVertex) * discreteWorldToScreenRatio;\nfloat segmentLengthPseudoScreen = segmentLengthRender * discreteWorldToScreenRatio;`),T.uniforms.add(new D(\"stipplePatternPixelSize\",(e=>l(e)))),T.code.add(S`float patternLength = lineSize * stipplePatternPixelSize;\nvStippleDistanceLimits = computeStippleDistanceLimits(startPseudoScreen, segmentLengthPseudoScreen, segmentLengthScreen, patternLength);\nvStippleDistance = mix(vStippleDistanceLimits.x, vStippleDistanceLimits.y, isEndVertex);\nif (segmentLengthScreenDouble >= 0.001) {\nvec2 stippleDisplacement = pos.xy - segmentOrigin;\nfloat stippleDisplacementFactor = dot(segment, stippleDisplacement) / (segmentLengthScreenDouble * segmentLengthScreenDouble);\nvStippleDistance += (stippleDisplacementFactor - isEndVertex) * (vStippleDistanceLimits.y - vStippleDistanceLimits.x);\n}\nvStippleDistanceLimits *= pos.w;\nvStippleDistance *= pos.w;\nvStippleDistanceLimits = isJoin ?\nvStippleDistanceLimits :\nisStartVertex ?\nvec2(-1e34, vStippleDistanceLimits.y) :\nvec2(vStippleDistanceLimits.x, 1e34);`)),T.code.add(S`\n      // Convert back into NDC\n      pos.xy = (pos.xy / viewport.zw) * pos.w;\n\n      vColor = getColor();\n      vColor.a *= coverage;\n\n      ${P.wireframe&&!P.draped?\"pos.z -= 0.001 * pos.w;\":\"\"}\n\n      // transform final position to camera space for slicing\n      vpos = (inverseProjectionMatrix * pos).xyz;\n      gl_Position = pos;\n      forwardObjectAndLayerIdColor();\n    }\n  }\n  `),V&&R.include(p,P),R.include(o,P),z.include(v),z.code.add(S`\n  void main() {\n    discardBySlice(vpos);\n    ${V?\"terrainDepthTest(depth);\":\"\"}\n  `),P.wireframe?z.code.add(S`vec4 finalColor = vec4(1.0, 0.0, 1.0, 1.0);`):(I&&z.code.add(S`\n        float sdf = min(vSegmentSDF, vReverseSegmentSDF);\n        vec2 fragmentPosition = vec2(\n          min(sdf, 0.0),\n          vLineDistance\n        ) * gl_FragCoord.w;\n\n        float fragmentRadius = length(fragmentPosition);\n        float fragmentCapSDF = (fragmentRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale\n        float capCoverage = clamp(0.5 - fragmentCapSDF, 0.0, 1.0);\n\n        if (capCoverage < ${S.float(m)}) {\n          discard;\n        }\n      `),N?z.code.add(S`\n      vec2 stipplePosition = vec2(\n        min(getStippleSDF() * 2.0 - 1.0, 0.0),\n        vLineDistanceNorm * gl_FragCoord.w\n      );\n      float stippleRadius = length(stipplePosition * vLineWidth);\n      float stippleCapSDF = (stippleRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale\n      float stippleCoverage = clamp(0.5 - stippleCapSDF, 0.0, 1.0);\n      float stippleAlpha = step(${S.float(m)}, stippleCoverage);\n      `):z.code.add(S`float stippleAlpha = getStippleAlpha();`),P.output!==t.ObjectAndLayerIdColor&&z.code.add(S`discardByStippleAlpha(stippleAlpha, stippleAlphaColorDiscard);`),z.uniforms.add(new u(\"intrinsicColor\",(e=>e.color))),z.code.add(S`vec4 color = intrinsicColor * vColor;`),P.innerColorEnabled&&(z.uniforms.add(new u(\"innerColor\",(e=>e.innerColor??e.color)),new D(\"innerWidth\",((e,i)=>e.innerWidth*i.camera.pixelRatio))),z.code.add(S`float distToInner = abs(vLineDistance * gl_FragCoord.w) - innerWidth;\nfloat innerAA = clamp(0.5 - distToInner, 0.0, 1.0);\nfloat innerAlpha = innerColor.a + color.a * (1.0 - innerColor.a);\ncolor = mix(color, vec4(innerColor.rgb, innerAlpha), innerAA);`)),z.code.add(S`vec4 finalColor = blendStipple(color, stippleAlpha);`),P.falloffEnabled&&(z.uniforms.add(new D(\"falloff\",(e=>e.falloff))),z.code.add(S`finalColor.a *= pow(max(0.0, 1.0 - abs(vLineDistanceNorm * gl_FragCoord.w)), falloff);`)),P.stippleEnabled||z.code.add(S`float featherStartDistance = max(vLineWidth - 2.0, 0.0);\nfloat value = abs(vLineDistance) * gl_FragCoord.w;\nfloat feather = (value - featherStartDistance) / (vLineWidth - featherStartDistance);\nfinalColor.a *= 1.0 - clamp(feather, 0.0, 1.0);`)),z.code.add(S`\n    ${P.output===t.ObjectAndLayerIdColor?S`finalColor.a = 1.0;`:\"\"}\n\n    if (finalColor.a < ${S.float(m)}) {\n      discard;\n    }\n\n    ${P.output===t.Alpha?S`fragColor = vec4(finalColor.a);`:\"\"}\n    ${P.output===t.Color?S`fragColor = highlightSlice(finalColor, vpos);`:\"\"}\n    ${P.output===t.Color&&P.transparencyPassType===x.Color?\"fragColor = premultiplyAlpha(fragColor);\":\"\"}\n    ${P.output===t.Highlight?S`fragColor = vec4(1.0);`:\"\"}\n    ${P.output===t.LinearDepth?S`outputDepth(linearDepth);`:\"\"}\n    ${P.output===t.ObjectAndLayerIdColor?S`outputObjectAndLayerIdColor();`:\"\"}\n  }\n  `),R}const R=Object.freeze(Object.defineProperty({__proto__:null,build:P,ribbonlineNumRoundJoinSubdivisions:j},Symbol.toStringTag,{value:\"Module\"}));export{R,P as b,j as r};\n"],
  "mappings": "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",
  "names": ["t", "r", "s", "e", "o", "t", "u", "e", "c", "a", "f", "r", "o", "n", "s", "l", "p", "m", "d", "s", "t", "c", "d", "e", "t", "c", "f", "p", "n", "o", "u", "s", "m", "r", "o", "s", "t", "P", "R", "o", "t", "d", "e", "n", "r"]
}
