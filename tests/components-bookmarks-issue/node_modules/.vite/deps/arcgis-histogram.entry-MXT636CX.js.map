{
  "version": 3,
  "sources": ["../../@arcgis/map-components/dist/esm/arcgis-histogram.entry.js"],
  "sourcesContent": ["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.0-next.13\n */\nimport { r as registerInstance, c as createEvent, h, g as getElement } from './index-2198b48c.js';\nimport { D as newWidgetsHistogram, i as importCoreReactiveUtils } from './index-08887307.js';\nimport { a as addHandles } from './component-utils-97b1c3e3.js';\n\nconst histogramCss = \"arcgis-histogram{}\";\n\nconst ArcgisHistogram = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.widgetReady = createEvent(this, \"widgetReady\", 7);\n        this._watchHandles = [];\n        this.referenceElement = undefined;\n        this.average = undefined;\n        this.barCreatedFunction = undefined;\n        this.bins = undefined;\n        this.dataLineCreatedFunction = undefined;\n        this.dataLines = undefined;\n        this.labelFormatFunction = undefined;\n        this.layout = undefined;\n        this.max = 0;\n        this.min = 0;\n        this.state = undefined;\n        this.position = \"bottom-left\";\n        this.expandable = false;\n        this.widget = undefined;\n    }\n    averageWatcher(newValue) {\n        if (this.widget) {\n            this.widget.average = newValue;\n        }\n    }\n    barCreatedFunctionWatcher(newValue) {\n        if (this.widget) {\n            this.widget.barCreatedFunction = newValue;\n        }\n    }\n    binsWatcher(newValue) {\n        if (this.widget) {\n            this.widget.bins = newValue;\n        }\n    }\n    dataLineCreatedFunctionWatcher(newValue) {\n        if (this.widget) {\n            this.widget.dataLineCreatedFunction = newValue;\n        }\n    }\n    dataLinesWatcher(newValue) {\n        if (this.widget) {\n            this.widget.dataLines = newValue;\n        }\n    }\n    labelFormatFunctionWatcher(newValue) {\n        if (this.widget) {\n            this.widget.labelFormatFunction = newValue;\n        }\n    }\n    layoutWatcher(newValue) {\n        if (this.widget) {\n            this.widget.layout = newValue;\n        }\n    }\n    maxWatcher(newValue) {\n        if (this.widget) {\n            this.widget.max = Number(newValue);\n        }\n    }\n    minWatcher(newValue) {\n        if (this.widget) {\n            this.widget.min = Number(newValue);\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    async componentDidLoad() {\n        const params = this._createParams();\n        const widget = await newWidgetsHistogram(params);\n        this.widget = widget;\n        await this._addWatchers();\n        this.widgetReady.emit({ widget: this.widget });\n    }\n    render() {\n        if (this.expandable) {\n            return (h(\"arcgis-expand\", { position: this.position, ref: (el) => (this.expandElem = el) }, h(\"div\", { ref: (el) => (this.childElem = el) })));\n        }\n        return h(\"div\", { ref: (el) => (this.childElem = el) });\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    async _addWatchers() {\n        const { watch } = await importCoreReactiveUtils();\n        addHandles(this, watch(() => this.widget.state, () => (this.state = this.widget.state), {\n            initial: true\n        }));\n    }\n    _createParams() {\n        const params = {\n            container: this.childElem,\n            min: this.min,\n            max: this.max\n        };\n        if (this.average !== undefined) {\n            params.average = this.average;\n        }\n        if (this.barCreatedFunction) {\n            params.barCreatedFunction = this.barCreatedFunction;\n        }\n        if (this.bins !== undefined) {\n            params.bins = this.bins;\n        }\n        if (this.dataLineCreatedFunction) {\n            params.dataLineCreatedFunction = this.dataLineCreatedFunction;\n        }\n        if (this.dataLines !== undefined) {\n            params.dataLines = this.dataLines;\n        }\n        if (this.labelFormatFunction) {\n            params.labelFormatFunction = this.labelFormatFunction;\n        }\n        return params;\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"average\": [\"averageWatcher\"],\n        \"barCreatedFunction\": [\"barCreatedFunctionWatcher\"],\n        \"bins\": [\"binsWatcher\"],\n        \"dataLineCreatedFunction\": [\"dataLineCreatedFunctionWatcher\"],\n        \"dataLines\": [\"dataLinesWatcher\"],\n        \"labelFormatFunction\": [\"labelFormatFunctionWatcher\"],\n        \"layout\": [\"layoutWatcher\"],\n        \"max\": [\"maxWatcher\"],\n        \"min\": [\"minWatcher\"]\n    }; }\n};\nArcgisHistogram.style = histogramCss;\n\nexport { ArcgisHistogram as arcgis_histogram };\n"],
  "mappings": "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",
  "names": []
}
