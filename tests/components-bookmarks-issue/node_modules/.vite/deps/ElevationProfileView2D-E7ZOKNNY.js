import {
  a
} from "./chunk-MFKQEOWD.js";
import {
  t
} from "./chunk-O2O2F3IL.js";
import "./chunk-ZGRPTRAY.js";
import {
  n
} from "./chunk-BEXFYHUM.js";
import "./chunk-3DFMDDMO.js";
import "./chunk-GMUCR2DJ.js";
import "./chunk-33LWZO2E.js";
import "./chunk-TXLJQAAN.js";
import "./chunk-P4MNTMCZ.js";
import "./chunk-WZJNHZ6H.js";
import "./chunk-GLF3KRAL.js";
import "./chunk-AKEHDP75.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import {
  A,
  d as d2
} from "./chunk-Z4Y53NDM.js";
import "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import {
  d
} from "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  r2 as r
} from "./chunk-NDIXNREV.js";
import "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  s
} from "./chunk-JGDJR5EV.js";
import {
  e,
  l,
  u
} from "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/widgets/ElevationProfile/support/InputRepresentation2D.js
var l2 = class {
  constructor(i) {
    this._params = i, this._highlightTask = null, this._highlightHandle = null;
  }
  destroy() {
    this.remove();
  }
  remove() {
    this._highlightTask = e(this._highlightTask), this._highlightHandle = l(this._highlightHandle);
  }
  update(t2) {
    if (this.remove(), null == t2 || !r2(t2))
      return;
    const h2 = t2.layer;
    this._highlightTask = d(async (i) => {
      const l3 = await this._params.view.whenLayerView(h2);
      s(i);
      const r3 = n(l3) ? l3 : null;
      r3 && (this._highlightHandle = r3.highlight(t2));
    });
  }
};
function r2(i) {
  return null != i.geometry && "polyline" === i.geometry.type;
}

// node_modules/@arcgis/core/widgets/ElevationProfile/support/ElevationProfileView2D.js
var h = class {
  constructor(e2, n2) {
    this._handles = new r(), this._inputRepresentation = new l2({ view: e2 }), this._hoveredPoints = new a({ view: e2 }), this._handles.add([d2(() => n2.viewModel.hoveredPoints, (t2) => this._hoveredPoints.update(t2), A), d2(() => {
      const { state: t2, highlightEnabled: e3, viewModel: i } = n2;
      return { input: i.input, state: t2, highlightEnabled: e3 };
    }, (t2) => this._updateInputRepresentation(t2), A)]);
  }
  destroy() {
    this._handles = u(this._handles), this._inputRepresentation = u(this._inputRepresentation), this._hoveredPoints = u(this._hoveredPoints);
  }
  _updateInputRepresentation({ input: t2, state: e2, highlightEnabled: i }) {
    e2 === t.Selected && i ? this._inputRepresentation.update(t2) : this._inputRepresentation.remove();
  }
};
export {
  h as ElevationProfileView2D
};
//# sourceMappingURL=ElevationProfileView2D-E7ZOKNNY.js.map
