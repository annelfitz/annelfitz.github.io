import {
  a as a4
} from "./chunk-XWTZSPU2.js";
import "./chunk-YSRCOU2A.js";
import {
  t as t6
} from "./chunk-3XPYGI2Z.js";
import {
  f as f6,
  m
} from "./chunk-3UHI6U3P.js";
import {
  d as d3
} from "./chunk-2QQPANF6.js";
import {
  m as m3
} from "./chunk-BOU46AXG.js";
import {
  O as O4
} from "./chunk-53QTUAOU.js";
import "./chunk-UAITPI2I.js";
import {
  p as p7
} from "./chunk-CTJKH5VV.js";
import {
  f as f5
} from "./chunk-FKMPOIQR.js";
import "./chunk-FQUIQQYI.js";
import {
  e as e10
} from "./chunk-CTY3WTET.js";
import "./chunk-EZMIPVQL.js";
import "./chunk-7IFMSG3H.js";
import {
  l as l4
} from "./chunk-N3SF7L2P.js";
import {
  A as A2,
  F as F2,
  U
} from "./chunk-RYDZOUU4.js";
import "./chunk-5SOMZZNP.js";
import "./chunk-7G5NQR7Q.js";
import "./chunk-UEYTNVS4.js";
import {
  h as h7
} from "./chunk-NIRB3OB6.js";
import "./chunk-CA3XJ2RX.js";
import {
  i
} from "./chunk-JASPUPTW.js";
import {
  e as e8
} from "./chunk-HWBFFWYY.js";
import {
  Z,
  m as m2
} from "./chunk-B473F3N3.js";
import {
  a as a5,
  l as l5,
  v as v3
} from "./chunk-HJ7EOT7R.js";
import {
  o as o4
} from "./chunk-23GKO7D7.js";
import {
  s as s4
} from "./chunk-45P2R3BJ.js";
import "./chunk-E22EEEDE.js";
import "./chunk-KDHW2KXU.js";
import {
  e as e9,
  ee
} from "./chunk-6FMD7BOV.js";
import {
  O as O3,
  b as b2,
  f as f3,
  j2 as j4,
  w
} from "./chunk-TKMRXVLK.js";
import {
  h as h6,
  p as p5,
  w as w2
} from "./chunk-6SB3EFZU.js";
import "./chunk-WOKVMRAD.js";
import {
  f as f4,
  r as r6,
  t as t7
} from "./chunk-FXZUN4XG.js";
import {
  a as a3
} from "./chunk-3W2U3CD4.js";
import "./chunk-3ENNELTC.js";
import {
  E2,
  P as P3,
  p as p4
} from "./chunk-LEFES6LS.js";
import "./chunk-AEAYH74I.js";
import "./chunk-ZKV5BWYX.js";
import "./chunk-E6JAHJ2A.js";
import "./chunk-SVNPPUZN.js";
import "./chunk-6BCJJDKK.js";
import {
  t as t5
} from "./chunk-UANQJYHL.js";
import "./chunk-DNFHDQRJ.js";
import {
  N as N2
} from "./chunk-TO6UIATU.js";
import "./chunk-IB7OUIEK.js";
import "./chunk-WCBCYPOZ.js";
import "./chunk-3FTSPLRV.js";
import {
  p as p6
} from "./chunk-OMRW2J7M.js";
import "./chunk-UXQH3C5A.js";
import {
  v as v2
} from "./chunk-AZYURM7A.js";
import {
  h as h5
} from "./chunk-HBBLDSW6.js";
import "./chunk-YYI7TRI3.js";
import "./chunk-RQW2N53A.js";
import "./chunk-LHVWC4RW.js";
import "./chunk-GN2OLKIL.js";
import "./chunk-LMCIQOBX.js";
import "./chunk-4VVENLLF.js";
import "./chunk-VUHMQQ6M.js";
import {
  x as x2
} from "./chunk-6GQQIJM7.js";
import "./chunk-PAH4PVZY.js";
import {
  R as R2,
  b
} from "./chunk-5T7MASZO.js";
import "./chunk-5WKN6K5Z.js";
import {
  H as H2
} from "./chunk-WCBHO6BH.js";
import "./chunk-V7NVRGBC.js";
import "./chunk-KCZGCTYM.js";
import "./chunk-3YZBQBZ5.js";
import "./chunk-RFBA77K3.js";
import "./chunk-46T3D2EU.js";
import "./chunk-RYF27IO3.js";
import "./chunk-2GT6KC2O.js";
import "./chunk-5MKTGTC4.js";
import "./chunk-7UDCRD5C.js";
import "./chunk-B3GKRGWX.js";
import "./chunk-FN7LLNVA.js";
import "./chunk-BR3PF5YD.js";
import {
  T
} from "./chunk-KVZT4PEH.js";
import "./chunk-VIRGWB3Z.js";
import "./chunk-QCUK7T7Y.js";
import "./chunk-2NDIVJST.js";
import {
  gt,
  st
} from "./chunk-SPYHZ6ZW.js";
import "./chunk-637XZX4A.js";
import "./chunk-PMFQ2A2V.js";
import "./chunk-5IITWVGY.js";
import "./chunk-HHAESKQ6.js";
import "./chunk-5INQRMFY.js";
import "./chunk-XP3ABGGF.js";
import "./chunk-TACIE3AK.js";
import "./chunk-6LT23NJG.js";
import "./chunk-4FXZDEEP.js";
import "./chunk-KYKKN5I4.js";
import "./chunk-PWQTGVPO.js";
import {
  p2 as p3,
  s as s3
} from "./chunk-4MJOJUFR.js";
import {
  c as c2
} from "./chunk-PTIWH4S7.js";
import {
  t as t3,
  u as u5
} from "./chunk-L3GUCBXG.js";
import "./chunk-BEXFYHUM.js";
import "./chunk-K3DEHPDR.js";
import "./chunk-I6RS7YIS.js";
import {
  r as r5,
  t as t4
} from "./chunk-XTY645DH.js";
import "./chunk-BHOYA5LV.js";
import "./chunk-G4YIJOSP.js";
import {
  s as s2
} from "./chunk-PMQ5HDZI.js";
import "./chunk-I7LDU4W6.js";
import "./chunk-KWLN46JY.js";
import "./chunk-7KNPDPFB.js";
import "./chunk-M6P775BS.js";
import "./chunk-J5F4VILS.js";
import "./chunk-KSBIR2KG.js";
import "./chunk-XVQGALI7.js";
import "./chunk-XFQIXBHG.js";
import "./chunk-MVSN2HAN.js";
import "./chunk-7A5N7G2Z.js";
import "./chunk-J54I3TB7.js";
import "./chunk-OE52KVBM.js";
import "./chunk-L577YNYZ.js";
import "./chunk-GL5TSVQL.js";
import "./chunk-FD7NY4JS.js";
import "./chunk-TYYN3C37.js";
import "./chunk-OBABKQ6S.js";
import "./chunk-4GGEQMYI.js";
import "./chunk-A47N2JLN.js";
import "./chunk-ZPC74XHC.js";
import "./chunk-IVGJRGD2.js";
import "./chunk-JA2AO4PC.js";
import "./chunk-MTLWPXQD.js";
import "./chunk-ZEMG7GKC.js";
import "./chunk-ECIXBYOQ.js";
import "./chunk-5MQ4HAUX.js";
import "./chunk-XIWETS2Q.js";
import "./chunk-FOCTPJDR.js";
import "./chunk-2DATALUO.js";
import "./chunk-QFKFOAJ6.js";
import "./chunk-LOPMLCHC.js";
import "./chunk-JIR2YP6A.js";
import "./chunk-LANUNBDP.js";
import "./chunk-JBF6CULO.js";
import "./chunk-DRCNNCTI.js";
import "./chunk-MKOOEINB.js";
import "./chunk-JKOHBDRD.js";
import "./chunk-MDSRD3WV.js";
import {
  h as h4
} from "./chunk-3DFMDDMO.js";
import "./chunk-4BCSYJOQ.js";
import "./chunk-GMUCR2DJ.js";
import "./chunk-HBRJJENW.js";
import "./chunk-VHY5K2VE.js";
import "./chunk-6ENXMQPD.js";
import "./chunk-FV43HSGW.js";
import "./chunk-ZR7OV2EH.js";
import "./chunk-U76EZJUZ.js";
import "./chunk-MEEG7XMI.js";
import "./chunk-LJULTBAY.js";
import "./chunk-FD4DXBZA.js";
import "./chunk-LO5UMUY4.js";
import {
  r as r4,
  t as t2,
  u as u4
} from "./chunk-M55GVNWJ.js";
import {
  a as a2
} from "./chunk-YKIGDW5O.js";
import "./chunk-7QHIE4SQ.js";
import "./chunk-6MGK5WBT.js";
import "./chunk-HSOVRETF.js";
import "./chunk-CPZW2LMK.js";
import "./chunk-QR7J3YDY.js";
import "./chunk-GO2OGJDG.js";
import "./chunk-UYMREM3D.js";
import "./chunk-4YGBWYMD.js";
import "./chunk-JTUYA5FE.js";
import "./chunk-UNTQATE2.js";
import "./chunk-5YY6NZNY.js";
import "./chunk-YUWVLORR.js";
import "./chunk-7MYYCSEB.js";
import "./chunk-ESK2YRQM.js";
import "./chunk-QIEXJLRX.js";
import "./chunk-UNTPHF5R.js";
import "./chunk-YJFPDMSR.js";
import "./chunk-FFG7BDAP.js";
import "./chunk-ECTYMEUP.js";
import {
  h as h3
} from "./chunk-I4SHZ6P5.js";
import "./chunk-QYDOVVH7.js";
import "./chunk-YSXT2SWC.js";
import "./chunk-YH3SFFF7.js";
import "./chunk-JBU54P54.js";
import "./chunk-FMS3CZY7.js";
import "./chunk-H7T5AB2S.js";
import "./chunk-WKVHVZW2.js";
import {
  I
} from "./chunk-KSZESDGM.js";
import "./chunk-CHJMCUAV.js";
import "./chunk-5P74D2TG.js";
import "./chunk-33LWZO2E.js";
import "./chunk-YT66FIGM.js";
import "./chunk-3IDXRFXE.js";
import "./chunk-RLZYC2LS.js";
import "./chunk-WEER6QME.js";
import "./chunk-TXLJQAAN.js";
import "./chunk-YF5E2R37.js";
import "./chunk-R4SGP2EA.js";
import "./chunk-IRL6OOVK.js";
import "./chunk-3AIILHI5.js";
import "./chunk-QJRGTKPN.js";
import "./chunk-VIH3KDZO.js";
import "./chunk-LA365FE7.js";
import "./chunk-SA77Z3WI.js";
import "./chunk-6MBDB46F.js";
import "./chunk-D56W4LPT.js";
import {
  e as e6
} from "./chunk-BKOYOJBG.js";
import "./chunk-7JR6S3WL.js";
import "./chunk-CJNDQ2LH.js";
import "./chunk-B4E4X2TN.js";
import "./chunk-HS6YI5DU.js";
import "./chunk-CDBOQCLE.js";
import "./chunk-RSRUEM5U.js";
import "./chunk-HFJMEXIX.js";
import "./chunk-VYSGSKHB.js";
import "./chunk-DGJJJ2DD.js";
import "./chunk-UAFQMHYI.js";
import "./chunk-IDPLBNJX.js";
import "./chunk-ZHAZR5C3.js";
import "./chunk-P4MNTMCZ.js";
import "./chunk-BSPKLAHD.js";
import "./chunk-VS6AHHIY.js";
import "./chunk-GPWQGIYV.js";
import "./chunk-WZJNHZ6H.js";
import "./chunk-XMYPMIYH.js";
import "./chunk-FQLGRQKL.js";
import "./chunk-DRC4XSYG.js";
import {
  G as G2,
  R
} from "./chunk-XGTCDM4C.js";
import "./chunk-LGMX4E7L.js";
import "./chunk-W5ALAOW2.js";
import "./chunk-FHDHOWK5.js";
import "./chunk-LQBHIBXV.js";
import {
  t
} from "./chunk-42DUJ2CX.js";
import "./chunk-B35SNV2V.js";
import {
  E,
  F,
  V as V2,
  c,
  j as j3
} from "./chunk-Z2F5OKVA.js";
import "./chunk-UQA6M3KF.js";
import {
  e as e7
} from "./chunk-GLF3KRAL.js";
import "./chunk-ZLQTPFTL.js";
import "./chunk-WIVZ7SMV.js";
import "./chunk-O76UVYOO.js";
import "./chunk-QCMUK3QA.js";
import "./chunk-HZSGATFT.js";
import "./chunk-KNMQQRV7.js";
import {
  e as e5
} from "./chunk-N5GQOIDP.js";
import "./chunk-NFB6O77E.js";
import {
  _ as _2,
  n as n4
} from "./chunk-AKEHDP75.js";
import "./chunk-5MMGIT64.js";
import "./chunk-ERD6I7QP.js";
import "./chunk-Z3NX5DTX.js";
import "./chunk-J4RP32NG.js";
import "./chunk-6NLHKXEW.js";
import "./chunk-SCHTG6ZQ.js";
import "./chunk-QYC3GV65.js";
import "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import "./chunk-S5I4QKJD.js";
import {
  f as f2,
  o as o3,
  p as p2,
  q as q2
} from "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import {
  u as u3
} from "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import {
  u as u2
} from "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-WMUEII2O.js";
import "./chunk-6QNF7OHN.js";
import "./chunk-6AQIVLDN.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-HLDUDRTD.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import {
  n as n3
} from "./chunk-ZPYA32PH.js";
import {
  M,
  h as h2
} from "./chunk-OCF7OAES.js";
import {
  G,
  H,
  K,
  O as O2,
  P as P2,
  X,
  _,
  e as e4,
  g as g2,
  o as o2,
  q,
  r as r3,
  s,
  v,
  z
} from "./chunk-JZBR4X6W.js";
import {
  l as l3,
  n as n2,
  r as r2
} from "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-LGQXPGTM.js";
import "./chunk-2SDMYJDE.js";
import "./chunk-C62RZQQX.js";
import {
  h
} from "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-IZKCZQUY.js";
import {
  x2 as x
} from "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import {
  N2 as N,
  O3 as O,
  j as j2
} from "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import {
  f
} from "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import {
  A,
  C,
  P,
  d as d2,
  g,
  p
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  S,
  r2 as r,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  d,
  e as e3,
  l as l2,
  o2 as o
} from "./chunk-JGDJR5EV.js";
import {
  e as e2,
  l,
  u
} from "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  j,
  n2 as n
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/views/3d/analysis/Dimension/lengthDimensionUtils.js
function w3(t9, o5, a7) {
  if (null == t9)
    return null;
  let s6;
  if (o5 === t2.Horizontal)
    s6 = m3(t9.elevationAlignedStartPoint, t9.elevationAlignedEndPoint);
  else {
    const { startRenderSpace: e12, endRenderSpace: n7 } = t9.dimensionSegment;
    s6 = Z(e12, n7, t9.spatialReference);
  }
  if (null == s6)
    return null;
  const d5 = o5 === t2.Vertical ? O(s6.value, s6.unit, a7) : N(s6.value, s6.unit, a7);
  return s2(s6, d5);
}
function z2(e12) {
  const { elevationAlignedStartPoint: t9, elevationAlignedEndPoint: n7, dimension: { offset: r8, measureType: i3, orientation: o5 } } = e12;
  return { elevationAlignedStartPoint: t9, elevationAlignedEndPoint: n7, offset: r8, measureType: i3, orientation: o5 };
}
function C2({ elevationAlignedStartPoint: t9, elevationAlignedEndPoint: n7, offset: r8, measureType: i3, orientation: o5 }, a7, d5 = null) {
  if (null == t9 || null == n7)
    return null;
  const l8 = V3((d5 == null ? void 0 : d5.directSegment) ?? new m(), { elevationAlignedStartPoint: t9, elevationAlignedEndPoint: n7 }, a7), c5 = (d5 == null ? void 0 : d5.primaryOffsetAxis) ?? n2();
  B(c5, { measureType: i3, elevationAlignedStartPoint: t9, elevationAlignedEndPoint: n7, directSegment: l8, orientation: o5, renderCoordsHelper: a7 });
  const p10 = (d5 == null ? void 0 : d5.dimensionSegment) ?? new m();
  return G3({ elevationAlignedStartPoint: t9, elevationAlignedEndPoint: n7 }) && i3 === t2.Vertical ? (r3(p10.startRenderSpace, l8.startRenderSpace), r3(p10.endRenderSpace, l8.endRenderSpace)) : Y(p10, { offsetAxis: c5, offset: r8, relativeToSegment: l8, renderCoordsHelper: a7 }), { elevationAlignedStartPoint: t9, elevationAlignedEndPoint: n7, directSegment: l8, dimensionSegment: p10, primaryOffsetAxis: c5, spatialReference: a7.spatialReference };
}
function U2(e12, t9, n7, r8) {
  return t9 === b3.Start ? (r3(e12.startRenderSpace, n7.startRenderSpace), r3(e12.endRenderSpace, r8.startRenderSpace)) : (r3(e12.startRenderSpace, n7.endRenderSpace), r3(e12.endRenderSpace, r8.endRenderSpace)), e12;
}
var b3;
function k(e12, t9, n7, r8) {
  q(e12.startRenderSpace, t9.startRenderSpace, n7, r8), q(e12.endRenderSpace, t9.endRenderSpace, n7, r8);
}
function M2(t9, n7, r8, i3) {
  switch (n7) {
    case t2.Direct:
      return V3(t9, r8, i3);
    case t2.Horizontal:
    case t2.Vertical: {
      const { elevationAlignedStartPoint: o5, elevationAlignedEndPoint: a7, dimension: s6, geometry: d5 } = r8;
      let l8;
      if (s6.measureType === t2.Direct) {
        l8 = D(d5, i3) === o5.z > a7.z, n7 === t2.Horizontal && (l8 = !l8);
      } else
        l8 = !O5(d5);
      const [c5, p10] = l8 ? [o5, a7] : [a7, o5], u7 = x2(p10, I2);
      return n7 === t2.Horizontal ? u7.z = c5.z : (u7.x = c5.x, u7.y = c5.y), i3.toRenderCoords(c5, t9.startRenderSpace), i3.toRenderCoords(u7, t9.endRenderSpace), t9;
    }
  }
}
function V3(e12, t9, n7) {
  return n7.toRenderCoords(t9.elevationAlignedStartPoint, e12.startRenderSpace), n7.toRenderCoords(t9.elevationAlignedEndPoint, e12.endRenderSpace), e12;
}
function D(e12, t9) {
  const n7 = e12.directSegment.eval(0.5, c.get()), r8 = t9.worldUpAtPosition(n7, c.get()), i3 = e12.dimensionSegment.eval(0.5, c.get()), o5 = K(c.get(), i3, n7);
  return !H(o5, l3) && P2(o5, r8) > 0;
}
function O5(e12) {
  const { startRenderSpace: t9, endRenderSpace: n7 } = e12.dimensionSegment, { startRenderSpace: r8, endRenderSpace: i3 } = e12.directSegment;
  return X(r8, t9) < X(i3, n7);
}
!function(e12) {
  e12[e12.Start = 0] = "Start", e12[e12.End = 1] = "End";
}(b3 || (b3 = {}));
var I2 = e6(0, 0, 0, null);
function L(e12, t9, n7, r8) {
  const { directSegment: i3 } = n7, o5 = B(c.get(), { measureType: t9, directSegment: i3, renderCoordsHelper: r8 }), a7 = Y(q3, { offsetAxis: o5, offset: 0, relativeToSegment: i3, renderCoordsHelper: r8 }).eval(0.5, c.get()), s6 = K(c.get(), e12, a7);
  return P2(s6, o5) * r8.unitInMeters;
}
var q3 = new m();
function B(n7, r8) {
  const { measureType: i3, elevationAlignedStartPoint: a7, elevationAlignedEndPoint: d5, directSegment: { startRenderSpace: u7, endRenderSpace: f10 }, directSegment: v4, renderCoordsHelper: y3 } = r8, E4 = v4.eval(0.5, c.get()), j7 = y3.worldUpAtPosition(E4, c.get()), x4 = y3.worldBasisAtPosition(E4, n3.Y, c.get());
  switch (i3) {
    case t2.Horizontal:
      r3(n7, j7);
      break;
    case t2.Vertical:
      P2(u7, j7) < P2(f10, j7) ? K(n7, f10, u7) : K(n7, u7, f10), _(n7, n7, j7), _(n7, n7, j7);
      break;
    case t2.Direct: {
      const e12 = r8.orientation ?? 0;
      if (G3({ elevationAlignedStartPoint: a7, elevationAlignedEndPoint: d5 }))
        p2(F3, -h2(e12), j7), O2(n7, x4, F3);
      else {
        const r9 = K(c.get(), f10, u7), i4 = _(c.get(), r9, j7);
        _(i4, i4, r9), p2(F3, h2(e12), r9), O2(n7, i4, F3);
      }
      break;
    }
  }
  return H(n7, l3) ? r3(n7, x4) : z(n7, n7);
}
var F3 = e5();
function G3({ elevationAlignedStartPoint: e12, elevationAlignedEndPoint: t9 }) {
  return null != e12 && null != t9 && e12.x === t9.x && e12.y === t9.y;
}
function Y(e12, t9) {
  const { offsetAxis: n7, offset: r8, relativeToSegment: { startRenderSpace: i3, endRenderSpace: o5 }, relativeToSegment: a7, renderCoordsHelper: s6 } = t9, l8 = r8 / s6.unitInMeters, [c5, p10] = J(i3, o5, n7, l8);
  return q(e12.startRenderSpace, a7.startRenderSpace, n7, c5), q(e12.endRenderSpace, a7.endRenderSpace, n7, p10), e12;
}
function J(e12, t9, n7, r8 = 0) {
  const i3 = P2(t9, n7), o5 = P2(e12, n7), a7 = Math.abs(i3 - o5) + r8;
  return i3 > o5 ? [a7, r8] : [r8, a7];
}
function K2(e12, t9, n7) {
  const r8 = t9.directSegment.eval(0.5, c.get());
  return n7.worldUpAtPosition(r8, e12);
}
function N3(e12, t9) {
  const { startRenderSpace: n7, endRenderSpace: r8 } = t9.directSegment;
  return K(e12, r8, n7);
}
function Q(e12, t9, n7 = { invert: false }) {
  const { startRenderSpace: r8, endRenderSpace: i3 } = t9.dimensionSegment;
  return n7.invert ? K(e12, r8, i3) : K(e12, i3, r8);
}
function W(e12, t9) {
  const n7 = e12.directSegment.eval(0.5, c.get());
  return t9.headingAtPosition(n7, e12.primaryOffsetAxis);
}
function X2(e12, t9) {
  return v(Q(Z2, e12)) / t9 ** 2;
}
var Z2 = n2();
function $(e12) {
  const { elevationAlignedStartPoint: t9, elevationAlignedEndPoint: r8 } = e12;
  if (null == t9 || null == r8)
    return false;
  const i3 = m2(t9, r8);
  return null != i3 && s2(i3, "meters").value > i;
}
function _3(e12) {
  return null != e12.geometry;
}

// node_modules/@arcgis/core/views/3d/analysis/Dimension/DimensionController.js
var g3 = class extends S {
  constructor(t9) {
    super(t9);
  }
  initialize() {
    const t9 = g(() => this.analysisViewData.computations, ({ computation: t10 }) => this._watchComputation(t10));
    this.addHandles(l2(t9));
  }
  get analysis() {
    return this.analysisViewData.analysis;
  }
  get _defaultUnit() {
    return e8(this.view);
  }
  _watchComputation(t9) {
    return d2(() => z2(t9), (s6) => {
      const { measureType: o5 } = s6;
      if ($(s6) && o5 !== t2.Direct) {
        const e12 = Math.round(j2(i, "meters", "kilometers"));
        return n.getLogger(this).warnOnce(`A ${o5} dimension in the analysis (id: '${this.analysis.id}') will not display, because only direct dimensions can measure lengths greater than ${e12} km. Update the measureType of the affected dimension to "direct" to display it.`), void (t9.geometry = null);
      }
      const i3 = C2(s6, this.view.renderCoordsHelper, t9.geometry);
      t9.geometry = i3, t9.result.length = w3(i3, o5, this._defaultUnit);
    }, A);
  }
};
e([y({ constructOnly: true })], g3.prototype, "analysisViewData", void 0), e([y({ constructOnly: true })], g3.prototype, "view", void 0), e([y()], g3.prototype, "analysis", null), e([y()], g3.prototype, "_defaultUnit", null), g3 = e([a("esri.views.3d.analysis.Dimension.DimensionController")], g3);

// node_modules/@arcgis/core/views/3d/analysis/Dimension/settings.js
function n5(o5) {
  return R(o5.accentColor, 0.5);
}
function c3(o5) {
  return G2(o5.accentColor);
}
var e11 = 5;
var i2 = new u3([127, 127, 127, 0.5]);
var l6 = 0.8;
var f7 = 4;
var m4 = 6;
var s5 = 0.1;
var u6 = 0.5;
var p8 = 18;
var C3 = 2;
var a6 = 0.3;
var j5 = 2;
var w4 = 0.25;
var x3 = 20;
var U3 = 5;
var b4 = 5;
var d4 = 10;
var g4 = 2500;
var h8 = 50;
var k2 = 2;

// node_modules/@arcgis/core/views/3d/analysis/Dimension/lengthDimensionManipulatorUtils.js
var He = class {
  constructor(e12) {
    this.start = e12.start, this.end = e12.end, this.offset = e12.offset, this.heading = e12.heading, this.rotation = e12.rotation, this.direct = e12.direct, this.horizontal = e12.horizontal, this.vertical = e12.vertical;
  }
  manipulatorName(e12) {
    return Object.keys(this).find((t9) => this.hasOwnProperty(t9) && e12 === this[t9]);
  }
  values() {
    return [this.start, this.end, this.offset, this.heading, this.rotation, this.direct, this.horizontal, this.vertical];
  }
  forEachMeasureTypeManipulator(e12) {
    for (const r8 of r4)
      e12(this.manipulatorForMeasureType(r8), r8);
  }
  manipulatorForMeasureType(e12) {
    switch (e12) {
      case t2.Direct:
        return this.direct;
      case t2.Horizontal:
        return this.horizontal;
      case t2.Vertical:
        return this.vertical;
    }
  }
};
var Me = class extends ee {
  constructor(t9, r8) {
    const n7 = f3(u3.toUnitRGBA(n5(t9.effectiveTheme))), i3 = [new e9(st(n7, 1, 32, 32), tt)];
    super({ view: t9, renderObjects: i3, metadata: r8.metadata, available: false, grabCursor: "crosshair", radius: e11, collisionPriority: 1 }), this._themeHandle = d2(() => ({ color: u3.toUnitRGBA(n5(t9.effectiveTheme)) }), (e12) => n7.setParameters(e12));
  }
  destroy() {
    this._themeHandle.remove(), super.destroy();
  }
};
function Pe(e12, t9) {
  const r8 = [r2(-0.5, 0, 0), r2(0.5, 0, 0)], n7 = gt(t9.unfocusedMaterial, r8.map((e13) => g2(n2(), e13, u6))), i3 = n7.instantiate({ material: t9.focusedMaterial });
  return new ee({ view: e12, renderObjects: [new e9(n7, t3.Unfocused | t3.Selected | tt), new e9(i3, t3.Focused | tt)], collisionType: { type: "line", paths: [r8] }, radius: $e(t9.lineSizePt) / 2, metadata: t9.metadata, available: false, ...b2 });
}
var Ce = class extends ee {
  constructor(t9, { lineSizePt: r8, material: n7, metadata: i3 }) {
    super({ view: t9, autoScaleRenderObjects: false, collisionPriority: 1, metadata: i3 }), this._options = { calloutColor: n4(), lineSizePt: r8, material: n7 }, this._themeHandle = d2(() => u3.toUnitRGBA(n5(t9.effectiveTheme)), (e12) => {
      this._options.calloutColor = e12, et(this, Te({ ...this._options, metadata: this.metadata }));
    }, P);
  }
  update({ lineSizePt: e12, material: t9 }) {
    this._options.lineSizePt = e12, this._options.material = t9, et(this, Te({ ...this._options, metadata: this.metadata }));
  }
  destroy() {
    this._themeHandle.remove(), super.destroy();
  }
};
function Te({ calloutColor: e12, lineSizePt: t9, material: r8, metadata: n7 }) {
  return { calloutLength: 0.25 * p3 * l6 * u2(t9) + p8, calloutColor: e12, calloutWidth: C3, customStateMask: tt, discScale: a6, focusMultiplier: j5, material: r8, metadata: n7 };
}
function Oe(e12, t9) {
  const r8 = [r2(-0.5, 0, 0), r2(0.5, 0, 0)], n7 = gt(t9.thinOffsetManipulatorMaterial, r8), i3 = gt(t9.unfocusedMaterial, r8.map((e13) => g2(n2(), e13, u6))), o5 = i3.instantiate({ material: t9.focusedMaterial });
  return new ee({ view: e12, renderObjects: [new e9(i3, t3.Unfocused | tt), new e9(o5, t3.Focused | tt), new e9(n7, tt)], collisionType: { type: "line", paths: [r8] }, radius: $e(t9.lineSizePt) / 2, available: false, metadata: t9.metadata, ...b2 });
}
function Ue(e12, { isStart: t9, createSnappingPipelineStep: r8, dimension: n7, onUpdate: i3, view: o5 }) {
  const a7 = t9 ? "startPoint" : "endPoint", s6 = p5(e12, (e13, t10, s7, c5) => {
    const l8 = A2(e13), { snappingStep: m5, cancelSnapping: d5 } = r8(c5);
    s7 = s7.next(l8).next(h6(n7, [a7, "measureType", "orientation"])).next(d5), t10.next(l8).next(F2(o5)).next(...m5).next((e14) => {
      const t11 = x2(e14.mapEnd, new x());
      i3("startPoint" === a7 ? { startPoint: t11 } : { endPoint: t11 });
    });
  });
  return [s6];
}
function Re(e12, { computation: t9, view: r8 }) {
  return [p5(e12, (e13, n7, i3) => {
    if (!_3(t9) || !e13.selected)
      return;
    const { geometry: o5, dimension: a7 } = t9, s6 = A2(e13);
    n7.next(s6).next(Le(r8, a7, o5.dimensionSegment, o5.primaryOffsetAxis)), i3.next(s6).next(h6(a7, ["offset"]));
  })];
}
function ze(e12, { computation: t9, view: r8 }) {
  return [p5(e12, (e13, n7, i3) => {
    _e({ cancel: i3, computation: t9, settingHeading: true, steps: n7, view: r8 });
  })];
}
function Ae(e12, { computation: t9, view: r8 }) {
  return [p5(e12, (e13, n7, i3) => {
    _e({ cancel: i3, computation: t9, settingHeading: false, steps: n7, view: r8 });
  }), e12.events.on("immediate-click", (e13) => {
    De(e13, t9, r8);
  })];
}
function De(e12, t9, r8) {
  const { dimension: i3, geometry: o5 } = t9;
  if (90 === i3.orientation || 270 === i3.orientation)
    return i3.orientation = 0, void e12.stopPropagation();
  if (null == o5)
    return;
  const { renderCoordsHelper: a7 } = r8, s6 = C2({ ...z2(t9), orientation: 90 }, a7), c5 = C2({ ...z2(t9), orientation: 270 }, a7);
  if (null == s6 || null == c5)
    return;
  const l8 = W(s6, a7), m5 = W(c5, a7), d5 = Ee(o5, r8), u7 = a2.shortestSignedDiff(d5, l8), p10 = a2.shortestSignedDiff(d5, m5);
  i3.orientation = Math.abs(u7) < Math.abs(p10) ? 90 : 270, e12.stopPropagation();
}
function _e(e12) {
  const { cancel: t9, computation: r8, settingHeading: n7, steps: o5, view: a7 } = e12;
  if (!_3(r8))
    return;
  const { renderCoordsHelper: s6 } = a7, { dimension: c5, geometry: l8 } = r8, m5 = n2(), d5 = Je(n2(), l8, l8.directSegment, s6), p10 = Ke(c.get(), { forHeading: n7, geometry: l8, renderCoordsHelper: s6 }), f10 = j3(d5, p10, E()), g8 = n7 ? c5.orientation ?? W(l8, a7.renderCoordsHelper) : c5.orientation ?? 0;
  o5.next(U(a7, f10)).next((e13) => {
    "start" === e13.action && r3(m5, e13.renderStart);
    const t10 = F(f10), r9 = w(m5, e13.renderEnd, d5, t10);
    let o6 = g8 - M(r9);
    n7 || (o6 = ke(o6)), c5.orientation = o6;
  }), t9.next(h6(c5, ["orientation"]));
}
function ke(e12) {
  const t9 = a2.normalize(e12) % 90;
  return t9 < b4 ? e12 - t9 : 90 - t9 < b4 ? e12 + (90 - t9) : e12;
}
function Fe(e12, { computation: t9, manipulatorMeasureType: n7, view: i3 }) {
  let o5 = t2.Direct, a7 = 0, s6 = 0;
  return [e12.events.on("grab-changed", (r8) => {
    if ("start" !== r8.action || !_3(t9))
      return;
    const { dimension: c5, geometry: l8 } = t9;
    o5 = c5.measureType, a7 = c5.offset, s6 = c5.orientation;
    const m5 = r3(c.get(), e12.renderLocation);
    c5.measureType = n7, c5.offset = L(m5, n7, l8, i3.renderCoordsHelper), c5.orientation = 0;
  }), p5(e12, (e13, r8, c5) => {
    if (!_3(t9))
      return;
    const { geometry: l8, dimension: m5 } = t9, { renderCoordsHelper: d5 } = i3, u7 = M2(ot, n7, t9, d5), p10 = B(c.get(), { measureType: n7, directSegment: l8.directSegment, renderCoordsHelper: d5 }), f10 = A2(e13);
    r8.next(f10).next(Le(i3, m5, u7, p10)), c5.next(f10).next((e14) => (m5.measureType = o5, m5.offset = a7, m5.orientation = s6, e14));
  })];
}
function Le(e12, t9, r8, n7) {
  const i3 = e4(c.get(), r8.endRenderSpace, r8.startRenderSpace);
  _(i3, i3, n7);
  const o5 = j3(r8.startRenderSpace, i3, E()), a7 = j3(r8.startRenderSpace, n7, E()), s6 = t9.offset;
  let c5, l8 = 0;
  const m5 = new w2();
  return m5.next(U(e12, o5)).next((r9) => {
    "start" === r9.action && (l8 = V2(a7, r9.renderStart));
    const n8 = (V2(a7, r9.renderEnd) - l8) * e12.renderCoordsHelper.unitInMeters;
    t9.offset = s6 + n8, c5 = r9;
  }), (e13) => (m5.execute(e13), c5);
}
function Ee(e12, t9) {
  const { directSegment: r8 } = e12, { renderCoordsHelper: n7 } = t9, i3 = K2(c.get(), e12, n7), o5 = N3(c.get(), e12), a7 = _(c.get(), o5, i3), { viewForward: s6 } = t9.state.camera;
  P2(a7, s6) > 0 && g2(a7, a7, -1);
  const c5 = r8.eval(0.5, c.get());
  return n7.headingAtPosition(c5, a7);
}
function Ie(e12, t9, r8) {
  const { dimensionSegment: n7, primaryOffsetAxis: i3 } = t9, o5 = Q(rt, t9), a7 = G(o5, l3) ? o3(it) : O3(o5, i3, l3, it), s6 = Math.max(s(o5), s5 / r8.unitInMeters);
  f2(a7, a7, o2(rt, s6, s6, s6)), e12.modelTransform = a7, e12.renderLocation = n7.eval(0.5, rt);
}
function Ge(e12, t9, r8) {
  Ne(e12, t9, r8, { forHeading: true });
}
function Be(e12, t9, r8) {
  Ne(e12, t9, r8, { forHeading: false });
}
function Ne(e12, t9, r8, { forHeading: n7 }) {
  const { dimension: i3, geometry: o5 } = t9, { primaryOffsetAxis: a7 } = o5, s6 = g2(Ve, a7, i3.offset >= 0 ? 1 : -1), c5 = Ke(We, { forHeading: n7, geometry: o5, renderCoordsHelper: r8 });
  _(c5, c5, s6);
  const l8 = O3(s6, c5, l3, it);
  e12.modelTransform = l8, e12.renderLocation = Je(rt, o5, o5.dimensionSegment, r8);
}
var Ve = n2();
var We = n2();
function qe(e12, t9, r8, n7) {
  const { geometry: i3 } = t9, o5 = M2(ot, r8, t9, n7), a7 = B(rt, { measureType: r8, directSegment: i3.directSegment, renderCoordsHelper: n7 }), s6 = K(nt, o5.endRenderSpace, o5.startRenderSpace), c5 = O3(s6, a7, l3, it), m5 = s(s6);
  f2(c5, c5, o2(nt, m5, m5, m5)), e12.modelTransform = c5, e12.renderLocation = o5.eval(0.5, nt);
}
function Je(e12, t9, r8, n7) {
  const { startRenderSpace: i3, endRenderSpace: o5 } = r8, a7 = Qe(t9, n7) ? i3 : o5;
  return r3(e12, a7);
}
function Ke(e12, { forHeading: t9, geometry: r8, renderCoordsHelper: n7 }) {
  return t9 ? K2(e12, r8, n7) : Q(e12, r8, { invert: true });
}
function Qe(e12, t9) {
  const r8 = N3(Xe, e12), n7 = K2(Ye, e12, t9);
  return P2(r8, n7) > 0;
}
var Xe = n2();
var Ye = n2();
function Ze(e12) {
  return u2(e12) + f7;
}
function $e(e12) {
  return u2(e12) + m4;
}
function et(e12, t9) {
  var _a;
  const r8 = t9.material ?? new T({ transparent: true, writeDepth: false, textureId: (_a = t9.texture) == null ? void 0 : _a.id, renderOccluded: h4.Opaque, isDecoration: true }), n7 = t9.focusMultiplier ?? j4.focusMultiplier, i3 = t9.calloutLength ?? j4.calloutLength, o5 = j4.discRadius * (t9.discScale ?? 1), a7 = o5 * n7, s6 = (e13, t10) => {
    const r9 = [0, 1, 2, 2, 3, 0];
    return new I(t10, [[e7.POSITION, new t([i3 - e13, -e13, 0, i3 + e13, -e13, 0, i3 + e13, e13, 0, i3 - e13, e13, 0], r9, 3, true)], [e7.UV0, new t([0, 0, 1, 0, 1, 1, 0, 1], r9, 2, true)]]);
  }, c5 = t9.calloutWidth ?? j4.calloutWidth, l8 = new H2({ width: c5, color: t9.calloutColor, renderOccluded: h4.OccludeAndTransparent, isDecoration: true }), m5 = gt(l8, [[0, 0, 0], [i3 - o5, 0, 0]]), d5 = gt(l8, [[0, 0, 0], [i3 - a7, 0, 0]]), u7 = t9.customStateMask ?? u5.None;
  e12.collisionType = { type: "disc", direction: [0, 0, 1], offset: [i3, 0, 0] }, e12.focusMultiplier = n7, e12.metadata = t9.metadata, e12.radius = o5, e12.renderObjects = [new e9(s6(o5, r8), t3.Unfocused | u7), new e9(m5, t3.Unfocused | u7), new e9(s6(a7, r8), t3.Focused | u7), new e9(d5, t3.Focused | u7)];
}
var tt = u5.Custom1;
var rt = n2();
var nt = n2();
var it = e5();
var ot = new m();

// node_modules/@arcgis/core/views/3d/analysis/Dimension/lengthDimensionConstraintUtils.js
var p9;
function P4(e12, t9) {
  return { enabled: t9.effectiveFeatureEnabled, elevationAlignedStartPoint: e12.elevationAlignedStartPoint, elevationAlignedEndPoint: e12.elevationAlignedEndPoint, geometry: e12.geometry };
}
function f8(e12, s6) {
  if ($(e12))
    return p9.Direct;
  if (!e12.enabled)
    return null;
  const { geometry: u7 } = e12;
  if (null == u7 || G(u7.directSegment.startRenderSpace, u7.directSegment.endRenderSpace))
    return null;
  const { camera: P5 } = s6.state, f10 = K2(c.get(), u7, s6.renderCoordsHelper), g8 = N3(c.get(), u7), S4 = g2(c.get(), f10, P2(g8, f10)), v4 = e4(c.get(), g8, S4), y3 = v(v4), A3 = v(S4), { startRenderSpace: R3, endRenderSpace: j7 } = u7.directSegment, z4 = Math.max(P5.computeScreenPixelSizeAt(R3) * d4, P5.computeScreenPixelSizeAt(j7) * d4) ** 2;
  return y3 < z4 ? p9.Vertical : A3 < z4 ? p9.Horizontal : null;
}
function g5(e12, t9, { constraint: n7, view: i3 }) {
  const { unconstrainedGeometry: o5 } = e12;
  if (null == o5)
    return;
  const { renderCoordsHelper: r8, spatialReference: a7 } = i3, { startRenderSpace: s6, endRenderSpace: l8 } = o5.directSegment, c5 = r8.fromRenderCoords(s6, new x({ spatialReference: a7 })), d5 = r8.fromRenderCoords(l8, new x({ spatialReference: a7 }));
  let m5;
  m5 = "start" === t9 ? { startPoint: c5 } : { endPoint: d5 }, S2(e12, m5, { constraint: n7, elevationAlignedStartPoint: e12.elevationAlignedStartPoint, elevationAlignedEndPoint: e12.elevationAlignedEndPoint, unconstrainedGeometry: o5, view: i3 });
}
function S2(t9, n7, i3) {
  const { constraint: o5, elevationAlignedStartPoint: r8, elevationAlignedEndPoint: a7, unconstrainedGeometry: l8, view: c5 } = i3, { dimension: d5, previousConstraint: m5, preConstraintProperties: u7 } = t9;
  if (null == r8 || null == a7)
    return;
  const P5 = () => {
    "startPoint" in n7 ? d5.startPoint = n7.startPoint : "endPoint" in n7 && (d5.endPoint = n7.endPoint);
  };
  if (null == o5)
    P5(), null != m5 && null != u7 && (d5.measureType = u7.measureType, d5.orientation = u7.orientation);
  else
    switch (d5.measureType = t2.Direct, o5) {
      case p9.Horizontal:
        if (o5 !== m5 && (d5.orientation = 0), "startPoint" in n7) {
          const e12 = n7.startPoint;
          null != e12 && (e12.z = a7.z), d5.startPoint = e12;
        } else if ("endPoint" in n7) {
          const e12 = n7.endPoint;
          null != e12 && (e12.z = r8.z), d5.endPoint = e12;
        }
        break;
      case p9.Vertical:
        if (o5 !== m5 && (d5.orientation = Ee(l8, c5)), "startPoint" in n7) {
          const e12 = n7.startPoint;
          null != e12 && (e12.x = a7.x, e12.y = a7.y), d5.startPoint = e12;
        } else if ("endPoint" in n7) {
          const e12 = n7.endPoint;
          null != e12 && (e12.x = r8.x, e12.y = r8.y), d5.endPoint = e12;
        }
        break;
      case p9.Direct:
        o5 !== m5 && null != u7 && (d5.orientation = u7.orientation), P5();
    }
  t9.previousConstraint = o5, t9.unconstrainedGeometry = l8;
}
!function(e12) {
  e12[e12.Horizontal = 0] = "Horizontal", e12[e12.Vertical = 1] = "Vertical", e12[e12.Direct = 2] = "Direct";
}(p9 || (p9 = {}));

// node_modules/@arcgis/core/views/3d/analysis/Dimension/LengthDimensionSubTool.js
var gt2 = class extends S {
  constructor(t9) {
    super(t9), this._stagedDimension = null, this._computationManipulators = /* @__PURE__ */ new Map(), this._computationHandles = new r(), this._orientationManipulatorTexture = null, this._updatingHandles = new h3(), this._getSnappingContext = t5((t10) => new e10({ elevationInfo: { mode: "absolute-height", offset: 0 }, pointer: t10, editGeometryOperations: new E2(new p4("point", P3(true, false, this.view.spatialReference)), this.view.state.viewingMode), visualizer: new O4() }));
    const { view: i3 } = t9;
    this._snappingManagerResult = a4(i3), this.addHandles(this._snappingManagerResult), this._unfocusedOffsetManipulatorMaterial = this._createOffsetManipulatorMaterial(), this._focusedOffsetManipulatorMaterial = this._createOffsetManipulatorMaterial(), this._thinOffsetManipulatorMaterial = this._createOffsetManipulatorMaterial(), this._thinOffsetManipulatorMaterial.setParameters({ stipplePattern: h5(2) }), this._constraintSnappingIndicator = new f4({ view: i3, attached: true, width: 1, renderOccluded: h4.OccludeAndTransparent, stipplePattern: h5(5), isDecoration: true });
    const a7 = u3.toUnitRGBA(i2);
    this._stagedStartIndicator = new d3({ view: i3, attached: false, elevationInfo: { mode: "absolute-height", offset: 0 }, spatialReference: t9.view.renderCoordsHelper.spatialReference, color: a7, size: 2 * e11, outlineSize: 0, renderOccluded: h4.OccludeAndTransparent, isDecoration: true });
  }
  initialize() {
    var _a;
    const { view: t9 } = this;
    this._snappingOperation = new p7({ view: t9 });
    const i3 = !((_a = t9._stage) == null ? void 0 : _a.renderView.renderingContext.driverTest.svgPremultipliesAlpha.result);
    this._orientationManipulatorMaterial = new T({ transparent: true, writeDepth: false, renderOccluded: h4.Opaque, isDecoration: true }), this.addHandles(d2(() => ({ accentColor: n5(t9.effectiveTheme), contrastColor: c3(t9.effectiveTheme) }), ({ accentColor: a8, contrastColor: n7 }) => {
      const s6 = this._orientationManipulatorTexture, o5 = l4(t9.textures, { accentColor: a8, contrastColor: n7, preMultiplyAlpha: i3 });
      this._orientationManipulatorMaterial.setParameters({ textureId: o5.texture.id }), this._orientationManipulatorTexture = o5, s6 == null ? void 0 : s6.release();
      const r8 = u3.toUnitRGBA(a8);
      this._unfocusedOffsetManipulatorMaterial.setParameters({ color: r8 }), this._focusedOffsetManipulatorMaterial.setParameters({ color: r8 }), this._thinOffsetManipulatorMaterial.setParameters({ color: r8 }), this._constraintSnappingIndicator.color = r8;
    }, P));
    const a7 = g(() => this.analysisViewData.computations, ({ computation: t10 }) => this._createManipulators(t10));
    this.addHandles(l2(a7)), this.addHandles([d2(() => ({ stagedPoint: this._snappingOperation.stagedPoint, stagedComputation: this._stagedComputation }), ({ stagedPoint: t10, stagedComputation: e12 }) => {
      if (null == e12 || null == t10)
        return;
      const i4 = x2(t10, new x());
      this._applyPointUpdate(e12, { endPoint: i4 });
    }, C), d2(() => ({ stagedDimension: this._stagedDimension, selectedComputation: this.analysisViewData.selectedComputation, firstGrabbedManipulator: this.firstGrabbedManipulator }), (t10, e12) => {
      const { stagedDimension: i4, selectedComputation: a8, firstGrabbedManipulator: n7 } = t10;
      if (i4 === (e12 == null ? void 0 : e12.stagedDimension) && n7 === (e12 == null ? void 0 : e12.firstGrabbedManipulator)) {
        for (const s6 of [a8, e12 == null ? void 0 : e12.selectedComputation])
          if (null != s6) {
            const e13 = this._computationManipulators.get(s6);
            null != e13 && this._updateManipulators(s6, e13, t10);
          }
      } else
        for (const [s6, o5] of this._computationManipulators)
          this._updateManipulators(s6, o5, t10);
    }, A), d2(() => this.analysis.style.lineSize, (t10) => {
      this._updateManipulatorStyle(t10);
    }, P), d2(() => this.view.state.camera, () => {
      null != this._stagedComputation && this._updateStagedDimensionOffset(this._stagedComputation);
    }), d2(() => {
      const t10 = this._stagedComputation;
      if (!t10)
        return null;
      const e12 = t10.elevationAlignedStartPoint, i4 = n2();
      return null != e12 && this.view.renderCoordsHelper.toRenderCoords(e12, i4) ? i4 : null;
    }, (t10) => {
      null != t10 ? (this._stagedStartIndicator.vertices = [t10], this._stagedStartIndicator.attached = true) : this._stagedStartIndicator.attached = false;
    })]), this.addHandles(this._constraintHandles), this.addHandles(this._snappingIndicatorHandles), N2(this, () => {
      const t10 = this._activeComputation, e12 = this._stagedComputation;
      if (null == t10 || null != e12) {
        const t11 = this.view.inputManager.latestPointerType ?? "mouse", e13 = this._getSnappingContext(t11);
        this._updatingHandles.addPromise(d(this._snappingOperation.snapAgainNearPreviousMapPoint(this._snappingManager, e13)));
      }
      if (null != t10) {
        const { start: e13, end: i4 } = this._computationManipulators.get(t10);
        if (e13.grabbing || i4.grabbing) {
          const i5 = e13.grabbing ? "start" : "end", a8 = this._computeConstraint(t10);
          g5(t10, i5, { constraint: a8, view: this.view });
        }
      }
    });
  }
  destroy() {
    var _a;
    this._snappingOperation = u(this._snappingOperation), this._computationHandles.destroy(), this._constraintSnappingIndicator.destroy(), this._stagedStartIndicator.destroy(), (_a = this._orientationManipulatorTexture) == null ? void 0 : _a.release();
  }
  get updating() {
    return this._updatingHandles.updating || this._snappingManager.updating;
  }
  get firstGrabbedManipulator() {
    return this.parentTool.firstGrabbedManipulator;
  }
  get hasGrabbedManipulators() {
    return this.parentTool.hasGrabbedManipulators;
  }
  get snappingOptions() {
    return this._snappingManager.options;
  }
  get _snappingManager() {
    return this._snappingManagerResult.snappingManager;
  }
  get _activeComputation() {
    if (null != this._stagedComputation)
      return this._stagedComputation;
    const { selectedComputation: t9 } = this.analysisViewData;
    return this.hasGrabbedManipulators && null != t9 ? t9 : null;
  }
  get _stagedComputation() {
    var _a;
    const t9 = this._stagedDimension, e12 = (_a = this.analysisViewData.computations.at(-1)) == null ? void 0 : _a.computation;
    return null == t9 || null == e12 || e12.dimension !== t9 ? null : e12;
  }
  get _constraintHandles() {
    return [p(() => this.analysisViewData.selectedComputation, (t9) => {
      t9.previousConstraint = this._computeConstraint(t9);
    }, { ...A, equals: j }), d2(() => {
      const t9 = this._activeComputation;
      if (null == t9)
        return null;
      const { measureType: e12, orientation: i3 } = t9.dimension;
      return { measureType: e12, orientation: i3, computation: t9 };
    }, (t9, e12) => {
      if (null != t9 && null == e12) {
        const { measureType: e13, orientation: a7, computation: n7 } = t9;
        switch (n7.previousConstraint) {
          case p9.Horizontal:
            n7.preConstraintProperties = { measureType: t2.Horizontal, orientation: 0 };
            break;
          case p9.Vertical:
            n7.preConstraintProperties = { measureType: t2.Vertical, orientation: 0 };
            break;
          case p9.Direct:
            n7.preConstraintProperties = { measureType: t2.Direct, orientation: a7 };
            break;
          default:
            n7.preConstraintProperties = { measureType: e13, orientation: a7 };
        }
      }
      null == t9 && null != e12 && (e12.computation.preConstraintProperties = null);
    }, C)];
  }
  get _snappingIndicatorHandles() {
    const t9 = "snapping-indicator-event-handles";
    return [d2(() => ({ stagedComputation: this._stagedComputation, activeComputation: this._activeComputation }), ({ stagedComputation: e12, activeComputation: i3 }) => {
      const a7 = this._constraintSnappingIndicator;
      if (this.removeHandles(t9), null != i3)
        if (i3 === e12)
          a7.attached = true;
        else {
          const { start: e13, end: n7 } = this._computationManipulators.get(i3), s6 = () => {
            a7.attached = e13.grabbing || n7.grabbing;
          };
          s6(), this.addHandles([e13.events.on("grab-changed", s6), n7.events.on("grab-changed", s6)], t9);
        }
      else
        a7.attached = false;
    }), d2(() => {
      const t10 = this._activeComputation;
      return null != t10 ? { geometry: t10.geometry, constraint: t10.previousConstraint } : {};
    }, ({ geometry: t10, constraint: e12 }) => {
      const i3 = this._constraintSnappingIndicator;
      null != t10 && null != e12 && e12 !== p9.Direct ? (i3.visible = true, i3.setGeometryFromSegment(t10.directSegment)) : i3.visible = false;
    })];
  }
  removeStaged() {
    return null != this._stagedDimension && (this.analysis.dimensions.remove(this._stagedDimension), this._stagedDimension = null, true);
  }
  onDeactivate() {
    this.removeStaged(), this._resetSnappingState();
  }
  onClick(t9) {
    const { _stagedDimension: e12 } = this;
    if (null == e12) {
      const e13 = this._onUnstagedClick(t9);
      return this.analysis.dimensions.add(e13), null;
    }
    return this._onStagedClick(t9), e12;
  }
  onPointerMove({ mapPoint: t9, pointerType: e12 }) {
    if ("touch" === e12)
      return;
    const i3 = this._getSnappingContext(e12);
    this._updatingHandles.addPromise(d(this._snappingOperation.snap({ point: t9 }, this._snappingManager, i3)));
  }
  onManipulatorSelectionChanged() {
    if (null != this.analysisViewData.selectedComputation) {
      this._computationManipulators.get(this.analysisViewData.selectedComputation).offset.selected || (this.analysisViewData.selectedDimension = null);
    }
  }
  _onUnstagedClick({ mapPoint: t9, pointerType: e12 }) {
    let n7 = t9;
    if ("mouse" === e12) {
      const i3 = this._getSnappingContext(e12);
      n7 = this._snappingManager.update({ point: t9, context: i3 });
    }
    const s6 = new u4({ startPoint: x2(n7, new x()), endPoint: null, measureType: t2.Horizontal });
    return this._stagedDimension = s6, this._resetSnappingState(), s6;
  }
  _onStagedClick({ mapPoint: t9, pointerType: e12 }) {
    const i3 = this._stagedComputation;
    if (null == i3)
      return;
    let a7 = t9;
    if ("mouse" === e12) {
      const i4 = this._getSnappingContext(e12);
      a7 = this._snappingManager.update({ point: t9, context: i4 });
    }
    const n7 = x2(a7, new x());
    this._applyPointUpdate(i3, { endPoint: n7 }), this._stagedDimension = null, this._resetSnappingState();
  }
  _resetSnappingState() {
    this._snappingManager.doneSnapping(), this._snappingOperation.abort(), this._snappingOperation.stagedPoint = null;
  }
  _createManipulators(t9) {
    const e12 = this._setupPointManipulator(t9, { isStart: true }), a7 = this._setupPointManipulator(t9, { isStart: false }), n7 = this._setupOffsetManipulator(t9), s6 = this._setupHeadingManipulator(t9), o5 = this._setupRotationManipulator(t9), r8 = this._setupMeasureTypeManipulator(t9, t2.Direct), p10 = this._setupMeasureTypeManipulator(t9, t2.Horizontal), l8 = this._setupMeasureTypeManipulator(t9, t2.Vertical), u7 = new He({ start: e12, end: a7, offset: n7, heading: s6, rotation: o5, direct: r8, horizontal: p10, vertical: l8 });
    return this._setupComputationToManipulatorsSync(t9, u7), this._computationManipulators.set(t9, u7), this.manipulators.addMany(u7.values()), { manipulators: u7, remove: () => {
      this._computationHandles.remove(t9), this._computationManipulators.delete(t9);
      for (const t10 of u7.values())
        this.manipulators.remove(t10);
    } };
  }
  _setupComputationToManipulatorsSync(t9, e12) {
    this._computationHandles.add([d2(() => t9.geometry, () => this._updateManipulators(t9, e12), { ...A, equals: j })], t9);
  }
  _setupPointManipulator(t9, e12) {
    const { view: i3 } = this, { dimension: a7 } = t9, n7 = new Me(i3, { metadata: a7 }), s6 = Ue(n7, { isStart: e12.isStart, createSnappingPipelineStep: (t10) => f5({ snappingContext: this._getSnappingContext(t10), snappingManager: this._snappingManager, updatingHandles: this._updatingHandles }), dimension: a7, onUpdate: (e13) => this._applyPointUpdate(t9, e13), view: i3 });
    return this._computationHandles.add(s6, t9), n7;
  }
  _setupOffsetManipulator(t9) {
    const { view: e12 } = this, i3 = Pe(e12, { lineSizePt: this.analysis.style.lineSize, unfocusedMaterial: this._unfocusedOffsetManipulatorMaterial, focusedMaterial: this._focusedOffsetManipulatorMaterial, metadata: t9.dimension }), a7 = Re(i3, { computation: t9, view: e12 });
    return this._computationHandles.add(a7, t9), i3;
  }
  _setupHeadingManipulator(t9) {
    const { view: e12 } = this, i3 = new Ce(e12, { lineSizePt: this.analysis.style.lineSize, material: this._orientationManipulatorMaterial, metadata: t9.dimension }), a7 = ze(i3, { computation: t9, view: e12 });
    return this._computationHandles.add(a7, t9), i3;
  }
  _setupRotationManipulator(t9) {
    const { view: e12 } = this, i3 = new Ce(e12, { lineSizePt: this.analysis.style.lineSize, material: this._orientationManipulatorMaterial, metadata: t9.dimension }), a7 = Ae(i3, { computation: t9, view: e12 });
    return this._computationHandles.add(a7, t9), i3;
  }
  _setupMeasureTypeManipulator(t9, e12) {
    const { view: i3 } = this, a7 = Oe(i3, { lineSizePt: this.analysis.style.lineSize, unfocusedMaterial: this._unfocusedOffsetManipulatorMaterial, focusedMaterial: this._focusedOffsetManipulatorMaterial, thinOffsetManipulatorMaterial: this._thinOffsetManipulatorMaterial, metadata: t9.dimension }), n7 = Fe(a7, { computation: t9, manipulatorMeasureType: e12, view: i3 });
    return this._computationHandles.add(n7, t9), a7;
  }
  _updateManipulators(t9, e12, a7 = { stagedDimension: this._stagedDimension, selectedComputation: this.analysisViewData.selectedComputation, firstGrabbedManipulator: this.firstGrabbedManipulator }) {
    const { stagedDimension: n7, selectedComputation: s6, firstGrabbedManipulator: o5 } = a7, { start: r8, end: p10, offset: l8, heading: u7, rotation: d5 } = e12, c5 = s6 === t9, m5 = _3(t9), { dimension: h10 } = t9;
    for (const i3 of e12.values()) {
      const t10 = m5 && null == n7 && (null == o5 || i3 === o5);
      i3 === l8 ? (i3.available = t10, i3.selected = c5) : i3.available = t10 && c5;
    }
    if (!m5)
      return;
    null != this._computeConstraint(t9) ? e12.forEachMeasureTypeManipulator((t10) => t10.available = false) : e12.manipulatorForMeasureType(h10.measureType).available = false;
    for (const _5 of [u7, d5])
      h10.measureType === t2.Direct && 0 !== h10.offset || (_5.available = false);
    G3(t9) ? d5.available = false : u7.available = false;
    const { geometry: g8 } = t9;
    r8.renderLocation = g8.directSegment.startRenderSpace, p10.renderLocation = g8.directSegment.endRenderSpace;
    const { renderCoordsHelper: f10 } = this.view;
    Ie(l8, g8, f10), u7.available && Ge(u7, t9, f10), d5.available && Be(d5, t9, f10), e12.forEachMeasureTypeManipulator((e13, i3) => {
      e13.available && qe(e13, t9, i3, f10);
    });
  }
  _updateManipulatorStyle(t9) {
    const e12 = Ze(t9), i3 = $e(t9), a7 = { lineSizePt: t9, material: this._orientationManipulatorMaterial };
    for (const { offset: n7, heading: s6, rotation: o5 } of this._computationManipulators.values())
      n7.radius = i3 / 2, s6.update(a7), o5.update(a7);
    this._unfocusedOffsetManipulatorMaterial.setParameters({ width: e12 }), this._focusedOffsetManipulatorMaterial.setParameters({ width: i3 });
  }
  _applyPointUpdate(t9, e12) {
    const { view: i3 } = this, a7 = z2(t9);
    "startPoint" in e12 && (a7.elevationAlignedStartPoint = e12.startPoint), "endPoint" in e12 && (a7.elevationAlignedEndPoint = e12.endPoint);
    const n7 = C2(a7, i3.renderCoordsHelper);
    if (null == n7)
      return;
    const s6 = this._computeConstraint({ ...a7, geometry: n7 });
    S2(t9, e12, { ...a7, constraint: s6, unconstrainedGeometry: n7, view: i3 }), t9 === this._stagedComputation && this._updateStagedDimensionOffset(t9);
  }
  _updateStagedDimensionOffset(t9) {
    if (null == t9.geometry)
      return;
    t9.geometry.directSegment.eval(0.5, ft);
    const e12 = this.view.state.camera.computeScreenPixelSizeAt(ft);
    t9.dimension.offset = h8 * e12;
  }
  _computeConstraint(t9) {
    return f8(P4(t9, this._snappingManager.options), this.view);
  }
  _createOffsetManipulatorMaterial() {
    return new H2({ width: 1, renderOccluded: h4.OccludeAndTransparent, writeDepth: false, hasPolygonOffset: true, isDecoration: true });
  }
  get testInfo() {
    const t9 = (t10) => {
      var _a;
      return (_a = this.analysisViewData.computations.find(({ computation: e12 }) => e12.dimension === t10)) == null ? void 0 : _a.computation;
    };
    return { disableManipulatorPartialOcclusion: () => {
      this._stagedStartIndicator.renderOccluded = h4.Occlude, this.manipulators.forEach(({ manipulator: t10 }) => {
        for (const { geometry: e12 } of t10.renderObjects)
          e12.material.setParameters({ renderOccluded: h4.Occlude });
      });
    }, getManipulatorsForDimension: (e12) => this._computationManipulators.get(t9(e12)), getComputationForDimension: (e12) => t9(e12), getConstraintForDimension: (e12) => {
      const i3 = t9(e12);
      return null != i3 ? this._computeConstraint(i3) : null;
    }, stagedDimension: this._stagedDimension, stagedStartIndicator: this._stagedStartIndicator, constraintSnappingIndicator: this._constraintSnappingIndicator, snappingManager: this._snappingManager };
  }
};
e([y({ constructOnly: true })], gt2.prototype, "analysis", void 0), e([y({ constructOnly: true })], gt2.prototype, "analysisViewData", void 0), e([y({ constructOnly: true })], gt2.prototype, "manipulators", void 0), e([y({ constructOnly: true })], gt2.prototype, "parentTool", void 0), e([y({ constructOnly: true, nonNullable: true })], gt2.prototype, "view", void 0), e([y({ readOnly: true })], gt2.prototype, "updating", null), e([y()], gt2.prototype, "firstGrabbedManipulator", null), e([y()], gt2.prototype, "hasGrabbedManipulators", null), e([y()], gt2.prototype, "snappingOptions", null), e([y()], gt2.prototype, "_stagedDimension", void 0), e([y()], gt2.prototype, "_activeComputation", null), e([y()], gt2.prototype, "_stagedComputation", null), gt2 = e([a("esri.views.3d.analysis.Dimension.LengthDimensionSubTool")], gt2);
var ft = n2();

// node_modules/@arcgis/core/views/3d/analysis/Dimension/DimensionTool.js
var g6;
!function(e12) {
  e12.Ready = "ready", e12.Creating = "creating", e12.Created = "created";
}(g6 || (g6 = {}));
var S3 = class extends o4 {
  constructor(e12) {
    super(e12), this.automaticManipulatorSelection = false, this.removeIncompleteOnCancel = false, this._pointerMoveTimerMs = g4, this._prevPointerMoveTimeout = null;
  }
  initialize() {
    this._intersector = t6(this.view.state.viewingMode), this._lengthDimensionSubTool = new gt2({ analysis: this.analysis, analysisViewData: this.analysisViewData, manipulators: this.manipulators, parentTool: this, view: this.view }), this.addHandles([l2(this._lengthDimensionSubTool), e3(() => this._clearPointerMoveTimeout()), d2(() => this.state, (e12) => {
      e12 === g6.Created && this.finishToolCreation();
    }, A), p(() => this.firstGrabbedManipulator, (e12) => {
      this.selectedDimension = e12.metadata;
    }, A), d2(() => this.selectedDimension, () => this._resetPointerMoveTimeout(), A)]);
  }
  get state() {
    return this.analysis.dimensions.some((e12) => "length" === e12.type) ? null != this._activeSubTool ? g6.Creating : g6.Created : g6.Ready;
  }
  get updating() {
    return this._lengthDimensionSubTool.updating;
  }
  get cursor() {
    return this.active ? "crosshair" : null;
  }
  get selectedDimension() {
    return this.analysisViewData.selectedDimension;
  }
  set selectedDimension(e12) {
    this.analysisViewData.selectedDimension = e12;
  }
  onInputEvent(e12) {
    switch (e12.type) {
      case "immediate-click":
        this._clickHandler(e12);
        break;
      case "immediate-double-click":
        this._doubleClickHandler(e12);
        break;
      case "pointer-move":
        this._pointerMoveHandler(e12);
        break;
      case "key-down":
        if (p6.cancel === e12.key) {
          if (null != this._activeSubTool && this._activeSubTool.removeStaged())
            return void e12.stopPropagation();
          this.active || (this.selectedDimension = null);
        } else
          p6.delete.includes(e12.key) && this._deleteKeyHandler();
    }
  }
  onActivate() {
    this._activeSubTool = this._lengthDimensionSubTool;
  }
  onDeactivate() {
    null != this._activeSubTool && (this._activeSubTool.onDeactivate(), this._activeSubTool = null);
  }
  onShow() {
    this._resetPointerMoveTimeout();
  }
  onManipulatorSelectionChanged() {
    this._lengthDimensionSubTool.onManipulatorSelectionChanged();
  }
  onHide() {
    this.selectedDimension = null;
  }
  _clickHandler(e12) {
    if (this.hasFocusedManipulators)
      return void e12.stopPropagation();
    if (null == this._activeSubTool)
      return;
    const t9 = this._intersectScreen(e12);
    null != t9 && (this.selectedDimension = this._activeSubTool.onClick({ mapPoint: t9, pointerType: e12.pointerType }), e12.stopPropagation());
  }
  _doubleClickHandler(e12) {
    this.active && (this.view.activeTool = null, e12.stopPropagation());
  }
  _pointerMoveHandler(e12) {
    if (this._resetPointerMoveTimeout(), null == this._activeSubTool)
      return;
    if (this.hasFocusedManipulators)
      return;
    const t9 = this._intersectScreen(e12);
    null != t9 && this._activeSubTool.onPointerMove({ mapPoint: t9, pointerType: e12.pointerType });
  }
  _deleteKeyHandler() {
    null != this._activeSubTool && this._activeSubTool.removeStaged(), this._removeSelected();
  }
  _intersectScreen(e12) {
    const t9 = c2(e12);
    this.view.sceneIntersectionHelper.intersectToolIntersectorScreen(t9, this._intersector);
    const i3 = this._intersector.results.min, o5 = c.get();
    return i3.getIntersectionPoint(o5) ? this.view.renderCoordsHelper.fromRenderCoords(o5, new x({ spatialReference: this.view.spatialReference })) : null;
  }
  _removeSelected() {
    null != this.selectedDimension && (this.analysis.dimensions.remove(this.selectedDimension), this.selectedDimension = null);
  }
  _clearPointerMoveTimeout() {
    this._prevPointerMoveTimeout = l(this._prevPointerMoveTimeout);
  }
  _resetPointerMoveTimeout() {
    this._clearPointerMoveTimeout(), this.manipulators.forEach((e12) => e12.manipulator.state |= tt), this._prevPointerMoveTimeout = o.setTimeout(() => {
      this.manipulators.forEach((e12) => e12.manipulator.state &= ~tt);
    }, this._pointerMoveTimerMs);
  }
  get testInfo() {
    return { ...this._lengthDimensionSubTool.testInfo, setManipulatorAutoHideDelay: (e12) => {
      this._pointerMoveTimerMs = e12, this._resetPointerMoveTimeout();
    } };
  }
};
e([y({ constructOnly: true })], S3.prototype, "view", void 0), e([y({ constructOnly: true })], S3.prototype, "analysis", void 0), e([y({ readOnly: true })], S3.prototype, "state", null), e([y({ readOnly: true })], S3.prototype, "updating", null), e([y({ readOnly: true })], S3.prototype, "cursor", null), e([y({ constructOnly: true })], S3.prototype, "analysisViewData", void 0), e([y()], S3.prototype, "selectedDimension", null), e([y()], S3.prototype, "automaticManipulatorSelection", void 0), e([y()], S3.prototype, "_activeSubTool", void 0), e([y()], S3.prototype, "_lengthDimensionSubTool", void 0), S3 = e([a("esri.views.3d.analysis.Dimension.DimensionTool")], S3);

// node_modules/@arcgis/core/views/3d/interactive/visualElements/MarkerVisualElement.js
var n6 = class extends a3 {
  constructor(e12, t9) {
    super(e12), this._hasExternalMaterial = false, this._renderOccluded = h4.OccludeAndTransparent, this._width = 1, this._color = r5(1, 0, 1, 1), this._placement = "end", this._markerPrimitive = "arrow", this._material = t9, this._hasExternalMaterial = null != t9, this.applyProperties(e12);
  }
  setGeometryFromSegment(t9, r8) {
    const i3 = t9.endRenderSpace;
    this.transform = q2(h9, i3), this._normal = r8;
    const { points: a7 } = t9.createRenderGeometry(i3, this.view.renderCoordsHelper);
    this.geometry = [a7];
  }
  get renderOccluded() {
    return null != this._material ? this._material.parameters.renderOccluded : this._renderOccluded;
  }
  set renderOccluded(e12) {
    this._renderOccluded = e12, null != this._material && this._material.setParameters({ renderOccluded: e12 });
  }
  get geometry() {
    return this._geometry;
  }
  set geometry(e12) {
    this._geometry = e12, this.recreateGeometry();
  }
  get normal() {
    return this._normal;
  }
  set normal(e12) {
    this._normal = e12, this.recreateGeometry();
  }
  get width() {
    return null != this._material ? this._material.parameters.width : this._width;
  }
  set width(e12) {
    this._width = e12, null != this._material && this._material.setParameters({ width: e12 });
  }
  get color() {
    return null != this._material ? this._material.parameters.color : this._color;
  }
  set color(e12) {
    this._color = t4(e12), null != this._material && this._material.setParameters({ color: this._color });
  }
  get placement() {
    return null != this._material ? this._material.parameters.placement : this._placement;
  }
  set placement(e12) {
    this._placement = e12, null != this._material && this._material.setParameters({ placement: this._placement });
  }
  get markerPrimitive() {
    var _a;
    return ((_a = this._material) == null ? void 0 : _a.parameters.markerPrimitive) ?? this._markerPrimitive;
  }
  set markerPrimitive(e12) {
    this._markerPrimitive = e12, null != this._material && this._material.setParameters({ markerPrimitive: e12 });
  }
  createExternalResources() {
    this._hasExternalMaterial || (this._material = new v2({ width: this._width, color: this._color, placement: this._placement, renderOccluded: this._renderOccluded, markerPrimitive: this._markerPrimitive, isDecoration: this.isDecoration }));
  }
  destroyExternalResources() {
    this._hasExternalMaterial || (this._material = null);
  }
  createGeometries(e12) {
    for (const t9 of R2(this.geometry, this.normal)) {
      const r8 = b(this._material, t9);
      e12.addGeometry(r8);
    }
  }
  forEachExternalMaterial(e12) {
    this._hasExternalMaterial || e12(this._material);
  }
};
var h9 = e5();

// node_modules/@arcgis/core/views/3d/analysis/Dimension/LengthDimensionVisualization.js
var b5 = class {
  set visible(e12) {
    for (const t9 of this._visualElements.values())
      t9.attached = e12;
  }
  constructor(s6) {
    this.destroyed = false, this._handles = new r(), this._messages = null, this._labelSegment = new m();
    const { analysis: i3, computation: o5, view: m5, messages: r8, isDecoration: f10 } = s6;
    this.analysis = i3, this.computation = o5, this.view = m5, this._messages = r8;
    const d5 = s6.visible, c5 = { view: m5, attached: d5, isDecoration: f10 }, { fontSize: h10, textColor: u7, textBackgroundColor: b6 } = i3.style;
    this._visualElements = new w5({ marker: new n6(c5, s6.markerMaterial), dimension: new f4(c5, s6.dimensionLineMaterial), startOffset: new f4(c5, s6.offsetLineMaterial), endOffset: new f4(c5, s6.offsetLineMaterial), dimensionSmall: new f4(c5, s6.smallDimensionLineMaterial), startOffsetSmall: new f4(c5, s6.smallOffsetLineMaterial), endOffsetSmall: new f4(c5, s6.smallOffsetLineMaterial), label: new f6({ view: m5, attached: d5, distance: 0, geometry: { type: "segment", sampleLocation: "center", segment: this._labelSegment, callout: false }, fontSize: u2(h10), textColor: u7.clone(), backgroundColor: b6.clone(), isDecoration: f10 }) }), this._handles.add([d2(() => o5.geometry, (e12) => {
      this.updateCameraDependentElements(m5.state.camera, e12, i3.style), null != o5.geometry && this._updateLines(o5.geometry);
    }, { ...P, equals: j }), d2(() => o5.length, (e12) => this._updateLabelContent(e12), P)]);
  }
  destroy() {
    this.destroyed = true, this._handles = u(this._handles);
    for (const e12 of this._visualElements.values())
      e12.destroy();
  }
  get testInfo() {
    return { dimensionVisualElement: this._visualElements.dimension, label: this._visualElements.label };
  }
  _updateLines(e12) {
    const t9 = U2(_4, b3.Start, e12.directSegment, e12.dimensionSegment), s6 = U2(y2, b3.End, e12.directSegment, e12.dimensionSegment), i3 = this._visualElements;
    i3.marker.setGeometryFromSegment(e12.dimensionSegment, e12.primaryOffsetAxis), i3.dimension.setGeometryFromSegment(e12.dimensionSegment), i3.startOffset.setGeometryFromSegment(t9), i3.endOffset.setGeometryFromSegment(s6), i3.dimensionSmall.setGeometryFromSegment(e12.dimensionSegment), i3.startOffsetSmall.setGeometryFromSegment(t9), i3.endOffsetSmall.setGeometryFromSegment(s6);
  }
  updateCameraDependentElements(e12, t9, s6) {
    const i3 = this._visualElements;
    if (null == t9) {
      for (const e13 of i3.values())
        e13.visible = false;
      return;
    }
    const n7 = e12.computeScreenPixelSizeAt(t9.dimensionSegment.eval(0.5, E3)), l8 = X2(t9, n7), o5 = l8 < (u2(s6.lineSize) * k2) ** 2, m5 = !o5;
    i3.marker.visible = m5, i3.dimension.visible = m5, i3.startOffset.visible = m5, i3.endOffset.visible = m5, i3.dimensionSmall.visible = o5, i3.startOffsetSmall.visible = o5, i3.endOffsetSmall.visible = o5;
    const r8 = u2(s6.fontSize) * U3, { label: u7 } = i3;
    if (u7.visible = l8 >= r8 ** 2, !u7.visible)
      return;
    const { dimensionSegment: S4, primaryOffsetAxis: g8 } = t9, { offset: v4 } = this.computation.dimension, p10 = (Math.sign(v4) >= 0 ? 1 : -1) * O6(s6) * n7;
    k(this._labelSegment, S4, g8, p10), u7.updateLabelPosition();
  }
  updateLabelStyle(e12) {
    const { label: t9 } = this._visualElements;
    t9.fontSize = u2(e12.fontSize), t9.textColor = e12.textColor, t9.backgroundColor = e12.textBackgroundColor;
  }
  updateUnitsMessages(e12) {
    this._messages = e12;
    const { length: t9 } = this.computation;
    this._updateLabelContent(t9);
  }
  _updateLabelContent(e12) {
    const { label: t9 } = this._visualElements;
    null != e12 && null != this._messages ? t9.text = h7(this._messages, e12, e12.unit) : t9.text = "";
  }
};
function O6(e12) {
  return 1.5 * u2(e12.fontSize) + x3 + u2(e12.lineSize / 2);
}
var _4 = new m();
var y2 = new m();
var E3 = n2();
var w5 = class {
  constructor(e12) {
    this.marker = e12.marker, this.dimension = e12.dimension, this.startOffset = e12.startOffset, this.endOffset = e12.endOffset, this.dimensionSmall = e12.dimensionSmall, this.startOffsetSmall = e12.startOffsetSmall, this.endOffsetSmall = e12.endOffsetSmall, this.label = e12.label;
  }
  values() {
    return [this.marker, this.dimension, this.startOffset, this.endOffset, this.dimensionSmall, this.startOffsetSmall, this.endOffsetSmall, this.label];
  }
};

// node_modules/@arcgis/core/views/3d/analysis/Dimension/DimensionVisualization.js
var j6 = class extends S {
  get analysis() {
    return this.analysisViewData.analysis;
  }
  get visible() {
    return this.analysisViewData.visible;
  }
  constructor(e12) {
    super(e12), this.loadingMessages = false, this._messages = null;
  }
  initialize() {
    const e12 = this.isDecoration;
    this._markerMaterial = new v2({ width: 1, anchor: s3.Tip, color: _2, placement: "begin-end", worldSpace: true, hideOnShortSegments: true, hasTip: true, renderOccluded: h4.OccludeAndTransparent, markerPrimitive: "triangle", isDecoration: e12 }), this._dimensionLineMaterial = new H2({ width: 1, color: _2, renderOccluded: h4.OccludeAndTransparent, markerParameters: this._markerMaterial.parameters, isDecoration: e12 }), this._offsetLineMaterial = new H2({ width: 1, color: _2, renderOccluded: h4.OccludeAndTransparent, stipplePattern: h5(5), isDecoration: e12 }), this._smallDimensionLineMaterial = new H2({ width: 1, color: _2, renderOccluded: h4.OccludeAndTransparent, isDecoration: e12 }), this._smallOffsetLineMaterial = new H2({ width: 1, color: _2, renderOccluded: h4.OccludeAndTransparent, stipplePattern: h5(5), isDecoration: e12 });
    for (const i3 of this._lineMaterials())
      this.view._stage.add(i3), this.addHandles(e3(() => {
        var _a;
        (_a = this.view._stage) == null ? void 0 : _a.remove(i3);
      }));
    const s6 = g(() => this.analysisViewData.computations, ({ computation: e13 }) => this._createVisualization(e13));
    this._dimensionVisualizations = s6, this.addHandles([l2(s6), d2(() => u3.toUnitRGBA(this.analysis.style.color), (e13) => {
      for (const i3 of this._lineMaterials())
        i3.setParameters({ color: e13 });
    }, A), d2(() => this.analysis.style.lineSize, (e13) => {
      const i3 = u2(e13);
      this._markerMaterial.setParameters({ width: i3 * l6 }), this._dimensionLineMaterial.setParameters({ width: i3, markerParameters: this._markerMaterial.parameters });
      const s7 = Math.max(i3 * w4, 1);
      this._offsetLineMaterial.setParameters({ width: s7 });
    }, A), d2(() => ({ camera: this.view.state.camera, style: z3(this.analysis) }), ({ camera: e13, style: i3 }) => {
      for (const { visualization: s7 } of this._dimensionVisualizations)
        s7.updateCameraDependentElements(e13, s7.computation.geometry, i3), s7.updateLabelStyle(i3);
    }), d2(() => this.visible, (e13) => {
      for (const { visualization: i3 } of this._dimensionVisualizations)
        i3.visible = e13;
    })]), this.addHandles([f(() => this._updateMessageBundle()), p(() => !this.loadingMessages, () => {
      for (const { visualization: e13 } of this._dimensionVisualizations)
        e13.updateUnitsMessages(this._messages);
    }, C)]), this._updateMessageBundle();
  }
  get testInfo() {
    return { visualizations: this._dimensionVisualizations.items.map(({ visualization: e12 }) => e12), disablePartialOcclusion: () => {
      for (const e12 of this._lineMaterials())
        e12.setParameters({ renderOccluded: h4.Occlude });
    } };
  }
  _createVisualization(e12) {
    const i3 = new b5({ analysis: this.analysis, computation: e12, view: this.view, visible: this.visible, markerMaterial: this._markerMaterial, dimensionLineMaterial: this._dimensionLineMaterial, offsetLineMaterial: this._offsetLineMaterial, smallDimensionLineMaterial: this._smallDimensionLineMaterial, smallOffsetLineMaterial: this._smallOffsetLineMaterial, messages: this._messages, isDecoration: this.isDecoration });
    return { visualization: i3, remove: () => i3.destroy() };
  }
  _lineMaterials() {
    return [this._markerMaterial, this._dimensionLineMaterial, this._offsetLineMaterial, this._smallDimensionLineMaterial, this._smallOffsetLineMaterial];
  }
  async _updateMessageBundle() {
    this.loadingMessages = true;
    try {
      this._messages = await h("esri/core/t9n/Units");
    } finally {
      this.loadingMessages = false;
    }
  }
};
function z3(e12) {
  const { fontSize: i3, lineSize: s6, textColor: t9, textBackgroundColor: a7 } = e12.style;
  return { fontSize: i3, lineSize: s6, textBackgroundColor: a7.clone(), textColor: t9.clone() };
}
e([y({ constructOnly: true })], j6.prototype, "analysisViewData", void 0), e([y({ constructOnly: true, nonNullable: true })], j6.prototype, "view", void 0), e([y({ constructOnly: true })], j6.prototype, "isDecoration", void 0), e([y()], j6.prototype, "analysis", null), e([y()], j6.prototype, "visible", null), e([y()], j6.prototype, "loadingMessages", void 0), j6 = e([a("esri.views.3d.analysis.Dimension.DimensionVisualization")], j6);

// node_modules/@arcgis/core/views/analysis/LengthDimensionResult.js
var t8 = class extends S {
  constructor(o5) {
    super(o5), this.dimension = null, this.length = null;
  }
};
e([y({ constructOnly: true, nonNullable: true })], t8.prototype, "dimension", void 0), e([y()], t8.prototype, "length", void 0), t8 = e([a("esri.views.analysis.LengthDimensionResult")], t8);
var c4 = t8;

// node_modules/@arcgis/core/views/3d/analysis/Dimension/LengthDimensionComputation.js
var l7 = class extends S {
  constructor(t9) {
    super(t9), this.geometry = null, this.unconstrainedGeometry = null, this.elevationAlignedStartPoint = null, this.elevationAlignedEndPoint = null;
  }
  normalizeCtorArgs(t9) {
    const { dimension: o5, ...e12 } = t9;
    return { result: new c4({ dimension: o5 }), ...e12 };
  }
  initialize() {
    this.addHandles([d2(() => this.dimension.startPoint, (t9) => this.elevationAlignedStartPoint = this.projectAndAlignPoint(t9), A), d2(() => this.dimension.endPoint, (t9) => this.elevationAlignedEndPoint = this.projectAndAlignPoint(t9), A)]);
  }
  get dimension() {
    return this.result.dimension;
  }
  get length() {
    return this.result.length;
  }
};
e([y({ constructOnly: true, nonNullable: true })], l7.prototype, "result", void 0), e([y({ constructOnly: true, nonNullable: true })], l7.prototype, "projectAndAlignPoint", void 0), e([y()], l7.prototype, "dimension", null), e([y()], l7.prototype, "length", null), e([y()], l7.prototype, "geometry", void 0), e([y()], l7.prototype, "unconstrainedGeometry", void 0), e([y()], l7.prototype, "elevationAlignedStartPoint", void 0), e([y()], l7.prototype, "elevationAlignedEndPoint", void 0), e([y()], l7.prototype, "preConstraintProperties", void 0), e([y()], l7.prototype, "previousConstraint", void 0), l7 = e([a("esri.views.3d.analysis.Dimension.LengthDimensionComputation")], l7);

// node_modules/@arcgis/core/views/analysis/DimensionAnalysisView.js
var r7 = (r8) => {
  let i3 = class extends r8 {
    constructor(...o5) {
      super(...o5), this.analysis = null, this.tool = null, this.selectedDimension = null, this.interactive = false, this.visible = null;
    }
    get results() {
      return new V();
    }
    createLengthDimensions(o5) {
      throw new Error("Method not implemented.");
    }
  };
  return e([y({ constructOnly: true })], i3.prototype, "view", void 0), e([y({ constructOnly: true, nonNullable: true })], i3.prototype, "analysis", void 0), e([y()], i3.prototype, "tool", void 0), e([y({ readOnly: true })], i3.prototype, "results", null), e([y()], i3.prototype, "selectedDimension", void 0), e([y()], i3.prototype, "interactive", void 0), e([y()], i3.prototype, "visible", void 0), i3 = e([a("esri.views.analysis.DimensionAnalysisView")], i3), i3;
};

// node_modules/@arcgis/core/views/3d/analysis/DimensionAnalysisView3D.js
var f9 = class extends r7(s4(S)) {
  constructor(i3) {
    super(i3), this.type = "dimension-view-3d", this.tool = null, this.selectedDimension = null, this._dimensionsToComputations = /* @__PURE__ */ new Map(), this._placementTask = null, this._projectAndAlignPoint = null;
  }
  initialize() {
    this._projectAndAlignPoint = (i4) => {
      if (null == i4)
        return null;
      const { spatialReference: s6, elevationProvider: t9 } = this.view, e12 = r6(i4, s6, t9);
      return null == e12 && t7(this.analysis, i4.spatialReference, n.getLogger(this)), e12;
    };
    const i3 = g(() => this.analysis.dimensions, (i4) => this._createComputation(i4));
    this.computations = i3, this.addHandles([a5(this, S3), l2(i3)]), this._analysisVisualization = new j6({ analysisViewData: this, view: this.view, isDecoration: !this.parent }), this._analysisController = new g3({ analysisViewData: this, view: this.view });
  }
  destroy() {
    this._placementTask = e2(this._placementTask), this._analysisVisualization = u(this._analysisVisualization), v3(this);
  }
  get updating() {
    var _a;
    return ((_a = this._analysisVisualization) == null ? void 0 : _a.loadingMessages) ?? false;
  }
  get results() {
    return this.analysis.dimensions.map((i3) => this._dimensionsToComputations.get(i3).result);
  }
  get selectedComputation() {
    const { selectedDimension: i3 } = this;
    return null == i3 ? null : this._dimensionsToComputations.get(i3);
  }
  get testInfo() {
    return { visualization: this._analysisVisualization, controller: this._analysisController };
  }
  async createLengthDimensions(i3) {
    return this.selectedDimension = null, this._placementTask = e2(this._placementTask), this._placementTask = l5(this, i3), this._placementTask.promise;
  }
  _createComputation(i3) {
    const { _dimensionsToComputations: s6 } = this, t9 = new l7({ dimension: i3, projectAndAlignPoint: this._projectAndAlignPoint });
    return s6.set(i3, t9), { computation: t9, remove: () => this._removeComputation(t9) };
  }
  _removeComputation(i3) {
    const { dimension: s6 } = i3;
    s6 === this.selectedDimension && (this.selectedDimension = null), this._dimensionsToComputations.delete(s6), i3.destroy();
  }
};
e([y({ readOnly: true })], f9.prototype, "type", void 0), e([y()], f9.prototype, "tool", void 0), e([y()], f9.prototype, "updating", null), e([y({ readOnly: true })], f9.prototype, "results", null), e([y()], f9.prototype, "computations", void 0), e([y()], f9.prototype, "selectedDimension", void 0), e([y()], f9.prototype, "selectedComputation", null), e([y()], f9.prototype, "_analysisVisualization", void 0), e([y()], f9.prototype, "_analysisController", void 0), e([y()], f9.prototype, "_dimensionsToComputations", void 0), e([y()], f9.prototype, "_placementTask", void 0), f9 = e([a("esri.views.3d.analysis.DimensionAnalysisView3D")], f9);
var g7 = f9;
export {
  g7 as default
};
//# sourceMappingURL=DimensionAnalysisView3D-63RJXG7E.js.map
