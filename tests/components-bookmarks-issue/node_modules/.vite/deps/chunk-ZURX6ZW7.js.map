{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/terrain/BackgroundGrid.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{glsl as o}from\"../../shaderModules/interfaces.js\";function t(t){const e=257;t.code.add(o`\n    float lineFactorAtPosition(float value) {\n      float pos = value * ${o.float(e)};\n      if(pos < 0.5 || pos > ${o.float(e-.5)}) {\n        return 1.0;\n      }\n\n      pos = pos + 0.5;\n      float modulo = mod(pos, 16.0);\n      return modulo <= 2.0 ?  1.0 - abs(modulo - 1.0) : 0.0;\n    }\n\n    float lineFactorAtUV(vec2 uv) {\n      return max(lineFactorAtPosition(uv.x), lineFactorAtPosition(uv.y));\n    }\n\n    float lineFactor(vec2 uv) {\n      vec2 offset = fwidth(uv) * 0.25;\n      return (lineFactorAtUV(vec2(uv.x + offset.x, uv.y + offset.y)) +\n              lineFactorAtUV(vec2(uv.x - offset.x, uv.y + offset.y)) +\n              lineFactorAtUV(vec2(uv.x + offset.x, uv.y - offset.y)) +\n              lineFactorAtUV(vec2(uv.x - offset.x, uv.y - offset.y))) / 4.0;\n    }\n\n    vec3 gridColor(vec2 uv) {\n      float line = lineFactor(uv) * 0.1 + 0.9;\n      return vec3(1.0, 0.972, 0.918) * line;\n    }`)}export{t as BackgroundGrid};\n"],
  "mappings": ";;;;;AAIyD,SAAS,EAAEA,IAAE;AAAC,QAAM,IAAE;AAAI,EAAAA,GAAE,KAAK,IAAI;AAAA;AAAA,4BAElE,EAAE,MAAM,CAAC,CAAC;AAAA,8BACR,EAAE,MAAM,IAAE,GAAE,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAwBrC;AAAC;",
  "names": ["t"]
}
