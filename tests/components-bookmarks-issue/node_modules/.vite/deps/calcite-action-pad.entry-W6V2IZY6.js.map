{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/esm/src/components/action-pad/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/action-pad/action-pad.scss?tag=calcite-action-pad&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/action-pad/action-pad.tsx"],
  "sourcesContent": ["export const CSS = {\n  actionGroupEnd: \"action-group--end\",\n  container: \"container\",\n};\n\nexport const SLOTS = {\n  expandTooltip: \"expand-tooltip\",\n};\n", "/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-pad-expanded-max-width: When `layout` is `\"vertical\"`, specifies the expanded max width of the component.\n */\n\n:host {\n  @extend %component-host;\n  @apply animate-in block rounded-sm;\n  --calcite-action-pad-expanded-max-width: auto;\n  background: transparent;\n}\n\n:host([expanded][layout=\"vertical\"]) .container {\n  max-inline-size: var(--calcite-action-pad-expanded-max-width);\n}\n\n::slotted(calcite-action-group) {\n  @apply border-color-3\n  border-0\n  border-b\n  border-solid\n  pb-0 pt-0;\n}\n\n.container {\n  @apply bg-background\n  shadow-2\n  inline-flex\n  flex-col\n  overflow-y-auto\n  rounded;\n}\n\n.action-group--bottom {\n  @apply flex-grow justify-end pb-0;\n}\n\n:host([layout=\"horizontal\"]) {\n  .container {\n    @apply flex-row;\n    .action-group--bottom {\n      @apply p-0;\n    }\n    ::slotted(calcite-action-group) {\n      @apply border-0\n      p-0;\n      border-inline-end-width: theme(\"borderWidth.DEFAULT\");\n    }\n  }\n}\n\n::slotted(calcite-action-group:last-child) {\n  @apply border-b-0;\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { slotChangeGetAssignedElements } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ExpandToggle, toggleChildActionText } from \"../functional/ExpandToggle\";\nimport { Layout, Position, Scale } from \"../interfaces\";\nimport { ActionPadMessages } from \"./assets/action-pad/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { createObserver } from \"../../utils/observers\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\n\n/**\n * @slot - A slot for adding `calcite-action`s to the component.\n * @slot expand-tooltip - A slot to set the `calcite-tooltip` for the expand toggle.\n */\n@Component({\n  tag: \"calcite-action-pad\",\n  styleUrl: \"action-pad.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class ActionPad\n  implements ConditionalSlotComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the accessible label for the last `calcite-action-group`.\n   */\n  @Prop() actionsEndGroupLabel: string;\n\n  /**\n   * When `true`, the expand-toggling behavior is disabled.\n   */\n  @Prop({ reflect: true }) expandDisabled = false;\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true, mutable: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(expanded: boolean): void {\n    toggleChildActionText({ el: this.el, expanded });\n  }\n\n  /**\n   * Indicates the layout of the component.\n   */\n  @Prop({ reflect: true }) layout: Layout = \"vertical\";\n\n  @Watch(\"layout\")\n  layoutHandler(): void {\n    this.updateGroups();\n  }\n\n  /**\n   * Arranges the component depending on the element's `dir` property.\n   */\n  @Prop({ reflect: true }) position: Position;\n\n  /**\n   * Specifies the size of the expand `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionPadMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionPadMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `expanded` property is toggled.\n   */\n  @Event({ cancelable: false }) calciteActionPadToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionPadElement;\n\n  @State() expandTooltip: HTMLCalciteTooltipElement;\n\n  mutationObserver = createObserver(\"mutation\", () =>\n    this.setGroupLayout(Array.from(this.el.querySelectorAll(\"calcite-action-group\"))),\n  );\n\n  expandToggleEl: HTMLCalciteActionElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionPadMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    const { el, expanded } = this;\n    toggleChildActionText({ el, expanded });\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.el?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  actionMenuOpenHandler = (event: CustomEvent<void>): void => {\n    if ((event.target as HTMLCalciteActionGroupElement).menuOpen) {\n      const composedPath = event.composedPath();\n      Array.from(this.el.querySelectorAll(\"calcite-action-group\")).forEach((group) => {\n        if (!composedPath.includes(group)) {\n          group.menuOpen = false;\n        }\n      });\n    }\n  };\n\n  toggleExpand = (): void => {\n    this.expanded = !this.expanded;\n    this.calciteActionPadToggle.emit();\n  };\n\n  setExpandToggleRef = (el: HTMLCalciteActionElement): void => {\n    this.expandToggleEl = el;\n  };\n\n  updateGroups(): void {\n    this.setGroupLayout(Array.from(this.el.querySelectorAll(\"calcite-action-group\")));\n  }\n\n  setGroupLayout(groups: HTMLCalciteActionGroupElement[]): void {\n    groups.forEach((group) => (group.layout = this.layout));\n  }\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const groups = slotChangeGetAssignedElements(event).filter(\n      (el) => el?.matches(\"calcite-action-group\"),\n    ) as HTMLCalciteActionGroupElement[];\n\n    this.setGroupLayout(groups);\n  };\n\n  handleTooltipSlotChange = (event: Event): void => {\n    const tooltips = slotChangeGetAssignedElements(event).filter(\n      (el) => el?.matches(\"calcite-tooltip\"),\n    ) as HTMLCalciteTooltipElement[];\n\n    this.expandTooltip = tooltips[0];\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Component Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderBottomActionGroup(): VNode {\n    const {\n      expanded,\n      expandDisabled,\n      messages,\n      el,\n      position,\n      toggleExpand,\n      scale,\n      layout,\n      actionsEndGroupLabel,\n      overlayPositioning,\n    } = this;\n\n    const expandToggleNode = !expandDisabled ? (\n      <ExpandToggle\n        collapseText={messages.collapse}\n        el={el}\n        expandText={messages.expand}\n        expanded={expanded}\n        position={position}\n        scale={scale}\n        toggle={toggleExpand}\n        tooltip={this.expandTooltip}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.setExpandToggleRef}\n      />\n    ) : null;\n\n    return expandToggleNode ? (\n      <calcite-action-group\n        class={CSS.actionGroupEnd}\n        label={actionsEndGroupLabel}\n        layout={layout}\n        overlayPositioning={overlayPositioning}\n        scale={scale}\n      >\n        <slot name={SLOTS.expandTooltip} onSlotchange={this.handleTooltipSlotChange} />\n        {expandToggleNode}\n      </calcite-action-group>\n    ) : null;\n  }\n\n  render(): VNode {\n    return (\n      <Host onCalciteActionMenuOpen={this.actionMenuOpenHandler}>\n        <div class={CSS.container}>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n          {this.renderBottomActionGroup()}\n        </div>\n      </Host>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
