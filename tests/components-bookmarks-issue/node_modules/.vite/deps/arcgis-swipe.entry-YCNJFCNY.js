import {
  onDisconnectedHelper
} from "./chunk-K4WPYNMJ.js";
import {
  newWidgetsSwipe
} from "./chunk-YXW2SI4L.js";
import {
  checkForView,
  referenceElementHelper
} from "./chunk-UXZQL3ZN.js";
import {
  createEvent,
  getElement,
  h,
  registerInstance
} from "./chunk-KMIMZXFW.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/map-components/dist/esm/arcgis-swipe.entry.js
var swipeCss = "arcgis-swipe{}";
var ArcgisSwipe = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.widgetReady = createEvent(this, "widgetReady", 7);
    this._watchHandles = [];
    this.referenceElement = void 0;
    this.direction = void 0;
    this.dragLabel = void 0;
    this.leadingLayers = void 0;
    this.swipePosition = void 0;
    this.trailingLayers = void 0;
    this.view = void 0;
    this.position = "bottom-left";
    this.widget = void 0;
  }
  //--------------------------------------------------------------------------
  //
  //  Watchers
  //
  //--------------------------------------------------------------------------
  directionWatcher(newValue) {
    if (newValue !== void 0 && this.widget) {
      this.widget.direction = newValue;
    }
  }
  dragLabelWatcher(newValue) {
    if (newValue !== void 0 && this.widget) {
      this.widget.dragLabel = newValue;
    }
  }
  leadingLayersWatcher(newValue) {
    if (newValue !== void 0 && this.widget) {
      this.widget.leadingLayers = newValue;
    }
  }
  swipePositionWatcher(newValue) {
    if (newValue !== void 0 && this.widget) {
      this.widget.position = newValue;
    }
  }
  trailingLayersWatcher(newValue) {
    if (newValue !== void 0 && this.widget) {
      this.widget.trailingLayers = newValue;
    }
  }
  positionWatcher(newValue) {
    if (newValue !== void 0 && this.widget) {
      if (typeof this.view !== "string") {
        this.view.ui.move(this.childElem, newValue);
      }
    }
  }
  referenceElementWatcher(newValue) {
    referenceElementHelper(this, newValue);
  }
  viewWatcher(newValue) {
    if (newValue !== void 0 && this.widget) {
      this.widget.view = newValue;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  async componentDidLoad() {
    const params = this._createParams();
    const widget = await newWidgetsSwipe(params);
    this.widget = widget;
    this.widgetReady.emit({ widget: this.widget });
    checkForView(this);
  }
  disconnectedCallback() {
    onDisconnectedHelper(this);
  }
  render() {
    return h("div", { ref: (el) => this.childElem = el });
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  _createParams() {
    const params = {
      container: this.childElem
    };
    if (this.view) {
      params.view = this.view;
    }
    return params;
  }
  get el() {
    return getElement(this);
  }
  static get watchers() {
    return {
      "direction": ["directionWatcher"],
      "dragLabel": ["dragLabelWatcher"],
      "leadingLayers": ["leadingLayersWatcher"],
      "swipePosition": ["swipePositionWatcher"],
      "trailingLayers": ["trailingLayersWatcher"],
      "position": ["positionWatcher"],
      "referenceElement": ["referenceElementWatcher"],
      "view": ["viewWatcher"]
    };
  }
};
ArcgisSwipe.style = swipeCss;
export {
  ArcgisSwipe as arcgis_swipe
};
/*! Bundled license information:

@arcgis/map-components/dist/esm/arcgis-swipe.entry.js:
  (*!
   * All material copyright Esri, All Rights Reserved, unless otherwise specified.
   * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
   * v4.30.0-next.13
   *)
*/
//# sourceMappingURL=arcgis-swipe.entry-YCNJFCNY.js.map
