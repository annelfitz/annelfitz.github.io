{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/components/src/utils/browser.ts", "../../@esri/calcite-components/dist/components/src/utils/interactive.tsx"],
  "sourcesContent": ["import { Build } from \"@stencil/core\";\n\ninterface NavigatorUAData {\n  brands: Array<{ brand: string; version: string }>;\n  mobile: boolean;\n  platform: string;\n}\n\nfunction getUserAgentData(): NavigatorUAData | undefined {\n  return (navigator as any).userAgentData;\n}\n\nexport function getUserAgentString(): string {\n  if (!Build.isBrowser) {\n    return \"\";\n  }\n\n  const uaData = getUserAgentData();\n\n  return uaData?.brands\n    ? uaData.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \")\n    : navigator.userAgent;\n}\n", "import { getUserAgentString } from \"./browser\";\nimport { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\n// ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\nconst isFirefox = /firefox/i.test(getUserAgentString());\n\ntype ParentElement<T extends HTMLElement = HTMLElement> = T | null;\n\nconst disabledElementToParent: WeakMap<InteractiveHTMLElement, ParentElement> | null = isFirefox\n  ? new WeakMap()\n  : null;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  const { disabled } = interactiveElement;\n\n  if (disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n\n  if (isFirefox) {\n    const currentParent = getParentElement(component);\n    const trackedParent = disabledElementToParent.get(component.el);\n\n    if (trackedParent !== currentParent) {\n      removeInteractionListeners(trackedParent);\n      disabledElementToParent.set(component.el, currentParent);\n    }\n\n    addInteractionListeners(disabledElementToParent.get(component.el));\n    return;\n  }\n\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction getParentElement(component: InteractiveComponent): ParentElement {\n  return (\n    component.el.parentElement || component.el\n  ); /* assume element is host if it has no parent when connected */\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n\n  if (isFirefox) {\n    removeInteractionListeners(disabledElementToParent.get(component.el));\n    disabledElementToParent.delete(component.el);\n    return;\n  }\n\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\n/**\n * This utility helps disable components consistently in Firefox.\n *\n * It needs to be called in `connectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function connectInteractive(component: InteractiveComponent): void {\n  if (!component.disabled || !isFirefox) {\n    return;\n  }\n\n  blockInteraction(component);\n}\n\n/**\n * This utility restores interactivity to disabled components consistently in Firefox.\n *\n * It needs to be called in `disconnectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function disconnectInteractive(component: InteractiveComponent): void {\n  if (!isFirefox) {\n    return;\n  }\n\n  restoreInteraction(component);\n}\n\nexport interface InteractiveContainerOptions extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport function InteractiveContainer(\n  { disabled }: InteractiveContainerOptions,\n  children: VNode[],\n): FunctionalComponent {\n  return (\n    <div class={CSS.container} inert={disabled}>\n      {...children}\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
