import {
  P as P2,
  T,
  b as b2
} from "./chunk-UACJ4BQN.js";
import {
  h as h2
} from "./chunk-CEFCTXUM.js";
import {
  u as u5
} from "./chunk-6GQQIJM7.js";
import {
  C
} from "./chunk-PMFQ2A2V.js";
import {
  t as t2
} from "./chunk-BMTOVJNA.js";
import {
  t
} from "./chunk-CMLG62TA.js";
import {
  n
} from "./chunk-SPU25K6A.js";
import {
  j
} from "./chunk-X5WDIDKE.js";
import {
  i
} from "./chunk-SWNHB34O.js";
import {
  u as u4
} from "./chunk-NGAYW4TW.js";
import {
  h
} from "./chunk-MUMDKJ7Y.js";
import {
  I,
  b
} from "./chunk-IWZSAF74.js";
import {
  E,
  c
} from "./chunk-F2EHRKUX.js";
import {
  y as y2
} from "./chunk-Z3NX5DTX.js";
import {
  f as f2
} from "./chunk-QYC3GV65.js";
import {
  f
} from "./chunk-MBGZKT2Z.js";
import {
  A,
  P,
  d,
  p
} from "./chunk-Z4Y53NDM.js";
import {
  S,
  u3,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  s as s2,
  u2
} from "./chunk-JGDJR5EV.js";
import {
  u
} from "./chunk-QHK5ZYFW.js";
import {
  s
} from "./chunk-7RBRCL6S.js";
import {
  U
} from "./chunk-J2EGIWT6.js";

// node_modules/@arcgis/core/views/3d/layers/FeatureLayerViewPerformanceInfo.js
var t3 = class extends t {
  constructor(e2, t4, s3, r, o, a3) {
    super(e2.usedMemory, e2.displayedFeatures, e2.totalFeatures, e2.maximumFeatures, e2.nodes, e2.core), this.storedFeatures = t4, this.totalVertices = s3, this.partial = r, this.mode = o, this.symbolComplexity = a3;
  }
};

// node_modules/@arcgis/core/views/3d/support/PBFDecoder.js
var n2 = class {
  constructor(e2) {
    this._controller = e2, this._handle = new c2((r) => e2.schedule(r));
  }
  destroy() {
    this._handle.destroy();
  }
  invoke(r, s3) {
    return r.buffer && 0 !== r.buffer.byteLength ? (r.options.sourceSpatialReference && r.options.sourceSpatialReference instanceof f && (r.options = { ...r.options, sourceSpatialReference: r.options.sourceSpatialReference.toJSON() }), this._handle.invoke(r, s3).then((r2) => {
      let s4 = 0, n3 = 0;
      const c3 = f.fromJSON(r2.spatialReference);
      r2.spatialReference = c3;
      const i3 = async (t4) => {
        const l = r2.fields;
        if (l) {
          for (; s4 < l.length; )
            if (l[s4] = y2.fromJSON(l[s4]), s4++, t4.madeProgress())
              return this._controller.reschedule((e2) => i3(e2));
        }
        const p3 = r2.features;
        for (; n3 < p3.length; ) {
          const r3 = p3[n3];
          ++n3, r3.uid = f2.generateUID();
          const s5 = r3.geometry;
          if (null != s5 && (s5.spatialReference = c3, a2(s5), t4.madeProgress()))
            return this._controller.reschedule((e2) => i3(e2));
        }
        return r2;
      };
      return this._controller.schedule((e2) => i3(e2));
    })) : Promise.resolve(null);
  }
};
function a2(e2) {
  switch (e2.type) {
    case "polyline":
      e2.paths.reduce((e3, r) => e3 + r.length, 0) < U && (e2.paths = e2.hasZ || e2.hasM ? e2.paths.map((e3) => e3.map((e4) => [e4[0], e4[1], e4[2]])) : e2.paths.map((e3) => e3.map((e4) => [e4[0], e4[1]])));
      break;
    case "polygon":
      e2.rings.reduce((e3, r) => e3 + r.length, 0) < U && (e2.rings = e2.hasZ || e2.hasM ? e2.rings.map((e3) => e3.map((e4) => [e4[0], e4[1], e4[2]])) : e2.rings.map((e3) => e3.map((e4) => [e4[0], e4[1]])));
  }
}
var c2 = class extends h {
  constructor(e2) {
    super("PBFDecoderWorker", "_parseFeatureQuery", { _parseFeatureQuery: (e3) => [e3.buffer] }, e2);
  }
};

// node_modules/@arcgis/core/views/3d/layers/support/featureTileQuery3D.js
var p2 = class extends S {
  constructor(e2) {
    super(e2);
  }
  get implicitFields() {
    var _a;
    const e2 = (_a = this.layer.outFields) == null ? void 0 : _a.includes("*");
    if (!e2)
      return /* @__PURE__ */ new Set();
    const r = new Set(this.layerView.requiredFields), t4 = new Set(this.layerView.availableFields);
    return u3(t4, r);
  }
  get queryFeaturesDehydrated() {
    var _a;
    const { layer: e2 } = this, r = e2.capabilities, t4 = r && r.query, u6 = t4 && t4.supportsFormatPBF, i3 = e2.parsedUrl;
    if (u6) {
      null == this._decoder && (this._decoder = new n2(this.controller));
      const r2 = { sourceSpatialReference: ((_a = e2.spatialReference) == null ? void 0 : _a.toJSON()) ?? null, applyTransform: true, maxStringAttributeFields: this.implicitFields, maxStringAttributeLength: f3 };
      return (e3, t5) => E(i3, e3, "pbf", this._createRequestOptions(t5)).then((e4) => (s2(t5), null != this._decoder ? this._decoder.invoke({ buffer: e4.data, options: r2 }, t5.signal) : Promise.reject(u2())));
    }
    return (r2, t5) => c(i3, r2, e2.spatialReference, this._createRequestOptions(t5)).then((e3) => b(e3.data, { maxStringAttributeFields: this.implicitFields, maxStringAttributeLength: f3 }));
  }
  queryFeatureCount(e2, r) {
    return this.layer.queryFeatureCount(e2, r);
  }
  destroy() {
    this._decoder = u(this._decoder);
  }
  _createRequestOptions(e2) {
    return { ...e2, query: { ...this.layer.customParameters, token: this.layer.apiKey, ...e2 == null ? void 0 : e2.query } };
  }
};
e([y({ constructOnly: true })], p2.prototype, "layer", void 0), e([y({ constructOnly: true })], p2.prototype, "layerView", void 0), e([y({ constructOnly: true })], p2.prototype, "controller", void 0), e([y({ readOnly: true })], p2.prototype, "implicitFields", null), e([y({ readOnly: true })], p2.prototype, "queryFeaturesDehydrated", null), p2 = e([a("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileServiceQuery3D")], p2);
var d2 = class extends S {
  constructor(e2) {
    super(e2);
  }
  queryFeaturesDehydrated(e2, r) {
    return this.layer.queryFeatures(e2, r);
  }
  queryFeatureCount(e2, r) {
    return this.layer.queryFeatureCount(e2, r);
  }
};
e([y({ constructOnly: true })], d2.prototype, "layer", void 0), e([y({ readOnly: true })], d2.prototype, "queryFeaturesDehydrated", null), d2 = e([a("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileServiceMeshQuery3D")], d2);
var m = class extends S {
  constructor(e2) {
    super(e2);
  }
  queryFeaturesDehydrated(e2, r) {
    return this.layer.queryFeatures(e2, r);
  }
};
e([y({ constructOnly: true })], m.prototype, "layer", void 0), m = e([a("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileOGCServiceQuery3D")], m);
var h3 = class extends S {
  constructor(e2) {
    super(e2);
  }
  queryFeaturesDehydrated(e2, r) {
    return this.source.queryFeaturesJSON(e2, r).then(b, (t4) => {
      if (t4 && "query-features-json:unsupported" === t4.name)
        return this.layer.queryFeatures(e2, r);
      throw t4;
    });
  }
  queryFeatureCount(e2, r) {
    return this.layer.queryFeatureCount(e2, r);
  }
};
function F(e2, r) {
  const { layer: t4 } = e2;
  return "feature" === t4.type && "feature-layer" === t4.source.type ? null != t4.infoFor3D ? new d2({ layer: t4 }) : new p2({ layer: t4, layerView: e2, controller: r }) : "feature" === t4.type && "memory" === t4.source.type || "csv" === t4.type || "geojson" === t4.type || "oriented-imagery" === t4.type || "wfs" === t4.type ? new h3({ layer: t4, source: t4.source }) : "ogc-feature" === t4.type ? new m({ layer: t4 }) : null;
}
e([y({ constructOnly: true })], h3.prototype, "layer", void 0), e([y({ constructOnly: true })], h3.prototype, "source", void 0), h3 = e([a("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileClientQuery3D")], h3);
var f3 = 1024;

// node_modules/@arcgis/core/views/3d/layers/support/FeatureTileFetcher3DLayerViewContext.js
var i2 = class {
  constructor(e2) {
    this._memoryCache = null, this._capabilities = null;
    const r = e2.layerView.layer;
    this._layerView = e2.layerView, this.objectIdField = r.objectIdField, this.globalIdField = "globalIdField" in r ? r.globalIdField : null, this._returnZ = e2.returnZ, this._returnM = e2.returnM;
    const i3 = this._layerView.view.resourceController;
    this.query = F(this._layerView, i3.normal), i3 && this._memoryCacheEnabled && (this._memoryCache = i3.memoryController.newCache(`fl-${r.uid}`));
  }
  get _memoryCacheEnabled() {
    switch (this._layerView.layer.source.type) {
      case "feature-layer":
      case "ogc-feature":
      case "oriented-imagery":
        return true;
      case "csv":
      case "geojson":
      case "memory":
      case "wfs":
        return false;
    }
  }
  destroy() {
    this._memoryCache = u(this._memoryCache), this.query.destroy();
  }
  createQuery() {
    const e2 = this._layerView.layer.createQuery();
    return e2.outFields = this._layerView.availableFields, e2.returnZ = this._returnZ, e2.returnM = this._returnM, e2.outSpatialReference = this.tilingScheme.spatialReference, e2;
  }
  get memoryCache() {
    return this._memoryCache;
  }
  get viewingMode() {
    return this._layerView.view.state.viewingMode;
  }
  get tilingScheme() {
    return this._layerView.view.featureTiles.tilingScheme;
  }
  get scheduler() {
    const e2 = this._layerView.view.resourceController;
    return e2 ? e2.scheduler : null;
  }
  get geometryType() {
    return this._layerView.layer.geometryType;
  }
  get fullExtent() {
    return this._layerView.layer.fullExtent;
  }
  get tileMaxRecordCount() {
    return this._layerView.layer.capabilities.query.tileMaxRecordCount;
  }
  get maxRecordCount() {
    return this._layerView.layer.capabilities.query.maxRecordCount;
  }
  get capabilities() {
    return null != this._capabilities || (this._capabilities = P2(this._layerView.layer)), this._capabilities;
  }
  logFetchError(e2, r) {
    e2.error("#fetchTile()", this._layerView.layer, (r == null ? void 0 : r.message) ?? r);
  }
};

// node_modules/@arcgis/core/views/3d/layers/FeatureLayerViewBase3D.js
var M = class extends i(b2(j(n(u4)))) {
  constructor(e2) {
    super(e2), this._controllerTotal = 0, this._processorTotal = 0, this._needsRefresh = false, this.suspendResumeExtentMode = "data";
  }
  initialize() {
    this.addHandles([d(() => this._updatingRequiredFieldsPromise, (e2) => this._updatingHandles.addPromise(e2), A), d(() => ({ controller: this.controller, suspended: this.suspended }), ({ controller: e2, suspended: r }) => {
      e2 && !r && this._needsRefresh && (e2.refetch(), this._needsRefresh = false);
    })]);
  }
  destroy() {
    this._updatingHandles.removeAll(), this._fetcherContext = u(this._fetcherContext);
  }
  get maximumNumberOfFeatures() {
    var _a;
    return ((_a = this.controller) == null ? void 0 : _a.maximumNumberOfFeatures) ?? this._get("maximumNumberOfFeatures");
  }
  set maximumNumberOfFeatures(e2) {
    this._set("maximumNumberOfFeatures", e2), this.controller && (this.controller.maximumNumberOfFeatures = e2);
  }
  get maximumNumberOfFeaturesExceeded() {
    return !!this.controller && !(this.suspended || !this.controller.maximumNumberOfFeaturesExceeded);
  }
  get updatingProgressValue() {
    var _a, _b;
    let e2 = 0;
    if ((_a = this.controller) == null ? void 0 : _a.updating) {
      const r2 = this.controller.updatingRemaining, t4 = Math.max(this.controller.updatingTotal, this._controllerTotal);
      t4 > 0 && (e2 = (t4 - r2) / t4, this._controllerTotal = t4);
    }
    let r = 0;
    if ((_b = this.processor) == null ? void 0 : _b.updating) {
      const e3 = this.processor.updatingRemaining, t4 = Math.max(e3, this._processorTotal);
      t4 > 0 && (r = (t4 - e3) / t4, this._processorTotal = t4);
    }
    return 0.5 * (e2 + r);
  }
  get updatePolicy() {
    if (!this.controller)
      return C.ASYNC;
    switch (this.controller.mode) {
      case "snapshot": {
        const e2 = j2.get(this.layer.geometryType);
        return null == e2 || this.controller.serviceDataCount > e2 ? C.ASYNC : C.SYNC;
      }
      case "tiles":
        return C.ASYNC;
    }
  }
  get hasZ() {
    const e2 = this.layer, r = e2.capabilities && e2.capabilities.data;
    return !(!r || !r.supportsZ) && ("returnZ" in e2 && null != e2.returnZ ? e2.returnZ : r.supportsZ);
  }
  get hasM() {
    const e2 = this.layer, r = e2.capabilities && e2.capabilities.data;
    return !(!r || !r.supportsM) && ("returnM" in e2 && null != e2.returnM && e2.returnM);
  }
  setVisibility(e2, r) {
    var _a;
    (_a = this.processor) == null ? void 0 : _a.setObjectIdVisibility(e2, r);
  }
  createQuery() {
    return super.createQuery();
  }
  queryFeatures(e2, r) {
    const t4 = () => super.queryFeatures(e2, r);
    return "mesh" === this.layer.geometryType ? this._queryFeaturesMesh(this._ensureQuery(e2), t4) : t4();
  }
  beforeSetController(e2) {
    e2.maximumNumberOfFeatures = this.maximumNumberOfFeatures;
  }
  createController() {
    this._fetcherContext = new i2({ layerView: this, returnZ: this.hasZ, returnM: this.hasM });
    const e2 = new T({ layerView: this, context: this._fetcherContext, graphics: new h2(), extent: this.clippingExtent });
    return this._updatingHandles.add(() => e2.serviceDataExtent, (e3) => {
      this.processor && (this.processor.dataExtent = e3);
    }, P), this.addHandles(d(() => this.suspended, (r) => {
      r ? e2.suspend() : e2.resume();
    }, A)), this._updatingHandles.add(() => {
      var _a;
      return (_a = this.processor) == null ? void 0 : _a.displayFeatureLimit;
    }, (r) => e2.displayFeatureLimit = r, P), this.addHandles(p(() => !this.updating, () => {
      this._controllerTotal = 0, this._processorTotal = 0;
    })), e2;
  }
  async doRefresh(e2) {
    const { controller: r, processor: t4, suspended: s3 } = this;
    e2 && r && (s3 ? this._needsRefresh = true : (r.refetch(), this._needsRefresh = false)), t4.refreshFilter();
  }
  _popupFeatureHasRequiredFields(e2, r) {
    if (!super._popupFeatureHasRequiredFields(e2, r))
      return false;
    const t4 = I(e2, this.layer.objectIdField);
    if (null == t4)
      return true;
    const s3 = this.controller.getMissingAttributesForFeature(t4);
    if (null == s3)
      return true;
    for (const o of r)
      if (s3.has(o))
        return false;
    return true;
  }
  get usedMemory() {
    var _a, _b;
    return (((_a = this.processor) == null ? void 0 : _a.usedMemory) ?? 0) + (((_b = this.controller) == null ? void 0 : _b.memoryForUnusedFeatures) ?? 0);
  }
  get unloadedMemory() {
    var _a, _b, _c, _d;
    const e2 = ((_a = this.processor) == null ? void 0 : _a.unprocessedMemoryEstimate) ?? 0, r = ((_b = this.controller) == null ? void 0 : _b.expectedFeatureDiff) ?? 0, t4 = ((_c = this.processor) == null ? void 0 : _c.loadedFeatures) ?? 0, s3 = t4 + r > 0 ? t4 / (t4 + r) : 1;
    return e2 + r * (((_d = this.processor) == null ? void 0 : _d.usedMemoryPerFeature) ?? 0) * s3;
  }
  get ignoresMemoryFactor() {
    var _a;
    return (_a = this.controller) == null ? void 0 : _a.hasMaximumNumberOfFeaturesOverride;
  }
  async _queryFeaturesMesh(e2, r) {
    await this._validateQueryFeaturesMesh(e2);
    const t4 = await r();
    if ((e2 == null ? void 0 : e2.outStatistics) || null == this.graphics3DProcessor)
      return t4;
    const s3 = this.layer.objectIdField, o = this.graphics3DProcessor.graphics3DGraphicsByObjectID, i3 = [];
    for (const a3 of t4.features)
      if (a3.geometry) {
        const e3 = o.get(a3.attributes[s3]);
        e3 && (a3.geometry = u5(e3.graphic.geometry), i3.push(a3));
      } else
        i3.push(a3);
    return t4.features = i3, t4;
  }
  async _validateQueryFeaturesMesh(e2) {
    if (!e2)
      return;
    const t4 = (e3) => {
      throw new s("feature-layer-view:unsupported-query", `Queries on Mesh feature collection layers do not support '${e3}'`);
    }, s3 = ["quantizationParameters", "geometryPrecision", "maxAllowableOffset"];
    for (const r of s3)
      null != e2[r] && t4(r);
    "returnM" in e2 && e2.returnM && t4("returnM"), "returnCentroid" in e2 && e2.returnCentroid && t4("returnCentroid"), null == e2.outSpatialReference || e2.outSpatialReference.equals(this.view.spatialReference) || t4("outSpatialReference");
  }
  get performanceInfo() {
    var _a, _b, _c, _d, _e, _f;
    const e2 = (_a = this.controller) == null ? void 0 : _a.displayFeatureLimit, r = null != e2 ? e2.averageSymbolComplexity : void 0, t4 = null != r ? `f:${r.verticesPerFeature},v:${r.verticesPerCoordinate}` : "n/a";
    return new t3(super.performanceInfo, ((_c = (_b = this.controller) == null ? void 0 : _b.performanceInfo) == null ? void 0 : _c.storedFeatures) ?? 0, ((_e = (_d = this.controller) == null ? void 0 : _d.performanceInfo) == null ? void 0 : _e.totalVertices) ?? 0, this.maximumNumberOfFeaturesExceeded, ((_f = this.controller) == null ? void 0 : _f.mode) ?? "n/a", t4);
  }
  get test() {
    var _a;
    return { updatePolicy: this.updatePolicy, controller: this.controller, loadedGraphics: (_a = this.controller) == null ? void 0 : _a.graphics, ...this.getTest() };
  }
};
e([y()], M.prototype, "layer", void 0), e([y()], M.prototype, "controller", void 0), e([y()], M.prototype, "_controllerTotal", void 0), e([y()], M.prototype, "_processorTotal", void 0), e([y()], M.prototype, "_needsRefresh", void 0), e([y()], M.prototype, "maximumNumberOfFeatures", null), e([y()], M.prototype, "maximumNumberOfFeaturesExceeded", null), e([y(t2)], M.prototype, "updatingProgress", void 0), e([y({ readOnly: true })], M.prototype, "updatingProgressValue", null), e([y({ readOnly: true })], M.prototype, "updatePolicy", null), e([y({ readOnly: true })], M.prototype, "hasZ", null), e([y({ readOnly: true })], M.prototype, "hasM", null), e([y()], M.prototype, "suspendResumeExtentMode", void 0), M = e([a("esri.views.3d.layers.FeatureLayerViewBase3D")], M);
var j2 = /* @__PURE__ */ new Map([["point", 5e3], ["polygon", 500], ["polyline", 1e3]]);
var w = M;

export {
  w
};
//# sourceMappingURL=chunk-7WLETYGH.js.map
