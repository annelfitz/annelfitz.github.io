import {
  m as m3,
  s as s3
} from "./chunk-UYDBB2JF.js";
import {
  n as n4,
  p as p3
} from "./chunk-J6T3FJLS.js";
import {
  a as a2,
  m as m4,
  p,
  y as y3
} from "./chunk-67A4RFMD.js";
import {
  r
} from "./chunk-A64EK7QM.js";
import {
  $
} from "./chunk-676ANOCK.js";
import {
  We
} from "./chunk-EWD7I5UU.js";
import {
  s as s4
} from "./chunk-IHQNQQJC.js";
import {
  u
} from "./chunk-TUVEYM7U.js";
import {
  p as p2
} from "./chunk-OHYLFFUW.js";
import {
  Z
} from "./chunk-QNG4TY7L.js";
import {
  b
} from "./chunk-W5ALAOW2.js";
import {
  f as f2
} from "./chunk-QYC3GV65.js";
import {
  P
} from "./chunk-ETHGDNE6.js";
import {
  m as m2
} from "./chunk-ZAM62XN5.js";
import {
  w as w2,
  y as y2
} from "./chunk-RKVEKQ5O.js";
import {
  h
} from "./chunk-USOPZ2Q6.js";
import {
  s as s2
} from "./chunk-QX66UTIR.js";
import {
  x
} from "./chunk-X7VSXJWW.js";
import {
  o as o2
} from "./chunk-TGXFDJCS.js";
import {
  m
} from "./chunk-ONK5AE7R.js";
import {
  n as n3
} from "./chunk-Z2PDA67N.js";
import {
  w
} from "./chunk-IZKCZQUY.js";
import {
  f
} from "./chunk-MBGZKT2Z.js";
import {
  o
} from "./chunk-YOPMY6TS.js";
import {
  n as n2
} from "./chunk-RUN6MNXL.js";
import {
  U
} from "./chunk-SAYWXQVM.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  T,
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingSublayer.js
var n5 = class extends s2(m2) {
  constructor(e2) {
    super(e2), this.title = "", this.id = -1, this.modelName = null, this.isEmpty = null, this.legendEnabled = true, this.visible = true, this.opacity = 1;
  }
  readTitle(e2, o3) {
    return "string" == typeof o3.alias ? o3.alias : "string" == typeof o3.name ? o3.name : "";
  }
  readIdOnlyOnce(e2) {
    return -1 !== this.id ? this.id : "number" == typeof e2 ? e2 : -1;
  }
};
e([y({ type: String, json: { origins: { "web-scene": { write: true }, "portal-item": { write: true } } } })], n5.prototype, "title", void 0), e([o("service", "title", ["alias", "name"])], n5.prototype, "readTitle", null), e([y()], n5.prototype, "layer", void 0), e([y({ type: T, readOnly: true, json: { read: false, write: { ignoreOrigin: true } } })], n5.prototype, "id", void 0), e([o("service", "id")], n5.prototype, "readIdOnlyOnce", null), e([y(w2(String))], n5.prototype, "modelName", void 0), e([y(w2(Boolean))], n5.prototype, "isEmpty", void 0), e([y({ type: Boolean, nonNullable: true })], n5.prototype, "legendEnabled", void 0), e([y({ type: Boolean, json: { name: "visibility", write: true } })], n5.prototype, "visible", void 0), e([y({ type: Number, json: { write: true } })], n5.prototype, "opacity", void 0), n5 = e([a("esri.layers.buildingSublayers.BuildingSublayer")], n5);
var a3 = n5;

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingComponentSublayer.js
var E = s4();
var A = class extends m3(m.LoadableMixin(n3(a3))) {
  constructor(e2) {
    super(e2), this.type = "building-component", this.nodePages = null, this.materialDefinitions = [], this.textureSetDefinitions = [], this.geometryDefinitions = [], this.indexInfo = null, this.serviceUpdateTimeStamp = null, this.store = null, this.attributeStorageInfo = [], this.fields = [], this.associatedLayer = null, this.outFields = null, this.listMode = "show", this.renderer = null, this.definitionExpression = null, this.popupEnabled = true, this.popupTemplate = null, this.layerType = "3d-object";
  }
  get parsedUrl() {
    var _a, _b;
    return this.layer ? { path: `${(_a = this.layer.parsedUrl) == null ? void 0 : _a.path}/sublayers/${this.id}`, query: (_b = this.layer.parsedUrl) == null ? void 0 : _b.query } : { path: "" };
  }
  get fieldsIndex() {
    return new Z(this.fields);
  }
  readAssociatedLayer(e2, r2) {
    const t = this.layer.associatedFeatureServiceItem, o3 = r2.associatedLayerID;
    return null != t && "number" == typeof o3 ? new We({ portalItem: t, customParameters: this.customParameters, layerId: o3 }) : null;
  }
  get objectIdField() {
    if (null != this.fields) {
      for (const e2 of this.fields)
        if ("oid" === e2.type)
          return e2.name;
    }
    return null;
  }
  get displayField() {
    return null != this.associatedLayer ? this.associatedLayer.displayField : void 0;
  }
  get apiKey() {
    return this.layer.apiKey;
  }
  get customParameters() {
    return this.layer.customParameters;
  }
  get fullExtent() {
    return this.layer.fullExtent;
  }
  get spatialReference() {
    return this.layer.spatialReference;
  }
  get version() {
    return this.layer.version;
  }
  get elevationInfo() {
    return this.layer.elevationInfo;
  }
  get minScale() {
    return this.layer.minScale;
  }
  get maxScale() {
    return this.layer.maxScale;
  }
  get effectiveScaleRange() {
    return this.layer.effectiveScaleRange;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  load(e2) {
    const r2 = null != e2 ? e2.signal : null, t = this._fetchService(r2).then(() => {
      this.indexInfo = r(this.parsedUrl.path, this.rootNode, this.nodePages, this.customParameters, this.apiKey, n.getLogger(this), r2);
    });
    return this.addResolvingPromise(t), Promise.resolve(this);
  }
  createPopupTemplate(e2) {
    return p2(this, e2);
  }
  async _fetchService(e2) {
    const r2 = (await U(this.parsedUrl.path, { query: { f: "json", ...this.customParameters, token: this.apiKey }, responseType: "json", signal: e2 })).data;
    this.read(r2, { origin: "service", url: this.parsedUrl });
  }
  getField(e2) {
    return this.fieldsIndex.get(e2);
  }
  getFieldDomain(e2, r2) {
    var _a, _b, _c;
    const t = (_b = (_a = this.getFeatureType(r2 == null ? void 0 : r2.feature)) == null ? void 0 : _a.domains) == null ? void 0 : _b[e2];
    return t && "inherited" !== t.type ? t : ((_c = this.getField(e2)) == null ? void 0 : _c.domain) ?? null;
  }
  getFeatureType(e2) {
    return e2 && null != this.associatedLayer ? this.associatedLayer.getFeatureType(e2) : null;
  }
  get types() {
    return null != this.associatedLayer ? this.associatedLayer.types ?? [] : [];
  }
  get typeIdField() {
    return null != this.associatedLayer ? this.associatedLayer.typeIdField : null;
  }
  get geometryType() {
    return "3d-object" === this.layerType ? "mesh" : "point";
  }
  get profile() {
    return "3d-object" === this.layerType ? "mesh-pyramids" : "points";
  }
  get capabilities() {
    const e2 = null != this.associatedLayer && this.associatedLayer.capabilities ? this.associatedLayer.capabilities : s3, { query: r2, data: { supportsZ: t, supportsM: o3, isVersioned: s5 } } = e2;
    return { query: r2, data: { supportsZ: t, supportsM: o3, isVersioned: s5 } };
  }
  createQuery() {
    const e2 = new b();
    return "mesh" !== this.geometryType && (e2.returnGeometry = true, e2.returnZ = true), e2.where = this.definitionExpression || "1=1", e2.sqlFormat = "standard", e2;
  }
  queryExtent(e2, r2) {
    return this._getAssociatedLayerForQuery().then((t) => t.queryExtent(e2 || this.createQuery(), r2));
  }
  queryFeatureCount(e2, r2) {
    return this._getAssociatedLayerForQuery().then((t) => t.queryFeatureCount(e2 || this.createQuery(), r2));
  }
  queryFeatures(e2, r2) {
    return this._getAssociatedLayerForQuery().then((t) => t.queryFeatures(e2 || this.createQuery(), r2)).then((e3) => {
      if (e3 == null ? void 0 : e3.features)
        for (const r3 of e3.features)
          r3.layer = this.layer, r3.sourceLayer = this;
      return e3;
    });
  }
  queryObjectIds(e2, r2) {
    return this._getAssociatedLayerForQuery().then((t) => t.queryObjectIds(e2 || this.createQuery(), r2));
  }
  async queryCachedAttributes(e2, r2) {
    const t = x(this.fieldsIndex, await n4(this, p3(this)));
    return $(this.parsedUrl.path, this.attributeStorageInfo, e2, r2, t, this.apiKey, this.customParameters);
  }
  async queryCachedFeature(e2, t) {
    const o3 = await this.queryCachedAttributes(e2, [t]);
    if (!o3 || 0 === o3.length)
      throw new s("scenelayer:feature-not-in-cached-data", "Feature not found in cached data");
    return new f2({ attributes: o3[0], layer: this, sourceLayer: this });
  }
  getFieldUsageInfo(e2) {
    return this.fieldsIndex.has(e2) ? { supportsLabelingInfo: false, supportsRenderer: false, supportsPopupTemplate: false, supportsLayerQuery: false } : { supportsLabelingInfo: false, supportsRenderer: true, supportsPopupTemplate: true, supportsLayerQuery: null != this.associatedLayer };
  }
  _getAssociatedLayerForQuery() {
    const e2 = this.associatedLayer;
    return null != e2 && e2.loaded ? Promise.resolve(e2) : this._loadAssociatedLayerForQuery();
  }
  async _loadAssociatedLayerForQuery() {
    if (await this.load(), null == this.associatedLayer)
      throw new s("buildingscenelayer:query-not-available", "BuildingSceneLayer component layer queries are not available without an associated feature layer", { layer: this });
    try {
      await this.associatedLayer.load();
    } catch (e2) {
      throw new s("buildingscenelayer:query-not-available", "BuildingSceneLayer associated feature layer could not be loaded", { layer: this, error: e2 });
    }
    return this.associatedLayer;
  }
};
e([y({ readOnly: true })], A.prototype, "parsedUrl", null), e([y({ type: p, readOnly: true })], A.prototype, "nodePages", void 0), e([y({ type: [a2], readOnly: true })], A.prototype, "materialDefinitions", void 0), e([y({ type: [y3], readOnly: true })], A.prototype, "textureSetDefinitions", void 0), e([y({ type: [m4], readOnly: true })], A.prototype, "geometryDefinitions", void 0), e([y({ readOnly: true })], A.prototype, "serviceUpdateTimeStamp", void 0), e([y({ readOnly: true })], A.prototype, "store", void 0), e([y({ type: String, readOnly: true, json: { read: { source: "store.rootNode" } } })], A.prototype, "rootNode", void 0), e([y({ readOnly: true })], A.prototype, "attributeStorageInfo", void 0), e([y(E.fields)], A.prototype, "fields", void 0), e([y({ readOnly: true })], A.prototype, "fieldsIndex", null), e([y({ readOnly: true, type: We })], A.prototype, "associatedLayer", void 0), e([o("service", "associatedLayer", ["associatedLayerID"])], A.prototype, "readAssociatedLayer", null), e([y(E.outFields)], A.prototype, "outFields", void 0), e([y({ type: String, readOnly: true })], A.prototype, "objectIdField", null), e([y({ readOnly: true, type: String, json: { read: false } })], A.prototype, "displayField", null), e([y({ readOnly: true, type: String })], A.prototype, "apiKey", null), e([y({ readOnly: true, type: String })], A.prototype, "customParameters", null), e([y({ readOnly: true, type: w })], A.prototype, "fullExtent", null), e([y({ readOnly: true, type: f })], A.prototype, "spatialReference", null), e([y({ readOnly: true })], A.prototype, "version", null), e([y({ readOnly: true, type: h })], A.prototype, "elevationInfo", null), e([y({ readOnly: true, type: Number })], A.prototype, "minScale", null), e([y({ readOnly: true, type: Number })], A.prototype, "maxScale", null), e([y({ readOnly: true, type: Number })], A.prototype, "effectiveScaleRange", null), e([y({ type: ["hide", "show"], json: { write: true } })], A.prototype, "listMode", void 0), e([y({ types: u, json: { origins: { service: { read: { source: "drawingInfo.renderer" } } }, name: "layerDefinition.drawingInfo.renderer", write: true }, value: null })], A.prototype, "renderer", void 0), e([y({ type: String, json: { origins: { service: { read: false, write: false } }, name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], A.prototype, "definitionExpression", void 0), e([y(y2)], A.prototype, "popupEnabled", void 0), e([y({ type: P, json: { read: { source: "popupInfo" }, write: { target: "popupInfo" } } })], A.prototype, "popupTemplate", void 0), e([y({ readOnly: true, type: String, json: { origins: { service: { read: { source: "store.normalReferenceFrame" } } }, read: false } })], A.prototype, "normalReferenceFrame", void 0), e([y({ readOnly: true, json: { read: false } })], A.prototype, "defaultPopupTemplate", null), e([y()], A.prototype, "types", null), e([y()], A.prototype, "typeIdField", null), e([y({ json: { write: false } }), o2(new n2({ "3DObject": "3d-object", Point: "point" }))], A.prototype, "layerType", void 0), e([y()], A.prototype, "geometryType", null), e([y()], A.prototype, "profile", null), e([y({ readOnly: true, json: { read: false } })], A.prototype, "capabilities", null), A = e([a("esri.layers.buildingSublayers.BuildingComponentSublayer")], A);
var _ = A;

export {
  a3 as a,
  _
};
//# sourceMappingURL=chunk-5Y24AKE7.js.map
