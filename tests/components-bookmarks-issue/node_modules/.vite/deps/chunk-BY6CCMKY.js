import {
  w
} from "./chunk-7WLETYGH.js";
import {
  a as a2
} from "./chunk-JW7VBMHD.js";
import {
  O
} from "./chunk-HLDUDRTD.js";
import {
  F
} from "./chunk-2ICUS4HL.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  s
} from "./chunk-7RBRCL6S.js";

// node_modules/@arcgis/core/views/3d/layers/FeatureLayerView3D.js
var l = class extends w {
  constructor() {
    super(...arguments), this.type = "feature-3d", this.direct3DObjectFeatureLayerDisplayEnabled = a2();
  }
  initialize() {
    var _a;
    const { layer: e2, view: t } = this;
    ((_a = O(e2)) == null ? void 0 : _a.operations.supportsQuery) || this.addResolvingPromise(Promise.reject(new s("featurelayerview:query-not-supported", "layer view requires a layer with query capability", { layer: e2 }))), null != e2.infoFor3D && (this.direct3DObjectFeatureLayerDisplayEnabled ? this._set("suspendResumeExtentMode", "computed") : this.addResolvingPromise(Promise.reject(new s("featurelayerview3d:unsupported-geometry-type", `Unsupported geometry type ${e2.geometryType}`)))), "mesh" !== e2.geometryType || F(e2.spatialReference, t.spatialReference) || this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible", "The spatial references of the feature layer is incompatible with the spatial reference of the view")));
  }
  get featureSpatialReference() {
    var _a, _b;
    return (_b = (_a = this.view.featureTiles) == null ? void 0 : _a.tilingScheme) == null ? void 0 : _b.spatialReference;
  }
};
e([y({ constructOnly: true })], l.prototype, "direct3DObjectFeatureLayerDisplayEnabled", void 0), e([y()], l.prototype, "layer", void 0), l = e([a("esri.views.3d.layers.FeatureLayerView3D")], l);
var c = l;

export {
  c
};
//# sourceMappingURL=chunk-BY6CCMKY.js.map
