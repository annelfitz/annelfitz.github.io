import {
  a as a4
} from "./chunk-KHG5GOTV.js";
import {
  o as o2
} from "./chunk-QGAECZ2U.js";
import {
  i
} from "./chunk-SCRCLNT5.js";
import {
  f as f4
} from "./chunk-7UUNSIMA.js";
import "./chunk-GMRQGGML.js";
import "./chunk-BYK4ZOU2.js";
import {
  f as f3
} from "./chunk-QYC3GV65.js";
import {
  P
} from "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import {
  l
} from "./chunk-CYVKDANA.js";
import {
  j
} from "./chunk-4ZLXDMI5.js";
import {
  t as t2
} from "./chunk-QG73ZMDG.js";
import {
  f as f2
} from "./chunk-EMYOYGGK.js";
import {
  n as n2
} from "./chunk-6PMFOUWZ.js";
import "./chunk-3KPZ3BQR.js";
import "./chunk-5JYVZQZR.js";
import {
  t
} from "./chunk-UUG4W2PI.js";
import {
  u
} from "./chunk-WW22JHXA.js";
import {
  S as S2,
  m
} from "./chunk-ZAM62XN5.js";
import {
  c,
  d as d3
} from "./chunk-RKVEKQ5O.js";
import "./chunk-P7J4JFEH.js";
import {
  b
} from "./chunk-G7FOE26O.js";
import "./chunk-USOPZ2Q6.js";
import "./chunk-S5I4QKJD.js";
import "./chunk-LSM34QAB.js";
import "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import {
  s as s3
} from "./chunk-QX66UTIR.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-AKLOTDO2.js";
import "./chunk-6AQIVLDN.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-LBXFRGMS.js";
import {
  C as C2
} from "./chunk-VTH4DAHQ.js";
import "./chunk-HLDUDRTD.js";
import "./chunk-SLQA5YBV.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import {
  w
} from "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import {
  f
} from "./chunk-MBGZKT2Z.js";
import {
  G
} from "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import {
  o
} from "./chunk-YOPMY6TS.js";
import {
  r as r2
} from "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import {
  s as s2
} from "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import {
  n
} from "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import {
  Et,
  I,
  S,
  U,
  x
} from "./chunk-SAYWXQVM.js";
import {
  g
} from "./chunk-SBL4URUW.js";
import {
  C,
  d as d2,
  v
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  T,
  a3,
  d
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  a as a2
} from "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  a,
  r,
  s
} from "./chunk-7RBRCL6S.js";
import {
  k
} from "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/layers/support/WMSSublayer.js
var h;
var c2 = 0;
var m2 = h = class extends s3(m) {
  constructor(e2) {
    super(e2), this.description = null, this.dimensions = null, this.fullExtent = null, this.fullExtents = null, this.legendUrl = null, this.legendEnabled = true, this.layer = null, this.maxScale = 0, this.minScale = 0, this.name = null, this.parent = null, this.popupEnabled = false, this.queryable = false, this.sublayers = null, this.spatialReferences = null, this.title = null, this.addHandles([v(() => this.sublayers, "after-add", ({ item: e3 }) => {
      e3.parent = this, e3.layer = this.layer;
    }, C), v(() => this.sublayers, "after-remove", ({ item: e3 }) => {
      e3.layer = e3.parent = null;
    }, C), d2(() => this.sublayers, (e3, t3) => {
      if (t3)
        for (const r3 of t3)
          r3.layer = r3.parent = null;
      if (e3)
        for (const r3 of e3)
          r3.parent = this, r3.layer = this.layer;
    }, C), d2(() => this.layer, (e3) => {
      if (this.sublayers)
        for (const t3 of this.sublayers)
          t3.layer = e3;
    }, C)]);
  }
  get id() {
    const e2 = this._get("id");
    return e2 ?? c2++;
  }
  set id(e2) {
    this._set("id", e2);
  }
  readLegendUrl(e2, t3) {
    return t3.legendUrl ?? t3.legendURL ?? null;
  }
  get effectiveScaleRange() {
    const { minScale: e2, maxScale: t3 } = this;
    return { minScale: e2, maxScale: t3 };
  }
  castSublayers(e2) {
    return d(V.ofType(h), e2);
  }
  set visible(e2) {
    this._setAndNotifyLayer("visible", e2);
  }
  clone() {
    var _a, _b, _c;
    const e2 = new h();
    return this.hasOwnProperty("description") && (e2.description = this.description), this.hasOwnProperty("fullExtent") && (e2.fullExtent = this.fullExtent.clone()), this.hasOwnProperty("fullExtents") && (e2.fullExtents = ((_a = this.fullExtents) == null ? void 0 : _a.map((e3) => e3.clone())) ?? null), this.hasOwnProperty("legendUrl") && (e2.legendUrl = this.legendUrl), this.hasOwnProperty("legendEnabled") && (e2.legendEnabled = this.legendEnabled), this.hasOwnProperty("layer") && (e2.layer = this.layer), this.hasOwnProperty("name") && (e2.name = this.name), this.hasOwnProperty("parent") && (e2.parent = this.parent), this.hasOwnProperty("queryable") && (e2.queryable = this.queryable), this.hasOwnProperty("sublayers") && (e2.sublayers = (_b = this.sublayers) == null ? void 0 : _b.map((e3) => e3.clone())), this.hasOwnProperty("spatialReferences") && (e2.spatialReferences = (_c = this.spatialReferences) == null ? void 0 : _c.map((e3) => e3)), this.hasOwnProperty("visible") && (e2.visible = this.visible), this.hasOwnProperty("title") && (e2.title = this.title), e2;
  }
  _setAndNotifyLayer(e2, t3) {
    const r3 = this.layer;
    this._get(e2) !== t3 && (this._set(e2, t3), r3 && r3.emit("wms-sublayer-update", { propertyName: e2, id: this.id }));
  }
};
e([y()], m2.prototype, "description", void 0), e([y({ readOnly: true })], m2.prototype, "dimensions", void 0), e([y({ type: w, json: { name: "extent" } })], m2.prototype, "fullExtent", void 0), e([y()], m2.prototype, "fullExtents", void 0), e([y({ type: Number, json: { write: { enabled: false, overridePolicy: () => ({ ignoreOrigin: true, enabled: true }) } } })], m2.prototype, "id", null), e([y({ type: String, json: { name: "legendUrl", write: { ignoreOrigin: true } } })], m2.prototype, "legendUrl", void 0), e([o("legendUrl", ["legendUrl", "legendURL"])], m2.prototype, "readLegendUrl", null), e([y({ type: Boolean, json: { name: "showLegend", origins: { "web-map": { read: false, write: false }, "web-scene": { read: false, write: false } } } })], m2.prototype, "legendEnabled", void 0), e([y()], m2.prototype, "layer", void 0), e([y()], m2.prototype, "maxScale", void 0), e([y()], m2.prototype, "minScale", void 0), e([y({ readOnly: true })], m2.prototype, "effectiveScaleRange", null), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], m2.prototype, "name", void 0), e([y()], m2.prototype, "parent", void 0), e([y({ type: Boolean, json: { read: { source: "showPopup" }, write: { ignoreOrigin: true, target: "showPopup" } } })], m2.prototype, "popupEnabled", void 0), e([y({ type: Boolean, json: { write: { ignoreOrigin: true } } })], m2.prototype, "queryable", void 0), e([y()], m2.prototype, "sublayers", void 0), e([s2("sublayers")], m2.prototype, "castSublayers", null), e([y({ type: [Number], json: { read: { source: "spatialReferences" } } })], m2.prototype, "spatialReferences", void 0), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], m2.prototype, "title", void 0), e([y({ type: Boolean, value: true, json: { read: { source: "defaultVisibility" } } })], m2.prototype, "visible", null), m2 = h = e([a3("esri.layers.support.WMSSublayer")], m2);
var f5 = m2;

// node_modules/@arcgis/core/layers/support/wmsUtils.js
var o3 = { 84: 4326, 83: 4269, 27: 4267 };
function l2(n3) {
  if (!n3)
    return null;
  const i2 = { idCounter: -1 };
  if ("string" == typeof n3) {
    n3 = new DOMParser().parseFromString(n3, "text/xml");
  }
  const s4 = n3.documentElement;
  if ("ServiceExceptionReport" === s4.nodeName) {
    const e2 = Array.prototype.slice.call(s4.childNodes).map((e3) => e3.textContent).join("\r\n");
    throw new s("wmslayer:wms-capabilities-xml-is-not-valid", "The server returned errors when the WMS capabilities were requested.", e2);
  }
  const o4 = d4("Capability", s4), l3 = d4("Service", s4), a6 = o4 && d4("Request", o4);
  if (!o4 || !l3 || !a6)
    return null;
  const m4 = d4("Layer", o4);
  if (!m4)
    return null;
  const f7 = "WMS_Capabilities" === s4.nodeName || "WMT_MS_Capabilities" === s4.nodeName ? s4.getAttribute("version") : "1.3.0", p2 = h2("Title", l3, "") || h2("Name", l3, ""), x3 = h2("AccessConstraints", l3, ""), y3 = /^none$/i.test(x3) ? "" : x3, S4 = h2("Abstract", l3, ""), E = parseInt(h2("MaxWidth", l3, "5000"), 10), w3 = parseInt(h2("MaxHeight", l3, "5000"), 10), L = N(a6, "GetMap"), M2 = g2(a6, "GetMap"), C4 = b2(m4, f7, i2);
  if (!C4)
    return null;
  let v3, I3 = 0;
  const R2 = Array.prototype.slice.call(o4.childNodes), U3 = C4.sublayers ?? [], T3 = (e2) => {
    null != e2 && U3.push(e2);
  };
  R2.forEach((e2) => {
    "Layer" === e2.nodeName && (0 === I3 ? v3 = e2 : 1 === I3 ? (C4.name && (C4.name = "", T3(b2(v3, f7, i2))), T3(b2(e2, f7, i2))) : T3(b2(e2, f7, i2)), I3++);
  });
  let V4 = C4.sublayers, O2 = C4.extent;
  const _2 = C4.fullExtents ?? [];
  if (V4 || (V4 = []), 0 === V4.length && V4.push(C4), !O2) {
    const e2 = new w(V4[0].extent);
    C4.extent = e2.toJSON(), O2 = C4.extent;
  }
  const B = C4.spatialReferences.length > 0 ? C4.spatialReferences : u2(C4), D = g2(a6, "GetFeatureInfo"), j2 = D ? N(a6, "GetFeatureInfo") : null, k2 = c3(V4), q = C4.minScale || 0, X2 = C4.maxScale || 0, G2 = C4.dimensions ?? [], W = k2.reduce((e2, t3) => e2.concat(t3.dimensions ?? []), []), P2 = G2.concat(W).filter(F);
  let $ = null;
  if (P2.length) {
    const t3 = P2.map((e2) => {
      const { extent: t4 } = e2;
      return A(t4) ? t4.map((e3) => e3.getTime()) : t4 == null ? void 0 : t4.map((e3) => [e3.min.getTime(), e3.max.getTime()]);
    }).flat(2).filter(k);
    $ = { startTimeField: null, endTimeField: null, trackIdField: void 0, timeExtent: [Math.min(...t3), Math.max(...t3)] };
  }
  return { copyright: y3, description: S4, dimensions: G2, extent: O2, fullExtents: _2, featureInfoFormats: j2, featureInfoUrl: D, mapUrl: M2, maxWidth: E, maxHeight: w3, maxScale: X2, minScale: q, layers: k2, spatialReferences: B, supportedImageFormatTypes: L, timeInfo: $, title: p2, version: f7 };
}
function a5(e2) {
  const t3 = e2.filter((e3) => e3.popupEnabled && e3.name && e3.queryable);
  return t3.length ? t3.map(({ name: e3 }) => e3).join() : null;
}
function u2(e2) {
  if (e2.spatialReferences.length > 0)
    return e2.spatialReferences;
  if (e2.sublayers)
    for (const t3 of e2.sublayers) {
      const e3 = u2(t3);
      if (e3.length > 0)
        return e3;
    }
  return [];
}
function c3(e2) {
  var _a;
  let t3 = [];
  for (const n3 of e2)
    t3.push(n3), ((_a = n3.sublayers) == null ? void 0 : _a.length) && (t3 = t3.concat(c3(n3.sublayers)), delete n3.sublayers);
  return t3;
}
function m3(e2, t3, n3) {
  return t3.getAttribute(e2) ?? n3;
}
function f6(e2, t3, n3, r3) {
  const i2 = d4(e2, n3);
  return i2 ? m3(t3, i2, r3) : r3;
}
function d4(e2, t3) {
  for (let n3 = 0; n3 < t3.childNodes.length; n3++) {
    const r3 = t3.childNodes[n3];
    if (S3(r3) && r3.nodeName === e2)
      return r3;
  }
  return null;
}
function p(e2, t3) {
  if (null == t3)
    return [];
  const n3 = [];
  for (let r3 = 0; r3 < t3.childNodes.length; r3++) {
    const i2 = t3.childNodes[r3];
    S3(i2) && i2.nodeName === e2 && n3.push(i2);
  }
  return n3;
}
function h2(e2, t3, n3) {
  var _a;
  return ((_a = d4(e2, t3)) == null ? void 0 : _a.textContent) ?? n3;
}
function x2(e2, t3, n3) {
  if (!e2)
    return null;
  const s4 = parseFloat(e2.getAttribute("minx")), o4 = parseFloat(e2.getAttribute("miny")), l3 = parseFloat(e2.getAttribute("maxx")), a6 = parseFloat(e2.getAttribute("maxy"));
  let u3, c4, m4, f7;
  n3 ? (u3 = isNaN(o4) ? -Number.MAX_VALUE : o4, c4 = isNaN(s4) ? -Number.MAX_VALUE : s4, m4 = isNaN(a6) ? Number.MAX_VALUE : a6, f7 = isNaN(l3) ? Number.MAX_VALUE : l3) : (u3 = isNaN(s4) ? -Number.MAX_VALUE : s4, c4 = isNaN(o4) ? -Number.MAX_VALUE : o4, m4 = isNaN(l3) ? Number.MAX_VALUE : l3, f7 = isNaN(a6) ? Number.MAX_VALUE : a6);
  const d5 = new f({ wkid: t3 });
  return new w({ xmin: u3, ymin: c4, xmax: m4, ymax: f7, spatialReference: d5 });
}
function g2(e2, t3) {
  const n3 = d4(t3, e2);
  if (n3) {
    const e3 = d4("DCPType", n3);
    if (e3) {
      const t4 = d4("HTTP", e3);
      if (t4) {
        const e4 = d4("Get", t4);
        if (e4) {
          let t5 = f6("OnlineResource", "xlink:href", e4, null);
          if (t5)
            return t5.indexOf("&") === t5.length - 1 && (t5 = t5.substring(0, t5.length - 1)), M(t5, ["service", "request"]);
        }
      }
    }
  }
  return null;
}
function N(t3, n3) {
  const r3 = p("Operation", t3);
  if (!r3.length) {
    return p("Format", d4(n3, t3)).map(({ textContent: e2 }) => e2).filter(k);
  }
  const i2 = [];
  for (const e2 of r3)
    if (e2.getAttribute("name") === n3) {
      const t4 = p("Format", e2);
      for (const { textContent: e3 } of t4)
        null != e3 && i2.push(e3);
    }
  return i2;
}
function y2(e2, t3, n3) {
  const r3 = d4(t3, e2);
  if (!r3)
    return n3;
  const { textContent: i2 } = r3;
  if (null == i2 || "" === i2)
    return n3;
  const s4 = Number(i2);
  return isNaN(s4) ? n3 : s4;
}
function b2(e2, t3, n3) {
  if (!e2)
    return null;
  const l3 = { id: n3.idCounter++, fullExtents: [], parentLayerId: null, queryable: "1" === e2.getAttribute("queryable"), spatialReferences: [], sublayers: null }, a6 = d4("LatLonBoundingBox", e2), u3 = d4("EX_GeographicBoundingBox", e2);
  let c4 = null;
  a6 && (c4 = x2(a6, 4326)), u3 && (c4 = new w(0, 0, 0, 0, new f({ wkid: 4326 })), c4.xmin = parseFloat(h2("westBoundLongitude", u3, "0")), c4.ymin = parseFloat(h2("southBoundLatitude", u3, "0")), c4.xmax = parseFloat(h2("eastBoundLongitude", u3, "0")), c4.ymax = parseFloat(h2("northBoundLatitude", u3, "0"))), a6 || u3 || (c4 = new w(-180, -90, 180, 90, new f({ wkid: 4326 }))), l3.minScale = y2(e2, "MaxScaleDenominator", 0), l3.maxScale = y2(e2, "MinScaleDenominator", 0);
  const f7 = ["1.0.0", "1.1.0", "1.1.1"].includes(t3) ? "SRS" : "CRS";
  return Array.prototype.slice.call(e2.childNodes).forEach((e3) => {
    var _a;
    if ("Name" === e3.nodeName)
      l3.name = e3.textContent || "";
    else if ("Title" === e3.nodeName)
      l3.title = e3.textContent || "";
    else if ("Abstract" === e3.nodeName)
      l3.description = e3.textContent || "";
    else if ("BoundingBox" === e3.nodeName) {
      const n4 = e3.getAttribute(f7);
      if (n4 && 0 === n4.indexOf("EPSG:")) {
        const r4 = parseInt(n4.substring(5), 10);
        0 === r4 || isNaN(r4) || c4 || (c4 = "1.3.0" === t3 ? x2(e3, r4, o2(r4)) : x2(e3, r4));
      }
      const r3 = n4 && n4.indexOf(":");
      if (r3 && r3 > -1) {
        let i2 = parseInt(n4.substring(r3 + 1, n4.length), 10);
        0 === i2 || isNaN(i2) || (i2 = o3[i2] ?? i2);
        const a7 = "1.3.0" === t3 ? x2(e3, i2, o2(i2)) : x2(e3, i2);
        a7 && l3.fullExtents && l3.fullExtents.push(a7);
      }
    } else if (e3.nodeName === f7) {
      (((_a = e3.textContent) == null ? void 0 : _a.split(" ")) ?? []).forEach((e4) => {
        const t4 = e4.includes(":") ? parseInt(e4.split(":")[1], 10) : parseInt(e4, 10);
        if (0 !== t4 && !isNaN(t4)) {
          const e5 = o3[t4] ?? t4;
          l3.spatialReferences.includes(e5) || l3.spatialReferences.push(e5);
        }
      });
    } else if ("Style" !== e3.nodeName || l3.legendUrl) {
      if ("Layer" === e3.nodeName) {
        const r3 = b2(e3, t3, n3);
        r3 && (r3.parentLayerId = l3.id, l3.sublayers || (l3.sublayers = []), l3.sublayers.push(r3));
      }
    } else {
      const t4 = d4("LegendURL", e3);
      if (t4) {
        const e4 = d4("OnlineResource", t4);
        e4 && (l3.legendUrl = e4.getAttribute("xlink:href"));
      }
    }
  }), l3.extent = c4 == null ? void 0 : c4.toJSON(), l3.dimensions = p("Dimension", e2).filter((e3) => e3.getAttribute("name") && e3.getAttribute("units") && e3.textContent).map((e3) => {
    const t4 = e3.getAttribute("name"), n4 = e3.getAttribute("units"), r3 = e3.textContent, i2 = e3.getAttribute("unitSymbol") ?? void 0, s4 = e3.getAttribute("default") ?? void 0, o4 = "0" !== m3("default", e3, "0"), l4 = "0" !== m3("nearestValue", e3, "0"), a7 = "0" !== m3("current", e3, "0");
    if (F({ name: t4, units: n4 })) {
      return { name: "time", units: "ISO8601", extent: I2(r3), default: I2(s4), multipleValues: o4, nearestValue: l4, current: a7 };
    }
    if (w2({ name: t4, units: n4 })) {
      return { name: "elevation", units: n4, extent: C3(r3), unitSymbol: i2, default: C3(s4), multipleValues: o4, nearestValue: l4 };
    }
    return { name: t4, units: n4, extent: v2(r3), unitSymbol: i2, default: v2(s4), multipleValues: o4, nearestValue: l4 };
  }), l3;
}
function A(e2) {
  return Array.isArray(e2) && e2.length > 0 && e2[0] instanceof Date;
}
function S3(e2) {
  return e2.nodeType === Node.ELEMENT_NODE;
}
function w2(e2) {
  return /^elevation$/i.test(e2.name) && /^(epsg|crs):\d+$/i.test(e2.units);
}
function F(e2) {
  return /^time$/i.test(e2.name) && /^iso8601$/i.test(e2.units);
}
function M(e2, t3) {
  const r3 = [], i2 = I(e2);
  for (const n3 in i2.query)
    i2.query.hasOwnProperty(n3) && (t3.includes(n3.toLowerCase()) || r3.push(n3 + "=" + i2.query[n3]));
  return i2.path + (r3.length ? "?" + r3.join("&") : "");
}
function C3(t3) {
  if (!t3)
    return;
  const n3 = t3.includes("/"), r3 = t3.split(",");
  return n3 ? r3.map((e2) => {
    const t4 = e2.split("/");
    if (t4.length < 2)
      return null;
    return { min: parseFloat(t4[0]), max: parseFloat(t4[1]), resolution: t4.length >= 3 && "0" !== t4[2] ? parseFloat(t4[2]) : void 0 };
  }).filter(k) : r3.map((e2) => parseFloat(e2));
}
function v2(t3) {
  if (!t3)
    return;
  const n3 = t3.includes("/"), r3 = t3.split(",");
  return n3 ? r3.map((e2) => {
    const t4 = e2.split("/");
    if (t4.length < 2)
      return null;
    return { min: t4[0], max: t4[1], resolution: t4.length >= 3 && "0" !== t4[2] ? t4[2] : void 0 };
  }).filter(k) : r3;
}
function I2(t3) {
  if (!t3)
    return;
  const n3 = t3.includes("/"), r3 = t3.split(",");
  return n3 ? r3.map((e2) => {
    const t4 = e2.split("/");
    if (t4.length < 2)
      return null;
    return { min: new Date(t4[0]), max: new Date(t4[1]), resolution: t4.length >= 3 && "0" !== t4[2] ? R(t4[2]) : void 0 };
  }).filter(k) : r3.map((e2) => new Date(e2));
}
function R(e2) {
  const t3 = /(?:p(\d+y|\d+(?:\.|,)\d+y)?(\d+m|\d+(?:\.|,)\d+m)?(\d+d|\d+(?:\.|,)\d+d)?)?(?:t(\d+h|\d+(?:\.|,)\d+h)?(\d+m|\d+(?:\.|,)\d+m)?(\d+s|\d+(?:\.|,)\d+s)?)?/i, n3 = e2.match(t3);
  if (!n3)
    return null;
  return { years: U2(n3[1]), months: U2(n3[2]), days: U2(n3[3]), hours: U2(n3[4]), minutes: U2(n3[5]), seconds: U2(n3[6]) };
}
function U2(e2) {
  if (!e2)
    return 0;
  const t3 = /(?:\d+(?:\.|,)\d+|\d+)/, n3 = e2.match(t3);
  if (!n3)
    return 0;
  const r3 = n3[0].replace(",", ".");
  return Number(r3);
}
function T2(e2) {
  return e2.toISOString().replace(/\.[0-9]{3}/, "");
}
var V2 = /* @__PURE__ */ new Set([102100, 3857, 102113, 900913]);
var O = /* @__PURE__ */ new Set([3395, 54004]);
function _(e2, t3) {
  let n3 = e2.wkid;
  return null == t3 ? n3 : (null != n3 && t3.includes(n3) || !e2.latestWkid || (n3 = e2.latestWkid), null != n3 && V2.has(n3) ? t3.find((e3) => V2.has(e3)) || t3.find((e3) => O.has(e3)) || 102100 : n3);
}

// node_modules/@arcgis/core/layers/WMSLayer.js
var J = new n({ bmp: "image/bmp", gif: "image/gif", jpg: "image/jpeg", png: "image/png", svg: "image/svg+xml" }, { ignoreUnknown: false });
function V3(e2) {
  return "text/html" === e2;
}
function z(e2) {
  return "text/plain" === e2;
}
var Q = class extends n2(f4(f2(t(u(j(S2(b))))))) {
  constructor(...e2) {
    super(...e2), this.allSublayers = new l({ getCollections: () => [this.sublayers], getChildrenFunction: (e3) => e3.sublayers }), this.customParameters = null, this.customLayerParameters = null, this.copyright = null, this.description = null, this.dimensions = null, this.fullExtent = null, this.fullExtents = null, this.featureInfoFormats = null, this.featureInfoUrl = null, this.fetchFeatureInfoFunction = null, this.imageFormat = null, this.imageMaxHeight = 2048, this.imageMaxWidth = 2048, this.imageTransparency = true, this.legendEnabled = true, this.mapUrl = null, this.isReference = null, this.operationalLayerType = "WMS", this.spatialReference = null, this.spatialReferences = null, this.sublayers = null, this.type = "wms", this.version = null, this.addHandles([v(() => this.sublayers, "after-add", ({ item: e3 }) => {
      e3.parent = e3.layer = this;
    }, C), v(() => this.sublayers, "after-remove", ({ item: e3 }) => {
      e3.layer = e3.parent = null;
    }, C), d2(() => this.sublayers, (e3, t3) => {
      if (t3)
        for (const r3 of t3)
          r3.layer = r3.parent = null;
      if (e3)
        for (const r3 of e3)
          r3.parent = r3.layer = this;
    }, C)]);
  }
  normalizeCtorArgs(e2, t3) {
    return "string" == typeof e2 ? { url: e2, ...t3 } : e2;
  }
  destroy() {
    this.allSublayers.destroy();
  }
  load(e2) {
    const t3 = null != e2 ? e2.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["WMS"] }, e2).catch(a2).then(() => this._fetchService(t3))), Promise.resolve(this);
  }
  readFullExtentFromItemOrMap(e2, t3) {
    const r3 = t3.extent;
    return r3 ? new w({ xmin: r3[0][0], ymin: r3[0][1], xmax: r3[1][0], ymax: r3[1][1] }) : null;
  }
  writeFullExtent(e2, t3) {
    t3.extent = [[e2.xmin, e2.ymin], [e2.xmax, e2.ymax]];
  }
  get featureInfoFormat() {
    return null == this.featureInfoFormats ? null : this.featureInfoFormats.find(V3) ?? this.featureInfoFormats.find(z) ?? null;
  }
  set featureInfoFormat(e2) {
    null == e2 ? (this.revert("featureInfoFormat", "service"), this._clearOverride("featureInfoFormat")) : (V3(e2) || z(e2)) && this._override("featureInfoFormat", e2);
  }
  readImageFormat(e2, t3) {
    const r3 = t3.supportedImageFormatTypes;
    return r3 && r3.includes("image/png") ? "image/png" : r3 && r3[0];
  }
  readSpatialReferenceFromItemOrDocument(e2, t3) {
    return new f(t3.spatialReferences[0]);
  }
  writeSpatialReferences(e2, t3) {
    var _a;
    const r3 = (_a = this.spatialReference) == null ? void 0 : _a.wkid;
    e2 && r3 ? (t3.spatialReferences = e2.filter((e3) => e3 !== r3), t3.spatialReferences.unshift(r3)) : t3.spatialReferences = e2;
  }
  readSublayersFromItemOrMap(e2, t3, r3) {
    return X(t3.layers, r3, t3.visibleLayers);
  }
  readSublayers(e2, t3, r3) {
    return X(t3.layers, r3);
  }
  writeSublayers(e2, t3, r3, o4) {
    var _a, _b;
    t3.layers = [];
    const s4 = /* @__PURE__ */ new Map(), i2 = e2.flatten(({ sublayers: e3 }) => e3 ?? []);
    for (const a6 of i2)
      if ("number" == typeof ((_a = a6.parent) == null ? void 0 : _a.id)) {
        const e3 = s4.get(a6.parent.id);
        null != e3 ? e3.push(a6.id) : s4.set(a6.parent.id, [a6.id]);
      }
    for (const a6 of i2) {
      const e3 = { sublayer: a6, ...o4 }, r4 = a6.write({ parentLayerId: "number" == typeof ((_b = a6.parent) == null ? void 0 : _b.id) ? a6.parent.id : -1 }, e3);
      if (s4.has(a6.id) && (r4.sublayerIds = s4.get(a6.id)), !a6.sublayers && a6.name) {
        const r5 = a6.write({}, e3);
        delete r5.id, t3.layers.push(r5);
      }
    }
    t3.visibleLayers = i2.filter(({ visible: e3, sublayers: t4 }) => e3 && !t4).map(({ name: e3 }) => e3).toArray();
  }
  set url(e2) {
    if (!e2)
      return void this._set("url", e2);
    const { path: t3, query: r3 } = I(e2);
    for (const s4 in r3)
      /^(request|service)$/i.test(s4) && delete r3[s4];
    const o4 = Et(t3, r3 ?? {});
    this._set("url", o4);
  }
  createExportImageParameters(e2, t3, r3, o4) {
    const s4 = (o4 == null ? void 0 : o4.pixelRatio) ?? 1, i2 = i({ extent: e2, width: t3 }) * s4, a6 = new a4({ layer: this, scale: i2 }), { xmin: n3, ymin: l3, xmax: p2, ymax: m4, spatialReference: u3 } = e2, c4 = _(u3, this.spatialReferences), f7 = "1.3.0" === this.version && o2(c4) ? `${l3},${n3},${m4},${p2}` : `${n3},${l3},${p2},${m4}`, y3 = a6.toJSON();
    return { bbox: f7, ["1.3.0" === this.version ? "crs" : "srs"]: null == c4 || isNaN(c4) ? void 0 : "EPSG:" + c4, ...y3 };
  }
  async fetchImage(e2, t3, r3, o4) {
    var _a, _b;
    const i2 = this.mapUrl, a6 = this.createExportImageParameters(e2, t3, r3, o4);
    if (!a6.layers) {
      const e3 = document.createElement("canvas");
      return e3.width = t3, e3.height = r3, e3;
    }
    const n3 = (_a = o4 == null ? void 0 : o4.timeExtent) == null ? void 0 : _a.start, l3 = (_b = o4 == null ? void 0 : o4.timeExtent) == null ? void 0 : _b.end, p2 = null != n3 && null != l3 ? n3.getTime() === l3.getTime() ? T2(n3) : `${T2(n3)}/${T2(l3)}` : void 0, m4 = { responseType: "image", query: this._mixCustomParameters({ width: t3, height: r3, ...a6, time: p2, ...this.refreshParameters }), signal: o4 == null ? void 0 : o4.signal };
    return U(i2 ?? "", m4).then((e3) => e3.data);
  }
  async fetchImageBitmap(e2, t3, r3, o4) {
    var _a, _b;
    const i2 = this.mapUrl ?? "", a6 = this.createExportImageParameters(e2, t3, r3, o4);
    if (!a6.layers) {
      const e3 = document.createElement("canvas");
      return e3.width = t3, e3.height = r3, e3;
    }
    const n3 = (_a = o4 == null ? void 0 : o4.timeExtent) == null ? void 0 : _a.start, l3 = (_b = o4 == null ? void 0 : o4.timeExtent) == null ? void 0 : _b.end, p2 = null != n3 && null != l3 ? n3.getTime() === l3.getTime() ? T2(n3) : `${T2(n3)}/${T2(l3)}` : void 0, m4 = { responseType: "blob", query: this._mixCustomParameters({ width: t3, height: r3, ...a6, time: p2, ...this.refreshParameters }), signal: o4 == null ? void 0 : o4.signal }, { data: u3 } = await U(i2, m4);
    return t2(u3, i2, o4 == null ? void 0 : o4.signal);
  }
  fetchFeatureInfo(e2, t3, r3, o4, s4) {
    const i2 = i({ extent: e2, width: t3 }), a6 = new a4({ layer: this, scale: i2 }), n3 = a5(a6.visibleSublayers);
    if (null == this.featureInfoUrl || null == n3)
      return Promise.resolve([]);
    if (null == this.fetchFeatureInfoFunction && null == this.featureInfoFormat)
      return Promise.resolve([]);
    const l3 = "1.3.0" === this.version ? { I: o4, J: s4 } : { x: o4, y: s4 }, p2 = { query_layers: n3, request: "GetFeatureInfo", info_format: this.featureInfoFormat, feature_count: 25, width: t3, height: r3, ...l3 }, m4 = { ...this.createExportImageParameters(e2, t3, r3), ...p2 }, u3 = this._mixCustomParameters(m4);
    return null != this.fetchFeatureInfoFunction ? this.fetchFeatureInfoFunction(u3) : this._defaultFetchFeatureInfoFunction(Et(this.featureInfoUrl, u3));
  }
  findSublayerById(e2) {
    return this.allSublayers.find((t3) => t3.id === e2);
  }
  findSublayerByName(e2) {
    return this.allSublayers.find((t3) => t3.name === e2);
  }
  serviceSupportsSpatialReference(e2) {
    return C2(this.url) || null != this.spatialReferences && this.spatialReferences.some((t3) => {
      const r3 = 900913 === t3 ? f.WebMercator : new f({ wkid: t3 });
      return G(r3, e2);
    });
  }
  _defaultFetchFeatureInfoFunction(e2) {
    const t3 = document.createElement("iframe");
    t3.src = S(e2), t3.style.border = "none", t3.style.margin = "0", t3.style.width = "100%", t3.setAttribute("sandbox", "");
    const s4 = new P({ title: this.title, content: t3 }), i2 = new f3({ sourceLayer: this, popupTemplate: s4 });
    return Promise.resolve([i2]);
  }
  async _fetchService(e2) {
    var _a;
    if (!this.resourceInfo && ((_a = this.parsedUrl) == null ? void 0 : _a.path)) {
      const { path: t3, query: r3 } = this.parsedUrl, { data: o4 } = await U(t3, { query: { SERVICE: "WMS", REQUEST: "GetCapabilities", ...r3, ...this.customParameters }, responseType: "xml", signal: e2 });
      this.resourceInfo = l2(o4);
    }
    if (this.parsedUrl) {
      const e3 = new x(this.parsedUrl.path), { httpsDomains: r3 } = r.request;
      "https" !== e3.scheme || e3.port && "443" !== e3.port || !e3.host || r3.includes(e3.host) || r3.push(e3.host);
    }
    this.read(this.resourceInfo, { origin: "service" });
  }
  _mixCustomParameters(e2) {
    if (!this.customLayerParameters && !this.customParameters)
      return e2;
    const t3 = { ...this.customParameters, ...this.customLayerParameters };
    for (const r3 in t3)
      e2[r3.toLowerCase()] = t3[r3];
    return e2;
  }
};
function K(e2, t3) {
  return e2.some((e3) => {
    for (const r3 in e3)
      if (g(e3, r3, null, t3))
        return true;
    return false;
  });
}
function X(e2, t3, r3) {
  e2 = e2 ?? [];
  const o4 = /* @__PURE__ */ new Map();
  e2.every((e3) => null == e3.id) && (e2 = a(e2)).forEach((e3, t4) => e3.id = t4);
  for (const i2 of e2) {
    const e3 = new f5();
    e3.read(i2, t3), r3 && !r3.includes(e3.name) && (e3.visible = false), o4.set(e3.id, e3);
  }
  const s4 = [];
  for (const a6 of e2) {
    const e3 = null != a6.id ? o4.get(a6.id) : null;
    if (e3)
      if (null != a6.parentLayerId && a6.parentLayerId >= 0) {
        const t4 = o4.get(a6.parentLayerId);
        if (!t4)
          continue;
        t4.sublayers || (t4.sublayers = new V()), t4.sublayers.push(e3);
      } else
        s4.push(e3);
  }
  return s4;
}
e([y({ readOnly: true })], Q.prototype, "allSublayers", void 0), e([y({ json: { type: Object, write: true } })], Q.prototype, "customParameters", void 0), e([y({ json: { type: Object, write: true } })], Q.prototype, "customLayerParameters", void 0), e([y({ type: String, json: { write: true } })], Q.prototype, "copyright", void 0), e([y()], Q.prototype, "description", void 0), e([y({ readOnly: true })], Q.prototype, "dimensions", void 0), e([y({ json: { type: [[Number]], read: { source: "extent" }, write: { target: "extent" }, origins: { "web-document": { write: { ignoreOrigin: true } }, "portal-item": { write: { ignoreOrigin: true } } } } })], Q.prototype, "fullExtent", void 0), e([o(["web-document", "portal-item"], "fullExtent", ["extent"])], Q.prototype, "readFullExtentFromItemOrMap", null), e([r2(["web-document", "portal-item"], "fullExtent", { extent: { type: [[Number]] } })], Q.prototype, "writeFullExtent", null), e([y()], Q.prototype, "fullExtents", void 0), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], Q.prototype, "featureInfoFormat", null), e([y({ type: [String], readOnly: true })], Q.prototype, "featureInfoFormats", void 0), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], Q.prototype, "featureInfoUrl", void 0), e([y()], Q.prototype, "fetchFeatureInfoFunction", void 0), e([y({ type: String, json: { origins: { "web-document": { default: "image/png", type: J.jsonValues, read: { reader: J.read, source: "format" }, write: { writer: J.write, target: "format" } } } } })], Q.prototype, "imageFormat", void 0), e([o("imageFormat", ["supportedImageFormatTypes"])], Q.prototype, "readImageFormat", null), e([y({ type: Number, json: { read: { source: "maxHeight" }, write: { target: "maxHeight" } } })], Q.prototype, "imageMaxHeight", void 0), e([y({ type: Number, json: { read: { source: "maxWidth" }, write: { target: "maxWidth" } } })], Q.prototype, "imageMaxWidth", void 0), e([y()], Q.prototype, "imageTransparency", void 0), e([y(c)], Q.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide", "hide-children"] })], Q.prototype, "listMode", void 0), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], Q.prototype, "mapUrl", void 0), e([y({ type: Boolean, json: { read: false, write: { enabled: true, overridePolicy: () => ({ enabled: false }) } } })], Q.prototype, "isReference", void 0), e([y({ type: ["WMS"] })], Q.prototype, "operationalLayerType", void 0), e([y()], Q.prototype, "resourceInfo", void 0), e([y({ type: f, json: { origins: { service: { read: { source: "extent.spatialReference" } } }, write: false } })], Q.prototype, "spatialReference", void 0), e([o(["web-document", "portal-item"], "spatialReference", ["spatialReferences"])], Q.prototype, "readSpatialReferenceFromItemOrDocument", null), e([y({ type: [T], json: { read: false, origins: { service: { read: true }, "web-document": { read: false, write: { ignoreOrigin: true } }, "portal-item": { read: false, write: { ignoreOrigin: true } } } } })], Q.prototype, "spatialReferences", void 0), e([r2(["web-document", "portal-item"], "spatialReferences")], Q.prototype, "writeSpatialReferences", null), e([y({ type: V.ofType(f5), json: { write: { target: "layers", overridePolicy(e2, t3, r3) {
  if (K(this.allSublayers, r3))
    return { ignoreOrigin: true };
} } } })], Q.prototype, "sublayers", void 0), e([o(["web-document", "portal-item"], "sublayers", ["layers", "visibleLayers"])], Q.prototype, "readSublayersFromItemOrMap", null), e([o("service", "sublayers", ["layers"])], Q.prototype, "readSublayers", null), e([r2("sublayers", { layers: { type: [f5] }, visibleLayers: { type: [String] } })], Q.prototype, "writeSublayers", null), e([y({ json: { read: false }, readOnly: true, value: "wms" })], Q.prototype, "type", void 0), e([y(d3)], Q.prototype, "url", null), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], Q.prototype, "version", void 0), Q = e([a3("esri.layers.WMSLayer")], Q);
var Y = Q;
export {
  Y as default
};
//# sourceMappingURL=WMSLayer-W3GIBWIK.js.map
