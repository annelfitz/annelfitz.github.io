{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/esm/src/components/block/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/block/block.scss?tag=calcite-block&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/block/block.tsx", "../../@esri/calcite-components/dist/esm/src/components/block-section/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/block-section/block-section.scss?tag=calcite-block-section&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/block-section/block-section.tsx"],
  "sourcesContent": ["export const IDS = {\n  content: \"content\",\n  toggle: \"toggle\",\n  header: \"header\",\n};\n\nexport const CSS = {\n  button: \"button\",\n  container: \"container\",\n  content: \"content\",\n  controlContainer: \"control-container\",\n  description: \"description\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  heading: \"heading\",\n  icon: \"icon\",\n  invalid: \"invalid\",\n  statusIcon: \"status-icon\",\n  summary: \"summary\",\n  title: \"title\",\n  toggle: \"toggle\",\n  toggleIcon: \"toggle-icon\",\n  valid: \"valid\",\n};\n\nexport const SLOTS = {\n  icon: \"icon\",\n  control: \"control\",\n  headerMenuActions: \"header-menu-actions\",\n};\n\nexport const ICONS = {\n  opened: \"chevron-up\",\n  closed: \"chevron-down\",\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n};\n", "/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-block-padding: Specifies the padding of the block `default` slot.\n */\n\n:host {\n  @extend %component-host;\n  @extend %component-spacing;\n  @apply transition-margin ease-cubic border-color-3 flex flex-shrink-0 flex-grow-0\n    flex-col border-0 border-b border-solid p-0 duration-150;\n  flex-basis: auto;\n}\n\n@include disabled();\n\n@import \"../../assets/styles/animation\";\n@import \"../../assets/styles/header\";\n\n.header {\n  @apply justify-start p-0;\n}\n\n.header,\n.toggle {\n  grid-area: header;\n}\n\n.header-container {\n  @apply grid items-stretch;\n  grid-template: auto / auto 1fr auto auto;\n  grid-template-areas: \"handle header control menu\";\n  grid-column: header-start / menu-end;\n  grid-row: 1 / 2;\n}\n\n.toggle {\n  @apply font-inherit\n    focus-base\n    m-0\n    flex\n    cursor-pointer\n    flex-nowrap\n    items-center\n    justify-between\n    border-none\n    p-0;\n  text-align: initial;\n\n  background-color: transparent;\n  &:hover {\n    @apply bg-foreground-2;\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n}\n\ncalcite-loader[inline] {\n  grid-area: control;\n  @apply self-center;\n}\n\ncalcite-handle {\n  grid-area: handle;\n}\n\n.title {\n  @apply m-0;\n  padding: theme(\"spacing.3\");\n}\n\n.header .title .heading {\n  @apply text-n1\n    text-color-2\n    word-break\n    transition-color\n    p-0\n    font-medium\n    leading-tight\n    duration-150\n    ease-in-out;\n}\n\n.description {\n  @apply text-n2-wrap\n    text-color-3\n    word-break\n    mt-0.5\n    p-0;\n}\n\n.icon {\n  display: flex;\n  margin-inline-start: theme(\"spacing.3\");\n  margin-inline-end: 0px;\n}\n\n.status-icon.valid {\n  color: theme(\"colors.success\");\n}\n\n.status-icon.invalid {\n  color: theme(\"colors.danger\");\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(180deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.toggle-icon {\n  @apply text-color-3\n  transition-color\n  my-3\n  self-center\n  justify-self-end\n  duration-150\n  ease-in-out;\n  margin-inline-end: theme(\"spacing.3\");\n  margin-inline-start: auto;\n}\n\n.toggle:hover .toggle-icon {\n  @apply text-color-1;\n}\n\n.container {\n  @apply flex flex-col h-full relative;\n}\n\n.content {\n  @apply animate-in flex-1 relative min-h-0;\n  padding-block: var(--calcite-block-padding, theme(\"spacing.2\"));\n  padding-inline: var(--calcite-block-padding, theme(\"spacing[2.5]\"));\n}\n\n.control-container {\n  @apply m-0 flex;\n  grid-area: control;\n}\n\ncalcite-action-menu {\n  grid-area: menu;\n}\n\n:host([open]) {\n  @apply my-2;\n\n  .header .title .heading {\n    @apply text-color-1;\n  }\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { focusFirstTabbable, getSlotted, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Status } from \"../interfaces\";\nimport { BlockMessages } from \"./assets/block/t9n\";\nimport { CSS, ICONS, IDS, SLOTS } from \"./resources\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\n\n/**\n * @slot - A slot for adding custom content.\n * @slot icon - A slot for adding a leading header icon with `calcite-icon`.\n * @slot control - A slot for adding a single HTML input element in a header.\n * @slot header-menu-actions - A slot for adding an overflow menu with `calcite-action`s inside a dropdown menu.\n */\n@Component({\n  tag: \"calcite-block\",\n  styleUrl: \"block.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Block\n  implements\n    ConditionalSlotComponent,\n    InteractiveComponent,\n    LocalizedComponent,\n    T9nComponent,\n    LoadableComponent,\n    OpenCloseComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is collapsible.\n   */\n  @Prop({ reflect: true }) collapsible = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `true`, displays a drag handle in the header.\n   */\n  @Prop({ reflect: true }) dragHandle = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading!: string;\n\n  /**\n   * Specifies the number at which section headings should start.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * When `true`, expands the component and its contents.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n  }\n\n  /**\n   * Displays a status-related indicator icon.\n   */\n  @Prop({ reflect: true }) status: Status;\n\n  /**\n   * A description for the component, which displays below the heading.\n   */\n  @Prop() description: string;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: BlockMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<BlockMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first tabbable element.\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  onBeforeOpen(): void {\n    this.calciteBlockBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteBlockOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteBlockBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteBlockClose.emit();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteBlockElement;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: BlockMessages;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteBlockBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteBlockBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteBlockClose: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteBlockOpen: EventEmitter<void>;\n\n  /**\n   * Fires when the component's header is clicked.\n   *\n   * @deprecated Use `openClose` events such as `calciteBlockOpen`, `calciteBlockClose`, `calciteBlockBeforeOpen`, and `calciteBlockBeforeClose` instead.\n   */\n  @Event({ cancelable: false }) calciteBlockToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  onHeaderClick = (): void => {\n    this.open = !this.open;\n    this.calciteBlockToggle.emit();\n  };\n\n  private setTransitionEl = (el: HTMLElement): void => {\n    this.transitionEl = el;\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderScrim(): VNode[] {\n    const { loading } = this;\n    const defaultSlot = <slot />;\n\n    return [loading ? <calcite-scrim loading={loading} /> : null, defaultSlot];\n  }\n\n  renderIcon(): VNode[] {\n    const { loading, messages, status } = this;\n\n    const hasSlottedIcon = !!getSlotted(this.el, SLOTS.icon);\n\n    return loading ? (\n      <div class={CSS.icon} key=\"loader\">\n        <calcite-loader inline label={messages.loading} />\n      </div>\n    ) : !!status ? (\n      <div class={CSS.icon} key=\"status-icon\">\n        <calcite-icon\n          class={{\n            [CSS.statusIcon]: true,\n            [CSS.valid]: status == \"valid\",\n            [CSS.invalid]: status == \"invalid\",\n          }}\n          icon={ICONS[status]}\n          scale=\"s\"\n        />\n      </div>\n    ) : hasSlottedIcon ? (\n      <div class={CSS.icon} key=\"icon-slot\">\n        <slot key=\"icon-slot\" name={SLOTS.icon} />\n      </div>\n    ) : null;\n  }\n\n  renderTitle(): VNode {\n    const { heading, headingLevel, description } = this;\n    return heading || description ? (\n      <div class={CSS.title}>\n        <Heading class={CSS.heading} level={headingLevel}>\n          {heading}\n        </Heading>\n        {description ? <div class={CSS.description}>{description}</div> : null}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { collapsible, el, loading, open, heading, messages } = this;\n\n    const toggleLabel = open ? messages.collapse : messages.expand;\n\n    const headerContent = (\n      <header class={CSS.header} id={IDS.header}>\n        {this.renderIcon()}\n        {this.renderTitle()}\n      </header>\n    );\n\n    const hasControl = !!getSlotted(el, SLOTS.control);\n    const hasMenuActions = !!getSlotted(el, SLOTS.headerMenuActions);\n    const collapseIcon = open ? ICONS.opened : ICONS.closed;\n\n    const headerNode = (\n      <div class={CSS.headerContainer}>\n        {this.dragHandle ? <calcite-handle label={heading} /> : null}\n        {collapsible ? (\n          <button\n            aria-controls={IDS.content}\n            aria-describedby={IDS.header}\n            aria-expanded={collapsible ? toAriaBoolean(open) : null}\n            class={CSS.toggle}\n            id={IDS.toggle}\n            onClick={this.onHeaderClick}\n            title={toggleLabel}\n          >\n            {headerContent}\n            <calcite-icon aria-hidden=\"true\" class={CSS.toggleIcon} icon={collapseIcon} scale=\"s\" />\n          </button>\n        ) : (\n          headerContent\n        )}\n        {hasControl ? (\n          <div class={CSS.controlContainer}>\n            <slot name={SLOTS.control} />\n          </div>\n        ) : null}\n        {hasMenuActions ? (\n          <calcite-action-menu\n            label={messages.options}\n            overlayPositioning={this.overlayPositioning}\n          >\n            <slot name={SLOTS.headerMenuActions} />\n          </calcite-action-menu>\n        ) : null}\n      </div>\n    );\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <article\n            aria-busy={toAriaBoolean(loading)}\n            class={{\n              [CSS.container]: true,\n            }}\n          >\n            {headerNode}\n            <section\n              aria-labelledby={IDS.toggle}\n              class={CSS.content}\n              hidden={!open}\n              id={IDS.content}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.setTransitionEl}\n            >\n              {this.renderScrim()}\n            </section>\n          </article>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n", "export const IDS = {\n  content: \"content\",\n  toggle: \"toggle\",\n};\n\nexport const CSS = {\n  content: \"content\",\n  focusGuard: \"focus-guard\",\n  invalid: \"invalid\",\n  sectionHeader: \"section-header\",\n  sectionHeaderText: \"section-header__text\",\n  statusIcon: \"status-icon\",\n  toggle: \"toggle\",\n  toggleSwitch: \"toggle--switch\",\n  toggleSwitchContainer: \"toggle--switch-container\",\n  toggleSwitchContent: \"toggle--switch__content\",\n  toggleSwitchText: \"toggle--switch__text\",\n  valid: \"valid\",\n};\n\nexport const ICONS = {\n  menuOpen: \"chevron-down\",\n  menuClosedLeft: \"chevron-left\",\n  menuClosedRight: \"chevron-right\",\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n};\n", ":host {\n  @apply bg-foreground-1\n    text-color-2\n    text-n1\n    box-border\n    block;\n}\n\n:host([open]) {\n  @apply border-b-color-3\n    border-0\n    border-b\n    border-solid;\n}\n\n:host(:last-child) {\n  @apply border-b-0;\n}\n\n.toggle {\n  @apply text-color-2\n    w-full\n    border-0\n    bg-transparent\n    font-sans\n    font-medium;\n}\n\n.toggle--switch,\n.section-header {\n  @apply text-n1\n    focus-base\n    mx-0\n    my-1\n    flex\n    cursor-pointer\n    select-none\n    items-center\n    px-0\n    py-2;\n\n  &:focus {\n    @apply focus-outset;\n  }\n  &:hover {\n    @apply text-color-1;\n  }\n}\n\n.section-header .status-icon {\n  @apply self-end;\n}\n\n.section-header__text {\n  @apply mx-3\n    my-0\n    flex-auto;\n\n  text-align: initial;\n  word-wrap: anywhere;\n}\n\n.toggle--switch-container {\n  @apply flex items-center relative bg-transparent w-full;\n  word-break: break-word;\n\n  .focus-guard {\n    --calcite-label-margin-bottom: 0;\n    @apply absolute pointer-events-none;\n    inset-inline-end: 0;\n    margin-inline-start: theme(\"margin.1\");\n  }\n}\n\n.toggle--switch {\n  .status-icon {\n    margin-inline-start: theme(\"margin.2\");\n  }\n}\n\n.toggle--switch__content {\n  @apply flex flex-auto items-center;\n}\n\n.status-icon.valid {\n  color: theme(\"colors.success\");\n}\n\n.status-icon.invalid {\n  color: theme(\"colors.danger\");\n}\n\n:host([toggle-display=\"switch\"]) .toggle {\n  .toggle--switch__content {\n    @apply me-7;\n  }\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport { focusFirstTabbable, getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Status } from \"../interfaces\";\nimport { BlockSectionMessages } from \"./assets/block-section/t9n\";\nimport { BlockSectionToggleDisplay } from \"./interfaces\";\nimport { CSS, ICONS, IDS } from \"./resources\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-block-section\",\n  styleUrl: \"block-section.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class BlockSection implements LocalizedComponent, T9nComponent, LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, expands the component and its contents.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  /**\n   * Displays a status-related indicator icon.\n   */\n  @Prop({ reflect: true }) status: Status;\n\n  /**\n   * The component header text.\n   */\n  @Prop() text: string;\n\n  /**\n   * Specifies how the component's toggle is displayed, where:\n   *\n   * `\"button\"` sets the toggle to a selectable header, and\n   *\n   * `\"switch\"` sets the toggle to a switch.\n   */\n  @Prop({ reflect: true }) toggleDisplay: BlockSectionToggleDisplay = \"button\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: BlockSectionMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<BlockSectionMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first tabbable element.\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteBlockSectionElement;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: BlockSectionMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the header has been clicked.\n   */\n  @Event({ cancelable: false }) calciteBlockSectionToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleHeaderKeyDown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.toggleSection();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  toggleSection = (): void => {\n    this.open = !this.open;\n    this.calciteBlockSectionToggle.emit();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  renderStatusIcon(): VNode[] {\n    const { status } = this;\n    const statusIcon = ICONS[status] ?? false;\n    const statusIconClasses = {\n      [CSS.statusIcon]: true,\n      [CSS.valid]: status == \"valid\",\n      [CSS.invalid]: status == \"invalid\",\n    };\n\n    return !!statusIcon ? (\n      <calcite-icon class={statusIconClasses} icon={statusIcon} scale=\"s\" />\n    ) : null;\n  }\n\n  render(): VNode {\n    const { el, messages, open, text, toggleDisplay } = this;\n    const dir = getElementDir(el);\n    const arrowIcon = open\n      ? ICONS.menuOpen\n      : dir === \"rtl\"\n        ? ICONS.menuClosedLeft\n        : ICONS.menuClosedRight;\n\n    const toggleLabel = open ? messages.collapse : messages.expand;\n\n    const headerNode =\n      toggleDisplay === \"switch\" ? (\n        <div\n          class={{\n            [CSS.toggleSwitchContainer]: true,\n          }}\n        >\n          <div\n            aria-controls={IDS.content}\n            aria-expanded={toAriaBoolean(open)}\n            class={{\n              [CSS.toggle]: true,\n              [CSS.toggleSwitch]: true,\n            }}\n            id={IDS.toggle}\n            onClick={this.toggleSection}\n            onKeyDown={this.handleHeaderKeyDown}\n            role=\"button\"\n            tabIndex={0}\n            title={toggleLabel}\n          >\n            <div class={CSS.toggleSwitchContent}>\n              <span class={CSS.toggleSwitchText}>{text}</span>\n            </div>\n            {this.renderStatusIcon()}\n          </div>\n          {/* we use calcite-label to use a simple component that will allow us to prevent keyboard focus by setting tabindex=\"-1\" on the host */}\n          <calcite-label class={CSS.focusGuard} layout=\"inline\" tabIndex={-1}>\n            <calcite-switch checked={open} label={toggleLabel} scale=\"s\" />\n          </calcite-label>\n        </div>\n      ) : (\n        <button\n          aria-controls={IDS.content}\n          aria-expanded={toAriaBoolean(open)}\n          class={{\n            [CSS.sectionHeader]: true,\n            [CSS.toggle]: true,\n          }}\n          id={IDS.toggle}\n          onClick={this.toggleSection}\n        >\n          <calcite-icon icon={arrowIcon} scale=\"s\" />\n          <span class={CSS.sectionHeaderText}>{text}</span>\n          {this.renderStatusIcon()}\n        </button>\n      );\n\n    return (\n      <Host>\n        {headerNode}\n        <section aria-labelledby={IDS.toggle} class={CSS.content} hidden={!open} id={IDS.content}>\n          <slot />\n        </section>\n      </Host>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["IDS", "CSS", "ICONS"]
}
