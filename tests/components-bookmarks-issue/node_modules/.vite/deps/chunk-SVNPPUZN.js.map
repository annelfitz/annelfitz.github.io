{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{ReadLinearDepth as o}from\"./output/ReadDepth.glsl.js\";import{CameraSpace as e}from\"./util/CameraSpace.glsl.js\";import{Float2PassUniform as l}from\"../shaderModules/Float2PassUniform.js\";import{Float3PassUniform as r}from\"../shaderModules/Float3PassUniform.js\";import{FloatPassUniform as a}from\"../shaderModules/FloatPassUniform.js\";import{glsl as t}from\"../shaderModules/interfaces.js\";import{Texture2DPassUniform as n}from\"../shaderModules/Texture2DPassUniform.js\";function d(d,i){const s=d.fragment;s.include(o),d.include(e),s.uniforms.add(new a(\"globalAlpha\",(o=>o.globalAlpha)),new r(\"glowColor\",(o=>o.glowColor)),new a(\"glowWidth\",((o,e)=>o.glowWidth*e.camera.pixelRatio)),new a(\"glowFalloff\",(o=>o.glowFalloff)),new r(\"innerColor\",(o=>o.innerColor)),new a(\"innerWidth\",((o,e)=>o.innerWidth*e.camera.pixelRatio)),new n(\"depthMap\",((o,e)=>e.linearDepth?.getTexture())),new l(\"nearFar\",((o,e)=>e.camera.nearFar)),new n(\"frameColor\",((o,e)=>e.mainColor))),s.code.add(t`vec4 blendPremultiplied(vec4 source, vec4 dest) {\nfloat oneMinusSourceAlpha = 1.0 - source.a;\nreturn vec4(\nsource.rgb + dest.rgb * oneMinusSourceAlpha,\nsource.a + dest.a * oneMinusSourceAlpha\n);\n}`),s.code.add(t`vec4 premultipliedColor(vec3 rgb, float alpha) {\nreturn vec4(rgb * alpha, alpha);\n}`),s.code.add(t`vec4 laserlineProfile(float dist) {\nif (dist > glowWidth) {\nreturn vec4(0.0);\n}\nfloat innerAlpha = (1.0 - smoothstep(0.0, innerWidth, dist));\nfloat glowAlpha = pow(max(0.0, 1.0 - dist / glowWidth), glowFalloff);\nreturn blendPremultiplied(\npremultipliedColor(innerColor, innerAlpha),\npremultipliedColor(glowColor, glowAlpha)\n);\n}`),s.code.add(t`bool laserlineReconstructFromDepth(out vec3 pos, out vec3 normal, out float depthDiscontinuityAlpha) {\nfloat depth = linearDepthFromTexture(depthMap, uv, nearFar);\nif (-depth == nearFar[0]) {\nreturn false;\n}\npos = reconstructPosition(gl_FragCoord.xy, depth);\nnormal = normalize(cross(dFdx(pos), dFdy(pos)));\nfloat ddepth = fwidth(depth);\ndepthDiscontinuityAlpha = 1.0 - smoothstep(0.0, 0.01, -ddepth / depth);\nreturn true;\n}`),i.contrastControlEnabled?(s.uniforms.add(new a(\"globalAlphaContrastBoost\",(o=>null!=o.globalAlphaContrastBoost?o.globalAlphaContrastBoost:1))),s.code.add(t`float rgbToLuminance(vec3 color) {\nreturn dot(vec3(0.2126, 0.7152, 0.0722), color);\n}\nvec4 laserlineOutput(vec4 color) {\nfloat backgroundLuminance = rgbToLuminance(texture(frameColor, uv).rgb);\nfloat alpha = clamp(globalAlpha * max(backgroundLuminance * globalAlphaContrastBoost, 1.0), 0.0, 1.0);\nreturn color * alpha;\n}`)):s.code.add(t`vec4 laserlineOutput(vec4 color) {\nreturn color * globalAlpha;\n}`)}export{d as Laserline};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAIwd,SAAS,EAAEA,IAAEC,IAAE;AAAC,QAAMC,KAAEF,GAAE;AAAS,EAAAE,GAAE,QAAQ,CAAC,GAAEF,GAAE,QAAQ,CAAC,GAAEE,GAAE,SAAS,IAAI,IAAIC,GAAE,eAAe,CAAAA,OAAGA,GAAE,WAAY,GAAE,IAAI,EAAE,aAAa,CAAAA,OAAGA,GAAE,SAAU,GAAE,IAAIA,GAAE,aAAa,CAACA,IAAEC,OAAID,GAAE,YAAUC,GAAE,OAAO,UAAW,GAAE,IAAID,GAAE,eAAe,CAAAA,OAAGA,GAAE,WAAY,GAAE,IAAI,EAAE,cAAc,CAAAA,OAAGA,GAAE,UAAW,GAAE,IAAIA,GAAE,cAAc,CAACA,IAAEC,OAAID,GAAE,aAAWC,GAAE,OAAO,UAAW,GAAE,IAAI,EAAE,YAAY,CAACD,IAAEC,OAAE;AAJ/0B;AAIi1B,iBAAAA,GAAE,gBAAF,mBAAe;AAAA,GAAa,GAAE,IAAIA,GAAE,WAAW,CAACD,IAAEC,OAAIA,GAAE,OAAO,OAAQ,GAAE,IAAI,EAAE,cAAc,CAACD,IAAEC,OAAIA,GAAE,SAAU,CAAC,GAAEF,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM78B,GAAEA,GAAE,KAAK,IAAI;AAAA;AAAA,EAEb,GAAEA,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUb,GAAEA,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUb,GAAED,GAAE,0BAAwBC,GAAE,SAAS,IAAI,IAAIC,GAAE,4BAA4B,CAAAA,OAAG,QAAMA,GAAE,2BAAyBA,GAAE,2BAAyB,CAAE,CAAC,GAAED,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5J,KAAGA,GAAE,KAAK,IAAI;AAAA;AAAA,EAEd;AAAC;",
  "names": ["d", "i", "s", "o", "e"]
}
