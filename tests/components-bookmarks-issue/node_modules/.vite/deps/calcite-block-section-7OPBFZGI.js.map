{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/components/src/components/block-section/resources.ts", "../../@esri/calcite-components/dist/components/src/components/block-section/block-section.scss?tag=calcite-block-section&encapsulation=shadow", "../../@esri/calcite-components/dist/components/src/components/block-section/block-section.tsx"],
  "sourcesContent": ["export const IDS = {\n  content: \"content\",\n  toggle: \"toggle\",\n};\n\nexport const CSS = {\n  content: \"content\",\n  focusGuard: \"focus-guard\",\n  invalid: \"invalid\",\n  sectionHeader: \"section-header\",\n  sectionHeaderText: \"section-header__text\",\n  statusIcon: \"status-icon\",\n  toggle: \"toggle\",\n  toggleSwitch: \"toggle--switch\",\n  toggleSwitchContainer: \"toggle--switch-container\",\n  toggleSwitchContent: \"toggle--switch__content\",\n  toggleSwitchText: \"toggle--switch__text\",\n  valid: \"valid\",\n};\n\nexport const ICONS = {\n  menuOpen: \"chevron-down\",\n  menuClosedLeft: \"chevron-left\",\n  menuClosedRight: \"chevron-right\",\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n};\n", ":host {\n  @apply bg-foreground-1\n    text-color-2\n    text-n1\n    box-border\n    block;\n}\n\n:host([open]) {\n  @apply border-b-color-3\n    border-0\n    border-b\n    border-solid;\n}\n\n:host(:last-child) {\n  @apply border-b-0;\n}\n\n.toggle {\n  @apply text-color-2\n    w-full\n    border-0\n    bg-transparent\n    font-sans\n    font-medium;\n}\n\n.toggle--switch,\n.section-header {\n  @apply text-n1\n    focus-base\n    mx-0\n    my-1\n    flex\n    cursor-pointer\n    select-none\n    items-center\n    px-0\n    py-2;\n\n  &:focus {\n    @apply focus-outset;\n  }\n  &:hover {\n    @apply text-color-1;\n  }\n}\n\n.section-header .status-icon {\n  @apply self-end;\n}\n\n.section-header__text {\n  @apply mx-3\n    my-0\n    flex-auto;\n\n  text-align: initial;\n  word-wrap: anywhere;\n}\n\n.toggle--switch-container {\n  @apply flex items-center relative bg-transparent w-full;\n  word-break: break-word;\n\n  .focus-guard {\n    --calcite-label-margin-bottom: 0;\n    @apply absolute pointer-events-none;\n    inset-inline-end: 0;\n    margin-inline-start: theme(\"margin.1\");\n  }\n}\n\n.toggle--switch {\n  .status-icon {\n    margin-inline-start: theme(\"margin.2\");\n  }\n}\n\n.toggle--switch__content {\n  @apply flex flex-auto items-center;\n}\n\n.status-icon.valid {\n  color: theme(\"colors.success\");\n}\n\n.status-icon.invalid {\n  color: theme(\"colors.danger\");\n}\n\n:host([toggle-display=\"switch\"]) .toggle {\n  .toggle--switch__content {\n    @apply me-7;\n  }\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport { focusFirstTabbable, getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Status } from \"../interfaces\";\nimport { BlockSectionMessages } from \"./assets/block-section/t9n\";\nimport { BlockSectionToggleDisplay } from \"./interfaces\";\nimport { CSS, ICONS, IDS } from \"./resources\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-block-section\",\n  styleUrl: \"block-section.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class BlockSection implements LocalizedComponent, T9nComponent, LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, expands the component and its contents.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  /**\n   * Displays a status-related indicator icon.\n   */\n  @Prop({ reflect: true }) status: Status;\n\n  /**\n   * The component header text.\n   */\n  @Prop() text: string;\n\n  /**\n   * Specifies how the component's toggle is displayed, where:\n   *\n   * `\"button\"` sets the toggle to a selectable header, and\n   *\n   * `\"switch\"` sets the toggle to a switch.\n   */\n  @Prop({ reflect: true }) toggleDisplay: BlockSectionToggleDisplay = \"button\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: BlockSectionMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<BlockSectionMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first tabbable element.\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteBlockSectionElement;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: BlockSectionMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the header has been clicked.\n   */\n  @Event({ cancelable: false }) calciteBlockSectionToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleHeaderKeyDown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.toggleSection();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  toggleSection = (): void => {\n    this.open = !this.open;\n    this.calciteBlockSectionToggle.emit();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  renderStatusIcon(): VNode[] {\n    const { status } = this;\n    const statusIcon = ICONS[status] ?? false;\n    const statusIconClasses = {\n      [CSS.statusIcon]: true,\n      [CSS.valid]: status == \"valid\",\n      [CSS.invalid]: status == \"invalid\",\n    };\n\n    return !!statusIcon ? (\n      <calcite-icon class={statusIconClasses} icon={statusIcon} scale=\"s\" />\n    ) : null;\n  }\n\n  render(): VNode {\n    const { el, messages, open, text, toggleDisplay } = this;\n    const dir = getElementDir(el);\n    const arrowIcon = open\n      ? ICONS.menuOpen\n      : dir === \"rtl\"\n        ? ICONS.menuClosedLeft\n        : ICONS.menuClosedRight;\n\n    const toggleLabel = open ? messages.collapse : messages.expand;\n\n    const headerNode =\n      toggleDisplay === \"switch\" ? (\n        <div\n          class={{\n            [CSS.toggleSwitchContainer]: true,\n          }}\n        >\n          <div\n            aria-controls={IDS.content}\n            aria-expanded={toAriaBoolean(open)}\n            class={{\n              [CSS.toggle]: true,\n              [CSS.toggleSwitch]: true,\n            }}\n            id={IDS.toggle}\n            onClick={this.toggleSection}\n            onKeyDown={this.handleHeaderKeyDown}\n            role=\"button\"\n            tabIndex={0}\n            title={toggleLabel}\n          >\n            <div class={CSS.toggleSwitchContent}>\n              <span class={CSS.toggleSwitchText}>{text}</span>\n            </div>\n            {this.renderStatusIcon()}\n          </div>\n          {/* we use calcite-label to use a simple component that will allow us to prevent keyboard focus by setting tabindex=\"-1\" on the host */}\n          <calcite-label class={CSS.focusGuard} layout=\"inline\" tabIndex={-1}>\n            <calcite-switch checked={open} label={toggleLabel} scale=\"s\" />\n          </calcite-label>\n        </div>\n      ) : (\n        <button\n          aria-controls={IDS.content}\n          aria-expanded={toAriaBoolean(open)}\n          class={{\n            [CSS.sectionHeader]: true,\n            [CSS.toggle]: true,\n          }}\n          id={IDS.toggle}\n          onClick={this.toggleSection}\n        >\n          <calcite-icon icon={arrowIcon} scale=\"s\" />\n          <span class={CSS.sectionHeaderText}>{text}</span>\n          {this.renderStatusIcon()}\n        </button>\n      );\n\n    return (\n      <Host>\n        {headerNode}\n        <section aria-labelledby={IDS.toggle} class={CSS.content} hidden={!open} id={IDS.content}>\n          <slot />\n        </section>\n      </Host>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["BlockSection"]
}
