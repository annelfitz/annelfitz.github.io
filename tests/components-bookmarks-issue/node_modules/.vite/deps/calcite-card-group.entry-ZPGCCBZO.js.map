{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/esm/src/components/card-group/card-group.scss?tag=calcite-card-group&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/card-group/card-group.tsx"],
  "sourcesContent": ["/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-card-group-gap: Specifies the gap between slotted components.\n */\n\n:host {\n  --calcite-card-group-gap: var(--calcite-size-md);\n  display: block;\n}\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--calcite-card-group-gap);\n}\n\n@include disabled();\n@include base-component();\n", "import {\n  Component,\n  h,\n  VNode,\n  Prop,\n  Element,\n  Listen,\n  EventEmitter,\n  Event,\n  Method,\n  Watch,\n  Host,\n} from \"@stencil/core\";\nimport { focusElement, focusElementInGroup, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport {\n  LoadableComponent,\n  componentLoaded,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n/**\n * @slot - A slot for adding one or more `calcite-card`s.\n */\n\n@Component({\n  tag: \"calcite-card-group\",\n  styleUrl: \"card-group.scss\",\n  shadow: true,\n})\nexport class CardGroup implements InteractiveComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Element\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteCardGroupElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /** Specifies the size of the component. Child `calcite-card`s inherit the component's value. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the selection mode of the component. */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"multiple\" | \"single\" | \"single-persist\" | \"none\",\n    SelectionMode\n  > = \"none\";\n\n  @Watch(\"selectionMode\")\n  onSelectionModeChange(): void {\n    this.udpateItemsOnSelectionModeChange();\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteCardElement[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  private items: HTMLCalciteCardElement[] = [];\n\n  private slotRefEl: HTMLSlotElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Emits when the component's selection changes and the `selectionMode` is not `none`. */\n  @Event({ cancelable: false }) calciteCardGroupSelect: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalCardKeyEvent\")\n  calciteInternalCardKeyEventListener(event: KeyboardEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      const interactiveItems = this.items.filter((el) => !el.disabled);\n      switch (event.detail[\"key\"]) {\n        case \"ArrowRight\":\n          focusElementInGroup(interactiveItems, event.target as HTMLCalciteCardElement, \"next\");\n          break;\n        case \"ArrowLeft\":\n          focusElementInGroup(interactiveItems, event.target as HTMLCalciteCardElement, \"previous\");\n          break;\n        case \"Home\":\n          focusElementInGroup(interactiveItems, event.target as HTMLCalciteCardElement, \"first\");\n          break;\n        case \"End\":\n          focusElementInGroup(interactiveItems, event.target as HTMLCalciteCardElement, \"last\");\n          break;\n      }\n    }\n  }\n\n  @Listen(\"calciteCardSelect\")\n  calciteCardSelectListener(event: CustomEvent): void {\n    if (\n      event.composedPath().includes(this.el) &&\n      !(event.target as HTMLCalciteCardElement).selectable\n    ) {\n      this.setSelectedItems(true, event.target as HTMLCalciteCardElement);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentLoaded(this);\n    if (!this.disabled) {\n      focusElement(this.items[0]);\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private udpateItemsOnSelectionModeChange = (): void => {\n    this.updateSlottedItems(this.slotRefEl);\n    this.updateSelectedItems();\n  };\n\n  private updateItemsOnSlotChange = (event: Event): void => {\n    this.updateSlottedItems(event.target as HTMLSlotElement);\n    this.updateSelectedItems();\n  };\n\n  private updateSlottedItems = (target: HTMLSlotElement): void => {\n    this.items = target\n      .assignedElements({ flatten: true })\n      .filter((el) => el?.matches(\"calcite-card\")) as HTMLCalciteCardElement[];\n  };\n\n  private updateSelectedItems = (): void => {\n    this.items.forEach((el) => {\n      el.selectionMode = this.selectionMode;\n    });\n\n    this.setSelectedItems(false);\n  };\n\n  private setSelectedItems = (emit: boolean, elToMatch?: HTMLCalciteCardElement): void => {\n    if (elToMatch) {\n      this.items.forEach((el) => {\n        const matchingEl = elToMatch === el;\n        switch (this.selectionMode) {\n          case \"multiple\":\n            if (matchingEl) {\n              el.selected = !el.selected;\n            }\n            break;\n\n          case \"single\":\n            el.selected = matchingEl ? !el.selected : false;\n            break;\n\n          case \"single-persist\":\n            el.selected = !!matchingEl;\n            break;\n        }\n      });\n    }\n\n    this.selectedItems = this.items.filter((el) => el.selected);\n\n    if (emit && this.selectionMode !== \"none\" && !this.disabled) {\n      this.calciteCardGroupSelect.emit();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const role =\n      this.selectionMode === \"none\" || this.selectionMode === \"multiple\" ? \"group\" : \"radiogroup\";\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-disabled={toAriaBoolean(this.disabled)}\n            aria-label={this.label}\n            class=\"container\"\n            role={role}\n          >\n            <slot\n              onSlotchange={this.updateItemsOnSlotChange}\n              ref={(el) => (this.slotRefEl = el as HTMLSlotElement)}\n            />\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
