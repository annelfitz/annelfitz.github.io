{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/ShadowCastVisualize.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{clone as e,fromValues as s}from\"../core/libs/gl-matrix-2/factories/vec4f64.js\";import{ScreenSpacePass as a}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{ReadLinearDepth as o}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadDepth.glsl.js\";import{CameraSpace as r}from\"../views/3d/webgl-engine/core/shaderLibrary/util/CameraSpace.glsl.js\";import{RgbaFloatEncoding as i}from\"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{Float4PassUniform as t}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as l}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{NoParameters as n,glsl as d}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as c}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as m}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{S as h}from\"./ShadowCastAccumulate.glsl.js\";import{ShadowCastVisualization as u}from\"../views/3d/webgl-engine/shaders/ShadowCastVisualizeTechniqueConfiguration.js\";class p extends n{constructor(s){super(),this._data=s,this.sampleScale=0,this.opacityFromElevation=1,this.color=e(g),this.bandSize=.1,this.threshold=.5}get shadowCastMap(){return this._data.shadowCastTexture}}const g=s(.01,0,.25,1);function w(e){const s=new c,n=s.fragment;n.include(i),n.include(o),s.include(r),s.include(a);const{visualization:p,bandsEnabled:g}=e;n.constants.add(\"inverseSampleValue\",\"float\",h),n.uniforms.add(new m(\"shadowCastMap\",(e=>e.shadowCastMap)),new l(\"sampleScale\",(e=>e.sampleScale)),new l(\"opacityFromElevation\",(e=>e.opacityFromElevation)),new t(\"uColor\",(e=>e.color)));const w=p===u.Gradient,f=p===u.Threshold;return w&&g?n.uniforms.add(new l(\"bandSize\",(e=>e.bandSize))):f&&n.uniforms.add(new l(\"threshold\",(e=>e.threshold))),n.code.add(d`\n    void main(void) {\n      float record = texture(shadowCastMap, uv).r;\n      float pixelSamples = record * inverseSampleValue;\n      if (pixelSamples < 1.0) {\n        discard;\n      }\n\n      float strength = pixelSamples * sampleScale;\n\n      ${f?d`\n          if (strength <= threshold) {\n            discard;\n          }`:\"\"}\n\n      ${w&&g?d`strength = ceil(strength / bandSize) * bandSize;`:\"\"}\n\n      fragColor = vec4(uColor.xyz, uColor.a * opacityFromElevation ${w?d`* strength`:\"\"});\n    }\n  `),s}const f=Object.freeze(Object.defineProperty({__proto__:null,ShadowCastVisualizePassParameters:p,build:w},Symbol.toStringTag,{value:\"Module\"}));export{p as S,f as a,w as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAImpC,IAAM,IAAN,cAAgB,EAAC;AAAA,EAAC,YAAYA,IAAE;AAAC,UAAM,GAAE,KAAK,QAAMA,IAAE,KAAK,cAAY,GAAE,KAAK,uBAAqB,GAAE,KAAK,QAAM,EAAE,CAAC,GAAE,KAAK,WAAS,KAAG,KAAK,YAAU;AAAA,EAAE;AAAA,EAAC,IAAI,gBAAe;AAAC,WAAO,KAAK,MAAM;AAAA,EAAiB;AAAC;AAAC,IAAM,IAAE,EAAE,MAAI,GAAE,MAAI,CAAC;AAAE,SAAS,EAAEC,IAAE;AAAC,QAAMD,KAAE,IAAIE,MAAEC,KAAEH,GAAE;AAAS,EAAAG,GAAE,QAAQ,CAAC,GAAEA,GAAE,QAAQ,CAAC,GAAEH,GAAE,QAAQ,CAAC,GAAEA,GAAE,QAAQE,EAAC;AAAE,QAAK,EAAC,eAAcE,IAAE,cAAaC,GAAC,IAAEJ;AAAE,EAAAE,GAAE,UAAU,IAAI,sBAAqB,SAAQ,CAAC,GAAEA,GAAE,SAAS,IAAI,IAAI,EAAE,iBAAiB,CAAAF,OAAGA,GAAE,aAAc,GAAE,IAAIC,GAAE,eAAe,CAAAD,OAAGA,GAAE,WAAY,GAAE,IAAIC,GAAE,wBAAwB,CAAAD,OAAGA,GAAE,oBAAqB,GAAE,IAAI,EAAE,UAAU,CAAAA,OAAGA,GAAE,KAAM,CAAC;AAAE,QAAMK,KAAEF,OAAIG,GAAE,UAASC,KAAEJ,OAAIG,GAAE;AAAU,SAAOD,MAAGD,KAAEF,GAAE,SAAS,IAAI,IAAID,GAAE,YAAY,CAAAD,OAAGA,GAAE,QAAS,CAAC,IAAEO,MAAGL,GAAE,SAAS,IAAI,IAAID,GAAE,aAAa,CAAAD,OAAGA,GAAE,SAAU,CAAC,GAAEE,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAU54DK,KAAE;AAAA;AAAA;AAAA,eAGG,EAAE;AAAA;AAAA,QAEPF,MAAGD,KAAE,sDAAoD,EAAE;AAAA;AAAA,qEAEEC,KAAE,gBAAc,EAAE;AAAA;AAAA,GAEpF,GAAEN;AAAC;AAAC,IAAMQ,KAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,mCAAkC,GAAE,OAAM,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["s", "e", "o", "n", "p", "g", "w", "t", "f"]
}
