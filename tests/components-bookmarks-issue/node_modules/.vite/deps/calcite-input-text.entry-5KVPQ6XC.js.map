{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/esm/src/components/input-text/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/input-text/input-text.scss?tag=calcite-input-text&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/input-text/input-text.tsx"],
  "sourcesContent": ["export const CSS = {\n  loader: \"loader\",\n  clearButton: \"clear-button\",\n  editingEnabled: \"editing-enabled\",\n  inlineChild: \"inline-child\",\n  inputIcon: \"icon\",\n  prefix: \"prefix\",\n  suffix: \"suffix\",\n  wrapper: \"element-wrapper\",\n  inputWrapper: \"wrapper\",\n  actionWrapper: \"action-wrapper\",\n  resizeIconWrapper: \"resize-icon-wrapper\",\n};\n\nexport const SLOTS = {\n  action: \"action\",\n};\n", ":host {\n  @apply block;\n}\n\n// scales\n:host([scale=\"s\"]) {\n  & input {\n    padding-inline-start: theme(\"spacing.2\");\n    padding-inline-end: var(--calcite-internal-input-text-input-padding-inline-end, theme(\"spacing.2\"));\n  }\n\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n2h h-6;\n  }\n\n  & .prefix,\n  & .suffix {\n    @apply px-2;\n  }\n\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-6;\n  }\n\n  & .clear-button {\n    min-block-size: theme(\"spacing.6\");\n    min-inline-size: theme(\"spacing.6\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  & input {\n    padding-inline-start: theme(\"spacing.3\");\n    padding-inline-end: var(--calcite-internal-input-text-input-padding-inline-end, theme(\"spacing.3\"));\n  }\n\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n1h h-8;\n  }\n\n  & .prefix,\n  & .suffix {\n    @apply px-3;\n  }\n\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-8;\n  }\n\n  & .clear-button {\n    min-block-size: theme(\"spacing.8\");\n    min-inline-size: theme(\"spacing.8\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  & input {\n    padding-inline-start: theme(\"spacing.4\");\n    padding-inline-end: var(--calcite-internal-input-text-input-padding-inline-end, theme(\"spacing.4\"));\n  }\n\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-0h h-11;\n  }\n\n  & .prefix,\n  & .suffix {\n    @apply px-4;\n  }\n\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-11;\n  }\n\n  & .clear-button {\n    min-block-size: theme(\"spacing.11\");\n    min-inline-size: theme(\"spacing.11\");\n  }\n}\n\n@include disabled();\n\ninput {\n  transition:\n    var(--calcite-animation-timing),\n    block-size 0,\n    outline-offset 0s;\n  -webkit-appearance: none;\n  @apply bg-foreground-1\n    box-border\n    flex\n    flex-1\n    font-inherit\n    font-normal\n    m-0\n    max-h-full\n    max-w-full\n    relative\n    rounded-none\n    text-color-1\n    text-ellipsis\n    w-full;\n\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\n\n// states\ninput {\n  @apply text-color-1\n    border-color-input\n    border\n    border-solid;\n  &::placeholder,\n  &:-ms-input-placeholder,\n  &::-ms-input-placeholder {\n    @apply text-color-3 font-normal;\n  }\n}\ninput:focus {\n  @apply border-color-brand text-color-1;\n}\ninput[readonly] {\n  @apply bg-background font-medium;\n}\ninput[readonly]:focus {\n  @apply text-color-1;\n}\ncalcite-icon {\n  @apply text-color-3;\n}\n\n//focus\n\ninput {\n  @apply focus-base;\n}\ninput:focus {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) {\n  & input {\n    @apply border-color-danger;\n  }\n  & input:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n// ICONS\n\n// position icons\n\n:host([scale=\"s\"]) .icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n:host([scale=\"m\"]) .icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host([scale=\"l\"]) .icon {\n  inset-inline-start: theme(\"spacing.4\");\n}\n\n// position placeholder/value text in relation to icons\n\n:host([icon][scale=\"s\"]) input {\n  padding-inline-start: theme(\"padding.8\");\n}\n\n:host([icon][scale=\"m\"]) input {\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host([icon][scale=\"l\"]) input {\n  padding-inline-start: theme(\"padding.14\");\n}\n\n// positioning wrapper for icon and loader\n\n.element-wrapper {\n  @apply relative\n    order-3\n    inline-flex\n    flex-1\n    items-center;\n}\n\n.icon {\n  @apply transition-default\n    pointer-events-none\n    absolute\n    block\n\n    z-default; // needed for firefox to display the icon properly\n}\n\n// hide browser default clear\n\ninput[type=\"text\"]::-ms-clear,\ninput[type=\"text\"]::-ms-reveal {\n  @apply hidden\n    h-0\n    w-0;\n}\n\n.clear-button {\n  pointer-events: initial;\n  @apply focus-base\n    border-color-input\n    bg-foreground-1\n    order-4\n    m-0\n    box-border\n    flex\n    min-h-full\n    cursor-pointer\n    items-center\n    justify-center\n    self-stretch\n    border\n    border-solid;\n\n  border-inline-start-width: theme(\"borderWidth.0\");\n\n  &:hover {\n    @apply bg-foreground-2 transition-default;\n    calcite-icon {\n      @apply text-color-1 transition-default;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:disabled {\n    @apply opacity-disabled;\n  }\n}\n\n// loading\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  @apply pointer-events-none\n    absolute\n    block;\n}\n\n// slotted action\n.action-wrapper {\n  @apply order-7 flex;\n}\n\n// prefix and suffix\n.prefix,\n.suffix {\n  @apply border-color-input\n    bg-background\n    text-color-2\n    box-border\n    flex\n    h-auto\n    min-h-full\n    select-none\n    content-center\n    items-center\n    break-words\n    border\n    border-solid\n    font-medium\n    leading-none;\n}\n\n.prefix {\n  @apply order-2;\n  border-inline-end-width: theme(\"borderWidth.0\");\n}\n.suffix {\n  @apply order-5;\n  border-inline-start-width: theme(\"borderWidth.0\");\n}\n\n// alignment type\n:host([alignment=\"start\"]) {\n  & input {\n    text-align: start;\n  }\n}\n\n:host([alignment=\"end\"]) {\n  & input {\n    text-align: end;\n  }\n}\n\n.wrapper {\n  @apply relative\n    flex\n    flex-row\n    items-center;\n}\n\n:host(.no-bottom-border) input {\n  @apply border-b-0;\n}\n\n:host(.border-top-color-one) input {\n  @apply border-t-color-1;\n}\n\n// input needed for higher specificity of these overrides\ninput {\n  &.inline-child {\n    @apply transition-default bg-transparent;\n    .editing-enabled {\n      background-color: inherit;\n    }\n  }\n\n  &.inline-child:not(.editing-enabled) {\n    @apply border-color-transparent\n    flex\n    cursor-pointer text-ellipsis;\n    padding-inline-start: 0;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { getElementDir, getSlotted, setRequestedIcon } from \"../../utils/dom\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  internalHiddenInputInputEvent,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { SetValueOrigin } from \"../input/interfaces\";\nimport { Alignment, Scale, Status } from \"../interfaces\";\nimport { InputTextMessages } from \"./assets/input-text/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { syncHiddenFormInput, TextualInputComponent } from \"../input/common/input\";\n\n/**\n * @slot action - A slot for positioning a button next to the component.\n */\n@Component({\n  tag: \"calcite-input-text\",\n  styleUrl: \"input-text.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class InputText\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    TextualInputComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component's value. */\n  @Prop({ reflect: true }) alignment: Extract<\"start\" | \"end\", Alignment> = \"start\";\n\n  /**\n   * When `true`, the component is focused on page load. Only one element can contain `autofocus`. If multiple elements have `autofocus`, the first element will receive focus.\n   *\n   * @mdn [autofocus](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autofocus)\n   */\n  @Prop({ reflect: true }) autofocus = false;\n\n  /**\n   * When `true`, a clear button is displayed when the component has a value.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(): void {\n    this.setDisabledAction();\n  }\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true })\n  form: string;\n\n  /**\n   * Specifies an icon to display.\n   *\n   * @futureBreaking Remove boolean type as it is not supported.\n   */\n  @Prop({ reflect: true }) icon: string | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Accessible name for the component's button or hyperlink. */\n  @Prop() label: string;\n\n  /** When `true`, the component is in the loading state and `calcite-progress` is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the maximum length of text for the component's value.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Specifies the minimum length of text for the component's value.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: string | boolean;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * Specifies placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /** Adds text to the start of the component. */\n  @Prop() prefixText: string;\n\n  /**\n   * When `true`, the component's value can be read, but cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the type of content to autocomplete, for use in forms.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n   */\n  @Prop() autocomplete: string;\n\n  /**\n   * Specifies the type of content to help devices display an appropriate virtual keyboard.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode)\n   */\n  @Prop() inputMode = \"text\";\n\n  /**\n   * Specifies the action label or icon for the Enter key on virtual keyboards.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/enterkeyhint)\n   */\n  @Prop() enterKeyHint: string;\n\n  /**\n   * Specifies a regex pattern the component's `value` must match for validation.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\n   */\n  @Prop() pattern: string;\n\n  /** Adds text to the end of the component.  */\n  @Prop() suffixText: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputTextMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputTextMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string, previousValue: string): void {\n    if (!this.userChangedValue) {\n      this.setValue({\n        origin: \"direct\",\n        previousValue,\n        value: !newValue ? \"\" : newValue,\n      });\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"icon\")\n  updateRequestedIcon(): void {\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"text\");\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputTextElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: InputText[\"value\"];\n\n  inlineEditableEl: HTMLCalciteInlineEditableElement;\n\n  /** keep track of the rendered child */\n  private childEl?: HTMLInputElement;\n\n  get isClearable(): boolean {\n    return this.clearable && this.value.length > 0;\n  }\n\n  private previousEmittedValue: string;\n\n  private previousValue: string;\n\n  private previousValueOrigin: SetValueOrigin = \"initial\";\n\n  /** the computed icon to render */\n  private requestedIcon?: string;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n\n  private userChangedValue = false;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: InputTextMessages;\n\n  @State() slottedActionElDisabledInternally = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n\n    this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n    if (this.inlineEditableEl) {\n      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n    }\n    this.setPreviousEmittedValue(this.value);\n    this.setPreviousValue(this.value);\n\n    connectLabel(this);\n    connectForm(this);\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.setDisabledAction();\n    this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n\n    this.mutationObserver?.disconnect();\n    this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"text\");\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event() calciteInternalInputTextFocus: EventEmitter<{\n    element: HTMLInputElement;\n    value: string;\n  }>;\n\n  /**\n   * @internal\n   */\n  @Event() calciteInternalInputTextBlur: EventEmitter<{ element: HTMLInputElement; value: string }>;\n\n  /**\n   * Fires each time a new value is typed.\n   */\n  @Event({ cancelable: true }) calciteInputTextInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new value is typed and committed.\n   */\n  @Event() calciteInputTextChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.childEl?.focus();\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    this.childEl?.select();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly || this.disabled) {\n      return;\n    }\n    if (this.isClearable && event.key === \"Escape\") {\n      this.clearInputTextValue(event);\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\" && !event.defaultPrevented) {\n      if (submitForm(this)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private clearInputTextValue = (nativeEvent: KeyboardEvent | MouseEvent): void => {\n    this.setValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: \"\",\n    });\n  };\n\n  private emitChangeIfUserModified = (): void => {\n    if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedValue) {\n      this.calciteInputTextChange.emit();\n      this.setPreviousEmittedValue(this.value);\n    }\n  };\n\n  private inputTextBlurHandler = () => {\n    this.calciteInternalInputTextBlur.emit({\n      element: this.childEl,\n      value: this.value,\n    });\n\n    this.emitChangeIfUserModified();\n  };\n\n  private clickHandler = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    const slottedActionEl = getSlotted(this.el, \"action\");\n    if (event.target !== slottedActionEl) {\n      this.setFocus();\n    }\n  };\n\n  private inputTextFocusHandler = (): void => {\n    this.calciteInternalInputTextFocus.emit({\n      element: this.childEl,\n      value: this.value,\n    });\n  };\n\n  private inputTextInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    this.setValue({\n      nativeEvent,\n      origin: \"user\",\n      value: (nativeEvent.target as HTMLInputElement).value,\n    });\n  };\n\n  private inputTextKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    if (event.key === \"Enter\") {\n      this.emitChangeIfUserModified();\n    }\n  };\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(\"text\", this, input);\n  }\n\n  private onHiddenFormInputInput = (event: Event): void => {\n    if ((event.target as HTMLInputElement).name === this.name) {\n      this.setValue({\n        value: (event.target as HTMLInputElement).value,\n        origin: \"direct\",\n      });\n    }\n    this.setFocus();\n    event.stopPropagation();\n  };\n\n  private setChildElRef = (el) => {\n    this.childEl = el;\n  };\n\n  private setDisabledAction(): void {\n    const slottedActionEl = getSlotted(this.el, \"action\");\n\n    if (!slottedActionEl) {\n      return;\n    }\n\n    if (this.disabled) {\n      if (slottedActionEl.getAttribute(\"disabled\") == null) {\n        this.slottedActionElDisabledInternally = true;\n      }\n      slottedActionEl.setAttribute(\"disabled\", \"\");\n    } else if (this.slottedActionElDisabledInternally) {\n      slottedActionEl.removeAttribute(\"disabled\");\n      this.slottedActionElDisabledInternally = false;\n    }\n  }\n\n  private setInputValue = (newInputValue: string): void => {\n    if (!this.childEl) {\n      return;\n    }\n    this.childEl.value = newInputValue;\n  };\n\n  private setPreviousEmittedValue = (value: string): void => {\n    this.previousEmittedValue = value;\n  };\n\n  private setPreviousValue = (value: string): void => {\n    this.previousValue = value;\n  };\n\n  private setValue = ({\n    committing = false,\n    nativeEvent,\n    origin,\n    previousValue,\n    value,\n  }: {\n    committing?: boolean;\n    nativeEvent?: MouseEvent | KeyboardEvent | InputEvent;\n    origin: SetValueOrigin;\n    previousValue?: string;\n    value: string;\n  }): void => {\n    this.setPreviousValue(previousValue ?? this.value);\n    this.previousValueOrigin = origin;\n    this.userChangedValue = origin === \"user\" && value !== this.value;\n    this.value = value;\n\n    if (origin === \"direct\") {\n      this.setInputValue(value);\n      this.setPreviousEmittedValue(value);\n    }\n\n    if (nativeEvent) {\n      const calciteInputTextInputEvent = this.calciteInputTextInput.emit();\n\n      if (calciteInputTextInputEvent.defaultPrevented) {\n        this.value = this.previousValue;\n      } else if (committing) {\n        this.emitChangeIfUserModified();\n      }\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const loader = (\n      <div class={CSS.loader}>\n        <calcite-progress label={this.messages.loading} type=\"indeterminate\" />\n      </div>\n    );\n\n    const inputClearButton = (\n      <button\n        aria-label={this.messages.clear}\n        class={CSS.clearButton}\n        disabled={this.disabled || this.readOnly}\n        onClick={this.clearInputTextValue}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n    const iconEl = (\n      <calcite-icon\n        class={CSS.inputIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.requestedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n    const prefixText = <div class={CSS.prefix}>{this.prefixText}</div>;\n\n    const suffixText = <div class={CSS.suffix}>{this.suffixText}</div>;\n\n    const childEl = (\n      <input\n        aria-label={getLabelText(this)}\n        autocomplete={this.autocomplete}\n        autofocus={this.autofocus ? true : null}\n        class={{\n          [CSS.editingEnabled]: this.editingEnabled,\n          [CSS.inlineChild]: !!this.inlineEditableEl,\n        }}\n        defaultValue={this.defaultValue}\n        disabled={this.disabled ? true : null}\n        enterKeyHint={this.enterKeyHint}\n        inputMode={this.inputMode}\n        maxLength={this.maxLength}\n        minLength={this.minLength}\n        name={this.name}\n        onBlur={this.inputTextBlurHandler}\n        onFocus={this.inputTextFocusHandler}\n        onInput={this.inputTextInputHandler}\n        onKeyDown={this.inputTextKeyDownHandler}\n        pattern={this.pattern}\n        placeholder={this.placeholder || \"\"}\n        readOnly={this.readOnly}\n        required={this.required ? true : null}\n        tabIndex={this.disabled || (this.inlineEditableEl && !this.editingEnabled) ? -1 : null}\n        type=\"text\"\n        value={this.value}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.setChildElRef}\n      />\n    );\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div class={{ [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}>\n            {this.prefixText ? prefixText : null}\n            <div class={CSS.wrapper}>\n              {childEl}\n              {this.isClearable ? inputClearButton : null}\n              {this.requestedIcon ? iconEl : null}\n              {this.loading ? loader : null}\n            </div>\n            <div class={CSS.actionWrapper}>\n              <slot name={SLOTS.action} />\n            </div>\n            {this.suffixText ? suffixText : null}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
