{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/esm/src/components/action/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/action/action.scss?tag=calcite-action&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/action/action.tsx"],
  "sourcesContent": ["export const CSS = {\n  button: \"button\",\n  buttonTextVisible: \"button--text-visible\",\n  buttonCompact: \"button--compact\",\n  indicatorText: \"indicator-text\",\n  iconContainer: \"icon-container\",\n  slotContainer: \"slot-container\",\n  slotContainerHidden: \"slot-container--hidden\",\n  textContainer: \"text-container\",\n  textContainerVisible: \"text-container--visible\",\n  indicatorWithIcon: \"indicator-with-icon\",\n  indicatorWithoutIcon: \"indicator-without-icon\",\n};\n\nexport const SLOTS = {\n  tooltip: \"tooltip\",\n};\n", "/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-indicator-color: Specifies the color of the component's indicator.\n */\n\n:host {\n  @extend %component-host;\n  @apply flex bg-transparent;\n  --calcite-action-indicator-color: theme(\"colors.brand\");\n  --calcite-action-color-transparent-hover: var(--calcite-color-transparent-hover);\n  --calcite-action-color-transparent-press: var(--calcite-color-transparent-press);\n}\n\n@mixin action-indicator() {\n  position: relative;\n  &::after {\n    content: \"\";\n    @apply absolute\n      h-2\n      w-2\n      rounded-full;\n    inset-block-end: calc(-0.275rem);\n    inset-inline-end: calc(-0.275rem);\n    background-color: var(--calcite-action-indicator-color);\n  }\n}\n\n@include disabled();\n\n.button {\n  @apply bg-foreground-1\n    fill-color-3\n    focus-base\n    text-n2h\n    text-color-3\n    relative\n    m-0\n    flex\n    w-auto\n    cursor-pointer\n    items-center\n    justify-start\n    border-none\n    font-sans\n    font-medium;\n\n  text-align: unset;\n  flex: 1 0 auto;\n  &:hover {\n    @apply bg-foreground-2 text-color-1 fill-color-1;\n  }\n\n  &:focus {\n    @apply bg-foreground-2 text-color-1 fill-color-1 focus-inset;\n  }\n\n  &:active {\n    @apply bg-foreground-3;\n  }\n\n  .icon-container {\n    @apply pointer-events-none\n      m-0\n      flex\n      items-center\n      justify-center;\n    min-inline-size: theme(\"spacing.4\");\n    min-block-size: theme(\"spacing.4\");\n  }\n\n  .text-container {\n    @apply m-0\n      w-0\n      truncate\n      leading-6\n      opacity-0\n      transition-opacity\n      duration-150\n      ease-in-out;\n    transition-property: margin;\n    transition-property: inline-size;\n  }\n\n  .text-container--visible {\n    @apply w-auto flex-auto opacity-100;\n  }\n}\n\n:host([data-active]) .button {\n  @apply focus-inset;\n}\n\n:host([scale=\"s\"]) {\n  .button {\n    @apply text-n2h px-2 py-1 font-normal;\n  }\n  .button--text-visible .icon-container {\n    margin-inline-end: theme(\"spacing.2\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  .button {\n    @apply text-n1h px-4 py-3 font-normal;\n  }\n  .button--text-visible .icon-container {\n    margin-inline-end: theme(\"spacing.3\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  .button {\n    @apply text-0h p-5 font-normal;\n  }\n  .button--text-visible .icon-container {\n    margin-inline-end: theme(\"spacing.4\");\n  }\n}\n\n:host([alignment=\"center\"]) .button {\n  @apply justify-center;\n}\n\n:host([alignment=\"end\"]) .button {\n  @apply justify-end;\n}\n\n:host([alignment=\"center\"]),\n:host([alignment=\"end\"]) {\n  .button .text-container--visible {\n    @apply flex-initial;\n  }\n}\n\n// Compact\n:host([scale=\"s\"][compact]) .button,\n:host([scale=\"m\"][compact]) .button,\n:host([scale=\"l\"][compact]) .button {\n  @apply px-0;\n}\n\n.slot-container {\n  @apply flex;\n}\n\n.slot-container--hidden {\n  @apply hidden;\n}\n\n.button--text-visible {\n  @apply w-full;\n}\n\n:host([active]) .button,\n:host([active]) .button:hover,\n:host([active]) .button:focus,\n:host([active][loading]) .button {\n  @apply text-color-1 fill-color-1 bg-foreground-3;\n}\n\n:host([active]) .button:active {\n  @apply bg-foreground-1;\n}\n\n:host([appearance=\"transparent\"]) .button {\n  @apply bg-transparent;\n}\n\n:host([appearance=\"transparent\"][active]) .button,\n:host([appearance=\"transparent\"]) .button:hover,\n:host([appearance=\"transparent\"]) .button:focus {\n  background-color: var(--calcite-action-color-transparent-hover);\n}\n\n:host([appearance=\"transparent\"]) .button:active {\n  background-color: var(--calcite-action-color-transparent-press);\n}\n\n:host([appearance=\"transparent\"][disabled]) .button {\n  @apply bg-transparent;\n}\n\n:host([loading][appearance=\"solid\"]) .button,\n:host([loading][appearance=\"solid\"]) .button:hover,\n:host([loading][appearance=\"solid\"]) .button:focus {\n  @apply bg-foreground-1;\n  .text-container {\n    @apply opacity-disabled;\n  }\n}\n\n:host([loading]) calcite-loader[inline] {\n  @apply text-color-3;\n  margin-inline-end: theme(\"spacing.0\");\n}\n\n:host([disabled]) .button,\n:host([disabled]) .button:hover,\n:host([disabled]) .button:focus {\n  @apply opacity-disabled bg-foreground-1 cursor-default;\n}\n\n:host([disabled][active]) .button,\n:host([disabled][active]) .button:hover,\n:host([disabled][active]) .button:focus {\n  @apply opacity-disabled bg-foreground-3;\n}\n\n:host([appearance=\"transparent\"]) .button {\n  @apply bg-transparent\n    transition-shadow\n    duration-150\n    ease-in-out;\n}\n\n.indicator-with-icon {\n  @include action-indicator();\n}\n\n.indicator-without-icon {\n  @apply w-4 mx-1;\n  @include action-indicator();\n}\n\n.indicator-text {\n  @apply sr-only;\n}\n\n@include base-component();\n", "import {\n  Build,\n  Component,\n  Element,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { getIconScale } from \"../../utils/component\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Alignment, Appearance, Scale } from \"../interfaces\";\nimport { ActionMessages } from \"./assets/action/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding a `calcite-icon`.\n * @slot tooltip - A slot for adding a `calcite-tooltip`.\n */\n@Component({\n  tag: \"calcite-action\",\n  styleUrl: \"action.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Action\n  implements InteractiveComponent, LocalizedComponent, T9nComponent, LoadableComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is highlighted.\n   */\n  @Prop({ reflect: true }) active = false;\n\n  /**\n   * Specifies the horizontal alignment of button elements with text content.\n   */\n  @Prop({ reflect: true }) alignment: Alignment;\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /**\n   * When `true`, the side padding of the component is reduced. Compact mode is used internally by components, e.g. `calcite-block-section`.\n   */\n  @Prop({ reflect: true }) compact = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Specifies an icon to display. */\n  @Prop() icon: string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * When `true`, displays a visual indicator.\n   */\n  @Prop({ reflect: true }) indicator = false;\n\n  /**\n   * Specifies the label of the component. If no label is provided, the label inherits what's provided for the `text` prop.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies text that accompanies the icon.\n   */\n  @Prop() text!: string;\n\n  /**\n   * Indicates whether the text is displayed.\n   */\n  @Prop({ reflect: true }) textEnabled = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionElement;\n\n  buttonEl: HTMLButtonElement;\n\n  mutationObserver = createObserver(\"mutation\", () => forceUpdate(this));\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionMessages;\n\n  guid = `calcite-action-${guid()}`;\n\n  indicatorId = `${this.guid}-indicator`;\n\n  buttonId = `${this.guid}-button`;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (Build.isBrowser) {\n      await setUpMessages(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.mutationObserver?.disconnect();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.buttonEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderTextContainer(): VNode {\n    const { text, textEnabled } = this;\n\n    const textContainerClasses = {\n      [CSS.textContainer]: true,\n      [CSS.textContainerVisible]: textEnabled,\n    };\n\n    return text ? (\n      <div class={textContainerClasses} key=\"text-container\">\n        {text}\n      </div>\n    ) : null;\n  }\n\n  renderIndicatorText(): VNode {\n    const { indicator, messages, indicatorId, buttonId } = this;\n    return (\n      <div\n        aria-labelledby={buttonId}\n        aria-live=\"polite\"\n        class={CSS.indicatorText}\n        id={indicatorId}\n        role=\"region\"\n      >\n        {indicator ? messages.indicator : null}\n      </div>\n    );\n  }\n\n  renderIconContainer(): VNode {\n    const { loading, icon, scale, el, iconFlipRtl, indicator } = this;\n    const loaderScale = scale === \"l\" ? \"l\" : \"m\";\n    const calciteLoaderNode = loading ? (\n      <calcite-loader inline label={this.messages.loading} scale={loaderScale} />\n    ) : null;\n    const calciteIconNode = icon ? (\n      <calcite-icon\n        class={{ [CSS.indicatorWithIcon]: indicator }}\n        flipRtl={iconFlipRtl}\n        icon={icon}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const iconNode = calciteLoaderNode || calciteIconNode;\n    const hasIconToDisplay = iconNode || el.children?.length;\n\n    const slotContainerNode = (\n      <div\n        class={{\n          [CSS.slotContainer]: true,\n          [CSS.slotContainerHidden]: loading,\n        }}\n      >\n        <slot />\n      </div>\n    );\n\n    return hasIconToDisplay ? (\n      <div aria-hidden=\"true\" class={CSS.iconContainer} key=\"icon-container\">\n        {iconNode}\n        {slotContainerNode}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const {\n      active,\n      compact,\n      disabled,\n      icon,\n      loading,\n      textEnabled,\n      label,\n      text,\n      indicator,\n      indicatorId,\n      buttonId,\n      messages,\n    } = this;\n    const ariaLabel = `${label || text}${indicator ? ` (${messages.indicator})` : \"\"}`;\n\n    const buttonClasses = {\n      [CSS.button]: true,\n      [CSS.buttonTextVisible]: textEnabled,\n      [CSS.buttonCompact]: compact,\n    };\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <button\n            aria-busy={toAriaBoolean(loading)}\n            aria-controls={indicator ? indicatorId : null}\n            aria-disabled={toAriaBoolean(disabled)}\n            aria-label={ariaLabel}\n            aria-pressed={toAriaBoolean(active)}\n            class={buttonClasses}\n            disabled={disabled}\n            id={buttonId}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(buttonEl): HTMLButtonElement => (this.buttonEl = buttonEl)}\n          >\n            {this.renderIconContainer()}\n            {this.renderTextContainer()}\n            {!icon && indicator && <div class={CSS.indicatorWithoutIcon} key=\"indicator-no-icon\" />}\n          </button>\n          <slot name={SLOTS.tooltip} onSlotchange={this.handleTooltipSlotChange} />\n          {this.renderIndicatorText()}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleTooltipSlotChange = (event: Event): void => {\n    const tooltips = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el) => el?.matches(\"calcite-tooltip\")) as HTMLCalciteTooltipElement[];\n\n    const tooltip = tooltips[0];\n\n    if (tooltip) {\n      tooltip.referenceElement = this.buttonEl;\n    }\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
