import {
  S as S2,
  d as d4,
  g,
  j as j2
} from "./chunk-AUJRLQGP.js";
import "./chunk-TUVEYM7U.js";
import "./chunk-5S637BGW.js";
import "./chunk-BFOJPIF7.js";
import "./chunk-Y7RXGLGH.js";
import "./chunk-GKMVTGGM.js";
import "./chunk-XGTCDM4C.js";
import "./chunk-QNG4TY7L.js";
import "./chunk-RW5QMWE6.js";
import "./chunk-LGMX4E7L.js";
import "./chunk-OKRW5W44.js";
import "./chunk-Q6RZBEZ6.js";
import "./chunk-PC66NY33.js";
import "./chunk-YY2VB3AE.js";
import "./chunk-VEYMN5N3.js";
import "./chunk-H6NTWZSO.js";
import "./chunk-BMT3OVAP.js";
import "./chunk-IYKBAIQE.js";
import "./chunk-BDRVHR2K.js";
import "./chunk-DVIGFJWY.js";
import "./chunk-AKEHDP75.js";
import "./chunk-5MMGIT64.js";
import "./chunk-F3BQGS35.js";
import "./chunk-Z3NX5DTX.js";
import "./chunk-J4RP32NG.js";
import "./chunk-6NLHKXEW.js";
import "./chunk-LMO6NZJA.js";
import "./chunk-A5QTLE4Y.js";
import "./chunk-SCHTG6ZQ.js";
import "./chunk-QYC3GV65.js";
import "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import {
  l
} from "./chunk-CYVKDANA.js";
import {
  j
} from "./chunk-4ZLXDMI5.js";
import {
  f as f2
} from "./chunk-EMYOYGGK.js";
import {
  n
} from "./chunk-6PMFOUWZ.js";
import "./chunk-3KPZ3BQR.js";
import "./chunk-5JYVZQZR.js";
import {
  t
} from "./chunk-UUG4W2PI.js";
import {
  u as u3
} from "./chunk-WW22JHXA.js";
import {
  S
} from "./chunk-ZAM62XN5.js";
import {
  d as d3
} from "./chunk-RKVEKQ5O.js";
import "./chunk-P7J4JFEH.js";
import {
  b
} from "./chunk-G7FOE26O.js";
import "./chunk-USOPZ2Q6.js";
import "./chunk-S5I4QKJD.js";
import "./chunk-LSM34QAB.js";
import "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import "./chunk-JW7VBMHD.js";
import "./chunk-GLLRUDMY.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-AKLOTDO2.js";
import "./chunk-6AQIVLDN.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-LBXFRGMS.js";
import "./chunk-HLDUDRTD.js";
import "./chunk-SLQA5YBV.js";
import "./chunk-UMXV3EBO.js";
import {
  m
} from "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-5LSHHVQ5.js";
import {
  w as w2
} from "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import {
  f
} from "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import {
  o as o2
} from "./chunk-YOPMY6TS.js";
import {
  r
} from "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import {
  bt
} from "./chunk-SAYWXQVM.js";
import {
  u2
} from "./chunk-SBL4URUW.js";
import {
  C,
  d as d2,
  v,
  w
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import {
  o
} from "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a2,
  d
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  a
} from "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  u
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/layers/support/KMLSublayer.js
var j3;
var S3 = j3 = class extends o.EventedMixin(u2(m)) {
  constructor(...e2) {
    super(...e2), this.description = null, this.fullExtent = null, this.id = null, this.networkLink = null, this.parent = null, this.sublayers = null, this.title = null, this.sourceJSON = null, this.layer = null, this.addHandles([v(() => this.sublayers, "after-add", ({ item: e3 }) => {
      e3.parent = this, e3.layer = this.layer;
    }, C), v(() => this.sublayers, "after-remove", ({ item: e3 }) => {
      e3.layer = e3.parent = null;
    }, C), d2(() => this.sublayers, (e3, t2) => {
      if (t2)
        for (const r2 of t2)
          r2.layer = r2.parent = null;
      if (e3)
        for (const r2 of e3)
          r2.parent = this, r2.layer = this.layer;
    }, C), d2(() => this.layer, (e3) => {
      if (this.sublayers)
        for (const t2 of this.sublayers)
          t2.layer = e3;
    }, C)]);
  }
  initialize() {
    w(() => this.networkLink).then(() => w(() => true === this.visible)).then(() => this.load());
  }
  load(e2) {
    var _a;
    if (!this.networkLink)
      return;
    if (this.networkLink.viewFormat)
      return;
    const r2 = null != e2 ? e2.signal : null, s = this._fetchService(((_a = this._get("networkLink")) == null ? void 0 : _a.href) ?? "", r2).then((e3) => {
      var _a2;
      const r3 = j2(e3.sublayers);
      this.fullExtent = w2.fromJSON(r3), this.sourceJSON = e3;
      const s2 = d(V.ofType(j3), S2(j3, e3));
      this.sublayers ? this.sublayers.addMany(s2) : this.sublayers = s2, (_a2 = this.layer) == null ? void 0 : _a2.emit("sublayer-update"), this.layer && this.layer.notifyChange("visibleSublayers");
    });
    return this.addResolvingPromise(s), Promise.resolve(this);
  }
  get visible() {
    return this._get("visible");
  }
  set visible(e2) {
    this._get("visible") !== e2 && (this._set("visible", e2), this.layer && this.layer.notifyChange("visibleSublayers"));
  }
  readVisible(e2, t2) {
    return !!t2.visibility;
  }
  _fetchService(e2, t2) {
    return g(e2, this.layer.outSpatialReference, this.layer.refreshInterval, t2).then((e3) => d4(e3.data));
  }
};
e([y()], S3.prototype, "description", void 0), e([y({ type: w2 })], S3.prototype, "fullExtent", void 0), e([y()], S3.prototype, "id", void 0), e([y({ readOnly: true, value: null })], S3.prototype, "networkLink", void 0), e([y({ json: { write: { allowNull: true } } })], S3.prototype, "parent", void 0), e([y({ type: V.ofType(S3), json: { write: { allowNull: true } } })], S3.prototype, "sublayers", void 0), e([y({ value: null, json: { read: { source: "name", reader: (e2) => u(e2) } } })], S3.prototype, "title", void 0), e([y({ value: true })], S3.prototype, "visible", null), e([o2("visible", ["visibility"])], S3.prototype, "readVisible", null), e([y()], S3.prototype, "sourceJSON", void 0), e([y()], S3.prototype, "layer", void 0), S3 = j3 = e([a2("esri.layers.support.KMLSublayer")], S3);
var k = S3;

// node_modules/@arcgis/core/layers/KMLLayer.js
var w3 = ["kml", "xml"];
var F = class extends n(f2(t(u3(j(S(b)))))) {
  constructor(...e2) {
    super(...e2), this._visibleFolders = [], this.allSublayers = new l({ getCollections: () => [this.sublayers], getChildrenFunction: (e3) => e3.sublayers }), this.outSpatialReference = f.WGS84, this.path = null, this.legendEnabled = false, this.operationalLayerType = "KML", this.sublayers = null, this.type = "kml", this.url = null;
  }
  initialize() {
    this.addHandles([d2(() => this.sublayers, (e2, r2) => {
      r2 && r2.forEach((e3) => {
        e3.parent = null, e3.layer = null;
      }), e2 && e2.forEach((e3) => {
        e3.parent = this, e3.layer = this;
      });
    }, C), this.on("sublayer-update", () => this.notifyChange("fullExtent"))]);
  }
  normalizeCtorArgs(e2, r2) {
    return "string" == typeof e2 ? { url: e2, ...r2 } : e2;
  }
  readSublayersFromItemOrWebMap(e2, r2) {
    this._visibleFolders = r2.visibleFolders;
  }
  readSublayers(e2, r2, t2) {
    return S2(k, r2, t2, this._visibleFolders);
  }
  writeSublayers(e2, r2) {
    const t2 = [], o3 = e2.toArray();
    for (; o3.length; ) {
      const e3 = o3[0];
      e3.networkLink || (e3.visible && t2.push(e3.id), e3.sublayers && o3.push(...e3.sublayers.toArray())), o3.shift();
    }
    r2.visibleFolders = t2;
  }
  get title() {
    const e2 = this._get("title");
    return e2 && "defaults" !== this.originOf("title") ? e2 : this.url ? bt(this.url, w3) || "KML" : e2 || "";
  }
  set title(e2) {
    this._set("title", e2);
  }
  get visibleSublayers() {
    const e2 = this.sublayers, r2 = [], t2 = (e3) => {
      e3.visible && (r2.push(e3), e3.sublayers && e3.sublayers.forEach(t2));
    };
    return e2 && e2.forEach(t2), r2;
  }
  get fullExtent() {
    return this._recomputeFullExtent();
  }
  load(e2) {
    const r2 = null != e2 ? e2.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["KML"], supportsData: false }, e2).catch(a).then(() => this._fetchService(r2))), Promise.resolve(this);
  }
  destroy() {
    super.destroy(), this.allSublayers.destroy();
  }
  async _fetchService(e2) {
    const r2 = await Promise.resolve().then(() => this.resourceInfo ? { ssl: false, data: this.resourceInfo } : g(this.url ?? "", this.outSpatialReference, this.refreshInterval, e2)), t2 = d4(r2.data);
    t2 && this.read(t2, { origin: "service" });
  }
  _recomputeFullExtent() {
    let e2 = null;
    null != this.extent && (e2 = this.extent.clone());
    const r2 = (t2) => {
      if (t2.sublayers)
        for (const o3 of t2.sublayers.items)
          r2(o3), o3.visible && o3.fullExtent && (null != e2 ? e2.union(o3.fullExtent) : e2 = o3.fullExtent.clone());
    };
    return r2(this), e2;
  }
};
e([y({ readOnly: true })], F.prototype, "allSublayers", void 0), e([y({ type: f })], F.prototype, "outSpatialReference", void 0), e([y({ type: String, json: { origins: { "web-scene": { read: true, write: true } }, read: false } })], F.prototype, "path", void 0), e([y({ readOnly: true, json: { read: false, write: false } })], F.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide", "hide-children"] })], F.prototype, "listMode", void 0), e([y({ type: ["KML"] })], F.prototype, "operationalLayerType", void 0), e([y({})], F.prototype, "resourceInfo", void 0), e([y({ type: V.ofType(k), json: { write: { ignoreOrigin: true } } })], F.prototype, "sublayers", void 0), e([o2(["web-map", "portal-item"], "sublayers", ["visibleFolders"])], F.prototype, "readSublayersFromItemOrWebMap", null), e([o2("service", "sublayers", ["sublayers"])], F.prototype, "readSublayers", null), e([r("sublayers")], F.prototype, "writeSublayers", null), e([y({ readOnly: true, json: { read: false } })], F.prototype, "type", void 0), e([y({ json: { origins: { "web-map": { read: { source: "title" } } }, write: { ignoreOrigin: true } } })], F.prototype, "title", null), e([y(d3)], F.prototype, "url", void 0), e([y({ readOnly: true })], F.prototype, "visibleSublayers", null), e([y({ type: w2 })], F.prototype, "extent", void 0), e([y()], F.prototype, "fullExtent", null), F = e([a2("esri.layers.KMLLayer")], F);
var O = F;
export {
  O as default
};
//# sourceMappingURL=KMLLayer-WWTCZP7A.js.map
