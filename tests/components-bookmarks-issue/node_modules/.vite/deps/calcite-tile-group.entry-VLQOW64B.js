import {
  InteractiveContainer,
  connectInteractive,
  disconnectInteractive,
  updateHostInteraction
} from "./chunk-66JQNCB7.js";
import "./chunk-OUKAB5XV.js";
import {
  getElement,
  h,
  registerInstance
} from "./chunk-FNA2PYJM.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@esri/calcite-components/dist/esm/calcite-tile-group.entry.js
var CSS = {
  container: "container"
};
var tileGroupCss = ":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{box-sizing:border-box;display:inline-block}:host ::slotted(calcite-tile){margin-block-end:var(--calcite-spacing-px);margin-inline-end:var(--calcite-spacing-px)}.container{display:grid;grid-auto-rows:minmax(auto, 1fr)}:host([scale=s]) .container{grid-template-columns:repeat(auto-fit, minmax(100px, 1fr))}:host([scale=m]) .container{grid-template-columns:repeat(auto-fit, minmax(140px, 1fr))}:host([scale=l]) .container{grid-template-columns:repeat(auto-fit, minmax(160px, 1fr))}:host([layout=vertical]) .container{display:flex;flex-direction:column}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([hidden]){display:none}[hidden]{display:none}";
var TileGroup = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.updateTiles = () => {
      this.el.querySelectorAll("calcite-tile").forEach((item) => item.scale = this.scale);
    };
    this.disabled = false;
    this.layout = "horizontal";
    this.scale = "m";
  }
  scaleWatcher() {
    this.updateTiles();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    connectInteractive(this);
    this.updateTiles();
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  disconnectedCallback() {
    disconnectInteractive(this);
  }
  render() {
    return h(InteractiveContainer, { disabled: this.disabled }, h("div", { class: CSS.container }, h("slot", { onSlotchange: this.updateTiles })));
  }
  get el() {
    return getElement(this);
  }
  static get watchers() {
    return {
      "scale": ["scaleWatcher"]
    };
  }
};
TileGroup.style = tileGroupCss;
export {
  TileGroup as calcite_tile_group
};
/*! Bundled license information:

@esri/calcite-components/dist/esm/calcite-tile-group.entry.js:
  (*!
   * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
   * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
   * v2.6.0
   *)
*/
//# sourceMappingURL=calcite-tile-group.entry-VLQOW64B.js.map
