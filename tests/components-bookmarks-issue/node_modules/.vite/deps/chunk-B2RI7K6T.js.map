{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/IsNaN.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/AdjustProjectedPosition.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardByCoverage.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardNonSilhouetteEdges.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/UnpackAttributes.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/LineAmplitude.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/LineOffset.glsl.js", "../../@arcgis/core/chunks/EdgeShader.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{glsl as a}from\"../../shaderModules/interfaces.js\";function o(o){const e=a`bool isNaN( float val )\n{\nreturn ( val < 0.0 || 0.0 < val || val == 0.0 ) ? false : true;\n}`;o.code.add(e)}export{o as IsNaN};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{fromValues as o}from\"../../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{IsNaN as r}from\"../../../core/shaderLibrary/util/IsNaN.glsl.js\";import{Float2PassUniform as e}from\"../../../core/shaderModules/Float2PassUniform.js\";import{glsl as a}from\"../../../core/shaderModules/interfaces.js\";import{Matrix3PassUniform as s}from\"../../../core/shaderModules/Matrix3PassUniform.js\";import{Matrix4PassUniform as t}from\"../../../core/shaderModules/Matrix4PassUniform.js\";const l=o(.5,-4e-4);function i(o,i){const c=o.vertex;c.include(r),c.constants.add(\"depthBias\",\"vec2\",l),c.uniforms.add(new e(\"inverseViewport\",((o,r)=>r.inverseViewport))),i.legacy?(c.uniforms.add(new t(\"proj\",((o,r)=>r.camera.projectionMatrix))),c.code.add(a`vec2 calculateProjectedBiasXY(vec4 projPos, vec3 globalNormal) {\nfloat offsetXY = depthBias.x;\nvec4 projNormal = proj * localView * vec4(globalNormal, 0.0);\nreturn offsetXY * projPos.w * 2.0 * inverseViewport * normalize(projNormal.xyz).xy;\n}`)):(c.uniforms.add(new s(\"transformNormalViewFromGlobal\",(o=>o.transformNormalViewFromGlobal)),new t(\"transformProjFromView\",(o=>o.transformProjFromView))),c.code.add(a`vec2 calculateProjectedBiasXY(vec4 projPos, vec3 globalNormal) {\nfloat offsetXY = depthBias.x;\nvec4 projNormal = transformProjFromView * vec4(transformNormalViewFromGlobal * globalNormal, 0.0);\nreturn offsetXY * projPos.w * 2.0 * inverseViewport * normalize(projNormal.xyz).xy;\n}`)),c.code.add(a`float _calculateProjectedBiasZ(vec4 projPos) {\nfloat offsetZ = depthBias.y;\nreturn sqrt(max(projPos.z,0.0)) * offsetZ;\n}\nvec4 adjustProjectedPosition(vec4 projPos, vec3 worldNormal, float lineWidth) {\nvec2 offsetXY = calculateProjectedBiasXY(projPos, worldNormal);\nif (!isNaN(offsetXY.x) && !isNaN(offsetXY.y)) {\nprojPos.xy += offsetXY;\n}\nprojPos.z += _calculateProjectedBiasZ(projPos);\nreturn projPos;\n}`)}export{i as AdjustProjectedPosition};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../../core/shaderModules/interfaces.js\";function o(o){const r=o.fragment;r.constants.add(\"coverageTestThreshold\",\"float\",.01),r.code.add(e`#define discardByCoverage(radius, coverage) { if (coverage < coverageTestThreshold) discard; }`)}export{o as DiscardByCoverage};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../../core/shaderModules/interfaces.js\";function o(o,r){const a=o.vertex;r.silhouette?(a.code.add(e`bool isSilhouetteEdge(vec3 viewDir, vec3 normalA, vec3 normalB) {\nfloat faceAVisible = dot(viewDir, normalA);\nfloat faceBVisible = dot(viewDir, normalB);\nreturn faceAVisible * faceBVisible < 0.0;\n}`),r.legacy?a.code.add(e`bool discardNonSilhouetteEdges(vec3 viewPos, vec3 worldPos, ComponentData data) {\nvec3 viewNormalA = _modelToViewNormal(data.normal);\nvec3 viewNormalB = _modelToViewNormal(data.normal2);\nvec3 viewDir = -viewPos;\nif (isSilhouetteEdge(viewDir, viewNormalA, viewNormalB)) {\nreturn false;\n}\ngl_Position = vec4(10.0, 10.0, 10.0, 1.0);\nreturn true;\n}`):a.code.add(e`bool discardNonSilhouetteEdges(vec3 viewPos, vec3 worldPos, ComponentData data) {\nvec3 worldNormalA = _modelToWorldNormal(data.normal);\nvec3 worldNormalB = _modelToWorldNormal(data.normal2);\nvec3 viewDir = -worldPos;\nif (isSilhouetteEdge(viewDir, worldNormalA, worldNormalB)) {\nreturn false;\n}\ngl_Position = vec4(10.0, 10.0, 10.0, 1.0);\nreturn true;\n}`)):a.code.add(e`bool discardNonSilhouetteEdges(vec3 viewPos, vec3 worldPos, ComponentData data) {\nreturn false;\n}`)}export{o as DiscardNonSilhouetteEdges};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{glsl as t}from\"../../../core/shaderModules/interfaces.js\";import{VertexAttribute as n}from\"../../../lib/VertexAttribute.js\";import{EdgeType as s}from\"./EdgeUtil.glsl.js\";function i(i,o){const d=i.vertex;switch(i.attributes.add(n.SIDENESS,\"vec2\"),o.type===s.Mixed?d.code.add(t`struct UnpackedAttributes {\nvec2 sideness;\nvec2 sidenessNorm;\nfloat lineWidthPixels;\nfloat extensionLengthPixels;\nfloat type;\n};`):d.code.add(t`struct UnpackedAttributes {\nvec2 sideness;\nvec2 sidenessNorm;\nfloat lineWidthPixels;\nfloat extensionLengthPixels;\n};`),o.type){case s.Mixed:d.code.add(t`UnpackedAttributes unpackAttributes(ComponentData component) {\nvec2 sidenessNorm = sideness;\nvec2 sideness = sidenessNorm * 2.0 - 1.0;\nfloat fType = component.type;\nfloat extensionLengthPixels = component.extensionLength;\nfloat lineWidth = component.lineWidth;\nif (fType <= 0.0) {\nextensionLengthPixels *= variantExtension * 2.0 - 1.0;\n}\nreturn UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels, fType);\n}`);break;case s.Sketch:d.code.add(t`UnpackedAttributes unpackAttributes(ComponentData component) {\nvec2 sidenessNorm = sideness;\nvec2 sideness = sidenessNorm * 2.0 - 1.0;\nfloat extensionLengthPixels = component.extensionLength;\nextensionLengthPixels *= variantExtension * 2.0 - 1.0;\nfloat lineWidth = component.lineWidth;\nreturn UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels);\n}`);break;case s.Solid:d.code.add(t`UnpackedAttributes unpackAttributes(ComponentData component) {\nvec2 sidenessNorm = sideness;\nvec2 sideness = sidenessNorm * 2.0 - 1.0;\nfloat extensionLengthPixels = component.extensionLength;\nfloat lineWidth = component.lineWidth;\nreturn UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels);\n}`);break;case s.COUNT:break;default:e(o.type)}}export{i as UnpackAttributes};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{FloatDrawUniform as t}from\"../../../core/shaderModules/FloatDrawUniform.js\";import{glsl as r}from\"../../../core/shaderModules/interfaces.js\";import{EdgeType as s}from\"./EdgeUtil.glsl.js\";import{UnpackAttributes as a}from\"./UnpackAttributes.glsl.js\";function d(d,i){const o=d.vertex;switch(d.include(a,i),i.type){case s.Solid:o.code.add(r`float calculateLineAmplitude(UnpackedAttributes unpackedAttributes) {\nreturn 0.0;\n}`);break;case s.Sketch:o.uniforms.add(new t(\"strokesAmplitude\",(e=>e.strokesTexture.amplitude))),o.code.add(r`float calculateLineAmplitude(UnpackedAttributes unpackedAttributes) {\nreturn strokesAmplitude;\n}`);break;case s.Mixed:o.uniforms.add(new t(\"strokesAmplitude\",(e=>e.strokesTexture.amplitude))),o.code.add(r`float calculateLineAmplitude(UnpackedAttributes unpackedAttributes) {\nfloat type = unpackedAttributes.type;\nif (type <= 0.0) {\nreturn strokesAmplitude;\n}\nreturn 0.0;\n}`);break;case s.COUNT:break;default:e(i.type)}}export{d as LineAmplitude};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{RgbaFloatEncoding as t}from\"../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{FloatDrawUniform as r}from\"../../../core/shaderModules/FloatDrawUniform.js\";import{NoParameters as a,glsl as s}from\"../../../core/shaderModules/interfaces.js\";import{Texture2DDrawUniform as o}from\"../../../core/shaderModules/Texture2DDrawUniform.js\";import{usesSketchLogic as u,EdgeType as l}from\"./EdgeUtil.glsl.js\";import{UnpackAttributes as c}from\"./UnpackAttributes.glsl.js\";class i extends a{}function n(a,i){a.include(c,i);const{vertex:n,fragment:d}=a;switch(u(i.type)&&(n.uniforms.add(new o(\"strokesTexture\",(e=>e.strokesTexture.texture))),n.uniforms.add(new r(\"strokesLog2Resolution\",(e=>Math.log2(e.strokesTexture.resolution))),new r(\"strokeVariants\",(e=>e.strokesTexture.variants))),a.varyings.add(\"vStrokeUV\",\"vec2\"),d.uniforms.add(new o(\"strokesTexture\",(e=>e.strokesTexture.texture)),new r(\"strokesNormalizationScale\",(e=>e.strokesTexture.normalizationScale))),n.code.add(s`void calculateStyleOutputsSketch(float lineLength, UnpackedAttributes unpackedAttributes) {\nvec2 sidenessNorm = unpackedAttributes.sidenessNorm;\nfloat lineIndex = clamp(ceil(log2(lineLength)), 0.0, strokesLog2Resolution);\nvStrokeUV = vec2(exp2(lineIndex) * sidenessNorm.y, lineIndex * strokeVariants + variantStroke + 0.5) / vec2(textureSize(strokesTexture, 0));\nvStrokeUV.x += variantOffset;\n}`),a.fragment.include(t),d.code.add(s`float calculateLineOffsetSketch() {\nfloat offsetNorm = rgba2float(texture(strokesTexture, vStrokeUV));\nreturn (offsetNorm - 0.5) * strokesNormalizationScale;\n}\nfloat calculateLinePressureSketch() {\nreturn rgba2float(texture(strokesTexture, vStrokeUV + vec2(0.0, 0.5)));\n}`)),i.type){case l.Solid:n.code.add(s`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes) {}`),d.code.add(s`float calculateLineOffset() {\nreturn 0.0;\n}\nfloat calculateLinePressure() {\nreturn 1.0;\n}`);break;case l.Sketch:n.code.add(s`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes)\n{\ncalculateStyleOutputsSketch(vLineLengthPixels, unpackedAttributes);\n}`),d.code.add(s`float calculateLineOffset() {\nreturn calculateLineOffsetSketch();\n}\nfloat calculateLinePressure() {\nreturn calculateLinePressureSketch();\n}`);break;case l.Mixed:a.varyings.add(\"vType\",\"float\"),n.code.add(s`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes)\n{\nvType = unpackedAttributes.type;\nif (unpackedAttributes.type <= 0.0) {\ncalculateStyleOutputsSketch(vLineLengthPixels, unpackedAttributes);\n}\n}`),d.code.add(s`float calculateLineOffset() {\nif (vType <= 0.0) {\nreturn calculateLineOffsetSketch();\n}\nelse {\nreturn 0.0;\n}\n}\nfloat calculateLinePressure() {\nif (vType <= 0.0) {\nreturn calculateLinePressureSketch();\n}\nelse {\nreturn 1.0;\n}\n}`);break;case l.COUNT:break;default:e(i.type)}}export{n as LineOffset,i as LineOffsetDrawParameters};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{set as e}from\"../core/libs/gl-matrix-2/math/vec2.js\";import{create as i}from\"../core/libs/gl-matrix-2/factories/vec2f64.js\";import{SliceDraw as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{multipassTerrainTest as s}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{Float2PassUniform as n}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float4PassUniform as t}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as d}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as a}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as l}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Uniform as r}from\"../views/3d/webgl-engine/core/shaderModules/Uniform.js\";import{VertexAttribute as c}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{AdjustProjectedPosition as p}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/AdjustProjectedPosition.glsl.js\";import{DiscardByCoverage as P}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardByCoverage.glsl.js\";import{DiscardNonSilhouetteEdges as u}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardNonSilhouetteEdges.glsl.js\";import{EdgeUtil as g,EdgeType as v}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/EdgeUtil.glsl.js\";import{LineAmplitude as f}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/LineAmplitude.glsl.js\";import{LineOffset as m}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/LineOffset.glsl.js\";import{UnpackAttributes as x}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/UnpackAttributes.glsl.js\";function w(i){const r=new l,{vertex:w,fragment:A}=r;return i.legacy&&w.uniforms.add(new L(\"model\"),new L(\"localView\")),r.include(p,i),r.include(g,i),r.include(f,i),r.include(x,i),r.include(m,i),r.include(o,i),r.include(u,i),r.include(P,i),r.include(s,i),r.varyings.add(\"vColor\",\"vec4\"),r.varyings.add(\"vRadius\",\"float\"),r.varyings.add(\"vPosition\",\"vec3\"),r.varyings.add(\"vWorldPosition\",\"vec3\"),i.multipassEnabled&&r.varyings.add(\"vViewPos\",\"vec3\"),r.varyings.add(\"vLineLengthPixels\",\"float\"),r.varyings.add(\"vSizeFalloffFactor\",\"float\"),w.uniforms.add(new n(\"pixelToNDC\",((i,o)=>e(h,2/o.camera.fullViewport[2],2/o.camera.fullViewport[3]))),new t(\"viewport\",((e,i)=>i.camera.fullViewport)),new d(\"pixelRatio\",((e,i)=>i.camera.pixelRatio))),r.attributes.add(c.POSITION0,\"vec3\"),r.attributes.add(c.POSITION1,\"vec3\"),r.attributes.add(c.VARIANTOFFSET,\"float\"),r.attributes.add(c.VARIANTSTROKE,\"float\"),r.attributes.add(c.VARIANTEXTENSION,\"float\"),w.code.add(a`\n    const float opaqueCutoff = 1.0 / 255.0;\n\n    void calculateGeometricOutputs(vec3 viewPosV0, vec3 viewPosV1, vec3 worldPosV0, vec3 worldPosV1, vec3 worldNormal, UnpackedAttributes unpackedAttributes) {\n      vec2 sideness = unpackedAttributes.sideness;\n      vec2 sidenessNorm = unpackedAttributes.sidenessNorm;\n\n      vWorldPosition = mix(worldPosV0, worldPosV1, sidenessNorm.y).xyz;\n\n      vec3 viewPos = mix(viewPosV0, viewPosV1, sidenessNorm.y);\n      ${i.multipassEnabled?\"vViewPos = viewPos;\":\"\"}\n\n      vec4 projPosV0 = projFromViewPosition(viewPosV0);\n      vec4 projPosV1 = projFromViewPosition(viewPosV1);\n      vec4 projPos = projFromViewPosition(viewPos);\n\n      vec3 screenSpaceLineNDC = (projPosV1.xyz / projPosV1.w - projPosV0.xyz / projPosV0.w);\n      vec2 ndcToPixel = viewport.zw * 0.5;\n      vec2 screenSpaceLinePixels = screenSpaceLineNDC.xy * ndcToPixel;\n      float lineLengthPixels = length(screenSpaceLinePixels);\n\n      float dzPerPixel = screenSpaceLineNDC.z / lineLengthPixels;\n      vec2 screenSpaceDirection = screenSpaceLinePixels / lineLengthPixels;\n      vec2 perpendicularScreenSpaceDirection = vec2(screenSpaceDirection.y, -screenSpaceDirection.x) * sideness.x;\n\n      float falloffFactor = distanceBasedPerspectiveFactor(-viewPos.z) * pixelRatio;\n      float lineWidthPixels = unpackedAttributes.lineWidthPixels * falloffFactor;\n\n      float extensionLengthPixels = calculateExtensionLength(unpackedAttributes.extensionLengthPixels, lineLengthPixels) * falloffFactor;\n      float lineAmplitudePixels = calculateLineAmplitude(unpackedAttributes) * pixelRatio;\n\n      vSizeFalloffFactor = falloffFactor;\n\n      float lineWidthAndAmplitudePixels = lineWidthPixels + lineAmplitudePixels + lineAmplitudePixels;\n      float extendedLineLengthPixels = lineLengthPixels + extensionLengthPixels + extensionLengthPixels;\n\n      const float aaPaddingPixels = 1.0;\n\n      // Line size with padding\n      float halfAAPaddedLineWidthAndAmplitudePixels = lineWidthAndAmplitudePixels * 0.5 + aaPaddingPixels;\n      float aaPaddedRoundedCapSizePixels = lineWidthPixels * 0.5 + aaPaddingPixels;\n\n      // Half line width in NDC including padding for anti aliasing\n      vec2 halfAAPaddedLineWidthAndAmplitudeNDC = halfAAPaddedLineWidthAndAmplitudePixels * pixelToNDC;\n      vec2 aaPaddedRoundedCapSizeNDC = aaPaddedRoundedCapSizePixels * pixelToNDC;\n      vec2 extensionLengthNDC = extensionLengthPixels * pixelToNDC;\n\n      // Compute screen space position of vertex, offsetting for line size and end caps\n      vec2 ndcOffset = (\n          screenSpaceDirection * sideness.y * (aaPaddedRoundedCapSizeNDC + extensionLengthNDC)\n        + perpendicularScreenSpaceDirection * halfAAPaddedLineWidthAndAmplitudeNDC\n      );\n\n      projPos.xy += ndcOffset * projPos.w;\n      projPos.z += (dzPerPixel * (aaPaddedRoundedCapSizePixels + extensionLengthPixels)) * sideness.y * projPos.w;\n\n      projPos = adjustProjectedPosition(projPos, worldNormal, 1.0 + max((lineWidthAndAmplitudePixels - 1.0) * 0.5, 0.0));\n\n      // Line length with end caps\n      float aaPaddedLineWithCapsLengthPixels = extendedLineLengthPixels + aaPaddedRoundedCapSizePixels + aaPaddedRoundedCapSizePixels;\n\n      float pixelPositionAlongLine = aaPaddedLineWithCapsLengthPixels * sidenessNorm.y - aaPaddedRoundedCapSizePixels;\n\n      // Position in pixels with origin at first vertex of line segment\n      vPosition = vec3(\n        halfAAPaddedLineWidthAndAmplitudePixels * sideness.x,\n        pixelPositionAlongLine,\n        pixelPositionAlongLine / extendedLineLengthPixels\n      );\n\n      // The line width radius in pixels\n      vRadius = lineWidthPixels * 0.5;\n      vLineLengthPixels = extendedLineLengthPixels;\n\n      // discard short edges below a certain length threshold\n      ${i.type===v.Sketch?a`\n        if (lineLengthPixels <= 3.0) {\n          gl_Position = vec4(10.0, 10.0, 10.0, 1.0);\n          return;\n        }`:i.type===v.Mixed?a`\n        if (lineLengthPixels <= 3.0 && unpackedAttributes.type <= 0.0) {\n           gl_Position = vec4(10.0, 10.0, 10.0, 1.0);\n           return;\n        }`:\"\"}\n      gl_Position = projPos;\n    }\n\n    void main() {\n      ComponentData component = readComponentData();\n      UnpackedAttributes unpackedAttributes = unpackAttributes(component);\n\n      vec3 worldPosV0, worldPosV1, viewPosV0, viewPosV1;\n      worldAndViewFromModelPosition(position0, component.verticalOffset, worldPosV0, viewPosV0);\n      worldAndViewFromModelPosition(position1, component.verticalOffset, worldPosV1, viewPosV1);\n\n      // Component color\n      vColor = component.color;\n\n      // Discard fully transparent edges\n      if (vColor.a < opaqueCutoff) {\n        gl_Position = vec4(10.0, 10.0, 10.0, 1.0);\n        return;\n      }\n\n      if (discardNonSilhouetteEdges(viewPosV0, worldPosV0, component)) {\n        return;\n      }\n\n      // General geometric computation for all types of edges\n      calculateGeometricOutputs(viewPosV0, viewPosV1, worldPosV0, worldPosV1, worldNormal(component), unpackedAttributes);\n\n      // Specific computation for different edge styles\n      calculateStyleOutputs(unpackedAttributes);\n    }\n  `),A.code.add(a`\n    vec2 lineWithCapsDistance(float radius, vec2 position, float lineLength) {\n      float positionX = position.x - calculateLineOffset();\n\n      if (radius < 1.0) {\n        float coverageX = clamp(min(radius, positionX + 0.5) - max(-radius, positionX - 0.5), 0.0, 1.0);\n        float coverageY = clamp(min(lineLength, position.y + 0.5) - max(0.0, position.y - 0.5), 0.0, 1.0);\n        return vec2(0.5 - min(coverageX, coverageY), 0.0);\n      }\n      else {\n        // Between -radius -> 0 for start cap, 0 for line, 0 -> radius\n        float positionOnCap = position.y - clamp(position.y, 0.0, lineLength);\n\n        vec2 lineToPosition = vec2(positionX, positionOnCap);\n        return vec2(length(lineToPosition) - radius, positionOnCap / radius);\n      }\n    }\n\n    void main() {\n      ${i.multipassEnabled?\"terrainDepthTest(vViewPos.z);\":\"\"}\n      float radius = vRadius * calculateLinePressure();\n\n      vec2 distance = lineWithCapsDistance(radius, vPosition.xy, vLineLengthPixels);\n      float coverage = clamp(0.5 - distance.x, 0.0, 1.0);\n\n      discardByCoverage(radius, coverage);\n      discardBySlice(vWorldPosition);\n\n      fragColor = vec4(vColor.rgb, vColor.a * coverage);\n    }\n  `),r}const h=i();class L extends r{constructor(e){super(e,\"mat4\")}}const A=Object.freeze(Object.defineProperty({__proto__:null,build:w},Symbol.toStringTag,{value:\"Module\"}));export{A as E,w as b};\n"],
  "mappings": "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",
  "names": ["o", "e", "o", "i", "e", "r", "o", "r", "o", "r", "a", "i", "o", "d", "d", "i", "o", "e", "n", "a", "i", "d", "e", "i", "r", "o", "w", "A", "n", "e", "a"]
}
