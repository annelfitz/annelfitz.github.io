{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/esm/src/components/fab/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/fab/fab.scss?tag=calcite-fab&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/fab/fab.tsx"],
  "sourcesContent": ["export const CSS = {\n  button: \"button\",\n};\n\nexport const ICONS = {\n  plus: \"plus\",\n};\n", ":host {\n  @apply flex bg-transparent;\n}\n\n@include disabled();\n\ncalcite-button {\n  @apply shadow-2;\n  &:hover {\n    @apply shadow-2-lg;\n  }\n  &:active {\n    @apply shadow-2-sm;\n  }\n}\n\n@include base-component();\n", "import { Component, Element, h, Method, Prop, VNode } from \"@stencil/core\";\nimport { focusElement } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Appearance, Kind, Scale } from \"../interfaces\";\nimport { CSS, ICONS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-fab\",\n  styleUrl: \"fab.scss\",\n  shadow: true,\n})\nexport class Fab implements InteractiveComponent, LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the appearance style of the component.\n   */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"outline-fill\", Appearance> = \"solid\";\n\n  /**\n   * Specifies the kind of the component, which will apply to border and background.\n   */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"danger\" | \"inverse\" | \"neutral\", Kind> =\n    \"brand\";\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Specifies an icon to display.\n   *\n   * @default \"plus\"\n   */\n  @Prop({ reflect: true }) icon: string = ICONS.plus;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Accessible name for the component.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies text to accompany the component's icon.\n   */\n  @Prop() text: string;\n\n  /**\n   * When `true`, displays the `text` value in the component.\n   */\n  @Prop({ reflect: true }) textEnabled = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteFabElement;\n\n  private buttonEl: HTMLElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusElement(this.buttonEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      appearance,\n      kind,\n      disabled,\n      loading,\n      scale,\n      textEnabled,\n      icon,\n      label,\n      text,\n      iconFlipRtl,\n    } = this;\n\n    const title = !textEnabled ? label || text || null : null;\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        <calcite-button\n          appearance={appearance === \"solid\" ? \"solid\" : \"outline-fill\"}\n          class={CSS.button}\n          disabled={disabled}\n          iconFlipRtl={iconFlipRtl ? \"start\" : null}\n          iconStart={icon}\n          kind={kind}\n          label={label}\n          loading={loading}\n          round={true}\n          scale={scale}\n          title={title}\n          type=\"button\"\n          width=\"auto\"\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(buttonEl): void => {\n            this.buttonEl = buttonEl;\n          }}\n        >\n          {this.textEnabled ? this.text : null}\n        </calcite-button>\n      </InteractiveContainer>\n    );\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAM,MAAM;EACjB,QAAQ;;AAGH,IAAM,QAAQ;EACnB,MAAM;;ACLR,IAAM,SAAS;ICuBF,MAAG,MAAA;;;sBAUuE;gBAMnF;oBAKkC;gBAOI,MAAM;uBAGP;;mBAUJ;iBAKK;;uBAUD;;;;;;;EAkBvC,oBAAiB;AACf,uBAAmB,IAAI;;EAGzB,oBAAiB;AACf,2BAAuB,IAAI;;EAG7B,mBAAgB;AACd,uBAAmB,IAAI;;EAGzB,qBAAkB;AAChB,0BAAsB,IAAI;;EAG5B,uBAAoB;AAClB,0BAAsB,IAAI;;;;;;;;EAW5B,MAAM,WAAQ;AACZ,UAAM,mBAAmB,IAAI;AAE7B,iBAAa,KAAK,QAAQ;;;;;;;EAS5B,SAAM;AACJ,UAAM,EACJ,YACA,MACA,UACA,SACA,OACA,aACA,MACA,OACA,MACA,YAAW,IACT;AAEJ,UAAM,QAAQ,CAAC,cAAc,SAAS,QAAQ,OAAO;AAErD,WACE,EAAC,sBAAoB,EAAC,SAAkB,GACtC,EAAA,kBAAA;MACE,YAAY,eAAe,UAAU,UAAU;MAC/C,OAAO,IAAI;MACX;MACA,aAAa,cAAc,UAAU;MACrC,WAAW;MACX;MACA;MACA;MACA,OAAO;MACP;MACA;MACA,MAAK;MACL,OAAM;;MAEN,KAAK,CAAC,aAAQ;AACZ,aAAK,WAAW;;IACjB,GAEA,KAAK,cAAc,KAAK,OAAO,IAAI,CACrB;;;;;;;",
  "names": []
}
