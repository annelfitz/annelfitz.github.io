import {
  i as i2,
  r as r4
} from "./chunk-SGCIDT4C.js";
import {
  h as h3
} from "./chunk-QXRPUAVL.js";
import {
  N
} from "./chunk-HRDKP7QO.js";
import {
  s
} from "./chunk-VJ2I4VSQ.js";
import {
  e
} from "./chunk-MCZ4QOSQ.js";
import {
  o as o2
} from "./chunk-BHOYA5LV.js";
import {
  r as r2
} from "./chunk-4IJED6JM.js";
import {
  b
} from "./chunk-C5EJV3NW.js";
import {
  h as h2
} from "./chunk-4YGBWYMD.js";
import {
  t
} from "./chunk-GB4RVOXH.js";
import {
  r as r3
} from "./chunk-YUWVLORR.js";
import {
  C,
  E,
  F,
  R
} from "./chunk-WKVHVZW2.js";
import {
  M,
  f,
  h,
  i,
  o
} from "./chunk-HZSGATFT.js";
import {
  L
} from "./chunk-G7YFDDME.js";
import {
  r,
  u
} from "./chunk-QHK5ZYFW.js";

// node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/techniques/GraphicInstanceStore.js
var n = 0;
function a(l, a2, t3) {
  return new i2(r2(n++), l, l.meshWriter.name, a2, t3);
}
var t2 = { geometry: { visualVariableColor: null, visualVariableOpacity: null, visualVariableSizeMinMaxValue: null, visualVariableSizeScaleStops: null, visualVariableSizeStops: null, visualVariableSizeUnitValue: null, visualVariableRotation: null } };
var s2 = class {
  constructor() {
    this.instances = { fill: a(h3.fill, t2, { zoomRange: true }), marker: a(h3.marker, t2, { zoomRange: true }), line: a(h3.line, t2, { zoomRange: true }), text: a(h3.text, t2, { zoomRange: true, referenceSymbol: false, clipAngle: false }), complexFill: a(h3.complexFill, t2, { zoomRange: true }), texturedLine: a(h3.texturedLine, t2, { zoomRange: true }) }, this._instancesById = Object.values(this.instances).reduce((e2, l) => (e2.set(l.instanceId, l), e2), /* @__PURE__ */ new Map());
  }
  getInstance(e2) {
    return this._instancesById.get(e2);
  }
};

// node_modules/@arcgis/core/views/2d/layers/graphics/GraphicBoundsRenderer.js
var v = Math.PI / 180;
var x = 4;
var b2 = class extends s {
  constructor(t3) {
    super(), this._program = null, this._vao = null, this._vertexBuffer = null, this._indexBuffer = null, this._dvsMat3 = e(), this._localOrigin = { x: 0, y: 0 }, this._getBounds = t3;
  }
  destroy() {
    this._vao && (this._vao.dispose(), this._vao = null, this._vertexBuffer = null, this._indexBuffer = null), this._program = r(this._program);
  }
  doRender(t3) {
    const { context: e2 } = t3, r5 = this._getBounds();
    if (r5.length < 1)
      return;
    this._createShaderProgram(e2), this._updateMatricesAndLocalOrigin(t3), this._updateBufferData(e2, r5), e2.setBlendingEnabled(true), e2.setDepthTestEnabled(false), e2.setStencilWriteMask(0), e2.setStencilTestEnabled(false), e2.setBlendFunction(R.ONE, R.ONE_MINUS_SRC_ALPHA), e2.setColorMask(true, true, true, true);
    const i4 = this._program;
    e2.bindVAO(this._vao), e2.useProgram(i4), i4.setUniformMatrix3fv("u_dvsMat3", this._dvsMat3), e2.gl.lineWidth(1), e2.drawElements(E.LINES, 8 * r5.length, C.UNSIGNED_INT, 0), e2.bindVAO();
  }
  _createTransforms() {
    return { displayViewScreenMat3: e() };
  }
  _createShaderProgram(t3) {
    if (this._program)
      return;
    const e2 = "precision highp float;\n        uniform mat3 u_dvsMat3;\n\n        attribute vec2 a_position;\n\n        void main() {\n          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);\n          gl_Position = vec4(pos.xy, 0.0, 1.0);\n        }", r5 = "precision mediump float;\n      void main() {\n        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);\n      }";
    this._program = t3.programCache.acquire(e2, r5, y().attributes);
  }
  _updateMatricesAndLocalOrigin(t3) {
    const { state: a2 } = t3, { displayMat3: m, size: c, resolution: u2, pixelRatio: _, rotation: h4, viewpoint: d } = a2, p = v * h4, { x: g, y: x2 } = d.targetGeometry, b3 = L(g, a2.spatialReference);
    this._localOrigin.x = b3, this._localOrigin.y = x2;
    const y2 = _ * c[0], B = _ * c[1], M2 = u2 * y2, j = u2 * B, A = o(this._dvsMat3);
    i(A, A, m), M(A, A, t(y2 / 2, B / 2)), f(A, A, r3(c[0] / M2, -B / j, 1)), h(A, A, -p);
  }
  _updateBufferData(t3, e2) {
    const { x: r5, y: i4 } = this._localOrigin, s3 = 2 * x * e2.length, o3 = new Float32Array(s3), a2 = new Uint32Array(8 * e2.length);
    let n2 = 0, l = 0;
    for (const f2 of e2)
      f2 && (o3[2 * n2] = f2[0] - r5, o3[2 * n2 + 1] = f2[1] - i4, o3[2 * n2 + 2] = f2[0] - r5, o3[2 * n2 + 3] = f2[3] - i4, o3[2 * n2 + 4] = f2[2] - r5, o3[2 * n2 + 5] = f2[3] - i4, o3[2 * n2 + 6] = f2[2] - r5, o3[2 * n2 + 7] = f2[1] - i4, a2[l] = n2 + 0, a2[l + 1] = n2 + 3, a2[l + 2] = n2 + 3, a2[l + 3] = n2 + 2, a2[l + 4] = n2 + 2, a2[l + 5] = n2 + 1, a2[l + 6] = n2 + 1, a2[l + 7] = n2 + 0, n2 += 4, l += 8);
    if (this._vertexBuffer ? this._vertexBuffer.setData(o3.buffer) : this._vertexBuffer = h2.createVertex(t3, F.DYNAMIC_DRAW, o3.buffer), this._indexBuffer ? this._indexBuffer.setData(a2) : this._indexBuffer = h2.createIndex(t3, F.DYNAMIC_DRAW, a2), !this._vao) {
      const e3 = y();
      this._vao = new o2(t3, e3.attributes, e3.bufferLayouts, { geometry: this._vertexBuffer }, this._indexBuffer);
    }
  }
};
var y = () => b("bounds", { geometry: [{ location: 0, name: "a_position", count: 2, type: C.FLOAT }] });

// node_modules/@arcgis/core/views/2d/layers/graphics/AGraphicContainer.js
var i3 = class extends r4 {
  constructor(e2) {
    super(e2), this._instanceStore = new s2(), this.checkHighlight = () => true;
  }
  destroy() {
    super.destroy(), this._boundsRenderer = u(this._boundsRenderer);
  }
  get instanceStore() {
    return this._instanceStore;
  }
  enableRenderingBounds(e2) {
    this._boundsRenderer = new b2(e2), this.requestRender();
  }
  get hasHighlight() {
    return this.checkHighlight();
  }
  onTileData(e2, r5) {
    e2.onMessage(r5), this.contains(e2) || this.addChild(e2), this.requestRender();
  }
  _renderChildren(e2, r5) {
    e2.selection = r5;
    for (const n2 of this.children) {
      if (!n2.visible)
        continue;
      const r6 = n2.getDisplayList(e2.drawPhase, this._instanceStore, N.STRICT_ORDER);
      r6 == null ? void 0 : r6.render(e2);
    }
  }
};

export {
  i3 as i
};
//# sourceMappingURL=chunk-AD6XW3W5.js.map
