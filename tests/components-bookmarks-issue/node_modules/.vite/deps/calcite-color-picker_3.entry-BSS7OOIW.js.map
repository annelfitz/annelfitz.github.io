{
  "version": 3,
  "sources": ["../../@esri/calcite-components/node_modules/color-name/index.js", "../../@esri/calcite-components/node_modules/simple-swizzle/node_modules/is-arrayish/index.js", "../../@esri/calcite-components/node_modules/simple-swizzle/index.js", "../../@esri/calcite-components/node_modules/color-string/index.js", "../../@esri/calcite-components/node_modules/color/node_modules/color-name/index.js", "../../@esri/calcite-components/node_modules/color/node_modules/color-convert/conversions.js", "../../@esri/calcite-components/node_modules/color/node_modules/color-convert/route.js", "../../@esri/calcite-components/node_modules/color/node_modules/color-convert/index.js", "../../@esri/calcite-components/node_modules/color/index.js", "../../@esri/calcite-components/dist/esm/src/components/color-picker/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/color-picker/color-picker.scss?tag=calcite-color-picker&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/color-picker/color-picker.tsx", "../../@esri/calcite-components/dist/esm/src/components/color-picker-hex-input/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/color-picker-hex-input/color-picker-hex-input.scss?tag=calcite-color-picker-hex-input&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/color-picker-hex-input/color-picker-hex-input.tsx", "../../@esri/calcite-components/dist/esm/src/components/color-picker-swatch/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/color-picker-swatch/color-picker-swatch.scss?tag=calcite-color-picker-swatch&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/color-picker-swatch/color-picker-swatch.tsx"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n", "'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n", "/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n", "'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n", "import Color from \"color\";\n\nexport const CSS = {\n  channel: \"channel\",\n  channels: \"channels\",\n  colorField: \"color-field\",\n  colorFieldScope: \"scope--color-field\",\n  colorMode: \"color-mode\",\n  colorModeContainer: \"color-mode-container\",\n  container: \"container\",\n  control: \"control\",\n  controlAndScope: \"control-and-scope\",\n  controlSection: \"control-section\",\n  deleteColor: \"delete-color\",\n  header: \"header\",\n  hexAndChannelsGroup: \"hex-and-channels-group\",\n  hexOptions: \"color-hex-options\",\n  hueScope: \"scope--hue\",\n  hueSlider: \"hue-slider\",\n  opacityScope: \"scope--opacity\",\n  opacitySlider: \"opacity-slider\",\n  preview: \"preview\",\n  previewAndSliders: \"preview-and-sliders\",\n  saveColor: \"save-color\",\n  savedColor: \"saved-color\",\n  savedColors: \"saved-colors\",\n  savedColorsButtons: \"saved-colors-buttons\",\n  savedColorsSection: \"saved-colors-section\",\n  scope: \"scope\",\n  section: \"section\",\n  slider: \"slider\",\n  sliders: \"sliders\",\n  splitSection: \"section--split\",\n};\n\nexport const DEFAULT_COLOR = Color(\"#007AC2\");\nexport const DEFAULT_STORAGE_KEY_PREFIX = \"calcite-color-\";\n\nexport const RGB_LIMITS = {\n  r: 255,\n  g: 255,\n  b: 255,\n};\n\nexport const HSV_LIMITS = {\n  h: 360,\n  s: 100,\n  v: 100,\n};\n\n// 0 and 360 represent the same value, so we limit the hue to 359\nexport const HUE_LIMIT_CONSTRAINED = HSV_LIMITS.h - 1;\n\nexport const OPACITY_LIMITS = {\n  min: 0,\n  max: 100,\n};\n\nexport const DIMENSIONS = {\n  s: {\n    slider: {\n      height: 12,\n      width: 104,\n    },\n    colorField: {\n      height: 80,\n      width: 160,\n    },\n    thumb: {\n      radius: 10,\n    },\n  },\n  m: {\n    slider: {\n      height: 12,\n      width: 204,\n    },\n    colorField: {\n      height: 150,\n      width: 272,\n    },\n    thumb: {\n      radius: 10,\n    },\n  },\n  l: {\n    slider: {\n      height: 12,\n      width: 384,\n    },\n    colorField: {\n      height: 200,\n      width: 464,\n    },\n    thumb: {\n      radius: 10,\n    },\n  },\n};\n\nexport const SCOPE_SIZE = 1;\n", ":host {\n  @apply text-n2h inline-block font-normal;\n}\n\n@include disabled();\n\n:host([scale=\"s\"]) {\n  --calcite-color-picker-spacing: 8px;\n\n  .container {\n    inline-size: 160px;\n  }\n\n  .saved-colors {\n    @apply gap-1;\n    grid-template-columns: repeat(auto-fill, 20px);\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-color-picker-spacing: 12px;\n\n  .container {\n    inline-size: 272px;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-color-picker-spacing: 16px;\n\n  @apply text-n1h;\n\n  .container {\n    inline-size: 464px;\n  }\n\n  .section {\n    &:first-of-type {\n      padding-block-start: var(--calcite-color-picker-spacing);\n    }\n  }\n\n  .saved-colors {\n    grid-template-columns: repeat(auto-fill, 32px);\n  }\n\n  .control-section {\n    @apply flex-nowrap items-baseline;\n  }\n\n  .control-section {\n    @apply flex-wrap;\n  }\n\n  .color-hex-options {\n    @apply flex\n      flex-shrink\n      flex-col\n      justify-around;\n  }\n\n  .color-mode-container {\n    flex-shrink: 3;\n  }\n}\n\n.container {\n  @apply bg-foreground-1;\n  display: inline-block;\n  border: 1px solid var(--calcite-color-border-1);\n}\n\n.control-and-scope {\n  @apply flex relative cursor-pointer touch-none;\n}\n\n.scope {\n  @apply text-n1\n    focus-base\n    absolute\n    z-default\n    rounded-full\n    bg-transparent\n    w-px\n    h-px\n    pointer-events-none;\n  &:focus {\n    @apply focus-outset;\n    outline-offset: 11px;\n  }\n}\n\n.hex-and-channels-group {\n  @apply w-full;\n}\n\n.hex-and-channels-group,\n.control-section {\n  @apply flex flex-row flex-wrap;\n}\n\n.section {\n  padding-block: 0 var(--calcite-color-picker-spacing);\n  padding-inline: var(--calcite-color-picker-spacing);\n\n  &:first-of-type {\n    padding-block-start: var(--calcite-color-picker-spacing);\n  }\n}\n\n.sliders {\n  @apply flex flex-col justify-between;\n  margin-inline-start: var(--calcite-color-picker-spacing);\n}\n\n.preview-and-sliders {\n  @apply flex items-center;\n  padding: var(--calcite-color-picker-spacing);\n}\n\n.color-hex-options,\n.section--split {\n  flex-grow: 1;\n}\n\n.header {\n  @apply text-color-1\n    flex\n    items-center\n    justify-between;\n}\n\n.color-mode-container {\n  padding-block-start: var(--calcite-color-picker-spacing);\n}\n\n.channels {\n  @apply flex gap-y-0.5;\n}\n\n.channel {\n  &[data-channel-index=\"3\"] {\n    inline-size: 159px;\n  }\n}\n\n:host([scale=\"s\"]) {\n  .channels {\n    @apply flex-wrap;\n  }\n\n  .channel {\n    flex-basis: 30%;\n    flex-grow: 1;\n\n    &[data-channel-index=\"3\"] {\n      inline-size: unset;\n      margin-inline-start: unset;\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  .channel {\n    &[data-channel-index=\"3\"] {\n      inline-size: 131px;\n    }\n  }\n}\n\n.saved-colors {\n  @apply grid gap-2;\n  padding-block-start: var(--calcite-color-picker-spacing);\n  grid-template-columns: repeat(auto-fill, 24px);\n}\n\n.saved-colors-buttons {\n  display: flex;\n}\n\n.saved-color {\n  @include focus-style-base();\n\n  cursor: pointer;\n\n  &:focus {\n    @include focus-style-outset();\n  }\n\n  &:hover {\n    transition: outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;\n    outline: 2px solid var(--calcite-color-border-2);\n    outline-offset: 2px;\n  }\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport Color from \"color\";\nimport { Channels, ColorMode, ColorValue, HSLA, HSVA, InternalColor, RGBA } from \"./interfaces\";\nimport { throttle } from \"lodash-es\";\nimport { Direction, getElementDir, isPrimaryPointerButton } from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport {\n  CSS,\n  DEFAULT_COLOR,\n  DEFAULT_STORAGE_KEY_PREFIX,\n  DIMENSIONS,\n  HSV_LIMITS,\n  HUE_LIMIT_CONSTRAINED,\n  OPACITY_LIMITS,\n  RGB_LIMITS,\n  SCOPE_SIZE,\n} from \"./resources\";\nimport {\n  alphaCompatible,\n  alphaToOpacity,\n  colorEqual,\n  CSSColorMode,\n  Format,\n  hexify,\n  normalizeAlpha,\n  normalizeColor,\n  normalizeHex,\n  opacityToAlpha,\n  parseMode,\n  SupportedMode,\n  toAlphaMode,\n  toNonAlphaMode,\n} from \"./utils\";\n\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n} from \"../../utils/locale\";\nimport { clamp, closeToRangeEdge, remap } from \"../../utils/math\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ColorPickerMessages } from \"./assets/color-picker/t9n\";\n\nconst throttleFor60FpsInMs = 16;\n\n@Component({\n  tag: \"calcite-color-picker\",\n  styleUrl: \"color-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class ColorPicker\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop({ reflect: true }) allowEmpty = false;\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  @Watch(\"alphaChannel\")\n  handleAlphaChannelChange(alphaChannel: boolean): void {\n    const { format } = this;\n\n    if (alphaChannel && format !== \"auto\" && !alphaCompatible(format)) {\n      console.warn(\n        `ignoring alphaChannel as the current format (${format}) does not support alpha`,\n      );\n      this.alphaChannel = false;\n    }\n  }\n\n  /** When `true`, hides the RGB/HSV channel inputs. */\n  @Prop() channelsDisabled = false;\n\n  /**\n   * Internal prop for advanced use-cases.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) color: InternalColor | null = DEFAULT_COLOR;\n\n  @Watch(\"color\")\n  handleColorChange(color: Color | null, oldColor: Color | null): void {\n    this.drawColorControls();\n    this.updateChannelsFromColor(color);\n    this.previousColor = oldColor;\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The format of `value`.\n   *\n   * When `\"auto\"`, the format will be inferred from `value` when set.\n   *\n   * @default \"auto\"\n   */\n  @Prop({ reflect: true }) format: Format = \"auto\";\n\n  @Watch(\"alphaChannel\")\n  @Watch(\"format\")\n  handleFormatOrAlphaChannelChange(): void {\n    this.setMode(this.format);\n    this.internalColorSet(this.color, false, \"internal\");\n  }\n\n  /**\n   * When `true`, hides the RGB/HSV channel inputs.\n   *\n   * @deprecated use `channelsDisabled` instead\n   */\n  @Prop({ reflect: true }) hideChannels = false;\n\n  /** When `true`, hides the hex input. */\n  @Prop() hexDisabled = false;\n\n  /**\n   * When `true`, hides the hex input.\n   *\n   * @deprecated use `hexDisabled` instead\n   */\n  @Prop({ reflect: true }) hideHex = false;\n\n  /**\n   * When `true`, hides the saved colors section.\n   *\n   * @deprecated use `savedDisabled` instead\n   */\n  @Prop({ reflect: true }) hideSaved = false;\n\n  /** When `true`, hides the saved colors section. */\n  @Prop({ reflect: true }) savedDisabled = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  handleScaleChange(scale: Scale = \"m\"): void {\n    this.updateDimensions(scale);\n    this.updateCanvasSize(\"all\");\n    this.drawColorControls();\n  }\n\n  /** Specifies the storage ID for colors. */\n  @Prop({ reflect: true }) storageId: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ColorPickerMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * The component's value, where the value can be a CSS color string, or a RGB, HSL or HSV object.\n   *\n   * The type will be preserved as the color is updated.\n   *\n   * @default \"#007ac2\"\n   * @see [CSS Color](https://developer.mozilla.org/en-US/docs/Web/CSS/color)\n   * @see [ColorValue](https://github.com/Esri/calcite-design-system/blob/main/src/components/color-picker/interfaces.ts#L10)\n   */\n  @Prop({ mutable: true }) value: ColorValue | null = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: ColorValue | null, oldValue: ColorValue | null): void {\n    const { allowEmpty, format } = this;\n    const checkMode = !allowEmpty || value;\n    let modeChanged = false;\n\n    if (checkMode) {\n      const nextMode = parseMode(value);\n\n      if (!nextMode || (format !== \"auto\" && nextMode !== format)) {\n        this.showIncompatibleColorWarning(value, format);\n        this.value = oldValue;\n        return;\n      }\n\n      modeChanged = this.mode !== nextMode;\n      this.setMode(nextMode, this.internalColorUpdateContext === null);\n    }\n\n    const dragging = this.activeCanvasInfo;\n\n    if (this.internalColorUpdateContext === \"initial\") {\n      return;\n    }\n\n    if (this.internalColorUpdateContext === \"user-interaction\") {\n      this.calciteColorPickerInput.emit();\n\n      if (!dragging) {\n        this.calciteColorPickerChange.emit();\n      }\n      return;\n    }\n\n    const color =\n      allowEmpty && !value\n        ? null\n        : Color(\n            value != null && typeof value === \"object\" && alphaCompatible(this.mode)\n              ? normalizeColor(value as RGBA | HSVA | HSLA)\n              : value,\n          );\n    const colorChanged = !colorEqual(color, this.color);\n\n    if (modeChanged || colorChanged) {\n      this.internalColorSet(\n        color,\n        this.alphaChannel && !(this.mode.endsWith(\"a\") || this.mode.endsWith(\"a-css\")),\n        \"internal\",\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Internal State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerElement;\n\n  private activeCanvasInfo: {\n    context: CanvasRenderingContext2D;\n    bounds: DOMRect;\n  };\n\n  private get baseColorFieldColor(): Color {\n    return this.color || this.previousColor || DEFAULT_COLOR;\n  }\n\n  private checkerPattern: HTMLCanvasElement;\n\n  private colorFieldRenderingContext: CanvasRenderingContext2D;\n\n  private colorFieldScopeNode: HTMLDivElement;\n\n  private hueSliderRenderingContext: CanvasRenderingContext2D;\n\n  private hueScopeNode: HTMLDivElement;\n\n  private internalColorUpdateContext: \"internal\" | \"initial\" | \"user-interaction\" | null = null;\n\n  private mode: SupportedMode = CSSColorMode.HEX;\n\n  private opacityScopeNode: HTMLDivElement;\n\n  private opacitySliderRenderingContext: CanvasRenderingContext2D;\n\n  private previousColor: InternalColor | null;\n\n  private shiftKeyChannelAdjustment = 0;\n\n  @State() defaultMessages: ColorPickerMessages;\n\n  @State() channelMode: ColorMode = \"rgb\";\n\n  @State() channels: Channels = this.toChannels(DEFAULT_COLOR);\n\n  @State() dimensions = DIMENSIONS.m;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ColorPickerMessages;\n\n  @State() savedColors: string[] = [];\n\n  @State() colorFieldScopeTop: number;\n\n  @State() colorFieldScopeLeft: number;\n\n  @State() hueScopeLeft: number;\n\n  @State() opacityScopeLeft: number;\n\n  @State() scopeOrientation: \"vertical\" | \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the color value has changed.\n   */\n  @Event({ cancelable: false }) calciteColorPickerChange: EventEmitter<void>;\n\n  /**\n   * Fires as the color value changes.\n   *\n   * Similar to the `calciteColorPickerChange` event with the exception of dragging. When dragging the color field or hue slider thumb, this event fires as the thumb is moved.\n   */\n  @Event({ cancelable: false }) calciteColorPickerInput: EventEmitter<void>;\n\n  private handleTabActivate = (event: Event): void => {\n    this.channelMode = (event.currentTarget as HTMLElement).getAttribute(\n      \"data-color-mode\",\n    ) as ColorMode;\n\n    this.updateChannelsFromColor(this.color);\n  };\n\n  private handleColorFieldScopeKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const arrowKeyToXYOffset = {\n      ArrowUp: { x: 0, y: -10 },\n      ArrowRight: { x: 10, y: 0 },\n      ArrowDown: { x: 0, y: 10 },\n      ArrowLeft: { x: -10, y: 0 },\n    };\n\n    if (arrowKeyToXYOffset[key]) {\n      event.preventDefault();\n      this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n      this.captureColorFieldColor(\n        this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0,\n        this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0,\n        false,\n      );\n    }\n  };\n\n  private handleHueScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 1,\n      ArrowRight: 1,\n      ArrowDown: -1,\n      ArrowLeft: -1,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const hue = this.baseColorFieldColor.hue();\n      const color = this.baseColorFieldColor.hue(hue + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private handleHexInputChange = (event: Event): void => {\n    event.stopPropagation();\n    const { allowEmpty, color } = this;\n    const input = event.target as HTMLCalciteColorPickerHexInputElement;\n    const hex = input.value;\n\n    if (allowEmpty && !hex) {\n      this.internalColorSet(null);\n      return;\n    }\n\n    const normalizedHex = color && normalizeHex(hexify(color, alphaCompatible(this.mode)));\n\n    if (hex !== normalizedHex) {\n      this.internalColorSet(Color(hex));\n    }\n  };\n\n  private handleSavedColorSelect = (event: Event): void => {\n    const swatch = event.currentTarget as HTMLCalciteColorPickerSwatchElement;\n    this.internalColorSet(Color(swatch.color));\n  };\n\n  private handleChannelInput = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const isAlphaChannel = channelIndex === 3;\n\n    const limit = isAlphaChannel\n      ? OPACITY_LIMITS.max\n      : this.channelMode === \"rgb\"\n        ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n        : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n\n    let inputValue: string;\n\n    if (this.allowEmpty && !input.value) {\n      inputValue = \"\";\n    } else {\n      const value = Number(input.value);\n      const adjustedValue = value + this.shiftKeyChannelAdjustment;\n      const clamped = clamp(adjustedValue, 0, limit);\n\n      inputValue = clamped.toString();\n    }\n\n    input.value = inputValue;\n\n    if (inputValue !== \"\" && this.shiftKeyChannelAdjustment !== 0) {\n      // we treat nudging as a change event since the input won't emit when modifying the value directly\n      this.handleChannelChange(event);\n    }\n  };\n\n  // using @Listen as a workaround for VDOM listener not firing\n  @Listen(\"keydown\", { capture: true })\n  @Listen(\"keyup\", { capture: true })\n  protected handleChannelKeyUpOrDown(event: KeyboardEvent): void {\n    this.shiftKeyChannelAdjustment = 0;\n    const { key } = event;\n\n    if (\n      (key !== \"ArrowUp\" && key !== \"ArrowDown\") ||\n      !event.composedPath().some((node: HTMLElement) => node.classList?.contains(CSS.channel))\n    ) {\n      return;\n    }\n\n    const { shiftKey } = event;\n    event.preventDefault();\n\n    if (!this.color) {\n      this.internalColorSet(this.previousColor);\n      event.stopPropagation();\n      return;\n    }\n\n    // this gets applied to the input's up/down arrow increment/decrement\n    const complementaryBump = 9;\n\n    this.shiftKeyChannelAdjustment =\n      key === \"ArrowUp\" && shiftKey\n        ? complementaryBump\n        : key === \"ArrowDown\" && shiftKey\n          ? -complementaryBump\n          : 0;\n  }\n\n  private handleChannelChange = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels] as this[\"channels\"];\n\n    const shouldClearChannels = this.allowEmpty && !input.value;\n\n    if (shouldClearChannels) {\n      this.channels = [null, null, null, null];\n      this.internalColorSet(null);\n      return;\n    }\n\n    const isAlphaChannel = channelIndex === 3;\n    const value = Number(input.value);\n\n    channels[channelIndex] = isAlphaChannel ? opacityToAlpha(value) : value;\n    this.updateColorFromChannels(channels);\n  };\n\n  private handleSavedColorKeyDown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.handleSavedColorSelect(event);\n    }\n  };\n\n  private handleColorFieldPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX, offsetY } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.colorFieldRenderingContext,\n      bounds: this.colorFieldRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureColorFieldColor(offsetX, offsetY);\n    this.colorFieldScopeNode.focus();\n  };\n\n  private handleHueSliderPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.hueSliderRenderingContext,\n      bounds: this.hueSliderRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureHueSliderColor(offsetX);\n    this.hueScopeNode.focus();\n  };\n\n  private handleOpacitySliderPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.opacitySliderRenderingContext,\n      bounds: this.opacitySliderRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureOpacitySliderValue(offsetX);\n    this.opacityScopeNode.focus();\n  };\n\n  private globalPointerUpHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const previouslyDragging = this.activeCanvasInfo;\n    this.activeCanvasInfo = null;\n    this.drawColorControls();\n\n    if (previouslyDragging) {\n      this.calciteColorPickerChange.emit();\n    }\n  };\n\n  private globalPointerMoveHandler = (event: PointerEvent): void => {\n    const { activeCanvasInfo, el } = this;\n\n    if (!el.isConnected || !activeCanvasInfo) {\n      return;\n    }\n\n    const { context, bounds } = activeCanvasInfo;\n\n    let samplingX: number;\n    let samplingY: number;\n\n    const { clientX, clientY } = event;\n\n    if (context.canvas.matches(\":hover\")) {\n      samplingX = clientX - bounds.x;\n      samplingY = clientY - bounds.y;\n    } else {\n      // snap x and y to the closest edge\n\n      if (clientX < bounds.x + bounds.width && clientX > bounds.x) {\n        samplingX = clientX - bounds.x;\n      } else if (clientX < bounds.x) {\n        samplingX = 0;\n      } else {\n        samplingX = bounds.width;\n      }\n\n      if (clientY < bounds.y + bounds.height && clientY > bounds.y) {\n        samplingY = clientY - bounds.y;\n      } else if (clientY < bounds.y) {\n        samplingY = 0;\n      } else {\n        samplingY = bounds.height;\n      }\n    }\n\n    if (context === this.colorFieldRenderingContext) {\n      this.captureColorFieldColor(samplingX, samplingY, false);\n    } else if (context === this.hueSliderRenderingContext) {\n      this.captureHueSliderColor(samplingX);\n    } else if (context === this.opacitySliderRenderingContext) {\n      this.captureOpacitySliderValue(samplingX);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n\n    const { allowEmpty, color, format, value } = this;\n\n    const willSetNoColor = allowEmpty && !value;\n    const parsedMode = parseMode(value);\n    const valueIsCompatible =\n      willSetNoColor || (format === \"auto\" && parsedMode) || format === parsedMode;\n    const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n\n    if (!valueIsCompatible) {\n      this.showIncompatibleColorWarning(value, format);\n    }\n\n    this.setMode(format, false);\n    this.internalColorSet(initialColor, false, \"initial\");\n\n    this.updateDimensions(this.scale);\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId && localStorage.getItem(storageKey)) {\n      this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n    }\n\n    await setUpMessages(this);\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    window.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      allowEmpty,\n      channelsDisabled,\n      color,\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n      dimensions: {\n        slider: { width: sliderWidth },\n        thumb: { radius: thumbRadius },\n      },\n      hexDisabled,\n      hideChannels,\n      hideHex,\n      hideSaved,\n      hueScopeLeft,\n      messages,\n      alphaChannel,\n      opacityScopeLeft,\n      savedColors,\n      savedDisabled,\n      scale,\n      scopeOrientation,\n    } = this;\n    const selectedColorInHex = color ? hexify(color, alphaChannel) : null;\n    const hueTop = thumbRadius;\n    const hueLeft = hueScopeLeft ?? (sliderWidth * DEFAULT_COLOR.hue()) / HSV_LIMITS.h;\n    const opacityTop = thumbRadius;\n    const opacityLeft =\n      opacityScopeLeft ??\n      (sliderWidth * alphaToOpacity(DEFAULT_COLOR.alpha())) / OPACITY_LIMITS.max;\n    const noColor = color === null;\n    const vertical = scopeOrientation === \"vertical\";\n    const noHex = hexDisabled || hideHex;\n    const noChannels = channelsDisabled || hideChannels;\n    const noSaved = savedDisabled || hideSaved;\n    const [adjustedColorFieldScopeLeft, adjustedColorFieldScopeTop] = this.getAdjustedScopePosition(\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n    );\n    const [adjustedHueScopeLeft, adjustedHueScopeTop] = this.getAdjustedScopePosition(\n      hueLeft,\n      hueTop,\n    );\n    const [adjustedOpacityScopeLeft, adjustedOpacityScopeTop] = this.getAdjustedScopePosition(\n      opacityLeft,\n      opacityTop,\n    );\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div class={CSS.container}>\n          <div class={CSS.controlAndScope}>\n            <canvas\n              class={CSS.colorField}\n              onPointerDown={this.handleColorFieldPointerDown}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.initColorField}\n            />\n            <div\n              aria-label={vertical ? messages.value : messages.saturation}\n              aria-valuemax={vertical ? HSV_LIMITS.v : HSV_LIMITS.s}\n              aria-valuemin=\"0\"\n              aria-valuenow={(vertical ? color?.saturationv() : color?.value()) || \"0\"}\n              class={{ [CSS.scope]: true, [CSS.colorFieldScope]: true }}\n              onKeyDown={this.handleColorFieldScopeKeyDown}\n              role=\"slider\"\n              style={{\n                top: `${adjustedColorFieldScopeTop || 0}px`,\n                left: `${adjustedColorFieldScopeLeft || 0}px`,\n              }}\n              tabindex=\"0\"\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.storeColorFieldScope}\n            />\n          </div>\n          <div class={CSS.previewAndSliders}>\n            <calcite-color-picker-swatch class={CSS.preview} color={selectedColorInHex} scale=\"l\" />\n            <div class={CSS.sliders}>\n              <div class={CSS.controlAndScope}>\n                <canvas\n                  class={{ [CSS.slider]: true, [CSS.hueSlider]: true }}\n                  onPointerDown={this.handleHueSliderPointerDown}\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={this.initHueSlider}\n                />\n                <div\n                  aria-label={messages.hue}\n                  aria-valuemax={HSV_LIMITS.h}\n                  aria-valuemin=\"0\"\n                  aria-valuenow={color?.round().hue() || DEFAULT_COLOR.round().hue()}\n                  class={{ [CSS.scope]: true, [CSS.hueScope]: true }}\n                  onKeyDown={this.handleHueScopeKeyDown}\n                  role=\"slider\"\n                  style={{\n                    top: `${adjustedHueScopeTop}px`,\n                    left: `${adjustedHueScopeLeft}px`,\n                  }}\n                  tabindex=\"0\"\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={this.storeHueScope}\n                />\n              </div>\n              {alphaChannel ? (\n                <div class={CSS.controlAndScope}>\n                  <canvas\n                    class={{ [CSS.slider]: true, [CSS.opacitySlider]: true }}\n                    onPointerDown={this.handleOpacitySliderPointerDown}\n                    // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                    ref={this.initOpacitySlider}\n                  />\n                  <div\n                    aria-label={messages.opacity}\n                    aria-valuemax={OPACITY_LIMITS.max}\n                    aria-valuemin={OPACITY_LIMITS.min}\n                    aria-valuenow={(color || DEFAULT_COLOR).round().alpha()}\n                    class={{ [CSS.scope]: true, [CSS.opacityScope]: true }}\n                    onKeyDown={this.handleOpacityScopeKeyDown}\n                    role=\"slider\"\n                    style={{\n                      top: `${adjustedOpacityScopeTop}px`,\n                      left: `${adjustedOpacityScopeLeft}px`,\n                    }}\n                    tabindex=\"0\"\n                    // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                    ref={this.storeOpacityScope}\n                  />\n                </div>\n              ) : null}\n            </div>\n          </div>\n          {noHex && noChannels ? null : (\n            <div\n              class={{\n                [CSS.controlSection]: true,\n                [CSS.section]: true,\n              }}\n            >\n              <div class={CSS.hexAndChannelsGroup}>\n                {noHex ? null : (\n                  <div class={CSS.hexOptions}>\n                    <calcite-color-picker-hex-input\n                      allowEmpty={allowEmpty}\n                      alphaChannel={alphaChannel}\n                      class={CSS.control}\n                      messages={messages}\n                      numberingSystem={this.numberingSystem}\n                      onCalciteColorPickerHexInputChange={this.handleHexInputChange}\n                      scale={scale}\n                      value={selectedColorInHex}\n                    />\n                  </div>\n                )}\n                {noChannels ? null : (\n                  <calcite-tabs\n                    class={{\n                      [CSS.colorModeContainer]: true,\n                      [CSS.splitSection]: true,\n                    }}\n                    scale={scale === \"l\" ? \"m\" : \"s\"}\n                  >\n                    <calcite-tab-nav slot=\"title-group\">\n                      {this.renderChannelsTabTitle(\"rgb\")}\n                      {this.renderChannelsTabTitle(\"hsv\")}\n                    </calcite-tab-nav>\n                    {this.renderChannelsTab(\"rgb\")}\n                    {this.renderChannelsTab(\"hsv\")}\n                  </calcite-tabs>\n                )}\n              </div>\n            </div>\n          )}\n          {noSaved ? null : (\n            <div class={{ [CSS.savedColorsSection]: true, [CSS.section]: true }}>\n              <div class={CSS.header}>\n                <label>{messages.saved}</label>\n                <div class={CSS.savedColorsButtons}>\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.deleteColor}\n                    disabled={noColor}\n                    iconStart=\"minus\"\n                    kind=\"neutral\"\n                    label={messages.deleteColor}\n                    onClick={this.deleteColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.saveColor}\n                    disabled={noColor}\n                    iconStart=\"plus\"\n                    kind=\"neutral\"\n                    label={messages.saveColor}\n                    onClick={this.saveColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                </div>\n              </div>\n              {savedColors.length > 0 ? (\n                <div class={CSS.savedColors}>\n                  {[\n                    ...savedColors.map((color) => (\n                      <calcite-color-picker-swatch\n                        class={CSS.savedColor}\n                        color={color}\n                        key={color}\n                        onClick={this.handleSavedColorSelect}\n                        onKeyDown={this.handleSavedColorKeyDown}\n                        scale={scale}\n                        tabIndex={0}\n                      />\n                    )),\n                  ]}\n                </div>\n              ) : null}\n            </div>\n          )}\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  private storeColorFieldScope = (node: HTMLDivElement): void => {\n    this.colorFieldScopeNode = node;\n  };\n\n  private storeHueScope = (node: HTMLDivElement): void => {\n    this.hueScopeNode = node;\n  };\n\n  private renderChannelsTabTitle = (channelMode: this[\"channelMode\"]): VNode => {\n    const { channelMode: activeChannelMode, messages } = this;\n    const selected = channelMode === activeChannelMode;\n    const label = channelMode === \"rgb\" ? messages.rgb : messages.hsv;\n\n    return (\n      <calcite-tab-title\n        class={CSS.colorMode}\n        data-color-mode={channelMode}\n        key={channelMode}\n        onCalciteTabsActivate={this.handleTabActivate}\n        selected={selected}\n      >\n        {label}\n      </calcite-tab-title>\n    );\n  };\n\n  private renderChannelsTab = (channelMode: this[\"channelMode\"]): VNode => {\n    const { allowEmpty, channelMode: activeChannelMode, channels, messages, alphaChannel } = this;\n    const selected = channelMode === activeChannelMode;\n    const isRgb = channelMode === \"rgb\";\n    const channelAriaLabels = isRgb\n      ? [messages.red, messages.green, messages.blue]\n      : [messages.hue, messages.saturation, messages.value];\n    const direction = getElementDir(this.el);\n    const channelsToRender = alphaChannel ? channels : channels.slice(0, 3);\n\n    return (\n      <calcite-tab class={CSS.control} key={channelMode} selected={selected}>\n        {/* channel order should not be mirrored */}\n        <div class={CSS.channels} dir=\"ltr\">\n          {channelsToRender.map((channelValue, index) => {\n            const isAlphaChannel = index === 3;\n\n            if (isAlphaChannel) {\n              channelValue =\n                allowEmpty && !channelValue ? channelValue : alphaToOpacity(channelValue);\n            }\n\n            /* the channel container is ltr, so we apply the host's direction */\n            return this.renderChannel(\n              channelValue,\n              index,\n              channelAriaLabels[index],\n              direction,\n              isAlphaChannel ? \"%\" : \"\",\n            );\n          })}\n        </div>\n      </calcite-tab>\n    );\n  };\n\n  private renderChannel = (\n    value: number | null,\n    index: number,\n    ariaLabel: string,\n    direction: Direction,\n    suffix?: string,\n  ): VNode => {\n    return (\n      <calcite-input-number\n        class={CSS.channel}\n        data-channel-index={index}\n        dir={direction}\n        key={index}\n        label={ariaLabel}\n        lang={this.effectiveLocale}\n        numberButtonType=\"none\"\n        numberingSystem={this.numberingSystem}\n        onCalciteInputNumberChange={this.handleChannelChange}\n        onCalciteInputNumberInput={this.handleChannelInput}\n        onKeyDown={this.handleKeyDown}\n        scale={this.scale === \"l\" ? \"m\" : \"s\"}\n        // workaround to ensure input borders overlap as desired\n        // this is because the build transforms margin-left to its\n        // logical-prop, which is undesired as channels are always ltr\n        style={{\n          marginLeft:\n            index > 0 && !(this.scale === \"s\" && this.alphaChannel && index === 3) ? \"-1px\" : \"\",\n        }}\n        suffixText={suffix}\n        value={value?.toString()}\n      />\n    );\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  handleKeyDown(event: KeyboardEvent): void {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  private showIncompatibleColorWarning(value: ColorValue, format: Format): void {\n    console.warn(\n      `ignoring color value (${value}) as it is not compatible with the current format (${format})`,\n    );\n  }\n\n  private setMode(format: ColorPicker[\"format\"], warn = true): void {\n    const mode = format === \"auto\" ? this.mode : format;\n    this.mode = this.ensureCompatibleMode(mode, warn);\n  }\n\n  private ensureCompatibleMode(mode: SupportedMode, warn): SupportedMode {\n    const { alphaChannel } = this;\n    const isAlphaCompatible = alphaCompatible(mode);\n\n    if (alphaChannel && !isAlphaCompatible) {\n      const alphaMode = toAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${alphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return alphaMode;\n    }\n\n    if (!alphaChannel && isAlphaCompatible) {\n      const nonAlphaMode = toNonAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${nonAlphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return nonAlphaMode;\n    }\n\n    return mode;\n  }\n\n  private captureHueSliderColor(x: number): void {\n    const {\n      dimensions: {\n        slider: { width },\n      },\n    } = this;\n    const hue = (HUE_LIMIT_CONSTRAINED / width) * x;\n\n    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n  }\n\n  private captureOpacitySliderValue(x: number): void {\n    const {\n      dimensions: {\n        slider: { width },\n      },\n    } = this;\n    const alpha = opacityToAlpha((OPACITY_LIMITS.max / width) * x);\n\n    this.internalColorSet(this.baseColorFieldColor.alpha(alpha), false);\n  }\n\n  private internalColorSet(\n    color: Color | null,\n    skipEqual = true,\n    context: ColorPicker[\"internalColorUpdateContext\"] = \"user-interaction\",\n  ): void {\n    if (skipEqual && colorEqual(color, this.color)) {\n      return;\n    }\n\n    this.internalColorUpdateContext = context;\n    this.color = color;\n    this.value = this.toValue(color);\n    this.internalColorUpdateContext = null;\n  }\n\n  private toValue(color: Color | null, format: SupportedMode = this.mode): ColorValue | null {\n    if (!color) {\n      return null;\n    }\n\n    const hexMode = \"hex\";\n\n    if (format.includes(hexMode)) {\n      const hasAlpha = format === CSSColorMode.HEXA;\n      return normalizeHex(hexify(color.round(), hasAlpha), hasAlpha);\n    }\n\n    if (format.includes(\"-css\")) {\n      const value = color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n\n      // Color omits alpha values when alpha is 1\n      const needToInjectAlpha =\n        (format.endsWith(\"a\") || format.endsWith(\"a-css\")) && color.alpha() === 1;\n      if (needToInjectAlpha) {\n        const model = value.slice(0, 3);\n        const values = value.slice(4, -1);\n        return `${model}a(${values}, ${color.alpha()})`;\n      }\n\n      return value;\n    }\n\n    const colorObject =\n      /* Color() does not support hsva, hsla nor rgba, so we use the non-alpha mode */\n      color[toNonAlphaMode(format)]().round().object();\n\n    if (format.endsWith(\"a\")) {\n      return normalizeAlpha(colorObject);\n    }\n\n    return colorObject;\n  }\n\n  private getSliderCapSpacing(): number {\n    const {\n      dimensions: {\n        slider: { height },\n        thumb: { radius },\n      },\n    } = this;\n\n    return radius * 2 - height;\n  }\n\n  private updateDimensions(scale: Scale = \"m\"): void {\n    this.dimensions = DIMENSIONS[scale];\n  }\n\n  private deleteColor = (): void => {\n    const colorToDelete = hexify(this.color, this.alphaChannel);\n    const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n\n    if (!inStorage) {\n      return;\n    }\n\n    const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private saveColor = (): void => {\n    const colorToSave = hexify(this.color, this.alphaChannel);\n    const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n\n    if (alreadySaved) {\n      return;\n    }\n\n    const savedColors = [...this.savedColors, colorToSave];\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private drawColorControls = throttle(\n    (type: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\"): void => {\n      if ((type === \"all\" || type === \"color-field\") && this.colorFieldRenderingContext) {\n        this.drawColorField();\n      }\n\n      if ((type === \"all\" || type === \"hue-slider\") && this.hueSliderRenderingContext) {\n        this.drawHueSlider();\n      }\n\n      if (\n        this.alphaChannel &&\n        (type === \"all\" || type === \"opacity-slider\") &&\n        this.opacitySliderRenderingContext\n      ) {\n        this.drawOpacitySlider();\n      }\n    },\n    throttleFor60FpsInMs,\n  );\n\n  private drawColorField(): void {\n    const context = this.colorFieldRenderingContext;\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n\n    context.fillStyle = this.baseColorFieldColor\n      .hsv()\n      .saturationv(100)\n      .value(100)\n      .alpha(1)\n      .string();\n    context.fillRect(0, 0, width, height);\n\n    const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n    whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n    whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    context.fillStyle = whiteGradient;\n    context.fillRect(0, 0, width, height);\n\n    const blackGradient = context.createLinearGradient(0, 0, 0, height);\n    blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n    blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n    context.fillStyle = blackGradient;\n    context.fillRect(0, 0, width, height);\n\n    this.drawActiveColorFieldColor();\n  }\n\n  private setCanvasContextSize(\n    canvas: HTMLCanvasElement,\n    { height, width }: { height: number; width: number },\n  ): void {\n    if (!canvas) {\n      return;\n    }\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.height = `${height}px`;\n    canvas.style.width = `${width}px`;\n\n    const context = canvas.getContext(\"2d\");\n    context.scale(devicePixelRatio, devicePixelRatio);\n  }\n\n  private captureColorFieldColor = (x: number, y: number, skipEqual = true): void => {\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n    const saturation = Math.round((HSV_LIMITS.s / width) * x);\n    const value = Math.round((HSV_LIMITS.v / height) * (height - y));\n\n    this.internalColorSet(\n      this.baseColorFieldColor.hsv().saturationv(saturation).value(value),\n      skipEqual,\n    );\n  };\n\n  private initColorField = (canvas: HTMLCanvasElement): void => {\n    this.colorFieldRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"color-field\");\n    this.drawColorControls();\n  };\n\n  private initHueSlider = (canvas: HTMLCanvasElement): void => {\n    this.hueSliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"hue-slider\");\n    this.drawHueSlider();\n  };\n\n  private initOpacitySlider = (canvas: HTMLCanvasElement): void => {\n    if (!canvas) {\n      return;\n    }\n\n    this.opacitySliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"opacity-slider\");\n    this.drawOpacitySlider();\n  };\n\n  private updateCanvasSize(\n    context: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\",\n  ): void {\n    const { dimensions } = this;\n\n    if (context === \"all\" || context === \"color-field\") {\n      this.setCanvasContextSize(this.colorFieldRenderingContext?.canvas, dimensions.colorField);\n    }\n\n    const adjustedSliderDimensions = {\n      width: dimensions.slider.width,\n      height:\n        dimensions.slider.height + (dimensions.thumb.radius - dimensions.slider.height / 2) * 2,\n    };\n\n    if (context === \"all\" || context === \"hue-slider\") {\n      this.setCanvasContextSize(this.hueSliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n\n    if (context === \"all\" || context === \"opacity-slider\") {\n      this.setCanvasContextSize(\n        this.opacitySliderRenderingContext?.canvas,\n        adjustedSliderDimensions,\n      );\n    }\n  }\n\n  private drawActiveColorFieldColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv();\n\n    const {\n      dimensions: {\n        colorField: { height, width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n\n    requestAnimationFrame(() => {\n      this.colorFieldScopeLeft = x;\n      this.colorFieldScopeTop = y;\n    });\n\n    this.drawThumb(this.colorFieldRenderingContext, radius, x, y, hsvColor, false);\n  }\n\n  private drawThumb(\n    context: CanvasRenderingContext2D,\n    radius: number,\n    x: number,\n    y: number,\n    color: Color,\n    applyAlpha: boolean,\n  ): void {\n    const startAngle = 0;\n    const endAngle = 2 * Math.PI;\n    const outlineWidth = 1;\n\n    context.beginPath();\n    context.arc(x, y, radius, startAngle, endAngle);\n    context.fillStyle = \"#fff\";\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = outlineWidth;\n    context.stroke();\n\n    if (applyAlpha && color.alpha() < 1) {\n      const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n      context.beginPath();\n      context.arc(x, y, radius - 3, startAngle, endAngle);\n      context.fillStyle = pattern;\n      context.fill();\n    }\n\n    context.globalCompositeOperation = \"source-atop\";\n\n    context.beginPath();\n    context.arc(x, y, radius - 3, startAngle, endAngle);\n    const alpha = applyAlpha ? color.alpha() : 1;\n    context.fillStyle = color.rgb().alpha(alpha).string();\n    context.fill();\n\n    context.globalCompositeOperation = \"source-over\";\n  }\n\n  private drawActiveHueSliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv().saturationv(100).value(100);\n\n    const {\n      dimensions: {\n        slider: { width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = hsvColor.hue() / (HUE_LIMIT_CONSTRAINED / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.hueScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.hueSliderRenderingContext, radius, sliderBoundX, y, hsvColor, false);\n  }\n\n  private drawHueSlider(): void {\n    const context = this.hueSliderRenderingContext;\n    const {\n      dimensions: {\n        slider: { height, width },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n\n    const gradient = context.createLinearGradient(0, 0, width, 0);\n\n    const hueSliderColorStopKeywords = [\n      \"red\",\n      \"yellow\",\n      \"lime\",\n      \"cyan\",\n      \"blue\",\n      \"magenta\",\n      \"#ff0004\" /* 1 unit less than #ff0 to avoid duplicate values within range */,\n    ];\n\n    const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n    let currentOffset = 0;\n\n    hueSliderColorStopKeywords.forEach((keyword) => {\n      gradient.addColorStop(currentOffset, Color(keyword).string());\n      currentOffset += offset;\n    });\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveHueSliderColor();\n  }\n\n  private drawOpacitySlider(): void {\n    const context = this.opacitySliderRenderingContext;\n    const {\n      baseColorFieldColor: previousColor,\n      dimensions: {\n        slider: { height, width },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    const gradient = context.createLinearGradient(0, y, width, 0);\n    const startColor = previousColor.rgb().alpha(0);\n    const midColor = previousColor.rgb().alpha(0.5);\n    const endColor = previousColor.rgb().alpha(1);\n\n    gradient.addColorStop(0, startColor.string());\n    gradient.addColorStop(0.5, midColor.string());\n    gradient.addColorStop(1, endColor.string());\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n    context.fillStyle = pattern;\n    context.fill();\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveOpacitySliderColor();\n  }\n\n  private drawSliderPath(\n    context: CanvasRenderingContext2D,\n    height: number,\n    width: number,\n    x: number,\n    y: number,\n  ): void {\n    const radius = height / 2 + 1;\n    context.beginPath();\n    context.moveTo(x + radius, y);\n    context.lineTo(x + width - radius, y);\n    context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    context.lineTo(x + width, y + height - radius);\n    context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    context.lineTo(x + radius, y + height);\n    context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    context.lineTo(x, y + radius);\n    context.quadraticCurveTo(x, y, x + radius, y);\n    context.closePath();\n  }\n\n  private getCheckeredBackgroundPattern(): HTMLCanvasElement {\n    if (this.checkerPattern) {\n      return this.checkerPattern;\n    }\n\n    const pattern = document.createElement(\"canvas\");\n    pattern.width = 10;\n    pattern.height = 10;\n    const patternContext = pattern.getContext(\"2d\");\n\n    patternContext.fillStyle = \"#ccc\";\n    patternContext.fillRect(0, 0, 10, 10);\n    patternContext.fillStyle = \"#fff\";\n    patternContext.fillRect(0, 0, 5, 5);\n    patternContext.fillRect(5, 5, 5, 5);\n\n    this.checkerPattern = pattern;\n\n    return pattern;\n  }\n\n  private drawActiveOpacitySliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color;\n\n    const {\n      dimensions: {\n        slider: { width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = alphaToOpacity(hsvColor.alpha()) / (OPACITY_LIMITS.max / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.opacityScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.opacitySliderRenderingContext, radius, sliderBoundX, y, hsvColor, true);\n  }\n\n  private getSliderBoundX(x: number, width: number, radius: number): number {\n    const closeToEdge = closeToRangeEdge(x, width, radius);\n\n    return closeToEdge === 0\n      ? x\n      : closeToEdge === -1\n        ? remap(x, 0, width, radius, radius * 2)\n        : remap(x, 0, width, width - radius * 2, width - radius);\n  }\n\n  private storeOpacityScope = (node: HTMLDivElement): void => {\n    this.opacityScopeNode = node;\n  };\n\n  private handleOpacityScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 0.01,\n      ArrowRight: 0.01,\n      ArrowDown: -0.01,\n      ArrowLeft: -0.01,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const alpha = this.baseColorFieldColor.alpha();\n      const color = this.baseColorFieldColor.alpha(alpha + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private updateColorFromChannels(channels: this[\"channels\"]): void {\n    this.internalColorSet(Color(channels, this.channelMode));\n  }\n\n  private updateChannelsFromColor(color: Color | null): void {\n    this.channels = color ? this.toChannels(color) : [null, null, null, null];\n  }\n\n  private toChannels(color: Color): Channels {\n    const { channelMode } = this;\n\n    const channels = color[channelMode]()\n      .array()\n      .map((value, index) => {\n        const isAlpha = index === 3;\n        return isAlpha ? value : Math.floor(value);\n      });\n\n    if (channels.length === 3) {\n      channels.push(1); // Color omits alpha when 1\n    }\n\n    return channels as Channels;\n  }\n\n  private getAdjustedScopePosition(left: number, top: number): [number, number] {\n    return [left - SCOPE_SIZE / 2, top - SCOPE_SIZE / 2];\n  }\n}\n", "export const CSS = {\n  container: \"container\",\n  hexInput: \"hex-input\",\n  opacityInput: \"opacity-input\",\n};\n", ":host {\n  @apply block;\n}\n\n.container {\n  @apply flex w-full items-center flex-nowrap;\n}\n\n.hex-input {\n  @apply grow uppercase;\n}\n\n.opacity-input {\n  inline-size: 68px;\n  margin-inline-start: -1px;\n}\n\n:host([scale=\"s\"]) {\n  .container {\n    @apply flex-wrap gap-y-0.5;\n  }\n\n  .opacity-input {\n    inline-size: unset;\n    margin-inline-start: unset;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .opacity-input {\n    inline-size: 88px;\n  }\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  alphaToOpacity,\n  hexChar,\n  hexify,\n  isLonghandHex,\n  isValidHex,\n  normalizeHex,\n  opacityToAlpha,\n  rgbToHex,\n} from \"../color-picker/utils\";\nimport { CSS } from \"./resources\";\nimport { Scale } from \"../interfaces\";\nimport { Channels, RGB } from \"../color-picker/interfaces\";\nimport Color from \"color\";\nimport { focusElement } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { NumberingSystem } from \"../../utils/locale\";\nimport { OPACITY_LIMITS } from \"../color-picker/resources\";\nimport { ColorPickerMessages } from \"../color-picker/assets/color-picker/t9n\";\n\nconst DEFAULT_COLOR = Color();\n\n@Component({\n  tag: \"calcite-color-picker-hex-input\",\n  styleUrl: \"color-picker-hex-input.scss\",\n  shadow: true,\n})\nexport class ColorPickerHexInput implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    const { allowEmpty, alphaChannel, value } = this;\n\n    if (value) {\n      const normalized = normalizeHex(value, alphaChannel);\n\n      if (isValidHex(normalized, alphaChannel)) {\n        this.internalSetValue(normalized, normalized, false);\n      }\n\n      return;\n    }\n\n    if (allowEmpty) {\n      this.internalSetValue(null, null, false);\n    }\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop() allowEmpty = false;\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  /**\n   * Specifies accessible label for the input field.\n   *\n   * @deprecated use `messages` instead\n   */\n  @Prop() hexLabel = \"Hex\";\n\n  /**\n   * Messages are passed by parent component for accessible labels.\n   *\n   * @internal\n   */\n  @Prop() messages: ColorPickerMessages;\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop() numberingSystem?: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * The hex value.\n   */\n  @Prop({ mutable: true, reflect: true }) value: string = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n    this.alphaChannel,\n    true,\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: string, oldValue: string): void {\n    this.internalSetValue(value, oldValue, false);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emitted when the hex value changes.\n   */\n  @Event({ cancelable: false }) calciteColorPickerHexInputChange: EventEmitter<void>;\n\n  private onHexInputBlur = (): void => {\n    const node = this.hexInputNode;\n    const inputValue = node.value;\n    const hex = `#${inputValue}`;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n    const isLonghand = isLonghandHex(hex);\n\n    // ensure modified pasted hex values are committed since we prevent default to remove the # char.\n    this.onHexInputChange();\n\n    if (willClearValue || (isValidHex(hex) && isLonghand)) {\n      return;\n    }\n\n    // manipulating DOM directly since rerender doesn't update input value\n    node.value =\n      allowEmpty && !internalColor\n        ? \"\"\n        : this.formatHexForInternalInput(\n            rgbToHex(\n              // always display hex input in RRGGBB format\n              internalColor.object() as any as RGB,\n            ),\n          );\n  };\n\n  private onOpacityInputBlur = (): void => {\n    const node = this.opacityInputNode;\n    const inputValue = node.value;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n\n    if (willClearValue) {\n      return;\n    }\n\n    // manipulating DOM directly since rerender doesn't update input value\n    node.value =\n      allowEmpty && !internalColor ? \"\" : this.formatOpacityForInternalInput(internalColor);\n  };\n\n  private onHexInputChange = (): void => {\n    const nodeValue = this.hexInputNode.value;\n    let value = nodeValue;\n\n    if (value) {\n      const normalized = normalizeHex(value, false);\n      const preserveExistingAlpha = isValidHex(normalized) && this.alphaChannel;\n      if (preserveExistingAlpha && this.internalColor) {\n        const alphaHex = normalizeHex(this.internalColor.hexa(), true).slice(-2);\n        value = `${normalized + alphaHex}`;\n      }\n    }\n\n    this.internalSetValue(value, this.value);\n  };\n\n  private onOpacityInputChange = (): void => {\n    const node = this.opacityInputNode;\n    let value: number | string;\n\n    if (!node.value) {\n      value = node.value;\n    } else {\n      const alpha = opacityToAlpha(Number(node.value));\n      value = this.internalColor?.alpha(alpha).hexa();\n    }\n\n    this.internalSetValue(value, this.value);\n  };\n\n  protected onInputKeyDown = (event: KeyboardEvent): void => {\n    const { altKey, ctrlKey, metaKey, shiftKey } = event;\n    const { alphaChannel, hexInputNode, internalColor, value } = this;\n    const { key } = event;\n    const composedPath = event.composedPath();\n\n    if (key === \"Tab\" || key === \"Enter\") {\n      if (composedPath.includes(hexInputNode)) {\n        this.onHexInputChange();\n      } else {\n        this.onOpacityInputChange();\n      }\n\n      if (key === \"Enter\") {\n        event.preventDefault();\n      }\n\n      return;\n    }\n\n    const isNudgeKey = key === \"ArrowDown\" || key === \"ArrowUp\";\n    const oldValue = this.value;\n\n    if (isNudgeKey) {\n      if (!value) {\n        this.internalSetValue(this.previousNonNullValue, oldValue);\n        event.preventDefault();\n        return;\n      }\n\n      const direction = key === \"ArrowUp\" ? 1 : -1;\n      const bump = shiftKey ? 10 : 1;\n\n      this.internalSetValue(\n        hexify(\n          this.nudgeRGBChannels(\n            internalColor,\n            bump * direction,\n            composedPath.includes(hexInputNode) ? \"rgb\" : \"a\",\n          ),\n          alphaChannel,\n        ),\n        oldValue,\n      );\n\n      event.preventDefault();\n      return;\n    }\n\n    const withModifiers = altKey || ctrlKey || metaKey;\n    const singleChar = key.length === 1;\n    const validHexChar = hexChar.test(key);\n\n    if (singleChar && !withModifiers && !validHexChar) {\n      event.preventDefault();\n    }\n  };\n\n  private onHexInputPaste = (event: ClipboardEvent): void => {\n    const hex = event.clipboardData.getData(\"text\");\n\n    if (isValidHex(hex)) {\n      event.preventDefault();\n      this.hexInputNode.value = hex.slice(1);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerHexInputElement;\n\n  private hexInputNode: HTMLCalciteInputTextElement;\n\n  /**\n   * The last valid/selected color. Used as a fallback if an invalid hex code is entered.\n   */\n  @State() internalColor: Color | null = DEFAULT_COLOR;\n\n  private opacityInputNode: HTMLCalciteInputNumberElement;\n\n  private previousNonNullValue: string = this.value;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const { alphaChannel, hexLabel, internalColor, messages, scale, value } = this;\n    const hexInputValue = this.formatHexForInternalInput(value);\n    const opacityInputValue = this.formatOpacityForInternalInput(internalColor);\n    const inputScale = scale === \"l\" ? \"m\" : \"s\";\n\n    return (\n      <div class={CSS.container}>\n        <calcite-input-text\n          class={CSS.hexInput}\n          label={messages?.hex || hexLabel}\n          maxLength={6}\n          onCalciteInputTextChange={this.onHexInputChange}\n          onCalciteInternalInputTextBlur={this.onHexInputBlur}\n          onKeyDown={this.onInputKeyDown}\n          onPaste={this.onHexInputPaste}\n          prefixText=\"#\"\n          scale={inputScale}\n          value={hexInputValue}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={this.storeHexInputRef}\n        />\n        {alphaChannel ? (\n          <calcite-input-number\n            class={CSS.opacityInput}\n            key=\"opacity-input\"\n            label={messages?.opacity}\n            max={OPACITY_LIMITS.max}\n            maxLength={3}\n            min={OPACITY_LIMITS.min}\n            numberButtonType=\"none\"\n            numberingSystem={this.numberingSystem}\n            onCalciteInputNumberChange={this.onOpacityInputChange}\n            onCalciteInternalInputNumberBlur={this.onOpacityInputBlur}\n            onKeyDown={this.onInputKeyDown}\n            scale={inputScale}\n            suffixText=\"%\"\n            value={opacityInputValue}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.storeOpacityInputRef}\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return focusElement(this.hexInputNode);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private internalSetValue(value: string | null, oldValue: string | null, emit = true): void {\n    if (value) {\n      const { alphaChannel } = this;\n      const normalized = normalizeHex(value, alphaChannel, alphaChannel);\n\n      if (isValidHex(normalized, alphaChannel)) {\n        const { internalColor: currentColor } = this;\n        const nextColor = Color(normalized);\n        const normalizedLonghand = normalizeHex(hexify(nextColor, alphaChannel), alphaChannel);\n\n        const changed =\n          !currentColor ||\n          normalizedLonghand !== normalizeHex(hexify(currentColor, alphaChannel), alphaChannel);\n\n        this.internalColor = nextColor;\n        this.previousNonNullValue = normalizedLonghand;\n        this.value = normalizedLonghand;\n\n        if (changed && emit) {\n          this.calciteColorPickerHexInputChange.emit();\n        }\n\n        return;\n      }\n    } else if (this.allowEmpty) {\n      this.internalColor = null;\n      this.value = null;\n\n      if (emit) {\n        this.calciteColorPickerHexInputChange.emit();\n      }\n\n      return;\n    }\n\n    this.value = oldValue;\n  }\n\n  private storeHexInputRef = (node: HTMLCalciteInputTextElement): void => {\n    this.hexInputNode = node;\n  };\n\n  private storeOpacityInputRef = (node: HTMLCalciteInputNumberElement): void => {\n    this.opacityInputNode = node;\n  };\n\n  private formatHexForInternalInput(hex: string): string {\n    return hex ? hex.replace(\"#\", \"\").slice(0, 6) : \"\";\n  }\n\n  private formatOpacityForInternalInput(color: Color): string {\n    return color ? `${alphaToOpacity(color.alpha())}` : \"\";\n  }\n\n  private nudgeRGBChannels(color: Color, amount: number, context: \"rgb\" | \"a\"): Color {\n    let nudgedChannels: Channels;\n    const channels = color.array();\n    const rgbChannels = channels.slice(0, 3);\n\n    if (context === \"rgb\") {\n      const nudgedRGBChannels = rgbChannels.map((channel) => channel + amount);\n      nudgedChannels = [\n        ...nudgedRGBChannels,\n        this.alphaChannel ? channels[3] : undefined,\n      ] as Channels;\n    } else {\n      const nudgedAlpha = opacityToAlpha(alphaToOpacity(color.alpha()) + amount);\n      nudgedChannels = [...rgbChannels, nudgedAlpha] as Channels;\n    }\n\n    return Color(nudgedChannels);\n  }\n}\n", "export const CSS = {\n  swatch: \"swatch\",\n  noColorSwatch: \"swatch--no-color\",\n  checker: \"checker\",\n};\n\nexport const COLORS = {\n  borderLight: \"rgba(0, 0, 0, 0.3)\",\n  borderDark: \"rgba(255, 255, 255, 0.15)\",\n};\n\nconst checkerSquareSize = 4;\n\nexport const CHECKER_DIMENSIONS = {\n  squareSize: checkerSquareSize,\n  size: checkerSquareSize * 2,\n};\n", "$size-s: 20px;\n$size-m: 24px;\n$size-l: 28px;\n\n:host {\n  @apply relative inline-flex;\n}\n\n:host([scale=\"s\"]) {\n  @apply h-5 w-5;\n}\n\n:host([scale=\"m\"]) {\n  @apply h-6 w-6;\n}\n\n:host([scale=\"l\"]) {\n  @apply h-8 w-8;\n}\n\n.swatch {\n  @apply overflow-hidden;\n  block-size: inherit;\n  inline-size: inherit;\n\n  rect {\n    @apply transition-all duration-150 ease-in-out;\n  }\n}\n\n.swatch--no-color {\n  rect {\n    fill: var(--calcite-color-foreground-1);\n  }\n\n  line {\n    stroke: var(--calcite-color-status-danger);\n  }\n}\n\n.checker {\n  fill: #cacaca;\n}\n\n@include base-component();\n", "import { Component, Element, Fragment, h, Prop, VNode, Watch } from \"@stencil/core\";\nimport Color from \"color\";\nimport { getModeName } from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport { hexify } from \"../color-picker/utils\";\nimport { CHECKER_DIMENSIONS, COLORS, CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-color-picker-swatch\",\n  styleUrl: \"color-picker-swatch.scss\",\n  shadow: true,\n})\nexport class ColorPickerSwatch {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is active.\n   */\n  @Prop({\n    reflect: true,\n  })\n  active = false;\n\n  /**\n   * The color value.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n   */\n  @Prop()\n  color: string | null;\n\n  @Watch(\"color\")\n  handleColorChange(color: string | null): void {\n    this.internalColor = color ? Color(color) : null;\n  }\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerSwatchElement;\n\n  private internalColor: Color;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.handleColorChange(this.color);\n  }\n\n  render(): VNode {\n    const isEmpty = !this.internalColor;\n    const classes = {\n      [CSS.swatch]: true,\n      [CSS.noColorSwatch]: isEmpty,\n    };\n\n    return (\n      <svg class={classes} xmlns=\"http://www.w3.org/2000/svg\">\n        {this.renderSwatch()}\n      </svg>\n    );\n  }\n\n  renderSwatch(): VNode {\n    const { active, el, internalColor } = this;\n    const borderRadius = active ? \"100%\" : \"0\";\n    const theme = getModeName(el);\n    const borderColor = theme === \"light\" ? COLORS.borderLight : COLORS.borderDark;\n    const commonSwatchProps = {\n      height: \"100%\",\n      rx: borderRadius,\n      stroke: borderColor,\n\n      // stroke-width and clip-path are needed to hide overflowing portion of stroke\n      // see https://stackoverflow.com/a/7273346/194216\n\n      // using attribute to work around Stencil using the prop name vs the attribute when rendering\n      [\"stroke-width\"]: \"2\",\n      width: \"100%\",\n    };\n\n    const isEmpty = !internalColor;\n\n    if (isEmpty) {\n      return (\n        <Fragment>\n          <clipPath id=\"shape\">\n            <rect height=\"100%\" rx={borderRadius} width=\"100%\" />\n          </clipPath>\n          <rect\n            clip-path={`inset(0 round ${borderRadius})`}\n            rx={borderRadius}\n            {...commonSwatchProps}\n          />\n          <line clip-path=\"url(#shape)\" stroke-width=\"3\" x1=\"100%\" x2=\"0\" y1=\"0\" y2=\"100%\" />\n        </Fragment>\n      );\n    }\n\n    const alpha = internalColor.alpha();\n    const hex = hexify(internalColor);\n    const hexa = hexify(internalColor, alpha < 1);\n\n    return (\n      <Fragment>\n        <title>{hexa}</title>\n        <defs>\n          <pattern\n            height={CHECKER_DIMENSIONS.size}\n            id=\"checker\"\n            patternUnits=\"userSpaceOnUse\"\n            width={CHECKER_DIMENSIONS.size}\n            x=\"0\"\n            y=\"0\"\n          >\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x=\"0\"\n              y=\"0\"\n            />\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x={CHECKER_DIMENSIONS.squareSize}\n              y={CHECKER_DIMENSIONS.squareSize}\n            />\n          </pattern>\n        </defs>\n        <rect fill=\"url(#checker)\" height=\"100%\" rx={borderRadius} width=\"100%\" />\n        <rect\n          fill={hex}\n          style={{\n            \"clip-path\":\n              alpha < 1 ? \"polygon(100% 0, 0 0, 0 100%)\" : `inset(0 round ${borderRadius})`,\n          }}\n          {...commonSwatchProps}\n        />\n        {alpha < 1 ? (\n          <rect\n            fill={hexa}\n            key=\"opacity-fill\"\n            style={{ \"clip-path\": \"polygon(100% 0, 100% 100%, 0 100%)\" }}\n            {...commonSwatchProps}\n          />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["isArrayish", "swizzle", "colorNames", "clamp", "h", "cssKeywords", "convert", "color", "colorString", "models", "CSS", "DEFAULT_COLOR", "Color"]
}
