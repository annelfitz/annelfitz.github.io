import {
  s
} from "./chunk-QX66UTIR.js";
import {
  i
} from "./chunk-R4CJB3GP.js";
import {
  u2 as u
} from "./chunk-SBL4URUW.js";
import {
  S,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  k
} from "./chunk-J2EGIWT6.js";

// node_modules/@arcgis/core/analysis/Analysis.js
var l = 0;
var p = class extends u(i(s(S))) {
  constructor(e2) {
    super(e2), this.id = `${Date.now().toString(16)}-analysis-${l++}`, this.title = null;
  }
  get parent() {
    return this._get("parent");
  }
  set parent(e2) {
    const t = this.parent;
    if (null != t)
      switch (t.type) {
        case "line-of-sight":
        case "dimension":
          t.releaseAnalysis(this);
          break;
        case "2d":
        case "3d":
          t.analyses.includes(this) && t.analyses.remove(this);
      }
    this._set("parent", e2);
  }
  get isEditable() {
    return this.requiredPropertiesForEditing.every(k);
  }
};
e([y({ type: String, constructOnly: true, clonable: false })], p.prototype, "id", void 0), e([y({ type: String })], p.prototype, "title", void 0), e([y({ clonable: false, value: null })], p.prototype, "parent", null), e([y({ readOnly: true })], p.prototype, "isEditable", null), p = e([a("esri.analysis.Analysis")], p);
var c = p;

export {
  c
};
//# sourceMappingURL=chunk-XDDNM6BM.js.map
