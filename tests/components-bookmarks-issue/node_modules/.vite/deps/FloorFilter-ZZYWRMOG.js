import {
  n as n4,
  n2 as n5
} from "./chunk-IHPJVVBQ.js";
import {
  t
} from "./chunk-IKON42NH.js";
import {
  e as e5,
  n as n3
} from "./chunk-HLKM6YBE.js";
import {
  i
} from "./chunk-WK2KEW7P.js";
import {
  e as e4
} from "./chunk-EAAEPSBY.js";
import "./chunk-BYK4ZOU2.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-TGXFDJCS.js";
import {
  e as e3
} from "./chunk-6AQIVLDN.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import {
  D,
  e2
} from "./chunk-RGCWZ2KZ.js";
import {
  n as n2
} from "./chunk-5VMSFOCB.js";
import "./chunk-LGQXPGTM.js";
import {
  L,
  v
} from "./chunk-2SDMYJDE.js";
import "./chunk-TPLOIZC7.js";
import {
  s as s3
} from "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import {
  A,
  P,
  d as d2
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import {
  d
} from "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  S,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  s as s2
} from "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import {
  n
} from "./chunk-L65HKN25.js";
import {
  s
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-MDRC3XUT.js";
import "./chunk-NCF6OYL5.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/widgets/FloorFilter/css.js
var e6 = "esri-floor-filter";
var t2 = `${e6}__filter-menu`;
var o = { floorFilter: e6, floorFilterLayout: `${e6}__layout--`, floorFilterPosition: `${e6}__position--`, buttonContainer: `${e6}__button-container`, buttonContainerLevels: `${e6}__button-container--levels`, buttonInfo: `${e6}__button-info`, buttonLabel: `${e6}__button-label`, browseButton: `${e6}__browse-button`, closeLevelsButton: `${e6}__close-levels-button`, zoomButton: `${e6}__zoom-button`, zoomButtonLevels: `${e6}__zoom-button--levels`, minimizeToggleButton: `${e6}__minimize-toggle-button`, levelsContainer: `${e6}__levels-container`, levelButton: `${e6}__level-button`, levelButtonActive: `${e6}__level-button--active`, separator: `${e6}__separator`, filterMenu: t2, filterMenuHeader: `${t2}-header`, filterMenuHeaderTextGroup: `${t2}-header-text-group`, filterMenuHeaderText: `${t2}-header-text`, filterMenuHeaderSubtext: `${t2}-header-subtext`, filterMenuHeaderBack: `${t2}-header-back`, filterMenuSearch: `${t2}-search`, filterMenuSearchInput: `${t2}-search-input`, filterMenuItems: `${t2}-items`, filterMenuItemName: `${t2}-item-name`, filterMenuSelectedItem: `${t2}-item-name--selected`, filterMenuSite: `${t2}-site`, filterMenuFacility: `${t2}-facility`, selectedItemCircle: `${e6}__selected-item-circle` };

// node_modules/@arcgis/core/widgets/FloorFilter/FloorFilterViewModel.js
function v2(e7) {
  return "esri.WebScene" === e7.declaredClass;
}
var m = class extends t(S) {
  constructor(e7) {
    super(e7), this.filterMenuOpen = false, this.filterMenuType = "site", this.filterMode = "base-floors", this.levelsExpanded = true, this.searchTerm = null, this.view = null, this._updateFloorFilterTask = null, this._viewHeightBreakpoint = null, this._viewWidthBreakpoint = null;
  }
  initialize() {
    this.addHandles([d2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.map;
    }, (e7) => {
      null != this._updateFloorFilterTask && (this._updateFloorFilterTask.abort(), this._updateFloorFilterTask = null), this._updateFloorFilterTask = d(async (t3) => {
        await this._updateFloorFilterFromMap(e7), s2(t3), this._setInitialViewState(e7);
      });
    }, P), d2(() => this.view, (e7, t3) => {
      this._unregisterWidget(t3), this._registerWidget(e7), this._watchSearchResults(e7);
    }, A), d2(() => {
      var _a;
      return ((_a = this.view) == null ? void 0 : _a.widthBreakpoint) ?? null;
    }, (e7) => {
      this._viewWidthBreakpoint = e7;
    }), d2(() => {
      var _a;
      return ((_a = this.view) == null ? void 0 : _a.heightBreakpoint) ?? null;
    }, (e7) => {
      this._viewHeightBreakpoint = e7;
    })]);
  }
  destroy() {
    this._unregisterWidget(this.view), this.view = null, null != this._updateFloorFilterTask && (this._updateFloorFilterTask.abort(), this._updateFloorFilterTask = null);
  }
  set enabled(e7) {
    this._callOverride("enabled", e7);
  }
  set facility(e7) {
    if (e7 && this._isOverridden("facility")) {
      const t3 = this.getFacility(e7);
      this.hasMultipleSites && (this.site = (t3 == null ? void 0 : t3.siteId) || null);
    }
    this._callOverride("facility", e7);
  }
  set filterFeatures(e7) {
    this._callOverride("filterFeatures", e7);
  }
  set filterLayers(e7) {
    this._callOverride("filterLayers", e7);
  }
  get hasFacilities() {
    var _a, _b, _c, _d;
    return null != ((_a = this.filterLayers) == null ? void 0 : _a.facilityLayer) && ((_d = (_c = (_b = this.filterFeatures) == null ? void 0 : _b.facilities) == null ? void 0 : _c.facilitiesInfo) == null ? void 0 : _d.length) > 0;
  }
  get hasLevels() {
    var _a, _b, _c, _d;
    return null != ((_a = this.filterLayers) == null ? void 0 : _a.levelLayer) && ((_d = (_c = (_b = this.filterFeatures) == null ? void 0 : _b.levels) == null ? void 0 : _c.levelsInfo) == null ? void 0 : _d.length) > 0;
  }
  get hasMultipleSites() {
    var _a, _b, _c, _d;
    return null != ((_a = this.filterLayers) == null ? void 0 : _a.siteLayer) && ((_d = (_c = (_b = this.filterFeatures) == null ? void 0 : _b.sites) == null ? void 0 : _c.sitesInfo) == null ? void 0 : _d.length) > 1;
  }
  get isNormalMode() {
    let e7 = true;
    const t3 = this._viewWidthBreakpoint;
    return "xsmall" !== this._viewHeightBreakpoint && "xsmall" !== t3 || (e7 = false), e7;
  }
  set level(e7) {
    var _a;
    if (!e7)
      return this._callOverride("level", e7), this.facility = null, this.site = null, void this.setFloors(null);
    let t3 = null, i2 = null;
    const s4 = e7 == null ? void 0 : e7.split("--");
    if ((s4 == null ? void 0 : s4.length) > 1 && "all" === s4[0] ? (i2 = s4[1], t3 = { id: e7, facilityId: i2, shortName: null, longName: null, levelNumber: null, verticalOrder: null }) : (t3 = this.getLevel(e7), i2 = (t3 == null ? void 0 : t3.facilityId) ?? null), this.level !== e7 || this.isNormalMode || this.levelsExpanded)
      t3 && this.hasFacilities && this.hasLevels ? (this.facility = i2, this.hasMultipleSites && (this.site = ((_a = this.getFacility(i2)) == null ? void 0 : _a.siteId) || null), this.setFloors(t3)) : this._isOverridden("level") && (this.facility = null, this.site = null, this.hasMultipleSites && (this.filterMenuType = "site"), this.setFloors(null)), this._callOverride("level", e7);
    else {
      const e8 = this.getFacilityLevels(i2);
      (e8 == null ? void 0 : e8.length) > 1 && (this.levelsExpanded = true);
    }
  }
  set longNames(e7) {
    this._callOverride("longNames", e7);
  }
  set minimized(e7) {
    this._callOverride("minimized", e7);
  }
  set pinnedLevels(e7) {
    this._callOverride("pinnedLevels", e7);
  }
  set site(e7) {
    this._callOverride("site", e7);
  }
  get state() {
    return this.view && this.filterFeatures && this.hasFacilities && this.hasLevels ? "ready" : this.view && !this.filterFeatures ? "loading" : "disabled";
  }
  filterFacilities(e7) {
    let t3 = e7;
    this.searchTerm && (this.searchTerm = this.searchTerm.trim(), t3 = e7.filter((e8) => {
      var _a;
      const { name: t4 } = e8;
      return t4.toLowerCase().includes((_a = this.searchTerm) == null ? void 0 : _a.toLowerCase());
    })), this.site && (t3 = t3.filter((e8) => e8.siteId === this.site));
    return t3.sort((e8, t4) => {
      const i2 = e8.name, s4 = t4.name;
      return i2.localeCompare(s4, void 0, { sensitivity: "base" });
    });
  }
  filterSites(e7) {
    let t3 = e7;
    this.searchTerm && (this.searchTerm = this.searchTerm.trim(), t3 = e7.filter((e8) => {
      var _a;
      const { name: t4 } = e8;
      return t4.toLowerCase().includes((_a = this.searchTerm) == null ? void 0 : _a.toLowerCase());
    }));
    return t3.sort((e8, t4) => {
      const i2 = e8.name, s4 = t4.name;
      return i2.localeCompare(s4, void 0, { sensitivity: "base" });
    });
  }
  getBaseLevel(e7) {
    var _a, _b;
    const t3 = (_b = (_a = this.filterFeatures) == null ? void 0 : _a.levels) == null ? void 0 : _b.levelsInfo;
    let i2 = null;
    if (e7) {
      const { id: s4 } = e7;
      if (t3 && t3.length > 0 && (t3.forEach((e8) => {
        0 === e8.verticalOrder && e8.facilityId === s4 && (i2 = e8);
      }), !i2)) {
        let e8 = null;
        t3.forEach((t4) => {
          t4.facilityId === s4 && (e8 ? (t4.verticalOrder ?? 0) >= 0 ? null != e8.verticalOrder && (e8.verticalOrder < 0 || (t4.verticalOrder ?? 0) < e8.verticalOrder) && (e8 = t4) : null != e8.verticalOrder && null != t4.verticalOrder && e8.verticalOrder < 0 && t4.verticalOrder > e8.verticalOrder && (e8 = t4) : e8 = t4);
        }), e8 && (i2 = e8);
      }
    }
    return i2;
  }
  getFacility(e7) {
    var _a, _b, _c;
    return ((_c = (_b = (_a = this.filterFeatures) == null ? void 0 : _a.facilities) == null ? void 0 : _b.facilitiesInfo) == null ? void 0 : _c.find((t3) => t3.id === e7)) ?? null;
  }
  getFacilityLevels(e7) {
    var _a, _b;
    if (!e7 || !((_b = (_a = this.filterFeatures) == null ? void 0 : _a.levels) == null ? void 0 : _b.levelsInfo))
      return [];
    return this.filterFeatures.levels.levelsInfo.filter((t3) => t3.facilityId === e7).sort((e8, t3) => {
      const i2 = e8.verticalOrder ?? 0, s4 = t3.verticalOrder ?? 0;
      return i2 > s4 ? -1 : i2 === s4 ? 0 : 1;
    });
  }
  getLevel(e7) {
    var _a, _b, _c;
    return ((_c = (_b = (_a = this.filterFeatures) == null ? void 0 : _a.levels) == null ? void 0 : _b.levelsInfo) == null ? void 0 : _c.find((t3) => t3.id === e7)) ?? null;
  }
  getSite(e7) {
    var _a, _b, _c;
    return ((_c = (_b = (_a = this.filterFeatures) == null ? void 0 : _a.sites) == null ? void 0 : _b.sitesInfo) == null ? void 0 : _c.find((t3) => t3.id === e7)) ?? null;
  }
  goTo(e7) {
    const { view: t3 } = this;
    if (!t3 || !e7)
      return;
    const { geometry: i2 } = e7;
    i2 && i2.extent && this.callGoTo({ target: i2.extent, options: { duration: n(1e3), easing: "in-out-quad" } });
  }
  setFloors(e7) {
    var _a, _b;
    const { view: t3 } = this;
    t3 && ((_b = (_a = t3 == null ? void 0 : t3.map) == null ? void 0 : _a.allLayers) == null ? void 0 : _b.forEach((e8) => {
      "feature" === e8.type && this._computeViewAllModeFloors(e8);
    }), t3.floors = new V(this._computeFloors(e7)));
  }
  updateWebDocument(e7) {
    if (e3(e7)) {
      const t3 = new n4({ enabled: this.enabled, longNames: this.longNames, minimized: this.minimized, pinnedLevels: this.pinnedLevels, site: this.site ?? null, facility: this.facility ?? null, level: this.level ?? null });
      e7.widgets ? e7.widgets.floorFilter = t3 : e7.widgets = new n5({ floorFilter: t3 });
    }
  }
  _computeFloors(e7) {
    var _a;
    if ("single-floor" === this.filterMode)
      this._computeSingleFloor(e7);
    else if ("base-floors" === this.filterMode)
      return "3d" === ((_a = this.view) == null ? void 0 : _a.type) ? this._computeBaseFloors3D(e7) : this._computeBaseFloors(e7);
    return this._computeEmptyFloors();
  }
  _computeSingleFloor(e7) {
    if (!e7)
      return this._computeEmptyFloors();
    const t3 = [];
    if ("all" === (e7 == null ? void 0 : e7.id)) {
      this.getFacilityLevels(e7.facilityId).forEach((e8) => {
        e8.id && t3.push(e8.id);
      });
    } else
      e7 && t3.push(e7.id);
    return t3;
  }
  _computeBaseFloors(e7) {
    var _a, _b;
    const t3 = (_b = (_a = this.filterFeatures) == null ? void 0 : _a.levels) == null ? void 0 : _b.levelsInfo;
    if (!(t3 == null ? void 0 : t3.length))
      return this._computeEmptyFloors();
    const i2 = [];
    if ("all" === (e7 == null ? void 0 : e7.id)) {
      this.getFacilityLevels(e7.facilityId).forEach((e8) => {
        e8.id && i2.push(e8.id);
      });
    } else
      e7 && i2.push(e7.id);
    const s4 = e7 == null ? void 0 : e7.facilityId;
    return t3.forEach((e8) => {
      const { id: t4, facilityId: l, verticalOrder: r } = e8;
      (s4 || 0 !== r || i2.includes(t4)) && (l === s4 || 0 !== r || i2.includes(t4)) || i2.push(t4);
    }), i2;
  }
  _computeBaseFloors3D(e7) {
    var _a, _b;
    const t3 = (_b = (_a = this.filterFeatures) == null ? void 0 : _a.levels) == null ? void 0 : _b.levelsInfo;
    if (!(t3 == null ? void 0 : t3.length))
      return this._computeEmptyFloors();
    const i2 = [], s4 = (e7 == null ? void 0 : e7.id.split("--")) ?? [];
    if ((s4 == null ? void 0 : s4.length) > 1 && "all" === s4[0]) {
      this.getFacilityLevels(e7 == null ? void 0 : e7.facilityId).forEach((e8) => {
        e8.id && i2.push(e8.id);
      });
    } else
      e7 && i2.push(e7.id);
    const l = e7 == null ? void 0 : e7.facilityId;
    return t3.forEach((e8) => {
      const { id: t4, facilityId: s5 } = e8;
      (l || i2.includes(t4)) && (s5 === l || i2.includes(t4)) || i2.push(t4);
    }), i2;
  }
  _computeEmptyFloors() {
    return [];
  }
  async _setFilterLayers() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s;
    const { view: e7 } = this;
    if (e7 && !this._isOverridden("filterLayers")) {
      if (!e3(e7.map) && !v2(e7.map))
        throw new s("Map must be a webmap or webscene");
      {
        const t3 = e7.map, i2 = t3 == null ? void 0 : t3.allLayers;
        if (((_a = i2 == null ? void 0 : i2.items) == null ? void 0 : _a.length) > 0) {
          const e8 = { siteLayer: null, facilityLayer: null, levelLayer: null }, s4 = (_c = (_b = t3.floorInfo) == null ? void 0 : _b.siteLayer) == null ? void 0 : _c.layerId, l = (_e = (_d = t3.floorInfo) == null ? void 0 : _d.facilityLayer) == null ? void 0 : _e.layerId, r = (_g = (_f = t3.floorInfo) == null ? void 0 : _f.levelLayer) == null ? void 0 : _g.layerId, o2 = ((_i = (_h = t3.floorInfo) == null ? void 0 : _h.siteLayer) == null ? void 0 : _i.sublayerId) || ((_k = (_j = t3.floorInfo) == null ? void 0 : _j.facilityLayer) == null ? void 0 : _k.sublayerId) || ((_m = (_l = t3.floorInfo) == null ? void 0 : _l.levelLayer) == null ? void 0 : _m.sublayerId);
          if (!l || !r)
            return;
          const a2 = i2.items.filter((e9) => "feature" === e9.type || "scene" === e9.type), n6 = i2.items.filter((e9) => "map-image" === e9.type);
          if ((n6 == null ? void 0 : n6.length) > 0 && o2) {
            await Promise.all(n6.map((e9) => e9.load()));
            const i3 = (_o = (_n = t3.floorInfo) == null ? void 0 : _n.siteLayer) == null ? void 0 : _o.sublayerId, o3 = (_q = (_p = t3.floorInfo) == null ? void 0 : _p.facilityLayer) == null ? void 0 : _q.sublayerId, a3 = (_s = (_r = t3.floorInfo) == null ? void 0 : _r.levelLayer) == null ? void 0 : _s.sublayerId;
            n6.forEach((t4) => {
              const n7 = t4.id, h = t4 == null ? void 0 : t4.allSublayers, d3 = h == null ? void 0 : h.items;
              (n7 === s4 || n7 === l || n7 === r) && (d3 == null ? void 0 : d3.length) > 0 && h.items.forEach((t5) => {
                const l2 = t5.id;
                n7 === s4 && l2 === i3 ? e8.siteLayer = t5 : l2 === o3 ? e8.facilityLayer = t5 : l2 === a3 && (e8.levelLayer = t5);
              });
            });
          }
          (a2 == null ? void 0 : a2.length) > 0 && a2.forEach((t4) => {
            const i3 = t4.id;
            i3 === s4 ? e8.siteLayer = t4 : i3 === l ? e8.facilityLayer = t4 : i3 === r && (e8.levelLayer = t4);
          }), this.filterLayers = e8;
        }
      }
    }
  }
  async _getFilterFeatures() {
    if (this._isOverridden("filterFeatures"))
      return this.filterFeatures;
    const [e7, t3, i2] = await Promise.all([this._getSites(), this._getFacilities(), this._getLevels()]);
    return { sites: e7, facilities: t3, levels: i2 };
  }
  async _getSites() {
    var _a, _b, _c, _d;
    const e7 = { sitesInfo: [] }, { filterLayers: t3, view: i2 } = this, s4 = i2 == null ? void 0 : i2.map, { siteLayer: l } = t3;
    if (!l || !((_a = s4 == null ? void 0 : s4.floorInfo) == null ? void 0 : _a.siteLayer))
      return e7;
    const r = l.createQuery();
    r.returnGeometry = true, r.outFields = ["*"], r.returnZ = true, "type" in l && "scene" === l.type && (r.multipatchOption = "xyFootprint");
    const { siteIdField: o2, nameField: a2 } = s4.floorInfo.siteLayer, n6 = await l.queryFeatures(r);
    if (((_b = n6 == null ? void 0 : n6.features) == null ? void 0 : _b.length) > 0) {
      const t4 = n6.features, i3 = ((_c = l == null ? void 0 : l.fieldsIndex.get(o2)) == null ? void 0 : _c.name) || o2, s5 = ((_d = l == null ? void 0 : l.fieldsIndex.get(a2)) == null ? void 0 : _d.name) || a2;
      null != i3 && null != s5 && t4.forEach((t5) => {
        const l2 = t5.attributes, r2 = t5.geometry, o3 = l2[i3], a3 = l2[s5];
        o3 && a3 && e7.sitesInfo.push({ id: o3, name: a3, geometry: r2 });
      });
    }
    return e7;
  }
  async _getFacilities() {
    var _a, _b, _c, _d, _e;
    const { filterLayers: e7, view: t3 } = this, i2 = t3 == null ? void 0 : t3.map, { facilityLayer: s4 } = e7, l = { facilitiesInfo: [] };
    if (!s4 || !((_a = i2 == null ? void 0 : i2.floorInfo) == null ? void 0 : _a.facilityLayer))
      return l;
    const r = s4.createQuery();
    r.returnGeometry = true, r.outFields = ["*"], r.returnZ = true, "type" in s4 && "scene" === s4.type && (r.multipatchOption = "xyFootprint");
    const { facilityIdField: o2, siteIdField: a2, nameField: n6 } = i2.floorInfo.facilityLayer, h = await s4.queryFeatures(r);
    if (((_b = h == null ? void 0 : h.features) == null ? void 0 : _b.length) > 0) {
      const e8 = h.features, t4 = ((_c = s4 == null ? void 0 : s4.fieldsIndex.get(o2)) == null ? void 0 : _c.name) || o2, i3 = ((_d = s4 == null ? void 0 : s4.fieldsIndex.get(a2)) == null ? void 0 : _d.name) || a2, r2 = ((_e = s4 == null ? void 0 : s4.fieldsIndex.get(n6)) == null ? void 0 : _e.name) || n6;
      t4 && i3 && r2 && e8.forEach((e9) => {
        const s5 = e9.attributes, o3 = e9.geometry, a3 = s5[t4], n7 = s5[i3], h2 = s5[r2];
        a3 && h2 && l.facilitiesInfo.push({ id: a3, siteId: n7, name: h2, geometry: o3 });
      });
    }
    return l;
  }
  async _getLevels() {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const { filterLayers: e7, view: t3 } = this, i2 = t3 == null ? void 0 : t3.map, { levelLayer: s4 } = e7, l = { levelsInfo: [] };
    if (!s4 || !((_a = i2 == null ? void 0 : i2.floorInfo) == null ? void 0 : _a.levelLayer))
      return l;
    const r = s4.createQuery();
    r.returnGeometry = true, r.outFields = ["*"], r.returnZ = true;
    const { levelIdField: o2, facilityIdField: a2, longNameField: n6, shortNameField: h, levelNumberField: d3, verticalOrderField: c } = i2.floorInfo.levelLayer, u = await s4.queryFeatures(r);
    if (((_b = u == null ? void 0 : u.features) == null ? void 0 : _b.length) > 0) {
      const e8 = u.features, t4 = ((_c = s4 == null ? void 0 : s4.fieldsIndex.get(o2)) == null ? void 0 : _c.name) || o2, i3 = ((_d = s4 == null ? void 0 : s4.fieldsIndex.get(a2)) == null ? void 0 : _d.name) || a2, r2 = ((_e = s4 == null ? void 0 : s4.fieldsIndex.get(n6)) == null ? void 0 : _e.name) || n6, f2 = ((_f = s4 == null ? void 0 : s4.fieldsIndex.get(h)) == null ? void 0 : _f.name) || h, y2 = ((_g = s4 == null ? void 0 : s4.fieldsIndex.get(d3)) == null ? void 0 : _g.name) || d3, p = ((_h = s4 == null ? void 0 : s4.fieldsIndex.get(c)) == null ? void 0 : _h.name) || c;
      t4 && i3 && r2 && f2 && y2 && p && e8.forEach((e9) => {
        const s5 = e9.attributes, o3 = s5[t4], a3 = s5[i3], n7 = s5[r2], h2 = s5[f2], d4 = s5[y2], c2 = s5[p];
        o3 && a3 && n7 && h2 && "number" == typeof d4 && "number" == typeof c2 && l.levelsInfo.push({ id: o3, facilityId: a3, longName: n7, shortName: h2, levelNumber: d4, verticalOrder: c2 });
      });
    }
    return l;
  }
  _registerWidget(e7) {
    const t3 = e7 == null ? void 0 : e7.persistableViewModels.includes(this);
    t3 || (e7 == null ? void 0 : e7.persistableViewModels.add(this));
  }
  _unregisterWidget(e7) {
    e7 == null ? void 0 : e7.persistableViewModels.remove(this);
  }
  _watchSearchResults(e7) {
    e7 == null ? void 0 : e7.on("select-result-floor", (e8) => {
      const t3 = this.getLevel(e8);
      t3 && this.level !== e8 && (this.level = e8, this.setFloors(t3));
    });
  }
  async _setInitialViewState(e7) {
    var _a;
    if (this.view)
      try {
        await this.view.when(), await this._setFilterLayers();
        const t3 = await this._getFilterFeatures();
        if (!t3)
          return;
        if (this.filterFeatures = t3, !this.hasFacilities || !this.hasLevels)
          return void console.error("Facilities and Levels are required for the Floor Filter widget");
        if (this.hasMultipleSites || (this.filterMenuType = "facility"), this.facility && this.level) {
          this.filterMenuType = "facility";
          const e8 = this.getFacility(this.facility), t4 = this.getLevel(this.level);
          this.site || (this.site = (e8 == null ? void 0 : e8.siteId) || void 0), this.setFloors(t4);
        } else if (this.facility && !this.level) {
          this.filterMenuType = "facility";
          const e8 = this.getFacility(this.facility), t4 = this.getBaseLevel(e8);
          this.site || (this.site = (e8 == null ? void 0 : e8.siteId) || void 0), this.level = (t4 == null ? void 0 : t4.id) || void 0, this.setFloors(t4);
        } else if (!this.facility && this.level) {
          this.filterMenuType = "facility";
          const e8 = this.getLevel(this.level), t4 = this.getFacility(e8 == null ? void 0 : e8.facilityId);
          this.facility = (t4 == null ? void 0 : t4.id) || void 0, this.site || (this.site = (t4 == null ? void 0 : t4.siteId) || void 0), this.setFloors(e8);
        } else if (!this.site || this.facility || this.level) {
          if (!e7 || !e3(e7))
            return void this.setFloors(null);
          const t4 = (_a = e7 == null ? void 0 : e7.widgets) == null ? void 0 : _a.floorFilter;
          if (!t4)
            return void this.setFloors(null);
          t4.site && !this.site && (this.site = t4.site, this.filterMenuType = "facility"), this.setFloors(null);
        } else
          this.filterMenuType = "site", this.setFloors(null);
      } catch (t3) {
        console.error("Couldn't retrieve sites, facilities, and levels", t3);
      }
  }
  _callOverride(e7, t3) {
    this._override(e7, t3);
  }
  async _updateFloorFilterFromMap(e7) {
    var _a;
    if (!e7 || !e3(e7))
      return;
    const t3 = (_a = e7 == null ? void 0 : e7.widgets) == null ? void 0 : _a.floorFilter;
    t3 && (this._isOverridden("enabled") || (this.enabled = t3.enabled), this._isOverridden("longNames") || (this.longNames = t3.longNames), this._isOverridden("minimized") || (this.minimized = t3.minimized), this._isOverridden("pinnedLevels") || (this.pinnedLevels = t3.pinnedLevels), this._isOverridden("site") || (this.site = t3.site), this._isOverridden("facility") || (this.facility = t3.facility), this._isOverridden("level") || (this.level = t3.level));
  }
  _computeViewAllModeFloors(e7) {
    var _a;
    const { filterFeatures: t3 } = this;
    if (((_a = e7.floorInfo) == null ? void 0 : _a.viewAllMode) && this.hasLevels && this.hasFacilities && "base-floors" === this.filterMode) {
      const { level: i2, facility: l } = this, r = [];
      t3.levels.levelsInfo.forEach((e8) => {
        const { id: t4, facilityId: s4 } = e8;
        l && s4 === l ? i2 && t4 === i2 && r.push(t4) : r.push(t4);
      }), e7.floorInfo.viewAllLevelIds = new V(r);
    }
  }
};
e([y({ value: false })], m.prototype, "enabled", null), e([y({ value: void 0 })], m.prototype, "facility", null), e([y({ value: null })], m.prototype, "filterFeatures", null), e([y({ value: null })], m.prototype, "filterLayers", null), e([y()], m.prototype, "filterMenuOpen", void 0), e([y()], m.prototype, "filterMenuType", void 0), e([y()], m.prototype, "filterMode", void 0), e([y()], m.prototype, "hasFacilities", null), e([y()], m.prototype, "hasLevels", null), e([y()], m.prototype, "hasMultipleSites", null), e([y({ readOnly: true })], m.prototype, "isNormalMode", null), e([y({ value: void 0 })], m.prototype, "level", null), e([y({ value: false })], m.prototype, "longNames", null), e([y()], m.prototype, "levelsExpanded", void 0), e([y({ value: false })], m.prototype, "minimized", null), e([y({ value: false })], m.prototype, "pinnedLevels", null), e([y()], m.prototype, "searchTerm", void 0), e([y({ value: void 0 })], m.prototype, "site", null), e([y({ readOnly: true })], m.prototype, "state", null), e([y()], m.prototype, "view", void 0), e([y()], m.prototype, "_viewHeightBreakpoint", void 0), e([y()], m.prototype, "_viewWidthBreakpoint", void 0), e([y()], m.prototype, "updateWebDocument", null), m = e([a("esri.widgets.FloorFilter.FloorFilterViewModel")], m);
var F = m;

// node_modules/@arcgis/core/widgets/FloorFilter.js
var M = /* @__PURE__ */ new Set(["ArrowUp", "ArrowDown", "End", "Home"]);
var g = class extends D {
  constructor(e7, s4) {
    super(e7, s4), this._activeMenu = null, this._activeMenuIndex = { levels: -1, menuItems: -1 }, this._baseNode = null, this._facilitiesListNode = null, this._levelsListNode = null, this._sitesListNode = null, this._searchInput = null, this.viewModel = new F(), this.messages = null, this.messagesCommon = null, this.headingLevel = 2, this._resizeObserver = new ResizeObserver(() => this.scheduleRender()), this.addHandles(d2(() => this._searchInput, () => this._focusSearch()));
  }
  destroy() {
    var _a;
    (_a = this._resizeObserver) == null ? void 0 : _a.disconnect();
  }
  get enabled() {
    return this.viewModel.enabled;
  }
  set enabled(e7) {
    this.viewModel.enabled = e7;
  }
  get longNames() {
    return this.viewModel.longNames;
  }
  set longNames(e7) {
    this.viewModel.longNames = e7;
  }
  get minimized() {
    return this.viewModel.minimized;
  }
  set minimized(e7) {
    this.viewModel.minimized = e7;
  }
  get pinnedLevels() {
    return this.viewModel.pinnedLevels;
  }
  set pinnedLevels(e7) {
    this.viewModel.pinnedLevels = e7;
  }
  get site() {
    return this.viewModel.site;
  }
  set site(e7) {
    this.viewModel.site = e7;
  }
  get facility() {
    return this.viewModel.facility;
  }
  set facility(e7) {
    this.viewModel.facility = e7;
  }
  get level() {
    return this.viewModel.level;
  }
  set level(e7) {
    this.viewModel.level = e7;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e7) {
    this.viewModel.view = e7;
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e7) {
    this.viewModel.goToOverride = e7;
  }
  get icon() {
    return "floor-plan";
  }
  set icon(e7) {
    this._overrideIfSome("icon", e7);
  }
  updateWebDocument(e7) {
    return this.viewModel.updateWebDocument(e7);
  }
  render() {
    var _a;
    const { longNames: e7 } = this, t3 = e7 && this.viewModel.isNormalMode ? "expanded" : "collapsed", s4 = this._renderButtons(), i2 = this._renderFilterMenu(), l = n2("div", { class: this.classes(o.separator) }), n6 = this._getComponentPosition(), a2 = this._getPosition(n6), c = "top-right" === n6 || "bottom-right" === n6, d3 = "top-left" === n6 || "bottom-left" === n6, u = v(this.container), v3 = u && d3 || !u && c ? i2 : s4, p = u && d3 || !u && c ? s4 : i2;
    return n2("div", { afterCreate: this._afterBaseNodeCreate, class: this.classes(o.floorFilter, e4.widget, `${o.floorFilterLayout}${t3}`, `${o.floorFilterPosition}${a2}`), key: "floor-filter-menu" }, v3, ((_a = this.viewModel) == null ? void 0 : _a.filterMenuOpen) ? l : null, p);
  }
  _renderButtons() {
    const e7 = this._getComponentPosition(), t3 = [];
    return "top" === this._getPosition(e7) ? (t3.push(this._renderBrowseButton()), t3.push(this._renderLevelButtons()), t3.push(this._renderCloseLevelsButton()), t3.push(this._renderZoomButton()), t3.push(this._renderCollapseToggleButton())) : (t3.push(this._renderCollapseToggleButton()), t3.push(this._renderZoomButton()), t3.push(this._renderCloseLevelsButton()), t3.push(this._renderLevelButtons()), t3.push(this._renderBrowseButton())), n2("div", { class: this.classes(e4.widget, o.buttonContainer), key: "button-container" }, t3);
  }
  _renderBrowseButton() {
    var _a;
    const { longNames: e7, messages: t3 } = this;
    return n2("button", { "aria-expanded": this.viewModel.filterMenuOpen.toString(), "aria-label": t3.buttons.browse, bind: this, class: this.classes(e4.widget, e4.widgetButton, e4.interactive, ("loading" === this.viewModel.state || "disabled" === this.viewModel.state) && e4.buttonDisabled, o.browseButton, ((_a = this.viewModel) == null ? void 0 : _a.filterMenuOpen) && e4.widgetButtonActive), key: "browse-button", onclick: this._toggleFilterMenu, title: t3.buttons.browse, type: "button" }, n2("div", { class: this.classes(o.buttonInfo) }, n2("span", { class: this.classes(i.icon, i.urbanModel) }), n2("span", { class: this.classes(o.buttonLabel) }, e7 && this.viewModel.isNormalMode ? t3.buttons.browse : null)));
  }
  _renderLevelButtons() {
    var _a, _b, _c, _d, _e, _f;
    if (!((_c = (_b = (_a = this.viewModel) == null ? void 0 : _a.filterFeatures) == null ? void 0 : _b.levels) == null ? void 0 : _c.levelsInfo) || !this.facility)
      return null;
    const { facility: e7, messagesCommon: t3, messages: s4 } = this, i2 = (_d = this.viewModel) == null ? void 0 : _d.getFacility(e7), l = (_e = this.viewModel) == null ? void 0 : _e.getFacilityLevels(e7), n6 = l.map((e8) => this._renderLevelButton(e8));
    if (!n6.length)
      return null;
    const r = i2 && s3(s4.selector.levelsLabel, { name: `"${i2.name}"` });
    if (this._isWebScene((_f = this.view) == null ? void 0 : _f.map) && (n6 == null ? void 0 : n6.length) > 1) {
      const s5 = { id: `all--${e7}`, facilityId: e7, shortName: t3.all, longName: t3.all, levelNumber: null, verticalOrder: null }, i3 = this._renderLevelButton(s5);
      n6.push(i3);
    }
    return n2("ul", { afterCreate: L, "aria-label": r, bind: this, class: this.classes(o.levelsContainer), "data-id": "levels", "data-node-ref": "_levelsListNode", key: "levels-button-container", onkeydown: this._handleListKeydown }, n6);
  }
  _renderLevelButton(e7) {
    const { longNames: t3 } = this, { shortName: s4, longName: i2, id: l } = e7, n6 = `levels--${l}`, a2 = this.level === l, c = t3 && this.viewModel.isNormalMode ? i2 : s4;
    return this.viewModel.isNormalMode || a2 || this.viewModel.levelsExpanded ? n2("li", { key: n6 }, n2("button", { bind: this, class: this.classes(e4.widgetButton, a2 ? e4.widgetButtonActive : null, e4.interactive, o.levelButton), "data-id": l, "data-list-id": "levels", onclick: this._levelSelected, onfocus: this._onItemFocus, type: "button" }, c)) : null;
  }
  _renderCloseLevelsButton() {
    if (!this.level || this.viewModel.isNormalMode || !this.viewModel.levelsExpanded)
      return null;
    const { messagesCommon: e7 } = this;
    return n2("button", { "aria-label": e7.close, bind: this, class: this.classes(e4.widget, e4.widgetButton, e4.interactive, o.closeLevelsButton), key: "close-levels-button", onclick: this._closeLevels, title: e7.close, type: "button" }, n2("div", { class: this.classes(o.buttonInfo) }, n2("span", { class: this.classes(i.icon, i.close) })));
  }
  _renderZoomButton() {
    var _a, _b, _c, _d, _e;
    const { longNames: e7, messages: t3, facility: s4, site: i2 } = this, l = (_a = this.viewModel) == null ? void 0 : _a.filterMenuType, n6 = (_b = this.viewModel) == null ? void 0 : _b.filterMenuOpen, a2 = (_c = this.viewModel) == null ? void 0 : _c.getSite(i2), c = (_d = this.viewModel) == null ? void 0 : _d.getFacility(s4), h = "site" === l && n6 ? !a2 : !c;
    return n2("button", { "aria-label": t3.buttons.zoomTo, bind: this, class: this.classes(e4.widget, e4.widgetButton, h && e4.buttonDisabled, e4.interactive, ((_e = this.viewModel) == null ? void 0 : _e.getFacilityLevels(s4).length) > 0 ? o.zoomButtonLevels : o.zoomButton), key: "zoom-button", onclick: this._zoomToClicked, title: t3.buttons.zoomTo, type: "button" }, n2("div", { class: this.classes(o.buttonInfo) }, n2("span", { class: this.classes(i.icon, i.zoomToObject) }), n2("span", { class: this.classes(o.buttonLabel) }, e7 && this.viewModel.isNormalMode ? t3.buttons.zoomTo : null)));
  }
  _renderCollapseToggleButton() {
    const { longNames: e7, messagesCommon: t3 } = this, s4 = e7 ? i.collapse : i.expand, i2 = this.classes(i.icon, s4), l = e7 ? t3.collapse : t3.expand;
    return n2("button", { "aria-label": l, bind: this, class: this.classes(e4.widget, e4.widgetButton, e4.interactive, o.minimizeToggleButton), key: "minimize-toggle-button", onclick: this._toggleCollapsed, title: l, type: "button" }, n2("div", { class: this.classes(o.buttonInfo) }, n2("span", { class: i2 }), n2("span", { class: this.classes(o.buttonLabel) }, e7 && this.viewModel.isNormalMode ? t3.collapse : null)));
  }
  _renderFilterMenu() {
    var _a, _b, _c;
    return ((_a = this.viewModel) == null ? void 0 : _a.filterMenuOpen) ? "site" === ((_b = this.viewModel) == null ? void 0 : _b.filterMenuType) ? this._renderSiteFilterMenu() : "facility" === ((_c = this.viewModel) == null ? void 0 : _c.filterMenuType) ? this._renderFacilityFilterMenu() : null : null;
  }
  _renderSiteFilterMenu() {
    var _a, _b;
    const { messages: e7, messagesCommon: t3 } = this, s4 = this.site ? (_b = (_a = this.viewModel) == null ? void 0 : _a.getSite(this.site)) == null ? void 0 : _b.name : e7.selector.selectSite, i2 = n2("div", { class: this.classes(`${o.filterMenuHeader}`), key: "filter-menu-site-header" }, n2("div", { class: this.classes(o.filterMenuHeaderTextGroup) }, n2(e5, { class: this.classes(o.filterMenuHeaderText), level: this.headingLevel }, s4)), n2("button", { bind: this, class: this.classes(i.icon, i.close), onclick: this._closeClicked, title: t3.close, type: "button" })), l = this._renderSearchInput(), n6 = this._renderSiteItems();
    return n2("div", { class: this.classes(o.filterMenu), key: "filter-menu-site" }, i2, l, n6);
  }
  _renderFacilityFilterMenu() {
    var _a, _b, _c, _d;
    const { messages: e7, messagesCommon: t3, site: s4 } = this, i2 = (_b = (_a = this.viewModel) == null ? void 0 : _a.getSite(s4)) == null ? void 0 : _b.name, l = this.facility && ((_d = (_c = this.viewModel) == null ? void 0 : _c.getFacility(this.facility)) == null ? void 0 : _d.name) || e7.selector.selectFacility, n6 = this.viewModel.hasMultipleSites ? n2("button", { bind: this, class: this.classes(o.filterMenuHeaderBack), onclick: this._backClicked, title: t3.back, type: "button" }, n2("span", { class: this.classes(v(this.container) ? i.right : i.left) })) : null, r = this.viewModel.hasMultipleSites ? n2(e5, { class: this.classes(o.filterMenuHeaderSubtext), level: n3(this.headingLevel) }, i2) : null, u = n2("div", { class: this.classes(o.filterMenuHeader), key: "filter-menu-site-header" }, n6, n2("div", { class: this.classes(o.filterMenuHeaderTextGroup) }, n2(e5, { class: this.classes(o.filterMenuHeaderText), level: this.headingLevel }, l), r), n2("button", { bind: this, class: this.classes(i.icon, i.close), onclick: this._closeClicked, title: t3.close, type: "button" })), v3 = this._renderSearchInput(), p = this._renderFacilityItems();
    return n2("div", { class: this.classes(o.filterMenu), key: "filter-menu-facility" }, u, v3, p);
  }
  _renderSearchInput() {
    const { messagesCommon: e7 } = this;
    return n2("div", { class: this.classes(o.filterMenuSearch), key: "filter-menu-search" }, n2("span", { class: this.classes(i.icon, i.search) }), n2("input", { afterCreate: L, bind: this, class: this.classes(o.filterMenuSearchInput), "data-node-ref": "_searchInput", oninput: this._onSearchChange, onpaste: this._onSearchChange, placeholder: e7.search, value: this.viewModel.searchTerm ?? void 0 }));
  }
  _renderBlueCircle() {
    return n2("span", { class: this.classes(o.selectedItemCircle), key: "floor-filter__selected-item-circle" });
  }
  _renderSiteItems() {
    var _a, _b, _c, _d;
    if (!((_c = (_b = (_a = this.viewModel) == null ? void 0 : _a.filterFeatures) == null ? void 0 : _b.sites) == null ? void 0 : _c.sitesInfo))
      return null;
    const { messages: e7 } = this, t3 = this.viewModel.filterFeatures.sites.sitesInfo, s4 = this.viewModel.filterSites(t3).map((e8) => this._renderSiteItem(e8)), i2 = 0 === s4.length && ((_d = this.viewModel) == null ? void 0 : _d.searchTerm) && n2("div", { class: this.classes(e4.empty) }, e7.noResults);
    return n2("ul", { afterCreate: L, "aria-label": e7.selector.sitesLabel, bind: this, class: this.classes(o.filterMenuItems), "data-id": "sites", "data-node-ref": "_sitesListNode", key: "filter-menu-items--sites", onkeydown: this._handleListKeydown, tabIndex: -1 }, s4, i2);
  }
  _renderSiteItem(e7) {
    const { name: t3, id: s4 } = e7, i2 = `filter-menu-site--${s4}`, l = this.site === s4;
    return n2("li", { key: i2 }, n2("button", { bind: this, class: this.classes(o.filterMenuSite), "data-id": s4, "data-list-id": "sites", onclick: this._siteSelected, onfocus: this._onItemFocus, type: "button" }, l ? this._renderBlueCircle() : null, n2("span", { class: this.classes(l ? o.filterMenuSelectedItem : o.filterMenuItemName) }, t3), n2("span", { class: this.classes(v(this.container) ? i.left : i.right) })));
  }
  _renderFacilityItems() {
    var _a, _b, _c, _d;
    if (!((_c = (_b = (_a = this.viewModel) == null ? void 0 : _a.filterFeatures) == null ? void 0 : _b.facilities) == null ? void 0 : _c.facilitiesInfo))
      return null;
    const { messages: e7, site: t3 } = this, s4 = this.viewModel.getSite(t3), i2 = this.viewModel.filterFeatures.facilities.facilitiesInfo, l = this.viewModel.filterFacilities(i2).map((e8) => this._renderFacilityItem(e8)), n6 = 0 === l.length && ((_d = this.viewModel) == null ? void 0 : _d.searchTerm) && n2("div", { class: this.classes(e4.empty) }, e7.noResults), a2 = s4 ? s3(e7.selector.siteFacilitiesLabel, { name: `"${s4.name}"` }) : e7.selector.facilitiesLabel;
    return n2("ul", { afterCreate: L, "aria-label": a2, bind: this, class: this.classes(o.filterMenuItems), "data-id": "facilities", "data-node-ref": "_facilitiesListNode", key: "filter-menu-items--facilities", onkeydown: this._handleListKeydown, tabIndex: -1 }, l, n6);
  }
  _renderFacilityItem(e7) {
    const { name: t3, id: s4 } = e7, i2 = `filter-menu-facility--${s4}`, l = this.facility === s4;
    return n2("li", { key: i2 }, n2("button", { bind: this, class: this.classes(o.filterMenuFacility), "data-id": s4, "data-list-id": "facilities", onclick: this._facilitySelected, onfocus: this._onItemFocus, type: "button" }, l ? this._renderBlueCircle() : null, n2("span", { class: this.classes(l ? o.filterMenuSelectedItem : o.filterMenuItemName) }, t3)));
  }
  _afterBaseNodeCreate(e7) {
    var _a, _b;
    this._baseNode && ((_a = this._resizeObserver) == null ? void 0 : _a.unobserve(this._baseNode)), this._baseNode = e7, (_b = this._resizeObserver) == null ? void 0 : _b.observe(this._baseNode);
  }
  _toggleCollapsed() {
    this.longNames = !this.longNames;
  }
  _toggleFilterMenu() {
    var _a;
    const e7 = ((_a = this.viewModel) == null ? void 0 : _a.filterMenuOpen) ?? false;
    this.viewModel.filterMenuOpen = !e7;
  }
  _setFilterMenuType(e7) {
    this.viewModel.filterMenuType = e7;
  }
  _zoomToClicked() {
    var _a, _b, _c, _d, _e;
    if (this.site && "site" === ((_a = this.viewModel) == null ? void 0 : _a.filterMenuType) && ((_b = this.viewModel) == null ? void 0 : _b.filterMenuOpen)) {
      const e7 = (_c = this.viewModel) == null ? void 0 : _c.getSite(this.site);
      this.viewModel.goTo(e7);
    } else if (this.facility) {
      const e7 = (_d = this.viewModel) == null ? void 0 : _d.getFacility(this.facility);
      this.viewModel.goTo(e7);
    } else if (this.site) {
      const e7 = (_e = this.viewModel) == null ? void 0 : _e.getSite(this.site);
      this.viewModel.goTo(e7);
    }
  }
  _onSearchChange(e7) {
    var _a;
    const t3 = e7.target;
    "" === t3.value ? this.viewModel.searchTerm = null : t3.value && ((_a = this.viewModel) == null ? void 0 : _a.searchTerm) !== t3.value && (this.viewModel.searchTerm = t3.value);
  }
  _closeClicked() {
    this.viewModel.searchTerm = null, this.viewModel.filterMenuOpen = false;
  }
  _backClicked() {
    this._setFilterMenuType("site"), this.viewModel.searchTerm = null;
  }
  _siteSelected(e7) {
    const t3 = e7.currentTarget.getAttribute("data-id"), s4 = this.viewModel.getSite(t3);
    let i2 = false;
    this.site !== t3 && (this.facility = null, this.level = null, i2 = true, this.viewModel.levelsExpanded = false), this.site = t3, this.viewModel.searchTerm = null, this._setFilterMenuType("facility"), this.viewModel.goTo(s4), i2 && this.viewModel.setFloors(null);
  }
  _facilitySelected(e7) {
    var _a;
    const t3 = e7.currentTarget.getAttribute("data-id"), s4 = this.viewModel.getFacility(t3);
    let i2 = false;
    if (this.facility !== t3) {
      if ("base-floors" === this.viewModel.filterMode) {
        const e8 = (_a = this.viewModel) == null ? void 0 : _a.getBaseLevel(s4);
        this.level = e8 ? e8.id : null;
      } else
        this.level = null;
      i2 = true, this.viewModel.levelsExpanded = false;
    }
    if (this.facility = t3, this.viewModel.goTo(s4), i2) {
      const e8 = this.viewModel.getLevel(this.level);
      this.viewModel.setFloors(e8);
    }
    if (!this.viewModel.isNormalMode) {
      const e8 = this.viewModel.getFacilityLevels(t3);
      (e8 == null ? void 0 : e8.length) > 1 && (this.viewModel.levelsExpanded = true);
    }
    setTimeout(() => this._focusActiveLevel(), 50);
  }
  _levelSelected(e7) {
    const t3 = e7.currentTarget.getAttribute("data-id");
    this.level = t3;
  }
  _closeLevels() {
    this.viewModel.levelsExpanded = false;
  }
  _isWebScene(e7) {
    return "esri.WebScene" === (e7 == null ? void 0 : e7.declaredClass);
  }
  _getComponentPosition() {
    var _a, _b;
    return null != this.container ? (_b = (_a = this.view) == null ? void 0 : _a.ui) == null ? void 0 : _b.getPosition(this.container) : null;
  }
  _getPosition(e7) {
    switch (e7) {
      case "bottom-right":
      case "bottom-left":
        return "bottom";
      default:
        return "top";
    }
  }
  _handleListKeydown(e7) {
    const t3 = e7.currentTarget.getAttribute("data-id");
    let s4 = null;
    "sites" === t3 || "facilities" === t3 ? (this._activeMenu !== t3 && (this._activeMenuIndex.menuItems = -1), this._activeMenu = t3, s4 = "menuItems") : "levels" === t3 && (s4 = "levels");
    const i2 = "sites" === t3 ? this._sitesListNode : "facilities" === t3 ? this._facilitiesListNode : "levels" === t3 ? this._levelsListNode : null, { key: l } = e7, o2 = "Tab" === l, n6 = M.has(l);
    n6 && e7.preventDefault();
    const r = i2 == null ? void 0 : i2.getElementsByTagName("li");
    r && 0 !== r.length && (n6 || o2) && this._handleItemNavigation(l, e7.shiftKey, r, o2, s4);
  }
  _handleItemNavigation(e7, t3, s4, i2, l) {
    if (!l)
      return;
    this._activeMenuIndex[l] === s4.length && this._activeMenuIndex[l]--, -1 === this._activeMenuIndex[l] && this._activeMenuIndex[l]++;
    const o2 = this._activeMenuIndex[l];
    switch (e7) {
      case "Home":
        this._activeMenuIndex[l] = 0;
        break;
      case "End":
        this._activeMenuIndex[l] = s4.length - 1;
        break;
      case "ArrowUp":
        this._activeMenuIndex[l] = this._activeMenuIndex[l] <= 0 ? s4.length - 1 : this._activeMenuIndex[l] - 1;
        break;
      case "ArrowDown":
        this._activeMenuIndex[l] = this._activeMenuIndex[l] === s4.length - 1 ? 0 : this._activeMenuIndex[l] + 1;
    }
    if ("Tab" === e7 && t3 && this._activeMenuIndex[l] >= 0 && this._activeMenuIndex[l]--, "Tab" === e7 && !t3 && this._activeMenuIndex[l] < s4.length && this._activeMenuIndex[l]++, o2 !== this._activeMenuIndex[l] && this._activeMenuIndex[l] > -1 && this._activeMenuIndex[l] < s4.length && !i2) {
      const e8 = s4[this._activeMenuIndex[l]].getElementsByTagName("button"), t4 = 1 === (e8 == null ? void 0 : e8.length) ? e8[0] : null;
      t4 == null ? void 0 : t4.focus();
    }
  }
  _focusSearch() {
    var _a;
    (_a = this._searchInput) == null ? void 0 : _a.focus();
  }
  _focusActiveLevel() {
    var _a;
    const { level: e7 } = this, t3 = this._levelsListNode, s4 = t3 == null ? void 0 : t3.getElementsByTagName("li");
    if (!e7 || !t3 || !s4)
      return;
    const i2 = (_a = this._facilitiesListNode) == null ? void 0 : _a.getElementsByTagName("li");
    this._activeMenuIndex.menuItems = i2 ? i2.length - 1 : -1;
    const l = [];
    for (let o2 = 0; o2 < s4.length; o2++) {
      const e8 = s4[o2].getElementsByTagName("button");
      1 === (e8 == null ? void 0 : e8.length) && l.push(e8[0]);
    }
    l.forEach((t4, s5) => {
      t4.getAttribute("data-id") === e7 && (t4.focus(), this._activeMenuIndex.levels = s5);
    });
  }
  _onItemFocus(e7) {
    const t3 = e7.currentTarget, s4 = t3.getAttribute("data-list-id"), i2 = t3.getAttribute("data-id"), l = "sites" === s4 ? this._sitesListNode : "facilities" === s4 ? this._facilitiesListNode : "levels" === s4 ? this._levelsListNode : null;
    if (!l)
      return;
    const o2 = l == null ? void 0 : l.getElementsByTagName("li");
    if (!o2)
      return;
    const n6 = [];
    Array.from(o2).forEach((e8) => {
      const t4 = e8.getElementsByTagName("button");
      1 === (t4 == null ? void 0 : t4.length) && n6.push(t4[0]);
    });
    let r = null;
    switch (s4) {
      case "sites":
      case "facilities":
        r = "menuItems";
        break;
      case "levels":
        r = "levels";
    }
    if (!r)
      return;
    const a2 = r;
    n6.forEach((e8, t4) => {
      e8.getAttribute("data-id") === i2 && this._activeMenuIndex[a2] !== t4 && (this._activeMenuIndex[a2] = t4);
    });
  }
};
e([y()], g.prototype, "_searchInput", void 0), e([y()], g.prototype, "enabled", null), e([y()], g.prototype, "longNames", null), e([y()], g.prototype, "minimized", null), e([y()], g.prototype, "pinnedLevels", null), e([y()], g.prototype, "site", null), e([y()], g.prototype, "facility", null), e([y()], g.prototype, "level", null), e([y()], g.prototype, "view", null), e([y({ type: F })], g.prototype, "viewModel", void 0), e([y(), e2("esri/widgets/FloorFilter/t9n/FloorFilter")], g.prototype, "messages", void 0), e([y(), e2("esri/t9n/common")], g.prototype, "messagesCommon", void 0), e([y()], g.prototype, "goToOverride", null), e([y()], g.prototype, "headingLevel", void 0), e([y()], g.prototype, "icon", null), g = e([a("esri.widgets.FloorFilter")], g);
var f = g;
export {
  f as default
};
//# sourceMappingURL=FloorFilter-ZZYWRMOG.js.map
