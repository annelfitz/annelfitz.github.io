import {
  onDisconnectedHelper
} from "./chunk-K4WPYNMJ.js";
import {
  importCoreReactiveUtils,
  newWidgetsAttachments
} from "./chunk-YXW2SI4L.js";
import {
  addHandles,
  checkForExpand
} from "./chunk-UXZQL3ZN.js";
import {
  createEvent,
  getElement,
  h,
  registerInstance
} from "./chunk-KMIMZXFW.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/map-components/dist/esm/arcgis-attachments.entry.js
var attachmentsCss = "";
var ArcgisAttachments = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.widgetReady = createEvent(this, "widgetReady", 7);
    this._watchHandles = [];
    this.referenceElement = void 0;
    this.position = "bottom-left";
    this.expandable = false;
    this.capabilities = void 0;
    this.displayType = void 0;
    this.graphic = void 0;
    this.submitting = void 0;
    this.visibleElements = void 0;
    this.widget = void 0;
  }
  capabilitiesWatcher(newValue) {
    if (this.widget) {
      this.widget.capabilities = newValue;
    }
  }
  displayTypeWatcher(newValue) {
    if (this.widget) {
      this.widget.displayType = newValue;
    }
  }
  graphicWatcher(newValue) {
    if (this.widget) {
      this.widget.graphic = newValue;
    }
  }
  visibleElementsWatcher(newValue) {
    if (this.widget) {
      this.widget.visibleElements = newValue;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  async componentDidLoad() {
    const params = this._createParams();
    const widget = await newWidgetsAttachments(params);
    this.widget = widget;
    await this._addWatchers();
    this.widgetReady.emit({ widget: this.widget });
    checkForExpand(this);
  }
  disconnectedCallback() {
    onDisconnectedHelper(this);
  }
  render() {
    if (this.expandable) {
      return h("arcgis-expand", { position: this.position, ref: (el) => this.expandElem = el }, h("div", { ref: (el) => this.childElem = el }));
    }
    return h("div", { ref: (el) => this.childElem = el });
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  async _addWatchers() {
    const { watch } = await importCoreReactiveUtils();
    addHandles(this, watch(() => this.widget.submitting, (value) => this.submitting = value, {
      initial: true
    }));
  }
  _createParams() {
    const params = {
      container: this.childElem
    };
    if (this.displayType) {
      params.displayType = this.displayType;
    }
    if (this.graphic) {
      params.graphic = this.graphic;
    }
    if (this.visibleElements) {
      params.visibleElements = this.visibleElements;
    }
    return params;
  }
  get el() {
    return getElement(this);
  }
  static get watchers() {
    return {
      "capabilities": ["capabilitiesWatcher"],
      "displayType": ["displayTypeWatcher"],
      "graphic": ["graphicWatcher"],
      "visibleElements": ["visibleElementsWatcher"]
    };
  }
};
ArcgisAttachments.style = attachmentsCss;
export {
  ArcgisAttachments as arcgis_attachments
};
/*! Bundled license information:

@arcgis/map-components/dist/esm/arcgis-attachments.entry.js:
  (*!
   * All material copyright Esri, All Rights Reserved, unless otherwise specified.
   * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
   * v4.30.0-next.13
   *)
*/
//# sourceMappingURL=arcgis-attachments.entry-YOE27EL3.js.map
