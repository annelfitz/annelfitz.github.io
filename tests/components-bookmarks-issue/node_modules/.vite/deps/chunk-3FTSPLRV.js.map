{
  "version": 3,
  "sources": ["../../@arcgis/core/geometry/support/geodesicUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import e from\"../../core/Error.js\";import{convertUnit as t}from\"../../core/unitUtils.js\";import{toRadians as n,spheroids as i,wktSpheroidRegex as s}from\"./geodesicConstants.js\";import{equals as r,isWebMercator as a,isGeographic as o}from\"./spatialReferenceUtils.js\";import c from\"../Polyline.js\";import l from\"../Polygon.js\";import h from\"../Point.js\";import f from\"../SpatialReference.js\";function p(e){if(!e)return null;if(o(e)&&e.wkid){const t=i[e.wkid];if(t)return t}const t=e.wkt2||e.wkt;if(t){const e=u(t);if(e)return e}return null}function u(e){const t=s.exec(e);if(!t||2!==t.length)return null;const n=t[1].split(\",\");if(!n||n.length<3)return null;const i=parseFloat(n[1]),r=parseFloat(n[2]);if(isNaN(i)||isNaN(r))return null;return{a:i,f:0===r?0:1/r}}function d(e){const t=p(e);if(m(t))return t;const n=t.a*(1-t.f);return Object.assign(t,{b:n,eSq:1-(n/t.a)**2,radius:(2*t.a+n)/3,densificationRatio:1e4/((2*t.a+n)/3)})}function m(e){return null!=e&&\"b\"in e&&\"eSq\"in e&&\"radius\"in e}function g(e){return null!=e&&e<0?e+360:e}function M(e,t,i){const{a:s,eSq:r}=d(i),a=Math.sqrt(r),o=Math.sin(t[1]*n),c=s*t[0]*n;let l;if(r>0){l=s*((1-r)*(o/(1-r*(o*o))-1/(2*a)*Math.log((1-a*o)/(1+a*o))))*.5}else l=s*o;return e[0]=c,e[1]=l,e}function w(e){return null!==p(e)}function y(n,i=\"square-meters\"){if(n.some((e=>!w(e.spatialReference))))throw new e(\"geodesic-areas:invalid-spatial-reference\",\"the input geometries spatial reference is not supported\");const s=[];for(let e=0;e<n.length;e++){const t=n[e],i=t.spatialReference,{radius:r,densificationRatio:a}=d(i),o=r*a;s.push(R(t,o))}const r=[],a=[0,0],o=[0,0];for(let e=0;e<s.length;e++){const{rings:n,spatialReference:c}=s[e];let l=0;for(let e=0;e<n.length;e++){const t=n[e];M(a,t[0],c),M(o,t[t.length-1],c);let i=o[0]*a[1]-a[0]*o[1];for(let e=0;e<t.length-1;e++)M(a,t[e+1],c),M(o,t[e],c),i+=o[0]*a[1]-a[0]*o[1];l+=i}l=t(l,\"square-meters\",i),r.push(l/-2)}return r}function v(n,i=\"meters\"){if(!n)throw new e(\"geodesic-lengths:invalid-geometries\",\"the input geometries type is not supported\");if(n.some((e=>!w(e.spatialReference))))throw new e(\"geodesic-lengths:invalid-spatial-reference\",\"the input geometries spatial reference is not supported\");const s=[];for(let e=0;e<n.length;e++){const r=n[e],{spatialReference:a}=r,o=\"polyline\"===r.type?r.paths:r.rings;let c=0;for(let e=0;e<o.length;e++){const t=o[e];let n=0;for(let e=1;e<t.length;e++){const i=t[e-1][0],s=t[e][0],r=t[e-1][1],o=t[e][1];if(r!==o||i!==s){const e=new z;j(e,[i,r],[s,o],a),n+=e.distance}}c+=n}c=t(c,\"meters\",i),s.push(c)}return s}function R(t,n){if(\"polyline\"!==t.type&&\"polygon\"!==t.type)throw new e(\"geodesic-densify:invalid-geometry\",\"the input geometry is neither polyline nor polygon\");const{spatialReference:i}=t;if(!w(i))throw new e(\"geodesic-densify:invalid-spatial-reference\",\"the input geometry spatial reference is not supported\");const s=\"polyline\"===t.type?t.paths:t.rings,r=[],a=[0,0],o=new z;for(const e of s){const t=[];r.push(t),t.push([e[0][0],e[0][1]]);let s,c,l=e[0][0],h=e[0][1];for(let r=0;r<e.length-1;r++){if(s=e[r+1][0],c=e[r+1][1],l===s&&h===c)continue;const f=[l,h];j(o,[l,h],[s,c],i);const{azimuth:p,distance:u}=o,d=u/n;if(d>1){for(let e=1;e<=d-1;e++){b(a,f,p,e*n,i),t.push(a.slice(0))}b(a,f,p,(u+Math.floor(d-1)*n)/2,i),t.push(a.slice(0))}b(a,f,p,u,i),t.push(a.slice(0)),l=a[0],h=a[1]}}return\"polyline\"===t.type?new c({paths:r,spatialReference:i}):new l({rings:r,spatialReference:i})}class z{constructor(e=0,t=void 0,n=void 0){this.distance=e,this.azimuth=t,this.reverseAzimuth=n}}function b(e,t,i,s,r){const a=t[0],o=t[1],c=a*n,l=o*n,h=(i??0)*n,{a:f,b:p,f:u}=d(r),m=Math.sin(h),g=Math.cos(h),M=(1-u)*Math.tan(l),w=1/Math.sqrt(1+M*M),y=M*w,v=Math.atan2(M,g),R=w*m,z=R*R,b=1-z,j=b*(f*f-p*p)/(p*p),q=1+j/16384*(4096+j*(j*(320-175*j)-768)),x=j/1024*(256+j*(j*(74-47*j)-128));let A,N,S,k,P=s/(p*q),F=2*Math.PI;for(;Math.abs(P-F)>1e-12;)S=Math.cos(2*v+P),A=Math.sin(P),N=Math.cos(P),k=x*A*(S+x/4*(N*(2*S*S-1)-x/6*S*(4*A*A-3)*(4*S*S-3))),F=P,P=s/(p*q)+k;const U=y*A-w*N*g,C=Math.atan2(y*N+w*A*g,(1-u)*Math.sqrt(z+U*U)),E=Math.atan2(A*m,w*N-y*A*g),G=u/16*b*(4+u*(4-3*b)),I=C/n,O=(c+(E-(1-G)*u*R*(P+G*A*(S+G*N*(2*S*S-1)))))/n;return e[0]=O,e[1]=I,e}function j(e,t,i,s){const r=t[0]*n,a=t[1]*n,o=i[0]*n,c=i[1]*n,{a:l,b:h,f,radius:p}=d(s),u=o-r,m=Math.atan((1-f)*Math.tan(a)),g=Math.atan((1-f)*Math.tan(c)),M=Math.sin(m),w=Math.cos(m),y=Math.sin(g),v=Math.cos(g);let R,z,b,j,q,x,A,N,S,k,P=1e3,F=u;do{if(A=Math.sin(F),N=Math.cos(F),b=Math.sqrt(v*A*(v*A)+(w*y-M*v*N)*(w*y-M*v*N)),0===b)return e.distance=0,e.azimuth=void 0,e.reverseAzimuth=void 0,e;q=M*y+w*v*N,x=Math.atan2(b,q),S=w*v*A/b,z=1-S*S,j=q-2*M*y/z,isNaN(j)&&(j=0),k=f/16*z*(4+f*(4-3*z)),R=F,F=u+(1-k)*f*S*(x+k*b*(j+k*q*(2*j*j-1)))}while(Math.abs(F-R)>1e-12&&--P>0);if(0===P){const t=p,i=Math.acos(Math.sin(a)*Math.sin(c)+Math.cos(a)*Math.cos(c)*Math.cos(o-r))*t,s=o-r,l=Math.sin(s)*Math.cos(c),h=Math.cos(a)*Math.sin(c)-Math.sin(a)*Math.cos(c)*Math.cos(s),f=Math.atan2(l,h);return e.azimuth=f/n,e.distance=i,e.reverseAzimuth=void 0,e}const U=z*(l*l-h*h)/(h*h),C=U/1024*(256+U*(U*(74-47*U)-128)),E=h*(1+U/16384*(4096+U*(U*(320-175*U)-768)))*(x-C*b*(j+C/4*(q*(2*j*j-1)-C/6*j*(4*b*b-3)*(4*j*j-3)))),G=Math.atan2(v*Math.sin(F),w*y-M*v*Math.cos(F)),I=Math.atan2(w*Math.sin(F),w*y*Math.cos(F)-M*v);return e.azimuth=G/n,e.distance=E,e.reverseAzimuth=I/n,e}function q(n,i,s=\"meters\"){if(!n||!i)throw new e(\"geodesic-distance:missing-parameters\",\"one or both input parameters are missing\");if(!n.spatialReference||!i.spatialReference)throw new e(\"geodesic-distance:invalid-parameters\",\"one or both input points do not have a spatial reference\");if(!r(n.spatialReference,i.spatialReference))throw new e(\"geodesic-distance:invalid-parameters\",\"spatial references of input parameters do not match\");const{spatialReference:a}=n;if(!w(a))throw new e(\"geodesic-distance:not-supported\",\"input geometry spatial reference is not supported\");if(n.x===i.x&&n.y===i.y)return new z(0,0,0);const o=new z;return j(o,[n.x,n.y],[i.x,i.y],a),o.distance=t(o.distance,\"meters\",s),o.azimuth=g(o.azimuth),o.reverseAzimuth=g(o.reverseAzimuth),o}function x(t,n,i){if(!t||null==n||null==i)throw new e(\"point-from-distance:missing-parameters\",\"one or more input parameters are missing or undefined\");if(i<0||i>360)throw new e(\"point-from-distance:-of-bounds\",\"azimuth is restricted to angles between, and including, 0° to 360° degrees\");if(!t.spatialReference)throw new e(\"point-from-distance:missing-spatial-reference\",\"the input point must have a spatial reference\");const{spatialReference:s}=t;if(!w(s))throw new e(\"geodesic-distance:not-supported\",\"input geometry spatial reference is not supported\");const r=[0,0];return b(r,[t.x,t.y],i,n,s),new h({x:r[0],y:r[1],spatialReference:s})}function A(e){return w(e)?e:a(e)?f.WGS84:null}export{z as InverseGeodeticSolverResult,b as directGeodeticSolver,y as geodesicAreas,A as geodesicCompatibleSpatialReference,R as geodesicDensify,q as geodesicDistance,v as geodesicLengths,j as inverseGeodeticSolver,w as isSupported,x as pointFromDistance};\n"],
  "mappings": "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",
  "names": ["t", "e", "i", "d", "m", "t", "i", "s", "d", "w", "r", "a", "o", "n", "e", "j", "f", "p", "u", "m", "M", "y", "v", "R", "z", "b", "x", "A", "G", "l", "h", "A", "w"]
}
