import {
  h
} from "./chunk-I4SHZ6P5.js";
import {
  s
} from "./chunk-QX66UTIR.js";
import {
  n as n2
} from "./chunk-Z2PDA67N.js";
import {
  o
} from "./chunk-TXBMNSNF.js";
import {
  S,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  u
} from "./chunk-QHK5ZYFW.js";
import {
  n2 as n
} from "./chunk-7RBRCL6S.js";

// node_modules/@arcgis/core/views/layers/LayerView.js
var d = class extends s(n2(o.EventedMixin(S))) {
  constructor(e2) {
    super(e2), this._updatingHandles = new h(), this.layer = null, this.parent = null;
  }
  initialize() {
    this.when().catch((e2) => {
      var _a;
      if ("layerview:create-error" !== e2.name) {
        const t = this.layer && this.layer.id || "no id", r = ((_a = this.layer) == null ? void 0 : _a.title) || "no title";
        n.getLogger(this).error("#resolve()", `Failed to resolve layer view (layer title: '${r}', id: '${t}')`, e2);
      }
    });
  }
  destroy() {
    this._updatingHandles = u(this._updatingHandles);
  }
  get fullOpacity() {
    var _a, _b;
    return (((_a = this.layer) == null ? void 0 : _a.opacity) ?? 1) * (((_b = this.parent) == null ? void 0 : _b.fullOpacity) ?? 1);
  }
  get suspended() {
    return !this.canResume();
  }
  get suspendInfo() {
    return this.getSuspendInfo();
  }
  get legendEnabled() {
    var _a;
    return !this.suspended && true === ((_a = this.layer) == null ? void 0 : _a.legendEnabled);
  }
  get updating() {
    var _a;
    return !(!((_a = this._updatingHandles) == null ? void 0 : _a.updating) && !this.isUpdating());
  }
  get updatingProgress() {
    return this.updating ? 0 : 1;
  }
  get visible() {
    var _a;
    return true === ((_a = this.layer) == null ? void 0 : _a.visible);
  }
  set visible(e2) {
    this._overrideIfSome("visible", e2);
  }
  canResume() {
    var _a, _b, _c;
    return this.visible && ((_a = this.layer) == null ? void 0 : _a.loaded) && !((_b = this.parent) == null ? void 0 : _b.suspended) && ((_c = this.view) == null ? void 0 : _c.ready) || false;
  }
  getSuspendInfo() {
    var _a, _b;
    const e2 = ((_a = this.parent) == null ? void 0 : _a.suspended) ? this.parent.suspendInfo : {}, t = this;
    return ((_b = t.view) == null ? void 0 : _b.ready) || (e2.viewNotReady = true), this.layer && this.layer.loaded || (e2.layerNotLoaded = true), this.visible || (e2.layerInvisible = true), e2;
  }
  isUpdating() {
    return false;
  }
};
e([y()], d.prototype, "fullOpacity", null), e([y()], d.prototype, "layer", void 0), e([y()], d.prototype, "parent", void 0), e([y({ readOnly: true })], d.prototype, "suspended", null), e([y({ readOnly: true })], d.prototype, "suspendInfo", null), e([y({ readOnly: true })], d.prototype, "legendEnabled", null), e([y({ type: Boolean, readOnly: true })], d.prototype, "updating", null), e([y({ readOnly: true })], d.prototype, "updatingProgress", null), e([y()], d.prototype, "visible", null), e([y()], d.prototype, "view", void 0), d = e([a("esri.views.layers.LayerView")], d);
var u2 = d;

export {
  u2 as u
};
//# sourceMappingURL=chunk-NGAYW4TW.js.map
