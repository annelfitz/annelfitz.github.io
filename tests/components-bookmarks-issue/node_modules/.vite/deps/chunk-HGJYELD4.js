import {
  H,
  I,
  L,
  P,
  a2 as a,
  g2 as g,
  l,
  s,
  u,
  v
} from "./chunk-ESK2YRQM.js";
import {
  J,
  r
} from "./chunk-JZBR4X6W.js";
import {
  n
} from "./chunk-OIJCMME5.js";

// node_modules/@arcgis/core/views/3d/state/Frustum.js
var c = class {
  get planes() {
    return this.frustum;
  }
  get points() {
    return this._points;
  }
  get mutablePoints() {
    return this._points;
  }
  get direction() {
    return this._direction;
  }
  get origin() {
    return this._origin;
  }
  constructor(t) {
    this.renderCoordsHelper = t, this.frustum = H(), this._points = I(), this.lines = new Array(12), this._origin = n(), this._direction = n(), this._altitude = null;
    for (let i = 0; i < 12; i++)
      this.lines[i] = { origin: null, direction: n(), endpoint: null };
  }
  update(i) {
    L(i.viewMatrix, i.projectionMatrix, this.frustum, this._points), r(this._origin, i.eye), r(this._direction, i.viewForward), this._altitude = this.renderCoordsHelper.getAltitude(this._origin), this._updateLines();
  }
  updatePoints(i) {
    for (let s2 = 0; s2 < this._points.length; s2++)
      r(this._points[s2], i[s2]);
    P(this.frustum, this._points), this._updateLines();
  }
  get altitude() {
    return this._altitude;
  }
  intersectsSphere(t) {
    return s(this.frustum, t);
  }
  intersectsRay(t) {
    return u(this.frustum, t);
  }
  intersectsLineSegment(t, i) {
    return a(this.frustum, t, i);
  }
  intersectsPoint(t) {
    return l(this.frustum, t);
  }
  _updateLines() {
    const t = this._points;
    for (let i = 0; i < 4; i++) {
      const s2 = i + 4;
      d(this.lines[i], t[i], t[s2]), d(this.lines[i + 4], t[i], 3 === i ? t[0] : t[i + 1]), d(this.lines[i + 8], t[s2], 3 === i ? t[4] : t[s2 + 1]);
    }
  }
};
function d(t, s2, e) {
  t.origin = s2, t.endpoint = e, J(t.direction, s2, e);
}
c.planePointIndices = v, c.nearFarLineIndices = [[g.NEAR_BOTTOM_LEFT, g.FAR_BOTTOM_LEFT], [g.NEAR_BOTTOM_RIGHT, g.FAR_BOTTOM_RIGHT], [g.NEAR_TOP_RIGHT, g.FAR_TOP_RIGHT], [g.NEAR_TOP_LEFT, g.FAR_TOP_LEFT]];

export {
  c
};
//# sourceMappingURL=chunk-HGJYELD4.js.map
