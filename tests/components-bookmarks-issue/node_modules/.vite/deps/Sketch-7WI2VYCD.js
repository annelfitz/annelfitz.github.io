import {
  L as L3,
  k as k2,
  s as s5
} from "./chunk-V4GNOX5M.js";
import "./chunk-THQ2DNZA.js";
import {
  pe
} from "./chunk-H2X5RBRV.js";
import {
  r as r4
} from "./chunk-5HWGOVOV.js";
import "./chunk-3RT7534N.js";
import "./chunk-R5A6POKY.js";
import "./chunk-CGJEHQM2.js";
import "./chunk-MYIS6GAM.js";
import "./chunk-CRYY7ZCN.js";
import "./chunk-YBFQVZX5.js";
import {
  L,
  T,
  b,
  v as v2
} from "./chunk-X5YTZ5V2.js";
import "./chunk-AVQM6UNY.js";
import {
  a as a4
} from "./chunk-ZIKY3AX6.js";
import {
  L as L2,
  W,
  u as u4
} from "./chunk-M4ETSXXR.js";
import "./chunk-VGQTAP4F.js";
import "./chunk-YSRCOU2A.js";
import "./chunk-CTJKH5VV.js";
import "./chunk-FKMPOIQR.js";
import "./chunk-CTY3WTET.js";
import "./chunk-EZMIPVQL.js";
import "./chunk-7IFMSG3H.js";
import "./chunk-CA3XJ2RX.js";
import "./chunk-JASPUPTW.js";
import "./chunk-TKMRXVLK.js";
import {
  l as l2
} from "./chunk-6SB3EFZU.js";
import "./chunk-LEFES6LS.js";
import "./chunk-AEAYH74I.js";
import "./chunk-6BCJJDKK.js";
import "./chunk-UANQJYHL.js";
import "./chunk-DNFHDQRJ.js";
import "./chunk-TO6UIATU.js";
import "./chunk-WCBCYPOZ.js";
import "./chunk-3FTSPLRV.js";
import {
  p as p2
} from "./chunk-OMRW2J7M.js";
import "./chunk-UXQH3C5A.js";
import "./chunk-5SYJEI74.js";
import "./chunk-VUHMQQ6M.js";
import "./chunk-6GQQIJM7.js";
import "./chunk-PAH4PVZY.js";
import "./chunk-2GT6KC2O.js";
import "./chunk-637XZX4A.js";
import "./chunk-PTIWH4S7.js";
import "./chunk-L3GUCBXG.js";
import {
  o as o5,
  r as r3
} from "./chunk-67GTVIII.js";
import {
  i as i2
} from "./chunk-BEXFYHUM.js";
import "./chunk-K3DEHPDR.js";
import "./chunk-I6RS7YIS.js";
import {
  o as o4
} from "./chunk-YGP7UFWC.js";
import "./chunk-4ZRUV2JM.js";
import {
  e as e5
} from "./chunk-D5LHX57G.js";
import "./chunk-CDYT7KXF.js";
import "./chunk-PMQ5HDZI.js";
import {
  e as e4
} from "./chunk-EAAEPSBY.js";
import "./chunk-I7LDU4W6.js";
import "./chunk-NAWP2ZCR.js";
import "./chunk-M5DWZKDJ.js";
import "./chunk-7KNPDPFB.js";
import "./chunk-M6P775BS.js";
import "./chunk-J5F4VILS.js";
import "./chunk-KSBIR2KG.js";
import "./chunk-7A5N7G2Z.js";
import "./chunk-FD7NY4JS.js";
import "./chunk-ZPC74XHC.js";
import "./chunk-IVGJRGD2.js";
import "./chunk-MTLWPXQD.js";
import "./chunk-ZEMG7GKC.js";
import "./chunk-XIWETS2Q.js";
import "./chunk-QFKFOAJ6.js";
import "./chunk-LOPMLCHC.js";
import "./chunk-JIR2YP6A.js";
import "./chunk-LANUNBDP.js";
import "./chunk-JBF6CULO.js";
import "./chunk-DRCNNCTI.js";
import "./chunk-MKOOEINB.js";
import "./chunk-JKOHBDRD.js";
import "./chunk-MDSRD3WV.js";
import "./chunk-3DFMDDMO.js";
import "./chunk-4BCSYJOQ.js";
import "./chunk-GMUCR2DJ.js";
import "./chunk-HBRJJENW.js";
import "./chunk-VHY5K2VE.js";
import "./chunk-6ENXMQPD.js";
import "./chunk-FV43HSGW.js";
import "./chunk-ZR7OV2EH.js";
import "./chunk-U76EZJUZ.js";
import "./chunk-MEEG7XMI.js";
import "./chunk-LJULTBAY.js";
import "./chunk-LO5UMUY4.js";
import "./chunk-YKIGDW5O.js";
import "./chunk-6MGK5WBT.js";
import "./chunk-CPZW2LMK.js";
import "./chunk-QR7J3YDY.js";
import "./chunk-GO2OGJDG.js";
import "./chunk-UYMREM3D.js";
import "./chunk-YK3UMVCY.js";
import "./chunk-5YY6NZNY.js";
import "./chunk-YJFPDMSR.js";
import "./chunk-I4SHZ6P5.js";
import "./chunk-QYDOVVH7.js";
import "./chunk-YSXT2SWC.js";
import "./chunk-YH3SFFF7.js";
import "./chunk-JBU54P54.js";
import "./chunk-FMS3CZY7.js";
import "./chunk-H7T5AB2S.js";
import "./chunk-WKVHVZW2.js";
import "./chunk-33LWZO2E.js";
import "./chunk-YT66FIGM.js";
import "./chunk-RLZYC2LS.js";
import "./chunk-TXLJQAAN.js";
import "./chunk-IRL6OOVK.js";
import "./chunk-3AIILHI5.js";
import "./chunk-QJRGTKPN.js";
import "./chunk-VIH3KDZO.js";
import "./chunk-LA365FE7.js";
import "./chunk-SA77Z3WI.js";
import "./chunk-D56W4LPT.js";
import "./chunk-BKOYOJBG.js";
import "./chunk-B4E4X2TN.js";
import "./chunk-HS6YI5DU.js";
import "./chunk-CDBOQCLE.js";
import "./chunk-RSRUEM5U.js";
import "./chunk-HFJMEXIX.js";
import "./chunk-VYSGSKHB.js";
import "./chunk-UAFQMHYI.js";
import "./chunk-IDPLBNJX.js";
import "./chunk-ZHAZR5C3.js";
import "./chunk-P4MNTMCZ.js";
import "./chunk-BSPKLAHD.js";
import "./chunk-VS6AHHIY.js";
import "./chunk-WZJNHZ6H.js";
import "./chunk-XMYPMIYH.js";
import "./chunk-FQLGRQKL.js";
import "./chunk-DRC4XSYG.js";
import "./chunk-RO3CTAP7.js";
import "./chunk-XGTCDM4C.js";
import "./chunk-VEYMN5N3.js";
import "./chunk-W5ALAOW2.js";
import "./chunk-FHDHOWK5.js";
import "./chunk-Y546C2O5.js";
import "./chunk-LQBHIBXV.js";
import "./chunk-B35SNV2V.js";
import "./chunk-Z2F5OKVA.js";
import "./chunk-UQA6M3KF.js";
import "./chunk-GLF3KRAL.js";
import "./chunk-ZLQTPFTL.js";
import "./chunk-QCMUK3QA.js";
import "./chunk-HZSGATFT.js";
import "./chunk-KNMQQRV7.js";
import "./chunk-N5GQOIDP.js";
import "./chunk-NFB6O77E.js";
import "./chunk-AKEHDP75.js";
import "./chunk-5MMGIT64.js";
import "./chunk-ERD6I7QP.js";
import "./chunk-Z3NX5DTX.js";
import "./chunk-J4RP32NG.js";
import "./chunk-6NLHKXEW.js";
import "./chunk-SCHTG6ZQ.js";
import "./chunk-QYC3GV65.js";
import "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import "./chunk-6PMFOUWZ.js";
import "./chunk-3KPZ3BQR.js";
import "./chunk-5JYVZQZR.js";
import "./chunk-UUG4W2PI.js";
import "./chunk-G7FOE26O.js";
import "./chunk-USOPZ2Q6.js";
import "./chunk-S5I4QKJD.js";
import "./chunk-LSM34QAB.js";
import "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import {
  _2 as _
} from "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import {
  c
} from "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-WMUEII2O.js";
import "./chunk-6QNF7OHN.js";
import "./chunk-6AQIVLDN.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import {
  a as a3,
  i,
  r as r2,
  s as s4,
  u as u3
} from "./chunk-HLDUDRTD.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import {
  j
} from "./chunk-HV6S3GY2.js";
import {
  a as a2
} from "./chunk-IGR2BTWR.js";
import {
  A as A2,
  K,
  M,
  h as h2,
  s as s3,
  u as u2
} from "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-CXNX736Z.js";
import {
  D,
  e2 as e3,
  r
} from "./chunk-RGCWZ2KZ.js";
import {
  n as n2
} from "./chunk-5VMSFOCB.js";
import "./chunk-LGQXPGTM.js";
import {
  q,
  v
} from "./chunk-2SDMYJDE.js";
import "./chunk-TPLOIZC7.js";
import {
  s as s2
} from "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-IZKCZQUY.js";
import {
  x2 as x
} from "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import {
  s
} from "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import {
  A,
  d as d3,
  p
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import {
  o as o3
} from "./chunk-TXBMNSNF.js";
import {
  d as d2
} from "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  S,
  o,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  d,
  e as e2,
  h,
  k,
  m,
  o as o2
} from "./chunk-JGDJR5EV.js";
import {
  l,
  u
} from "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  n2 as n
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-MDRC3XUT.js";
import "./chunk-NCF6OYL5.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/widgets/Sketch/VisibleElements.js
var s6 = class extends S {
  constructor(o6) {
    super(o6), this.point = true, this.polyline = true, this.polygon = true, this.rectangle = true, this.circle = true, this.multipoint = true, this.mesh = true;
  }
};
e([y({ type: Boolean, nonNullable: true })], s6.prototype, "point", void 0), e([y({ type: Boolean, nonNullable: true })], s6.prototype, "polyline", void 0), e([y({ type: Boolean, nonNullable: true })], s6.prototype, "polygon", void 0), e([y({ type: Boolean, nonNullable: true })], s6.prototype, "rectangle", void 0), e([y({ type: Boolean, nonNullable: true })], s6.prototype, "circle", void 0), e([y({ type: Boolean, nonNullable: true })], s6.prototype, "multipoint", void 0), e([y({ type: Boolean, nonNullable: true })], s6.prototype, "mesh", void 0), s6 = e([a("esri.widgets.Sketch.VisibleElements.CreateToolVisibilityMap")], s6);
var i3 = class extends S {
  constructor(o6) {
    super(o6), this["rectangle-selection"] = true, this["lasso-selection"] = true, this["custom-selection"] = true;
  }
};
e([y({ nonNullable: true })], i3.prototype, "rectangle-selection", void 0), e([y({ nonNullable: true })], i3.prototype, "lasso-selection", void 0), e([y({ nonNullable: true })], i3.prototype, "custom-selection", void 0), i3 = e([a("esri.widgets.Sketch.VisibleElements.SelectionToolVisibilityMap")], i3);
var p3 = class extends S {
  constructor(o6) {
    super(o6), this.createTools = new s6(), this.directionModePicker = false, this.duplicateButton = true, this.labelsToggle = true, this.selectionTools = new i3(), this.settingsMenu = true, this.snappingControls = true, this.snappingControlsElements = new s5(), this.tooltipsToggle = true, this.undoRedoMenu = true;
  }
};
e([y({ type: s6, nonNullable: true })], p3.prototype, "createTools", void 0), e([y({ type: Boolean, nonNullable: true })], p3.prototype, "directionModePicker", void 0), e([y({ type: Boolean, nonNullable: true })], p3.prototype, "duplicateButton", void 0), e([y({ type: Boolean, nonNullable: true })], p3.prototype, "labelsToggle", void 0), e([y({ type: i3, nonNullable: true })], p3.prototype, "selectionTools", void 0), e([y({ type: Boolean, nonNullable: true })], p3.prototype, "settingsMenu", void 0), e([y({ type: Boolean, nonNullable: true })], p3.prototype, "snappingControls", void 0), e([y({ type: s5, nonNullable: true })], p3.prototype, "snappingControlsElements", void 0), e([y({ type: Boolean, nonNullable: true })], p3.prototype, "tooltipsToggle", void 0), e([y({ type: Boolean, nonNullable: true })], p3.prototype, "undoRedoMenu", void 0), p3 = e([a("esri.widgets.Sketch.VisibleElements")], p3);
var r5 = p3;

// node_modules/@arcgis/core/views/overlay/OutlineOverlayItem.js
var h3 = class extends S {
  constructor(o6) {
    super(o6), this.coordinates = void 0, this.strokeDash = [], this.strokeWidth = 1, this.strokeColor = [0, 0, 0, 1], this.strokeDashColor = [255, 255, 255, 1], this.fillColor = [0, 0, 0, 0], this.visible = true, this.isDecoration = true;
  }
  get _strokeStyle() {
    const o6 = this.strokeColor;
    return `rgba(${o6[0]}, ${o6[1]}, ${o6[2]}, ${o6[3]})`;
  }
  get _strokeBackgroundStyle() {
    const o6 = this.strokeDashColor;
    return `rgba(${o6[0]}, ${o6[1]}, ${o6[2]}, ${o6[3]})`;
  }
  get _fillStyle() {
    const o6 = this.fillColor;
    return `rgba(${o6[0]}, ${o6[1]}, ${o6[2]}, ${o6[3]})`;
  }
  get _renderCoordinates() {
    const o6 = [];
    if (!this.coordinates)
      return { coordinates: o6, rect: K };
    const t = A2(h2(u2(K), this.coordinates), 2 * this.strokeWidth);
    t[0] = Math.floor(t[0]), t[1] = Math.floor(t[1]), t[2] = Math.ceil(t[2] + 0.5), t[3] = Math.ceil(t[3] + 0.5);
    for (const r6 of this.coordinates)
      o6.push([Math.floor(r6[0] - t[0]) + 0.5, Math.floor(r6[1] - t[1]) + 0.5]);
    return o6.reverse(), { coordinates: o6, rect: t };
  }
  render() {
    const { coordinates: o6, rect: t } = this._renderCoordinates, r6 = M(t), e6 = s3(t);
    return n2("div", { classes: { "esri-outline-overlay-item": true }, styles: { left: t[0] + "px", top: t[1] + "px", width: r6 + "px", height: e6 + "px", visibility: this.visible ? "visible" : "hidden" } }, n2("svg", { height: e6, styles: { display: "block" }, width: r6 }, n2("polygon", { fill: this._fillStyle, points: o6.map(([o7, t2]) => `${o7},${t2}`).join(" "), stroke: this._strokeBackgroundStyle, "stroke-width": this.strokeWidth }), n2("polygon", { fill: "transparent", points: o6.map(([o7, t2]) => `${o7},${t2}`).join(" "), stroke: this._strokeStyle, "stroke-dasharray": this.strokeDash.length ? this.strokeDash.join(" ") : void 0, "stroke-width": this.strokeWidth })));
  }
  renderCanvas() {
  }
};
e([y()], h3.prototype, "coordinates", void 0), e([y()], h3.prototype, "strokeDash", void 0), e([y()], h3.prototype, "strokeWidth", void 0), e([y()], h3.prototype, "strokeColor", void 0), e([y()], h3.prototype, "strokeDashColor", void 0), e([y()], h3.prototype, "fillColor", void 0), e([y()], h3.prototype, "visible", void 0), e([y()], h3.prototype, "isDecoration", void 0), e([y({ readOnly: true })], h3.prototype, "_strokeStyle", null), e([y({ readOnly: true })], h3.prototype, "_strokeBackgroundStyle", null), e([y({ readOnly: true })], h3.prototype, "_fillStyle", null), e([y({ readOnly: true })], h3.prototype, "_renderCoordinates", null), h3 = e([a("esri.views.overlay.OutlineOverlayItem")], h3);
var c2 = h3;

// node_modules/@arcgis/core/views/draw/DrawScreenTool.js
var y2 = class extends o3.EventedMixin(l2) {
  constructor(e6) {
    super(e6), this._overlayItem = void 0, this.geometryType = null, this.mode = null, this.type = "draw-screen";
  }
  initialize() {
    this.drawOperation = this._makeDrawOperation();
    const e6 = (e7) => this.drawOperation.on(e7, (t) => {
      this._updateVisuals(), this.emit(e7, t);
    });
    this.addHandles([e6("vertex-add"), e6("vertex-remove"), e6("vertex-update"), e6("cursor-update"), e6("complete")]), this.finishToolCreation();
  }
  destroy() {
    this.drawOperation = u(this.drawOperation), this._set("view", null);
  }
  get canRedo() {
    return this.drawOperation.canRedo;
  }
  get canUndo() {
    return this.drawOperation.canUndo;
  }
  set centeredToggled(e6) {
    this._set("centeredToggled", e6), this._updateVisuals();
  }
  set enabled(e6) {
    this.drawOperation.interactive = e6, this._set("enabled", e6);
  }
  set uniformSizeToggled(e6) {
    this._set("uniformSizeToggled", e6), this._updateVisuals();
  }
  get updating() {
    var _a;
    return ((_a = this.drawOperation) == null ? void 0 : _a.updating) ?? false;
  }
  get cursor() {
    return "point" === this.geometryType ? "default" : "crosshair";
  }
  completeCreateOperation() {
    this.drawOperation.complete();
  }
  onInputEvent(e6) {
    this.destroyed || this.drawOperation.onInputEvent(e6);
  }
  redo() {
    this.drawOperation.redo();
  }
  undo() {
    this.drawOperation.undo();
  }
  reset() {
  }
  _makeDrawOperation() {
    const { view: e6 } = this;
    return new L2({ view: e6, manipulators: this.manipulators, geometryType: v3(this.geometryType), drawingMode: this.mode, hasZ: false, defaultZ: 0, snapToSceneEnabled: false, drawSurface: new u4(), hasM: false, snappingManager: null, snappingVisualizer: null, graphic: null, cursor: this.cursor });
  }
  get coordinates() {
    var _a, _b, _c;
    const { drawOperation: e6 } = this;
    if (!(e6 == null ? void 0 : e6.geometryIncludingUncommittedVertices.length))
      return [];
    const { coordinateHelper: t } = e6, r6 = e6.committableVertex, o6 = e6.committedVertices.slice();
    null != r6 && o6.push(t.pointToArray(r6));
    const i4 = o6.length;
    switch (this.geometryType) {
      case "circle":
      case "rectangle": {
        const t2 = new W(o4, u4.spatialReference), r7 = "circle" === this.geometryType ? L : T, s7 = "circle" === this.geometryType ? v2 : b;
        if (1 === i4 && e6.isCompleted) {
          const e7 = o6[0], i5 = t2.makeMapPoint(e7[0] + w, e7[1]);
          return ((_a = r7([e7, i5], t2, true)) == null ? void 0 : _a.geometry.rings[0]) ?? [];
        }
        if (2 === i4) {
          const e7 = "rectangle" !== this.geometryType, i5 = this.centeredToggled !== e7, a5 = "rectangle" !== this.geometryType;
          return (this.uniformSizeToggled !== a5 ? (_b = r7(o6, t2, i5)) == null ? void 0 : _b.geometry.rings[0] : (_c = s7(o6, t2, i5)) == null ? void 0 : _c.geometry.rings[0]) ?? [];
        }
        return [];
      }
    }
    return o6;
  }
  _updateVisuals() {
    var _a;
    if (!this._overlayItem) {
      const e6 = new c2({ strokeDash: [5], strokeDashColor: [255, 255, 255, 255] });
      (_a = this.view.overlay) == null ? void 0 : _a.addItem(e6), this.addHandles(e2(() => {
        var _a2;
        (_a2 = this.view.overlay) == null ? void 0 : _a2.removeItem(e6), e6 == null ? void 0 : e6.destroy(), this._overlayItem = void 0;
      })), this._overlayItem = e6;
    }
    this._overlayItem.coordinates = this.coordinates;
  }
  onDeactivate() {
    this.drawOperation.isCompleted || this.drawOperation.cancel();
  }
};
function v3(e6) {
  switch (e6) {
    case "polygon":
    case "point":
      return e6;
    case "circle":
    case "rectangle":
      return "segment";
  }
}
e([y({ value: false })], y2.prototype, "centeredToggled", null), e([y()], y2.prototype, "drawOperation", void 0), e([y({ value: true })], y2.prototype, "enabled", null), e([y({ value: false })], y2.prototype, "uniformSizeToggled", null), e([y({ constructOnly: true })], y2.prototype, "geometryType", void 0), e([y({ constructOnly: true })], y2.prototype, "mode", void 0), e([y({ readOnly: true })], y2.prototype, "type", void 0), e([y({ readOnly: true })], y2.prototype, "updating", null), e([y({ constructOnly: true, nonNullable: true })], y2.prototype, "view", void 0), e([y()], y2.prototype, "cursor", null), y2 = e([a("esri.views.draw.DrawScreenTool")], y2);
var w = 48;

// node_modules/@arcgis/core/widgets/support/Selector2D/selectorUtils.js
async function y3() {
  return import("./geometryEngineJSON-EWTUNKPC.js");
}
async function d4() {
  return y3().then(({ contains: e6, intersects: r6, overlaps: t, simplify: s7 }) => ({ contains: e6, intersects: r6, overlaps: t, simplify: s7 }));
}
async function p4(r6) {
  const { currentSelection: t, selector: s7, signal: n3, sources: i4, view: a5 } = r6;
  if (!(i4 == null ? void 0 : i4.length))
    return { added: [], removed: [] };
  const { layers: l3, layerViews: o6, graphicsLayers: c3 } = w2(i4), u6 = (await h(Promise.all([m2(s7, l3, a5, n3), g(s7, o6, a5, n3), f(s7, c3, a5)]), n3)).flat();
  if (!t)
    return { added: u6, removed: [] };
  const y4 = t.toArray(), d6 = u6.filter((e6) => !v4(y4, e6)), p5 = y4.filter((e6) => !v4(u6, e6));
  return t.removeMany(p5), t.addMany(d6), { added: d6, removed: p5 };
}
var f = async (e6, r6, t) => b2({ candidates: r6.flatMap((e7) => e7.graphics.toArray()) ?? [], selector: e6, view: t });
var m2 = async (e6, t, s7, n3) => {
  const i4 = await d(F({ selector: e6, signal: n3, layers: t, view: s7 }));
  return i4 ? h4(i4) : [];
};
var g = async (e6, t, s7, n3) => {
  const i4 = await d(j2({ selector: e6, signal: n3, layerViews: t, view: s7 }));
  return i4 ? h4(i4) : [];
};
function h4(e6) {
  const r6 = [];
  for (let t = 0; t < e6.length; t++) {
    const s7 = e6[t];
    "fulfilled" === s7.status && r6.push(...s7.value);
  }
  return r6;
}
function w2(e6) {
  const r6 = [], t = [], o6 = [];
  return e6.forEach((e7) => {
    var _a, _b;
    r2(e7) ? r6.push(e7) : (s4(e7) || a3(e7)) && ((_a = e7.layers) == null ? void 0 : _a.length) ? r6.push(...e7.layers.toArray()) : u3(e7) && ((_b = e7.sublayers) == null ? void 0 : _b.length) ? o6.push(...e7.sublayers.toArray()) : i(e7) ? o6.push(e7) : i2(e7) && t.push(e7);
  }), { layers: r6, layerViews: t, graphicsLayers: o6 };
}
function v4(e6, r6) {
  if (e6.includes(r6))
    return true;
  const t = r6.getObjectId(), s7 = null != t, { layer: n3, uid: i4 } = r6;
  return s7 ? e6.some((e7) => {
    if (n3 === e7.layer)
      return t === e7.getObjectId();
  }) : e6.some((e7) => {
    if (n3 === e7.layer)
      return i4 === e7.uid;
  });
}
async function j2(r6) {
  const { layerViews: t, selector: s7, signal: n3, view: i4 } = r6;
  return h(Promise.allSettled(t.map(async (e6) => {
    const r7 = e6.createQuery(), { geometry: t2 } = S2(s7, e6.layer, i4);
    return r7.outFields = ["*"], r7.geometry = t2, r7.returnGeometry = true, r7.outSpatialReference = i4.spatialReference, e6.queryFeatures(r7, { signal: n3 }).then(({ features: e7 }) => e7);
  })), n3);
}
async function F(r6) {
  const { layers: t, selector: s7, signal: n3, view: i4 } = r6;
  return h(Promise.allSettled(t.map(async (e6) => e6.queryFeatures(U(e6.createQuery(), s7, e6, i4), { signal: n3 }).then(({ features: e7 }) => e7))), n3);
}
function S2(e6, r6, s7) {
  const n3 = "displayField" in r6 ? r6.displayField : null, i4 = _({ displayField: n3, fields: r6.fields }), a5 = [r6.objectIdField];
  null != i4 && r6.fieldsIndex.has(i4) && a5.push(i4);
  const l3 = "renderer" in r6 ? o5({ renderer: r6.renderer }) : 0;
  return { geometry: "point" === e6.type ? r3(e6, l3, s7) : e6, outFields: a5 };
}
function U(e6, r6, t, s7) {
  const { outFields: n3, geometry: i4 } = S2(r6, t, s7);
  return e6.outFields = n3, e6.geometry = i4, e6.returnGeometry = true, e6.outSpatialReference = s7.spatialReference, e6;
}
async function b2(e6) {
  const { selector: r6, candidates: t, view: s7 } = e6;
  if (!(t == null ? void 0 : t.length) || !r6)
    return [];
  const { spatialReference: n3 } = s7, i4 = r6, a5 = await d4();
  return t.filter((e7) => a5.intersects(n3, i4, e7.geometry));
}

// node_modules/@arcgis/core/widgets/support/Selector2D/SelectionOperation.js
var f2 = 100;
var v5 = class extends o3.EventedAccessor {
  constructor(e6) {
    super(e6), this._processTask = null, this.options = null, this.selection = new V(), this.sources = null, this._process = k(async (e7, t) => {
      const { callback: s7, selector: r6, completed: i4 } = e7, c3 = d2(async (e8) => {
        var _a;
        const { sources: o6, selection: t2, view: c4 } = this;
        if (!(!(o6 == null ? void 0 : o6.length) && !(c4 == null ? void 0 : c4.selectionManager.sources.length)) && c4) {
          if (r6 && null != o6) {
            const s8 = await p4({ currentSelection: t2, selector: r6, signal: e8, sources: o6, view: c4 });
            i4 && ((_a = c4.selectionManager) == null ? void 0 : _a.updateSelection({ current: t2.toArray(), ...s8 }));
          }
          s7 && s7();
        } else
          t2.removeAll();
      });
      return m(t, () => c3.abort()), this._processTask = c3, c3.promise;
    }, f2);
  }
  initialize() {
    this._setup();
  }
  cancel() {
    var _a;
    this.removeAllHandles(), (_a = this._processTask) == null ? void 0 : _a.abort();
  }
  async _setup() {
    const { view: e6 } = this;
    if (await e6.whenReady(), this.destroyed)
      return;
    const o6 = this.options, t = (o6 == null ? void 0 : o6.createTool) ?? "rectangle", s7 = (o6 == null ? void 0 : o6.mode) ?? ("polygon" === t ? "click" : "hybrid"), i4 = Symbol();
    this._tool = new y2({ view: e6, mode: s7, geometryType: t }), (o6 == null ? void 0 : o6.selectOnComplete) || this.addHandles(this._tool.on(["cursor-update", "vertex-add", "vertex-remove"], () => d(this._process({ selector: this._selectionArea }))), i4), this.addHandles([e6.on("key-down", (e7) => {
      if (!e7.repeat)
        switch (e7.key) {
          case p2.constraint:
            this._tool.uniformSizeToggled = true, e7.stopPropagation();
            break;
          case p2.center:
            this._tool.centeredToggled = true, e7.stopPropagation();
        }
    }), e6.on("key-up", (e7) => {
      switch (e7.key) {
        case p2.constraint:
          this._tool.uniformSizeToggled = false, e7.stopPropagation();
          break;
        case p2.center:
          this._tool.centeredToggled = false, e7.stopPropagation();
      }
    }), this._tool.on("complete", async (e7) => {
      this.removeHandles(i4);
      const o7 = () => {
        this.removeAllHandles(), this.emit("complete", { aborted: e7.aborted, selection: this.selection.toArray() });
      };
      e7.aborted ? (this.cancel(), this.selection.removeAll(), o7()) : await this._process({ selector: this._selectionArea, callback: o7, completed: true });
    })], i4), this.addHandles(e2(() => e6.tools.remove(this._tool))), e6.addAndActivateTool(this._tool);
  }
  get _selectionArea() {
    const e6 = c(), o6 = this._tool.coordinates, t = this.view.spatialReference, s7 = (o7) => {
      e6.x = o7[0], e6.y = o7[1];
      const { x: t2, y: s8 } = this.view.toMap(e6);
      return [t2, s8];
    };
    if (1 === o6.length) {
      const [e7, r7] = s7(o6[0]);
      return new x({ x: e7, y: r7, spatialReference: t });
    }
    const r6 = this._tool.coordinates.map(s7);
    if (0 === r6.length)
      return;
    a2(r6) || r6.reverse();
    return new j({ spatialReference: t, rings: [r6] });
  }
};
e([y()], v5.prototype, "options", void 0), e([y({ readOnly: true })], v5.prototype, "selection", void 0), e([y()], v5.prototype, "sources", void 0), e([y({ constructOnly: true })], v5.prototype, "view", void 0), v5 = e([a("esri.widgets.support.Selector2D.SelectionOperation")], v5);
var w3 = v5;

// node_modules/@arcgis/core/widgets/support/SelectionToolbar/SelectionToolbarViewModel.js
var d5 = class extends o3.EventedAccessor {
  constructor(e6) {
    super(e6), this._operationHandlesGroup = null, this.activeOperation = null, this.sources = null;
  }
  initialize() {
    this.addHandles([d3(() => this._sources, (e6) => {
      this.activeOperation && (this.activeOperation.sources = e6);
    })]);
  }
  destroy() {
    this._operationHandlesGroup = l(this._operationHandlesGroup);
  }
  get _sources() {
    const { sources: e6, view: t } = this;
    return t && (e6 == null ? void 0 : e6.length) ? e6.flatMap((e7) => {
      if (i2(e7))
        return e7;
      if (s4(e7) || a3(e7)) {
        const o7 = e7.layers || [], r6 = o7.map((e8) => {
          const o8 = r4(t, e8) || void 0;
          return i2(o8) ? o8 : e8;
        });
        return r6.length ? r6.toArray() : o7.length ? o7.toArray() : e7;
      }
      const o6 = r4(t, e7) || void 0;
      return i2(o6) ? o6 : e7;
    }) : [];
  }
  get layers() {
    return o(n.getLogger(this), "layers", { replacement: "Use SelectionToolbar.sources instead." }), this.sources;
  }
  set layers(e6) {
    o(n.getLogger(this), "layers", { replacement: "Use SelectionToolbar.sources instead." }), this.sources = e6;
  }
  get state() {
    const { _sources: e6, view: t } = this, o6 = !(e6 == null ? void 0 : e6.length) && !(t == null ? void 0 : t.selectionManager.sources.length);
    return this.activeOperation ? "active" : (t == null ? void 0 : t.ready) && !o6 ? "ready" : "disabled";
  }
  cancel() {
    var _a;
    "active" === this.state && ((_a = this.activeOperation) == null ? void 0 : _a.cancel(), this._set("activeOperation", null));
  }
  activate(e6) {
    const { _sources: t, state: o6, view: s7 } = this, i4 = !(t == null ? void 0 : t.length) && !(s7 == null ? void 0 : s7.selectionManager.sources.length);
    if ("disabled" === o6 || i4 || !this.view)
      return;
    "active" === o6 && this.cancel();
    const a5 = new w3({ view: this.view, sources: t, options: e6 });
    return this._operationHandlesGroup = o2([a5.selection.on("change", (e7) => this.emit("selection-change", e7)), a5.once("complete", (e7) => this._onOperationComplete(e7))]), this._set("activeOperation", a5), a5;
  }
  _onOperationComplete(e6) {
    this._operationHandlesGroup = l(this._operationHandlesGroup), this._set("activeOperation", null), this.emit("complete", e6);
  }
};
e([y()], d5.prototype, "_sources", null), e([y({ readOnly: true })], d5.prototype, "activeOperation", void 0), e([y()], d5.prototype, "layers", null), e([y()], d5.prototype, "sources", void 0), e([y({ readOnly: true })], d5.prototype, "state", null), e([y()], d5.prototype, "view", void 0), d5 = e([a("esri.widgets.support.SelectionToolbar.SelectionToolbarViewModel")], d5);
var v6 = d5;

// node_modules/@arcgis/core/widgets/support/SelectionToolbar.js
var u5 = { lassoTool: true, rectangleTool: true };
var v7 = { createTool: "polygon", mode: "freehand" };
var g2 = { createTool: "rectangle" };
var T2 = "esri-selection-toolbar";
var f3 = { base: T2, container: `${T2}__container`, toolButton: `${T2}__tool-button` };
var b3 = class extends D {
  constructor(e6, o6) {
    super(e6, o6), this._viewModelHandlesGroup = null, this.activeToolInfo = null, this.messages = null, this.toolConfigs = [], this.viewModel = new v6(), this.visibleElements = { ...u5 }, this._viewModelHandlesGroup = o2([this.viewModel.on("complete", (e7) => {
      this._set("activeToolInfo", null), this.emit("complete", e7);
    })]);
  }
  destroy() {
    this._viewModelHandlesGroup = l(this._viewModelHandlesGroup);
  }
  loadDependencies() {
    return r({ action: () => import("./calcite-action-P2CTRNG2.js"), icon: () => import("./calcite-icon-25XWA6H7.js") });
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e6) {
    this._overrideIfSome("label", e6);
  }
  get layers() {
    return o(n.getLogger(this), "layers", { replacement: "Use SelectionToolbar.sources instead." }), this.viewModel.sources;
  }
  set layers(e6) {
    o(n.getLogger(this), "layers", { replacement: "Use SelectionToolbar.sources instead." }), this.viewModel.sources = e6;
  }
  get sources() {
    return this.viewModel.sources;
  }
  set sources(e6) {
    this.viewModel.sources = e6;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e6) {
    this.viewModel.view = e6;
  }
  castVisibleElements(e6) {
    return { ...u5, ...e6 };
  }
  get visibleToolCount() {
    const { view: e6, toolConfigs: o6, visibleElements: t } = this;
    return ((o6 == null ? void 0 : o6.length) ?? 0) + ("2d" === (e6 == null ? void 0 : e6.type) ? (t.lassoTool ? 1 : 0) + (t.rectangleTool ? 1 : 0) : 0);
  }
  activate(e6) {
    if (this.cancel(), "disabled" !== this.viewModel.state)
      switch (e6) {
        case "lasso":
          this._activateTool("lasso");
          break;
        case "rectangle":
          this._activateTool("rectangle");
          break;
        default:
          this._activateTool(e6);
      }
  }
  cancel() {
    this.viewModel.cancel(), this._set("activeToolInfo", null);
  }
  render() {
    return n2("div", { "aria-label": this.label, class: this.classes(f3.base, e4.widget) }, n2("div", { class: f3.container }, this._renderDefaultTools(), this._renderCustomTools()));
  }
  _renderDefaultTools() {
    var _a;
    if ("2d" === ((_a = this.view) == null ? void 0 : _a.type))
      return [this._renderRectangleTool(), this._renderLassoTool()];
  }
  _renderCustomTools() {
    var _a;
    if ((_a = this.toolConfigs) == null ? void 0 : _a.length)
      return this.toolConfigs.map(({ toolName: e6, icon: o6 }) => {
        var _a2;
        return n2("calcite-action", { active: ((_a2 = this.activeToolInfo) == null ? void 0 : _a2.toolName) === e6, bind: this, class: f3.toolButton, disabled: "disabled" === this.viewModel.state, onclick: () => this._onCustomToolClick(e6), scale: "s", text: e6, title: e6 }, n2("calcite-icon", { icon: o6 || "selection", scale: "s" }));
      });
  }
  _renderLassoTool() {
    const { activeToolInfo: e6, messages: o6, visibleElements: t } = this;
    if (!t.lassoTool)
      return;
    const s7 = o6.selectByLasso;
    return n2("calcite-action", { active: "lasso" === (e6 == null ? void 0 : e6.toolName), bind: this, disabled: "disabled" === this.viewModel.state, onclick: this._onLassoToolClick, scale: "s", text: s7, title: s7 }, n2("calcite-icon", { icon: "lasso-select", scale: "s" }));
  }
  _renderRectangleTool() {
    const { activeToolInfo: e6, messages: o6, visibleElements: t } = this;
    if (!t.rectangleTool)
      return;
    const s7 = o6.selectByRectangle;
    return n2("calcite-action", { active: "rectangle" === (e6 == null ? void 0 : e6.toolName), bind: this, disabled: "disabled" === this.viewModel.state, onclick: this._onRectangleToolClick, scale: "s", text: s7, title: s7 }, n2("calcite-icon", { icon: "cursor-marquee", scale: "s" }));
  }
  _onCustomToolClick(e6) {
    this._toggleTool(e6);
  }
  _onLassoToolClick() {
    this._toggleTool("lasso");
  }
  _onRectangleToolClick() {
    this._toggleTool("rectangle");
  }
  _activateTool(e6) {
    const o6 = this._getToolOptions(e6);
    if (!o6)
      return;
    const t = this.viewModel.activate(o6);
    t && this._set("activeToolInfo", { toolName: e6, operation: t });
  }
  _toggleTool(e6) {
    if (this.activeToolInfo) {
      const o6 = this.activeToolInfo.toolName;
      if (this.cancel(), o6 === e6)
        return;
    }
    this._activateTool(e6);
  }
  _getToolOptions(e6) {
    return "lasso" === e6 ? v7 : "rectangle" === e6 ? g2 : this.toolConfigs.find((o6) => o6.toolName === e6);
  }
};
e([y({ readOnly: true })], b3.prototype, "activeToolInfo", void 0), e([y()], b3.prototype, "label", null), e([y()], b3.prototype, "layers", null), e([y(), e3("esri/widgets/support/SelectionToolbar/t9n/SelectionToolbar")], b3.prototype, "messages", void 0), e([y()], b3.prototype, "sources", null), e([y()], b3.prototype, "toolConfigs", void 0), e([y()], b3.prototype, "view", null), e([y()], b3.prototype, "viewModel", void 0), e([y()], b3.prototype, "visibleElements", void 0), e([s("visibleElements")], b3.prototype, "castVisibleElements", null), e([y()], b3.prototype, "visibleToolCount", null), b3 = e([a("esri.widgets.support.SelectionToolbar")], b3);
var _2 = b3;

// node_modules/@arcgis/core/widgets/Sketch.js
var O = "esri-sketch";
var S3 = { base: O, verticalLayout: `${O}--vertical`, panel: `${O}__panel`, infoPanel: `${O}__info-panel`, section: `${O}__section`, toolSection: `${O}__tool-section`, infoSection: `${O}__info-section`, infoCountSection: `${O}__info-count-section`, menuContainer: `${O}__menu-container`, menuHeader: `${O}__menu-header`, menuTitle: `${O}__menu-title`, featureCountBadge: `${O}__feature-count-badge`, featureCountText: `${O}__feature-count-text`, featureCountNumber: `${O}__feature-count-number`, actionToggle: `${O}__action-toggle`, actionToggleOn: `${O}__action-toggle--on`, actionTitle: `${O}__item-action-title`, actionIcon: `${O}__item-action-icon` };
var k3 = class extends D {
  constructor(e6, t) {
    super(e6, t), this._activeCreateOptions = null, this._menuOpen = false, this._selectionToolbar = null, this._viewModelHandlesGroup = null, this.availableCreateTools = ["point", "polyline", "polygon", "rectangle", "circle"], this.creationMode = "continuous", this.layout = "horizontal", this.messages = null, this.messagesCommon = null, this.visibleElements = new r5(), this._activateCreateTool = this._activateCreateTool.bind(this), this.viewModel = (e6 == null ? void 0 : e6.viewModel) || new pe();
  }
  initialize() {
    const { layer: e6, view: i4 } = this, s7 = new _2({ view: "2d" === (i4 == null ? void 0 : i4.type) ? i4 : null, sources: e6 ? [e6] : null });
    this.addHandles([d3(() => this.viewModel, (e7) => {
      this._viewModelHandlesGroup = l(this._viewModelHandlesGroup), e7 && (this._viewModelHandlesGroup = o2([e7.on("create", (e8) => {
        this.scheduleRender(), this._onCreateOperation(e8);
      }), e7.on("update", () => this.scheduleRender()), e7.on("delete", (e8) => this.emit("delete", e8)), e7.on("undo", () => this.scheduleRender()), e7.on("redo", () => this.scheduleRender()), d3(() => e7.layer, (e8) => {
        this._selectionToolbar && (this._selectionToolbar.sources = e8 ? [e8] : null);
      }), d3(() => e7.view, (e8) => {
        this._selectionToolbar && (this._selectionToolbar.view = "2d" === (e8 == null ? void 0 : e8.type) ? e8 : null);
      }), d3(() => e7.state, () => this.notifyChange("state"))]));
    }, A), p(() => s7.activeToolInfo, () => this.viewModel.cancel()), s7.on("complete", (e7) => this._onSelectionOperationComplete(e7)), d3(() => {
      const { selectionTools: e7 } = this.visibleElements;
      return { lassoTool: !!(e7 == null ? void 0 : e7["lasso-selection"]), rectangleTool: !!(e7 == null ? void 0 : e7["rectangle-selection"]) };
    }, (e7) => {
      Object.assign(s7.visibleElements, e7);
    }, A)]), this._selectionToolbar = s7;
  }
  loadDependencies() {
    return r({ action: () => import("./calcite-action-P2CTRNG2.js"), icon: () => import("./calcite-icon-25XWA6H7.js") });
  }
  destroy() {
    var _a;
    (_a = this._selectionToolbar) == null ? void 0 : _a.destroy(), this._viewModelHandlesGroup = l(this._viewModelHandlesGroup);
  }
  get activeTool() {
    var _a;
    const e6 = (_a = this._selectionToolbar) == null ? void 0 : _a.activeToolInfo;
    if (e6)
      switch (e6.toolName) {
        case "lasso":
          return "lasso-selection";
        case "rectangle":
          return "rectangle-selection";
        case "default":
          return "custom-selection";
      }
    return this.viewModel.activeTool;
  }
  get createGraphic() {
    return this.viewModel.createGraphic;
  }
  get defaultCreateOptions() {
    return this.viewModel.defaultCreateOptions;
  }
  set defaultCreateOptions(e6) {
    this.viewModel.defaultCreateOptions = e6;
  }
  get defaultUpdateOptions() {
    return this.viewModel.defaultUpdateOptions;
  }
  set defaultUpdateOptions(e6) {
    this.viewModel.defaultUpdateOptions = e6;
  }
  get icon() {
    return "pencil";
  }
  set icon(e6) {
    this._overrideIfSome("icon", e6);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e6) {
    this._overrideIfSome("label", e6);
  }
  get labelOptions() {
    return this.viewModel.labelOptions;
  }
  set labelOptions(e6) {
    this.viewModel.labelOptions = e6;
  }
  get layer() {
    return this.viewModel.layer;
  }
  set layer(e6) {
    this.viewModel.layer = e6;
  }
  get snappingOptions() {
    return this.viewModel.snappingOptions;
  }
  set snappingOptions(e6) {
    this.viewModel.snappingOptions = e6;
  }
  get state() {
    var _a;
    return ((_a = this._selectionToolbar) == null ? void 0 : _a.activeToolInfo) ? "active" : this.viewModel.state;
  }
  get tooltipOptions() {
    return this.viewModel.tooltipOptions;
  }
  set tooltipOptions(e6) {
    this.viewModel.tooltipOptions = e6;
  }
  get updateGraphics() {
    return this.viewModel.updateGraphics;
  }
  get valueOptions() {
    return this.viewModel.valueOptions;
  }
  set valueOptions(e6) {
    this.viewModel.valueOptions = e6;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e6) {
    this.viewModel.view = e6;
  }
  set viewModel(e6) {
    const t = this._get("viewModel");
    e6 !== t && (t && u(t), this._set("viewModel", e6));
  }
  get _effectiveAvailableCreateTools() {
    const { availableCreateTools: e6, visibleElements: t } = this;
    return e6 == null ? void 0 : e6.filter((e7) => {
      var _a;
      return !!((_a = t.createTools) == null ? void 0 : _a[e7]);
    });
  }
  create(e6, t) {
    return this._activeCreateOptions = t || null, d(this.viewModel.create(e6, t));
  }
  update(e6, t) {
    return d(this.viewModel.update(e6, t));
  }
  complete() {
    this.viewModel.complete();
  }
  cancel() {
    var _a;
    (_a = this._selectionToolbar) == null ? void 0 : _a.cancel(), this.viewModel.cancel();
  }
  undo() {
    var _a;
    this.viewModel.undo(), (_a = this.view) == null ? void 0 : _a.focus();
  }
  redo() {
    var _a;
    this.viewModel.redo(), (_a = this.view) == null ? void 0 : _a.focus();
  }
  delete() {
    this.viewModel.delete();
  }
  duplicate() {
    return this.viewModel.duplicate();
  }
  render() {
    const { label: e6, layout: t, viewModel: { state: o6 } } = this;
    return n2("div", { "aria-label": e6, class: this.classes(S3.base, e4.widget, { [e4.disabled]: "disabled" === o6, [S3.verticalLayout]: "vertical" === t }) }, n2("div", { class: S3.panel, role: "toolbar" }, this._renderTopPanelContents()), n2("div", { class: this.classes(S3.panel, S3.infoPanel) }, this._renderInfoPanelContents()));
  }
  _renderTopPanelContents() {
    var _a;
    const e6 = this.classes(S3.section, S3.toolSection), { _effectiveAvailableCreateTools: t, visibleElements: o6, viewModel: i4 } = this;
    return [i4.updateOnGraphicClick || ((_a = this._selectionToolbar) == null ? void 0 : _a.visibleToolCount) ? n2("div", { class: e6, key: "selection-button-container", role: "menu" }, this._renderDefaultSelectionButton(), this._renderSelectionToolbar()) : null, (t == null ? void 0 : t.length) ? n2("div", { class: e6, role: "menu" }, this._renderDrawActions()) : null, o6.undoRedoMenu ? n2("div", { class: e6, key: "undo-redo-menu-button-container", role: "menu" }, this._renderUndoRedoMenuButtons()) : null, o6.settingsMenu ? n2("div", { class: S3.section, key: "settings-menu-button-container" }, this._renderSettingsMenuButton()) : null];
  }
  _renderInfoPanelContents() {
    return this._menuOpen ? this._renderSettingsMenu() : this.updateGraphics.length ? [n2("div", { class: this.classes(S3.section, S3.infoSection, S3.infoCountSection), key: "feature-count-container" }, this._renderFeatureCount()), n2("div", { class: this.classes(S3.section, S3.infoSection), key: "delete-button-container" }, this._renderDuplicateButton(), this._renderDeleteButton())] : void 0;
  }
  _renderSettingsMenu() {
    const { messagesCommon: e6, snappingOptions: t, view: o6, viewModel: i4, visibleElements: s7 } = this, n3 = { directionModePicker: s7.directionModePicker, labelsToggle: s7.labelsToggle, tooltipsToggle: s7.tooltipsToggle };
    return n2("div", { class: S3.menuContainer, "data-testid": "menu", key: "settings-menu-container", role: "menu" }, n2("header", { class: S3.menuHeader, key: "settings-menu-header" }, n2("span", { class: S3.menuTitle }, e6.settings)), q(n3) ? n2(k2, { sketchOptions: i4.sketchOptions, viewType: o6 == null ? void 0 : o6.type, visibleElements: n3 }) : void 0, s7.snappingControls && o6 && t ? n2(L3, { snappingOptions: t, view: o6, visibleElements: s7.snappingControlsElements }) : void 0);
  }
  _renderFeatureCount() {
    const { layout: e6, messages: t, updateGraphics: { length: o6 } } = this, i4 = s2(t.selectedCount, { count: o6 });
    return n2("div", { "aria-label": i4, class: S3.featureCountBadge }, n2("span", { class: S3.featureCountNumber }, "vertical" === e6 ? o6 : i4));
  }
  _renderDuplicateButton() {
    if (!this.visibleElements.duplicateButton)
      return;
    const e6 = this.messages, t = this.updateGraphics.length > 1 ? e6.duplicateFeatures : e6.duplicateFeature;
    return n2("calcite-action", { bind: this, onclick: this._onDuplicateSelect, scale: "s", text: t, title: t }, n2("calcite-icon", { icon: "copy", scale: "s" }));
  }
  _renderDeleteButton() {
    const e6 = this.messages, t = this.updateGraphics.length > 1 ? e6.deleteFeatures : e6.deleteFeature;
    return n2("calcite-action", { bind: this, onclick: this.delete, scale: "s", text: t, title: t }, n2("calcite-icon", { icon: "trash", scale: "s" }));
  }
  _renderDefaultSelectionButton() {
    if (!this.viewModel.updateOnGraphicClick)
      return;
    const { messages: e6, state: t } = this, o6 = e6.selectFeature;
    return n2("calcite-action", { active: "ready" === t, bind: this, disabled: "disabled" === t, onclick: this._activateDefaultSelectTool, scale: "s", text: o6, title: o6 }, n2("calcite-icon", { icon: "cursor", scale: "s" }));
  }
  _renderSelectionToolbar() {
    var _a;
    if ("2d" === ((_a = this.view) == null ? void 0 : _a.type) && this._selectionToolbar)
      return this._selectionToolbar.render();
  }
  _renderDrawActions() {
    var _a;
    const { messages: e6 } = this;
    return (_a = this._effectiveAvailableCreateTools) == null ? void 0 : _a.map((t) => {
      switch (t) {
        case "point":
          return this._renderAction(t, e6.drawPoint, "pin");
        case "polyline":
          return this._renderAction(t, e6.drawPolyline, "line");
        case "polygon":
          return this._renderAction(t, e6.drawPolygon, "polygon");
        case "rectangle":
          return this._renderAction(t, e6.drawRectangle, "rectangle");
        case "circle":
          return this._renderAction(t, e6.drawCircle, "circle");
        default:
          return;
      }
    });
  }
  _renderAction(e6, t, o6) {
    return n2("calcite-action", { active: this.activeTool === e6, bind: this, disabled: "disabled" === this.state, onclick: () => this._activateCreateTool(e6), scale: "s", text: t, title: t }, n2("calcite-icon", { icon: o6, scale: "s" }));
  }
  _renderUndoRedoMenuButtons() {
    return [this._renderUndoButton(), this._renderRedoButton()];
  }
  _renderUndoButton() {
    const e6 = this.messages.undo;
    return n2("calcite-action", { bind: this, disabled: !this.viewModel.canUndo() || "disabled" === this.state, onclick: this.undo, scale: "s", text: e6, title: e6 }, n2("calcite-icon", { icon: v(this.container) ? "redo" : "undo", scale: "s" }));
  }
  _renderRedoButton() {
    const e6 = this.messages.redo;
    return n2("calcite-action", { bind: this, disabled: !this.viewModel.canRedo() || "disabled" === this.state, onclick: this.redo, scale: "s", text: e6, title: e6 }, n2("calcite-icon", { icon: v(this.container) ? "undo" : "redo", scale: "s" }));
  }
  _renderSettingsMenuButton() {
    const e6 = this.messagesCommon.settings;
    return n2("calcite-action", { active: this._menuOpen, bind: this, "data-testid": "settings-menu-action", disabled: "disabled" === this.state, onclick: this._toggleMenu, scale: "s", text: e6, title: e6 }, n2("calcite-icon", { icon: "gear", scale: "s" }));
  }
  _activateCreateTool(e6) {
    var _a;
    this.activeTool !== e6 ? ((_a = this._selectionToolbar) == null ? void 0 : _a.cancel(), this.create(e6)) : this.cancel();
  }
  _onCreateOperation(e6) {
    if ("complete" !== e6.state)
      return;
    const { creationMode: t } = this, { type: o6 } = e6;
    if ("create" === o6) {
      const { tool: o7, graphic: i4 } = e6, s7 = this._activeCreateOptions;
      this._activeCreateOptions = null, "continuous" === t ? this.create(o7, s7) : "update" === t && this.update([i4]);
    }
  }
  _toggleMenu() {
    this._menuOpen = !this._menuOpen, this.scheduleRender();
  }
  _onDuplicateSelect() {
    const e6 = this.duplicate(), t = this.viewModel.activeTool;
    "transform" !== t && "reshape" !== t || this.update(e6, { tool: t });
  }
  _onSelectionOperationComplete(e6) {
    const { viewModel: { defaultUpdateOptions: t } } = this, { selection: o6 } = e6;
    if (!e6.aborted && o6.length) {
      const e7 = t.tool, i4 = o6.length > 1 && "reshape" === e7 ? "transform" : e7;
      this.update(o6, { ...t, tool: i4 });
    }
    this.notifyChange("state");
  }
  _activateDefaultSelectTool() {
    var _a;
    this.cancel(), (_a = this.view) == null ? void 0 : _a.focus();
  }
};
e([y()], k3.prototype, "activeTool", null), e([y({ cast: (e6) => {
  if (!(e6 == null ? void 0 : e6.length))
    return null;
  const t = /* @__PURE__ */ new Set(["point", "polyline", "polygon", "rectangle", "circle"]);
  return e6.filter((e7) => t.has(e7));
} })], k3.prototype, "availableCreateTools", void 0), e([y({ readOnly: true })], k3.prototype, "createGraphic", null), e([y()], k3.prototype, "creationMode", void 0), e([y()], k3.prototype, "defaultCreateOptions", null), e([y()], k3.prototype, "defaultUpdateOptions", null), e([y()], k3.prototype, "icon", null), e([y()], k3.prototype, "label", null), e([y()], k3.prototype, "labelOptions", null), e([y()], k3.prototype, "layer", null), e([y({ type: ["horizontal", "vertical"] })], k3.prototype, "layout", void 0), e([y(), e3("esri/widgets/Sketch/t9n/Sketch")], k3.prototype, "messages", void 0), e([y(), e3("esri/t9n/common")], k3.prototype, "messagesCommon", void 0), e([y()], k3.prototype, "snappingOptions", null), e([y()], k3.prototype, "state", null), e([y()], k3.prototype, "tooltipOptions", null), e([y({ readOnly: true })], k3.prototype, "updateGraphics", null), e([y({ type: a4, nonNullable: true })], k3.prototype, "valueOptions", null), e([y()], k3.prototype, "view", null), e([y(), e5(["create", "update", "undo", "redo"])], k3.prototype, "viewModel", null), e([y({ type: r5, nonNullable: true })], k3.prototype, "visibleElements", void 0), e([y()], k3.prototype, "_effectiveAvailableCreateTools", null), k3 = e([a("esri.widgets.Sketch")], k3);
var j3 = k3;
export {
  j3 as default
};
//# sourceMappingURL=Sketch-7WI2VYCD.js.map
