import {
  I as I2
} from "./chunk-5M7PURL4.js";
import "./chunk-G7RYWCEO.js";
import "./chunk-EVB3GIFQ.js";
import {
  f as f2,
  i as i6,
  t as t5,
  x as x2
} from "./chunk-Q2ACSSMW.js";
import {
  o as o2
} from "./chunk-J6WYS6OG.js";
import {
  s as s4
} from "./chunk-52QXS2S5.js";
import {
  a as a4
} from "./chunk-BZ24WJCW.js";
import {
  l as l3
} from "./chunk-ARNGZTAW.js";
import "./chunk-LARO5FBS.js";
import "./chunk-GN2OLKIL.js";
import {
  G,
  e as e9,
  i as i5
} from "./chunk-46T3D2EU.js";
import "./chunk-RYF27IO3.js";
import "./chunk-5MKTGTC4.js";
import "./chunk-7UDCRD5C.js";
import "./chunk-B3GKRGWX.js";
import "./chunk-FN7LLNVA.js";
import "./chunk-BR3PF5YD.js";
import {
  t as t4
} from "./chunk-2NDIVJST.js";
import "./chunk-TACIE3AK.js";
import {
  a as a3,
  i as i4,
  l as l2
} from "./chunk-OOS2G3OW.js";
import {
  t as t3
} from "./chunk-CMLG62TA.js";
import {
  n as n6
} from "./chunk-SPU25K6A.js";
import "./chunk-P257AUOX.js";
import {
  u as u5
} from "./chunk-NGAYW4TW.js";
import "./chunk-BQGPMKNK.js";
import "./chunk-KWLN46JY.js";
import {
  A,
  p
} from "./chunk-M6P775BS.js";
import "./chunk-J5F4VILS.js";
import {
  N as N2
} from "./chunk-XVQGALI7.js";
import "./chunk-XFQIXBHG.js";
import "./chunk-MVSN2HAN.js";
import "./chunk-7A5N7G2Z.js";
import "./chunk-HHTLQ7O6.js";
import "./chunk-FIHLU3LF.js";
import "./chunk-H6MCGW3O.js";
import "./chunk-OM7WUMCL.js";
import "./chunk-J54I3TB7.js";
import "./chunk-MDXZIVBP.js";
import "./chunk-7W5MWPC6.js";
import "./chunk-OE52KVBM.js";
import "./chunk-L577YNYZ.js";
import "./chunk-GL5TSVQL.js";
import "./chunk-FD7NY4JS.js";
import "./chunk-ZQTY6DQZ.js";
import "./chunk-ITCKUEVD.js";
import "./chunk-TYYN3C37.js";
import "./chunk-OBABKQ6S.js";
import {
  d as d3
} from "./chunk-4GGEQMYI.js";
import "./chunk-A47N2JLN.js";
import "./chunk-GQP7H7SM.js";
import "./chunk-ZPC74XHC.js";
import "./chunk-IVGJRGD2.js";
import "./chunk-JA2AO4PC.js";
import "./chunk-MTLWPXQD.js";
import "./chunk-ECIXBYOQ.js";
import "./chunk-5MQ4HAUX.js";
import "./chunk-XIWETS2Q.js";
import "./chunk-2DATALUO.js";
import "./chunk-LOPMLCHC.js";
import "./chunk-JIR2YP6A.js";
import "./chunk-JBF6CULO.js";
import "./chunk-DRCNNCTI.js";
import "./chunk-GMUCR2DJ.js";
import "./chunk-HBRJJENW.js";
import "./chunk-VHY5K2VE.js";
import "./chunk-6ENXMQPD.js";
import "./chunk-FV43HSGW.js";
import "./chunk-MEEG7XMI.js";
import "./chunk-LJULTBAY.js";
import "./chunk-FD4DXBZA.js";
import "./chunk-ZFR4QMZ5.js";
import "./chunk-R2MAAYED.js";
import "./chunk-B7M5G3J5.js";
import "./chunk-7QHIE4SQ.js";
import "./chunk-6MGK5WBT.js";
import "./chunk-HSOVRETF.js";
import "./chunk-CPZW2LMK.js";
import "./chunk-QR7J3YDY.js";
import "./chunk-GO2OGJDG.js";
import "./chunk-UYMREM3D.js";
import {
  e as e7
} from "./chunk-CXP4BHPO.js";
import {
  N,
  S as S2,
  a as a2,
  d as d2,
  e as e8,
  g as g2,
  i as i3,
  m,
  n as n5,
  r as r2,
  t as t2
} from "./chunk-K2JNKW46.js";
import "./chunk-JTUYA5FE.js";
import "./chunk-UNTQATE2.js";
import "./chunk-5YY6NZNY.js";
import "./chunk-YUWVLORR.js";
import {
  c as c2
} from "./chunk-3GY64OYE.js";
import "./chunk-UNTPHF5R.js";
import "./chunk-YJFPDMSR.js";
import "./chunk-I4SHZ6P5.js";
import "./chunk-YH3SFFF7.js";
import "./chunk-H7T5AB2S.js";
import {
  D,
  E as E2
} from "./chunk-WKVHVZW2.js";
import "./chunk-33LWZO2E.js";
import "./chunk-3IDXRFXE.js";
import "./chunk-RLZYC2LS.js";
import {
  e as e6,
  s as s3,
  u as u3
} from "./chunk-TXLJQAAN.js";
import "./chunk-YF5E2R37.js";
import {
  B,
  E,
  L,
  O,
  c,
  g,
  i as i2,
  k,
  u as u4,
  x
} from "./chunk-IRL6OOVK.js";
import "./chunk-3AIILHI5.js";
import {
  w
} from "./chunk-SA77Z3WI.js";
import "./chunk-AL5NKCU5.js";
import "./chunk-6MBDB46F.js";
import {
  n as n3
} from "./chunk-D56W4LPT.js";
import "./chunk-BKOYOJBG.js";
import "./chunk-7JR6S3WL.js";
import "./chunk-CSSLIU64.js";
import "./chunk-CJNDQ2LH.js";
import "./chunk-B4E4X2TN.js";
import "./chunk-HS6YI5DU.js";
import "./chunk-CDBOQCLE.js";
import "./chunk-RSRUEM5U.js";
import "./chunk-HFJMEXIX.js";
import "./chunk-VYSGSKHB.js";
import "./chunk-DGJJJ2DD.js";
import "./chunk-UAFQMHYI.js";
import "./chunk-IDPLBNJX.js";
import "./chunk-ZHAZR5C3.js";
import "./chunk-P4MNTMCZ.js";
import "./chunk-BSPKLAHD.js";
import {
  J
} from "./chunk-GPWQGIYV.js";
import {
  l
} from "./chunk-WZJNHZ6H.js";
import "./chunk-XMYPMIYH.js";
import "./chunk-FQLGRQKL.js";
import "./chunk-YBPOKK6D.js";
import "./chunk-LQBHIBXV.js";
import {
  t
} from "./chunk-42DUJ2CX.js";
import "./chunk-B35SNV2V.js";
import "./chunk-Z2F5OKVA.js";
import "./chunk-UQA6M3KF.js";
import {
  e as e5
} from "./chunk-GLF3KRAL.js";
import "./chunk-ZLQTPFTL.js";
import {
  R
} from "./chunk-WIVZ7SMV.js";
import "./chunk-O76UVYOO.js";
import "./chunk-QCMUK3QA.js";
import {
  n as n4,
  s as s2
} from "./chunk-HZSGATFT.js";
import "./chunk-KNMQQRV7.js";
import {
  e as e3
} from "./chunk-N5GQOIDP.js";
import {
  e as e4,
  o
} from "./chunk-NFB6O77E.js";
import {
  r
} from "./chunk-AKEHDP75.js";
import "./chunk-5MMGIT64.js";
import "./chunk-SCHTG6ZQ.js";
import {
  f
} from "./chunk-QYC3GV65.js";
import "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import "./chunk-S5I4QKJD.js";
import {
  I,
  i
} from "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-VTH4DAHQ.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import {
  S,
  u as u2
} from "./chunk-JZBR4X6W.js";
import {
  e as e2,
  n as n2
} from "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import {
  T2 as T
} from "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import {
  P,
  d
} from "./chunk-Z4Y53NDM.js";
import "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  v,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import "./chunk-JGDJR5EV.js";
import {
  u
} from "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/views/3d/layers/IntegratedMesh3DTilesViewPerformanceInfo.js
var t6 = class extends t3 {
  constructor(e10, t7, s5, r3, o3, h, c3) {
    super(e10, 0, 0, 0, t7), this.nodesCached = s5, this.vboMB = r3, this.textureMB = o3, this.vboMBCached = h, this.textureMBCached = c3;
  }
};

// node_modules/@arcgis/core/views/3d/layers/support/lyr3dTypeConversions.js
var l4 = { [r2.Points]: null, [r2.Lines]: null, [r2.LineStrip]: null, [r2.Triangles]: E2.TRIANGLES, [r2.TriangleStrip]: E2.TRIANGLE_STRIP, [r2.NotSet]: null };
var T2 = { [a2.Opaque]: s3.Opaque, [a2.Mask]: s3.Mask, [a2.Blend]: s3.Blend };
var P2 = { [S2.Back]: e6.Back, [S2.Front]: e6.Front, [S2.None]: e6.None, [S2.NotSet]: e6.Back };
var _ = { [N.WrapYBit]: { s: D.CLAMP_TO_EDGE, t: D.REPEAT }, [N.WrapXBit]: { s: D.REPEAT, t: D.CLAMP_TO_EDGE }, [N.WrapXy]: { s: D.REPEAT, t: D.REPEAT }, [N.None]: { s: D.CLAMP_TO_EDGE, t: D.CLAMP_TO_EDGE }, [N.NotSet]: { s: D.CLAMP_TO_EDGE, t: D.CLAMP_TO_EDGE } };
var A2 = { [e8.U8]: 1, [e8.I8]: 1, [e8.U16]: 2, [e8.I16]: 2, [e8.U32]: 4, [e8.I32]: 4, [e8.F32]: 4, [e8.F64]: 8, [e8.Utf8String]: 1, [e8.NotSet]: 1 };

// node_modules/@arcgis/core/views/3d/layers/support/Tiles3DIntersectionHandler.js
var l5 = class {
  constructor(e10) {
    this.layerUid = [], this.type = i5.TILES3D, this.slicePlaneEnabled = false, this.isGround = true, this.layerView = e10, this.layerUid.push(e10.layer.uid);
  }
  intersect(e10, r3, l6, o3) {
    const a5 = e10.results, c3 = e10.options.store === e9.ALL;
    if (e10.options.filteredLayerUids.includes(this.layerView.layer.uid))
      return;
    const u6 = this.layerView.view._stage.renderView.componentObjectCollection, d4 = new p(false, e10.options.normalRequired);
    this.layerView.objects.forEach((s5) => {
      s5.visible && s5.intersectionGeometry && u6.intersect(s5, l6, o3, e10.tolerance, null, d4, (s6, n7, u7, d5) => {
        if (n7 >= 0) {
          if (null != r3 && !r3(l6, o3, n7))
            return;
          const s7 = (e11) => {
            const t7 = new l3(this.layerView.layer.uid, () => this._createTiles3DGraphic(this.layerView.layer, {}));
            e11.set(this.type, t7, n7, u7);
          };
          if (this.isGround && (null == a5.ground.dist || n7 < a5.ground.dist) && s7(a5.ground), e10.options.isFiltered)
            return;
          if ((null == a5.min.dist || n7 < a5.min.dist) && s7(a5.min), (null == a5.max.dist || n7 > a5.max.dist) && s7(a5.max), c3) {
            const i7 = G(e10.ray);
            s7(i7), e10.results.all.push(i7);
          }
        }
      });
    });
  }
  _createTiles3DGraphic(i7, t7) {
    return new f({ layer: i7, sourceLayer: i7, attributes: t7 });
  }
};

// node_modules/@arcgis/core/views/3d/layers/IntegratedMesh3DTilesLayerView3D.js
var je;
!function(e10) {
  e10[e10.API = 1] = "API", e10[e10.VerboseAPI = 2] = "VerboseAPI", e10[e10.Error = 3] = "Error";
}(je || (je = {}));
var Ce = class {
  constructor() {
    this.handle = 0, this.isVisible = false, this.components = [], this.texMemoryUsage = 0, this.vboMemoryUsage = 0, this.cpuMemoryUsage = 0, this.textures = [];
  }
  totalMemory() {
    return this.texMemoryUsage + this.vboMemoryUsage + this.cpuMemoryUsage;
  }
};
function Te(e10) {
  return Math.round(e10 / 1048.576) / 1e3;
}
var Me = class extends n6(u5) {
  constructor() {
    super(...arguments), this.type = "integrated-mesh-3dtiles", this._visibleGeometryChangedSchedulerHandle = null, this._wasmLayerId = -1, this.ignoresMemoryFactor = false, this.drapeTargetType = t4.WithoutRasterImage, this._lyrHandleToObjects = /* @__PURE__ */ new Map(), this._initialCullFace = /* @__PURE__ */ new Map(), this._suspendedHandle = null, this._dbgFlags = /* @__PURE__ */ new Set();
  }
  initialize() {
    if (this._dbgFlags.add(je.Error), this._dbg(je.VerboseAPI, "Tiles3DLayerView3D initialize() called"), !this._canProjectWithoutEngine())
      throw new s("layerview:spatial-reference-incompatible", "The spatial reference of this scene layer is incompatible with the spatial reference of the view", {});
    const e10 = i4(this).then((e11) => {
      this._intersectionHandler = new l5(this), this.view.sceneIntersectionHelper.addIntersectionHandler(this._intersectionHandler), this._updatingHandles.add(() => this.slicePlaneEnabled, (e12) => this._slicePlaneEnabledChange(e12)), this._elevationProvider = new x2({ view: this.view, layerElevationSource: this, intersectionHandler: this._intersectionHandler }), this.view.elevationProvider.register("im", this._elevationProvider), this.view.basemapTerrain.overlayManager.registerDrapeTarget(this), this._wasmLayerId = e11;
      const t7 = this.view.resourceController.memoryController.newCache(`t3d-${this.uid}`, (e12) => this._onRemoveFromCache(e12));
      this._memCache = t7, this._suspendedHandle = d(() => this.suspended, (e12) => {
        const t8 = l2(this.view);
        t8 && t8.setEnabled(this, !e12);
      }, P), this.addHandles([d(() => this.layer.elevationInfo, (e12) => this._elevationInfoChanged(e12))]);
    }).catch((e11) => {
      if (a3(this), this._wasmLayerId = -1, e11 === m)
        throw new s("tiles3d:addLayer-failure", "The 3d tiles layer description was invalid.", {});
      if (e11 === d2)
        throw new s("tiles3d:addLayer-failure", "The 3d tiles layer web assembly module failed to download.", {});
    });
    this.addResolvingPromise(e10);
  }
  destroy() {
    this._dbg(je.VerboseAPI, "Tiles3DLayerView3D destroy() called"), a3(this), this._suspendedHandle && (this._suspendedHandle.remove(), this._suspendedHandle = null), this._intersectionHandler && (this.view.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler), this._intersectionHandler = null), this._elevationProvider && (this._elevationProvider.objectsChanged(this._obbs), this.view.elevationProvider.unregister(this._elevationProvider), this._elevationProvider = null), this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this), this._lyrHandleToObjects.forEach((e10) => this.freeObject(e10)), this._lyrHandleToObjects.clear(), this._initialCullFace.clear(), this._memCache = u(this._memCache), this._updatingHandles = u(this._updatingHandles), this.emit("visible-geometry-changed"), this._visibleGeometryChangedSchedulerHandle && (this._visibleGeometryChangedSchedulerHandle.remove(), this._visibleGeometryChangedSchedulerHandle = null);
  }
  _visibleGeometryChanged() {
    null == this._visibleGeometryChangedSchedulerHandle && (this._visibleGeometryChangedSchedulerHandle = v(() => {
      this.emit("visible-geometry-changed"), this._visibleGeometryChangedSchedulerHandle = null;
    }));
  }
  _slicePlaneEnabledChange(e10) {
    this._intersectionHandler && (this._intersectionHandler.slicePlaneEnabled = e10), this.objects.forEach((t7) => {
      const r3 = this._collection.getMaterial(t7);
      r3.commonMaterialParameters.hasSlicePlane = e10, r3.commonMaterialParameters.cullFace = e10 ? e6.None : this._initialCullFace.get(t7);
    });
  }
  _elevationInfoChanged(e10) {
    const t7 = l2(this.view);
    t7 && t7.setLayerOffset(this, w(e10));
  }
  get _obbs() {
    return this.objects.map((e10) => this._collection.getComponentObb(e10));
  }
  get wasmLayerId() {
    return this._wasmLayerId;
  }
  get usedMemory() {
    let e10 = 0;
    return this._lyrHandleToObjects.forEach((t7) => {
      t7.isVisible && (e10 += t7.totalMemory());
    }), e10;
  }
  get unloadedMemory() {
    let e10 = 0;
    return this._lyrHandleToObjects.forEach((t7) => {
      t7.isVisible || (e10 += t7.totalMemory());
    }), e10;
  }
  get performanceInfo() {
    let e10 = 0, t7 = 0, r3 = 0, i7 = 0, s5 = 0, o3 = 0;
    return this._lyrHandleToObjects.forEach((n7) => {
      n7.isVisible ? (e10 += n7.texMemoryUsage, t7 += n7.vboMemoryUsage, s5++) : (r3 += n7.texMemoryUsage, i7 += n7.vboMemoryUsage, o3++);
    }), new t6(this.usedMemory, s5, o3, Te(t7), Te(e10), Te(i7), Te(r3));
  }
  _canProjectWithoutEngine() {
    var _a, _b;
    if (this.view.state.viewingMode === l.Local) {
      const e10 = ((_a = this.view.renderSpatialReference) == null ? void 0 : _a.isWebMercator) ? 3857 : ((_b = this.view.renderSpatialReference) == null ? void 0 : _b.wkid) ?? -1;
      if (3857 !== e10 && 32662 !== e10)
        return false;
    }
    return true;
  }
  get _stage() {
    return this.view._stage;
  }
  get _collection() {
    return this._stage.renderView.componentObjectCollection;
  }
  get elevationOffset() {
    return w(this.layer.elevationInfo);
  }
  get elevationRange() {
    const e10 = this.fullExtent;
    return (e10 == null ? void 0 : e10.zmin) && (e10 == null ? void 0 : e10.zmax) ? new e7(e10.zmin, e10.zmax) : null;
  }
  getElevationRange(e10) {
    return null;
  }
  get fullExtent() {
    return this.layer.fullExtent;
  }
  get objects() {
    return Array.from(this._lyrHandleToObjects.values()).reduce((e10, t7) => e10.concat(t7.components), new Array());
  }
  isUpdating() {
    const e10 = l2(this.view);
    return !(this._wasmLayerId < 0 || null == e10) && e10.isUpdating(this._wasmLayerId);
  }
  updatingFlagChanged() {
    this.notifyChange("updating");
  }
  async createRenderable(e10) {
    var _a;
    const t7 = e10.meshData;
    if (null == t7.data)
      throw new Error("meshData.data undefined");
    if (t7.desc = JSON.parse(t7.desc), null == t7.desc)
      throw new Error("meshData.desc undefined");
    const r3 = e2(t7.desc.origin), i7 = new Array(), s5 = /* @__PURE__ */ new Map(), o3 = new Ce();
    o3.handle = e10.handle, this._lyrHandleToObjects.set(e10.handle, o3);
    const n7 = this.view.basemapTerrain.spatialReference;
    let a5, l6;
    if ("global" === this.view.viewingMode) {
      const e11 = e3();
      R(T, r3, e11, n7), a5 = n4(e4(), e11), l6 = s2(e4(), a5);
    } else
      a5 = o, l6 = o;
    const T3 = e3();
    i(T3, T3, r3);
    const M = I(n2(), T3);
    let P3 = null;
    const O2 = n2();
    for (let c3 = 0; c3 < t7.desc.prims.length; c3++) {
      const e11 = t7.desc.prims[c3];
      if (e11.ptype !== r2.Lines || null == t7.data)
        continue;
      const { positionView: i8, positionAttr: s6, indicesView: o4 } = this.getBufferViews(e11, t7.data.buffer, a5, false);
      null != s6 && null != i8 && null != o4 && (P3 = J(s6), u2(O2, P3.center, r3), P3.center = O2);
    }
    for (let c3 = 0; c3 < t7.desc.prims.length; c3++) {
      const e11 = t7.desc.prims[c3];
      if (this._dbg(je.VerboseAPI, JSON.stringify(e11)), e11.ptype === r2.Lines)
        continue;
      if (null == l4[e11.ptype] || null == t7.data) {
        this._dbg(je.VerboseAPI, "[Unsupported Feature] Unsupported primitive mode (" + e11.ptype + "). Skipping primitive.");
        continue;
      }
      const m2 = ((_a = t7.desc) == null ? void 0 : _a.materials) && null != e11.materialId ? t7.desc.materials[e11.materialId] : null, h = null != m2 ? m2.lightingModel : g2.Unlit, u6 = h !== g2.Unlit, { positionView: p2, positionAttr: f3, normalsView: y2, normalsAttr: v2, colorAttr: x3, texCoord0Attr: T4, indicesView: U } = this.getBufferViews(e11, t7.data.buffer, a5, u6);
      if (null == f3 || null == p2 || null == U)
        continue;
      const E3 = { colors: null != x3, textureCoordinates: null != T4 ? d3.Default : d3.None, hasNormals: null != y2, needsNormals: u6 }, V = f3.data.length / f3.size, I3 = (e12, t8) => !e12 || e12.data.length / e12.size === V || (this._dbg(je.Error, `${t8} !== numPos. Skipping primitive.`), false);
      if (!I3(T4, "numTexcoord") || !I3(x3, "numColors") || !I3(v2, "normals"))
        continue;
      const H = o2(E3);
      let R2;
      if (null != P3 ? R2 = P3.clone() : (R2 = J(f3), u2(O2, R2.center, r3), R2.center = O2), a5 !== o)
        for (let t8 = 0; t8 < p2.count; t8++)
          p2.getVec(t8, O2), S(O2, O2, a5), p2.setVec(t8, O2);
      const F = H.createBuffer(f3.data.length), A3 = /* @__PURE__ */ new Map([[e5.POSITION, f3]]);
      null != T4 && A3.set(e5.UV0, T4), null != x3 && A3.set(e5.COLOR, x3), null != v2 && A3.set(e5.NORMALCOMPRESSED, v2), A3.forEach((e12, t8) => {
        null != e12 && A(t8, e12, null, null, F, 0);
      });
      const D2 = new Uint32Array([0, U.typedBuffer.length]), k2 = { vertices: { data: F.buffer, count: F.byteLength / H.stride, layoutParameters: E3 }, positionData: { positions: p2.typedBuffer, indices: U.typedBuffer }, indices: U.typedBuffer, componentOffsets: D2 };
      o3.cpuMemoryUsage += p2.count, o3.cpuMemoryUsage += U.count;
      const B2 = this.view.renderSpatialReference, G2 = n2(), N3 = [1, 1, 1];
      f2(M, B2, N3, n7) || this._dbg(je.Error, "Unsupported coordinate system for IM overlay"), n3(M, B2, G2, n7);
      const z = this._collection.createObject(new t5(r(G2[0], G2[1], N3[0], N3[1]), new i6(M, l6), R2, k2));
      m2 && this._collection.updateMaterial(z, (e12) => {
        e12.baseColor = m2.baseColorFactor, e12.usePBR = h === g2.Pbr, e12.hasParametersFromSource = false, e12.baseColorTexture = this._getTexture(m2.baseColorTex, t7, s5), e12.usePBR && (e12.mrrFactors = [m2.metallicFactor, m2.roughnessFactor, 0], e12.emissiveFactor = m2.emissiveFactor ?? [0, 0, 0], e12.metallicRoughnessTexture = this._getTexture(m2.metalTex, t7, s5), e12.emissionTexture = this._getTexture(m2.emissiveTex, t7, s5), e12.occlusionTexture = this._getTexture(m2.occlusionTex, t7, s5), e12.normalTexture = this._getTexture(m2.normalTex, t7, s5)), e12.objectOpacity = 0, e12.alphaDiscardMode = s3.Mask;
        const r4 = [];
        e12.baseColorTexture && r4.push(e12.baseColorTexture.loadPromise), e12.usePBR && e12.metallicRoughnessTexture && r4.push(e12.metallicRoughnessTexture.loadPromise), e12.usePBR && e12.emissionTexture && r4.push(e12.emissionTexture.loadPromise), e12.usePBR && e12.occlusionTexture && r4.push(e12.occlusionTexture.loadPromise), e12.usePBR && e12.normalTexture && r4.push(e12.normalTexture.loadPromise);
        const n8 = Promise.all(r4);
        i7.push(n8), n8.then(() => {
          var _a2, _b, _c, _d, _e, _f, _g, _h, _i, _j;
          e12.alphaDiscardMode = T2[m2.alphaMode], e12.objectOpacity = 1, o3.texMemoryUsage += ((_b = (_a2 = e12.baseColorTexture) == null ? void 0 : _a2.glTexture) == null ? void 0 : _b.usedMemory) || 0, e12.usePBR && (o3.texMemoryUsage += ((_d = (_c = e12.metallicRoughnessTexture) == null ? void 0 : _c.glTexture) == null ? void 0 : _d.usedMemory) || 0, o3.texMemoryUsage += ((_f = (_e = e12.emissionTexture) == null ? void 0 : _e.glTexture) == null ? void 0 : _f.usedMemory) || 0, o3.texMemoryUsage += ((_h = (_g = e12.occlusionTexture) == null ? void 0 : _g.glTexture) == null ? void 0 : _h.usedMemory) || 0, o3.texMemoryUsage += ((_j = (_i = e12.normalTexture) == null ? void 0 : _i.glTexture) == null ? void 0 : _j.usedMemory) || 0);
        }), e12.commonMaterialParameters.doubleSided = m2.isDoubleSided, e12.commonMaterialParameters.cullFace = m2.faceCulling ? P2[m2.faceCulling] : e6.Back, this._initialCullFace.set(z, e12.commonMaterialParameters.cullFace), e12.commonMaterialParameters.hasSlicePlane = this.slicePlaneEnabled, e12.componentParameters.castShadows = I2.All, e12.textureAlphaCutoff = m2.alphaCutoff ?? 0.1, e12.alphaDiscardMode = T2[m2.alphaMode], e12.isIntegratedMesh = true, e12.polygonOffsetEnabled = false, e12.hasOccludees = false, e12.ellipsoidMode = a4(this.view.spatialReference);
      }), o3.components.push(z), o3.vboMemoryUsage += this._collection.getObjectGPUMemoryUsage(z);
    }
    if (await Promise.all(i7), s5.forEach((e11) => {
      o3.textures.push(e11);
    }), !this._memCache)
      throw new Error("no memCache");
    return this._memCache.put(`${o3.handle}`, o3, o3.totalMemory()), { memUsageBytes: o3.totalMemory() };
  }
  freeRenderable(e10) {
    const t7 = this._lyrHandleToObjects.get(e10);
    t7 && (this.freeObject(t7), this._lyrHandleToObjects.delete(e10));
  }
  freeObject(e10) {
    this._memCache && this._memCache.pop(`${e10.handle}`), e10.components.forEach((t7) => {
      e10.textures.forEach((e11) => {
        this._stage.remove(e11);
      }), this._collection.destroyObject(t7), this._initialCullFace.delete(t7);
    });
  }
  setRenderableVisibility(e10, t7, r3) {
    if (this._memCache) {
      for (let i7 = 0; i7 < r3; ++i7) {
        const r4 = e10[i7], s5 = t7[i7];
        if (!s5)
          continue;
        const o3 = this._lyrHandleToObjects.get(r4);
        o3 && (this._visibleGeometryChanged(), o3.isVisible = s5, o3.components.forEach((e11) => {
          this._collection.setObjectVisibility(e11, s5), this._elevationProvider.objectChanged(this._collection.getComponentObb(e11));
        }), this._memCache.pop(`${r4}`));
      }
      for (let i7 = 0; i7 < r3; ++i7) {
        const r4 = e10[i7], s5 = t7[i7];
        if (s5)
          continue;
        const o3 = this._lyrHandleToObjects.get(r4);
        o3 && (this._visibleGeometryChanged(), o3.isVisible = s5, o3.components.forEach((e11) => {
          this._collection.setObjectVisibility(e11, s5), this._elevationProvider.objectChanged(this._collection.getComponentObb(e11));
        }), this._memCache.put(`${r4}`, o3, o3.totalMemory()));
      }
    }
  }
  _getTexture(e10, t7, r3) {
    var _a, _b;
    let i7 = null;
    if (e10 && ((_a = t7.desc) == null ? void 0 : _a.images) && ((_b = t7.data) == null ? void 0 : _b.buffer)) {
      const s5 = t7.desc.images[e10 == null ? void 0 : e10.imageId];
      if (i7 = r3.get(s5), !i7 && s5) {
        const o3 = this._stage.renderView.renderingContext.parameters.maxMaxAnisotropy, n7 = o3 > 1, a5 = _[e10.wrapMode ?? N.None];
        let l6 = s5.alpha ? 4 : 3;
        const c3 = new Uint8Array(t7.data.buffer, s5.data.byteOffset, s5.data.byteCount);
        let m2 = null, d4 = null, h = null;
        switch (s5.format) {
          case t2.Raw:
            s5.pixelFormat === n5.R8 ? (m2 = c3.buffer, l6 = 1, d4 = "") : s5.pixelFormat === n5.Rgb8 ? (m2 = c3.buffer, l6 = 3, d4 = "") : s5.pixelFormat === n5.Rgba8 && (m2 = c3.buffer, l6 = 4, d4 = "");
            break;
          case t2.Dxt1:
            m2 = c3.buffer, l6 = 3, d4 = u3.DDS_ENCODING;
            break;
          case t2.Dxt5:
            m2 = c3.buffer, l6 = 4, d4 = u3.DDS_ENCODING;
            break;
          case t2.Png:
            d4 = "image/png", h = document.createElement("img");
            break;
          case t2.Jpeg:
            d4 = "image/jpeg", h = document.createElement("img");
            break;
          case t2.Etc2:
            d4 = "image/ktx", h = document.createElement("img");
            break;
          case t2.Astc:
            this._dbg(je.Error, "Astc texture not supported");
            break;
          case t2.Pvrtc:
            this._dbg(je.Error, "Pvrtc texture not supported");
        }
        if (h && d4) {
          const e11 = new Blob([c3], { type: d4 });
          h.src = URL.createObjectURL(e11), m2 = h;
        }
        m2 && null != d4 && (i7 = new N2(m2, { mipmap: n7, maxAnisotropy: o3, encoding: d4, wrap: a5, components: l6, noUnpackFlip: true, width: s5.mip0Width, height: s5.mip0Height }), this._stage.add(i7), r3.set(s5, i7));
      }
    }
    return i7 ? new s4(this.view._stage.renderView.textureRepository, i7.id) : null;
  }
  getBufferViews(e10, t7, r3, i7) {
    let s5, o3, n7, a5, l6, c3, m2, d4 = null;
    for (let u6 = 0; u6 < e10.atrbs.length; u6++) {
      const m3 = e10.atrbs[u6], p2 = m3.view, f3 = void 0, g3 = p2.byteOffset + p2.byteCount, b = p2.byteCount / A2[p2.type], y2 = [...Array(b).keys()].map((e11) => e11);
      try {
        switch (m3.sem) {
          case i3.Position:
            3 !== p2.ncomp || p2.type !== e8.F32 ? this._dbg(je.Error, "[Unsupported Feature] Unsupported view for Position (" + p2 + ")") : (s5 = new i2(t7, p2.byteOffset, f3, g3), o3 = new t(s5.typedBuffer, y2, 3));
            break;
          case i3.Normal:
            if (3 !== p2.ncomp || p2.type !== e8.F32)
              this._dbg(je.Error, "[Unsupported Feature] Unsupported view for Normal (" + p2 + ")");
            else if (i7) {
              const e11 = new i2(t7, p2.byteOffset, f3, g3), i8 = c2(e11.typedBuffer, r3);
              l6 = new k(i8), c3 = new t(l6.typedBuffer, y2, 2);
            }
            break;
          case i3.TexCoord:
            2 !== p2.ncomp || p2.type !== e8.F32 ? this._dbg(je.Error, "[Unsupported Feature] Unsupported view for Texcoord (" + p2 + ")") : void 0 === a5 && (a5 = new t(new u4(t7, p2.byteOffset, f3, g3).typedBuffer, y2, 2));
            break;
          case i3.Color:
            4 === p2.ncomp ? (p2.type === e8.F32 && (d4 = new c(t7, p2.byteOffset, f3, g3)), p2.type === e8.U8 && (d4 = new x(t7, p2.byteOffset, f3, g3)), p2.type === e8.U16 && (d4 = new L(t7, p2.byteOffset, f3, g3))) : 3 === p2.ncomp && (p2.type === e8.F32 && (d4 = new i2(t7, p2.byteOffset, f3, g3)), p2.type === e8.U8 && (d4 = new O(t7, p2.byteOffset, f3, g3)), p2.type === e8.U16 && (d4 = new E(t7, p2.byteOffset, f3, g3))), null == d4 ? this._dbg(je.VerboseAPI, "[Unsupported Feature] Unsupported view for Color (" + p2 + ")") : n7 = new t(d4.typedBuffer, y2, p2.ncomp);
            break;
          case i3.FeatureIndex:
            break;
          default:
            this._dbg(je.VerboseAPI, "[Unsupported Feature] Unsupported semantic (" + m3.sem + "). Skipping vertex attribute.");
        }
      } catch (h) {
        this._dbg(je.VerboseAPI, "Error Creating buffer (" + h + "). Skipping vertex attribute.");
      }
    }
    if (e10.index) {
      const r4 = e10.index.view, i8 = void 0, s6 = r4.byteOffset + r4.byteCount;
      switch (e10.index.view.type) {
        case e8.U16:
          m2 = new g(t7, r4.byteOffset, i8, s6);
          break;
        case e8.U32:
          m2 = new B(t7, r4.byteOffset, i8, s6);
          break;
        case e8.U8:
        default:
          this._dbg(je.Error, "[Unsupported Feature] index type not supported (" + r4.type + ").");
      }
    }
    if (null == m2 && null != s5) {
      const e11 = s5.count;
      if (e11 < 65535) {
        const t8 = new Uint16Array(e11);
        m2 = new g(t8);
      } else {
        const t8 = new Uint32Array(e11);
        m2 = new B(t8);
      }
      for (let t8 = 0; t8 < e11; t8++)
        m2.set(t8, t8);
    }
    return { positionView: s5, positionAttr: o3, colorAttr: n7, texCoord0Attr: a5, indicesView: m2, normalsView: l6, normalsAttr: c3 };
  }
  _onRemoveFromCache(e10) {
    const t7 = l2(this.view);
    t7 && t7.onRenderableEvicted(this, e10.handle, e10.totalMemory()), this.freeRenderable(e10.handle);
  }
  _dbg(e10, t7) {
    this._dbgFlags.has(e10) && (e10 === je.Error ? n.getLogger(this).error(t7) : n.getLogger(this).warn(t7));
  }
};
e([y()], Me.prototype, "_visibleGeometryChangedSchedulerHandle", void 0), e([y()], Me.prototype, "layer", void 0), e([y()], Me.prototype, "elevationOffset", null), Me = e([a("esri.views.3d.layers.IntegratedMesh3DTilesLayerView3D")], Me);
var Pe = Me;
export {
  Pe as default
};
//# sourceMappingURL=IntegratedMesh3DTilesLayerView3D-FPGMNT2R.js.map
