import {
  p as p6
} from "./chunk-IOKSWIVD.js";
import {
  D,
  R as R2
} from "./chunk-54XXLVAD.js";
import {
  B2 as B,
  a2 as a5,
  e as e2,
  i as i3,
  m as m2,
  m2 as m3,
  n4 as n8,
  o as o5,
  r3 as r2,
  t,
  u2
} from "./chunk-TBCOV2E5.js";
import {
  a2 as a6,
  f2 as f5,
  g,
  p2 as p4,
  s as s5
} from "./chunk-HUFLW46E.js";
import {
  p as p5
} from "./chunk-YH2IYJYF.js";
import {
  a as a4,
  w as w2
} from "./chunk-Y7RXGLGH.js";
import {
  A,
  j as j2,
  n as n6,
  n3 as n7,
  v
} from "./chunk-Q6RZBEZ6.js";
import {
  b as b2
} from "./chunk-PC66NY33.js";
import {
  p as p3
} from "./chunk-H6NTWZSO.js";
import {
  a as a3,
  m,
  p as p2
} from "./chunk-BMT3OVAP.js";
import {
  d as d2
} from "./chunk-F3BQGS35.js";
import {
  y as y3
} from "./chunk-Z3NX5DTX.js";
import {
  N,
  b
} from "./chunk-LMO6NZJA.js";
import {
  R
} from "./chunk-G7YFDDME.js";
import {
  f as f3
} from "./chunk-QYC3GV65.js";
import {
  f as f4,
  i as i2,
  s as s4
} from "./chunk-I2X6UR6L.js";
import {
  n as n5
} from "./chunk-ZIJHDTB7.js";
import {
  n as n4
} from "./chunk-B647DRFJ.js";
import {
  p,
  y as y2
} from "./chunk-J7AMTUNG.js";
import {
  y as y4
} from "./chunk-HU5IGOTI.js";
import {
  d
} from "./chunk-C24MEKSO.js";
import {
  u
} from "./chunk-WDPG5BMO.js";
import {
  o as o3
} from "./chunk-TGXFDJCS.js";
import {
  o as o4
} from "./chunk-BOAEEYBE.js";
import {
  c
} from "./chunk-I5RCKVDX.js";
import {
  j
} from "./chunk-HV6S3GY2.js";
import {
  w
} from "./chunk-IZKCZQUY.js";
import {
  n as n3,
  x2 as x
} from "./chunk-M5ZB5S5C.js";
import {
  f as f2
} from "./chunk-MBGZKT2Z.js";
import {
  o as o2
} from "./chunk-YOPMY6TS.js";
import {
  r
} from "./chunk-VIN55KNF.js";
import {
  s as s3
} from "./chunk-IOB3DJMR.js";
import {
  i,
  n as n2
} from "./chunk-RUN6MNXL.js";
import {
  U
} from "./chunk-SAYWXQVM.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import {
  o,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  T,
  a3 as a2,
  s3 as s2
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  a,
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";

// node_modules/@arcgis/core/layers/support/rasterEnums.js
var a7 = i()({ RSP_NearestNeighbor: "nearest", RSP_BilinearInterpolation: "bilinear", RSP_CubicConvolution: "cubic", RSP_Majority: "majority" });
var i4 = i()({ esriNoDataMatchAny: "any", esriNoDataMatchAll: "all" });
var n9 = i()({ U1: "u1", U2: "u2", U4: "u4", U8: "u8", S8: "s8", U16: "u16", S16: "s16", U32: "u32", S32: "s32", F32: "f32", F64: "f64", C64: "c64", C128: "c128", UNKNOWN: "unknown" });

// node_modules/@arcgis/core/layers/support/RasterFunctionInfo.js
var i5 = class extends f {
  constructor() {
    super(...arguments), this.pixelType = "unknown";
  }
};
e([y({ type: String, json: { write: true } })], i5.prototype, "name", void 0), e([y({ type: String, json: { write: true } })], i5.prototype, "description", void 0), e([y({ type: T, json: { type: T, write: true, name: "_object_id" } })], i5.prototype, "id", void 0), e([y({ type: String, json: { type: n9.jsonValues, read: n9.read, write: n9.write } })], i5.prototype, "pixelType", void 0), e([y({ type: String, json: { write: true } })], i5.prototype, "type", void 0), i5 = e([a2("esri.layers.support.RasterFunctionInfo")], i5);
var n10 = i5;

// node_modules/@arcgis/core/layers/support/RasterFunctionVariable.js
var p7 = class extends f {
  constructor() {
    super(...arguments), this.isDataset = false, this.isPublic = false, this.type = "RasterFunctionVariable";
  }
};
e([y({ type: String, json: { write: true } })], p7.prototype, "name", void 0), e([y({ type: Number, json: { type: T, write: true, name: "_object_id" } })], p7.prototype, "id", void 0), e([y({ type: Boolean, json: { write: true } })], p7.prototype, "isDataset", void 0), e([y({ type: Boolean, json: { write: true } })], p7.prototype, "isPublic", void 0), e([y({ json: { write: true } })], p7.prototype, "value", void 0), e([y({ type: String, json: { write: true } })], p7.prototype, "type", void 0), p7 = e([a2("esri.layers.support.RasterFunctionVariable")], p7);
var i6 = p7;

// node_modules/@arcgis/core/layers/support/RasterFunctionProperties.js
var i7 = { key: "type", base: null, typeMap: { RasterFunctionVariable: i6 } };
var a8 = class extends f {
};
e([y({ types: i7, json: { types: i7, name: "MatchVariable" } })], a8.prototype, "matchVariable", void 0), e([y({ types: i7, json: { types: i7, name: "UnionDimension" } })], a8.prototype, "unionDimension", void 0), e([y({ type: Number, json: { type: T, write: true, name: "_object_id" } })], a8.prototype, "id", void 0), e([y({ type: String, json: { write: true } })], a8.prototype, "type", void 0), a8 = e([a2("esri.layers.support.RasterFunctionProperties")], a8);
var n11 = a8;

// node_modules/@arcgis/core/layers/support/RasterFunctionTemplate.js
var y5 = new n2({ 0: "mosaic", 1: "item", 2: "item-group" }, { useNumericKeys: true });
var a9 = class extends f {
  constructor() {
    super(...arguments), this.functionType = "mosaic", this.type = "RasterFunctionTemplate";
  }
};
e([y({ type: [String], json: { write: true } })], a9.prototype, "aliases", void 0), e([y({ type: Object, json: { write: true } })], a9.prototype, "arguments", void 0), e([y({ type: String, json: { write: true } })], a9.prototype, "description", void 0), e([y({ type: n10, json: { write: true, name: "function" } })], a9.prototype, "functionInfo", void 0), e([y({ type: y5.apiValues, json: { type: [0, 1, 2], read: y5.read, write: y5.write } })], a9.prototype, "functionType", void 0), e([y({ type: String, json: { write: true } })], a9.prototype, "group", void 0), e([y({ type: String, json: { write: true } })], a9.prototype, "help", void 0), e([y({ type: Number, json: { type: T, write: true, name: "_object_id" } })], a9.prototype, "id", void 0), e([y({ type: String, json: { write: true } })], a9.prototype, "name", void 0), e([y({ type: String, json: { write: true, name: "definition" } })], a9.prototype, "queryDefinition", void 0), e([y({ type: String, json: { write: true } })], a9.prototype, "tag", void 0), e([y({ type: n11, json: { write: true } })], a9.prototype, "properties", void 0), e([y({ type: String, json: { write: true } })], a9.prototype, "thumbnail", void 0), e([y({ type: String, json: { write: true } })], a9.prototype, "thumbnailEx", void 0), e([y({ json: { type: ["RasterFunctionTemplate"], write: true } })], a9.prototype, "type", void 0), a9 = e([a2("esri.layers.support.RasterFunctionTemplate")], a9);
var c2 = a9;

// node_modules/@arcgis/core/layers/support/RasterFunction.js
var c3;
var p8 = /* @__PURE__ */ new Set(["raster", "raster2", "dem", "fillraster"]);
var f6 = /* @__PURE__ */ new Set(["rasters"]);
var m4 = (t3) => (t3 == null ? void 0 : t3.rasterFunction) ? d3.fromJSON(t3) : t3;
var l = (t3) => t3 && t3 instanceof d3 ? t3.toJSON() : t3;
var y6 = (t3) => (t3 == null ? void 0 : t3.functionName) && !t3.declaredClass;
var F = (t3) => y6(t3) ? new d3(t3) : t3;
var h = (t3) => {
  if (null == t3)
    return null;
  t3 = a(t3);
  const n12 = {};
  for (const e3 of Object.keys(t3))
    p8.has(e3.toLowerCase()) ? n12[e3] = m4(t3[e3]) : f6.has(e3.toLowerCase()) && Array.isArray(t3[e3]) ? n12[e3] = t3[e3].map(m4) : n12[e3] = t3[e3];
  return n12;
};
var g2 = { types: { key: "type", base: null, typeMap: { RasterFunctionTemplate: c2 } }, json: { write: true, name: "rasterFunctionDefinition" } };
var d3 = c3 = class extends f {
  constructor(t3) {
    super(t3), this.functionName = null, this.outputPixelType = "unknown", this.variableName = null, this.functionDefinition = null;
  }
  set functionArguments(t3) {
    if (t3) {
      const n12 = Object.keys(t3);
      if (n12.some((n13) => p8.has(n13.toLowerCase()) && y6(t3[n13])) || n12.some((n13) => f6.has(n13.toLowerCase()) && Array.isArray(t3[n13]) && t3[n13].some((t4) => y6(t4)))) {
        t3 = a(t3);
        for (const e3 of n12)
          p8.has(e3.toLowerCase()) ? t3[e3] = F(t3[e3]) : f6.has(e3.toLowerCase()) && Array.isArray(t3[e3]) && (t3[e3] = t3[e3].map((t4) => F(t4)));
      }
    }
    this._set("functionArguments", t3);
  }
  readFunctionArguments(t3) {
    return h(t3);
  }
  writeFunctionArguments(t3, n12, e3) {
    const o6 = {};
    for (const r3 of Object.keys(t3))
      p8.has(r3.toLowerCase()) ? o6[r3] = l(t3[r3]) : f6.has(r3.toLowerCase()) && Array.isArray(t3[r3]) ? o6[r3] = t3[r3].map(l) : o6[r3] = l(t3[r3]);
    n12[e3] = o6;
  }
  readFunctionName(t3, n12) {
    const e3 = n12.rasterFunctionInfos, o6 = n12.name;
    return o6 || ((e3 == null ? void 0 : e3.length) && "None" !== e3[0].name ? e3[0].name : n12.rasterFunctionDefinition ? n12.rasterFunctionDefinition.name : n12.rasterFunction);
  }
  get rasterFunctionDefinition() {
    var _a;
    return (_a = this.functionDefinition) == null ? void 0 : _a.toJSON();
  }
  set rasterFunctionDefinition(t3) {
    this.functionDefinition = t3 ? c2.fromJSON(t3) : null;
  }
  get hasClipFunction() {
    return this.rasterFunctionDefinition ? JSON.stringify(this.rasterFunctionDefinition).includes('"type":"ClipFunction"') : JSON.stringify(this).includes('"rasterFunction":"Clip"');
  }
  clone() {
    return new c3({ functionName: this.functionName, functionArguments: a(this.functionArguments), outputPixelType: this.outputPixelType, variableName: this.variableName, rasterFunctionDefinition: a(this.rasterFunctionDefinition) });
  }
};
e([y({ json: { type: Object, name: "rasterFunctionArguments" } })], d3.prototype, "functionArguments", null), e([o2("functionArguments")], d3.prototype, "readFunctionArguments", null), e([r("functionArguments")], d3.prototype, "writeFunctionArguments", null), e([y({ json: { type: String, write: { target: "rasterFunction" } } })], d3.prototype, "functionName", void 0), e([o2("functionName", ["rasterFunction", "rasterFunctionInfos", "rasterFunctionDefinition"])], d3.prototype, "readFunctionName", null), e([o3({ C128: "c128", C64: "c64", F32: "f32", F64: "f64", S16: "s16", S32: "s32", S8: "s8", U1: "u1", U16: "u16", U2: "u2", U32: "u32", U4: "u4", U8: "u8", UNKNOWN: "unknown" }, { ignoreUnknown: false }), y({ json: { default: "unknown" } })], d3.prototype, "outputPixelType", void 0), e([y({ type: String, json: { read: true, write: true } })], d3.prototype, "variableName", void 0), e([y()], d3.prototype, "rasterFunctionDefinition", null), e([y(g2)], d3.prototype, "functionDefinition", void 0), e([y()], d3.prototype, "hasClipFunction", null), d3 = c3 = e([a2("esri.layers.support.RasterFunction")], d3);
var N2 = d3;

// node_modules/@arcgis/core/renderers/FlowRenderer.js
var d4;
var c4 = new n2({ flow_from: "flow-from", flow_to: "flow-to" });
var h2 = d4 = class extends v(f) {
  constructor(o6) {
    super(o6), this.density = 0.8, this.color = new u([255, 255, 255, 1]), this.maxPathLength = 200, this.trailWidth = 1.5, this.flowSpeed = 10, this.trailLength = 100, this.smoothing = 0, this.flowRepresentation = "flow-from", this.type = "flow", this.authoringInfo = null, this.legendOptions = null, this.trailCap = "butt", this.background = "none";
  }
  clone() {
    var _a, _b;
    const { density: o6, maxPathLength: t3, trailWidth: e3, flowSpeed: r3, trailLength: i8, smoothing: s6, flowRepresentation: n12, trailCap: p12, background: a11 } = this, l6 = this.color.clone(), m8 = (this.visualVariables || []).map((o7) => o7.clone()), c10 = (_a = this.authoringInfo) == null ? void 0 : _a.clone(), h6 = (_b = this.legendOptions) == null ? void 0 : _b.clone();
    return new d4({ density: o6, color: l6, maxPathLength: t3, trailWidth: e3, flowSpeed: r3, trailLength: i8, trailCap: p12, background: a11, smoothing: s6, flowRepresentation: n12, visualVariables: m8, authoringInfo: c10, legendOptions: h6 });
  }
  getSymbol(o6, t3) {
  }
  async getSymbolAsync(o6, t3) {
  }
  getSymbols() {
    return [];
  }
};
e([y({ type: Number, json: { write: true } })], h2.prototype, "density", void 0), e([y({ type: u, json: { write: { allowNull: true } } })], h2.prototype, "color", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], h2.prototype, "maxPathLength", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], h2.prototype, "trailWidth", void 0), e([y({ type: Number, json: { write: true } })], h2.prototype, "flowSpeed", void 0), e([y({ type: Number, json: { write: true } })], h2.prototype, "trailLength", void 0), e([y({ type: Number, cast: o4, json: { write: false } })], h2.prototype, "smoothing", void 0), e([y({ type: c4.apiValues, json: { type: c4.jsonValues, read: { reader: c4.read }, write: { writer: c4.write } } })], h2.prototype, "flowRepresentation", void 0), e([o3({ flowRenderer: "flow" })], h2.prototype, "type", void 0), e([y({ type: j2, json: { write: true } })], h2.prototype, "authoringInfo", void 0), e([y({ type: p3, json: { write: true } })], h2.prototype, "legendOptions", void 0), e([y({ type: String, json: { write: true } })], h2.prototype, "trailCap", void 0), e([y({ type: String, json: { write: true } })], h2.prototype, "background", void 0), h2 = d4 = e([a2("esri.renderers.FlowRenderer")], h2);
var u3 = h2;

// node_modules/@arcgis/core/renderers/support/ColormapInfo.js
var c5 = class extends f {
  constructor() {
    super(...arguments), this.value = null, this.label = null, this.color = null;
  }
};
e([y({ type: Number, json: { write: true } })], c5.prototype, "value", void 0), e([y({ type: String, json: { write: true } })], c5.prototype, "label", void 0), e([y({ type: u, json: { type: [T], write: true } })], c5.prototype, "color", void 0), c5 = e([a2("esri.renderers.support.ColormapInfo")], c5);
var l2 = c5;

// node_modules/@arcgis/core/renderers/RasterColormapRenderer.js
var c6;
var m5 = c6 = class extends f {
  constructor(o6) {
    super(o6), this.colormapInfos = null, this.type = "raster-colormap";
  }
  static createFromColormap(o6, r3) {
    if (!o6)
      return null;
    const t3 = 5 === o6[0].length, e3 = [...o6].sort((o7, r4) => o7[0] - r4[0]).map((o7) => l2.fromJSON({ value: o7[0], color: t3 ? o7.slice(1, 5) : o7.slice(1, 4).concat([255]), label: r3 ? r3[o7[0]] ?? "" : o7[0] }));
    return new c6({ colormapInfos: e3 });
  }
  static createFromColorramp(o6) {
    const r3 = B(o6);
    return c6.createFromColormap(r3);
  }
  clone() {
    return new c6({ colormapInfos: this.colormapInfos.map((o6) => o6.toJSON()) });
  }
  extractColormap() {
    return this.colormapInfos.map(({ value: o6, color: r3 }) => [o6, r3.r, r3.g, r3.b, r3.a > 1 ? r3.a : 255 * r3.a & 255]).sort((o6, r3) => o6[0] - r3[0]);
  }
};
e([y({ type: [l2], json: { write: true } })], m5.prototype, "colormapInfos", void 0), e([o3({ rasterColormap: "raster-colormap" })], m5.prototype, "type", void 0), m5 = c6 = e([a2("esri.renderers.RasterColormapRenderer")], m5);
var l3 = m5;

// node_modules/@arcgis/core/renderers/RasterShadedReliefRenderer.js
var c7;
var d5 = c7 = class extends f {
  constructor(e3) {
    super(e3), this.altitude = 45, this.azimuth = 315, this.colorRamp = null, this.hillshadeType = "traditional", this.pixelSizePower = 0.664, this.pixelSizeFactor = 0.024, this.scalingType = "none", this.type = "raster-shaded-relief", this.zFactor = 1;
  }
  readColorRamp(e3) {
    return p2(e3);
  }
  clone() {
    return new c7({ hillshadeType: this.hillshadeType, altitude: this.altitude, azimuth: this.azimuth, zFactor: this.zFactor, scalingType: this.scalingType, pixelSizeFactor: this.pixelSizeFactor, pixelSizePower: this.pixelSizePower, colorRamp: a(this.colorRamp) });
  }
};
e([y({ type: Number, json: { write: true } })], d5.prototype, "altitude", void 0), e([y({ type: Number, json: { write: true } })], d5.prototype, "azimuth", void 0), e([y({ types: m, json: { write: true } })], d5.prototype, "colorRamp", void 0), e([o2("colorRamp")], d5.prototype, "readColorRamp", null), e([y({ type: ["traditional", "multi-directional"], json: { write: true } })], d5.prototype, "hillshadeType", void 0), e([y({ type: Number, json: { write: true } })], d5.prototype, "pixelSizePower", void 0), e([y({ type: Number, json: { write: true } })], d5.prototype, "pixelSizeFactor", void 0), e([y({ type: ["none", "adjusted"], json: { write: true } })], d5.prototype, "scalingType", void 0), e([o3({ rasterShadedRelief: "raster-shaded-relief" })], d5.prototype, "type", void 0), e([y({ type: Number, json: { write: true } })], d5.prototype, "zFactor", void 0), d5 = c7 = e([a2("esri.renderers.RasterShadedReliefRenderer")], d5);
var m6 = d5;

// node_modules/@arcgis/core/renderers/RasterStretchRenderer.js
var d6;
var h3 = d6 = class extends f {
  constructor(t3) {
    super(t3), this.colorRamp = null, this.computeGamma = false, this.dynamicRangeAdjustment = false, this.gamma = [], this.maxPercent = null, this.minPercent = null, this.numberOfStandardDeviations = null, this.outputMax = null, this.outputMin = null, this.sigmoidStrengthLevel = null, this.statistics = [], this.histograms = null, this.useGamma = false, this.stretchType = "none", this.type = "raster-stretch";
  }
  readColorRamp(t3) {
    if (t3)
      return p2(t3);
  }
  writeStatistics(t3, e3, r3) {
    (t3 == null ? void 0 : t3.length) && (Array.isArray(t3[0]) || (t3 = t3.map((t4) => [t4.min, t4.max, t4.avg, t4.stddev])), e3[r3] = t3);
  }
  readStretchType(t3, e3) {
    let r3 = e3.stretchType;
    return "number" == typeof r3 && (r3 = a5[r3]), n8.read(r3);
  }
  clone() {
    return new d6({ stretchType: this.stretchType, outputMin: this.outputMin, outputMax: this.outputMax, useGamma: this.useGamma, computeGamma: this.computeGamma, statistics: a(this.statistics), gamma: a(this.gamma), sigmoidStrengthLevel: this.sigmoidStrengthLevel, numberOfStandardDeviations: this.numberOfStandardDeviations, minPercent: this.minPercent, maxPercent: this.maxPercent, colorRamp: a(this.colorRamp), histograms: a(this.histograms), dynamicRangeAdjustment: this.dynamicRangeAdjustment });
  }
};
e([y({ types: m, json: { write: true } })], h3.prototype, "colorRamp", void 0), e([o2("colorRamp")], h3.prototype, "readColorRamp", null), e([y({ type: Boolean, json: { write: true } })], h3.prototype, "computeGamma", void 0), e([y({ type: Boolean, json: { write: { target: "dra" }, read: { source: "dra" } } })], h3.prototype, "dynamicRangeAdjustment", void 0), e([y({ type: [Number], json: { write: true } })], h3.prototype, "gamma", void 0), e([y({ type: Number, json: { write: true } })], h3.prototype, "maxPercent", void 0), e([y({ type: Number, json: { write: true } })], h3.prototype, "minPercent", void 0), e([y({ type: Number, json: { write: true } })], h3.prototype, "numberOfStandardDeviations", void 0), e([y({ type: Number, json: { read: { source: "max" }, write: { target: "max" } } })], h3.prototype, "outputMax", void 0), e([y({ type: Number, json: { read: { source: "min" }, write: { target: "min" } } })], h3.prototype, "outputMin", void 0), e([y({ type: Number, json: { write: true } })], h3.prototype, "sigmoidStrengthLevel", void 0), e([y({ json: { type: [[Number]], write: true } })], h3.prototype, "statistics", void 0), e([y()], h3.prototype, "histograms", void 0), e([r("statistics")], h3.prototype, "writeStatistics", null), e([y({ type: Boolean, json: { write: true } })], h3.prototype, "useGamma", void 0), e([y({ type: n8.apiValues, json: { type: n8.jsonValues, write: n8.write } })], h3.prototype, "stretchType", void 0), e([o2("stretchType", ["stretchType"])], h3.prototype, "readStretchType", null), e([o3({ rasterStretch: "raster-stretch" })], h3.prototype, "type", void 0), h3 = d6 = e([a2("esri.renderers.RasterStretchRenderer")], h3);
var y7 = h3;

// node_modules/@arcgis/core/renderers/VectorFieldRenderer.js
var S;
var z = /* @__PURE__ */ new Set(["esriMetersPerSecond", "esriKilometersPerHour", "esriKnots", "esriFeetPerSecond", "esriMilesPerHour"]);
var u4 = new n2({ beaufort_ft: "beaufort-ft", beaufort_km: "beaufort-km", beaufort_kn: "beaufort-kn", beaufort_m: "beaufort-m", beaufort_mi: "beaufort-mi", classified_arrow: "classified-arrow", ocean_current_kn: "ocean-current-kn", ocean_current_m: "ocean-current-m", simple_scalar: "simple-scalar", single_arrow: "single-arrow", wind_speed: "wind-barb" });
var Z = new n2({ flow_from: "flow-from", flow_to: "flow-to" });
var b3 = S = class extends v(f) {
  constructor(e3) {
    super(e3), this.attributeField = "Magnitude", this.flowRepresentation = "flow-from", this.rotationType = "arithmetic", this.style = "single-arrow", this.symbolTileSize = 50, this.type = "vector-field";
  }
  readInputUnit(e3, M2) {
    return z.has(e3) ? s5.fromJSON(e3) : null;
  }
  readOutputUnit(e3, M2) {
    return z.has(e3) ? s5.fromJSON(e3) : null;
  }
  get styleRenderer() {
    const e3 = this.style, M2 = this.attributeField, i8 = this._createStyleRenderer(e3);
    return i8.field = M2, i8;
  }
  get sizeVariables() {
    const e3 = [];
    if (this.visualVariables)
      for (const M2 of this.visualVariables)
        "size" === M2.type && e3.push(M2);
    if (0 === e3.length) {
      const M2 = new b2({ field: "Magnitude", minSize: 0.2 * this.symbolTileSize, maxSize: 0.8 * this.symbolTileSize });
      this.visualVariables ? this.visualVariables.push(M2) : this._set("visualVariables", [M2]), e3.push(M2);
    }
    return e3;
  }
  get rotationVariables() {
    const e3 = [];
    if (this.visualVariables)
      for (const M2 of this.visualVariables)
        "rotation" === M2.type && e3.push(M2);
    if (0 === e3.length) {
      const M2 = new n6({ field: "Direction", rotationType: this.rotationType });
      this.visualVariables ? this.visualVariables.push(M2) : this._set("visualVariables", [M2]), e3.push(M2);
    }
    return e3;
  }
  clone() {
    return new S({ attributeField: this.attributeField, flowRepresentation: this.flowRepresentation, rotationType: this.rotationType, symbolTileSize: this.symbolTileSize, style: this.style, visualVariables: a(this.visualVariables), inputUnit: this.inputUnit, outputUnit: this.outputUnit });
  }
  async getGraphicsFromPixelData(e3, M2 = false, t3 = []) {
    var _a;
    const a11 = new Array(), I2 = a6(this.inputUnit, this.outputUnit), r3 = ((_a = this.rotationVariables[0]) == null ? void 0 : _a.rotationType) || this.rotationType, g4 = M2 ? f5(e3.pixelBlock, "vector-uv", r3, I2) : p4(e3.pixelBlock, "vector-magdir", I2);
    if (null == g4)
      return a11;
    const o6 = e3.extent, A2 = null != g4.mask && g4.mask.length > 0;
    let d10 = 0;
    const D3 = (o6.xmax - o6.xmin) / g4.width, w4 = (o6.ymax - o6.ymin) / g4.height;
    for (let l6 = 0; l6 < g4.height; l6++)
      for (let e4 = 0; e4 < g4.width; e4++, d10++) {
        let M3 = new x({ x: o6.xmin + e4 * D3 + D3 / 2, y: o6.ymax - l6 * w4 - w4 / 2, spatialReference: o6.spatialReference });
        M3 = (await R(M3))[0];
        const I3 = t3.some((e5) => e5.intersects(M3));
        if ((!A2 || g4.mask[d10]) && !I3) {
          const e5 = { Magnitude: g4.pixels[0][d10], Direction: g4.pixels[1][d10] }, t4 = new f3({ geometry: { type: "point", x: M3.x, y: M3.y, spatialReference: o6.spatialReference }, attributes: e5 });
          t4.symbol = this._getVisualVariablesAppliedSymbol(t4), a11.push(t4);
        }
      }
    return a11;
  }
  getSymbol(e3, M2) {
  }
  async getSymbolAsync(e3, M2) {
  }
  getSymbols() {
    return [];
  }
  getClassBreakInfos() {
    var _a;
    return (_a = this.styleRenderer) == null ? void 0 : _a.classBreakInfos;
  }
  getDefaultSymbol() {
    var _a;
    return (_a = this.styleRenderer) == null ? void 0 : _a.defaultSymbol;
  }
  _getDefaultSymbol(e3) {
    return new y4({ path: "M14,32 14,18 9,23 16,3 22,23 17,18 17,32 z", outline: new d({ width: 0 }), size: 20, color: e3 || new u([0, 92, 230]) });
  }
  _getVisualVariablesAppliedSymbol(e3) {
    var _a, _b;
    if (!e3)
      return;
    const M2 = (_b = (_a = this.styleRenderer) == null ? void 0 : _a.getSymbol(e3)) == null ? void 0 : _b.clone(), i8 = this.sizeVariables, t3 = this.rotationVariables;
    if (i8 && i8.length && this.sizeVariables.forEach((i9) => R2(M2, N([i9], e3))), t3 && t3.length) {
      const i9 = "flow-to" === this.flowRepresentation === ("ocean-current-kn" === this.style || "ocean-current-m" === this.style) ? 0 : 180;
      e3.attributes.Direction = e3.attributes.Direction + i9, this.rotationVariables.forEach((i10) => D(M2, b(i10, e3), i10.axis));
    }
    return M2;
  }
  _createStyleRenderer(e3) {
    let M2 = { defaultSymbol: this._getDefaultSymbol(), classBreakInfos: [] };
    switch (e3) {
      case "single-arrow":
        M2 = this._createSingleArrowRenderer();
        break;
      case "beaufort-kn":
        M2 = this._createBeaufortKnotsRenderer();
        break;
      case "beaufort-m":
        M2 = this._createBeaufortMeterRenderer();
        break;
      case "beaufort-ft":
        M2 = this._createBeaufortFeetRenderer();
        break;
      case "beaufort-mi":
        M2 = this._createBeaufortMilesRenderer();
        break;
      case "beaufort-km":
        M2 = this._createBeaufortKilometersRenderer();
        break;
      case "ocean-current-m":
        M2 = this._createCurrentMeterRenderer();
        break;
      case "ocean-current-kn":
        M2 = this._createCurrentKnotsRenderer();
        break;
      case "simple-scalar":
        M2 = this._createSimpleScalarRenderer();
        break;
      case "wind-barb":
        M2 = this._createWindBarbsRenderer();
        break;
      case "classified-arrow":
        M2 = this._createClassifiedArrowRenderer();
    }
    return new w2(M2);
  }
  _createSingleArrowRenderer() {
    return { defaultSymbol: this._getDefaultSymbol() };
  }
  _createBeaufortKnotsRenderer() {
    const e3 = [0, 1, 3, 6, 10, 16, 21, 27, 33, 40, 47, 55, 63], i8 = [[40, 146, 199], [89, 162, 186], [129, 179, 171], [160, 194, 155], [191, 212, 138], [218, 230, 119], [250, 250, 100], [252, 213, 83], [252, 179, 102], [250, 141, 52], [247, 110, 42], [240, 71, 29]];
    return { defaultSymbol: this._getDefaultSymbol(new u([214, 47, 39])), classBreakInfos: this._getClassBreaks(e3, i8) };
  }
  _createBeaufortMeterRenderer() {
    const e3 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7], i8 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]];
    return { defaultSymbol: this._getDefaultSymbol(new u([214, 47, 39])), classBreakInfos: this._getClassBreaks(e3, i8) };
  }
  _createBeaufortFeetRenderer() {
    const e3 = this._getDefaultSymbol(new u([214, 47, 39]));
    let i8 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7];
    const t3 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]], a11 = 3.28084;
    i8 = i8.map((e4) => e4 * a11);
    return { defaultSymbol: e3, classBreakInfos: this._getClassBreaks(i8, t3) };
  }
  _createBeaufortMilesRenderer() {
    const e3 = this._getDefaultSymbol(new u([214, 47, 39]));
    let i8 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7];
    const t3 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]], a11 = 2.23694;
    i8 = i8.map((e4) => e4 * a11);
    return { defaultSymbol: e3, classBreakInfos: this._getClassBreaks(i8, t3) };
  }
  _createBeaufortKilometersRenderer() {
    const e3 = this._getDefaultSymbol(new u([214, 47, 39]));
    let i8 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7];
    const t3 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]], a11 = 3.6;
    i8 = i8.map((e4) => e4 * a11);
    return { defaultSymbol: e3, classBreakInfos: this._getClassBreaks(i8, t3) };
  }
  _createCurrentMeterRenderer() {
    const e3 = [0, 0.5, 1, 1.5, 2], i8 = [[78, 26, 153], [179, 27, 26], [202, 128, 26], [177, 177, 177]];
    return { defaultSymbol: this._getDefaultSymbol(new u([177, 177, 177])), classBreakInfos: this._getClassBreaks(e3, i8) };
  }
  _createCurrentKnotsRenderer() {
    const e3 = [0, 0.25, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4], i8 = [[0, 0, 0], [0, 37, 100], [78, 26, 153], [151, 0, 100], [179, 27, 26], [177, 78, 26], [202, 128, 26], [177, 179, 52], [177, 177, 177]];
    return { defaultSymbol: this._getDefaultSymbol(new u([177, 177, 177])), classBreakInfos: this._getClassBreaks(e3, i8) };
  }
  _createClassifiedArrowRenderer() {
    var _a;
    const e3 = this._getDefaultSymbol(new u([56, 168, 0]));
    let i8 = [0, 1e-6, 3.5, 7, 10.5, 14];
    if ((_a = this.sizeVariables) == null ? void 0 : _a.length) {
      const e4 = this.sizeVariables[0].minDataValue, M2 = this.sizeVariables[0].maxDataValue;
      if (e4 && M2) {
        const t4 = (M2 - e4) / 5;
        i8 = Array.from(Array(6).keys()).map((M3) => e4 + t4 * M3);
      }
    }
    const t3 = [[56, 168, 0], [139, 309, 0], [255, 255, 0], [255, 128, 0], [255, 0, 0]];
    return { defaultSymbol: e3, classBreakInfos: this._getClassBreaks(i8, t3) };
  }
  _createSimpleScalarRenderer() {
    return { defaultSymbol: n5.fromJSON({ imageData: "iVBORw0KGgoAAAANSUhEUgAAACsAAAArCAQAAABLVLlLAAAABGdBTUEAAYagMeiWXwAAAAJiS0dEAACqjSMyAAAACXBIWXMAAABIAAAASABGyWs+AAAC3ElEQVRIx9XXvW4cVRQH8N982btpsIREJECyiCXsxX4DKh6AliqGKCBBE2SlwlHgAbBD/AKmyEYUeQ1KahPZSZQvBCkQLTHZ7KGY8Xodz4w3a1NwbzVzz/znfJ//zbStVC5q3icKak9GAs2QIdDx3PtW/S011NW3p+M5Eomh11ipTIKe6+4LQzHaQ+G+63pIZNJJQXMpljwTwj1brpgx5w1zZlyx5Z4QnllEIm2xeeSUHBf0hV0bejo1Uh09G3aFvgXk7cCJFBc9EdaRVuHJJaOdKyTV2TVhYLMduNR0Q9gxL5GaaTDw8GzejrDRBpxWoGsySRW0dttKuattwNkIlFw2YXgzOdYq4Ox49PlM+JrKd5OusjTWhBuVxUfMX/KXXZ3WEmkuqa67wspR4BTbwtKr/5u4fFgStse/T7EifFPnnYl9zPq4vmUOPrRndgoHjDti1gOPqlyXoifcRNGQzUd31lDyfHmob1Gp35vSr+P6vilcQ5Egtyd8YF/ySg9NhPM+9M/IOaHwp5+PSZayXTvCogEUwlatC3J8LLwYtcWB8EuDXQVuCkV5/B4eNHb7wGBs87LBDS+xjdVSn09wq1G8dFM+9tSUhIGneLvUdniKxKpTYljCpu3j7rVWlHj/P23v4NPGUEyeCQnexe9lJjzEQqMjJs+EzNAX6B98dBZVRmroJx95x/A/6gln18EyfCUsl+qdXb/tjvfbw+mwforpUOBz4XLVoBwAn3aWnfeH246NyBXhrq7TTN5lNSP9RkU+puUJm3W2Tsdq0nZWM07srk7MwQrZSRysjjGWBLRJNsNbfj2JMR4AbxpU1XLAb9Mxfpsq5EjMuuiR8L0JiHOOBX3hiUvOmavN0nMueSzcceFk0BK4pMqLo7vDD1Z0qrtDx7Itt4Xwm9UqbMmk8S0Dtuzb2pvOU99Z1nLTOfleNmvfZfP2pYZmPfajwosKdDBNpacNpVGGsWX9CyDI8Xq/Sj6QAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE0LTExLTEwVDAzOjE3OjU4LTA1OjAwF+tHyQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNC0xMS0xMFQwMzoxNzo1OC0wNTowMGa2/3UAAAAASUVORK5CYII=", height: 20, width: 20, type: "esriPMS", angle: 0 }) };
  }
  _createWindBarbsRenderer() {
    const e3 = Array.from(Array(31).keys()).map((e4) => 5 * e4), M2 = [{ range: "0-5", path: "M20 20 M5 20 A15 15 0 1 0 35 20 A15 15 0 1 0 5 20 M20 20 M10 20 A10 10 0 1 0 30 20 A10 10 0 1 0 10 20", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTIwIDIwIE01IDIwIEExNSAxNSAwIDEgMCAzNSAyMCBBMTUgMTUgMCAxIDAgNSAyMCBNMjAgMjAgTTEwIDIwIEExMCAxMCAwIDEgMCAzMCAyMCBBMTAgMTAgMCAxIDAgMTAgMjAiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "5-10", path: "M25 0 L25 40 M25 35 L17.5 37.5", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "10-15", path: "M25 0 L25 40 L10 45 L25 40", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "15-20", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L17.5 37.5", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjEyIDAgMTUgNDUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "20-25", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "25-30", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L17.5 32.5", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIEwyNSAzNSBNMjUgMzAgTDE3LjUgMzIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "30-35", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "35-40", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "40-45", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "45-50", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "50-55", path: "M25 0 L25 40 L10 40 L25 35", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "55-60", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L17.5 32.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxNy41IDMyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "60-65", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "65-70", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "70-75", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "75-80", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "80-85", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "85-90", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L17.5 17.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxNy41IDE3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "90-95", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "95-100", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20 L25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCBMMjUgMTUgTTI1IDEwIEwxNy41IDEyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "100-105", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "105-110", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L17.5 27.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDE3LjUgMjcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "110-115", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "115-120", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L17.5 22.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDE3LjUgMjIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "120-125", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "125-130", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L17.5 17.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDE3LjUgMTcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "130-135", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "135-140", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDE3LjUgMTIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "140-145", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "145-150", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IE0yNSAxMCBNMjUgNSBMMTcuNSA3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }], i8 = n5.fromJSON({ imageData: "iVBORw0KGgoAAAANSUhEUgAAACgAAAApCAQAAADtq6NDAAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAJiS0dEAP+Hj8y/AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEY0lEQVRIx5XXWWxWRRQH8N+d+31tUdGAVjGglYJABFEBY91jfDAg7piYaFTccA++uMQEFRcSXlATtxiXqMQt4G4iisYl0ai4sIQYtVFZ1KIFKdTS0l4f7vRCS5fPebozc+bM/2z/Mzcx0AgSiUxXnKfIdMn875FIhX53U2n/B/s+kKM4UINTjTBZImixxnrv+9a2iL6zEoUBXcoudrWj/OtHm3wt02lfU9Qao9OnHvIhgmww84MEl1qnxfNmGrqHxAizLdPpC6chGcAxKGGcL+30gOERf1BSpUqVslQSV8d5ReZFe8VQ9avufJn31cWwlJV7iafKStGOE/1qvfH9qUxxu8ydUdmuSKbGO8YUdT2inKLG69pM70tliktl5qIkCAJGmusDG7Vqsc0WjZa4UBlBiA5YZIcjYzB7qDtH5kaUJFLs7RGZTZ42W4PRRmtwvbdt1+wGiaS4drEtDttdZYIDNVuAclR3vA3+dI3qHqmVSy7U6Tv1MScCPvPR7nIpFlsdCy3FdTLPGhK92e2CUITjMJ9ocwKxnsZqc3O3JwMma3d6UVLnyVxB4aXemZqvPqLdpJhW3KVVbY4yYImPo6M5Urv50fj+0z/FG9YaEiENs8UtMfXUaTeTePNHlhXfA1UU+2lyD1Il3Gtt9+adfpNG7dNlpg2U/T3KYLZ2dUWFdTgp3/rQ4sK973qnInV5TIf40x3dhvrJPBiqyWUo4wAtLqhQYS71qK+QKOFRywmGK/kpikzV6WMKhh58vGWs4TIJNjiEYLIuP8Tt4/zmLyqk+AyrJSbF+Qq1DgqRUPMxyl+9q3IQhX/rMCJ6tEunriDs1oSyQZKlr9AkhT2ZIARbJfaJS1vtVbHB+Rgi0RK/y1q1BWsEEyLoz40xtGKcARPVWB1BTPO7f4LNtpkUl1aoMbViLyZo0GRjPD3BxnxjqXeLYlvhqYrzMMG3HoyJXa3JjfnGlbYYFlP7Jh3qKsKY4hQ7TY0nG+xwRL61n63mxHtqNHosigyMLmClNwvuecFnOZB88nNBDzNkzhxEZaKMBVoKapggMzvHHXBEpNSSFAvtcFRsVn0bW8LlMmcXs+c0Kne3gRR32+zg4uXwjC6zit6Wt4a8LXVfcp/MtQXHn2ynGbuCmb8GvvFeJLEE82ReU9/n6+dkq2x3buG9Wn94smcgAw631RPR7BTH+kbmHReZoEpOdEe7zWqZl40s0JWs9Hmv7hjBHqPDwsjGKVJnWWqjbdZp1KhJi0aPmxYZsIRhlttgeF+Jlke41QcOQKoqilSb6HJzSvNG3G/UoWnxwsmt+sVaYwd63dRbqdnMyCPVeyRPvpYgdavM22oGKoMUVRbJfOWMwidJ8Zzb1UvmWK/VVUXzHaTjjrVYh1897HT7xxYEVUaa5SWb/WO+YUWa9SrwvigzM8YlzlYv2GSdVCYxxlBtVnnFq5olwp5/BEk/OLsf5LUmG2+inRJdVvjZ97ZH9/zP34ug1O91pf4p+D+JYBpvrKxfbwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNC0xMS0xMFQwMzoxMjowOS0wNTowMB9ViV0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTQtMTEtMTBUMDM6MTI6MDktMDU6MDBuCDHhAAAAAElFTkSuQmCC", height: 20, width: 20, type: "esriPMS", angle: 0 }), t3 = e3.map((t4, a11) => {
      let I2;
      if (a11 !== e3.length - 1)
        if (0 === a11)
          I2 = { minValue: t4, maxValue: e3[a11 + 1], symbol: i8 };
        else {
          const i9 = n5.fromJSON({ type: "esriPMS", imageData: M2[a11].imageData, contentType: "image/svg+xml", height: 32, width: 32, angle: 0 });
          I2 = { minValue: t4, maxValue: e3[a11 + 1], symbol: i9 };
        }
      return new a4(I2);
    });
    return { defaultSymbol: i8, classBreakInfos: t3 };
  }
  _getClassBreaks(e3, i8) {
    return i8.map((i9, t3) => new a4({ minValue: e3[t3], maxValue: e3[t3 + 1], symbol: this._getDefaultSymbol(new u(i9)) }));
  }
};
e([y({ type: String, json: { write: true } })], b3.prototype, "attributeField", void 0), e([y({ type: Z.apiValues, json: { type: Z.jsonValues, read: { reader: Z.read }, write: { writer: Z.write } } })], b3.prototype, "flowRepresentation", void 0), e([y({ type: ["geographic", "arithmetic"], json: { write: true } })], b3.prototype, "rotationType", void 0), e([y({ type: u4.apiValues, json: { type: u4.jsonValues, read: { reader: u4.read }, write: { writer: u4.write } } })], b3.prototype, "style", void 0), e([y({ json: { write: true } })], b3.prototype, "symbolTileSize", void 0), e([y({ type: s5.apiValues, json: { type: s5.jsonValues, write: { writer: s5.write } } })], b3.prototype, "inputUnit", void 0), e([o2("inputUnit")], b3.prototype, "readInputUnit", null), e([y({ type: s5.apiValues, json: { type: s5.jsonValues, read: { reader: s5.read }, write: { writer: s5.write } } })], b3.prototype, "outputUnit", void 0), e([o2("outputUnit")], b3.prototype, "readOutputUnit", null), e([o3({ vectorField: "vector-field" })], b3.prototype, "type", void 0), e([y({ type: w2 })], b3.prototype, "styleRenderer", null), e([y({ type: b2 })], b3.prototype, "sizeVariables", null), e([y({ type: n6 })], b3.prototype, "rotationVariables", null), b3 = S = e([a2("esri.renderers.VectorFieldRenderer")], b3);
var h4 = b3;

// node_modules/@arcgis/core/rasterRenderers.js
var l4 = { key: "type", base: null, typeMap: { "unique-value": A, "class-breaks": w2, "raster-colormap": l3, "raster-stretch": y7, "vector-field": h4, "raster-shaded-relief": m6, flow: u3 } };
var d7 = { ...l4, typeMap: { ...l4.typeMap } };
delete d7.typeMap["vector-field"], delete d7.typeMap.flow;
var p9 = { uniqueValue: A, classBreaks: w2, rasterStretch: y7, rasterColormap: l3, vectorField: h4, rasterShadedRelief: m6, flowRenderer: u3 };
function u5(e3) {
  return e3 && p9[e3.type] || null;
}
function c8(r3, s6) {
  if (!r3)
    return null;
  if ("classBreaks" === r3.type && r3.classificationMethod) {
    const e3 = r3.authoringInfo || { classificationMethod: "" };
    e3.classificationMethod = r3.classificationMethod, r3.authoringInfo = e3;
  }
  "vectorField" === r3.type && r3.visualVariables && !Array.isArray(r3.visualVariables) && (r3.visualVariables = [r3.visualVariables]);
  const t3 = u5(r3);
  if (t3) {
    const e3 = new t3();
    return e3.read(r3, s6), e3;
  }
  return (s6 == null ? void 0 : s6.messages) && r3 && s6.messages.push(new s2("renderer:unsupported", "Renderers of type '" + (r3.type || "unknown") + "' are not supported", { definition: r3, context: s6 })), null;
}

// node_modules/@arcgis/core/layers/support/MosaicRule.js
var w3;
var y8 = i()({ MT_FIRST: "first", MT_LAST: "last", MT_MIN: "min", MT_MAX: "max", MT_MEAN: "mean", MT_BLEND: "blend", MT_SUM: "sum" });
var M = i()({ esriMosaicNone: "none", esriMosaicCenter: "center", esriMosaicNadir: "nadir", esriMosaicViewpoint: "viewpoint", esriMosaicAttribute: "attribute", esriMosaicLockRaster: "lock-raster", esriMosaicNorthwest: "northwest", esriMosaicSeamline: "seamline" });
function g3(e3) {
  let t3;
  switch (e3 ? e3.toLowerCase().replace("esrimosaic", "") : "") {
    case "byattribute":
    case "attribute":
      t3 = "esriMosaicAttribute";
      break;
    case "lockraster":
      t3 = "esriMosaicLockRaster";
      break;
    case "center":
      t3 = "esriMosaicCenter";
      break;
    case "northwest":
      t3 = "esriMosaicNorthwest";
      break;
    case "nadir":
      t3 = "esriMosaicNadir";
      break;
    case "viewpoint":
      t3 = "esriMosaicViewpoint";
      break;
    case "seamline":
      t3 = "esriMosaicSeamline";
      break;
    default:
      t3 = "esriMosaicNone";
  }
  return M.fromJSON(t3);
}
var f7 = w3 = class extends f {
  constructor(e3) {
    super(e3), this.ascending = true, this.itemRasterFunction = null, this.lockRasterIds = null, this.method = null, this.multidimensionalDefinition = null, this.objectIds = null, this.operation = null, this.sortField = null, this.sortValue = null, this.viewpoint = null, this.where = null;
  }
  readAscending(e3, t3) {
    return null != t3.ascending ? t3.ascending : null == t3.sortAscending || t3.sortAscending;
  }
  get itemRenderingRule() {
    return o(n.getLogger(this), "itemRenderingRule", { replacement: "itemRasterFunction", version: "4.27", warnOnce: true }), this._get("itemRasterFunction");
  }
  set itemRenderingRule(e3) {
    o(n.getLogger(this), "itemRenderingRule", { replacement: "itemRasterFunction", version: "4.27", warnOnce: true }), this._set("itemRasterFunction", e3);
  }
  readMethod(e3, t3) {
    return g3(t3.mosaicMethod || t3.defaultMosaicMethod);
  }
  writeMultidimensionalDefinition(e3, t3, o6) {
    null != e3 && (e3 = e3.filter(({ variableName: e4, dimensionName: t4 }) => e4 && "*" !== e4 || t4)).length && (t3[o6] = e3.map((e4) => e4.toJSON()));
  }
  readOperation(e3, t3) {
    var _a;
    const o6 = t3.mosaicOperation, r3 = (_a = t3.mosaicOperator) == null ? void 0 : _a.toLowerCase(), i8 = o6 || (r3 ? y8.toJSON(r3) : null);
    return y8.fromJSON(i8) || "first";
  }
  castSortValue(e3) {
    return null == e3 || "string" == typeof e3 || "number" == typeof e3 ? e3 : `${e3}`;
  }
  clone() {
    return new w3({ ascending: this.ascending, itemRasterFunction: a(this.itemRasterFunction), lockRasterIds: a(this.lockRasterIds), method: this.method, multidimensionalDefinition: a(this.multidimensionalDefinition), objectIds: a(this.objectIds), operation: this.operation, sortField: this.sortField, sortValue: this.sortValue, viewpoint: a(this.viewpoint), where: this.where });
  }
};
e([y({ type: Boolean, json: { write: true } })], f7.prototype, "ascending", void 0), e([o2("ascending", ["ascending", "sortAscending"])], f7.prototype, "readAscending", null), e([y({ type: N2, json: { name: "itemRenderingRule", write: true } })], f7.prototype, "itemRasterFunction", void 0), e([y({ type: N2 })], f7.prototype, "itemRenderingRule", null), e([y({ type: [T], json: { write: { overridePolicy() {
  return { enabled: "lock-raster" === this.method };
} } } })], f7.prototype, "lockRasterIds", void 0), e([y({ type: String, json: { type: M.jsonValues, write: { target: "mosaicMethod", writer: M.write } } })], f7.prototype, "method", void 0), e([o2("method", ["mosaicMethod", "defaultMosaicMethod"])], f7.prototype, "readMethod", null), e([y({ type: [p6], json: { write: true } })], f7.prototype, "multidimensionalDefinition", void 0), e([r("multidimensionalDefinition")], f7.prototype, "writeMultidimensionalDefinition", null), e([y({ type: [T], json: { name: "fids", write: true } })], f7.prototype, "objectIds", void 0), e([y({ json: { type: y8.jsonValues, read: { reader: y8.read }, write: { target: "mosaicOperation", writer: y8.write } } })], f7.prototype, "operation", void 0), e([o2("operation", ["mosaicOperation", "mosaicOperator"])], f7.prototype, "readOperation", null), e([y({ type: String, json: { write: { overridePolicy() {
  return { enabled: "attribute" === this.method };
} } } })], f7.prototype, "sortField", void 0), e([y({ type: [String, Number], json: { write: { allowNull: true, overridePolicy() {
  return { enabled: "attribute" === this.method, allowNull: true };
} } } })], f7.prototype, "sortValue", void 0), e([s3("sortValue")], f7.prototype, "castSortValue", null), e([y({ type: x, json: { write: true } })], f7.prototype, "viewpoint", void 0), e([y({ type: String, json: { write: true } })], f7.prototype, "where", void 0), f7 = w3 = e([a2("esri.layers.support.MosaicRule")], f7);
var j3 = f7;

// node_modules/@arcgis/core/layers/support/MultidimensionalSubset.js
var l5;
var p10 = { base: n3, key: "type", typeMap: { extent: w, polygon: j } };
var u6 = l5 = class extends f {
  constructor(e3) {
    super(e3), this.areaOfInterest = null, this.subsetDefinitions = null;
  }
  get dimensions() {
    const { subsetDefinitions: e3 } = this;
    if (null == e3 || 0 === e3.length)
      return [];
    const t3 = /* @__PURE__ */ new Map();
    e3.forEach((e4) => {
      if (!e4.dimensionName)
        return;
      let s7, o6;
      if (Array.isArray(e4.values[0])) {
        const t4 = e4.values;
        s7 = t4[0][0], o6 = t4[e4.values.length - 1][1];
      } else {
        const t4 = e4.values;
        s7 = t4[0], o6 = t4[e4.values.length - 1];
      }
      if (t3.has(e4.dimensionName)) {
        const r3 = t3.get(e4.dimensionName);
        r3[0] = Math.min(s7, r3[0]), r3[1] = Math.max(o6, r3[1]);
      } else
        t3.set(e4.dimensionName, [s7, o6]);
    });
    const s6 = [];
    for (const o6 of t3)
      s6.push({ name: o6[0], extent: o6[1] });
    return s6;
  }
  get variables() {
    const { subsetDefinitions: e3 } = this;
    if (null == e3 || 0 === e3.length)
      return [];
    const t3 = /* @__PURE__ */ new Set();
    return e3.forEach((e4) => {
      e4.variableName && t3.add(e4.variableName);
    }), [...t3];
  }
  clone() {
    var _a;
    const e3 = (_a = this.subsetDefinitions) == null ? void 0 : _a.map((e4) => e4.clone()), t3 = this.areaOfInterest ? this.areaOfInterest.clone() : this.areaOfInterest;
    return new l5({ areaOfInterest: t3, subsetDefinitions: e3 });
  }
};
e([y({ types: p10, json: { read: y2, write: true } })], u6.prototype, "areaOfInterest", void 0), e([y({ readOnly: true })], u6.prototype, "dimensions", null), e([y({ readOnly: true })], u6.prototype, "variables", null), e([y({ type: [p6], json: { write: true } })], u6.prototype, "subsetDefinitions", void 0), u6 = l5 = e([a2("esri.layers.support.MultidimensionalSubset")], u6);
var c9 = u6;

// node_modules/@arcgis/core/layers/support/RasterJobHandler.js
var t2 = class {
  constructor() {
    this._workerThread = null, this._destroyed = false;
  }
  async initialize() {
    const e3 = await p5("RasterWorker");
    this._destroyed ? e3.close() : this._workerThread = e3;
  }
  destroy() {
    this._destroyed = true, this._workerThread && (this._workerThread.close(), this._workerThread = null);
  }
  async convertVectorFieldData(r3, t3) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n12 = await this._workerThread.invoke("convertVectorFieldData", { pixelBlock: r3.pixelBlock.toJSON(), type: r3.dataType }, t3);
    return n12 ? new g(n12) : null;
  }
  computeStatisticsHistograms(r3, o6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    return this._workerThread.invoke("computeStatisticsHistograms", { pixelBlock: r3.pixelBlock.toJSON() }, o6);
  }
  async decode(r3, t3) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n12 = await this._workerThread.invoke("decode", r3, t3);
    return n12 ? new g(n12) : null;
  }
  async symbolize(r3, t3) {
    var _a, _b;
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n12 = { extent: (_a = r3.extent) == null ? void 0 : _a.toJSON(), pixelBlock: (_b = r3.pixelBlock) == null ? void 0 : _b.toJSON(), simpleStretchParams: r3.simpleStretchParams, bandIds: r3.bandIds }, a11 = await this._workerThread.invoke("symbolize", n12, t3);
    return a11 ? new g(a11) : null;
  }
  async updateSymbolizer(r3, o6) {
    var _a;
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const t3 = (_a = r3 == null ? void 0 : r3.rendererJSON) == null ? void 0 : _a.histograms;
    await Promise.all(this._workerThread.broadcast("updateSymbolizer", { symbolizerJSON: r3.toJSON(), histograms: t3 }, o6));
  }
  async updateRasterFunction(r3, o6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    await Promise.all(this._workerThread.broadcast("updateRasterFunction", { rasterFunctionJSON: r3.toJSON() }, o6));
  }
  async process(r3, t3) {
    var _a, _b;
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n12 = await this._workerThread.invoke("process", { extent: (_a = r3.extent) == null ? void 0 : _a.toJSON(), primaryPixelSizes: (_b = r3.primaryPixelSizes) == null ? void 0 : _b.map((e3) => null != e3 ? e3.toJSON() : null), primaryPixelBlocks: r3.primaryPixelBlocks.map((e3) => null != e3 ? e3.toJSON() : null), primaryRasterIds: r3.primaryRasterIds }, t3);
    return n12 ? new g(n12) : null;
  }
  async stretch(r3, t3) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!(r3 == null ? void 0 : r3.pixelBlock))
      return null;
    const n12 = { srcPixelBlock: r3.pixelBlock.toJSON(), stretchParams: r3.stretchParams }, a11 = await this._workerThread.invoke("stretch", n12, t3);
    return a11 ? new g(a11) : null;
  }
  async split(r3, t3) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!(r3 == null ? void 0 : r3.pixelBlock))
      return null;
    const n12 = { srcPixelBlock: r3.pixelBlock.toJSON(), tileSize: r3.tileSize, maximumPyramidLevel: r3.maximumPyramidLevel, useBilinear: r3.useBilinear }, a11 = await this._workerThread.invoke("split", n12, t3);
    return a11 && a11.forEach((e3, r4) => {
      a11.set(r4, e3 ? g.fromJSON(e3) : null);
    }), a11;
  }
  async clipTile(r3, t3) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!(r3 == null ? void 0 : r3.pixelBlock))
      return null;
    const n12 = { ...r3, pixelBlock: r3.pixelBlock.toJSON() }, a11 = await this._workerThread.invoke("clipTile", n12, t3);
    return a11 ? g.fromJSON(a11) : null;
  }
  async estimateStatisticsHistograms(r3, o6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!(r3 == null ? void 0 : r3.pixelBlock))
      return null;
    const t3 = { srcPixelBlock: r3.pixelBlock.toJSON() };
    return await this._workerThread.invoke("estimateStatisticsHistograms", t3, o6);
  }
  async mosaicAndTransform(r3, t3) {
    var _a;
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!((_a = r3 == null ? void 0 : r3.srcPixelBlocks) == null ? void 0 : _a.length))
      return { pixelBlock: null };
    const n12 = { ...r3, srcPixelBlocks: r3.srcPixelBlocks.map((e3) => null != e3 ? e3.toJSON() : null) }, a11 = await this._workerThread.invoke("mosaicAndTransform", n12, t3);
    return { pixelBlock: a11.pixelBlock ? new g(a11.pixelBlock) : null, localNorthDirections: a11.localNorthDirections };
  }
  async createFlowMesh(r3, o6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const t3 = { buffer: r3.flowData.data.buffer, maskBuffer: r3.flowData.mask.buffer, width: r3.flowData.width, height: r3.flowData.height }, { meshType: n12, simulationSettings: a11 } = r3, i8 = await this._workerThread.invoke("createFlowMesh", { meshType: n12, flowData: t3, simulationSettings: a11 }, { ...o6, transferList: [t3.buffer, t3.maskBuffer] });
    return { vertexData: new Float32Array(i8.vertexBuffer), indexData: new Uint32Array(i8.indexBuffer) };
  }
  getProjectionOffsetGrid(r3, o6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const t3 = null != r3.datumTransformation ? r3.datumTransformation.steps.map((e3) => ({ wkid: e3.wkid, wkt: e3.wkt, isInverse: e3.isInverse })) : null, n12 = null != r3.rasterTransform ? r3.rasterTransform.toJSON() : null, a11 = { projectedExtent: r3.projectedExtent.toJSON(), srcBufferExtent: r3.srcBufferExtent.toJSON(), pixelSize: r3.pixelSize, hasWrapAround: r3.hasWrapAround, spacing: r3.spacing, datumTransformationSteps: t3, rasterTransform: n12, isAdaptive: r3.isAdaptive, includeGCSGrid: r3.includeGCSGrid };
    return this._workerThread.invoke("getProjectionOffsetGrid", a11, o6);
  }
};

// node_modules/@arcgis/core/renderers/support/rasterRendererHelper.js
var R3 = 0.25;
var T2 = a3.fromJSON({ type: "multipart", colorRamps: [{ fromColor: [0, 0, 255], toColor: [0, 255, 255] }, { fromColor: [0, 255, 255], toColor: [255, 255, 0] }, { fromColor: [255, 255, 0], toColor: [255, 0, 0] }] });
var j4 = a3.fromJSON(m3[0]);
var I = /* @__PURE__ */ new Set(["scientific", "standard-time", "vector-uv", "vector-magdir", "vector-u", "vector-v", "vector-magnitude", "vector-direction"]);
function V(e3, t3) {
  const { attributeTable: n12, colormap: a11 } = e3;
  if (o5(e3)) {
    const t4 = _(e3);
    if (null != t4)
      return t4;
  }
  if (null != a11) {
    const t4 = O(e3);
    if (null != t4)
      return t4;
  }
  if (null != n12) {
    const t4 = W2(e3);
    if (null != t4)
      return t4;
  }
  return L(e3, t3);
}
function k(e3, t3 = false) {
  const n12 = ["raster-stretch"];
  return u2(e3, t3) && n12.push("raster-colormap"), t(e3) && n12.push("unique-value"), r2(e3, t3) && n12.push("class-breaks"), e2(e3) && n12.push("raster-shaded-relief"), o5(e3) && n12.push("vector-field"), i3(e3) && n12.push("flow"), n12;
}
function S2(e3, t3, n12) {
  const a11 = ["nearest", "bilinear", "cubic", "majority"].find((e4) => e4 === (n12 == null ? void 0 : n12.toLowerCase()));
  if ("Map" === t3)
    return a11 ?? "bilinear";
  if ("standard-time" === e3.dataType)
    return a11 ?? "nearest";
  return "thematic" === e3.dataType || e3.attributeTable || e3.colormap ? "nearest" === a11 || "majority" === a11 ? a11 : "nearest" : a11 ?? "bilinear";
}
function L(e3, t3) {
  e3 = B2(e3, t3 == null ? void 0 : t3.variableName);
  const { bandCount: n12 } = e3;
  let { bandIds: a11, stretchType: l6 } = t3 || {};
  (a11 == null ? void 0 : a11.some((e4) => e4 >= n12)) && (a11 = null);
  let r3 = e3.statistics, s6 = e3.histograms;
  n12 > 1 ? (a11 = (a11 == null ? void 0 : a11.length) ? a11 : E(e3), r3 = null == r3 ? null : a11 == null ? void 0 : a11.map((e4) => r3[e4]), s6 = null == s6 ? null : a11 == null ? void 0 : a11.map((e4) => s6[e4])) : a11 = [0], null == l6 && (l6 = z2(e3));
  let i8 = false;
  switch (l6) {
    case "none":
      i8 = false;
      break;
    case "percent-clip":
      i8 = !(s6 == null ? void 0 : s6.length);
      break;
    default:
      i8 = !(r3 == null ? void 0 : r3.length);
  }
  const { dataType: o6 } = e3, u8 = 1 === (a11 == null ? void 0 : a11.length) && I.has(o6) ? T2 : null, m8 = new y7({ stretchType: l6, dynamicRangeAdjustment: i8, colorRamp: u8, outputMin: 0, outputMax: 255, gamma: 1 === (a11 == null ? void 0 : a11.length) ? [1] : [1, 1, 1], useGamma: false });
  return "percent-clip" === l6 ? m8.maxPercent = m8.minPercent = R3 : "standard-deviation" === l6 && (m8.numberOfStandardDeviations = 2), i8 || null == e3.multidimensionalInfo && !(t3 == null ? void 0 : t3.includeStatisticsInStretch) || ("percent-clip" === l6 ? m8.histograms = s6 : "min-max" !== l6 && "standard-deviation" !== l6 || (m8.statistics = r3)), m8;
}
function B2(e3, t3) {
  const { multidimensionalInfo: n12 } = e3;
  if (!t3 || !n12)
    return e3;
  const a11 = n12.variables.find((e4) => e4.name === t3);
  if (!a11)
    return e3;
  if (e3 = e3.clone(), a11) {
    const { statistics: t4, histograms: n13 } = a11;
    (t4 == null ? void 0 : t4.length) && (e3.statistics = t4.map((e4) => ({ min: e4.min, max: e4.max, avg: e4.avg, stddev: e4.stddev }))), (n13 == null ? void 0 : n13.length) && (e3.histograms = n13);
  }
  return e3;
}
function E(e3) {
  const t3 = e3.bandCount;
  if (1 === t3)
    return null;
  if (2 === t3)
    return [0];
  const { bandInfos: n12 } = e3;
  let a11;
  if (n12.length === t3) {
    const { red: e4, green: t4, blue: l6, nir: r3 } = F2(n12);
    null != e4 && null != t4 && null != l6 ? a11 = [e4, t4, l6] : null != r3 && null != e4 && null != t4 && (a11 = [r3, e4, t4]);
  }
  return !a11 && t3 >= 3 && (a11 = [0, 1, 2]), a11;
}
function F2(e3) {
  const t3 = {};
  for (let n12 = 0; n12 < e3.length; n12++) {
    const a11 = e3[n12], l6 = a11.name.toLowerCase();
    if ("red" === l6)
      t3.red = n12;
    else if ("green" === l6)
      t3.green = n12;
    else if ("blue" === l6)
      t3.blue = n12;
    else if ("nearinfrared" === l6 || "nearinfrared_1" === l6 || "nir" === l6)
      t3.nir = n12;
    else if (a11.maxWavelength && a11.minWavelength) {
      const e4 = a11.minWavelength, l7 = a11.maxWavelength;
      null == t3.blue && e4 >= 410 && e4 <= 480 && l7 >= 480 && l7 <= 540 ? t3.blue = n12 : null == t3.green && e4 >= 490 && e4 <= 560 && l7 >= 560 && l7 <= 610 ? t3.green = n12 : null == t3.red && e4 >= 595 && e4 <= 670 && l7 >= 660 && l7 <= 730 ? t3.red = n12 : null == t3.nir && e4 >= 700 && e4 <= 860 && l7 >= 800 && l7 <= 950 && (t3.nir = n12);
    }
  }
  return t3;
}
function z2(e3) {
  let t3 = "percent-clip";
  const { pixelType: n12, dataType: a11, histograms: l6, statistics: r3, multidimensionalInfo: s6 } = e3, i8 = I.has(a11) || "generic" === a11 && null != s6;
  return "u8" !== n12 || "processed" !== a11 && null != l6 && null != r3 ? "u8" === n12 || "elevation" === a11 || i8 ? t3 = "min-max" : null != l6 ? t3 = "percent-clip" : null != r3 && (t3 = "min-max") : t3 = "none", t3;
}
function W2(t3, n12, a11, r3) {
  if (!t(t3, n12))
    return null;
  const { attributeTable: s6, statistics: o6 } = t3, u8 = U2(s6, n12), c10 = N3(s6, "red"), f9 = N3(s6, "green"), p12 = N3(s6, "blue"), h6 = new j2(), b4 = [], g4 = /* @__PURE__ */ new Set(), y9 = !!(c10 && f9 && p12);
  if (null != s6)
    s6.features.forEach((t4) => {
      const n13 = t4.attributes[u8.name];
      if (!g4.has(t4.attributes[u8.name]) && null != n13) {
        g4.add(n13);
        const a12 = y9 && ("single" === c10.type || "double" === c10.type) && ("single" === f9.type || "double" === f9.type) && ("single" === p12.type || "double" === p12.type) && !s6.features.some((e3) => e3.attributes[c10.name] > 1 || e3.attributes[f9.name] > 1 || e3.attributes[p12.name] > 1), l6 = a12 ? 255 : 1;
        b4.push(new n7({ value: t4.attributes[u8.name], label: t4.attributes[u8.name] + "", symbol: { type: "simple-fill", style: "solid", outline: null, color: new u(y9 ? [t4.attributes[c10.name] * l6, t4.attributes[f9.name] * l6, t4.attributes[p12.name] * l6, 1] : [0, 0, 0, 0]) } }));
      }
    });
  else if (o6 == null ? void 0 : o6[0])
    for (let l6 = o6[0].min; l6 <= o6[0].max; l6++)
      b4.push(new n7({ value: l6, label: l6.toString(), symbol: { type: "simple-fill", style: "solid", outline: null, color: new u([0, 0, 0, 0]) } }));
  if (b4.sort((e3, t4) => e3.value && "string" == typeof e3.value.valueOf() ? 0 : e3.value > t4.value ? 1 : -1), !y9) {
    const t4 = B(j4, { numColors: b4.length });
    b4.forEach((n13, a12) => n13.symbol.color = new u(t4[a12].slice(1, 4))), h6.colorRamp = j4;
  }
  if (a11 || r3) {
    const t4 = a11 || B(r3, { numColors: b4.length }).map((e3) => e3.slice(1));
    b4.forEach((n13, a12) => n13.symbol.color = new u(t4[a12])), h6.colorRamp = r3;
  }
  return new A({ field: u8.name, uniqueValueInfos: b4, authoringInfo: h6 });
}
function U2(e3, t3, a11) {
  let l6;
  return null != e3 ? (l6 = t3 ? e3.fields.find((e4) => t3.toLowerCase() === e4.name.toLowerCase()) : D2(e3.fields), l6 || (a11 || (l6 = e3.fields.find((e4) => "string" === e4.type)), l6 || (l6 = N3(e3, "value")))) : l6 = new y3({ name: "value" }), l6;
}
function D2(e3) {
  let t3;
  for (let n12 = 0; n12 < e3.length; n12++) {
    const a11 = e3[n12].name.toLowerCase();
    if ("string" === e3[n12].type) {
      if (a11.startsWith("class")) {
        t3 = e3[n12];
        break;
      }
      null == t3 && (a11.endsWith("name") || a11.endsWith("type")) && (t3 = e3[n12]);
    }
  }
  return t3;
}
function N3(e3, t3) {
  return null == e3 ? null : e3.fields.find((e4) => e4.name.toLowerCase() === t3);
}
function O(e3) {
  if (!u2(e3))
    return null;
  let t3;
  const { attributeTable: n12, colormap: a11 } = e3;
  if (null != n12) {
    const e4 = N3(n12, "value"), a12 = U2(n12, null, true);
    "string" === a12.type && (t3 = {}, n12.features.forEach((n13) => {
      const l6 = n13.attributes;
      t3[l6[e4.name]] = a12 ? l6[a12.name] : l6[e4.name];
    }));
  }
  return l3.createFromColormap(a11, t3);
}
var G = /* @__PURE__ */ new Map([["m/s", "meter-per-second"], ["km/h", "kilometer-per-hour"], ["knots", "knots"], ["ft/s", "feet-per-second"], ["mph", "mile-per-hour"]]);
function _(e3) {
  if (!o5(e3))
    return null;
  let t3;
  if (null != e3.statistics && e3.statistics.length && ("vector-magdir" === e3.dataType || "vector-uv" === e3.dataType)) {
    const { minMagnitude: n13, maxMagnitude: a12 } = X(e3.dataType, e3.statistics);
    t3 = [{ type: "size", field: "Magnitude", minSize: 10, maxSize: 40, minDataValue: n13, maxDataValue: a12 }];
  }
  const n12 = null != e3.multidimensionalInfo ? G.get(e3.multidimensionalInfo.variables[0].unit) : null, a11 = new h4({ visualVariables: t3, inputUnit: n12, rotationType: "geographic" });
  return a11.visualVariables = [...a11.sizeVariables, ...a11.rotationVariables], a11;
}
function H(e3) {
  var _a;
  return { color: (_a = e3.symbolLayers[0].material) == null ? void 0 : _a.color, type: "esriSFS", style: "esriSFSSolid" };
}
function K(e3) {
  var _a, _b;
  if ("uniqueValue" === e3.type) {
    const t3 = e3.uniqueValueInfos, n12 = t3 == null ? void 0 : t3[0].symbol;
    return ((_a = n12 == null ? void 0 : n12.symbolLayers) == null ? void 0 : _a.length) && (e3.uniqueValueInfos = t3 == null ? void 0 : t3.map((e4) => ({ value: e4.value, label: e4.label, symbol: e4.symbol ? H(e4.symbol) : null }))), e3;
  }
  if ("classBreaks" === e3.type) {
    const t3 = e3.classBreakInfos, n12 = t3[0].symbol;
    return ((_b = n12 == null ? void 0 : n12.symbolLayers) == null ? void 0 : _b.length) && (e3.classBreakInfos = t3.map((e4) => ({ classMinValue: e4.classMinValue, classMaxValue: e4.classMaxValue, label: e4.label, symbol: e4.symbol ? H(e4.symbol) : null }))), e3;
  }
  return e3;
}
function X(e3, t3) {
  let n12, a11;
  if ("vector-magdir" === e3)
    n12 = t3[0].min, a11 = t3[0].max;
  else {
    const e4 = t3[0].min, l6 = t3[0].max, r3 = t3[1].min, s6 = t3[1].max;
    n12 = 0, a11 = Math.max(Math.abs(e4), Math.abs(r3), Math.abs(l6), Math.abs(s6));
  }
  return { minMagnitude: n12, maxMagnitude: a11 };
}

// node_modules/@arcgis/core/rest/imageService/fetchRasterInfo.js
async function u7(u8, m8, f9) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
  const p12 = f4(u8), { rasterFunction: c10, sourceJSON: d10 } = m8 || {}, h6 = c10 ? JSON.stringify(c10.rasterFunctionDefinition || c10) : null, g4 = s4({ ...p12.query, renderingRule: h6, f: "json" }), b4 = i2(g4, f9);
  u8 = p12.path;
  const y9 = d10 || await U(u8, b4).then((e3) => e3.data), S3 = y9.hasRasterAttributeTable ? U(`${u8}/rasterAttributeTable`, b4) : null, V2 = y9.hasColormap ? U(`${u8}/colormap`, b4) : null, v2 = y9.hasHistograms ? U(`${u8}/histograms`, b4) : null, x2 = y9.currentVersion >= 10.3 ? U(`${u8}/keyProperties`, b4) : null, D3 = y9.hasMultidimensions ? U(`${u8}/multidimensionalInfo`, b4) : null, T3 = await Promise.allSettled([S3, V2, v2, x2, D3]);
  let R4 = null;
  if (y9.minValues && y9.minValues.length === y9.bandCount) {
    R4 = [];
    for (let e3 = 0; e3 < y9.minValues.length; e3++)
      R4.push({ min: y9.minValues[e3], max: y9.maxValues[e3], avg: y9.meanValues[e3], stddev: y9.stdvValues[e3] });
  }
  const j6 = w.fromJSON(y9.extent), w4 = Math.ceil(j6.width / y9.pixelSizeX - 0.1), I2 = Math.ceil(j6.height / y9.pixelSizeY - 0.1), J = f2.fromJSON(y9.spatialReference || y9.extent.spatialReference), N4 = "fulfilled" === T3[0].status ? (_a = T3[0].value) == null ? void 0 : _a.data : null, O2 = ((_b = N4 == null ? void 0 : N4.features) == null ? void 0 : _b.length) ? d2.fromJSON(N4) : null, C = "fulfilled" === T3[1].status ? (_c = T3[1].value) == null ? void 0 : _c.data.colormap : null, z3 = (C == null ? void 0 : C.length) ? C : null, $ = "fulfilled" === T3[2].status ? (_d = T3[2].value) == null ? void 0 : _d.data.histograms : null, F3 = ((_f = (_e = $ == null ? void 0 : $[0]) == null ? void 0 : _e.counts) == null ? void 0 : _f.length) ? $ : null, M2 = "fulfilled" === T3[3].status ? ((_g = T3[3].value) == null ? void 0 : _g.data) ?? {} : {}, P = "fulfilled" === T3[4].status ? (_h = T3[4].value) == null ? void 0 : _h.data.multidimensionalInfo : null, A2 = ((_i = P == null ? void 0 : P.variables) == null ? void 0 : _i.length) ? P : null;
  A2 && A2.variables.forEach((e3) => {
    var _a2;
    ((_a2 = e3.statistics) == null ? void 0 : _a2.length) && e3.statistics.forEach((e4) => {
      e4.avg = e4.mean, e4.stddev = e4.standardDeviation;
    });
  });
  const { defaultVariable: E2, serviceDataType: k2 } = y9;
  E2 && E2 !== M2.DefaultVariable && (M2.DefaultVariable = E2), (k2 == null ? void 0 : k2.includes("esriImageServiceDataTypeVector")) && !k2.includes(M2.DataType) && (M2.DataType = k2.replace("esriImageServiceDataType", ""));
  let q = y9.noDataValue;
  return ((_j = y9.noDataValues) == null ? void 0 : _j.length) && y9.noDataValues.some((e3) => e3 !== q) && (q = y9.noDataValues), new m2({ width: w4, height: I2, bandCount: y9.bandCount, extent: w.fromJSON(y9.extent), spatialReference: J, pixelSize: new x({ x: y9.pixelSizeX, y: y9.pixelSizeY, spatialReference: J }), pixelType: y9.pixelType.toLowerCase(), statistics: R4, attributeTable: O2, colormap: z3, histograms: F3, keyProperties: M2, noDataValue: q, multidimensionalInfo: A2 });
}
function m7(e3, t3, a11) {
  return u7(e3, { sourceJSON: t3 }, a11);
}
function f8(e3, t3, a11) {
  return u7(e3, { rasterFunction: t3 }, a11);
}
function p11(e3, t3) {
  e3.attributeTable || (t3.hasRasterAttributeTable = false), e3.histograms || (t3.hasHistograms = false), e3.colormap || (t3.hasColormap = false), e3.multidimensionalInfo || (t3.hasMultidimensions = false);
}

// node_modules/@arcgis/core/rest/support/ImageHistogramParameters.js
var j5;
var d9 = j5 = class extends f {
  constructor() {
    super(...arguments), this.geometry = null, this.mosaicRule = null, this.rasterFunction = null, this.pixelSize = null, this.raster = void 0, this.timeExtent = null;
  }
  writeGeometry(e3, r3, t3) {
    null != e3 && (r3.geometryType = p(e3), r3[t3] = e3.toJSON());
  }
  get renderingRule() {
    return o(n.getLogger(this), "renderingRule", { replacement: "rasterFunction", version: "4.27", warnOnce: true }), this._get("rasterFunction");
  }
  set renderingRule(e3) {
    o(n.getLogger(this), "renderingRule", { replacement: "rasterFunction", version: "4.27", warnOnce: true }), this._set("rasterFunction", e3);
  }
  clone() {
    return new j5(a({ geometry: this.geometry, mosaicRule: this.mosaicRule, rasterFunction: this.rasterFunction, pixelSize: this.pixelSize, raster: this.raster, timeExtent: this.timeExtent }));
  }
};
e([y({ types: n4, json: { read: y2 } })], d9.prototype, "geometry", void 0), e([r("geometry")], d9.prototype, "writeGeometry", null), e([y({ type: j3, json: { write: true } })], d9.prototype, "mosaicRule", void 0), e([y({ type: N2 })], d9.prototype, "renderingRule", null), e([y({ type: N2, json: { write: true, name: "renderingRule" } })], d9.prototype, "rasterFunction", void 0), e([y({ type: x, json: { write: true } })], d9.prototype, "pixelSize", void 0), e([y({ json: { write: true } })], d9.prototype, "raster", void 0), e([y({ type: c, json: { read: { source: "time" }, write: { target: "time" } } })], d9.prototype, "timeExtent", void 0), d9 = j5 = e([a2("esri.rest.support.ImageHistogramParameters")], d9);
var h5 = d9;

export {
  l4 as l,
  d7 as d,
  c8 as c,
  a7 as a,
  i4 as i,
  n9 as n,
  N2 as N,
  j3 as j,
  c9 as c2,
  t2 as t,
  V,
  k,
  S2 as S,
  B2 as B,
  E,
  K,
  m7 as m,
  f8 as f,
  p11 as p,
  h5 as h
};
//# sourceMappingURL=chunk-AYKBCBY7.js.map
