import {
  te
} from "./chunk-YYI7TRI3.js";
import {
  u as u2
} from "./chunk-4VVENLLF.js";
import {
  g,
  u
} from "./chunk-DH7BG2VH.js";
import {
  a,
  t
} from "./chunk-R4SGP2EA.js";
import {
  n
} from "./chunk-GBF2OQAY.js";

// node_modules/@arcgis/core/views/3d/support/renderInfoUtils/line.js
function p(o, t2, s, p2) {
  const l2 = "polygon" === o.type ? u.CCW_IS_HOLE : u.NONE, a2 = "polygon" === o.type ? o.rings : o.paths, { position: u3, outlines: f } = g(a2, !!o.hasZ, l2, o.spatialReference), g2 = t(u3.length), m = u2(u3, o.spatialReference, 0, g2, 0, u3, 0, u3.length / 3, t2, s, p2), y = null != m;
  return { lines: y ? c(f, u3, g2) : [], projectionSuccess: y, sampledElevation: m };
}
function l(e, t2) {
  const i = "polygon" === e.type ? u.CCW_IS_HOLE : u.NONE, p2 = "polygon" === e.type ? e.rings : e.paths, { position: l2, outlines: a2 } = g(p2, false, i), u3 = n(l2, e.spatialReference, 0, l2, t2, 0, l2.length / 3);
  for (let o = 2; o < l2.length; o += 3)
    l2[o] = te;
  return { lines: u3 ? c(a2, l2) : [], projectionSuccess: u3 };
}
function c(o, e, n2 = null) {
  const r = new Array();
  for (const { index: i, count: s } of o) {
    if (s <= 1)
      continue;
    const o2 = 3 * i, p2 = 3 * s;
    r.push({ position: a(e, 3 * i, 3 * s), mapPositions: null != n2 ? a(n2, o2, p2) : void 0 });
  }
  return r;
}

export {
  p,
  l
};
//# sourceMappingURL=chunk-ID25T22U.js.map
