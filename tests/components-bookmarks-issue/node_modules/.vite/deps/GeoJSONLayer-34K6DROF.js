import {
  l
} from "./chunk-ZECONJNT.js";
import "./chunk-UWZ4CRJK.js";
import {
  c as c4
} from "./chunk-LQR76D5M.js";
import "./chunk-2CWW7O7M.js";
import {
  p as p5
} from "./chunk-Q5NCQLSM.js";
import "./chunk-FLBJ53KN.js";
import {
  p as p4
} from "./chunk-YH2IYJYF.js";
import "./chunk-GGHKH3LP.js";
import "./chunk-VS6AHHIY.js";
import {
  c as c3
} from "./chunk-Z4ALW6LX.js";
import "./chunk-H4O73SDK.js";
import {
  p as p3
} from "./chunk-UVXSAP7V.js";
import "./chunk-IZ3VJLQ6.js";
import "./chunk-DRC4XSYG.js";
import {
  s as s2
} from "./chunk-IHQNQQJC.js";
import {
  i
} from "./chunk-4IKPTZ53.js";
import {
  C
} from "./chunk-DXMBDX2I.js";
import {
  m as m3,
  u as u2
} from "./chunk-TUVEYM7U.js";
import "./chunk-5S637BGW.js";
import "./chunk-BFOJPIF7.js";
import {
  f as f4
} from "./chunk-7UUNSIMA.js";
import "./chunk-GMRQGGML.js";
import "./chunk-BYK4ZOU2.js";
import {
  p as p2
} from "./chunk-OHYLFFUW.js";
import {
  e as e2
} from "./chunk-XW3FDKYP.js";
import "./chunk-Y7RXGLGH.js";
import "./chunk-3JC3OUNW.js";
import "./chunk-RO3CTAP7.js";
import "./chunk-GKMVTGGM.js";
import "./chunk-XGTCDM4C.js";
import "./chunk-QNG4TY7L.js";
import "./chunk-RW5QMWE6.js";
import "./chunk-LGMX4E7L.js";
import "./chunk-2NPNEA6N.js";
import "./chunk-U34ZXOJT.js";
import "./chunk-OKRW5W44.js";
import "./chunk-RGAA5Z76.js";
import "./chunk-Q6RZBEZ6.js";
import "./chunk-PC66NY33.js";
import "./chunk-YY2VB3AE.js";
import "./chunk-VEYMN5N3.js";
import "./chunk-H6NTWZSO.js";
import "./chunk-BMT3OVAP.js";
import {
  b as b2
} from "./chunk-W5ALAOW2.js";
import "./chunk-FHDHOWK5.js";
import "./chunk-Y546C2O5.js";
import "./chunk-IYKBAIQE.js";
import "./chunk-BDRVHR2K.js";
import "./chunk-DVIGFJWY.js";
import "./chunk-AKEHDP75.js";
import "./chunk-5MMGIT64.js";
import "./chunk-AKQ765JR.js";
import "./chunk-ERD6I7QP.js";
import {
  d as d2
} from "./chunk-F3BQGS35.js";
import {
  y as y2
} from "./chunk-Z3NX5DTX.js";
import "./chunk-J4RP32NG.js";
import "./chunk-6NLHKXEW.js";
import "./chunk-LMO6NZJA.js";
import "./chunk-A5QTLE4Y.js";
import "./chunk-SCHTG6ZQ.js";
import "./chunk-QYC3GV65.js";
import {
  P
} from "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import {
  j as j2
} from "./chunk-4ZLXDMI5.js";
import {
  f as f3
} from "./chunk-EMYOYGGK.js";
import {
  n as n2
} from "./chunk-6PMFOUWZ.js";
import "./chunk-3KPZ3BQR.js";
import "./chunk-5JYVZQZR.js";
import {
  t
} from "./chunk-UUG4W2PI.js";
import {
  u
} from "./chunk-WW22JHXA.js";
import {
  S
} from "./chunk-ZAM62XN5.js";
import {
  I as I2,
  c as c2,
  d,
  f as f2,
  g,
  m as m2,
  p,
  y as y3
} from "./chunk-RKVEKQ5O.js";
import "./chunk-P7J4JFEH.js";
import {
  b
} from "./chunk-G7FOE26O.js";
import "./chunk-USOPZ2Q6.js";
import "./chunk-S5I4QKJD.js";
import "./chunk-LSM34QAB.js";
import "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import "./chunk-JW7VBMHD.js";
import "./chunk-GLLRUDMY.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import {
  g as g2,
  p as p6
} from "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import {
  o
} from "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-AKLOTDO2.js";
import "./chunk-6AQIVLDN.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-LBXFRGMS.js";
import "./chunk-HLDUDRTD.js";
import "./chunk-SLQA5YBV.js";
import "./chunk-UMXV3EBO.js";
import {
  m
} from "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import {
  j
} from "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import {
  c
} from "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-5LSHHVQ5.js";
import {
  w
} from "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import {
  f
} from "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import {
  I
} from "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import "./chunk-Z4Y53NDM.js";
import "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a2
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  a,
  k
} from "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";
import {
  has
} from "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/layers/graphics/sources/GeoJSONSource.js
var p7 = class extends m {
  constructor() {
    super(...arguments), this.type = "geojson", this.refresh = k(async (e3) => {
      await this.load();
      const { extent: t2, timeExtent: r } = await this._connection.invoke("refresh", e3);
      return this.sourceJSON.extent = t2, r && (this.sourceJSON.timeInfo.timeExtent = [r.start, r.end]), { dataChanged: true, updates: { extent: this.sourceJSON.extent, timeInfo: this.sourceJSON.timeInfo } };
    });
  }
  load(e3) {
    const t2 = null != e3 ? e3.signal : null;
    return this.addResolvingPromise(this._startWorker(t2)), Promise.resolve(this);
  }
  destroy() {
    var _a;
    (_a = this._connection) == null ? void 0 : _a.close(), this._connection = null;
  }
  applyEdits(e3) {
    return this.load().then(() => this._applyEdits(e3));
  }
  openPorts() {
    return this.load().then(() => this._connection.openPorts());
  }
  queryFeatures(e3, t2 = {}) {
    return this.load(t2).then(() => this._connection.invoke("queryFeatures", e3 ? e3.toJSON() : null, t2)).then((e4) => d2.fromJSON(e4));
  }
  queryFeaturesJSON(e3, t2 = {}) {
    return this.load(t2).then(() => this._connection.invoke("queryFeatures", e3 ? e3.toJSON() : null, t2));
  }
  queryFeatureCount(e3, t2 = {}) {
    return this.load(t2).then(() => this._connection.invoke("queryFeatureCount", e3 ? e3.toJSON() : null, t2));
  }
  queryObjectIds(e3, t2 = {}) {
    return this.load(t2).then(() => this._connection.invoke("queryObjectIds", e3 ? e3.toJSON() : null, t2));
  }
  queryExtent(e3, t2 = {}) {
    return this.load(t2).then(() => this._connection.invoke("queryExtent", e3 ? e3.toJSON() : null, t2)).then((e4) => ({ count: e4.count, extent: w.fromJSON(e4.extent) }));
  }
  querySnapping(e3, t2 = {}) {
    return this.load(t2).then(() => this._connection.invoke("querySnapping", e3, t2));
  }
  _applyEdits(e3) {
    if (!this._connection)
      throw new s("geojson-layer-source:edit-failure", "Memory source not loaded");
    const r = this.layer.objectIdField, o2 = [], s3 = [], i2 = [];
    if (e3.addFeatures)
      for (const t2 of e3.addFeatures)
        o2.push(this._serializeFeature(t2));
    if (e3.deleteFeatures)
      for (const t2 of e3.deleteFeatures)
        "objectId" in t2 && null != t2.objectId ? s3.push(t2.objectId) : "attributes" in t2 && null != t2.attributes[r] && s3.push(t2.attributes[r]);
    if (e3.updateFeatures)
      for (const t2 of e3.updateFeatures)
        i2.push(this._serializeFeature(t2));
    return this._connection.invoke("applyEdits", { adds: o2, updates: i2, deletes: s3 }).then(({ extent: e4, timeExtent: t2, featureEditResults: r2 }) => (this.sourceJSON.extent = e4, t2 && (this.sourceJSON.timeInfo.timeExtent = [t2.start, t2.end]), this._createEditsResult(r2)));
  }
  _createEditsResult(e3) {
    return { addFeatureResults: e3.addResults ? e3.addResults.map(this._createFeatureEditResult, this) : [], updateFeatureResults: e3.updateResults ? e3.updateResults.map(this._createFeatureEditResult, this) : [], deleteFeatureResults: e3.deleteResults ? e3.deleteResults.map(this._createFeatureEditResult, this) : [], addAttachmentResults: [], updateAttachmentResults: [], deleteAttachmentResults: [] };
  }
  _createFeatureEditResult(e3) {
    const r = true === e3.success ? null : e3.error || { code: void 0, description: void 0 };
    return { objectId: e3.objectId, globalId: e3.globalId, error: r ? new s("geojson-layer-source:edit-failure", r.description, { code: r.code }) : null };
  }
  _serializeFeature(e3) {
    const { attributes: t2 } = e3, r = this._geometryForSerialization(e3);
    return r ? { geometry: r.toJSON(), attributes: t2 } : { attributes: t2 };
  }
  _geometryForSerialization(e3) {
    const { geometry: t2 } = e3;
    return null == t2 ? null : "mesh" === t2.type || "extent" === t2.type ? j.fromExtent(t2.extent) : t2;
  }
  async _startWorker(e3) {
    this._connection = await p4("GeoJSONSourceWorker", { strategy: has("feature-layers-workers") ? "dedicated" : "local", signal: e3, registryTarget: this });
    const { fields: t2, spatialReference: r, hasZ: s3, geometryType: n3, objectIdField: a3, url: l2, timeInfo: c5, customParameters: d3 } = this.layer, p8 = "defaults" === this.layer.originOf("spatialReference"), m4 = { url: l2, customParameters: d3, fields: t2 && t2.map((e4) => e4.toJSON()), geometryType: o.toJSON(n3), hasZ: s3, objectIdField: a3, timeInfo: c5 ? c5.toJSON() : null, spatialReference: p8 ? null : r && r.toJSON() }, y4 = await this._connection.invoke("load", m4, { signal: e3 });
    for (const i2 of y4.warnings)
      n.getLogger(this.layer).warn("#load()", `$${i2.message} (title: '${this.layer.title || "no title"}', id: '${this.layer.id ?? "no id"}')`, { warning: i2 });
    y4.featureErrors.length && n.getLogger(this.layer).warn("#load()", `Encountered ${y4.featureErrors.length} validation errors while loading features. (title: '${this.layer.title || "no title"}', id: '${this.layer.id ?? "no id"}')`, { errors: y4.featureErrors }), this.sourceJSON = y4.layerDefinition, this.capabilities = l(this.sourceJSON.hasZ, true);
  }
};
e([y()], p7.prototype, "capabilities", void 0), e([y()], p7.prototype, "type", void 0), e([y({ constructOnly: true })], p7.prototype, "layer", void 0), e([y()], p7.prototype, "sourceJSON", void 0), p7 = e([a2("esri.layers.graphics.sources.GeoJSONSource")], p7);

// node_modules/@arcgis/core/layers/GeoJSONLayer.js
var B = s2();
var _ = class extends c3(e2(c4(p3(n2(f4(t(f3(u(j2(S(b))))))))))) {
  constructor(e3) {
    super(e3), this.copyright = null, this.dateFieldsTimeZone = null, this.definitionExpression = null, this.displayField = null, this.editingEnabled = false, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.hasZ = void 0, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.objectIdField = null, this.operationalLayerType = "GeoJSON", this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new p7({ layer: this }), this.spatialReference = f.WGS84, this.templates = null, this.title = "GeoJSON", this.type = "geojson";
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e3) {
    const t2 = this.loadFromPortal({ supportedTypes: ["GeoJson"], supportsData: false }, e3).catch(a).then(() => this.source.load(e3)).then(() => {
      this.read(this.source.sourceJSON, { origin: "service", url: this.parsedUrl }), this.revert(["objectIdField", "fields", "timeInfo"], "service"), p6(this.renderer, this.fieldsIndex), g2(this.timeInfo, this.fieldsIndex);
    });
    return this.addResolvingPromise(t2), Promise.resolve(this);
  }
  get capabilities() {
    return this.source ? this.source.capabilities : null;
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("capabilities"), (this._get("createQueryVersion") || 0) + 1;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  get isTable() {
    return this.loaded && null == this.geometryType;
  }
  get parsedUrl() {
    return this.url ? I(this.url) : null;
  }
  set renderer(e3) {
    p6(e3, this.fieldsIndex), this._set("renderer", e3);
  }
  set url(e3) {
    if (!e3)
      return void this._set("url", e3);
    const t2 = I(e3);
    this._set("url", t2.path), t2.query && (this.customParameters = { ...this.customParameters, ...t2.query });
  }
  async applyEdits(e3, t2) {
    const { applyEdits: r } = await import("./editingSupport-OQAPOMEA.js");
    await this.load();
    const o2 = await r(this, this.source, e3, t2);
    return this.read({ extent: this.source.sourceJSON.extent, timeInfo: this.source.sourceJSON.timeInfo }, { origin: "service", ignoreDefaults: true }), o2;
  }
  on(e3, t2) {
    return super.on(e3, t2);
  }
  createPopupTemplate(e3) {
    return p2(this, e3);
  }
  createQuery() {
    var _a;
    const e3 = new b2(), t2 = (_a = this.capabilities) == null ? void 0 : _a.data;
    e3.returnGeometry = true, t2 && t2.supportsZ && (e3.returnZ = true), e3.outFields = ["*"], e3.where = this.definitionExpression || "1=1";
    const { timeOffset: r, timeExtent: o2 } = this;
    return e3.timeExtent = null != r && null != o2 ? o2.offset(-r.value, r.unit) : o2 || null, e3;
  }
  getFieldDomain(e3, t2) {
    var _a;
    return (_a = this.getField(e3)) == null ? void 0 : _a.domain;
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  queryFeatures(e3, t2) {
    return this.load().then(() => this.source.queryFeatures(b2.from(e3) || this.createQuery(), t2)).then((e4) => {
      if (e4 == null ? void 0 : e4.features)
        for (const t3 of e4.features)
          t3.layer = t3.sourceLayer = this;
      return e4;
    });
  }
  queryObjectIds(e3, t2) {
    return this.load().then(() => this.source.queryObjectIds(b2.from(e3) || this.createQuery(), t2));
  }
  queryFeatureCount(e3, t2) {
    return this.load().then(() => this.source.queryFeatureCount(b2.from(e3) || this.createQuery(), t2));
  }
  queryExtent(e3, t2) {
    return this.load().then(() => this.source.queryExtent(b2.from(e3) || this.createQuery(), t2));
  }
  async hasDataChanged() {
    try {
      const { dataChanged: e3, updates: t2 } = await this.source.refresh(this.customParameters);
      return null != t2 && this.read(t2, { origin: "service", url: this.parsedUrl, ignoreDefaults: true }), e3;
    } catch {
    }
    return false;
  }
};
e([y({ readOnly: true, json: { read: false, write: false } })], _.prototype, "capabilities", null), e([y({ type: String })], _.prototype, "copyright", void 0), e([y({ readOnly: true })], _.prototype, "createQueryVersion", null), e([y(c("dateFieldsTimeReference"))], _.prototype, "dateFieldsTimeZone", void 0), e([y({ readOnly: true })], _.prototype, "defaultPopupTemplate", null), e([y({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], _.prototype, "definitionExpression", void 0), e([y({ type: String })], _.prototype, "displayField", void 0), e([y({ type: Boolean })], _.prototype, "editingEnabled", void 0), e([y(f2)], _.prototype, "elevationInfo", void 0), e([y({ type: [y2], json: { name: "layerDefinition.fields", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "fields" } } } })], _.prototype, "fields", void 0), e([y(B.fieldsIndex)], _.prototype, "fieldsIndex", void 0), e([y({ type: w, json: { name: "extent" } })], _.prototype, "fullExtent", void 0), e([y({ type: ["point", "polygon", "polyline", "multipoint"], json: { read: { reader: o.read } } })], _.prototype, "geometryType", void 0), e([y({ type: Boolean })], _.prototype, "hasZ", void 0), e([y(I2)], _.prototype, "id", void 0), e([y({ type: Boolean, readOnly: true })], _.prototype, "isTable", null), e([y(m2)], _.prototype, "labelsVisible", void 0), e([y({ type: [C], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: i }, write: true } })], _.prototype, "labelingInfo", void 0), e([y(c2)], _.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide"] })], _.prototype, "listMode", void 0), e([y({ type: String, json: { name: "layerDefinition.objectIdField", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "objectIdField" } } } })], _.prototype, "objectIdField", void 0), e([y(g)], _.prototype, "opacity", void 0), e([y({ type: ["GeoJSON"] })], _.prototype, "operationalLayerType", void 0), e([y({ readOnly: true })], _.prototype, "parsedUrl", null), e([y(y3)], _.prototype, "popupEnabled", void 0), e([y({ type: P, json: { name: "popupInfo", write: true } })], _.prototype, "popupTemplate", void 0), e([y({ types: m3, json: { name: "layerDefinition.drawingInfo.renderer", write: true, origins: { service: { name: "drawingInfo.renderer" }, "web-scene": { types: u2 } } } })], _.prototype, "renderer", null), e([y(p)], _.prototype, "screenSizePerspectiveEnabled", void 0), e([y({ readOnly: true })], _.prototype, "source", void 0), e([y({ type: f })], _.prototype, "spatialReference", void 0), e([y({ type: [p5] })], _.prototype, "templates", void 0), e([y()], _.prototype, "title", void 0), e([y({ json: { read: false }, readOnly: true })], _.prototype, "type", void 0), e([y(d)], _.prototype, "url", null), _ = e([a2("esri.layers.GeoJSONLayer")], _);
var M = _;
export {
  M as default
};
//# sourceMappingURL=GeoJSONLayer-34K6DROF.js.map
