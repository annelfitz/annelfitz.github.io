{
  "version": 3,
  "sources": ["../../@arcgis/core/layers/support/RasterWorker.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import r from\"../../geometry/support/GeographicTransformation.js\";import e from\"./PixelBlock.js\";import{decode as t}from\"./rasterFormats/RasterCodec.js\";import{split as s,clipTile as o,mosaic as i,approximateTransform as n,getLocalArithmeticNorthRotations as a}from\"./rasterFunctions/pixelUtils.js\";import{create as l}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as m,load as c,getProjectionOffsetGrid as f}from\"./rasterFunctions/rasterProjectionHelper.js\";import{computeStatisticsHistograms as p,estimateStatisticsHistograms as u}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as S,convertToLocalDirections as d}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as x}from\"./rasterTransforms/utils.js\";import y from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as O}from\"../../views/2d/engine/flow/dataUtils.js\";import h from\"../../geometry/Extent.js\";import N from\"../../geometry/Point.js\";class J{convertVectorFieldData(r){const t=e.fromJSON(r.pixelBlock),s=S(t,r.type);return Promise.resolve(null!=s?s.toJSON():null)}computeStatisticsHistograms(r){const t=e.fromJSON(r.pixelBlock),s=p(t);return Promise.resolve(s)}async decode(r){const e=await t(r.data,r.options);return e&&e.toJSON()}symbolize(r){r.pixelBlock=e.fromJSON(r.pixelBlock),r.extent=r.extent?h.fromJSON(r.extent):null;const t=this.symbolizer.symbolize(r);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=y.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=l(r.rasterFunctionJSON)}async process(r){const t=this.rasterFunction.process({extent:h.fromJSON(r.extent),primaryPixelBlocks:r.primaryPixelBlocks.map((r=>null!=r?e.fromJSON(r):null)),primaryPixelSizes:r.primaryPixelSizes?.map((r=>null!=r?N.fromJSON(r):null)),primaryRasterIds:r.primaryRasterIds});return null!=t?t.toJSON():null}stretch(r){const t=this.symbolizer.simpleStretch(e.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(t?.toJSON())}estimateStatisticsHistograms(r){const t=u(e.fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=s(e.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel??0,!1===r.useBilinear);return t&&t.forEach(((r,e)=>{t.set(e,r?.toJSON())})),Promise.resolve(t)}clipTile(r){const t=e.fromJSON(r.pixelBlock),s=o({...r,pixelBlock:t});return Promise.resolve(s?.toJSON())}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new e(r):null)),s=i(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let o,l=s;return r.coefs&&(l=n(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(o=a(r.destDimension,r.gcsGrid),l=d(l,r.isUV?\"vector-uv\":\"vector-magdir\",o)),{pixelBlock:l?.toJSON(),localNorthDirections:o}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await O(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=h.fromJSON(e.projectedExtent),s=h.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new r({steps:e.datumTransformationSteps})),(e.includeGCSGrid||m(t.spatialReference,s.spatialReference,o))&&await c();const i=e.rasterTransform?x(e.rasterTransform):null;return f({...e,projectedExtent:t,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{J as default};\n"],
  "mappings": "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",
  "names": ["s", "U", "R", "r", "i"]
}
