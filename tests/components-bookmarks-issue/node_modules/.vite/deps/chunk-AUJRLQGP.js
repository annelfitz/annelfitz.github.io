import {
  t as t2
} from "./chunk-TUVEYM7U.js";
import {
  d
} from "./chunk-F3BQGS35.js";
import {
  P
} from "./chunk-ETHGDNE6.js";
import {
  B,
  C,
  i,
  o
} from "./chunk-326OSIM5.js";
import {
  m
} from "./chunk-HV6S3GY2.js";
import {
  f
} from "./chunk-MBGZKT2Z.js";
import {
  Et,
  U,
  t3 as t
} from "./chunk-SAYWXQVM.js";
import {
  a,
  r
} from "./chunk-7RBRCL6S.js";

// node_modules/@arcgis/core/layers/support/kmlUtils.js
var c = { esriGeometryPoint: "points", esriGeometryPolyline: "polylines", esriGeometryPolygon: "polygons" };
function d2(e) {
  var _a;
  const o2 = e.folders || [], t3 = o2.slice(), r2 = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map(), i2 = /* @__PURE__ */ new Map(), f2 = /* @__PURE__ */ new Map(), a2 = /* @__PURE__ */ new Map(), l = { esriGeometryPoint: n, esriGeometryPolyline: i2, esriGeometryPolygon: f2 };
  (((_a = e.featureCollection) == null ? void 0 : _a.layers) || []).forEach((e2) => {
    const o3 = a(e2);
    o3.featureSet.features = [];
    const t4 = e2.featureSet.geometryType;
    r2.set(t4, o3);
    const a3 = e2.layerDefinition.objectIdField;
    "esriGeometryPoint" === t4 ? h(n, a3, e2.featureSet.features) : "esriGeometryPolyline" === t4 ? h(i2, a3, e2.featureSet.features) : "esriGeometryPolygon" === t4 && h(f2, a3, e2.featureSet.features);
  }), e.groundOverlays && e.groundOverlays.forEach((e2) => {
    a2.set(e2.id, e2);
  }), o2.forEach((o3) => {
    o3.networkLinkIds.forEach((r3) => {
      const s = P2(r3, o3.id, e.networkLinks);
      s && t3.push(s);
    });
  }), t3.forEach((e2) => {
    var _a2;
    if (e2.featureInfos) {
      e2.points = a(r2.get("esriGeometryPoint")), e2.polylines = a(r2.get("esriGeometryPolyline")), e2.polygons = a(r2.get("esriGeometryPolygon")), e2.mapImages = [];
      for (const o3 of e2.featureInfos)
        switch (o3.type) {
          case "esriGeometryPoint":
          case "esriGeometryPolyline":
          case "esriGeometryPolygon": {
            const t4 = l[o3.type].get(o3.id);
            t4 && ((_a2 = e2[c[o3.type]]) == null ? void 0 : _a2.featureSet.features.push(t4));
            break;
          }
          case "GroundOverlay": {
            const t4 = a2.get(o3.id);
            t4 && e2.mapImages.push(t4);
            break;
          }
        }
      e2.fullExtent = j([e2]);
    }
  });
  const u = j(t3);
  return { folders: o2, sublayers: t3, extent: u };
}
function g(t3, s, i2, f2) {
  var _a;
  const a2 = (_a = t) == null ? void 0 : _a.findCredential(t3);
  t3 = Et(t3, { token: a2 == null ? void 0 : a2.token });
  const l = r.kmlServiceUrl;
  return U(l, { query: { url: t3, model: "simple", folders: "", refresh: 0 !== i2 || void 0, outSR: JSON.stringify(s) }, responseType: "json", signal: f2 });
}
function S(e, o2, t3 = null, r2 = []) {
  const s = [], n = {}, i2 = o2.sublayers, f2 = new Set(o2.folders.map((e2) => e2.id));
  return i2.forEach((o3) => {
    var _a;
    const i3 = new e();
    if (t3 ? i3.read(o3, t3) : i3.read(o3), r2.length && f2.has(i3.id) && (i3.visible = r2.includes(i3.id)), n[o3.id] = i3, null != o3.parentFolderId && -1 !== o3.parentFolderId) {
      const e2 = n[o3.parentFolderId];
      e2.sublayers || (e2.sublayers = []), (_a = e2.sublayers) == null ? void 0 : _a.unshift(i3);
    } else
      s.unshift(i3);
  }), s;
}
function h(e, o2, t3) {
  t3.forEach((t4) => {
    e.set(t4.attributes[o2], t4);
  });
}
function G(e, o2) {
  let t3;
  return o2.some((o3) => o3.id === e && (t3 = o3, true)), t3;
}
function P2(e, o2, t3) {
  const r2 = G(e, t3);
  return r2 && (r2.parentFolderId = o2, r2.networkLink = r2), r2;
}
async function b(e) {
  const o2 = d.fromJSON(e.featureSet).features, r2 = e.layerDefinition, s = t2(r2.drawingInfo.renderer), n = P.fromJSON(e.popupInfo), i2 = [];
  for (const t3 of o2) {
    const e2 = await s.getSymbolAsync(t3);
    t3.symbol = e2, t3.popupTemplate = n, t3.visible = true, i2.push(t3);
  }
  return i2;
}
function j(e) {
  var _a, _b, _c, _d, _e, _f;
  const o2 = i(C), t3 = i(C);
  for (const r2 of e) {
    if ((_b = (_a = r2.polygons) == null ? void 0 : _a.featureSet) == null ? void 0 : _b.features)
      for (const e2 of r2.polygons.featureSet.features)
        m(o2, e2.geometry), o(t3, o2);
    if ((_d = (_c = r2.polylines) == null ? void 0 : _c.featureSet) == null ? void 0 : _d.features)
      for (const e2 of r2.polylines.featureSet.features)
        m(o2, e2.geometry), o(t3, o2);
    if ((_f = (_e = r2.points) == null ? void 0 : _e.featureSet) == null ? void 0 : _f.features)
      for (const e2 of r2.points.featureSet.features)
        m(o2, e2.geometry), o(t3, o2);
    if (r2.mapImages)
      for (const e2 of r2.mapImages)
        m(o2, e2.extent), o(t3, o2);
  }
  return B(t3, C) ? void 0 : { xmin: t3[0], ymin: t3[1], zmin: t3[2], xmax: t3[3], ymax: t3[4], zmax: t3[5], spatialReference: f.WGS84 };
}

export {
  d2 as d,
  g,
  S,
  b,
  j
};
//# sourceMappingURL=chunk-AUJRLQGP.js.map
