import {
  j as j2
} from "./chunk-VXM3PR7E.js";
import "./chunk-VE57JPH4.js";
import {
  a as a5
} from "./chunk-YKIGDW5O.js";
import {
  L
} from "./chunk-YULKNNDN.js";
import "./chunk-A64EK7QM.js";
import "./chunk-FLBJ53KN.js";
import {
  i as i3
} from "./chunk-QMPD4WXY.js";
import "./chunk-YBPOKK6D.js";
import {
  l
} from "./chunk-AHEDDTVZ.js";
import {
  p as p2
} from "./chunk-OHYLFFUW.js";
import {
  e as e6
} from "./chunk-XW3FDKYP.js";
import {
  I,
  x as x2
} from "./chunk-QCMUK3QA.js";
import {
  e as e5
} from "./chunk-KNMQQRV7.js";
import "./chunk-NFB6O77E.js";
import "./chunk-5MMGIT64.js";
import {
  y as y2
} from "./chunk-Z3NX5DTX.js";
import "./chunk-J4RP32NG.js";
import "./chunk-6NLHKXEW.js";
import {
  P
} from "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import "./chunk-EDPA37RA.js";
import "./chunk-DORNK7ZC.js";
import "./chunk-OWKPWQPA.js";
import "./chunk-CQFVWMFK.js";
import {
  j
} from "./chunk-4ZLXDMI5.js";
import "./chunk-VQWLJR3W.js";
import {
  t
} from "./chunk-UUG4W2PI.js";
import {
  u as u3
} from "./chunk-WW22JHXA.js";
import {
  S
} from "./chunk-ZAM62XN5.js";
import {
  c as c3,
  d
} from "./chunk-RKVEKQ5O.js";
import "./chunk-P7J4JFEH.js";
import {
  b
} from "./chunk-G7FOE26O.js";
import "./chunk-USOPZ2Q6.js";
import "./chunk-S5I4QKJD.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import {
  i
} from "./chunk-R4CJB3GP.js";
import {
  n as n3
} from "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import {
  u as u4
} from "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-AKLOTDO2.js";
import "./chunk-6AQIVLDN.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-RDPH36VD.js";
import "./chunk-LBXFRGMS.js";
import {
  y as y3
} from "./chunk-VTH4DAHQ.js";
import "./chunk-HLDUDRTD.js";
import "./chunk-SLQA5YBV.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import {
  p
} from "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import {
  e as e4,
  f as f3
} from "./chunk-OCF7OAES.js";
import {
  E,
  c as c2,
  e as e3,
  i as i2,
  r as r2,
  u as u2,
  z
} from "./chunk-JZBR4X6W.js";
import {
  e as e2,
  n as n2,
  r
} from "./chunk-OIJCMME5.js";
import {
  c,
  u
} from "./chunk-4KLYOMH2.js";
import "./chunk-TPLOIZC7.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import {
  w
} from "./chunk-IZKCZQUY.js";
import {
  x2 as x
} from "./chunk-M5ZB5S5C.js";
import {
  f as f2
} from "./chunk-MBGZKT2Z.js";
import {
  G
} from "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import {
  o
} from "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import {
  s as s2
} from "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-JCZIM4PO.js";
import "./chunk-SAYWXQVM.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  T,
  a as a3,
  a3 as a4
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  a as a2
} from "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  a,
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/layers/voxel/voxelPlaneUtils.js
var f4 = n2();
var l2 = e5();
var u5 = e5();
var p3 = e5();
var h = r(0, 0, 1);
var j3 = r(0, 1, 0);
var x3 = r(1, 0, 0);
function b2(r3) {
  r2(f4, r3), z(f4, f4);
  const a10 = Math.atan2(f4[1], f4[0]), s6 = I(e5(), h, -a10);
  E(f4, f4, s6);
  const c8 = -1 * Math.atan2(f4[2], f4[0]);
  return [c(a10) + 270, c(c8) + 90];
}
function g(o2, a10) {
  return I(u5, h, u(o2 - 270)), I(p3, j3, u(a10 - 90)), x2(l2, u5, p3), r2(f4, x3), E(f4, f4, l2), z(f4, f4), [f4[0], f4[1], f4[2]];
}

// node_modules/@arcgis/core/layers/voxel/VoxelSlice.js
var m = class extends i(f) {
  constructor(o2) {
    super(o2), this.enabled = true, this.label = "", this.normal = null, this.point = null;
  }
  get orientation() {
    if (!Array.isArray(this.normal) || 3 !== this.normal.length)
      return 0;
    const [o2, t6] = b2(this.normal);
    return a5.normalize(a3(o2), 0, true);
  }
  set orientation(o2) {
    const t6 = g(o2, this.tilt);
    this._set("normal", t6), this._set("orientation", o2);
  }
  get tilt() {
    if (!Array.isArray(this.normal) || 3 !== this.normal.length)
      return 0;
    const [o2, t6] = b2(this.normal);
    return a5.normalize(a3(t6), 0, true);
  }
  set tilt(o2) {
    const t6 = g(this.orientation, o2);
    this._set("normal", t6), this._set("tilt", o2);
  }
};
e([y({ type: Boolean, json: { write: true } })], m.prototype, "enabled", void 0), e([y({ type: String, json: { write: true } })], m.prototype, "label", void 0), e([y({ type: Number, json: { read: false }, clonable: false, range: { min: 0, max: 360 } }), s2((o2) => a5.normalize(a3(o2), 0, true))], m.prototype, "orientation", null), e([y({ type: Number, json: { read: false }, clonable: false, range: { min: 0, max: 360 } }), s2((o2) => a5.normalize(a3(o2), 0, true))], m.prototype, "tilt", null), e([y({ type: [Number], json: { write: true } })], m.prototype, "normal", void 0), e([y({ type: [Number], json: { write: true } })], m.prototype, "point", void 0), m = e([a4("esri.layers.voxel.VoxelSlice")], m);
var c4 = m;

// node_modules/@arcgis/core/layers/voxel/VoxelSection.js
var d2 = class extends i(f) {
  constructor() {
    super(...arguments), this.enabled = true, this.href = null, this.id = null, this.label = "", this.normal = null, this.point = null, this.sizeInPixel = null, this.slices = null, this.timeId = 0, this.variableId = null;
  }
  get orientation() {
    if (!Array.isArray(this.normal) || 3 !== this.normal.length)
      return 0;
    const [e7, r3] = b2(this.normal);
    return a5.normalize(a3(e7), 0, true);
  }
  get tilt() {
    if (!Array.isArray(this.normal) || 3 !== this.normal.length)
      return 0;
    const [e7, r3] = b2(this.normal);
    return a5.normalize(a3(r3), 0, true);
  }
};
e([y({ type: Boolean, json: { default: true, write: true } })], d2.prototype, "enabled", void 0), e([y({ type: String, json: { origins: { service: { read: p } }, write: { enabled: true, isRequired: true } } }), j2({ origins: ["web-scene"], type: "resource", prefix: "sections", compress: true })], d2.prototype, "href", void 0), e([y({ type: T, json: { write: { enabled: true, isRequired: true } } })], d2.prototype, "id", void 0), e([y({ type: String, json: { write: true } })], d2.prototype, "label", void 0), e([y({ type: Number, clonable: false, readOnly: true, range: { min: 0, max: 360 } })], d2.prototype, "orientation", null), e([y({ type: Number, clonable: false, readOnly: true, range: { min: 0, max: 360 } })], d2.prototype, "tilt", null), e([y({ type: [Number], json: { write: { enabled: true, isRequired: true } } })], d2.prototype, "normal", void 0), e([y({ type: [Number], json: { write: { enabled: true, isRequired: true } } })], d2.prototype, "point", void 0), e([y({ type: [T], json: { write: { enabled: true, isRequired: true } } })], d2.prototype, "sizeInPixel", void 0), e([y({ type: [c4], json: { write: true } })], d2.prototype, "slices", void 0), e([y({ type: T, json: { default: 0, write: true } })], d2.prototype, "timeId", void 0), e([y({ type: T, json: { write: { enabled: true, isRequired: true } } })], d2.prototype, "variableId", void 0), d2 = e([a4("esri.layers.voxel.VoxelSection")], d2);
var u6 = d2;

// node_modules/@arcgis/core/layers/voxel/VoxelSimpleShading.js
var t2 = class extends f {
  constructor() {
    super(...arguments), this.diffuseFactor = 0.5, this.specularFactor = 0.5;
  }
};
e([y({ type: Number, range: { min: 0, max: 1 }, json: { default: 0.5, write: true } })], t2.prototype, "diffuseFactor", void 0), e([y({ type: Number, range: { min: 0, max: 1 }, json: { default: 0.5, write: true } })], t2.prototype, "specularFactor", void 0), t2 = e([a4("esri.layers.voxel.VoxelSimpleShading")], t2);
var p4 = t2;

// node_modules/@arcgis/core/layers/voxel/VoxelFormat.js
var s3 = class extends f {
  constructor() {
    super(...arguments), this.continuity = null, this.hasNoData = false, this.noData = 0, this.offset = 0, this.scale = 1, this.type = null;
  }
};
e([y({ type: ["discrete", "continuous"], json: { write: true } })], s3.prototype, "continuity", void 0), e([y({ type: Boolean, json: { write: true } })], s3.prototype, "hasNoData", void 0), e([y({ type: Number, json: { write: true } })], s3.prototype, "noData", void 0), e([y({ type: Number, json: { write: true } })], s3.prototype, "offset", void 0), e([y({ type: Number, json: { write: true } })], s3.prototype, "scale", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], s3.prototype, "type", void 0), s3 = e([a4("esri.layers.voxel.VoxelFormat")], s3);
var p5 = s3;

// node_modules/@arcgis/core/layers/voxel/VoxelVariable.js
var s4 = class extends f {
  constructor() {
    super(...arguments), this.id = null, this.description = "", this.name = null, this.originalFormat = null, this.renderingFormat = null, this.unit = "", this.volumeId = 0, this.type = null;
  }
};
e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], s4.prototype, "id", void 0), e([y({ type: String, json: { write: true } })], s4.prototype, "description", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], s4.prototype, "name", void 0), e([y({ type: p5, json: { write: true } })], s4.prototype, "originalFormat", void 0), e([y({ type: p5, json: { write: { enabled: true, isRequired: true } } })], s4.prototype, "renderingFormat", void 0), e([y({ type: String, json: { write: true } })], s4.prototype, "unit", void 0), e([y({ type: Number, json: { write: true } })], s4.prototype, "volumeId", void 0), e([y({ type: ["stc-hot-spot-results", "stc-cluster-outlier-results", "stc-estimated-bin", "generic-nearest-interpolated"], json: { write: true } })], s4.prototype, "type", void 0), s4 = e([a4("esri.layers.voxel.VoxelVariable")], s4);
var p6 = s4;

// node_modules/@arcgis/core/layers/voxel/VoxelIsosurface.js
var l3 = class extends i(f) {
  constructor() {
    super(...arguments), this.color = u4.fromArray([0, 0, 0, 0]), this.value = 0, this.enabled = true, this.label = "", this.colorLocked = false;
  }
};
e([y({ type: u4, json: { type: [T], write: { enabled: true, isRequired: true } } })], l3.prototype, "color", void 0), e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], l3.prototype, "value", void 0), e([y({ type: Boolean, json: { default: true, write: true } })], l3.prototype, "enabled", void 0), e([y({ type: String, json: { write: true } })], l3.prototype, "label", void 0), e([y({ type: Boolean, json: { default: false, write: true } })], l3.prototype, "colorLocked", void 0), l3 = e([a4("esri.layers.voxel.VoxelIsosurface")], l3);
var a6 = l3;

// node_modules/@arcgis/core/layers/voxel/VoxelColorStop.js
var c5 = class extends i(f) {
  constructor() {
    super(...arguments), this.color = null, this.position = 0;
  }
};
e([y({ type: u4, json: { type: [T], write: { enabled: true, isRequired: true } } })], c5.prototype, "color", void 0), e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], c5.prototype, "position", void 0), c5 = e([a4("esri.layers.voxel.VoxelColorStop")], c5);
var l4 = c5;

// node_modules/@arcgis/core/layers/voxel/VoxelOpacityStop.js
var p7 = class extends i(f) {
  constructor() {
    super(...arguments), this.opacity = 1, this.position = 0;
  }
};
e([y({ type: Number, json: { name: "alpha", write: { enabled: true, isRequired: true } } })], p7.prototype, "opacity", void 0), e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], p7.prototype, "position", void 0), p7 = e([a4("esri.layers.voxel.VoxelOpacityStop")], p7);
var i4 = p7;

// node_modules/@arcgis/core/layers/voxel/VoxelRangeFilter.js
var p8 = class extends i(f) {
  constructor() {
    super(...arguments), this.enabled = false, this.range = null;
  }
};
e([y({ type: Boolean, json: { default: false, write: true } })], p8.prototype, "enabled", void 0), e([y({ type: [Number], json: { write: true } })], p8.prototype, "range", void 0), p8 = e([a4("esri.layers.voxel.VoxelRangeFilter")], p8);
var a7 = p8;

// node_modules/@arcgis/core/layers/voxel/VoxelTransferFunctionStyle.js
var u7;
!function(o2) {
  o2[o2.Color = 1] = "Color", o2[o2.Alpha = 2] = "Alpha", o2[o2.Both = 3] = "Both";
}(u7 || (u7 = {}));
var y4 = class extends i(f) {
  constructor(o2) {
    super(o2), this.interpolation = null, this.stretchRange = null, this.rangeFilter = null, this._colorMapSize = 256, this.colorStops = new (V.ofType(l4))(), this.opacityStops = new (V.ofType(i4))();
  }
  set colorStops(o2) {
    this._set("colorStops", n3(o2, this._get("colorStops"), V.ofType(l4)));
  }
  set opacityStops(o2) {
    this._set("opacityStops", n3(o2, this._get("opacityStops"), V.ofType(i4)));
  }
  getPreviousNext(o2, t6, r3) {
    let e7 = o2;
    for (; --e7 > 0 && t6[e7].type !== r3 && t6[e7].type !== u7.Both; )
      ;
    let s6 = o2;
    const i5 = t6.length;
    for (; ++s6 < i5 && t6[s6].type !== r3 && t6[s6].type !== u7.Both; )
      ;
    return [e7, s6];
  }
  get rasterizedTransferFunction() {
    const o2 = [];
    if (this.colorStops.length < 2)
      return o2;
    const r3 = [], e7 = [], s6 = 1e-5;
    for (const t6 of this.colorStops) {
      if (!t6.color)
        return o2;
      e7.push({ color: { r: t6.color.r, g: t6.color.g, b: t6.color.b, a: Math.round(255 * (1 - t6.color.a)) }, position: t6.position, type: u7.Color });
    }
    if (0 === this.opacityStops.length)
      for (const t6 of e7)
        r3.push({ color: t6.color, position: t6.position });
    else {
      for (const t6 of this.opacityStops) {
        const o4 = e4(t6.position, 0, 1), r4 = Math.round(255 * e4(1 - t6.opacity, 0, 1));
        let i6 = false;
        for (const t7 of e7)
          if (t7.type === u7.Color && Math.abs(t7.position - o4) < s6) {
            t7.color.a = r4, t7.type = u7.Both, i6 = true;
            break;
          }
        i6 || e7.push({ color: { r: 0, g: 0, b: 0, a: r4 }, position: t6.position, type: u7.Alpha });
      }
      e7.sort((o4, t6) => o4.position < t6.position ? -1 : 1);
      const o3 = e7.length;
      for (let t6 = 0; t6 < o3; ++t6) {
        const r4 = e7[t6];
        if (r4.type !== u7.Both)
          if (r4.type === u7.Color) {
            const [s7, i6] = this.getPreviousNext(t6, e7, u7.Alpha);
            if (-1 !== s7 && i6 !== o3) {
              const o4 = (r4.position - e7[s7].position) / (e7[i6].position - e7[s7].position);
              r4.color.a = Math.round(f3(e7[s7].color.a, e7[i6].color.a, o4));
            } else
              r4.color.a = -1 !== s7 ? e7[s7].color.a : e7[i6].color.a;
          } else {
            const [s7, i6] = this.getPreviousNext(t6, e7, u7.Color);
            if (-1 !== s7 && i6 !== o3) {
              const o4 = (r4.position - e7[s7].position) / (e7[i6].position - e7[s7].position), t7 = e7[s7].color, p14 = e7[i6].color;
              S2.forEach((e8) => {
                r4.color[e8] = Math.round(f3(t7[e8], p14[e8], o4));
              });
            } else
              -1 !== s7 ? S2.forEach((o4) => {
                r4.color[o4] = e7[s7].color[o4];
              }) : S2.forEach((o4) => {
                r4.color[o4] = e7[i6].color[o4];
              });
          }
      }
      for (const t6 of e7)
        r3.push({ color: t6.color, position: t6.position });
    }
    r3[0].position = 0, r3[r3.length - 1].position = 1;
    let i5 = 0, l6 = 1;
    for (let c8 = 0; c8 < this._colorMapSize; ++c8) {
      const e8 = c8 / this._colorMapSize;
      for (; e8 > r3[l6].position; )
        i5 = l6++;
      const s7 = (e8 - r3[i5].position) / (r3[l6].position - r3[i5].position), a10 = r3[i5].color, h2 = r3[l6].color, f6 = new u4();
      S2.forEach((o3) => {
        f6[o3] = Math.round(f3(a10[o3], h2[o3], s7));
      }), f6.a = e4(1 - f3(a10.a, h2.a, s7) / 255, 0, 1), o2.push(f6);
    }
    return o2;
  }
  getColorForContinuousDataValue(o2, t6) {
    const r3 = this.rasterizedTransferFunction;
    if (this.colorStops.length < 2 || !Array.isArray(this.stretchRange) || this.stretchRange.length < 2 || r3.length < 256)
      return null;
    let e7 = this.stretchRange[0], s6 = this.stretchRange[1];
    if (e7 > s6) {
      const o3 = e7;
      e7 = s6, s6 = o3;
    }
    o2 = e4(o2, e7, s6);
    const i5 = r3[Math.round((o2 - e7) / (s6 - e7) * (this._colorMapSize - 1))].clone();
    return t6 || (i5.a = 1), i5;
  }
};
e([y({ type: ["linear", "nearest"], json: { write: true } })], y4.prototype, "interpolation", void 0), e([y({ type: [Number], json: { write: { enabled: true, isRequired: true } } })], y4.prototype, "stretchRange", void 0), e([y({ type: V.ofType(l4), json: { write: { enabled: true, overridePolicy() {
  return { enabled: !!this.colorStops && this.colorStops.length > 0 };
} } } })], y4.prototype, "colorStops", null), e([y({ type: V.ofType(i4), json: { read: { source: "alphaStops" }, write: { enabled: true, target: "alphaStops", overridePolicy() {
  return { enabled: !!this.opacityStops && this.opacityStops.length > 0 };
} } } })], y4.prototype, "opacityStops", null), e([y({ type: a7, json: { write: true } })], y4.prototype, "rangeFilter", void 0), e([y({ type: [u4], clonable: false, json: { read: false } })], y4.prototype, "rasterizedTransferFunction", null), y4 = e([a4("esri.layers.voxel.VoxelTransferFunctionStyle")], y4);
var g2 = y4;
var S2 = ["r", "g", "b"];

// node_modules/@arcgis/core/layers/voxel/VoxelUniqueValue.js
var a8 = class extends i(f) {
  constructor() {
    super(...arguments), this.color = u4.fromArray([0, 0, 0, 0]), this.value = 0, this.enabled = true, this.label = "";
  }
};
e([y({ type: u4, json: { type: [T], write: { enabled: true, isRequired: true } } })], a8.prototype, "color", void 0), e([y({ type: T, json: { write: { enabled: true, isRequired: true } } })], a8.prototype, "value", void 0), e([y({ type: Boolean, json: { default: true, write: true } })], a8.prototype, "enabled", void 0), e([y({ type: String, json: { write: true } })], a8.prototype, "label", void 0), a8 = e([a4("esri.layers.voxel.VoxelUniqueValue")], a8);
var l5 = a8;

// node_modules/@arcgis/core/layers/voxel/VoxelVariableStyle.js
var p9;
var c6 = p9 = class extends f {
  constructor(e7) {
    super(e7), this.variableId = 0, this.label = "", this.transferFunction = null, this.uniqueValues = null, this.isosurfaces = null, this.uniqueValues = new (V.ofType(l5))(), this.isosurfaces = new (V.ofType(a6))();
  }
  clone() {
    return new p9({ variableId: this.variableId, label: this.label, transferFunction: a(this.transferFunction), uniqueValues: a(this.uniqueValues), isosurfaces: a(this.isosurfaces) });
  }
};
e([y({ type: T, json: { write: { enabled: true, isRequired: true } } })], c6.prototype, "variableId", void 0), e([y({ type: String, json: { write: true } })], c6.prototype, "label", void 0), e([y({ type: g2, json: { write: { enabled: true, overridePolicy() {
  return { enabled: !this.uniqueValues || this.uniqueValues.length < 1 };
} } } })], c6.prototype, "transferFunction", void 0), e([y({ type: V.ofType(l5), json: { write: { enabled: true, overridePolicy() {
  return { enabled: !!this.uniqueValues && this.uniqueValues.length > 0 };
} } } })], c6.prototype, "uniqueValues", void 0), e([y({ type: V.ofType(a6), json: { write: { enabled: true, overridePolicy() {
  const e7 = !this.uniqueValues || this.uniqueValues.length < 1, s6 = !!this.isosurfaces && this.isosurfaces.length > 0;
  return { enabled: e7 && s6 };
} } } })], c6.prototype, "isosurfaces", void 0), c6 = p9 = e([a4("esri.layers.voxel.VoxelVariableStyle")], c6);
var f5 = c6;

// node_modules/@arcgis/core/layers/voxel/VoxelIrregularSpacing.js
var t3 = class extends f {
  constructor() {
    super(...arguments), this.values = null;
  }
};
e([y({ type: [Number], json: { write: true } })], t3.prototype, "values", void 0), t3 = e([a4("esri.layers.voxel.VoxelIrregularSpacing")], t3);
var p10 = t3;

// node_modules/@arcgis/core/layers/voxel/VoxelRegularSpacing.js
var t4 = class extends f {
  constructor() {
    super(...arguments), this.scale = 1, this.offset = 0;
  }
};
e([y({ type: Number, json: { write: true } })], t4.prototype, "scale", void 0), e([y({ type: Number, json: { write: true } })], t4.prototype, "offset", void 0), t4 = e([a4("esri.layers.voxel.VoxelRegularSpacing")], t4);
var p11 = t4;

// node_modules/@arcgis/core/layers/voxel/VoxelDimension.js
var a9 = class extends f {
  constructor() {
    super(...arguments), this.irregularSpacing = null, this.isPositiveUp = true, this.isWrappedDateLine = false, this.label = null, this.name = null, this.quantity = null, this.regularSpacing = null, this.size = 0, this.unit = null;
  }
  get isRegular() {
    return (null == this.irregularSpacing || void 0 === this.irregularSpacing) && null !== this.regularSpacing;
  }
  getRange() {
    var _a;
    return this.isRegular ? [this.regularSpacing.offset, this.regularSpacing.offset + this.regularSpacing.scale * (this.size - 1)] : Array.isArray((_a = this.irregularSpacing) == null ? void 0 : _a.values) && this.irregularSpacing.values.length > 1 ? [this.irregularSpacing.values[0], this.irregularSpacing.values[this.irregularSpacing.values.length - 1]] : [0, 0];
  }
};
e([y({ type: p10, json: { write: true } })], a9.prototype, "irregularSpacing", void 0), e([y({ type: Boolean, json: { write: true } })], a9.prototype, "isPositiveUp", void 0), e([y({ type: Boolean, json: { write: true } })], a9.prototype, "isWrappedDateLine", void 0), e([y({ type: String, json: { write: true } })], a9.prototype, "label", void 0), e([y({ type: String, json: { write: true } })], a9.prototype, "name", void 0), e([y({ type: String, json: { write: true } })], a9.prototype, "quantity", void 0), e([y({ type: p11, json: { write: true } })], a9.prototype, "regularSpacing", void 0), e([y({ type: Number, json: { write: true } })], a9.prototype, "size", void 0), e([y({ type: String, json: { write: true } })], a9.prototype, "unit", void 0), e([y({ type: Boolean, json: { read: false } })], a9.prototype, "isRegular", null), a9 = e([a4("esri.layers.voxel.VoxelDimension")], a9);
var p12 = a9;

// node_modules/@arcgis/core/layers/voxel/VoxelVolume.js
var d3 = class extends f {
  constructor(e7) {
    super(e7), this.id = 0, this.dimensions = null, this.spatialReference = f2.WGS84;
  }
  get zDimension() {
    if (!this.dimensions)
      return -1;
    if (!Array.isArray(this.dimensions))
      return -1;
    if (4 !== this.dimensions.length)
      return -1;
    for (let e7 = 2; e7 < 4; ++e7)
      if (this.dimensions[e7].size > 0)
        return e7;
    return -1;
  }
  get isValid() {
    return !!this.dimensions && (!!Array.isArray(this.dimensions) && (4 === this.dimensions.length && (!(this.dimensions[0].size < 1 || this.dimensions[1].size < 1) && !(-1 === this.zDimension || this.dimensions[this.zDimension].size < 1))));
  }
  get originInLayerSpace3D() {
    if (!this.isValid || "xyt" === this.volumeType)
      return [0, 0, 0];
    const e7 = this.dimensions[0].getRange(), i5 = this.dimensions[1].getRange(), s6 = this.dimensions[2], r3 = s6.isRegular ? s6.getRange() : [0, s6.size];
    return [e7[0], i5[0], r3[0]];
  }
  get voxelSizeInLayerSpaceSigned() {
    if (!this.isValid || "xyt" === this.volumeType)
      return [0, 0, 0];
    const e7 = this.dimensions[0].getRange(), i5 = this.dimensions[1].getRange(), s6 = this.dimensions[2], r3 = s6.isRegular ? s6.getRange() : [0, s6.size], t6 = [this.sizeInVoxels[0], this.sizeInVoxels[1], this.sizeInVoxels[2]];
    for (let n4 = 0; n4 < 3; ++n4)
      t6[n4] < 2 ? t6[n4] = 1 : t6[n4] -= 1;
    return s6.isRegular && !s6.isPositiveUp && (t6[2] *= -1), [(e7[1] - e7[0]) / t6[0], (i5[1] - i5[0]) / t6[1], (r3[1] - r3[0]) / t6[2]];
  }
  get volumeType() {
    if (this.isValid) {
      const e7 = this.dimensions[2].size > 0, i5 = this.dimensions[3].size > 0;
      if (!e7 && i5)
        return "xyt";
      if (e7 && i5)
        return "xyzt";
    }
    return "xyz";
  }
  get sizeInVoxels() {
    if (!this.isValid)
      return [0, 0, 0];
    const e7 = this.zDimension;
    return [this.dimensions[0].size, this.dimensions[1].size, this.dimensions[e7].size];
  }
  computeVoxelSpaceLocation(e7) {
    var _a;
    if (!this.isValid)
      return [0, 0, 0];
    if ("xyt" === this.volumeType)
      return n.getLogger(this).error("computeVoxelSpacePosition cannot be used with XYT volumes."), [0, 0, 0];
    if (!G(this.spatialReference, e7.spatialReference))
      return n.getLogger(this).error("pos argument should have the same spatial reference as the VoxelLayer."), [0, 0, 0];
    const i5 = r(e7.x, e7.y, e7.z ?? 0);
    e3(i5, i5, this.originInLayerSpace3D), i2(i5, i5, this.voxelSizeInLayerSpaceSigned);
    const r3 = this.dimensions[this.zDimension];
    if (!r3.isRegular && Array.isArray((_a = r3.irregularSpacing) == null ? void 0 : _a.values) && r3.irregularSpacing.values.length > 1) {
      const s6 = e7.z ?? 0, t6 = r3.irregularSpacing.values, n4 = r3.isPositiveUp ? 1 : -1, o2 = t6.reduce((e8, i6) => Math.abs(n4 * i6 - s6) < Math.abs(n4 * e8 - s6) ? i6 : e8);
      for (let e8 = 0; e8 < t6.length; ++e8)
        if (t6[e8] === o2) {
          i5[2] = e8;
          break;
        }
    }
    return [i5[0], i5[1], i5[2]];
  }
  computeLayerSpaceLocation(e7) {
    var _a;
    if (!this.isValid)
      return new x({ x: 0, y: 0, spatialReference: this.spatialReference });
    const i5 = e2(e7);
    if (c2(i5, i5, this.voxelSizeInLayerSpaceSigned), u2(i5, i5, this.originInLayerSpace3D), "xyt" === this.volumeType)
      return new x({ x: i5[0], y: i5[1], spatialReference: this.spatialReference });
    const s6 = this.dimensions[this.zDimension];
    return s6.isRegular || Array.isArray((_a = s6.irregularSpacing) == null ? void 0 : _a.values) && (e7[2] < 0 ? i5[2] = s6.irregularSpacing.values[0] : e7[2] < s6.irregularSpacing.values.length ? i5[2] = s6.irregularSpacing.values[e7[2]] : i5[2] = s6.irregularSpacing.values[s6.irregularSpacing.values.length - 1], s6.isPositiveUp || (i5[2] *= -1)), new x({ x: i5[0], y: i5[1], z: i5[2], spatialReference: this.spatialReference });
  }
};
e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], d3.prototype, "id", void 0), e([y({ type: [p12], json: { write: { enabled: true, isRequired: true } } })], d3.prototype, "dimensions", void 0), e([y({ type: f2, json: { read: { enabled: false } } })], d3.prototype, "spatialReference", void 0), e([y({ type: Number, json: { read: false } })], d3.prototype, "zDimension", null), e([y({ type: [Boolean], json: { read: false } })], d3.prototype, "isValid", null), e([y({ type: [Number], json: { read: false } })], d3.prototype, "originInLayerSpace3D", null), e([y({ type: [Number], json: { read: false } })], d3.prototype, "voxelSizeInLayerSpaceSigned", null), e([y({ type: ["xyz", "xyzt", "xyt"], json: { read: { enabled: false } } })], d3.prototype, "volumeType", null), e([y({ type: [Number], json: { read: false } })], d3.prototype, "sizeInVoxels", null), d3 = e([a4("esri.layers.voxel.VoxelVolume")], d3);
var y5 = d3;

// node_modules/@arcgis/core/layers/voxel/VoxelVolumeIndex.js
var t5;
var s5 = t5 = class extends f {
  constructor() {
    super(...arguments), this.apronWidth = 1, this.brickSize = [32, 32, 32], this.maxLodLevel = 0, this.nodeSize = [4, 4, 4];
  }
  isValid() {
    const e7 = new t5();
    return e7.apronWidth === this.apronWidth && e7.maxLodLevel === this.maxLodLevel && (!!this.brickSize && (!!this.nodeSize && (!(!Array.isArray(this.brickSize) || !Array.isArray(this.nodeSize)) && (3 === this.brickSize.length && 3 === this.nodeSize.length && (32 === this.brickSize[0] && 32 === this.brickSize[1] && 32 === this.brickSize[2] && (4 === this.nodeSize[0] && 4 === this.nodeSize[1] && 4 === this.nodeSize[2]))))));
  }
};
e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], s5.prototype, "apronWidth", void 0), e([y({ type: [Number], json: { write: { enabled: true, isRequired: true } } })], s5.prototype, "brickSize", void 0), e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], s5.prototype, "maxLodLevel", void 0), e([y({ type: [Number], json: { write: { enabled: true, isRequired: true } } })], s5.prototype, "nodeSize", void 0), s5 = t5 = e([a4("esri.layers.voxel.VoxelVolumeIndex")], s5);
var d4 = s5;

// node_modules/@arcgis/core/layers/voxel/VoxelDynamicSection.js
var m2 = class extends i(f) {
  constructor(o2) {
    super(o2), this.enabled = true, this.label = "", this.normal = null, this.point = null;
  }
  get orientation() {
    if (!Array.isArray(this.normal) || 3 !== this.normal.length)
      return 0;
    const [o2, t6] = b2(this.normal);
    return a5.normalize(a3(o2), 0, true);
  }
  set orientation(o2) {
    const t6 = g(o2, this.tilt);
    this._set("normal", t6), this._set("orientation", o2);
  }
  get tilt() {
    if (!Array.isArray(this.normal) || 3 !== this.normal.length)
      return 0;
    const [o2, t6] = b2(this.normal);
    return a5.normalize(a3(t6), 0, true);
  }
  set tilt(o2) {
    const t6 = g(this.orientation, o2);
    this._set("normal", t6), this._set("tilt", o2);
  }
};
e([y({ type: Boolean, json: { default: true, write: true } })], m2.prototype, "enabled", void 0), e([y({ type: String, json: { write: true } })], m2.prototype, "label", void 0), e([y({ type: Number, json: { read: false }, clonable: false, range: { min: 0, max: 360 } }), s2((o2) => a5.normalize(a3(o2), 0, true))], m2.prototype, "orientation", null), e([y({ type: Number, json: { read: false }, clonable: false, range: { min: 0, max: 360 } }), s2((o2) => a5.normalize(a3(o2), 0, true))], m2.prototype, "tilt", null), e([y({ type: [Number], json: { write: true } })], m2.prototype, "normal", void 0), e([y({ type: [Number], json: { write: true } })], m2.prototype, "point", void 0), m2 = e([a4("esri.layers.voxel.VoxelDynamicSection")], m2);
var c7 = m2;

// node_modules/@arcgis/core/layers/voxel/VoxelVolumeStyle.js
var p13;
var m3 = p13 = class extends f {
  constructor(e7) {
    super(e7), this.volumeId = 0, this.verticalExaggeration = 1, this.exaggerationMode = "scale-height", this.verticalOffset = 0, this.slices = new (V.ofType(c4))(), this.dynamicSections = new (V.ofType(c7))();
  }
  set slices(e7) {
    this._set("slices", n3(e7, this._get("slices"), V.ofType(c4)));
  }
  set dynamicSections(e7) {
    this._set("dynamicSections", n3(e7, this._get("dynamicSections"), V.ofType(c7)));
  }
  clone() {
    return new p13({ volumeId: this.volumeId, verticalExaggeration: this.verticalExaggeration, exaggerationMode: this.exaggerationMode, verticalOffset: this.verticalOffset, slices: a(this.slices), dynamicSections: a(this.dynamicSections) });
  }
};
e([y({ type: T, json: { write: { enabled: true, isRequired: true } } })], m3.prototype, "volumeId", void 0), e([y({ type: Number, json: { default: 1, write: true } })], m3.prototype, "verticalExaggeration", void 0), e([y({ type: ["scale-position", "scale-height"], json: { default: "scale-height", write: true } })], m3.prototype, "exaggerationMode", void 0), e([y({ type: Number, json: { default: 0, write: true } })], m3.prototype, "verticalOffset", void 0), e([y({ type: V.ofType(c4), json: { write: { enabled: true, overridePolicy() {
  return { enabled: !!this.slices && this.slices.length > 0 };
} } } })], m3.prototype, "slices", null), e([y({ type: V.ofType(c7), json: { write: { enabled: true, overridePolicy() {
  return { enabled: !!this.dynamicSections && this.dynamicSections.length > 0 };
} } } })], m3.prototype, "dynamicSections", null), m3 = p13 = e([a4("esri.layers.voxel.VoxelVolumeStyle")], m3);
var d5 = m3;

// node_modules/@arcgis/core/layers/VoxelLayer.js
var A = class extends L(l(u3(j(t(S(e6(i3(b)))))))) {
  constructor(e7) {
    super(e7), this.serviceRoot = "", this.operationalLayerType = "Voxel", this.legendEnabled = true, this.title = null, this.sections = null, this.currentVariableId = 0, this.volumeStyles = null, this.renderMode = "volume", this.variableStyles = null, this.enableSlices = true, this.enableSections = true, this.enableDynamicSections = true, this.enableIsosurfaces = true, this.shading = new p4(), this.opacity = 1, this.variables = new V(), this.volumes = new V(), this.index = null, this.minScale = 0, this.maxScale = 0, this.type = "voxel", this.version = { major: Number.NaN, minor: Number.NaN, versionString: "" }, this.fullExtent = null, this.popupEnabled = false, this.test = null, this.volumeStyles = new (V.ofType(d5))(), this.variableStyles = new (V.ofType(f5))(), this.sections = new (V.ofType(u6))();
  }
  normalizeCtorArgs(e7) {
    return (e7 == null ? void 0 : e7.constantUpscaling) && (this.test = { constantUpscaling: true }, delete e7.constantUpscaling), e7;
  }
  set url(e7) {
    this._set("url", y3(e7, n.getLogger(this)));
  }
  load(e7) {
    const t6 = null != e7 ? e7.signal : null, i5 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e7).catch(a2).then(() => this._fetchService(t6)).then(() => this.serviceRoot = this.url);
    return this.addResolvingPromise(i5), Promise.resolve(this);
  }
  read(e7, t6) {
    super.read(e7, t6);
    for (const i5 of this.volumes)
      i5.spatialReference = this.spatialReference;
  }
  readVersion(e7, t6) {
    return super.parseVersionString(e7);
  }
  validateLayer(e7) {
    if (e7.layerType && e7.layerType !== this.operationalLayerType)
      throw new s("voxel-layer:layer-type-not-supported", "VoxelLayer does not support this layer type", { layerType: e7.layerType });
    if (isNaN(this.version.major) || isNaN(this.version.minor) || this.version.major < 3)
      throw new s("layer:service-version-not-supported", "Service version is not supported.", { serviceVersion: this.version.versionString, supportedVersions: "3.x" });
    if (this.version.major > 3)
      throw new s("layer:service-version-too-new", "Service version is too new.", { serviceVersion: this.version.versionString, supportedVersions: "3.x" });
  }
  readFullExtent(e7, t6, i5) {
    if (null != e7 && "object" == typeof e7) {
      const o2 = w.fromJSON(e7, i5);
      if (0 === o2.zmin && 0 === o2.zmax && Array.isArray(t6.volumes)) {
        const e8 = y5.fromJSON(t6.volumes[0]);
        if (e8.isValid && "xyt" !== e8.volumeType) {
          const t7 = e8.dimensions[2];
          if (t7.isRegular) {
            let e9 = t7.regularSpacing.offset, i6 = t7.regularSpacing.offset + t7.regularSpacing.scale * (t7.size - 1);
            if (e9 > i6) {
              const t8 = e9;
              e9 = i6, i6 = t8;
            }
            o2.zmin = e9, o2.zmax = i6;
          }
        }
      }
      return o2;
    }
    return null;
  }
  get voxelFields() {
    const e7 = [new y2({ name: "Voxel.ServiceValue", alias: "Value", domain: null, editable: false, length: 128, type: "string" }), new y2({ name: "Voxel.ServiceVariableLabel", alias: "Variable", domain: null, editable: false, length: 128, type: "string" }), new y2({ name: "Voxel.Position", alias: "Voxel Position", domain: null, editable: false, length: 128, type: "string" })], t6 = this.getVolume(null);
    if (null != t6) {
      if ("xyzt" === t6.volumeType || "xyt" === t6.volumeType) {
        const t7 = new y2({ name: "Voxel.ServiceLocalTime", alias: "Local Time", domain: null, editable: false, length: 128, type: "string" });
        e7.push(t7);
        const i5 = new y2({ name: "Voxel.ServiceNativeTime", alias: "Native Time", domain: null, editable: false, length: 128, type: "string" });
        e7.push(i5);
      }
      if ("xyt" !== t6.volumeType) {
        const t7 = new y2({ name: "Voxel.ServiceDepth", alias: "Depth", domain: null, editable: false, length: 128, type: "string" });
        e7.push(t7);
      }
    }
    return e7;
  }
  get popupTemplate() {
    return this.loaded ? this.createPopupTemplate() : null;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  createPopupTemplate(e7) {
    const t6 = this.voxelFields, i5 = this.title;
    return p2({ fields: t6, title: i5 }, e7);
  }
  getConfiguration() {
    var _a, _b;
    const e7 = { layerType: this.operationalLayerType, version: this.version.versionString, name: this.title, spatialReference: this.spatialReference, fullExtent: this.fullExtent, volumes: this.volumes.toJSON(), variables: this.variables.toJSON(), index: (_a = this.index) == null ? void 0 : _a.toJSON(), sections: this.getSections(), style: { volumeStyles: this.getVolumeStyles(), currentVariableId: this.currentVariableId, renderMode: this.renderMode, variableStyles: this.getVariableStyles(), enableSections: this.enableSections, enableDynamicSections: this.enableDynamicSections, enableIsosurfaces: this.enableIsosurfaces, enableSlices: this.enableSlices, shading: this.shading } };
    return e7.index && ((_b = this.index) == null ? void 0 : _b.isValid()) ? JSON.stringify(e7) : "";
  }
  getVariableStyle(e7) {
    let t6 = -1;
    t6 = null != e7 ? e7 : this.currentVariableId;
    if (!this.variableStyles || -1 === t6)
      return null;
    const i5 = this.variableStyles.findIndex((e8) => e8.variableId === t6);
    return i5 < 0 ? null : this.variableStyles.at(i5);
  }
  getVariable(e7) {
    let t6 = -1;
    if (t6 = null != e7 ? e7 : this.currentVariableId, !this.variables || -1 === t6)
      return null;
    const i5 = this.variables.findIndex((e8) => e8.id === t6);
    return i5 < 0 ? null : this.variables.at(i5);
  }
  getVolume(e7) {
    const t6 = this.getVariable(e7);
    return null != t6 ? this.volumes.find(({ id: e8 }) => e8 === t6.volumeId) : null;
  }
  getVolumeStyle(e7) {
    const t6 = this.getVariable(e7);
    return null != t6 ? this.volumeStyles.find(({ volumeId: e8 }) => e8 === t6.volumeId) : null;
  }
  getColorForContinuousDataValue(e7, t6, i5) {
    var _a;
    const o2 = this.getVariable(e7);
    if (null == o2 || "continuous" !== ((_a = o2.renderingFormat) == null ? void 0 : _a.continuity))
      return null;
    if (!this.variableStyles)
      return null;
    const r3 = this.variableStyles.findIndex((t7) => t7.variableId === e7);
    if (r3 < 0)
      return null;
    const s6 = this.variableStyles.at(r3);
    return (s6 == null ? void 0 : s6.transferFunction) ? s6.transferFunction.getColorForContinuousDataValue(t6, i5) : null;
  }
  getSections() {
    const e7 = [];
    for (const t6 of this.sections)
      e7.push(new u6({ enabled: t6.enabled, href: t6.href, id: t6.id, label: t6.label, normal: t6.normal, point: t6.point, sizeInPixel: t6.sizeInPixel, slices: t6.slices, timeId: t6.timeId, variableId: t6.variableId }));
    return e7;
  }
  getVariableStyles() {
    const e7 = [];
    for (const t6 of this.variableStyles) {
      const i5 = this._getVariable(t6);
      if (null != i5) {
        const o2 = t6.clone();
        o2.isosurfaces.length > 4 && (o2.isosurfaces = o2.isosurfaces.slice(0, 3), n.getLogger(this).error("A maximum of 4 isosurfaces are supported for Voxel Layers."));
        for (const e8 of o2.isosurfaces)
          if (!e8.colorLocked) {
            const t7 = this.getColorForContinuousDataValue(o2.variableId, e8.value, false);
            null === t7 || t7.equals(e8.color) || (e8.color = t7);
          }
        if ("continuous" === i5.renderingFormat.continuity)
          (null === o2.transferFunction || o2.transferFunction.colorStops.length < 2) && n.getLogger(this).error(`VoxelVariableStyle for variable ${i5.id} is invalid. At least 2 color stops are required in the transferFunction for continuous Voxel Layer variables.`), null !== o2.transferFunction && (Array.isArray(o2.transferFunction.stretchRange) && 2 === o2.transferFunction.stretchRange.length || (n.getLogger(this).error(`VoxelVariableStyle for variable ${i5.id} is invalid. The stretchRange of the transferFunction for continuous Voxel Layer variables must be of the form [minimumDataValue, maximumDataValue].`), o2.transferFunction.stretchRange = [0, 1], o2.transferFunction.colorStops.removeAll()));
        else if ("discrete" === i5.renderingFormat.continuity)
          if (0 === t6.uniqueValues.length)
            n.getLogger(this).error(`VoxelVariableStyle for variable ${i5.id} is invalid. Unique values are required for discrete Voxel Layer variables.`);
          else
            for (const e8 of t6.uniqueValues)
              null !== e8.label && void 0 !== e8.label || null === e8.value || void 0 === e8.value || (e8.label = e8.value.toString());
        e7.push(o2);
      } else
        n.getLogger(this).error(`VoxelVariable ID=${t6.variableId} doesn't exist, VoxelVariableStyle for this VoxelVariable will be ignored.`);
    }
    return e7;
  }
  getVolumeStyles() {
    const e7 = [];
    for (const t6 of this.volumeStyles) {
      const i5 = this._getVolumeFromVolumeId(t6.volumeId);
      if (null != i5) {
        const o2 = t6.clone();
        for (const e8 of o2.slices)
          this._isPlaneValid(e8, [0, 1, i5.zDimension], i5.dimensions) || (e8.enabled = false, e8.label = "invalid");
        for (const e8 of o2.dynamicSections)
          this._isPlaneValid(e8, [0, 1, i5.zDimension], i5.dimensions) || (e8.enabled = false, e8.label = "invalid");
        e7.push(o2);
      } else
        n.getLogger(this).error(`VoxelVolume ID=${t6.volumeId} doesn't exist, VoxelVolumeStyle for this VoxelVolume will be ignored.`);
    }
    return e7;
  }
  _getVariable(e7) {
    const t6 = e7.variableId;
    for (const i5 of this.variables)
      if (i5.id === t6)
        return i5;
    return null;
  }
  _getVolumeFromVolumeId(e7) {
    for (const t6 of this.volumes)
      if (t6.id === e7)
        return t6;
    return null;
  }
  _isPlaneValid(e7, t6, i5) {
    if (!e7.point)
      return false;
    if (!Array.isArray(e7.point) || 3 !== e7.point.length)
      return false;
    if (!e7.normal)
      return false;
    if (!Array.isArray(e7.normal) || 3 !== e7.normal.length)
      return false;
    const o2 = r(e7.normal[0], e7.normal[1], e7.normal[2]);
    z(o2, o2);
    const r3 = 1e-6;
    return !(Math.abs(o2[0]) + Math.abs(o2[1]) + Math.abs(o2[2]) < r3) && (e7.normal[0] = o2[0], e7.normal[1] = o2[1], e7.normal[2] = o2[2], true);
  }
};
e([y({ type: ["Voxel"] })], A.prototype, "operationalLayerType", void 0), e([y(c3)], A.prototype, "legendEnabled", void 0), e([y({ json: { write: true } })], A.prototype, "title", void 0), e([y(d)], A.prototype, "url", null), e([y({ type: V.ofType(u6), json: { origins: { "web-scene": { name: "layerDefinition.sections", write: true } } } })], A.prototype, "sections", void 0), e([y({ type: T, json: { origins: { "web-scene": { name: "layerDefinition.style.currentVariableId", write: { enabled: true, isRequired: true, ignoreOrigin: true } }, service: { name: "style.currentVariableId" } } } })], A.prototype, "currentVariableId", void 0), e([y({ type: V.ofType(d5), json: { origins: { "web-scene": { name: "layerDefinition.style.volumeStyles", write: true }, service: { name: "style.volumeStyles" } } } })], A.prototype, "volumeStyles", void 0), e([y({ type: ["volume", "surfaces"], json: { origins: { "web-scene": { name: "layerDefinition.style.renderMode", write: true }, service: { name: "style.renderMode" } } } })], A.prototype, "renderMode", void 0), e([y({ type: V.ofType(f5), json: { origins: { "web-scene": { name: "layerDefinition.style.variableStyles", write: true }, service: { name: "style.variableStyles" } } } })], A.prototype, "variableStyles", void 0), e([y({ type: Boolean, json: { origins: { "web-scene": { name: "layerDefinition.style.enableSlices", write: true }, service: { name: "style.enableSlices" } } } })], A.prototype, "enableSlices", void 0), e([y({ type: Boolean, json: { origins: { "web-scene": { name: "layerDefinition.style.enableSections", write: true }, service: { name: "style.enableSections" } } } })], A.prototype, "enableSections", void 0), e([y({ type: Boolean, json: { origins: { "web-scene": { name: "layerDefinition.style.enableDynamicSections", write: true }, service: { name: "style.enableDynamicSections" } } } })], A.prototype, "enableDynamicSections", void 0), e([y({ type: Boolean, json: { origins: { "web-scene": { name: "layerDefinition.style.enableIsosurfaces", write: true }, service: { name: "style.enableIsosurfaces" } } } })], A.prototype, "enableIsosurfaces", void 0), e([y({ type: p4, json: { origins: { "web-scene": { name: "layerDefinition.style.shading", write: true }, service: { name: "style.shading" } } } })], A.prototype, "shading", void 0), e([y({ type: ["show", "hide"] })], A.prototype, "listMode", void 0), e([y({ type: Number, range: { min: 0, max: 1 }, nonNullable: true, json: { read: false, write: false, origins: { "web-scene": { read: false, write: false }, "portal-item": { read: false, write: false } } } })], A.prototype, "opacity", void 0), e([y({ type: V.ofType(p6) })], A.prototype, "variables", void 0), e([y({ type: V.ofType(y5) })], A.prototype, "volumes", void 0), e([y({ type: d4 })], A.prototype, "index", void 0), e([y({ type: Number, json: { name: "layerDefinition.minScale", write: true, origins: { service: { read: false, write: false } } } })], A.prototype, "minScale", void 0), e([y({ type: Number, json: { name: "layerDefinition.maxScale", write: true, origins: { service: { read: false, write: false } } } })], A.prototype, "maxScale", void 0), e([y({ json: { read: false }, readOnly: true })], A.prototype, "type", void 0), e([y({ readOnly: true, json: { name: "serviceVersion" } })], A.prototype, "version", void 0), e([o("service", "version")], A.prototype, "readVersion", null), e([y({ type: w })], A.prototype, "fullExtent", void 0), e([o("service", "fullExtent", ["fullExtent"])], A.prototype, "readFullExtent", null), e([y({ readOnly: true, clonable: false, json: { read: false } })], A.prototype, "voxelFields", null), e([y({ type: Boolean, json: { name: "disablePopup", read: { reader: (e7, t6) => !t6.disablePopup }, write: { enabled: true, ignoreOrigin: true, writer(e7, t6, i5) {
  t6[i5] = !e7;
} }, origins: { "portal-item": { default: true }, "web-scene": { default: true } } } })], A.prototype, "popupEnabled", void 0), e([y({ type: P, json: { read: false } })], A.prototype, "popupTemplate", null), e([y({ readOnly: true })], A.prototype, "defaultPopupTemplate", null), A = e([a4("esri.layers.VoxelLayer")], A);
var E2 = A;
export {
  E2 as default
};
//# sourceMappingURL=VoxelLayer-PJSS3FEV.js.map
