import {
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";
import {
  has
} from "./chunk-J2EGIWT6.js";

// node_modules/@arcgis/core/views/webgl/checkWebGLError.js
var o = () => n.getLogger("esri.views.webgl.checkWebGLError");
function t(e, r) {
  switch (r) {
    case e.INVALID_ENUM:
      return "Invalid Enum. An unacceptable value has been specified for an enumerated argument.";
    case e.INVALID_VALUE:
      return "Invalid Value. A numeric argument is out of range.";
    case e.INVALID_OPERATION:
      return "Invalid Operation. The specified command is not allowed for the current state.";
    case e.INVALID_FRAMEBUFFER_OPERATION:
      return "Invalid Framebuffer operation. The currently bound framebuffer is not framebuffer complete when trying to render to or to read from it.";
    case e.OUT_OF_MEMORY:
      return "Out of memory. Not enough memory is left to execute the command.";
    case e.CONTEXT_LOST_WEBGL:
      return "WebGL context has been lost";
    default:
      return "Unknown error";
  }
}
var n2 = !!has("enable-feature:webgl-debug");
function a() {
  return n2;
}
function c() {
  return n2;
}
function u(r) {
  if (a()) {
    const n3 = r.getError();
    if (n3) {
      const a2 = t(r, n3), c2 = new Error().stack;
      o().error(new s("webgl-error", "WebGL error occurred", { message: a2, stack: c2 }));
    }
  }
}

export {
  n2 as n,
  a,
  c,
  u
};
//# sourceMappingURL=chunk-5YY6NZNY.js.map
