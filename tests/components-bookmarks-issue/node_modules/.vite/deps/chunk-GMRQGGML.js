import {
  l
} from "./chunk-BYK4ZOU2.js";
import {
  i
} from "./chunk-R4CJB3GP.js";
import {
  c as c2
} from "./chunk-I5RCKVDX.js";
import {
  c
} from "./chunk-QLL2YG25.js";
import {
  o
} from "./chunk-YOPMY6TS.js";
import {
  r
} from "./chunk-VIN55KNF.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";

// node_modules/@arcgis/core/layers/support/TimeInfo.js
function p(e2, t) {
  return l.fromJSON({ value: e2, unit: t });
}
var u = class extends i(f) {
  constructor(e2) {
    super(e2), this.cumulative = false, this.endField = null, this.fullTimeExtent = null, this.hasLiveData = false, this.interval = null, this.startField = null, this.timeZone = null, this.trackIdField = null, this.useTime = true;
  }
  readFullTimeExtent(e2, r2) {
    if (!r2.timeExtent || !Array.isArray(r2.timeExtent) || 2 !== r2.timeExtent.length)
      return null;
    const l2 = new Date(r2.timeExtent[0]), i2 = new Date(r2.timeExtent[1]);
    return new c2({ start: l2, end: i2 });
  }
  writeFullTimeExtent(e2, t) {
    null != (e2 == null ? void 0 : e2.start) && null != e2.end ? t.timeExtent = [e2.start.getTime(), e2.end.getTime()] : t.timeExtent = null;
  }
  readInterval(e2, t) {
    return t.timeInterval && t.timeIntervalUnits ? p(t.timeInterval, t.timeIntervalUnits) : t.defaultTimeInterval && t.defaultTimeIntervalUnits ? p(t.defaultTimeInterval, t.defaultTimeIntervalUnits) : null;
  }
  writeInterval(e2, t) {
    t.timeInterval = (e2 == null ? void 0 : e2.toJSON().value) ?? null, t.timeIntervalUnits = (e2 == null ? void 0 : e2.toJSON().unit) ?? null;
  }
};
e([y({ type: Boolean, json: { name: "exportOptions.timeDataCumulative", write: true } })], u.prototype, "cumulative", void 0), e([y({ type: String, json: { name: "endTimeField", write: { enabled: true, allowNull: true } } })], u.prototype, "endField", void 0), e([y({ type: c2, json: { write: { enabled: true, allowNull: true } } })], u.prototype, "fullTimeExtent", void 0), e([o("fullTimeExtent", ["timeExtent"])], u.prototype, "readFullTimeExtent", null), e([r("fullTimeExtent")], u.prototype, "writeFullTimeExtent", null), e([y({ type: Boolean, json: { write: true } })], u.prototype, "hasLiveData", void 0), e([y({ type: l, json: { write: { enabled: true, allowNull: true } } })], u.prototype, "interval", void 0), e([o("interval", ["timeInterval", "timeIntervalUnits", "defaultTimeInterval", "defaultTimeIntervalUnits"])], u.prototype, "readInterval", null), e([r("interval")], u.prototype, "writeInterval", null), e([y({ type: String, json: { name: "startTimeField", write: { enabled: true, allowNull: true } } })], u.prototype, "startField", void 0), e([y(c("timeReference", true))], u.prototype, "timeZone", void 0), e([y({ type: String, json: { write: { enabled: true, allowNull: true } } })], u.prototype, "trackIdField", void 0), e([y({ type: Boolean, json: { name: "exportOptions.useTime", write: true } })], u.prototype, "useTime", void 0), u = e([a("esri.layers.support.TimeInfo")], u);
var d = u;

export {
  d
};
//# sourceMappingURL=chunk-GMRQGGML.js.map
