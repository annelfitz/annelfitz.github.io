import {
  L
} from "./chunk-3RT7534N.js";
import {
  h,
  u
} from "./chunk-R5A6POKY.js";
import {
  P,
  d
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import {
  o
} from "./chunk-TXBMNSNF.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";

// node_modules/@arcgis/core/widgets/LayerList/LayerListViewModel.js
var c = { view: "view", viewLayers: "view-layers", mapLayers: "map-layers", layerViews: "layer-views", layerListMode: "layer-list-mode" };
var d2 = "hide";
var h2 = V.ofType(L);
var p = class extends o.EventedAccessor {
  constructor(e2) {
    super(e2), this.checkPublishStatusEnabled = false, this.listItemCreatedFunction = null, this.operationalItems = new h2(), this.view = null;
  }
  initialize() {
    this.addHandles([d(() => {
      var _a;
      return true === ((_a = this.view) == null ? void 0 : _a.ready);
    }, () => this._viewHandles(), P), d(() => [this.listItemCreatedFunction, this.checkPublishStatusEnabled], () => this._recompileList())], c.view);
  }
  destroy() {
    this.view = null, this.operationalItems.removeAll();
  }
  get state() {
    const { view: e2 } = this;
    return (e2 == null ? void 0 : e2.ready) ? "ready" : e2 ? "loading" : "disabled";
  }
  get totalItems() {
    return this.operationalItems.flatten((e2) => e2.children).length;
  }
  triggerAction(e2, t) {
    e2 && !e2.disabled && this.emit("trigger-action", { action: e2, item: t });
  }
  moveListItem(e2, t, s, i) {
    var _a, _b;
    const r = e2 == null ? void 0 : e2.layer;
    if (!r || "subtype-sublayer" === r.type)
      return;
    const a2 = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.layers, o2 = t ? h(t) : a2, l = s ? h(s) : a2;
    if (!o2 || !l)
      return;
    const { operationalItems: m } = this, c2 = (t == null ? void 0 : t.children) || m, d3 = (s == null ? void 0 : s.children) || m, h3 = l.length - i;
    e2.parent = s || null, c2.remove(e2), o2.remove(r), d3.includes(e2) || d3.add(e2, h3), l.includes(r) || l.add(r, h3), this._compileList();
  }
  _createLayerViewHandles(e2) {
    this.removeHandles(c.layerViews), this._compileList(), e2 && this.addHandles(e2.on("change", () => this._compileList()), c.layerViews);
  }
  _createMapLayerHandles(e2) {
    this.removeHandles(c.mapLayers), this._compileList(), e2 && this.addHandles(e2.on("change", () => this._compileList()), c.mapLayers);
  }
  _createListItem(e2) {
    const { view: t, listItemCreatedFunction: s, checkPublishStatusEnabled: i } = this;
    return new L({ checkPublishStatusEnabled: i, layer: e2, listItemCreatedFunction: s, view: t });
  }
  _removeAllItems() {
    this.operationalItems.removeAll();
  }
  _getViewableLayers(e2) {
    if (e2)
      return e2.filter((e3) => u(e3) !== d2);
  }
  _watchLayersListMode(e2) {
    this.removeHandles(c.layerListMode), e2 && e2.forEach((e3) => {
      "listMode" in e3 && this.addHandles(d(() => e3.listMode, () => this._compileList()), c.layerListMode);
    });
  }
  _compileList() {
    var _a, _b;
    const e2 = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.layers;
    this._watchLayersListMode(e2);
    const t = this._getViewableLayers(e2);
    (t == null ? void 0 : t.length) ? (this._createNewItems(t), this._removeItems(t), this._sortItems(t)) : this._removeAllItems();
  }
  _createNewItems(e2) {
    const { operationalItems: t } = this;
    e2.forEach((e3) => {
      t.some((t2) => t2.layer === e3) || t.add(this._createListItem(e3));
    });
  }
  _removeItems(e2) {
    const { operationalItems: t } = this, s = [];
    t.forEach((t2) => {
      t2 && e2 && e2.includes(t2.layer) || s.push(t2);
    }), t.removeMany(s);
  }
  _sortItems(e2) {
    const { operationalItems: t } = this;
    t.sort((t2, s) => {
      const i = e2.indexOf(t2.layer), r = e2.indexOf(s.layer);
      return i > r ? -1 : i < r ? 1 : 0;
    });
  }
  _recompileList() {
    this._removeAllItems(), this._compileList();
  }
  _viewHandles() {
    const { view: e2 } = this;
    this.removeHandles([c.mapLayers, c.layerViews, c.viewLayers]), (e2 == null ? void 0 : e2.ready) ? this.addHandles([d(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.allLayers;
    }, (e3) => this._createMapLayerHandles(e3), P), d(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.allLayerViews;
    }, (e3) => this._createLayerViewHandles(e3), P)], c.viewLayers) : this._removeAllItems();
  }
};
e([y()], p.prototype, "checkPublishStatusEnabled", void 0), e([y()], p.prototype, "listItemCreatedFunction", void 0), e([y({ type: h2 })], p.prototype, "operationalItems", void 0), e([y({ readOnly: true })], p.prototype, "state", null), e([y()], p.prototype, "totalItems", null), e([y()], p.prototype, "view", void 0), p = e([a("esri.widgets.LayerList.LayerListViewModel")], p);
var y2 = p;

export {
  y2 as y
};
//# sourceMappingURL=chunk-THQ2DNZA.js.map
