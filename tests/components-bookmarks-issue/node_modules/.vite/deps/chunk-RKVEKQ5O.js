import {
  a
} from "./chunk-P7J4JFEH.js";
import {
  h
} from "./chunk-USOPZ2Q6.js";
import {
  r
} from "./chunk-6IED7TER.js";
import {
  c as c2,
  d
} from "./chunk-AKLOTDO2.js";
import {
  c
} from "./chunk-I5RCKVDX.js";
import {
  f as f2
} from "./chunk-CZSTCON2.js";
import {
  w
} from "./chunk-IZKCZQUY.js";
import {
  f
} from "./chunk-MBGZKT2Z.js";

// node_modules/@arcgis/core/layers/support/commonProperties.js
var p = { type: Boolean, value: true, json: { origins: { service: { read: false, write: false }, "web-map": { read: false, write: false } }, name: "screenSizePerspective", write: { enabled: true, layerContainerTypes: a } } };
var y = { type: Boolean, value: true, json: { name: "disablePopup", read: { reader: (e, n) => !n.disablePopup }, write: { enabled: true, writer(e, n, r2) {
  n[r2] = !e;
} } } };
var m = { type: Boolean, value: true, nonNullable: true, json: { name: "showLabels", write: { enabled: true, layerContainerTypes: a } } };
var d2 = { type: String, json: { origins: { "portal-item": { write: false } }, write: { isRequired: true, ignoreOrigin: true, writer: f2 } } };
var c3 = { type: Boolean, value: true, nonNullable: true, json: { origins: { service: { read: { enabled: false } } }, name: "showLegend", write: { enabled: true, layerContainerTypes: a } } };
var f3 = { value: null, type: h, json: { origins: { service: { name: "elevationInfo", write: true } }, name: "layerDefinition.elevationInfo", write: { enabled: true, layerContainerTypes: a } } };
function w2(e) {
  return { type: e, readOnly: true, json: { origins: { service: { read: true } }, read: false } };
}
var u = { write: { enabled: true, layerContainerTypes: a }, read: true };
var g = { type: Number, json: { origins: { "web-document": u, "portal-item": { write: true } } } };
var b = { ...g, json: { ...g.json, origins: { "web-document": { ...u, write: { enabled: true, layerContainerTypes: a, target: { opacity: { type: Number }, "layerDefinition.drawingInfo.transparency": { type: Number } } } } }, read: { source: ["layerDefinition.drawingInfo.transparency", "drawingInfo.transparency"], reader: (e, n, r2) => {
  var _a;
  return r2 && "service" !== r2.origin || !n.drawingInfo || void 0 === n.drawingInfo.transparency ? ((_a = n.layerDefinition) == null ? void 0 : _a.drawingInfo) && void 0 !== n.layerDefinition.drawingInfo.transparency ? r(n.layerDefinition.drawingInfo.transparency) : void 0 : r(n.drawingInfo.transparency);
} } } };
var j = { type: c, readOnly: true, get() {
  var _a, _b, _c;
  const e = null != ((_a = this.layer) == null ? void 0 : _a.timeInfo) ? this.layer : null != ((_b = this.i3slayer) == null ? void 0 : _b.timeInfo) ? this.i3slayer : null;
  if (null == e)
    return null;
  const { datesInUnknownTimezone: n, timeOffset: r2, useViewTime: i } = e, t = (_c = this.view) == null ? void 0 : _c.timeExtent;
  let s = e.timeExtent;
  n && (s = d(s));
  let l = i ? t && s ? t.intersection(s) : t || s : s;
  if (!l || l.isEmpty || l.isAllTime)
    return l;
  r2 && (l = l.offset(-r2.value, r2.unit)), n && (l = c2(l));
  const p2 = this._get("timeExtent");
  return l.equals(p2) ? p2 : l;
} };
var v = { type: w, readOnly: true, json: { origins: { service: { read: { source: ["fullExtent", "spatialReference"], reader: (e, n) => {
  const t = w.fromJSON(e);
  return null != n.spatialReference && "object" == typeof n.spatialReference && (t.spatialReference = f.fromJSON(n.spatialReference)), t;
} } } }, read: false } };
var I = { type: String, json: { origins: { service: { read: false }, "portal-item": { read: false } } } };
var T = { type: Number, json: { origins: { service: { write: { enabled: false } }, "web-scene": { name: "layerDefinition.minScale", write: { enabled: true, layerContainerTypes: a } } }, name: "layerDefinition.minScale", write: true } };
var S = { type: Number, json: { origins: { service: { write: { enabled: false } }, "web-scene": { name: "layerDefinition.maxScale", write: { enabled: true, layerContainerTypes: a } } }, name: "layerDefinition.maxScale", write: true } };
var C = { json: { write: { ignoreOrigin: true, layerContainerTypes: a }, origins: { "web-map": { read: false, write: false } } } };

export {
  p,
  y,
  m,
  d2 as d,
  c3 as c,
  f3 as f,
  w2 as w,
  g,
  b,
  j,
  v,
  I,
  T,
  S,
  C
};
//# sourceMappingURL=chunk-RKVEKQ5O.js.map
