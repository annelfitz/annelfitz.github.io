{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/components/src/components/dropdown/resources.ts", "../../@esri/calcite-components/dist/components/src/components/dropdown/dropdown.scss?tag=calcite-dropdown&encapsulation=shadow", "../../@esri/calcite-components/dist/components/src/components/dropdown/dropdown.tsx", "../../@esri/calcite-components/dist/components/calcite-dropdown.js"],
  "sourcesContent": ["export const SLOTS = {\n  dropdownTrigger: \"trigger\",\n};\n", "/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-dropdown-width: Specifies the width of the component's wrapper.\n */\n\n:host {\n  @apply inline-block;\n}\n\n@include disabled();\n\n:host .calcite-dropdown-wrapper {\n  --calcite-floating-ui-z-index: theme(\"zIndex.dropdown\");\n  @include floatingUIContainer();\n  @include floatingUIWrapper();\n}\n\n@include floatingUIElemAnim(\".calcite-dropdown-wrapper\");\n:host([open]) .calcite-dropdown-wrapper {\n  @include floatingUIWrapperActive();\n}\n\n:host .calcite-dropdown-content {\n  @apply bg-foreground-1\n    w-auto\n    overflow-y-auto\n    overflow-x-hidden\n    max-h-menu;\n  inline-size: var(--calcite-dropdown-width);\n}\n.calcite-trigger-container {\n  @apply relative flex flex-auto h-full;\n  @include word-break;\n}\n\n@media (forced-colors: active) {\n  /* use real border since box-shadow is removed in high contrast mode */\n  :host([open]) .calcite-dropdown-wrapper {\n    border: 1px solid canvasText;\n  }\n}\n\n// width\n:host([width-scale=\"s\"]) {\n  --calcite-dropdown-width: theme(\"spacing.48\");\n}\n:host([width-scale=\"m\"]) {\n  --calcite-dropdown-width: theme(\"spacing.56\");\n}\n:host([width-scale=\"l\"]) {\n  --calcite-dropdown-width: theme(\"spacing.64\");\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { ItemKeyboardEvent } from \"./interfaces\";\n\nimport {\n  focusElement,\n  focusElementInGroup,\n  isPrimaryPointerButton,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultMenuPlacement,\n  disconnectFloatingUI,\n  EffectivePlacement,\n  filterComputedPlacements,\n  FloatingCSS,\n  FloatingUIComponent,\n  MenuPlacement,\n  OverlayPositioning,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { RequestedItem } from \"../dropdown-group/interfaces\";\nimport { Scale } from \"../interfaces\";\nimport { SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-dropdown-group` elements. Every `calcite-dropdown-item` must have a parent `calcite-dropdown-group`, even if the `groupTitle` property is not set.\n * @slot trigger - A slot for the element that triggers the `calcite-dropdown`.\n */\n@Component({\n  tag: \"calcite-dropdown\",\n  styleUrl: \"dropdown.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class Dropdown\n  implements InteractiveComponent, LoadableComponent, OpenCloseComponent, FloatingUIComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, displays and positions the component.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n\n    if (this.disabled) {\n      this.open = false;\n      return;\n    }\n\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, the component will remain open after a selection is made.\n   *\n   * If the `selectionMode` of the selected `calcite-dropdown-item`'s containing `calcite-dropdown-group` is `\"none\"`, the component will always close.\n   *\n   */\n  @Prop({ reflect: true }) closeOnSelectDisabled = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(value: boolean): void {\n    if (!value) {\n      this.open = false;\n    }\n  }\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: EffectivePlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the maximum number of `calcite-dropdown-item`s to display before showing a scroller.\n   * Value must be greater than `0`, and does not include `groupTitle`'s from `calcite-dropdown-group`.\n   */\n  @Prop({ reflect: true }) maxItems = 0;\n\n  @Watch(\"maxItems\")\n  maxItemsHandler(): void {\n    this.setMaxScrollerHeight();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Determines where the component will be positioned relative to the container element.\n   *\n   * @default \"bottom-start\"\n   */\n  @Prop({ reflect: true }) placement: MenuPlacement = defaultMenuPlacement;\n\n  @Watch(\"placement\")\n  placementHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteDropdownItemElement[] = [];\n\n  /**\n   * Specifies the action to open the component from the container element.\n   */\n  @Prop({ reflect: true }) type: \"hover\" | \"click\" = \"click\";\n\n  /**\n   * Specifies the width of the component.\n   */\n  @Prop({ reflect: true }) widthScale: Scale;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  handlePropsChange(): void {\n    this.updateItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.setFilteredPlacements();\n    this.reposition(true);\n    if (this.open) {\n      this.openHandler();\n      onToggleOpenCloseComponent(this);\n    }\n    connectInteractive(this);\n    this.updateItems();\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.reposition(true);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectInteractive(this);\n    disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  render(): VNode {\n    const { open, guid } = this;\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            class=\"calcite-trigger-container\"\n            id={`${guid}-menubutton`}\n            onClick={this.openCalciteDropdown}\n            onKeyDown={this.keyDownHandler}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.setReferenceEl}\n          >\n            <slot\n              aria-controls={`${guid}-menu`}\n              aria-expanded={toAriaBoolean(open)}\n              aria-haspopup=\"menu\"\n              name={SLOTS.dropdownTrigger}\n              onSlotchange={this.updateTriggers}\n            />\n          </div>\n          <div\n            aria-hidden={toAriaBoolean(!open)}\n            class=\"calcite-dropdown-wrapper\"\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.setFloatingEl}\n          >\n            <div\n              aria-labelledby={`${guid}-menubutton`}\n              class={{\n                [\"calcite-dropdown-content\"]: true,\n                [FloatingCSS.animation]: true,\n                [FloatingCSS.animationActive]: open,\n              }}\n              id={`${guid}-menu`}\n              role=\"menu\"\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.setScrollerAndTransitionEl}\n            >\n              <slot onSlotchange={this.updateGroups} />\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl,\n        referenceEl,\n        overlayPositioning,\n        placement,\n        flipPlacements: filteredFlipPlacements,\n        type: \"menu\",\n      },\n      delayed,\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when a `calcite-dropdown-item`'s selection changes. */\n  @Event({ cancelable: false }) calciteDropdownSelect: EventEmitter<void>;\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteDropdownBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteDropdownClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteDropdownBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteDropdownOpen: EventEmitter<void>;\n\n  @Listen(\"pointerdown\", { target: \"window\" })\n  closeCalciteDropdownOnClick(event: PointerEvent): void {\n    if (\n      this.disabled ||\n      !isPrimaryPointerButton(event) ||\n      !this.open ||\n      event.composedPath().includes(this.el)\n    ) {\n      return;\n    }\n\n    this.closeCalciteDropdown(false);\n  }\n\n  @Listen(\"calciteInternalDropdownCloseRequest\")\n  closeCalciteDropdownOnEvent(event: Event): void {\n    this.closeCalciteDropdown();\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteDropdownOpen\", { target: \"window\" })\n  closeCalciteDropdownOnOpenEvent(event: Event): void {\n    if (event.composedPath().includes(this.el)) {\n      return;\n    }\n\n    this.open = false;\n  }\n\n  @Listen(\"pointerenter\")\n  pointerEnterHandler(): void {\n    if (this.disabled || this.type !== \"hover\") {\n      return;\n    }\n\n    this.openCalciteDropdown();\n  }\n\n  @Listen(\"pointerleave\")\n  pointerLeaveHandler(): void {\n    if (this.disabled || this.type !== \"hover\") {\n      return;\n    }\n\n    this.closeCalciteDropdown();\n  }\n\n  private getTraversableItems(): HTMLCalciteDropdownItemElement[] {\n    return this.items.filter((item) => !item.disabled && !item.hidden);\n  }\n\n  @Listen(\"calciteInternalDropdownItemKeyEvent\")\n  calciteInternalDropdownItemKeyEvent(event: CustomEvent<ItemKeyboardEvent>): void {\n    const { keyboardEvent } = event.detail;\n    const target = keyboardEvent.target as HTMLCalciteDropdownItemElement;\n    const traversableItems = this.getTraversableItems();\n\n    switch (keyboardEvent.key) {\n      case \"Tab\":\n        this.open = false;\n        this.updateTabIndexOfItems(target);\n        break;\n      case \"ArrowDown\":\n        focusElementInGroup(traversableItems, target, \"next\");\n        break;\n      case \"ArrowUp\":\n        focusElementInGroup(traversableItems, target, \"previous\");\n        break;\n      case \"Home\":\n        focusElementInGroup(traversableItems, target, \"first\");\n        break;\n      case \"End\":\n        focusElementInGroup(traversableItems, target, \"last\");\n        break;\n    }\n\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalDropdownItemSelect\")\n  handleItemSelect(event: CustomEvent<RequestedItem>): void {\n    this.updateSelectedItems();\n    event.stopPropagation();\n    this.calciteDropdownSelect.emit();\n    if (\n      !this.closeOnSelectDisabled ||\n      event.detail.requestedDropdownGroup.selectionMode === \"none\"\n    ) {\n      this.closeCalciteDropdown();\n    }\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDropdownElement;\n\n  filteredFlipPlacements: EffectivePlacement[];\n\n  private items: HTMLCalciteDropdownItemElement[] = [];\n\n  private groups: HTMLCalciteDropdownGroupElement[] = [];\n\n  /** trigger elements */\n  private triggers: HTMLElement[];\n\n  floatingEl: HTMLDivElement;\n\n  referenceEl: HTMLDivElement;\n\n  private scrollerEl: HTMLDivElement;\n\n  mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n\n  resizeObserver = createObserver(\"resize\", (entries) => this.resizeObserverCallback(entries));\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  guid = `calcite-dropdown-${guid()}`;\n\n  defaultAssignedElements: Element[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  slotChangeHandler = (event: Event): void => {\n    this.defaultAssignedElements = (event.target as HTMLSlotElement).assignedElements({\n      flatten: true,\n    });\n\n    this.updateItems();\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterComputedPlacements(flipPlacements, el)\n      : null;\n  };\n\n  updateTriggers = (event: Event): void => {\n    this.triggers = (event.target as HTMLSlotElement).assignedElements({\n      flatten: true,\n    }) as HTMLElement[];\n\n    this.reposition(true);\n  };\n\n  updateItems = (): void => {\n    this.items = this.groups\n      .map((group) => Array.from(group?.querySelectorAll(\"calcite-dropdown-item\")))\n      .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n    this.updateSelectedItems();\n\n    this.reposition(true);\n\n    this.items.forEach((item) => (item.scale = this.scale));\n  };\n\n  updateGroups = (event: Event): void => {\n    const groups = (event.target as HTMLSlotElement)\n      .assignedElements({ flatten: true })\n      .filter((el) => el?.matches(\"calcite-dropdown-group\")) as HTMLCalciteDropdownGroupElement[];\n\n    this.groups = groups;\n\n    this.updateItems();\n  };\n\n  resizeObserverCallback = (entries: ResizeObserverEntry[]): void => {\n    entries.forEach((entry) => {\n      const { target } = entry;\n      if (target === this.referenceEl) {\n        this.setDropdownWidth();\n      } else if (target === this.scrollerEl) {\n        this.setMaxScrollerHeight();\n      }\n    });\n  };\n\n  setDropdownWidth = (): void => {\n    const { referenceEl, scrollerEl } = this;\n    const referenceElWidth = referenceEl?.clientWidth;\n\n    if (!referenceElWidth || !scrollerEl) {\n      return;\n    }\n\n    scrollerEl.style.minWidth = `${referenceElWidth}px`;\n  };\n\n  setMaxScrollerHeight = (): void => {\n    const { scrollerEl } = this;\n    if (!scrollerEl) {\n      return;\n    }\n\n    this.reposition(true);\n    const maxScrollerHeight = this.getMaxScrollerHeight();\n    scrollerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : \"\";\n    this.reposition(true);\n  };\n\n  setScrollerAndTransitionEl = (el: HTMLDivElement): void => {\n    this.resizeObserver.observe(el);\n    this.scrollerEl = el;\n\n    this.transitionEl = el;\n  };\n\n  onBeforeOpen(): void {\n    this.calciteDropdownBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteDropdownOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteDropdownBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteDropdownClose.emit();\n  }\n\n  setReferenceEl = (el: HTMLDivElement): void => {\n    this.referenceEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    this.resizeObserver.observe(el);\n  };\n\n  setFloatingEl = (el: HTMLDivElement): void => {\n    this.floatingEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (!event.composedPath().includes(this.referenceEl)) {\n      return;\n    }\n\n    const { defaultPrevented, key } = event;\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (this.open) {\n      if (key === \"Escape\") {\n        this.closeCalciteDropdown();\n        event.preventDefault();\n        return;\n      } else if (event.shiftKey && key === \"Tab\") {\n        this.closeCalciteDropdown();\n        event.preventDefault();\n        return;\n      }\n    }\n\n    if (isActivationKey(key)) {\n      this.openCalciteDropdown();\n      event.preventDefault();\n    } else if (key === \"Escape\") {\n      this.closeCalciteDropdown();\n      event.preventDefault();\n    }\n  };\n\n  private updateSelectedItems(): void {\n    this.selectedItems = this.items.filter((item) => item.selected);\n  }\n\n  private getMaxScrollerHeight(): number {\n    const { maxItems, items } = this;\n    let itemsToProcess = 0;\n    let maxScrollerHeight = 0;\n    let groupHeaderHeight: number;\n\n    this.groups.forEach((group) => {\n      if (maxItems > 0 && itemsToProcess < maxItems) {\n        Array.from(group.children).forEach((item: HTMLCalciteDropdownItemElement, index) => {\n          if (index === 0) {\n            if (isNaN(groupHeaderHeight)) {\n              groupHeaderHeight = item.offsetTop;\n            }\n\n            maxScrollerHeight += groupHeaderHeight;\n          }\n\n          if (itemsToProcess < maxItems) {\n            maxScrollerHeight += item.offsetHeight;\n            itemsToProcess += 1;\n          }\n        });\n      }\n    });\n\n    return items.length > maxItems ? maxScrollerHeight : 0;\n  }\n\n  private closeCalciteDropdown(focusTrigger = true) {\n    this.open = false;\n\n    if (focusTrigger) {\n      focusElement(this.triggers[0]);\n    }\n  }\n\n  private focusOnFirstActiveOrFirstItem = (): void => {\n    this.getFocusableElement(\n      this.getTraversableItems().find((item) => item.selected) || this.items[0],\n    );\n  };\n\n  private getFocusableElement(item: HTMLCalciteDropdownItemElement): void {\n    if (!item) {\n      return;\n    }\n\n    focusElement(item);\n  }\n\n  private toggleOpenEnd = (): void => {\n    this.focusOnFirstActiveOrFirstItem();\n    this.el.removeEventListener(\"calciteDropdownOpen\", this.toggleOpenEnd);\n  };\n\n  private openCalciteDropdown = () => {\n    this.open = !this.open;\n    if (this.open) {\n      this.el.addEventListener(\"calciteDropdownOpen\", this.toggleOpenEnd);\n    }\n  };\n\n  private updateTabIndexOfItems(target: HTMLCalciteDropdownItemElement): void {\n    this.items.forEach((item: HTMLCalciteDropdownItemElement) => {\n      item.tabIndex = target !== item ? -1 : 0;\n    });\n  }\n}\n", "/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.6.0\n */\nimport { D as Dropdown, d as defineCustomElement$1 } from './dropdown.js';\n\nconst CalciteDropdown = Dropdown;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { CalciteDropdown, defineCustomElement };\n\n//# sourceMappingURL=calcite-dropdown.js.map"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAM,QAAQ;EACnB,iBAAiB;;ACDnB,IAAM,cAAc;ICiEP,WAAQ,mBAAA,MAAAA,kBAAA,EAAA;;;;;;;;;;AAoXX,SAAA,QAA0C,CAAA;AAE1C,SAAA,SAA4C,CAAA;AAWpD,SAAA,mBAAmB,eAAe,YAAY,MAAM,KAAK,YAAW,CAAE;AAEtE,SAAA,iBAAiB,eAAe,UAAU,CAAC,YAAY,KAAK,uBAAuB,OAAO,CAAC;AAE3F,SAAA,qBAAqB;AAIrB,SAAA,OAAO,oBAAoB,KAAI,CAAE;AAEjC,SAAA,0BAAqC,CAAA;AAQrC,SAAA,oBAAoB,CAAC,UAAY;AAC/B,WAAK,0BAA2B,MAAM,OAA2B,iBAAiB;QAChF,SAAS;OACV;AAED,WAAK,YAAW;;AAGlB,SAAA,wBAAwB,MAAA;AACtB,YAAM,EAAE,IAAI,eAAc,IAAK;AAE/B,WAAK,yBAAyB,iBAC1B,yBAAyB,gBAAgB,EAAE,IAC3C;;AAGN,SAAA,iBAAiB,CAAC,UAAY;AAC5B,WAAK,WAAY,MAAM,OAA2B,iBAAiB;QACjE,SAAS;OACV;AAED,WAAK,WAAW,IAAI;;AAGtB,SAAA,cAAc,MAAA;AACZ,WAAK,QAAQ,KAAK,OACf,IAAI,CAAC,UAAU,MAAM,KAAK,+BAAO,iBAAiB,wBAAwB,CAAC,EAC3E,OAAO,CAAC,eAAe,iBAAiB,CAAC,GAAG,eAAe,GAAG,YAAY,GAAG,CAAA,CAAE;AAElF,WAAK,oBAAmB;AAExB,WAAK,WAAW,IAAI;AAEpB,WAAK,MAAM,QAAQ,CAAC,SAAU,KAAK,QAAQ,KAAK,KAAM;;AAGxD,SAAA,eAAe,CAAC,UAAY;AAC1B,YAAM,SAAU,MAAM,OACnB,iBAAiB,EAAE,SAAS,KAAI,CAAE,EAClC,OAAO,CAAC,OAAO,yBAAI,QAAQ,yBAAyB;AAEvD,WAAK,SAAS;AAEd,WAAK,YAAW;;AAGlB,SAAA,yBAAyB,CAAC,YAA8B;AACtD,cAAQ,QAAQ,CAAC,UAAK;AACpB,cAAM,EAAE,OAAM,IAAK;AACnB,YAAI,WAAW,KAAK,aAAa;AAC/B,eAAK,iBAAgB;mBACZ,WAAW,KAAK,YAAY;AACrC,eAAK,qBAAoB;;OAE5B;;AAGH,SAAA,mBAAmB,MAAA;AACjB,YAAM,EAAE,aAAa,WAAU,IAAK;AACpC,YAAM,mBAAmB,2CAAa;AAEtC,UAAI,CAAC,oBAAoB,CAAC,YAAY;AACpC;;AAGF,iBAAW,MAAM,WAAW,GAAG,gBAAgB;;AAGjD,SAAA,uBAAuB,MAAA;AACrB,YAAM,EAAE,WAAU,IAAK;AACvB,UAAI,CAAC,YAAY;AACf;;AAGF,WAAK,WAAW,IAAI;AACpB,YAAM,oBAAoB,KAAK,qBAAoB;AACnD,iBAAW,MAAM,YAAY,oBAAoB,IAAI,GAAG,iBAAiB,OAAO;AAChF,WAAK,WAAW,IAAI;;AAGtB,SAAA,6BAA6B,CAAC,OAAkB;AAC9C,WAAK,eAAe,QAAQ,EAAE;AAC9B,WAAK,aAAa;AAElB,WAAK,eAAe;;AAmBtB,SAAA,iBAAiB,CAAC,OAAkB;AAClC,WAAK,cAAc;AACnB,wBAAkB,MAAM,KAAK,aAAa,KAAK,UAAU;AACzD,WAAK,eAAe,QAAQ,EAAE;;AAGhC,SAAA,gBAAgB,CAAC,OAAkB;AACjC,WAAK,aAAa;AAClB,wBAAkB,MAAM,KAAK,aAAa,KAAK,UAAU;;AAGnD,SAAA,iBAAiB,CAAC,UAAoB;AAC5C,UAAI,CAAC,MAAM,aAAY,EAAG,SAAS,KAAK,WAAW,GAAG;AACpD;;AAGF,YAAM,EAAE,kBAAkB,IAAG,IAAK;AAElC,UAAI,kBAAkB;AACpB;;AAGF,UAAI,KAAK,MAAM;AACb,YAAI,QAAQ,UAAU;AACpB,eAAK,qBAAoB;AACzB,gBAAM,eAAc;AACpB;mBACS,MAAM,YAAY,QAAQ,OAAO;AAC1C,eAAK,qBAAoB;AACzB,gBAAM,eAAc;AACpB;;;AAIJ,UAAI,gBAAgB,GAAG,GAAG;AACxB,aAAK,oBAAmB;AACxB,cAAM,eAAc;iBACX,QAAQ,UAAU;AAC3B,aAAK,qBAAoB;AACzB,cAAM,eAAc;;;AA4ChB,SAAA,gCAAgC,MAAA;AACtC,WAAK,oBACH,KAAK,oBAAmB,EAAG,KAAK,CAAC,SAAS,KAAK,QAAQ,KAAK,KAAK,MAAM,CAAC,CAAC;;AAYrE,SAAA,gBAAgB,MAAA;AACtB,WAAK,8BAA6B;AAClC,WAAK,GAAG,oBAAoB,uBAAuB,KAAK,aAAa;;AAG/D,SAAA,sBAAsB,MAAA;AAC5B,WAAK,OAAO,CAAC,KAAK;AAClB,UAAI,KAAK,MAAM;AACb,aAAK,GAAG,iBAAiB,uBAAuB,KAAK,aAAa;;;gBAvlBvB;iCAoBE;oBAKb;;oBAwBA;8BAe8B;qBAYd;yBAYuB,CAAA;gBAKxB;;iBAQX;;EAlGxC,cAAW;AACT,+BAA2B,IAAI;AAE/B,QAAI,KAAK,UAAU;AACjB,WAAK,OAAO;AACZ;;AAGF,SAAK,WAAW,IAAI;;EAiBtB,qBAAqB,OAAc;AACjC,QAAI,CAAC,OAAO;AACV,WAAK,OAAO;;;EAUhB,wBAAqB;AACnB,SAAK,sBAAqB;AAC1B,SAAK,WAAW,IAAI;;EAUtB,kBAAe;AACb,SAAK,qBAAoB;;EAc3B,4BAAyB;AACvB,SAAK,WAAW,IAAI;;EAWtB,mBAAgB;AACd,SAAK,WAAW,IAAI;;EAwBtB,oBAAiB;AACf,SAAK,YAAW;;;;;;;;EAWlB,MAAM,WAAQ;AACZ,UAAM,mBAAmB,IAAI;AAC7B,SAAK,GAAG,MAAK;;;;;;;EASf,oBAAiB;;AACf,eAAK,qBAAL,mBAAuB,QAAQ,KAAK,IAAI,EAAE,WAAW,MAAM,SAAS,KAAI;AACxE,SAAK,sBAAqB;AAC1B,SAAK,WAAW,IAAI;AACpB,QAAI,KAAK,MAAM;AACb,WAAK,YAAW;AAChB,iCAA2B,IAAI;;AAEjC,uBAAmB,IAAI;AACvB,SAAK,YAAW;AAChB,sBAAkB,MAAM,KAAK,aAAa,KAAK,UAAU;;EAG3D,oBAAiB;AACf,2BAAuB,IAAI;;EAG7B,mBAAgB;AACd,uBAAmB,IAAI;AACvB,SAAK,WAAW,IAAI;;EAGtB,qBAAkB;AAChB,0BAAsB,IAAI;;EAG5B,uBAAoB;;AAClB,eAAK,qBAAL,mBAAuB;AACvB,eAAK,mBAAL,mBAAqB;AACrB,0BAAsB,IAAI;AAC1B,yBAAqB,MAAM,KAAK,aAAa,KAAK,UAAU;;EAG9D,SAAM;AACJ,UAAM,EAAE,MAAM,MAAAC,MAAI,IAAK;AACvB,WACE,EAAC,MAAI,MACH,EAAC,sBAAoB,EAAC,UAAU,KAAK,SAAQ,GAC3C,EAAA,OAAA;MACE,OAAM;MACN,IAAI,GAAGA,KAAI;MACX,SAAS,KAAK;MACd,WAAW,KAAK;;MAEhB,KAAK,KAAK;IAAc,GAExB,EAAA,QAAA,EAAA,iBACiB,GAAGA,KAAI,SAAO,iBACd,cAAc,IAAI,GAAC,iBACpB,QACd,MAAM,MAAM,iBACZ,cAAc,KAAK,eAAc,CAAA,CACjC,GAEJ,EAAA,OAAA;MAAA,eACe,cAAc,CAAC,IAAI;MAChC,OAAM;;MAEN,KAAK,KAAK;IAAa,GAEvB,EAAA,OAAA;MAAA,mBACmB,GAAGA,KAAI;MACxB,OAAO;QACL,CAAC,0BAA0B,GAAG;QAC9B,CAAC,YAAY,SAAS,GAAG;QACzB,CAAC,YAAY,eAAe,GAAG;;MAEjC,IAAI,GAAGA,KAAI;MACX,MAAK;;MAEL,KAAK,KAAK;IAA0B,GAEpC,EAAA,QAAA,EAAM,cAAc,KAAK,aAAY,CAAA,CAAI,CACrC,CACF,CACe;;;;;;;;;;;;EAiB7B,MAAM,WAAW,UAAU,OAAK;AAC9B,UAAM,EAAE,YAAY,aAAa,WAAW,oBAAoB,uBAAsB,IAAK;AAE3F,WAAO,WACL,MACA;MACE;MACA;MACA;MACA;MACA,gBAAgB;MAChB,MAAM;OAER,OAAO;;EA0BX,4BAA4B,OAAmB;AAC7C,QACE,KAAK,YACL,CAAC,uBAAuB,KAAK,KAC7B,CAAC,KAAK,QACN,MAAM,aAAY,EAAG,SAAS,KAAK,EAAE,GACrC;AACA;;AAGF,SAAK,qBAAqB,KAAK;;EAIjC,4BAA4B,OAAY;AACtC,SAAK,qBAAoB;AACzB,UAAM,gBAAe;;EAIvB,gCAAgC,OAAY;AAC1C,QAAI,MAAM,aAAY,EAAG,SAAS,KAAK,EAAE,GAAG;AAC1C;;AAGF,SAAK,OAAO;;EAId,sBAAmB;AACjB,QAAI,KAAK,YAAY,KAAK,SAAS,SAAS;AAC1C;;AAGF,SAAK,oBAAmB;;EAI1B,sBAAmB;AACjB,QAAI,KAAK,YAAY,KAAK,SAAS,SAAS;AAC1C;;AAGF,SAAK,qBAAoB;;EAGnB,sBAAmB;AACzB,WAAO,KAAK,MAAM,OAAO,CAAC,SAAS,CAAC,KAAK,YAAY,CAAC,KAAK,MAAM;;EAInE,oCAAoC,OAAqC;AACvE,UAAM,EAAE,cAAa,IAAK,MAAM;AAChC,UAAM,SAAS,cAAc;AAC7B,UAAM,mBAAmB,KAAK,oBAAmB;AAEjD,YAAQ,cAAc,KAAG;MACvB,KAAK;AACH,aAAK,OAAO;AACZ,aAAK,sBAAsB,MAAM;AACjC;MACF,KAAK;AACH,4BAAoB,kBAAkB,QAAQ,MAAM;AACpD;MACF,KAAK;AACH,4BAAoB,kBAAkB,QAAQ,UAAU;AACxD;MACF,KAAK;AACH,4BAAoB,kBAAkB,QAAQ,OAAO;AACrD;MACF,KAAK;AACH,4BAAoB,kBAAkB,QAAQ,MAAM;AACpD;;AAGJ,UAAM,gBAAe;;EAIvB,iBAAiB,OAAiC;AAChD,SAAK,oBAAmB;AACxB,UAAM,gBAAe;AACrB,SAAK,sBAAsB,KAAI;AAC/B,QACE,CAAC,KAAK,yBACN,MAAM,OAAO,uBAAuB,kBAAkB,QACtD;AACA,WAAK,qBAAoB;;AAE3B,UAAM,gBAAe;;EAmIvB,eAAY;AACV,SAAK,0BAA0B,KAAI;;EAGrC,SAAM;AACJ,SAAK,oBAAoB,KAAI;;EAG/B,gBAAa;AACX,SAAK,2BAA2B,KAAI;;EAGtC,UAAO;AACL,SAAK,qBAAqB,KAAI;;EA8CxB,sBAAmB;AACzB,SAAK,gBAAgB,KAAK,MAAM,OAAO,CAAC,SAAS,KAAK,QAAQ;;EAGxD,uBAAoB;AAC1B,UAAM,EAAE,UAAU,MAAK,IAAK;AAC5B,QAAI,iBAAiB;AACrB,QAAI,oBAAoB;AACxB,QAAI;AAEJ,SAAK,OAAO,QAAQ,CAAC,UAAK;AACxB,UAAI,WAAW,KAAK,iBAAiB,UAAU;AAC7C,cAAM,KAAK,MAAM,QAAQ,EAAE,QAAQ,CAAC,MAAsC,UAAK;AAC7E,cAAI,UAAU,GAAG;AACf,gBAAI,MAAM,iBAAiB,GAAG;AAC5B,kCAAoB,KAAK;;AAG3B,iCAAqB;;AAGvB,cAAI,iBAAiB,UAAU;AAC7B,iCAAqB,KAAK;AAC1B,8BAAkB;;SAErB;;KAEJ;AAED,WAAO,MAAM,SAAS,WAAW,oBAAoB;;EAG/C,qBAAqB,eAAe,MAAI;AAC9C,SAAK,OAAO;AAEZ,QAAI,cAAc;AAChB,mBAAa,KAAK,SAAS,CAAC,CAAC;;;EAUzB,oBAAoB,MAAoC;AAC9D,QAAI,CAAC,MAAM;AACT;;AAGF,iBAAa,IAAI;;EAeX,sBAAsB,QAAsC;AAClE,SAAK,MAAM,QAAQ,CAAC,SAAoC;AACtD,WAAK,WAAW,WAAW,OAAO,KAAK;KACxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpqBL,IAAM,kBAAkB;AACxB,IAAMC,uBAAsB;",
  "names": ["Dropdown", "guid", "defineCustomElement"]
}
