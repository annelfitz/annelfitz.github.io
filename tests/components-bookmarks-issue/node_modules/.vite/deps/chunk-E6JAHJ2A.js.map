{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/Laserlines.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{deg2rad as e}from\"../core/mathUtils.js\";import{set as i}from\"../core/libs/gl-matrix-2/math/vec2.js\";import{create as t}from\"../core/libs/gl-matrix-2/factories/vec2f64.js\";import{f as n,n as a,l as o,q as r,e as l,c as s,b as c,g as d}from\"./vec32.js\";import{create as f}from\"../core/libs/gl-matrix-2/factories/vec3f64.js\";import{t as p}from\"./vec42.js\";import{create as h}from\"../core/libs/gl-matrix-2/factories/vec4f64.js\";import{pointAt as g}from\"../geometry/support/lineSegment.js\";import{create as m,fromPositionAndNormal as u}from\"../geometry/support/plane.js\";import{g as x,c as w}from\"./sphere.js\";import{Laserline as P}from\"../views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js\";import{ScreenSpacePass as b}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{Float2PassUniform as v}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float3PassUniform as D}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as M}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as L}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as C}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";const A=e(6);function V(e){const i=new C;i.include(b),i.include(P,e);const t=i.fragment;if(e.lineVerticalPlaneEnabled||e.heightManifoldEnabled)if(t.uniforms.add(new S(\"maxPixelDistance\",((i,t)=>e.heightManifoldEnabled?2*t.camera.computeScreenPixelSizeAt(i.heightManifoldTarget):2*t.camera.computeScreenPixelSizeAt(i.lineVerticalPlaneSegment.origin)))),t.code.add(L`float planeDistancePixels(vec4 plane, vec3 pos) {\nfloat dist = dot(plane.xyz, pos) + plane.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`),e.spherical){const e=(e,i,t)=>l(e,i.heightManifoldTarget,t.camera.viewMatrix),i=(e,i)=>l(e,[0,0,0],i.camera.viewMatrix);t.uniforms.add(new M(\"heightManifoldOrigin\",((t,r)=>(e(R,t,r),i(F,r),n(F,F,R),a(G,F),G[3]=o(F),G))),new D(\"globalOrigin\",((e,t)=>i(R,t))),new S(\"cosSphericalAngleThreshold\",((e,i)=>1-Math.max(2,r(i.camera.eye,e.heightManifoldTarget)*i.camera.perRenderPixelRatio)/o(e.heightManifoldTarget)))),t.code.add(L`float globeDistancePixels(float posInGlobalOriginLength) {\nfloat dist = abs(posInGlobalOriginLength - heightManifoldOrigin.w);\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}\nfloat heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nvec3 posInGlobalOriginNorm = normalize(globalOrigin - pos);\nfloat cosAngle = dot(posInGlobalOriginNorm, heightManifoldOrigin.xyz);\nvec3 posInGlobalOrigin = globalOrigin - pos;\nfloat posInGlobalOriginLength = length(posInGlobalOrigin);\nfloat sphericalDistance = globeDistancePixels(posInGlobalOriginLength);\nfloat planarDistance = planeDistancePixels(heightPlane, pos);\nreturn cosAngle < cosSphericalAngleThreshold ? sphericalDistance : planarDistance;\n}`)}else t.code.add(L`float heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nreturn planeDistancePixels(heightPlane, pos);\n}`);if(e.pointDistanceEnabled&&(t.uniforms.add(new S(\"maxPixelDistance\",((e,i)=>2*i.camera.computeScreenPixelSizeAt(e.pointDistanceTarget)))),t.code.add(L`float sphereDistancePixels(vec4 sphere, vec3 pos) {\nfloat dist = distance(sphere.xyz, pos) - sphere.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`)),e.intersectsLineEnabled&&(t.uniforms.add(new S(\"perScreenPixelRatio\",((e,i)=>i.camera.perScreenPixelRatio))),t.code.add(L`float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {\nfloat dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);\nreturn abs(dist) - radius;\n}`)),(e.lineVerticalPlaneEnabled||e.intersectsLineEnabled)&&t.code.add(L`bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {\nvec3 dir = end - start;\nfloat t2 = dot(dir, pos - start);\nfloat l2 = dot(dir, dir);\nreturn t2 >= 0.0 && t2 <= l2;\n}`),t.code.add(L`void main() {\nvec3 pos;\nvec3 normal;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {\ndiscard;\n}\nvec4 color = vec4(0, 0, 0, 0);`),e.heightManifoldEnabled){t.uniforms.add(new v(\"angleCutoff\",(e=>j(e))),new M(\"heightPlane\",((e,i)=>I(e.heightManifoldTarget,e.renderCoordsHelper.worldUpAtPosition(e.heightManifoldTarget,R),i.camera.viewMatrix))));const i=e.spherical?L`normalize(globalOrigin - pos)`:L`heightPlane.xyz`;t.code.add(L`\n    {\n      float heightManifoldAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, ${i})));\n      vec4 heightManifoldColor = laserlineProfile(heightManifoldDistancePixels(heightPlane, pos));\n      color = max(color, heightManifoldColor * heightManifoldAlpha);\n    }\n    `)}return e.pointDistanceEnabled&&(t.uniforms.add(new v(\"angleCutoff\",(e=>j(e))),new M(\"pointDistanceSphere\",((e,i)=>y(e,i)))),t.code.add(L`{\nfloat pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);\nvec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);\nfloat pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));\ncolor = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);\n}`)),e.lineVerticalPlaneEnabled&&(t.uniforms.add(new v(\"angleCutoff\",(e=>j(e))),new M(\"lineVerticalPlane\",((e,i)=>O(e,i))),new D(\"lineVerticalStart\",((e,i)=>E(e,i))),new D(\"lineVerticalEnd\",((e,i)=>z(e,i)))),t.code.add(L`{\nif (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {\nfloat lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);\nvec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);\nfloat lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));\ncolor = max(color, lineVerticalColor * lineVerticalAlpha);\n}\n}`)),e.intersectsLineEnabled&&(t.uniforms.add(new v(\"angleCutoff\",(e=>j(e))),new D(\"intersectsLineStart\",((e,i)=>l(R,e.lineStartWorld,i.camera.viewMatrix))),new D(\"intersectsLineEnd\",((e,i)=>l(R,e.lineEndWorld,i.camera.viewMatrix))),new D(\"intersectsLineDirection\",((e,i)=>(s(G,e.intersectsLineSegment.vector),G[3]=0,a(R,p(G,G,i.camera.viewMatrix))))),new S(\"intersectsLineRadius\",(e=>e.intersectsLineRadius))),t.code.add(L`{\nif (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {\nfloat intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);\nvec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);\nfloat intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));\ncolor = max(color, intersectsLineColor * intersectsLineAlpha);\n}\n}`)),t.code.add(L`fragColor = laserlineOutput(color * depthDiscontinuityAlpha);\n}`),i}function j(t){return i(T,Math.cos(t.angleCutoff),Math.cos(Math.max(0,t.angleCutoff-e(2))))}function y(e,i){return l(x(_),e.pointDistanceOrigin,i.camera.viewMatrix),_[3]=r(e.pointDistanceOrigin,e.pointDistanceTarget),_}function O(e,i){const t=g(e.lineVerticalPlaneSegment,.5,R),n=e.renderCoordsHelper.worldUpAtPosition(t,U),o=a(F,e.lineVerticalPlaneSegment.vector),r=c(R,n,o);return a(r,r),I(e.lineVerticalPlaneSegment.origin,r,i.camera.viewMatrix)}function E(e,i){const t=s(R,e.lineVerticalPlaneSegment.origin);return e.renderCoordsHelper.setAltitude(t,0),l(t,t,i.camera.viewMatrix)}function z(e,i){const t=d(R,e.lineVerticalPlaneSegment.origin,e.lineVerticalPlaneSegment.vector);return e.renderCoordsHelper.setAltitude(t,0),l(t,t,i.camera.viewMatrix)}function I(e,i,t){return l(W,e,t),s(G,i),G[3]=0,p(G,G,t),u(W,G,H)}const T=t(),R=f(),G=h(),U=f(),F=f(),W=f(),H=m(),_=w(),N=Object.freeze(Object.defineProperty({__proto__:null,build:V,defaultAngleCutoff:A},Symbol.toStringTag,{value:\"Module\"}));export{N as L,V as b,A as d};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIo2C,IAAM,IAAE,EAAE,CAAC;AAAE,SAAS,EAAEA,IAAE;AAAC,QAAM,IAAE,IAAIC;AAAE,IAAE,QAAQA,EAAC,GAAE,EAAE,QAAQ,GAAED,EAAC;AAAE,QAAM,IAAE,EAAE;AAAS,MAAGA,GAAE,4BAA0BA,GAAE;AAAsB,QAAG,EAAE,SAAS,IAAI,IAAIC,GAAE,oBAAoB,CAACC,IAAEC,OAAIH,GAAE,wBAAsB,IAAEG,GAAE,OAAO,yBAAyBD,GAAE,oBAAoB,IAAE,IAAEC,GAAE,OAAO,yBAAyBD,GAAE,yBAAyB,MAAM,CAAE,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAK7sD,GAAEF,GAAE,WAAU;AAAC,YAAMA,KAAE,CAACA,IAAEE,IAAEC,OAAI,EAAEH,IAAEE,GAAE,sBAAqBC,GAAE,OAAO,UAAU,GAAED,KAAE,CAACF,IAAEE,OAAI,EAAEF,IAAE,CAAC,GAAE,GAAE,CAAC,GAAEE,GAAE,OAAO,UAAU;AAAE,QAAE,SAAS,IAAI,IAAIF,GAAE,wBAAwB,CAACG,IAAEC,QAAKJ,GAAE,GAAEG,IAAEC,EAAC,GAAEF,GAAE,GAAEE,EAAC,GAAE,EAAE,GAAE,GAAE,CAAC,GAAE,EAAE,GAAE,CAAC,GAAE,EAAE,CAAC,IAAE,EAAE,CAAC,GAAE,EAAG,GAAE,IAAIJ,GAAE,gBAAgB,CAACA,IAAEG,OAAID,GAAE,GAAEC,EAAC,CAAE,GAAE,IAAIF,GAAE,8BAA8B,CAACD,IAAEE,OAAI,IAAE,KAAK,IAAI,GAAE,EAAEA,GAAE,OAAO,KAAIF,GAAE,oBAAoB,IAAEE,GAAE,OAAO,mBAAmB,IAAE,EAAEF,GAAE,oBAAoB,CAAE,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcza;AAAA,IAAC;AAAM,QAAE,KAAK,IAAI;AAAA;AAAA,EAElB;AAAE,MAAGA,GAAE,yBAAuB,EAAE,SAAS,IAAI,IAAIC,GAAE,oBAAoB,CAACD,IAAEE,OAAI,IAAEA,GAAE,OAAO,yBAAyBF,GAAE,mBAAmB,CAAE,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvJ,IAAGA,GAAE,0BAAwB,EAAE,SAAS,IAAI,IAAIC,GAAE,uBAAuB,CAACD,IAAEE,OAAIA,GAAE,OAAO,mBAAoB,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA,EAG3H,KAAIF,GAAE,4BAA0BA,GAAE,0BAAwB,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrE,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAOgB,GAAEA,GAAE,uBAAsB;AAAC,MAAE,SAAS,IAAI,IAAIA,GAAE,eAAe,CAAAA,OAAGK,GAAEL,EAAC,CAAE,GAAE,IAAIA,GAAE,eAAe,CAACA,IAAEE,OAAI,EAAEF,GAAE,sBAAqBA,GAAE,mBAAmB,kBAAkBA,GAAE,sBAAqB,CAAC,GAAEE,GAAE,OAAO,UAAU,CAAE,CAAC;AAAE,UAAMA,KAAEF,GAAE,YAAU,mCAAiC;AAAmB,MAAE,KAAK,IAAI;AAAA;AAAA,mGAEtOE,EAAC;AAAA;AAAA;AAAA;AAAA,KAI/F;AAAA,EAAC;AAAC,SAAOF,GAAE,yBAAuB,EAAE,SAAS,IAAI,IAAIA,GAAE,eAAe,CAAAA,OAAGK,GAAEL,EAAC,CAAE,GAAE,IAAIA,GAAE,uBAAuB,CAACA,IAAEE,OAAI,EAAEF,IAAEE,EAAC,CAAE,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAK5I,IAAGF,GAAE,6BAA2B,EAAE,SAAS,IAAI,IAAIA,GAAE,eAAe,CAAAA,OAAGK,GAAEL,EAAC,CAAE,GAAE,IAAIA,GAAE,qBAAqB,CAACA,IAAEE,OAAII,GAAEN,IAAEE,EAAC,CAAE,GAAE,IAAIF,GAAE,qBAAqB,CAACA,IAAEE,OAAIK,GAAEP,IAAEE,EAAC,CAAE,GAAE,IAAIF,GAAE,mBAAmB,CAACA,IAAEE,OAAIM,GAAER,IAAEE,EAAC,CAAE,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOzN,IAAGF,GAAE,0BAAwB,EAAE,SAAS,IAAI,IAAIA,GAAE,eAAe,CAAAA,OAAGK,GAAEL,EAAC,CAAE,GAAE,IAAIA,GAAE,uBAAuB,CAACA,IAAEE,OAAI,EAAE,GAAEF,GAAE,gBAAeE,GAAE,OAAO,UAAU,CAAE,GAAE,IAAIF,GAAE,qBAAqB,CAACA,IAAEE,OAAI,EAAE,GAAEF,GAAE,cAAaE,GAAE,OAAO,UAAU,CAAE,GAAE,IAAIF,GAAE,2BAA2B,CAACA,IAAEE,QAAK,EAAE,GAAEF,GAAE,sBAAsB,MAAM,GAAE,EAAE,CAAC,IAAE,GAAE,EAAE,GAAEQ,GAAE,GAAE,GAAEN,GAAE,OAAO,UAAU,CAAC,EAAG,GAAE,IAAID,GAAE,wBAAwB,CAAAD,OAAGA,GAAE,oBAAqB,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpa,IAAG,EAAE,KAAK,IAAI;AAAA,EACd,GAAE;AAAC;AAAC,SAASK,GAAE,GAAE;AAAC,SAAOJ,GAAE,GAAE,KAAK,IAAI,EAAE,WAAW,GAAE,KAAK,IAAI,KAAK,IAAI,GAAE,EAAE,cAAY,EAAE,CAAC,CAAC,CAAC,CAAC;AAAC;AAAC,SAAS,EAAED,IAAE,GAAE;AAAC,SAAO,EAAE,EAAES,EAAC,GAAET,GAAE,qBAAoB,EAAE,OAAO,UAAU,GAAES,GAAE,CAAC,IAAE,EAAET,GAAE,qBAAoBA,GAAE,mBAAmB,GAAES;AAAC;AAAC,SAASH,GAAEN,IAAE,GAAE;AAAC,QAAM,IAAE,EAAEA,GAAE,0BAAyB,KAAG,CAAC,GAAEU,KAAEV,GAAE,mBAAmB,kBAAkB,GAAE,CAAC,GAAEC,KAAE,EAAE,GAAED,GAAE,yBAAyB,MAAM,GAAEI,KAAE,EAAE,GAAEM,IAAET,EAAC;AAAE,SAAO,EAAEG,IAAEA,EAAC,GAAE,EAAEJ,GAAE,yBAAyB,QAAOI,IAAE,EAAE,OAAO,UAAU;AAAC;AAAC,SAASG,GAAEP,IAAE,GAAE;AAAC,QAAM,IAAE,EAAE,GAAEA,GAAE,yBAAyB,MAAM;AAAE,SAAOA,GAAE,mBAAmB,YAAY,GAAE,CAAC,GAAE,EAAE,GAAE,GAAE,EAAE,OAAO,UAAU;AAAC;AAAC,SAASQ,GAAER,IAAE,GAAE;AAAC,QAAM,IAAE,EAAE,GAAEA,GAAE,yBAAyB,QAAOA,GAAE,yBAAyB,MAAM;AAAE,SAAOA,GAAE,mBAAmB,YAAY,GAAE,CAAC,GAAE,EAAE,GAAE,GAAE,EAAE,OAAO,UAAU;AAAC;AAAC,SAAS,EAAEA,IAAE,GAAE,GAAE;AAAC,SAAO,EAAE,GAAEA,IAAE,CAAC,GAAE,EAAE,GAAE,CAAC,GAAE,EAAE,CAAC,IAAE,GAAEQ,GAAE,GAAE,GAAE,CAAC,GAAE,EAAE,GAAE,GAAE,CAAC;AAAC;AAAC,IAAM,IAAEE,GAAE;AAAV,IAAY,IAAE,EAAE;AAAhB,IAAkB,IAAEA,GAAE;AAAtB,IAAwB,IAAE,EAAE;AAA5B,IAA8B,IAAE,EAAE;AAAlC,IAAoC,IAAE,EAAE;AAAxC,IAA0C,IAAE,EAAE;AAA9C,IAAgDD,KAAE,EAAE;AAApD,IAAsD,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAM,GAAE,oBAAmB,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["e", "o", "i", "t", "r", "j", "O", "E", "z", "_", "n"]
}
