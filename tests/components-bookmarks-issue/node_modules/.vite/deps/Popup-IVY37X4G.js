import {
  E,
  z
} from "./chunk-QIWI3FQB.js";
import "./chunk-7TMUM6KU.js";
import "./chunk-LNR6W2LA.js";
import "./chunk-ZGRPTRAY.js";
import "./chunk-OI7VGKTO.js";
import "./chunk-S3ISUHOZ.js";
import "./chunk-UN4X7MBS.js";
import "./chunk-2LPPSWTR.js";
import "./chunk-7E37N35O.js";
import "./chunk-BEXFYHUM.js";
import "./chunk-IKON42NH.js";
import "./chunk-JMQDZBMG.js";
import "./chunk-5N5NXKL3.js";
import "./chunk-7RP2CUPD.js";
import "./chunk-UVHAFHZU.js";
import "./chunk-TCQ65UXM.js";
import "./chunk-4ZRUV2JM.js";
import {
  e as e4
} from "./chunk-D5LHX57G.js";
import "./chunk-2IUCAJMQ.js";
import "./chunk-HLKM6YBE.js";
import "./chunk-7KPPNEIJ.js";
import "./chunk-CDYT7KXF.js";
import "./chunk-KZN32FM2.js";
import "./chunk-WFTDPAWN.js";
import "./chunk-BVUFFGBR.js";
import "./chunk-F4RCQNKU.js";
import "./chunk-KDAM4HTO.js";
import "./chunk-WK2KEW7P.js";
import "./chunk-G4YIJOSP.js";
import "./chunk-PMQ5HDZI.js";
import {
  e as e3
} from "./chunk-EAAEPSBY.js";
import "./chunk-6H6AEMQY.js";
import "./chunk-DTQH7ECI.js";
import "./chunk-SCRCLNT5.js";
import "./chunk-54XXLVAD.js";
import "./chunk-KO7QNSNZ.js";
import "./chunk-YKIGDW5O.js";
import "./chunk-QREUCRQ4.js";
import "./chunk-YK3UMVCY.js";
import "./chunk-ECTYMEUP.js";
import "./chunk-ZOUC7PLM.js";
import "./chunk-F2EHRKUX.js";
import "./chunk-2636VFVY.js";
import "./chunk-252ISA6Z.js";
import "./chunk-2QPP5AGU.js";
import "./chunk-2C26DRKK.js";
import "./chunk-M4RFJU4F.js";
import "./chunk-RK2U53CD.js";
import "./chunk-YPY24RRU.js";
import "./chunk-O7RKI2QW.js";
import "./chunk-MGFAIE2L.js";
import "./chunk-ONKWNPIN.js";
import "./chunk-EWD7I5UU.js";
import "./chunk-4UEJR4VO.js";
import "./chunk-BUEJAM23.js";
import "./chunk-LQR76D5M.js";
import "./chunk-2CWW7O7M.js";
import "./chunk-Q5NCQLSM.js";
import "./chunk-FLBJ53KN.js";
import "./chunk-YH2IYJYF.js";
import "./chunk-GGHKH3LP.js";
import "./chunk-VS6AHHIY.js";
import "./chunk-DIT542IP.js";
import "./chunk-HFYOMP47.js";
import "./chunk-TOKUWZQG.js";
import "./chunk-JNGJWHJD.js";
import "./chunk-QMPD4WXY.js";
import "./chunk-OF4YIONV.js";
import "./chunk-YBPOKK6D.js";
import "./chunk-AHEDDTVZ.js";
import "./chunk-Z4ALW6LX.js";
import "./chunk-H4O73SDK.js";
import "./chunk-UVXSAP7V.js";
import "./chunk-IZ3VJLQ6.js";
import "./chunk-DRC4XSYG.js";
import "./chunk-IHQNQQJC.js";
import "./chunk-4IKPTZ53.js";
import "./chunk-DXMBDX2I.js";
import "./chunk-TUVEYM7U.js";
import "./chunk-5S637BGW.js";
import "./chunk-BFOJPIF7.js";
import "./chunk-7UUNSIMA.js";
import "./chunk-GMRQGGML.js";
import "./chunk-BYK4ZOU2.js";
import "./chunk-OHYLFFUW.js";
import "./chunk-XW3FDKYP.js";
import "./chunk-Y7RXGLGH.js";
import "./chunk-3JC3OUNW.js";
import "./chunk-RO3CTAP7.js";
import "./chunk-GKMVTGGM.js";
import "./chunk-XGTCDM4C.js";
import "./chunk-QNG4TY7L.js";
import "./chunk-RW5QMWE6.js";
import "./chunk-LGMX4E7L.js";
import "./chunk-2QCWKZIQ.js";
import "./chunk-2NPNEA6N.js";
import "./chunk-U34ZXOJT.js";
import "./chunk-OKRW5W44.js";
import "./chunk-RGAA5Z76.js";
import "./chunk-Q6RZBEZ6.js";
import "./chunk-PC66NY33.js";
import "./chunk-YY2VB3AE.js";
import "./chunk-VEYMN5N3.js";
import "./chunk-H6NTWZSO.js";
import "./chunk-BMT3OVAP.js";
import "./chunk-W5ALAOW2.js";
import "./chunk-FHDHOWK5.js";
import "./chunk-Y546C2O5.js";
import "./chunk-IYKBAIQE.js";
import "./chunk-BDRVHR2K.js";
import "./chunk-DVIGFJWY.js";
import "./chunk-AKEHDP75.js";
import "./chunk-5MMGIT64.js";
import "./chunk-AKQ765JR.js";
import "./chunk-ERD6I7QP.js";
import "./chunk-QIT4M76C.js";
import "./chunk-EZL4LTMD.js";
import "./chunk-F3BQGS35.js";
import "./chunk-Z3NX5DTX.js";
import "./chunk-J4RP32NG.js";
import "./chunk-6NLHKXEW.js";
import "./chunk-LMO6NZJA.js";
import "./chunk-A5QTLE4Y.js";
import "./chunk-SCHTG6ZQ.js";
import "./chunk-G7YFDDME.js";
import "./chunk-PCKG3UTS.js";
import "./chunk-3VMVD66K.js";
import "./chunk-OHE3HDFF.js";
import "./chunk-QYC3GV65.js";
import "./chunk-ETHGDNE6.js";
import {
  c
} from "./chunk-X2GCSX3A.js";
import "./chunk-I2X6UR6L.js";
import "./chunk-HV2SFSJW.js";
import "./chunk-7EQJLP2H.js";
import "./chunk-4ZLXDMI5.js";
import "./chunk-SBARCIDP.js";
import "./chunk-EMYOYGGK.js";
import "./chunk-6PMFOUWZ.js";
import "./chunk-3KPZ3BQR.js";
import "./chunk-5JYVZQZR.js";
import "./chunk-UUG4W2PI.js";
import "./chunk-WW22JHXA.js";
import "./chunk-ZAM62XN5.js";
import "./chunk-RKVEKQ5O.js";
import "./chunk-P7J4JFEH.js";
import "./chunk-G7FOE26O.js";
import "./chunk-USOPZ2Q6.js";
import "./chunk-S5I4QKJD.js";
import "./chunk-LSM34QAB.js";
import "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import "./chunk-TCRKKQAL.js";
import "./chunk-77YSHEUQ.js";
import "./chunk-JW7VBMHD.js";
import "./chunk-GLLRUDMY.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-AKLOTDO2.js";
import "./chunk-6AQIVLDN.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-DVI5RM3W.js";
import "./chunk-LBXFRGMS.js";
import "./chunk-VTH4DAHQ.js";
import "./chunk-HLDUDRTD.js";
import "./chunk-SLQA5YBV.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-CXNX736Z.js";
import {
  D,
  e2
} from "./chunk-RGCWZ2KZ.js";
import {
  n as n2
} from "./chunk-5VMSFOCB.js";
import "./chunk-LGQXPGTM.js";
import {
  v as v2
} from "./chunk-2SDMYJDE.js";
import "./chunk-TPLOIZC7.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-5LSHHVQ5.js";
import "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import {
  P,
  d,
  v,
  w
} from "./chunk-Z4Y53NDM.js";
import "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  S,
  o,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  n2 as n
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-MDRC3XUT.js";
import "./chunk-NCF6OYL5.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/widgets/Popup/css.js
var t = "esri-popup";
var o2 = `${t}--is-docked`;
var e5 = { base: t, baseHidden: `${t}--hidden`, main: `${t}__main-container`, shadow: `${t}--shadow`, isDocked: o2, isDockedTopLeft: `${o2}-top-left`, isDockedTopCenter: `${o2}-top-center`, isDockedTopRight: `${o2}-top-right`, isDockedBottomLeft: `${o2}-bottom-left`, isDockedBottomCenter: `${o2}-bottom-center`, isDockedBottomRight: `${o2}-bottom-right`, alignTopCenter: `${t}--aligned-top-center`, alignBottomCenter: `${t}--aligned-bottom-center`, alignTopLeft: `${t}--aligned-top-left`, alignBottomLeft: `${t}--aligned-bottom-left`, alignTopRight: `${t}--aligned-top-right`, alignBottomRight: `${t}--aligned-bottom-right`, pointer: `${t}__pointer`, pointerDirection: `${t}__pointer-direction` };

// node_modules/@arcgis/core/widgets/Popup/PopupViewModel.js
var e6 = class extends z {
  constructor(o3) {
    super(o3);
  }
};
e6 = e([a("esri.widgets.Popup.PopupViewModel")], e6);
var t2 = e6;

// node_modules/@arcgis/core/widgets/Popup/PopupVisibleElements.js
var s = class extends S {
  constructor() {
    super(...arguments), this.actionBar = true, this.closeButton = true, this.collapseButton = true, this.featureNavigation = true, this.heading = true, this.spinner = true;
  }
};
e([y({ type: Boolean, nonNullable: true })], s.prototype, "actionBar", void 0), e([y({ type: Boolean, nonNullable: true })], s.prototype, "closeButton", void 0), e([y({ type: Boolean, nonNullable: true })], s.prototype, "collapseButton", void 0), e([y({ type: Boolean, nonNullable: true })], s.prototype, "featureNavigation", void 0), e([y({ type: Boolean, nonNullable: true })], s.prototype, "heading", void 0), e([y({ type: Boolean, nonNullable: true })], s.prototype, "spinner", void 0), s = e([a("esri.widgets.Popup.PopupVisibleElements")], s);
var p = s;

// node_modules/@arcgis/core/widgets/Popup.js
var _ = { buttonEnabled: true, position: "auto", breakpoint: { width: 544 } };
var k = class extends D {
  constructor(e7, t3) {
    super(e7, t3), this._dockAction = new c({ id: "popup-dock-action" }), this._featuresWidget = new E({ responsiveActionsEnabled: true }), this._containerNode = null, this._mainContainerNode = null, this._pointerOffsetInPx = 16, this.alignment = "auto", this.dockEnabled = false, this.headingLevel = 2, this.messages = null, this.viewModel = new t2(), this.visibleElements = new p();
  }
  initialize() {
    this.addHandles([d(() => {
      var _a, _b;
      return [(_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint, this.dockEnabled];
    }, () => this._handleDockIcon(), P), d(() => {
      var _a, _b;
      return [this.dockEnabled, (_a = this.messages) == null ? void 0 : _a.undock, (_b = this.messages) == null ? void 0 : _b.dock];
    }, () => this._handleDockEnabled(), P), d(() => this.dockOptions, (e7) => {
      const { _dockAction: t3 } = this, i = this._featuresWidget.headerActions;
      i.remove(t3), e7.buttonEnabled && i.add(t3);
    }, P), d(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, () => this._positionContainer()), d(() => {
      var _a;
      return [(_a = this.viewModel) == null ? void 0 : _a.active, this.dockEnabled];
    }, () => this._toggleScreenLocationEnabled()), d(() => {
      var _a, _b, _c, _d, _e, _f, _g;
      return [(_a = this.viewModel) == null ? void 0 : _a.screenLocation, (_c = (_b = this.viewModel) == null ? void 0 : _b.view) == null ? void 0 : _c.padding, (_e = (_d = this.viewModel) == null ? void 0 : _d.view) == null ? void 0 : _e.size, (_f = this.viewModel) == null ? void 0 : _f.active, (_g = this.viewModel) == null ? void 0 : _g.location, this.alignment];
    }, () => this.reposition()), d(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.size;
    }, (e7, t3) => this._updateDockEnabledForViewSize(e7, t3)), d(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.view;
    }, (e7, t3) => this._viewChange(e7, t3)), d(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ready;
    }, (e7, t3) => this._viewReadyChange(e7 ?? false, t3 ?? false)), d(() => this.viewModel, () => this._featuresWidget.viewModel = this.viewModel, P), d(() => this._featureNavigationTop, (e7) => this._featuresWidget.featureNavigationTop = e7, P), d(() => this.headingLevel, (e7) => this._featuresWidget.headingLevel = e7, P), d(() => this.visibleElements.actionBar, (e7) => this._featuresWidget.visibleElements.actionBar = !!e7, P), d(() => this.visibleElements.closeButton, (e7) => this._featuresWidget.visibleElements.closeButton = !!e7, P), d(() => this.visibleElements.collapseButton, (e7) => this._featuresWidget.visibleElements.collapseButton = !!e7, P), d(() => this.visibleElements.heading, (e7) => this._featuresWidget.visibleElements.heading = !!e7, P), d(() => this.visibleElements.spinner, (e7) => this._featuresWidget.visibleElements.spinner = !!e7, P), d(() => this.visibleElements.featureNavigation, (e7) => this._featuresWidget.visibleElements.featureNavigation = !!e7, P), v(() => this._featuresWidget, "trigger-header-action", (e7) => {
      e7.action === this._dockAction && (this.dockEnabled = !this.dockEnabled);
    })]);
  }
  normalizeCtorArgs(e7) {
    const t3 = { ...e7 };
    return null != (e7 == null ? void 0 : e7.visibleElements) && (t3.visibleElements = new p(e7.visibleElements), null != e7.collapseEnabled && (t3.visibleElements.collapseButton = e7.collapseEnabled), null != e7.spinnerEnabled && (t3.visibleElements.spinner = e7.spinnerEnabled)), t3;
  }
  destroy() {
    var _a;
    this._dockAction.destroy(), (_a = this._featuresWidget) == null ? void 0 : _a.destroy();
  }
  get _featureNavigationTop() {
    const { currentAlignment: e7, currentDockPosition: t3 } = this;
    return "bottom-left" === e7 || "bottom-center" === e7 || "bottom-right" === e7 || "top-left" === t3 || "top-center" === t3 || "top-right" === t3;
  }
  get actions() {
    return this.viewModel.actions;
  }
  set actions(e7) {
    this.viewModel.actions = e7;
  }
  get autoCloseEnabled() {
    return this.viewModel.autoCloseEnabled;
  }
  set autoCloseEnabled(e7) {
    this.viewModel.autoCloseEnabled = e7;
  }
  get defaultPopupTemplateEnabled() {
    return this.viewModel.defaultPopupTemplateEnabled;
  }
  set defaultPopupTemplateEnabled(e7) {
    this.viewModel.defaultPopupTemplateEnabled = e7;
  }
  get content() {
    return this.viewModel.content;
  }
  set content(e7) {
    this.viewModel.content = e7;
  }
  get collapsed() {
    return this._featuresWidget.collapsed;
  }
  set collapsed(e7) {
    this._featuresWidget.collapsed = e7;
  }
  get collapseEnabled() {
    return o(n.getLogger(this), "collapseEnabled", { replacement: "PopupVisibleElements.collapseButton", version: "4.29" }), this.visibleElements.collapseButton;
  }
  set collapseEnabled(e7) {
    o(n.getLogger(this), "collapseEnabled", { replacement: "PopupVisibleElements.collapseButton", version: "4.29" }), this.visibleElements.collapseButton = e7;
  }
  get currentAlignment() {
    return this._getCurrentAlignment();
  }
  get currentDockPosition() {
    return this._getCurrentDockPosition();
  }
  get dockOptions() {
    return this._get("dockOptions") || _;
  }
  set dockOptions(e7) {
    var _a, _b;
    const t3 = { ..._ }, i = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.breakpoints, o3 = {};
    i && (o3.width = i.xsmall, o3.height = i.xsmall);
    const n3 = { ...t3, ...e7 }, s2 = { ...t3.breakpoint, ...o3 }, { breakpoint: r } = n3;
    "object" == typeof r ? n3.breakpoint = { ...s2, ...r } : r && (n3.breakpoint = s2), this._set("dockOptions", n3), this._setCurrentDockPosition(), this.reposition();
  }
  get featureCount() {
    return this.viewModel.featureCount;
  }
  get featureMenuOpen() {
    return this.viewModel.featureMenuOpen;
  }
  set featureMenuOpen(e7) {
    this.viewModel.featureMenuOpen = e7;
  }
  get features() {
    return this.viewModel.features;
  }
  set features(e7) {
    this.viewModel.features = e7;
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e7) {
    this.viewModel.goToOverride = e7;
  }
  get highlightEnabled() {
    return this.viewModel.highlightEnabled;
  }
  set highlightEnabled(e7) {
    this.viewModel.highlightEnabled = e7;
  }
  get icon() {
    return "popup";
  }
  set icon(e7) {
    this._overrideIfSome("icon", e7);
  }
  get location() {
    return this.viewModel.location;
  }
  set location(e7) {
    this.viewModel.location = e7;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e7) {
    this._overrideIfSome("label", e7);
  }
  get promises() {
    return this.viewModel.promises;
  }
  set promises(e7) {
    this.viewModel.promises = e7;
  }
  get selectedFeature() {
    return this.viewModel.selectedFeature;
  }
  get selectedFeatureIndex() {
    return this.viewModel.selectedFeatureIndex;
  }
  set selectedFeatureIndex(e7) {
    this.viewModel.selectedFeatureIndex = e7;
  }
  get selectedFeatureWidget() {
    return this._featuresWidget.selectedFeatureWidget;
  }
  get spinnerEnabled() {
    return o(n.getLogger(this), "spinnerEnabled", { replacement: "PopupVisibleElements.spinner", version: "4.29" }), this.visibleElements.spinner;
  }
  set spinnerEnabled(e7) {
    o(n.getLogger(this), "spinnerEnabled", { replacement: "PopupVisibleElements.spinner", version: "4.29" }), this.visibleElements.spinner = e7;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e7) {
    this.viewModel.title = e7;
  }
  get updateLocationEnabled() {
    return this.viewModel.updateLocationEnabled;
  }
  set updateLocationEnabled(e7) {
    this.viewModel.updateLocationEnabled = e7;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e7) {
    this.viewModel.view = e7;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(e7) {
    this.viewModel.visible = e7;
  }
  blur() {
    const { active: e7 } = this.viewModel;
    e7 || n.getLogger(this).warn("Popup can only be blurred when currently active."), this._featuresWidget.blur();
  }
  clear() {
    return this.viewModel.clear();
  }
  close() {
    this.visible = false;
  }
  fetchFeatures(e7, t3) {
    return this.viewModel.fetchFeatures(e7, t3);
  }
  focus() {
    const { active: e7 } = this.viewModel;
    e7 || n.getLogger(this).warn("Popup can only be focused when currently active."), this.reposition(), requestAnimationFrame(() => {
      this._featuresWidget.focus();
    });
  }
  next() {
    return this.viewModel.next();
  }
  open(e7) {
    const t3 = !!e7 && !!e7.featureMenuOpen, i = { collapsed: !!e7 && !!e7.collapsed, featureMenuOpen: t3 };
    this.set(i), this.viewModel.open(e7), this._shouldFocus(e7);
  }
  previous() {
    return this.viewModel.previous();
  }
  reposition() {
    this.renderNow(), this._positionContainer(), this._setCurrentAlignment();
  }
  triggerAction(e7) {
    return this.viewModel.triggerAction(e7);
  }
  render() {
    var _a, _b, _c, _d;
    const { dockEnabled: e7, currentAlignment: t3, currentDockPosition: i } = this, { active: o3, screenLocation: n3 } = this.viewModel, s2 = o3 && e7, r = o3 && !e7, l = (_b = (_a = this.selectedFeature) == null ? void 0 : _a.layer) == null ? void 0 : _b.title, a2 = (_d = (_c = this.selectedFeature) == null ? void 0 : _c.layer) == null ? void 0 : _d.id, d2 = { [e5.alignTopCenter]: "top-center" === t3, [e5.alignBottomCenter]: "bottom-center" === t3, [e5.alignTopLeft]: "top-left" === t3, [e5.alignBottomLeft]: "bottom-left" === t3, [e5.alignTopRight]: "top-right" === t3, [e5.alignBottomRight]: "bottom-right" === t3, [e5.isDocked]: s2, [e5.shadow]: r, [e5.isDockedTopLeft]: "top-left" === i, [e5.isDockedTopCenter]: "top-center" === i, [e5.isDockedTopRight]: "top-right" === i, [e5.isDockedBottomLeft]: "bottom-left" === i, [e5.isDockedBottomCenter]: "bottom-center" === i, [e5.isDockedBottomRight]: "bottom-right" === i };
    return n2("div", { afterCreate: this._positionContainer, afterUpdate: this._positionContainer, bind: this, class: this.classes(e5.base, d2, { [e5.baseHidden]: !n3 && !e7 }), "data-layer-id": a2, "data-layer-title": l, role: "presentation" }, o3 ? [this._renderMainContainer(), this._renderPointer()] : null);
  }
  _renderPointer() {
    return this.dockEnabled ? null : n2("div", { class: e5.pointer, key: "popup-pointer", role: "presentation" }, n2("div", { class: this.classes(e5.pointerDirection, e5.shadow) }));
  }
  _renderMainContainer() {
    const { dockEnabled: e7 } = this, t3 = { [e5.shadow]: e7 };
    return n2("div", { afterCreate: this._setMainContainerNode, afterUpdate: this._setMainContainerNode, bind: this, class: this.classes(e5.main, e3.widget, t3) }, this._featuresWidget.render());
  }
  async _shouldFocus(e7) {
    (e7 == null ? void 0 : e7.shouldFocus) && (await w(() => {
      var _a;
      return true === ((_a = this.viewModel) == null ? void 0 : _a.active);
    }), this.focus());
  }
  _isOutsideView(e7) {
    const { popupHeight: t3, popupWidth: i, screenLocation: o3, side: n3, view: s2 } = e7;
    if (isNaN(i) || isNaN(t3) || !s2 || !o3)
      return false;
    const r = s2.padding;
    return "right" === n3 && o3.x + i / 2 > s2.width - r.right || ("left" === n3 && o3.x - i / 2 < r.left || ("top" === n3 && o3.y - t3 < r.top || "bottom" === n3 && o3.y + t3 > s2.height - r.bottom));
  }
  _calculateAutoAlignment(e7) {
    if ("auto" !== e7)
      return e7;
    const { _pointerOffsetInPx: t3, _containerNode: i, _mainContainerNode: o3, viewModel: n3 } = this, { screenLocation: s2, view: r } = n3;
    if (null == s2 || !r || !i)
      return "top-center";
    function l(e8) {
      return parseInt(e8.replaceAll(/[^-\d\.]/g, ""), 10);
    }
    const a2 = o3 ? window.getComputedStyle(o3, null) : null, d2 = a2 ? l(a2.getPropertyValue("max-height")) : 0, c2 = a2 ? l(a2.getPropertyValue("height")) : 0, { height: p2, width: h } = i.getBoundingClientRect(), u = h + t3, g = Math.max(p2, d2, c2) + t3, v3 = this._isOutsideView({ popupHeight: g, popupWidth: u, screenLocation: s2, side: "right", view: r }), m = this._isOutsideView({ popupHeight: g, popupWidth: u, screenLocation: s2, side: "left", view: r }), b = this._isOutsideView({ popupHeight: g, popupWidth: u, screenLocation: s2, side: "top", view: r }), f = this._isOutsideView({ popupHeight: g, popupWidth: u, screenLocation: s2, side: "bottom", view: r });
    return m ? b ? "bottom-right" : "top-right" : v3 ? b ? "bottom-left" : "top-left" : b ? f ? "top-center" : "bottom-center" : "top-center";
  }
  _callCurrentAlignment(e7) {
    return "function" == typeof e7 ? e7.call(this) : e7;
  }
  _getCurrentAlignment() {
    const { alignment: e7, dockEnabled: t3 } = this;
    return t3 || !this.viewModel.active ? null : this._calculatePositionResult(this._calculateAutoAlignment(this._callCurrentAlignment(e7)));
  }
  _setCurrentAlignment() {
    this._set("currentAlignment", this._getCurrentAlignment());
  }
  _setCurrentDockPosition() {
    this._set("currentDockPosition", this._getCurrentDockPosition());
  }
  _calculatePositionResult(e7) {
    const t3 = ["left", "right"];
    return v2(this.container) && t3.reverse(), e7 == null ? void 0 : e7.replace(/leading/gi, t3[0]).replaceAll(/trailing/gi, t3[1]);
  }
  _callDockPosition(e7) {
    return "function" == typeof e7 ? e7.call(this) : e7;
  }
  _getDockPosition() {
    var _a;
    return this._calculatePositionResult(this._calculateAutoDockPosition(this._callDockPosition((_a = this.dockOptions) == null ? void 0 : _a.position)));
  }
  _getCurrentDockPosition() {
    return this.dockEnabled && this.viewModel.active ? this._getDockPosition() : null;
  }
  _calculateAutoDockPosition(e7) {
    var _a;
    if ("auto" !== e7)
      return e7;
    const t3 = (_a = this.viewModel) == null ? void 0 : _a.view, i = v2(this.container) ? "top-left" : "top-right";
    if (!t3)
      return i;
    const o3 = t3.padding || { left: 0, right: 0, top: 0, bottom: 0 }, n3 = t3.width - o3.left - o3.right, { breakpoints: s2 } = t3;
    return s2 && n3 <= s2.xsmall ? "bottom-center" : i;
  }
  _getDockIcon() {
    const e7 = this._getDockPosition();
    if (this.dockEnabled)
      return "minimize";
    switch (e7) {
      case "top-left":
      case "bottom-left":
        return "dock-left";
      case "top-center":
        return "maximize";
      case "bottom-center":
        return "dock-bottom";
      default:
        return "dock-right";
    }
  }
  _handleDockIcon() {
    this._dockAction.icon = this._getDockIcon();
  }
  _handleDockEnabled() {
    var _a, _b;
    this._dockAction.title = this.dockEnabled ? (_a = this.messages) == null ? void 0 : _a.undock : (_b = this.messages) == null ? void 0 : _b.dock;
  }
  _setMainContainerNode(e7) {
    this._mainContainerNode = e7;
  }
  _positionContainer(e7 = this._containerNode) {
    if (e7 && (this._containerNode = e7), !this._containerNode)
      return;
    const { screenLocation: t3 } = this.viewModel, { width: i } = this._containerNode.getBoundingClientRect(), o3 = this._calculatePositionStyle(t3, i);
    o3 && Object.assign(this._containerNode.style, o3);
  }
  _calculateFullWidth(e7) {
    const { currentAlignment: t3, _pointerOffsetInPx: i } = this;
    return "top-left" === t3 || "bottom-left" === t3 || "top-right" === t3 || "bottom-right" === t3 ? e7 + i : e7;
  }
  _calculateAlignmentPosition(e7, t3, i, o3) {
    const { currentAlignment: n3, _pointerOffsetInPx: s2 } = this;
    if (!i)
      return;
    const { padding: r } = i, l = o3 / 2, a2 = i.height - t3, d2 = i.width - e7;
    return "bottom-center" === n3 ? { top: t3 + s2 - r.top, left: e7 - l - r.left } : "top-left" === n3 ? { bottom: a2 + s2 - r.bottom, right: d2 + s2 - r.right } : "bottom-left" === n3 ? { top: t3 + s2 - r.top, right: d2 + s2 - r.right } : "top-right" === n3 ? { bottom: a2 + s2 - r.bottom, left: e7 + s2 - r.left } : "bottom-right" === n3 ? { top: t3 + s2 - r.top, left: e7 + s2 - r.left } : "top-center" === n3 ? { bottom: a2 + s2 - r.bottom, left: e7 - l - r.left } : void 0;
  }
  _calculatePositionStyle(e7, t3) {
    const { dockEnabled: i, view: o3 } = this;
    if (!o3)
      return;
    if (i)
      return { left: "", top: "", right: "", bottom: "" };
    if (null == e7 || !t3)
      return;
    const n3 = this._calculateFullWidth(t3), s2 = this._calculateAlignmentPosition(e7.x, e7.y, o3, n3);
    return s2 ? { top: void 0 !== s2.top ? `${s2.top}px` : "auto", left: void 0 !== s2.left ? `${s2.left}px` : "auto", bottom: void 0 !== s2.bottom ? `${s2.bottom}px` : "auto", right: void 0 !== s2.right ? `${s2.right}px` : "auto" } : void 0;
  }
  _viewChange(e7, t3) {
    e7 && t3 && (this.close(), this.clear());
  }
  _viewReadyChange(e7, t3) {
    e7 ? this._wireUpView() : t3 && (this.close(), this.clear());
  }
  _wireUpView() {
    this._setDockEnabledForViewSize(this.dockOptions);
  }
  _dockingThresholdCrossed(e7, t3, i) {
    const [o3, n3] = e7, [s2, r] = t3, { width: l = 0, height: a2 = 0 } = i ?? {};
    return o3 <= l && s2 > l || o3 > l && s2 <= l || n3 <= a2 && r > a2 || n3 > a2 && r <= a2;
  }
  _updateDockEnabledForViewSize(e7, t3) {
    var _a, _b;
    if (!e7 || !t3)
      return;
    const i = ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.padding) || { left: 0, right: 0, top: 0, bottom: 0 }, o3 = i.left + i.right, n3 = i.top + i.bottom, s2 = [], r = [];
    s2[0] = e7[0] - o3, s2[1] = e7[1] - n3, r[0] = t3[0] - o3, r[1] = t3[1] - n3;
    const { dockOptions: l } = this, a2 = l.breakpoint;
    this._dockingThresholdCrossed(s2, r, a2) && this._setDockEnabledForViewSize(l), this._setCurrentDockPosition();
  }
  _toggleScreenLocationEnabled() {
    const { dockEnabled: e7, viewModel: t3 } = this;
    if (!t3)
      return;
    const i = t3.active && !e7;
    t3.screenLocationEnabled = i;
  }
  _shouldDockAtCurrentViewSize(e7) {
    var _a, _b;
    const t3 = e7.breakpoint, i = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ui;
    if (!i)
      return false;
    const { width: o3, height: n3 } = i;
    if (isNaN(o3) || isNaN(n3))
      return false;
    if (!t3)
      return false;
    const s2 = t3.hasOwnProperty("width") && o3 <= (t3.width ?? 0), r = t3.hasOwnProperty("height") && n3 <= (t3.height ?? 0);
    return s2 || r;
  }
  _setDockEnabledForViewSize(e7) {
    e7.breakpoint && (this.dockEnabled = this._shouldDockAtCurrentViewSize(e7));
  }
};
e([y({ readOnly: true })], k.prototype, "_featureNavigationTop", null), e([y()], k.prototype, "actions", null), e([y()], k.prototype, "alignment", void 0), e([y()], k.prototype, "autoCloseEnabled", null), e([y()], k.prototype, "defaultPopupTemplateEnabled", null), e([y()], k.prototype, "content", null), e([y()], k.prototype, "collapsed", null), e([y()], k.prototype, "collapseEnabled", null), e([y({ readOnly: true })], k.prototype, "currentAlignment", null), e([y({ readOnly: true })], k.prototype, "currentDockPosition", null), e([y()], k.prototype, "dockOptions", null), e([y()], k.prototype, "dockEnabled", void 0), e([y({ readOnly: true })], k.prototype, "featureCount", null), e([y()], k.prototype, "featureMenuOpen", null), e([y()], k.prototype, "features", null), e([y()], k.prototype, "goToOverride", null), e([y()], k.prototype, "headingLevel", void 0), e([y()], k.prototype, "highlightEnabled", null), e([y()], k.prototype, "icon", null), e([y()], k.prototype, "location", null), e([y()], k.prototype, "label", null), e([y(), e2("esri/widgets/Popup/t9n/Popup")], k.prototype, "messages", void 0), e([y()], k.prototype, "promises", null), e([y({ readOnly: true })], k.prototype, "selectedFeature", null), e([y()], k.prototype, "selectedFeatureIndex", null), e([y({ readOnly: true })], k.prototype, "selectedFeatureWidget", null), e([y()], k.prototype, "spinnerEnabled", null), e([y()], k.prototype, "title", null), e([y()], k.prototype, "updateLocationEnabled", null), e([y()], k.prototype, "view", null), e([y({ type: t2 }), e4(["triggerAction", "trigger-action"])], k.prototype, "viewModel", void 0), e([y()], k.prototype, "visible", null), e([y({ type: p, nonNullable: true })], k.prototype, "visibleElements", void 0), k = e([a("esri.widgets.Popup")], k);
var E2 = k;
export {
  E2 as default
};
//# sourceMappingURL=Popup-IVY37X4G.js.map
