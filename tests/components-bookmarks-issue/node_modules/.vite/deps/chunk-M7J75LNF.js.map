{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/HighlightDownsample.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{ScreenSpacePass as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{NoParameters as r,glsl as a}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as t}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DDrawUniform as l}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DDrawUniform.js\";class o extends r{}function i(){const r=new t,{outputs:o,fragment:i}=r;return r.include(e),i.uniforms.add(new l(\"textureInput\",(e=>e.input))),i.constants.add(\"sampleArea\",\"int\",Math.ceil(s/2)),o.add(\"fragGrid\",\"vec2\"),i.code.add(a`\n    void main() {\n      float red = 0.0;\n      float green = 1.0;\n      int cellSize = ${a.int(n)};\n      vec2 texelSize = 1.0 / vec2(textureSize(textureInput, 0));\n      vec2 offset = floor(gl_FragCoord.xy) * vec2(float(cellSize));\n\n      for(int x = -sampleArea; x < cellSize + sampleArea; x += 2) {\n        for(int y = -sampleArea; y < cellSize + sampleArea; y += 2) {\n          vec2 coord = (offset + vec2(float(x), float(y))) * texelSize;\n          vec4 value = texture(textureInput, coord);\n          float mx = floor(max(value.g, value.b));\n\n          red = max(red, ceil(value.r));\n          green = min(green, mx);\n          if(red == 1.0 && green == 0.0) {\n            fragGrid = vec2(red, green);\n            return;\n          }\n        }\n      }\n      fragGrid = vec2(red, green);\n    }`),r}const n=32,s=9,d=.4,c=Object.freeze(Object.defineProperty({__proto__:null,HighlightDownsampleDrawParameters:o,blurSize:d,build:i,gridCellPixelSize:n,outlineSize:s},Symbol.toStringTag,{value:\"Module\"}));export{o as H,c as a,d as b,i as c,n as g,s as o};\n"],
  "mappings": ";;;;;;;;;;;;;;;AAIiZ,IAAMA,KAAN,cAAgB,EAAC;AAAC;AAAC,SAAS,IAAG;AAAC,QAAM,IAAE,IAAIA,MAAE,EAAC,SAAQA,IAAE,UAASC,GAAC,IAAE;AAAE,SAAO,EAAE,QAAQD,EAAC,GAAEC,GAAE,SAAS,IAAI,IAAI,EAAE,gBAAgB,OAAG,EAAE,KAAM,CAAC,GAAEA,GAAE,UAAU,IAAI,cAAa,OAAM,KAAK,KAAKC,KAAE,CAAC,CAAC,GAAEF,GAAE,IAAI,YAAW,MAAM,GAAEC,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA,uBAI/lB,EAAE,IAAIE,EAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBzB,GAAE;AAAC;AAAC,IAAMA,KAAE;AAAR,IAAWD,KAAE;AAAb,IAAe,IAAE;AAAjB,IAAoB,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,mCAAkCF,IAAE,UAAS,GAAE,OAAM,GAAE,mBAAkBG,IAAE,aAAYD,GAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["o", "i", "s", "n"]
}
