import {
  r as r3
} from "./chunk-HHAESKQ6.js";
import {
  D
} from "./chunk-PWQTGVPO.js";
import {
  a,
  p,
  s as s2
} from "./chunk-4MJOJUFR.js";
import {
  P,
  e as e2,
  f,
  i as i2,
  l as l2,
  m,
  o as o5,
  s
} from "./chunk-J5F4VILS.js";
import {
  A,
  E,
  c as c2,
  l
} from "./chunk-7A5N7G2Z.js";
import {
  r,
  r2,
  t
} from "./chunk-ZPC74XHC.js";
import {
  A as A2
} from "./chunk-IVGJRGD2.js";
import {
  u as u2
} from "./chunk-JA2AO4PC.js";
import {
  t as t2
} from "./chunk-JKOHBDRD.js";
import {
  c2 as c,
  h
} from "./chunk-3DFMDDMO.js";
import {
  S,
  _,
  o as o4
} from "./chunk-MEEG7XMI.js";
import {
  o as o3
} from "./chunk-LJULTBAY.js";
import {
  H as H2
} from "./chunk-YJFPDMSR.js";
import {
  i,
  o as o2,
  u
} from "./chunk-CDBOQCLE.js";
import {
  e
} from "./chunk-GLF3KRAL.js";
import {
  H,
  O,
  o
} from "./chunk-JZBR4X6W.js";
import {
  n
} from "./chunk-OIJCMME5.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/LineMarkerTechnique.js
var E2 = /* @__PURE__ */ new Map([[e.POSITION, 0], [e.PREVPOSITION, 1], [e.UV0, 2], [e.NORMAL, 3], [e.COLOR, 4], [e.COLORFEATUREATTRIBUTE, 4], [e.SIZE, 5], [e.SIZEFEATUREATTRIBUTE, 5], [e.OPACITYFEATUREATTRIBUTE, 6]]);
var j = class _j extends r {
  initializeProgram(e3) {
    return new r2(e3.rctx, _j.shader.get().build(this.configuration), E2);
  }
  _makePipelineState(i3, t3) {
    const o6 = this.configuration, u3 = i3 === o3.NONE;
    return S({ blending: o6.output === o2.Color || o6.output === o2.Alpha ? u3 ? c2 : A(i3) : null, depthTest: o6.space === p.Draped ? null : { func: l(i3) }, depthWrite: o6.space === p.Draped ? null : u3 ? o6.writeDepth ? o4 : null : E(i3), colorWrite: _, stencilWrite: o6.hasOccludees ? e2 : null, stencilTest: o6.hasOccludees ? t3 ? o5 : f : null, polygonOffset: { factor: 0, units: -10 } });
  }
  initializePipeline() {
    return this.configuration.occluder && (this._occluderPipelineTransparent = S({ blending: c2, depthTest: s, depthWrite: null, colorWrite: _, stencilWrite: null, stencilTest: m }), this._occluderPipelineOpaque = S({ blending: c2, depthTest: s, depthWrite: null, colorWrite: _, stencilWrite: l2, stencilTest: P }), this._occluderPipelineMaskWrite = S({ blending: null, depthTest: i2, depthWrite: null, colorWrite: null, stencilWrite: e2, stencilTest: o5 })), this._occludeePipelineState = this._makePipelineState(this.configuration.transparencyPassType, true), this._makePipelineState(this.configuration.transparencyPassType, false);
  }
  getPipeline(e3, i3, t3) {
    return e3 ? this._occludeePipelineState : this.configuration.occluder ? t3 ? this._occluderPipelineTransparent : i3 ? this._occluderPipelineOpaque : this._occluderPipelineMaskWrite : super.getPipeline();
  }
};
j.shader = new t(D, () => import("./LineMarker.glsl-66GMKHWO.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/LineMarkerMaterial.js
var v = class extends c {
  constructor(e3) {
    super(e3, new S2()), this.produces = /* @__PURE__ */ new Map([[A2.OPAQUE_MATERIAL, (e4) => e4 === o2.Highlight || i(e4) && this.parameters.renderOccluded === h.OccludeAndTransparentStencil], [A2.OPAQUE_NO_SSAO_DEPTH, (e4) => e4 === o2.LinearDepth], [A2.OCCLUDER_MATERIAL, (e4) => u(e4) && this.parameters.renderOccluded === h.OccludeAndTransparentStencil], [A2.TRANSPARENT_OCCLUDER_MATERIAL, (e4) => u(e4) && this.parameters.renderOccluded === h.OccludeAndTransparentStencil], [A2.TRANSPARENT_MATERIAL, (e4) => i(e4) && this.parameters.writeDepth], [A2.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL, (e4) => i(e4) && !this.parameters.writeDepth], [A2.DRAPED_MATERIAL, (e4) => e4 === o2.Color || e4 === o2.Highlight]]), this._vertexAttributeLocations = E2, this._configuration = new a(), this._layout = this.createLayout();
  }
  getConfiguration(e3, t3) {
    return this._configuration.output = e3, this._configuration.space = t3.slot === A2.DRAPED_MATERIAL ? p.Draped : this.parameters.worldSpace ? p.World : p.Screen, this._configuration.hideOnShortSegments = this.parameters.hideOnShortSegments, this._configuration.hasCap = this.parameters.cap !== r3.BUTT, this._configuration.anchor = this.parameters.anchor, this._configuration.hasTip = this.parameters.hasTip, this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.hasOccludees = this.parameters.hasOccludees, this._configuration.writeDepth = this.parameters.writeDepth, this._configuration.vvSize = !!this.parameters.vvSize, this._configuration.vvColor = !!this.parameters.vvColor, this._configuration.vvOpacity = !!this.parameters.vvOpacity, this._configuration.occluder = this.parameters.renderOccluded === h.OccludeAndTransparentStencil, this._configuration.transparencyPassType = t3.transparencyPassType, this._configuration.multipassEnabled = t3.multipassEnabled, this._configuration.cullAboveGround = t3.multipassTerrain.cullAboveGround, this._configuration;
  }
  intersect() {
  }
  createLayout() {
    const e3 = H2().vec3f(e.POSITION).vec3f(e.PREVPOSITION).vec2f(e.UV0);
    return this.parameters.worldSpace && e3.vec3f(e.NORMAL), this.parameters.vvSize ? e3.f32(e.SIZEFEATUREATTRIBUTE) : e3.f32(e.SIZE), this.parameters.vvColor ? e3.f32(e.COLORFEATUREATTRIBUTE) : e3.vec4f(e.COLOR), this.parameters.vvOpacity && e3.f32(e.OPACITYFEATUREATTRIBUTE), e3;
  }
  createBufferWriter() {
    return new g(this._layout, this.parameters);
  }
  createGLMaterial(e3) {
    return new O2(e3);
  }
};
var O2 = class extends u2 {
  constructor() {
    super(...arguments), this._markerPrimitive = null;
  }
  dispose() {
    super.dispose(), this._markerTextureRepository.release(this._markerPrimitive), this._markerPrimitive = null;
  }
  _updateParameters(e3) {
    const t3 = this._material.parameters.markerPrimitive;
    return t3 !== this._markerPrimitive && (this._material.setParameters({ markerTexture: this._markerTextureRepository.swap(t3, this._markerPrimitive) }), this._markerPrimitive = t3), this._material.setParameters(this.textureBindParameters), this.ensureTechnique(j, e3);
  }
  _updateOccludeeState(e3) {
    e3.hasOccludees !== this._material.parameters.hasOccludees && this._material.setParameters({ hasOccludees: e3.hasOccludees });
  }
  beginSlot(e3) {
    return this._output !== o2.Color && this._output !== o2.Alpha || this._updateOccludeeState(e3), this._updateParameters(e3);
  }
};
var S2 = class extends t2 {
  constructor() {
    super(...arguments), this.width = 0, this.color = [1, 1, 1, 1], this.markerPrimitive = "arrow", this.placement = "end", this.cap = r3.BUTT, this.anchor = s2.Center, this.hasTip = false, this.worldSpace = false, this.hideOnShortSegments = false, this.writeDepth = true, this.hasSlicePlane = false, this.vvFastUpdate = false, this.hasOccludees = false, this.markerTexture = null;
  }
};
var g = class {
  constructor(e3, t3) {
    this.vertexBufferLayout = e3, this._parameters = t3;
  }
  elementCount() {
    return "begin-end" === this._parameters.placement ? 12 : 6;
  }
  write(a2, i3, s3, n2, o6) {
    const h2 = s3.attributes.get(e.POSITION).data, c3 = h2.length / 3;
    let u3 = [1, 0, 0];
    const p2 = s3.attributes.get(e.NORMAL);
    this._parameters.worldSpace && null != p2 && (u3 = p2.data);
    let m2 = 1, d = 0;
    this._parameters.vvSize ? d = s3.attributes.get(e.SIZEFEATUREATTRIBUTE).data[0] : s3.attributes.has(e.SIZE) && (m2 = s3.attributes.get(e.SIZE).data[0]);
    let T = [1, 1, 1, 1], _2 = 0;
    this._parameters.vvColor ? _2 = s3.attributes.get(e.COLORFEATUREATTRIBUTE).data[0] : s3.attributes.has(e.COLOR) && (T = s3.attributes.get(e.COLOR).data);
    let f2 = 0;
    this._parameters.vvOpacity && (f2 = s3.attributes.get(e.OPACITYFEATUREATTRIBUTE).data[0]);
    const A3 = new Float32Array(n2.buffer);
    let E3 = o6 * (this.vertexBufferLayout.stride / 4);
    const v2 = (e3, t3, r4, a3) => {
      if (A3[E3++] = e3[0], A3[E3++] = e3[1], A3[E3++] = e3[2], A3[E3++] = t3[0], A3[E3++] = t3[1], A3[E3++] = t3[2], A3[E3++] = r4[0], A3[E3++] = r4[1], this._parameters.worldSpace && (A3[E3++] = u3[0], A3[E3++] = u3[1], A3[E3++] = u3[2]), this._parameters.vvSize ? A3[E3++] = d : A3[E3++] = m2, this._parameters.vvColor)
        A3[E3++] = _2;
      else {
        const e4 = Math.min(4 * a3, T.length - 4);
        A3[E3++] = T[e4], A3[E3++] = T[e4 + 1], A3[E3++] = T[e4 + 2], A3[E3++] = T[e4 + 3];
      }
      this._parameters.vvOpacity && (A3[E3++] = f2);
    };
    let O3;
    !function(e3) {
      e3[e3.ASCENDING = 1] = "ASCENDING", e3[e3.DESCENDING = -1] = "DESCENDING";
    }(O3 || (O3 = {}));
    const S3 = (i4, s4) => {
      const n3 = o(R, h2[3 * i4], h2[3 * i4 + 1], h2[3 * i4 + 2]), o7 = P2;
      let u4 = i4 + s4;
      do {
        o(o7, h2[3 * u4], h2[3 * u4 + 1], h2[3 * u4 + 2]), u4 += s4;
      } while (H(n3, o7) && u4 >= 0 && u4 < c3);
      a2 && (O(n3, n3, a2), O(o7, o7, a2)), v2(n3, o7, [-1, -1], i4), v2(n3, o7, [1, -1], i4), v2(n3, o7, [1, 1], i4), v2(n3, o7, [-1, -1], i4), v2(n3, o7, [1, 1], i4), v2(n3, o7, [-1, 1], i4);
    }, g2 = this._parameters.placement;
    "begin" !== g2 && "begin-end" !== g2 || S3(0, O3.ASCENDING), "end" !== g2 && "begin-end" !== g2 || S3(c3 - 1, O3.DESCENDING);
  }
};
var R = n();
var P2 = n();

export {
  v
};
//# sourceMappingURL=chunk-AZYURM7A.js.map
