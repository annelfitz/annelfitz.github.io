import {
  a as a3
} from "./chunk-YKIGDW5O.js";
import {
  i,
  l
} from "./chunk-R4CJB3GP.js";
import {
  n
} from "./chunk-B647DRFJ.js";
import {
  y as y2
} from "./chunk-J7AMTUNG.js";
import {
  e as e2
} from "./chunk-OCF7OAES.js";
import {
  x2 as x
} from "./chunk-M5ZB5S5C.js";
import {
  o
} from "./chunk-YOPMY6TS.js";
import {
  r
} from "./chunk-VIN55KNF.js";
import {
  s
} from "./chunk-IOB3DJMR.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a,
  a3 as a2
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";

// node_modules/@arcgis/core/CameraLayout.js
var t = class extends l {
  constructor(o2) {
    super(o2), this.row = 0, this.column = 0, this.rows = 1, this.columns = 1;
  }
  equals(o2) {
    return null != o2 && (this.row === o2.row && this.rows === o2.rows && this.column === o2.column && this.columns === o2.columns);
  }
};
e([y({ type: Number, nonNullable: true, json: { read: false, write: false } })], t.prototype, "row", void 0), e([y({ type: Number, nonNullable: true, json: { read: false, write: false } })], t.prototype, "column", void 0), e([y({ type: Number, nonNullable: true, json: { read: false, write: false } })], t.prototype, "rows", void 0), e([y({ type: Number, nonNullable: true, json: { read: false, write: false } })], t.prototype, "columns", void 0), t = e([a2("esri.CameraLayout")], t);
var l2 = t;

// node_modules/@arcgis/core/Camera.js
var y3 = class extends i(f) {
  constructor(...o2) {
    super(...o2), this.position = new x([0, 0, 0]), this.heading = 0, this.tilt = 0, this.fov = 55, this.layout = new l2();
  }
  normalizeCtorArgs(o2, r2, t2, e3) {
    if (o2 && "object" == typeof o2 && ("x" in o2 || Array.isArray(o2))) {
      const s2 = { position: o2 };
      return null != r2 && (s2.heading = r2), null != t2 && (s2.tilt = t2), null != e3 && (s2.fov = e3), s2;
    }
    return o2;
  }
  writePosition(o2, r2, t2, e3) {
    const s2 = o2.clone();
    s2.x = a(o2.x || 0), s2.y = a(o2.y || 0), s2.z = o2.hasZ ? a(o2.z || 0) : o2.z, r2[t2] = s2.write({}, e3);
  }
  readPosition(o2, r2) {
    const t2 = new x();
    return t2.read(o2, r2), t2.x = a(t2.x || 0), t2.y = a(t2.y || 0), t2.z = t2.hasZ ? a(t2.z || 0) : t2.z, t2;
  }
  equals(o2) {
    return null != o2 && (this.tilt === o2.tilt && this.heading === o2.heading && this.fov === o2.fov && this.position.equals(o2.position) && this.layout.equals(o2.layout));
  }
};
e([y({ type: x, json: { write: { isRequired: true } } })], y3.prototype, "position", void 0), e([r("position")], y3.prototype, "writePosition", null), e([o("position")], y3.prototype, "readPosition", null), e([y({ type: Number, nonNullable: true, json: { write: { isRequired: true } } }), s((o2) => a3.normalize(a(o2)))], y3.prototype, "heading", void 0), e([y({ type: Number, nonNullable: true, json: { write: { isRequired: true } } }), s((o2) => e2(a(o2), -180, 180))], y3.prototype, "tilt", void 0), e([y({ type: Number, nonNullable: true, json: { read: false, write: false } })], y3.prototype, "fov", void 0), e([y({ type: l2, nonNullable: true, json: { read: false, write: false } })], y3.prototype, "layout", void 0), y3 = e([a2("esri.Camera")], y3);
var d = y3;

// node_modules/@arcgis/core/Viewpoint.js
var n2;
var p = n2 = class extends f {
  constructor(r2) {
    super(r2), this.rotation = 0, this.scale = 0, this.targetGeometry = null, this.camera = null;
  }
  castRotation(r2) {
    return (r2 %= 360) < 0 && (r2 += 360), r2;
  }
  clone() {
    return new n2({ rotation: this.rotation, scale: this.scale, targetGeometry: null != this.targetGeometry ? this.targetGeometry.clone() : null, camera: null != this.camera ? this.camera.clone() : null });
  }
};
function m() {
  return { enabled: !this.camera };
}
e([y({ type: Number, json: { write: true, origins: { "web-map": { default: 0, write: true }, "web-scene": { write: { overridePolicy: m } } } } })], p.prototype, "rotation", void 0), e([s("rotation")], p.prototype, "castRotation", null), e([y({ type: Number, json: { write: true, origins: { "web-map": { default: 0, write: true }, "web-scene": { write: { overridePolicy: m } } } } })], p.prototype, "scale", void 0), e([y({ types: n, json: { read: y2, write: true, origins: { "web-scene": { read: y2, write: { overridePolicy: m } } } } })], p.prototype, "targetGeometry", void 0), e([y({ type: d, json: { write: true } })], p.prototype, "camera", void 0), p = n2 = e([a2("esri.Viewpoint")], p);
var l3 = p;

export {
  d,
  l3 as l
};
//# sourceMappingURL=chunk-BSYULFZQ.js.map
