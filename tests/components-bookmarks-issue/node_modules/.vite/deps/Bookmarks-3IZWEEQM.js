import {
  f
} from "./chunk-GR36ZHR3.js";
import {
  t as t2,
  u
} from "./chunk-LRSI5HZ3.js";
import {
  t
} from "./chunk-IKON42NH.js";
import {
  l
} from "./chunk-BSYULFZQ.js";
import {
  e as e5
} from "./chunk-D5LHX57G.js";
import {
  e as e4
} from "./chunk-HLKM6YBE.js";
import {
  e as e3
} from "./chunk-EAAEPSBY.js";
import "./chunk-YKIGDW5O.js";
import {
  s as s3
} from "./chunk-QX66UTIR.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import {
  D,
  e2,
  r
} from "./chunk-RGCWZ2KZ.js";
import {
  n as n2
} from "./chunk-5VMSFOCB.js";
import "./chunk-LGQXPGTM.js";
import "./chunk-2SDMYJDE.js";
import "./chunk-TPLOIZC7.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import {
  E,
  j,
  o as o3
} from "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import {
  s as s2
} from "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import {
  o as o2
} from "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  S,
  o,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";
import {
  k
} from "./chunk-J2EGIWT6.js";
import "./chunk-MDRC3XUT.js";
import "./chunk-NCF6OYL5.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/widgets/Bookmarks/BookmarksUserState.js
var s4 = class extends S {
  constructor(t4) {
    super(t4);
  }
  get editedBookmark() {
    const { bookmark: t4 } = this;
    return t4 ? this._get("editedBookmark") || t4.clone() : null;
  }
  get customUrl() {
    var _a, _b, _c, _d;
    return ((_b = (_a = this.editedBookmark) == null ? void 0 : _a.thumbnail) == null ? void 0 : _b.isSecureUrl) ? (_d = (_c = this.editedBookmark) == null ? void 0 : _c.thumbnail) == null ? void 0 : _d.url : null;
  }
  set customUrl(t4) {
    this._override("customUrl", t4);
  }
  get screenshotUrl() {
    var _a, _b, _c, _d;
    return ((_b = (_a = this.editedBookmark) == null ? void 0 : _a.thumbnail) == null ? void 0 : _b.isDataURI) ? (_d = (_c = this.editedBookmark) == null ? void 0 : _c.thumbnail) == null ? void 0 : _d.url : null;
  }
  set screenshotUrl(t4) {
    this._override("screenshotUrl", t4);
  }
  get state() {
    return this._get("state");
  }
  set state(t4) {
    this.validationState = void 0, this.loading = void 0, this._set("state", t4);
  }
  get thumbnailState() {
    var _a, _b, _c, _d;
    return ((_b = (_a = this.editedBookmark) == null ? void 0 : _a.thumbnail) == null ? void 0 : _b.url) ? ((_d = (_c = this.editedBookmark) == null ? void 0 : _c.thumbnail) == null ? void 0 : _d.isSecureUrl) ? "url" : "screenshot" : "none";
  }
  set thumbnailState(t4) {
    this._overrideIfSome("thumbnailState", t4);
  }
};
e([y()], s4.prototype, "bookmark", void 0), e([y({ readOnly: true })], s4.prototype, "editedBookmark", null), e([y()], s4.prototype, "customUrl", null), e([y()], s4.prototype, "screenshotUrl", null), e([y()], s4.prototype, "state", null), e([y()], s4.prototype, "thumbnailState", null), e([y()], s4.prototype, "validationState", void 0), e([y()], s4.prototype, "loading", void 0), s4 = e([a("esri.widgets.Bookmarks.BookmarksUserState")], s4);
var i = s4;

// node_modules/@arcgis/core/widgets/Bookmarks/BookmarksViewModel.js
var k2 = V.ofType(f);
var w = { width: 128, height: 128, format: "png" };
var h = { takeScreenshot: true, captureViewpoint: true, captureRotation: true, captureScale: true, captureTimeExtent: true };
var d = { time: true };
var b = class extends t(o2.EventedAccessor) {
  constructor(t4) {
    super(t4), this.capabilities = { ...d }, this.activeBookmark = null, this.view = null;
  }
  destroy() {
    this.view = null, this._set("activeBookmark", null);
  }
  get abilities() {
    return o(n.getLogger(this), "abilities", { replacement: "capabilities", version: "4.27" }), this.capabilities;
  }
  set abilities(t4) {
    o(n.getLogger(this), "abilities", { replacement: "capabilities", version: "4.27" }), this.capabilities = t4;
  }
  castAbilities(t4) {
    return { ...d, ...t4 };
  }
  castCapabilities(t4) {
    return { ...d, ...t4 };
  }
  get bookmarks() {
    var _a, _b;
    return ((_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.bookmarks) ?? new k2();
  }
  set bookmarks(t4) {
    this._overrideIfSome("bookmarks", t4);
  }
  set defaultCreateOptions(t4) {
    this._set("defaultCreateOptions", { ...h, ...t4 });
  }
  get defaultCreateOptions() {
    return h;
  }
  set defaultEditOptions(t4) {
    this._set("defaultEditOptions", { ...h, ...t4 });
  }
  get defaultEditOptions() {
    return h;
  }
  get state() {
    const { view: t4 } = this;
    return t4 && !t4.ready ? "loading" : "ready";
  }
  async createBookmark(t4) {
    const { view: e6, defaultCreateOptions: o5, capabilities: i2 } = this;
    if (!e6)
      throw new s("create-bookmark:invalid-view", "Cannot create a bookmark without a view.");
    const { takeScreenshot: r2, screenshotSettings: s6, captureViewpoint: n5, captureRotation: c, captureScale: p, captureTimeExtent: l2 } = { ...o5, ...t4 }, u2 = r2 ? await this._createThumbnail(s6) : void 0, k3 = i2.time && l2 && null != e6.timeExtent ? e6.timeExtent.clone() : void 0;
    return new f({ ...u2 && { thumbnail: u2 }, ...l2 && { timeExtent: k3 }, ...n5 && { viewpoint: this._createViewpoint({ view: e6, captureScale: p, captureRotation: c }) } });
  }
  async editBookmark(t4, e6) {
    if (!t4)
      return t4;
    const { view: o5, defaultEditOptions: i2 } = this;
    if (!o5)
      throw new s("edit-bookmark:invalid-view", "Cannot edit a bookmark without a view.");
    const { takeScreenshot: r2, screenshotSettings: s6, captureViewpoint: n5, captureRotation: c, captureScale: p, captureTimeExtent: l2 } = { ...i2, ...e6 }, m = r2 ? await this._createThumbnail(s6) : void 0;
    return m && (t4.thumbnail = m), n5 && (t4.viewpoint = this._createViewpoint({ view: o5, captureScale: p, captureRotation: c })), l2 && null != o5.timeExtent && (t4.timeExtent = o5.timeExtent.clone()), this.emit("bookmark-edit", { bookmark: t4 }), t4;
  }
  goTo(t4) {
    const { capabilities: e6, view: o5 } = this;
    if (!o5)
      throw new s("go-to:invalid-view", "Cannot go to a bookmark without a view");
    const i2 = t4 == null ? void 0 : t4.viewpoint;
    if (!i2)
      throw new s("go-to:invalid-bookmark", "Cannot go to a bookmark that does not contain a 'viewpoint'.", { bookmark: t4 });
    this._set("activeBookmark", t4);
    const r2 = { target: i2 }, s6 = this.callGoTo(r2), n5 = t4 == null ? void 0 : t4.timeExtent;
    return e6.time && n5 && (o5.timeExtent = n5), this.emit("bookmark-select", { bookmark: t4 }), s6.catch(() => {
    }).then(() => this._set("activeBookmark", null)), s6;
  }
  async _createThumbnail(t4) {
    const { view: e6 } = this;
    if (!e6)
      throw new s("bookmark:invalid-view", "Cannot create slide thumbnail without a view");
    const o5 = await e6.takeScreenshot({ ...w, ...t4 });
    return new u({ url: o5.dataUrl });
  }
  _createViewpoint({ view: t4, captureRotation: o5, captureScale: i2 }) {
    var _a, _b;
    const a3 = (_a = t4.viewpoint) == null ? void 0 : _a.clone();
    return new l({ targetGeometry: (_b = t4.extent) == null ? void 0 : _b.clone(), rotation: (o5 ? a3 == null ? void 0 : a3.rotation : null) ?? 0, scale: (i2 ? a3 == null ? void 0 : a3.scale : null) ?? 0 });
  }
};
e([y()], b.prototype, "abilities", null), e([s2("abilities")], b.prototype, "castAbilities", null), e([y()], b.prototype, "capabilities", void 0), e([s2("capabilities")], b.prototype, "castCapabilities", null), e([y({ readOnly: true })], b.prototype, "activeBookmark", void 0), e([y({ type: k2 })], b.prototype, "bookmarks", null), e([y()], b.prototype, "defaultCreateOptions", null), e([y()], b.prototype, "defaultEditOptions", null), e([y({ readOnly: true })], b.prototype, "state", null), e([y()], b.prototype, "view", void 0), b = e([a("esri.widgets.Bookmarks.BookmarksViewModel")], b);
var v = b;

// node_modules/@arcgis/core/widgets/Bookmarks/BookmarksVisibleElements.js
var n3 = class extends S {
  constructor() {
    super(...arguments), this.addBookmarkButton = false, this.closeButton = false, this.collapseButton = false, this.editBookmarkButton = false, this.filter = false, this.flow = true, this.heading = false, this.thumbnail = true, this.time = true;
  }
  get addBookmark() {
    return o(n.getLogger(this), "addBookmark", { replacement: "addBookmarkButton", version: "4.29", warnOnce: true }), this.addBookmarkButton;
  }
  set addBookmark(o5) {
    o(n.getLogger(this), "addBookmark", { replacement: "addBookmarkButton", version: "4.29", warnOnce: true }), this.addBookmarkButton = o5;
  }
};
e([y({ type: Boolean, nonNullable: true })], n3.prototype, "addBookmark", null), e([y({ type: Boolean, nonNullable: true })], n3.prototype, "addBookmarkButton", void 0), e([y({ type: Boolean, nonNullable: true })], n3.prototype, "closeButton", void 0), e([y({ type: Boolean, nonNullable: true })], n3.prototype, "collapseButton", void 0), e([y({ type: Boolean, nonNullable: true })], n3.prototype, "editBookmarkButton", void 0), e([y({ type: Boolean, nonNullable: true })], n3.prototype, "filter", void 0), e([y({ type: Boolean, nonNullable: true })], n3.prototype, "flow", void 0), e([y({ type: Boolean, nonNullable: true })], n3.prototype, "heading", void 0), e([y({ type: Boolean, nonNullable: true })], n3.prototype, "thumbnail", void 0), e([y({ type: Boolean, nonNullable: true })], n3.prototype, "time", void 0), n3 = e([a("esri.widgets.Bookmarks.BookmarksVisibleElements")], n3);
var s5 = n3;

// node_modules/@arcgis/core/widgets/Bookmarks/css.js
var o4 = "esri-bookmarks";
var a2 = `${o4}__authoring`;
var n4 = `${o4}__bookmark`;
var t3 = { base: o4, noBookmarksHeader: `${o4}__no-bookmarks-heading`, noBookmarksDescription: `${o4}__no-bookmarks-description`, form: `${o4}__form`, list: `${o4}__list`, loader: `${o4}__loader`, filterNoResults: `${o4}__filter-no-results`, formContent: `${o4}__form-content`, addBookmarkButton: `${o4}__add-bookmark-button`, editBookmarkInput: `${o4}__edit-bookmark-input`, addBookmarkInput: `${o4}__add-bookmark-input`, dragEnabled: `${o4}--drag-enabled`, bookmarkImage: `${o4}__image`, bookmarkImageContainer: `${n4}-image-container`, bookmarkContent: `${n4}-content`, bookmarkContentLabel: `${n4}-content-label`, authoring: a2, authoringImageContainer: `${a2}-image-container`, authoringRefreshThumbnailButton: `${a2}-refresh-thumbnail-button` };

// node_modules/@arcgis/core/widgets/Bookmarks.js
var w2 = class extends s3(D) {
  constructor(e6, t4) {
    super(e6, t4), this._addInputNode = null, this._editInputNode = null, this._urlEditInputNode = null, this._lastDragDetail = null, this._selectedDragBookmarkUid = null, this._editIncludeTimeExtent = void 0, this._userState = null, this._focusRootFlowItem = false, this._focusAddFlowItem = false, this._focusEditFlowItem = false, this.disabled = false, this.dragEnabled = false, this.filterPlaceholder = "", this.filterText = "", this.headingLevel = 2, this.messages = null, this.messagesCommon = null, this.viewModel = new v(), this.visibleElements = new s5(), this._onCalciteListOrderChange = (e7) => {
      const { _lastDragDetail: t5, bookmarks: o5 } = this, { toEl: i2, fromEl: r2, dragEl: a3, newIndex: s6 } = e7;
      if (!o5.length)
        return;
      if (!r2 || !i2 || (t5 == null ? void 0 : t5.newIndex) === s6 && (t5 == null ? void 0 : t5.dragEl) === a3 && (t5 == null ? void 0 : t5.toEl) === i2 && (t5 == null ? void 0 : t5.fromEl) === r2)
        return;
      this._lastDragDetail = e7;
      const n5 = Array.from(r2.children).filter((e8) => e8 == null ? void 0 : e8.matches("calcite-list-item")).map((e8) => e8.value);
      o5.sort((e8, t6) => {
        const o6 = n5.indexOf(e8.uid), i3 = n5.indexOf(t6.uid);
        return o6 > i3 ? 1 : o6 < i3 ? -1 : 0;
      });
    };
  }
  normalizeCtorArgs(e6) {
    return null != (e6 == null ? void 0 : e6.editingEnabled) && null != e6.visibleElements ? { ...e6, visibleElements: new s5({ ...e6.visibleElements, addBookmarkButton: e6.editingEnabled, editBookmarkButton: e6.editingEnabled }) } : e6;
  }
  loadDependencies() {
    return r({ action: () => import("./calcite-action-P2CTRNG2.js"), button: () => import("./calcite-button-V4T5NPWY.js"), "chip-group": () => import("./calcite-chip-group-OIP22DRX.js"), chip: () => import("./calcite-chip-372HQ7XZ.js"), fab: () => import("./calcite-fab-KM6NPS2P.js"), flow: () => import("./calcite-flow-S3IMKQD6.js"), "flow-item": () => import("./calcite-flow-item-BUZXXDGT.js"), icon: () => import("./calcite-icon-25XWA6H7.js"), input: () => import("./calcite-input-CHG5BNQ7.js"), "input-message": () => import("./calcite-input-message-MUD7QGBO.js"), label: () => import("./calcite-label-W4VTHQAF.js"), list: () => import("./calcite-list-CC3BA3BY.js"), "list-item": () => import("./calcite-list-item-K4SMX7ZK.js"), loader: () => import("./calcite-loader-64JUXTQT.js"), notice: () => import("./calcite-notice-Q2MN4Y4I.js"), scrim: () => import("./calcite-scrim-Z45AYPZE.js"), switch: () => import("./calcite-switch-RMLANBR4.js"), table: () => import("./calcite-table-IIKNEMBY.js"), "table-cell": () => import("./calcite-table-cell-4XBRQO4M.js"), "table-header": () => import("./calcite-table-header-GDE5KGLV.js"), "table-row": () => import("./calcite-table-row-VEGY72I7.js") });
  }
  get defaultCreateOptions() {
    return this.viewModel.defaultCreateOptions;
  }
  set defaultCreateOptions(e6) {
    this.viewModel.defaultCreateOptions = e6;
  }
  get defaultEditOptions() {
    return this.viewModel.defaultEditOptions;
  }
  set defaultEditOptions(e6) {
    this.viewModel.defaultEditOptions = e6;
  }
  get bookmarks() {
    return this.viewModel.bookmarks;
  }
  set bookmarks(e6) {
    this.viewModel.bookmarks = e6;
  }
  get editingEnabled() {
    return o(n.getLogger(this), "editingEnabled", { replacement: "dragEnabled, visibleElements.editBookmarkButton, visibleElements.addBookmarkButton", version: "4.29", warnOnce: true }), this.dragEnabled && this.visibleElements.editBookmarkButton && this.visibleElements.addBookmarkButton;
  }
  set editingEnabled(e6) {
    o(n.getLogger(this), "editingEnabled", { replacement: "dragEnabled, visibleElements.editBookmarkButton, visibleElements.addBookmarkButton", version: "4.29", warnOnce: true }), this.dragEnabled = e6, this.visibleElements.editBookmarkButton = e6, this.visibleElements.addBookmarkButton = e6;
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e6) {
    this.viewModel.goToOverride = e6;
  }
  get icon() {
    return "bookmark";
  }
  set icon(e6) {
    this._overrideIfSome("icon", e6);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e6) {
    this._overrideIfSome("label", e6);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e6) {
    this.viewModel.view = e6;
  }
  endAddBookmark() {
    this._userState = null;
  }
  goTo(e6) {
    return this.viewModel.goTo(e6);
  }
  render() {
    return n2("div", { class: this.classes(t3.base, e3.widget, e3.panel) }, this._renderBookmarksContainer());
  }
  startAddBookmark() {
    this._userState = new i({ state: "add" }), this._focusAddFlowItem = true;
  }
  _renderNoBookmarksContainer(e6) {
    const { messages: t4, viewModel: { state: o5 } } = this;
    return e6.length || "loading" === o5 ? null : n2("div", { class: e3.empty, key: "no-bookmarks" }, n2("calcite-icon", { icon: "bookmark", scale: "l" }), n2(e4, { class: this.classes(e3.heading, t3.noBookmarksHeader), level: this.headingLevel }, t4 == null ? void 0 : t4.noBookmarksHeading), n2("p", { class: t3.noBookmarksDescription }, t4.noBookmarksDescription));
  }
  _renderEditBookmarkFlowItems() {
    const { _userState: e6 } = this, t4 = e6 == null ? void 0 : e6.editedBookmark;
    return t4 && "edit" === (e6 == null ? void 0 : e6.state) ? this._renderEditingBookmark(t4) : [];
  }
  _renderBookmarkItems(e6) {
    return e6 ? e6.toArray().map((e7) => this._renderBookmark(e7)) : [];
  }
  _handleCalciteListDragEnd(e6) {
    const { fromEl: t4, dragEl: o5, oldIndex: i2 } = e6;
    t4.insertBefore(o5, t4.children[i2]);
  }
  _renderBookmarksContainer() {
    const { viewModel: { state: e6, bookmarks: o5 }, dragEnabled: i2, messages: r2, disabled: a3, filterPlaceholder: s6, filterText: n5, visible: l2, headingLevel: d2, visibleElements: { closeButton: m, collapseButton: c, filter: u2, heading: k3, flow: h2 }, uid: p } = this, g = o5.filter(k), _ = g.length ? n2("calcite-list", { class: t3.list, dragEnabled: i2, filterEnabled: u2, filterPlaceholder: s6, filterText: n5, group: `bookmarks-${p}`, key: "bookmark-list", label: r2.widgetLabel, selectionAppearance: "border", selectionMode: "none", onCalciteListDragEnd: (e7) => this._handleCalciteListDragEnd(e7.detail), onCalciteListFilter: (e7) => {
      var _a;
      return this.filterText = ((_a = e7.target) == null ? void 0 : _a.filterText) ?? "";
    }, onCalciteListOrderChange: (e7) => this._onCalciteListOrderChange(e7.detail) }, this._renderBookmarkItems(g), u2 ? n2("div", { class: t3.filterNoResults, slot: "filter-no-results" }, n2("calcite-notice", { kind: "info", open: true, width: "full" }, n2("div", { slot: "message" }, r2.noBookmarksHeading), ";")) : null) : null, v2 = [n2("calcite-flow-item", { afterCreate: this._focusRootFlowItemNode, afterUpdate: this._focusRootFlowItemNode, bind: this, closable: m, closed: !l2, collapsible: c, disabled: a3, heading: k3 ? r2.widgetLabel : void 0, headingLevel: d2, loading: "loading" === e6, onCalciteFlowItemClose: () => this.visible = false }, this._renderNoBookmarksContainer(g), _, this._renderAddBookmarkButton()), this._renderAddingBookmark(), this._renderEditBookmarkFlowItems()];
    return l2 ? h2 ? n2("calcite-flow", { key: "root-flow" }, v2) : v2 : null;
  }
  _renderAddBookmarkButton() {
    const { messages: e6, _userState: t4, disabled: o5, viewModel: { view: i2, state: r2 }, visibleElements: { addBookmarkButton: a3 } } = this, s6 = (t4 == null ? void 0 : t4.loading) ?? false;
    return i2 && "loading" !== r2 && a3 ? n2("calcite-fab", { appearance: "outline-fill", bind: this, class: t3.addBookmarkButton, disabled: o5 || s6, icon: "plus", key: "add-bookmark-item", kind: "neutral", loading: s6, onclick: this.startAddBookmark, slot: "fab", text: e6.addBookmark, textEnabled: true, title: e6.addBookmark, type: "button" }) : null;
  }
  _renderEditContainer(e6) {
    const { messagesCommon: t4, visibleElements: { editBookmarkButton: o5 } } = this, i2 = `${t4.edit} ${this._getBookmarkTitle(e6)}`;
    return o5 ? n2("calcite-action", { appearance: "transparent", icon: "pencil", key: "edit-action", onclick: () => this._showEditBookmarkForm(e6), slot: "actions-end", text: i2, title: i2 }) : null;
  }
  _renderBookmarkImage(e6, t4) {
    var _a;
    return t4 ? n2("img", { alt: "", class: t3.bookmarkImage, key: "bookmark-image", src: (_a = e6.thumbnail) == null ? void 0 : _a.url }) : null;
  }
  _renderBookmarkTimeSwitch(e6) {
    const { messages: t4, viewModel: { view: o5 } } = this, { timeExtent: i2 } = e6;
    return (o5 == null ? void 0 : o5.timeExtent) ?? i2 ? n2("calcite-label", { layout: "inline-space-between" }, t4.includeTimeExtent, n2("calcite-switch", { checked: !!i2, onCalciteSwitchChange: (e7) => {
      this._editIncludeTimeExtent = !!e7.target.checked;
    } })) : null;
  }
  _renderEditBookmarkTimeExtent(e6) {
    return this._editIncludeTimeExtent ? this._renderBookmarkTimeExtent(e6) : null;
  }
  _getTimeExtentStrings(e6) {
    const { visibleElements: t4 } = this, { timeExtent: o5 } = e6;
    if (!o5)
      return {};
    const { start: i2, end: r2 } = o5, a3 = null != r2 && (null == i2 || i2.getTime() !== r2.getTime()), s6 = i2 ? this._formatDate(i2) : "", n5 = i2 && t4.time ? this._formatTime(i2) : "";
    if (!a3)
      return { startDate: s6, startTime: n5 };
    return { startDate: s6, startTime: n5, endDate: this._formatDate(r2), endTime: t4.time ? this._formatTime(r2) : "" };
  }
  _renderTimeExtentDescription(e6) {
    const { startDate: t4, startTime: o5, endDate: i2, endTime: r2 } = this._getTimeExtentStrings(e6);
    if (!t4)
      return "";
    const a3 = `${t4} ${o5}`;
    return i2 ? `${a3} - ${`${i2} ${r2}`}` : a3;
  }
  _renderBookmarkTimeExtent(e6, t4 = false) {
    const { messages: o5 } = this, { startDate: i2, startTime: r2, endDate: a3, endTime: s6 } = this._getTimeExtentStrings(e6), n5 = t4 ? null : n2("calcite-table-row", { slot: "table-header" }, n2("calcite-table-header", { heading: o5.startDate }), a3 ? n2("calcite-table-header", { heading: o5.endDate }) : null);
    return i2 ? n2("calcite-table", { caption: o5.timeExtent, scale: "s" }, n5, n2("calcite-table-row", null, n2("calcite-table-cell", null, i2, " ", r2 ? [n2("br", null), r2] : null), a3 ? n2("calcite-table-cell", null, a3, s6 ? [n2("br", null), s6] : null) : null)) : null;
  }
  _renderBookmarkActiveScrim(e6, t4) {
    return this.viewModel.activeBookmark === e6 && t4 ? n2("calcite-scrim", { key: "bookmark-active-scrim", loading: true }) : null;
  }
  _renderBookmarkActiveLoader(e6, t4) {
    return this.viewModel.activeBookmark !== e6 || t4 ? null : n2("calcite-loader", { class: t3.loader, inline: true, key: "bookmark-active-loader", label: this.messagesCommon.loading });
  }
  _renderBookmarkImageIcon(e6, t4) {
    return this.viewModel.activeBookmark === e6 || t4 ? null : n2("calcite-icon", { icon: "bookmark", key: "bookmark-icon", scale: "s" });
  }
  _renderBookmarkThumbnail(e6) {
    var _a;
    const t4 = this.visibleElements.thumbnail && !!((_a = e6.thumbnail) == null ? void 0 : _a.url);
    return n2("div", { class: t3.bookmarkImageContainer, slot: "content-start" }, this._renderBookmarkActiveScrim(e6, t4), this._renderBookmarkImage(e6, t4), this._renderBookmarkActiveLoader(e6, t4), this._renderBookmarkImageIcon(e6, t4));
  }
  _focusSelectedDragEl(e6, t4) {
    this._selectedDragBookmarkUid === t4.uid && requestAnimationFrame(() => e6 == null ? void 0 : e6.setFocus());
  }
  _handleCalciteListItemDragHandleChange(e6, t4) {
    e6.stopPropagation();
    const o5 = e6.target.dragSelected;
    this._selectedDragBookmarkUid = o5 ? t4.uid : null;
  }
  _renderBookmark(e6) {
    return n2("calcite-list-item", { afterCreate: (t4) => this._focusSelectedDragEl(t4, e6), afterUpdate: (t4) => this._focusSelectedDragEl(t4, e6), class: this.classes({ [t3.dragEnabled]: this.dragEnabled }), description: this._renderTimeExtentDescription(e6), dragSelected: e6.uid === this._selectedDragBookmarkUid, key: e6.uid, label: this._getBookmarkTitle(e6), value: e6.uid, onCalciteListItemDragHandleChange: (t4) => this._handleCalciteListItemDragHandleChange(t4, e6), onCalciteListItemSelect: () => this._goToBookmark(e6) }, this._renderBookmarkThumbnail(e6), this._renderBookmarkContent(e6), this._renderEditContainer(e6));
  }
  _renderBookmarkContent(e6) {
    return n2("div", { class: t3.bookmarkContent, slot: "content" }, n2("span", { class: t3.bookmarkContentLabel }, this._getBookmarkTitle(e6)), this._renderBookmarkTimeExtent(e6, true));
  }
  _renderEditingBookmarkName(e6) {
    const { messages: t4, _userState: o5 } = this, i2 = "name-required" === (o5 == null ? void 0 : o5.validationState);
    return n2("calcite-label", null, t4.title, n2("calcite-input", { afterCreate: this._storeEditInput, bind: this, class: t3.editBookmarkInput, name: "bookmark-name", placeholder: t4.titlePlaceholder, required: true, type: "text", value: e6.name }), i2 ? n2("calcite-input-message", { icon: "exclamation-mark-triangle", status: "invalid" }, t4.invalidTitle) : null);
  }
  _renderEditingBookmarkActions() {
    const { messagesCommon: e6, _userState: t4 } = this, o5 = t4 == null ? void 0 : t4.bookmark;
    return [n2("calcite-button", { appearance: "transparent", kind: "danger", onclick: () => this._deleteBookmark(o5), slot: "footer", type: "button", width: "full" }, e6.delete), n2("calcite-button", { appearance: "outline", bind: this, onclick: this._closeEditBookmarkForm, slot: "footer", type: "button", width: "full" }, e6.cancel), n2("calcite-button", { slot: "footer", type: "submit", width: "full" }, e6.save)];
  }
  _handleUrlEditInputChange() {
    var _a, _b;
    const { _userState: e6, _urlEditInputNode: t4 } = this, o5 = t4 == null ? void 0 : t4.value;
    if (!(e6 == null ? void 0 : e6.editedBookmark) || !o5)
      return;
    e6.validationState = void 0, ((_a = e6.editedBookmark.thumbnail) == null ? void 0 : _a.isDataURI) && (e6.screenshotUrl = (_b = e6.editedBookmark.thumbnail) == null ? void 0 : _b.url);
    const i2 = new u({ url: o5 });
    i2.isSecureUrl && (e6.customUrl = o5, e6.editedBookmark.thumbnail = i2);
  }
  _renderEditingTimeExtent(e6) {
    const { capabilities: t4, view: o5 } = this.viewModel, { timeExtent: i2 } = e6;
    return t4.time && ((o5 == null ? void 0 : o5.timeExtent) ?? i2) ? n2("div", { key: "edit-bookmark-time-container" }, this._renderBookmarkTimeSwitch(e6), this._renderEditBookmarkTimeExtent(e6)) : null;
  }
  _renderEditingBookmarkImage(e6) {
    var _a, _b;
    const { _userState: t4 } = this, o5 = t4 == null ? void 0 : t4.thumbnailState, i2 = ((_a = e6.thumbnail) == null ? void 0 : _a.isSecureUrl) ? "url" === o5 : ((_b = e6.thumbnail) == null ? void 0 : _b.isDataURI) ? "screenshot" === o5 : null;
    if (i2)
      return this._renderBookmarkImage(e6, i2);
  }
  _renderEditingThumbnail(e6) {
    const { _userState: t4, visibleElements: o5 } = this, i2 = t4 == null ? void 0 : t4.thumbnailState;
    return o5.thumbnail && "none" !== i2 ? n2("div", { class: t3.authoringImageContainer }, this._renderEditingBookmarkImage(e6)) : null;
  }
  _renderUpdateThumbnailButton() {
    const { visibleElements: e6, messages: t4, _userState: o5 } = this, i2 = o5 == null ? void 0 : o5.thumbnailState;
    return e6.thumbnail && "screenshot" === i2 ? n2("calcite-button", { appearance: "outline", class: t3.authoringRefreshThumbnailButton, iconStart: "refresh", key: "update-thumbnail", kind: "neutral", onclick: () => {
      this._updateThumbnail();
    }, width: "half" }, t4.updateThumbnail) : null;
  }
  _renderEditingBookmarkUrlInput(e6) {
    var _a, _b;
    const { messages: t4, _userState: o5 } = this, i2 = (_a = e6.thumbnail) == null ? void 0 : _a.url, r2 = ((_b = e6.thumbnail) == null ? void 0 : _b.isSecureUrl) ? i2 : void 0, a3 = i2 && "absolute-url-required" === (o5 == null ? void 0 : o5.validationState), s6 = o5 == null ? void 0 : o5.thumbnailState;
    return "url" === s6 ? n2("calcite-label", { key: "thumbnail-url-input" }, n2("calcite-input", { afterCreate: this._storeUrlEditInput, bind: this, name: "bookmark-thumbnail-url", pattern: t2, placeholder: t4 ? `https://<${t4.imageUrlPlaceholder}>` : void 0, required: true, title: t4.imageUrlTooltip, type: "text", value: r2, onCalciteInputChange: this._handleUrlEditInputChange, onCalciteInputInput: this._handleUrlEditInputChange }), a3 ? n2("calcite-input-message", { icon: "exclamation-mark-triangle", status: "invalid" }, t4.invalidImageUrl) : null) : null;
  }
  _renderThumbnailSelector() {
    const { visibleElements: e6, messages: t4, _userState: o5 } = this, i2 = o5 == null ? void 0 : o5.thumbnailState;
    return e6.thumbnail ? n2("calcite-label", { key: "thumbnail-chip-group" }, t4.thumbnail, n2("calcite-chip-group", { label: t4.thumbnail, selectionMode: "single-persist", onCalciteChipGroupSelect: (e7) => this._handleThumbnailTypeSelect(e7.target.selectedItems[0].value) }, n2("calcite-chip", { selected: "screenshot" === i2, value: "screenshot" }, t4.screenshot), n2("calcite-chip", { selected: "url" === i2, value: "url" }, t4.url), n2("calcite-chip", { selected: "none" === i2, value: "none" }, t4.none))) : null;
  }
  _renderEditingBookmark(e6) {
    const { disabled: t4, messagesCommon: o5, headingLevel: i2 } = this;
    return e6 ? n2("form", { bind: this, class: t3.form, disabled: this.disabled, onsubmit: this._editBookmarkSubmit }, n2("calcite-flow-item", { afterCreate: this._focusEditFlowItemNode, afterUpdate: this._focusEditFlowItemNode, bind: this, disabled: t4, heading: o5.edit, headingLevel: i2, key: "edit-bookmark-form", onCalciteFlowItemBack: (e7) => {
      e7.preventDefault(), this._closeEditBookmarkForm();
    } }, n2("div", { class: t3.formContent }, n2("div", { class: t3.authoring }, this._renderEditingBookmarkName(e6), this._renderThumbnailSelector(), this._renderEditingThumbnail(e6), this._renderEditingBookmarkUrlInput(e6), this._renderUpdateThumbnailButton(), this._renderEditingTimeExtent(e6))), this._renderEditingBookmarkActions())) : null;
  }
  _renderAddingBookmarkName() {
    const { _userState: e6, messages: t4 } = this, o5 = "name-required" === (e6 == null ? void 0 : e6.validationState);
    return n2("calcite-label", null, t4.title, n2("calcite-input", { afterCreate: this._storeAddInput, bind: this, class: t3.addBookmarkInput, name: "bookmark-name", placeholder: t4.titlePlaceholder, required: true, type: "text", value: "" }), o5 ? n2("calcite-input-message", { icon: "exclamation-mark-triangle", status: "invalid" }, t4.invalidTitle) : null);
  }
  _renderAddingBookmarkActions() {
    const { messagesCommon: e6 } = this;
    return [n2("calcite-button", { appearance: "outline", bind: this, onclick: this._endAddBookmark, slot: "footer", type: "button", width: "half" }, e6.cancel), n2("calcite-button", { slot: "footer", type: "submit", width: "half" }, e6.add)];
  }
  _renderAddingBookmark() {
    const { disabled: e6, messages: t4, headingLevel: o5, _userState: i2 } = this;
    return "add" === (i2 == null ? void 0 : i2.state) ? n2("form", { bind: this, class: t3.form, disabled: e6, onsubmit: this._addBookmarkSubmitClick }, n2("calcite-flow-item", { afterCreate: this._focusAddFlowItemNode, afterUpdate: this._focusAddFlowItemNode, bind: this, disabled: e6, heading: t4.addBookmark, headingLevel: o5, key: "add-bookmark-form", onCalciteFlowItemBack: (e7) => {
      e7.preventDefault(), this._endAddBookmark();
    } }, n2("div", { class: t3.formContent }, this._renderAddingBookmarkName()), this._renderAddingBookmarkActions())) : null;
  }
  _getBookmarkTitle(e6) {
    return (e6 == null ? void 0 : e6.name) || this.messagesCommon.untitled;
  }
  _formatDate(e6) {
    var _a;
    return e6 ? j(e6, { ...E("short-date"), timeZone: ((_a = this.viewModel.view) == null ? void 0 : _a.timeZone) ?? o3 }) : "";
  }
  _formatTime(e6) {
    var _a;
    return e6 ? j(e6, { ...E("long-time"), timeZone: ((_a = this.viewModel.view) == null ? void 0 : _a.timeZone) ?? o3 }) : "";
  }
  _endAddBookmark() {
    this.endAddBookmark(), this._focusRootFlowItem = true;
  }
  _showEditBookmarkForm(e6) {
    e6 && (this._editIncludeTimeExtent = !!e6.timeExtent, this._userState = new i({ bookmark: e6, state: "edit" }), this._focusEditFlowItem = true, this.viewModel.goTo(e6));
  }
  async _createNewScreenshotUrl() {
    var _a;
    const e6 = await this.viewModel.createBookmark();
    return ((_a = e6.thumbnail) == null ? void 0 : _a.url) ?? null;
  }
  _storeCurrentUrl() {
    var _a, _b, _c, _d, _e, _f;
    const { _userState: e6 } = this, t4 = (_b = (_a = e6 == null ? void 0 : e6.editedBookmark) == null ? void 0 : _a.thumbnail) == null ? void 0 : _b.url;
    t4 && (((_d = (_c = e6 == null ? void 0 : e6.editedBookmark) == null ? void 0 : _c.thumbnail) == null ? void 0 : _d.isSecureUrl) ? e6.customUrl = t4 : ((_f = (_e = e6 == null ? void 0 : e6.editedBookmark) == null ? void 0 : _e.thumbnail) == null ? void 0 : _f.isDataURI) && (e6.screenshotUrl = t4));
  }
  async _handleThumbnailTypeSelect(e6) {
    const { _userState: t4 } = this;
    if (!t4)
      return;
    const { screenshotUrl: o5, customUrl: i2, editedBookmark: r2 } = t4, a3 = "screenshot" === e6 ? o5 ?? await this._createNewScreenshotUrl() : "url" === e6 && i2 ? i2 : null;
    this._storeCurrentUrl(), r2 && a3 && (r2.thumbnail = new u({ url: a3 })), t4.validationState = void 0, t4.thumbnailState = e6;
  }
  _closeEditBookmarkForm() {
    this._userState = null, this._focusRootFlowItem = true;
  }
  _addBookmarkSubmitClick(e6) {
    e6.preventDefault(), this._addBookmarkSubmit();
  }
  async _addBookmarkSubmit() {
    const { _addInputNode: e6, _userState: t4, viewModel: o5, viewModel: { bookmarks: i2 } } = this;
    if (!t4)
      return;
    const r2 = e6 ? e6.value.trim() : null;
    if (!r2)
      return void (t4.validationState = "name-required");
    t4.loading = true;
    const a3 = await o5.createBookmark();
    a3.name = r2, i2.add(a3), this._endAddBookmark();
  }
  async _editBookmarkAndClose(e6, t4) {
    const { viewModel: o5, viewModel: { defaultEditOptions: i2 } } = this;
    await o5.editBookmark(e6, { ...i2, ...t4 }), this._closeEditBookmarkForm();
  }
  _editBookmarkSubmit(e6) {
    e6.preventDefault();
    const { _editInputNode: t4, _userState: o5, _editIncludeTimeExtent: i2, _urlEditInputNode: r2 } = this;
    if (!(o5 == null ? void 0 : o5.bookmark) || !o5.editedBookmark)
      return;
    o5.validationState = void 0, o5.customUrl = void 0, o5.screenshotUrl = void 0;
    const a3 = t4 && t4.value.trim();
    if (!a3)
      return void (o5.validationState = "name-required");
    o5.bookmark.name = a3, o5.bookmark.thumbnail = o5.editedBookmark.thumbnail, i2 || (o5.bookmark.timeExtent = null);
    const s6 = o5.thumbnailState;
    if ("url" === s6 && r2) {
      const e7 = r2.value, t5 = new u({ url: e7 });
      if (!t5.isSecureUrl)
        return void (o5.validationState = "absolute-url-required");
      o5.bookmark.thumbnail = t5;
    } else
      "none" === s6 && (o5.bookmark.thumbnail = null);
    this._editBookmarkAndClose(o5.bookmark, { takeScreenshot: false, captureTimeExtent: i2 });
  }
  _storeEditInput(e6) {
    this._editInputNode = e6;
  }
  _storeAddInput(e6) {
    this._addInputNode = e6;
  }
  _storeUrlEditInput(e6) {
    this._urlEditInputNode = e6;
  }
  _deleteBookmark(e6) {
    this._closeEditBookmarkForm(), e6 && this.viewModel.bookmarks.remove(e6);
  }
  _goToBookmark(e6) {
    e6 && (this.endAddBookmark(), this.viewModel.goTo(e6));
  }
  async _updateThumbnail() {
    const { _userState: e6, viewModel: t4 } = this;
    e6 && (e6.validationState = void 0, await t4.editBookmark(e6.editedBookmark, { takeScreenshot: true, captureViewpoint: false, captureRotation: false, captureScale: false, captureTimeExtent: false }));
  }
  _focusRootFlowItemNode(e6) {
    this._focusRootFlowItem && (this._focusRootFlowItem = false, requestAnimationFrame(() => e6 == null ? void 0 : e6.setFocus()));
  }
  _focusEditFlowItemNode(e6) {
    this._focusEditFlowItem && (this._focusEditFlowItem = false, requestAnimationFrame(() => e6 == null ? void 0 : e6.setFocus()));
  }
  _focusAddFlowItemNode(e6) {
    this._focusAddFlowItem && (this._focusAddFlowItem = false, requestAnimationFrame(() => e6 == null ? void 0 : e6.setFocus()));
  }
};
e([y()], w2.prototype, "_editIncludeTimeExtent", void 0), e([y({ type: i })], w2.prototype, "_userState", void 0), e([y()], w2.prototype, "_focusRootFlowItem", void 0), e([y()], w2.prototype, "_focusAddFlowItem", void 0), e([y()], w2.prototype, "_focusEditFlowItem", void 0), e([y()], w2.prototype, "defaultCreateOptions", null), e([y()], w2.prototype, "defaultEditOptions", null), e([y()], w2.prototype, "bookmarks", null), e([y()], w2.prototype, "disabled", void 0), e([y()], w2.prototype, "dragEnabled", void 0), e([y()], w2.prototype, "editingEnabled", null), e([y()], w2.prototype, "filterPlaceholder", void 0), e([y()], w2.prototype, "filterText", void 0), e([y()], w2.prototype, "headingLevel", void 0), e([y()], w2.prototype, "goToOverride", null), e([y()], w2.prototype, "icon", null), e([y()], w2.prototype, "label", null), e([y(), e2("esri/widgets/Bookmarks/t9n/Bookmarks")], w2.prototype, "messages", void 0), e([y(), e2("esri/t9n/common")], w2.prototype, "messagesCommon", void 0), e([y()], w2.prototype, "uiStrings", void 0), e([y()], w2.prototype, "view", null), e([y({ type: v }), e5(["select-bookmark", "bookmark-edit", "bookmark-select"])], w2.prototype, "viewModel", void 0), e([y({ type: s5, nonNullable: true })], w2.prototype, "visibleElements", void 0), e([y()], w2.prototype, "endAddBookmark", null), e([y()], w2.prototype, "startAddBookmark", null), w2 = e([a("esri.widgets.Bookmarks")], w2);
var I = w2;
export {
  I as default
};
//# sourceMappingURL=Bookmarks-3IZWEEQM.js.map
