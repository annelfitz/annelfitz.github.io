import {
  onDisconnectedHelper
} from "./chunk-K4WPYNMJ.js";
import {
  importCoreReactiveUtils,
  newWidgetsFloorFilter
} from "./chunk-YXW2SI4L.js";
import {
  addHandles,
  checkForView,
  referenceElementHelper
} from "./chunk-UXZQL3ZN.js";
import {
  createEvent,
  getElement,
  h,
  registerInstance
} from "./chunk-KMIMZXFW.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/map-components/dist/esm/arcgis-floor-filter.entry.js
var floorFilterCss = "";
var ArcgisFloorFilter = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.arcgisFloorFilterReady = createEvent(this, "arcgisFloorFilterReady", 7);
    this._watchHandles = [];
    this.referenceElement = void 0;
    this.facility = void 0;
    this.level = void 0;
    this.longNames = true;
    this.site = void 0;
    this.position = "bottom-left";
    this.view = void 0;
    this.widget = void 0;
  }
  referenceElementWatcher(value) {
    void referenceElementHelper(this, value);
  }
  facilityWatcher(value) {
    if (this.widget) {
      this.widget.facility = value;
    }
  }
  levelWatcher(value) {
    if (this.widget) {
      this.widget.level = value;
    }
  }
  longNamesWatcher(value) {
    if (value !== void 0 && this.widget) {
      this.widget.longNames = value;
    }
  }
  siteWatcher(value) {
    if (this.widget) {
      this.widget.site = value;
    }
  }
  positionWatcher(value) {
    if (value !== void 0 && this.widget) {
      this.view.ui.move(this.childElem, value);
    }
  }
  viewWatcher(value) {
    if (value !== void 0 && this.widget) {
      this.widget.view = value;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Methods
  //
  //--------------------------------------------------------------------------
  async updateWebDocument(webmap) {
    var _a;
    (_a = this.widget) == null ? void 0 : _a.updateWebDocument(webmap);
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  async componentDidLoad() {
    const params = this._createParams();
    const widget = await newWidgetsFloorFilter(params);
    this.widget = widget;
    await this._addWatchers();
    this._addContainer();
    this.arcgisFloorFilterReady.emit();
    checkForView(this);
  }
  disconnectedCallback() {
    onDisconnectedHelper(this);
  }
  render() {
    return h("div", { ref: (el) => this.childElem = el });
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  _addContainer() {
    this.widget.container = this.childElem;
  }
  async _addWatchers() {
    const { watch } = await importCoreReactiveUtils();
    addHandles(this, [
      watch(() => this.widget.facility, (value) => this.facility = value),
      watch(() => this.widget.level, (value) => this.level = value),
      watch(() => this.widget.site, (value) => this.site = value)
    ]);
  }
  _createParams() {
    const params = {};
    if (this.facility) {
      params.facility = this.facility;
    }
    if (this.level) {
      params.level = this.level;
    }
    if (this.longNames !== void 0) {
      params.longNames = this.longNames;
    }
    if (this.site) {
      params.site = this.site;
    }
    if (this.view) {
      params.view = this.view;
    }
    return params;
  }
  get el() {
    return getElement(this);
  }
  static get watchers() {
    return {
      "referenceElement": ["referenceElementWatcher"],
      "facility": ["facilityWatcher"],
      "level": ["levelWatcher"],
      "longNames": ["longNamesWatcher"],
      "site": ["siteWatcher"],
      "position": ["positionWatcher"],
      "view": ["viewWatcher"]
    };
  }
};
ArcgisFloorFilter.style = floorFilterCss;
export {
  ArcgisFloorFilter as arcgis_floor_filter
};
/*! Bundled license information:

@arcgis/map-components/dist/esm/arcgis-floor-filter.entry.js:
  (*!
   * All material copyright Esri, All Rights Reserved, unless otherwise specified.
   * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
   * v4.30.0-next.13
   *)
*/
//# sourceMappingURL=arcgis-floor-filter.entry-BF2VFQCC.js.map
