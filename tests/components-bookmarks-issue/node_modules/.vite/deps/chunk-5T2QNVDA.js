import {
  o
} from "./chunk-PCKG3UTS.js";
import {
  f as f2,
  i
} from "./chunk-I2X6UR6L.js";
import {
  p
} from "./chunk-J7AMTUNG.js";
import {
  d2
} from "./chunk-UWQ3OYA5.js";
import {
  U
} from "./chunk-SAYWXQVM.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a,
  d
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";

// node_modules/@arcgis/core/rest/support/ProjectParameters.js
var a2 = class extends f {
  constructor(r) {
    super(r), this.geometries = [], this.outSpatialReference = null, this.transformation = null, this.transformForward = null;
  }
  toJSON() {
    const r = this.geometries.map((r2) => r2.toJSON()), o2 = this.geometries[0], t = {};
    return t.outSR = d2(this.outSpatialReference), t.inSR = d2(o2.spatialReference), t.geometries = JSON.stringify({ geometryType: p(o2), geometries: r }), this.transformation && (t.transformation = this.transformation.wkid || JSON.stringify(this.transformation)), null != this.transformForward && (t.transformForward = this.transformForward), t;
  }
};
e([y()], a2.prototype, "geometries", void 0), e([y({ json: { read: { source: "outSR" } } })], a2.prototype, "outSpatialReference", void 0), e([y()], a2.prototype, "transformation", void 0), e([y()], a2.prototype, "transformForward", void 0), a2 = e([a("esri.rest.support.ProjectParameters")], a2);
var p2 = a2;

// node_modules/@arcgis/core/rest/geometryService/project.js
var i2 = d(p2);
async function n(o2, m, n2) {
  m = i2(m);
  const u = f2(o2), c = { ...u.query, f: "json", ...m.toJSON() }, j = m.outSpatialReference, a3 = p(m.geometries[0]), f3 = i(c, n2);
  return U(u.path + "/project", f3).then(({ data: { geometries: r } }) => o(r, a3, j));
}

export {
  p2 as p,
  n
};
//# sourceMappingURL=chunk-5T2QNVDA.js.map
