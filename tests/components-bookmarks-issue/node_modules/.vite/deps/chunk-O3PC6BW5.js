import {
  e as e3
} from "./chunk-EAAEPSBY.js";
import {
  D,
  e2,
  r
} from "./chunk-RGCWZ2KZ.js";
import {
  n
} from "./chunk-5VMSFOCB.js";
import {
  p
} from "./chunk-Z4Y53NDM.js";
import {
  S,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";

// node_modules/@arcgis/core/widgets/NavigationToggle/css.js
var o = "esri-navigation-toggle";
var t = { base: o, isLayoutHorizontal: `${o}--horizontal` };

// node_modules/@arcgis/core/widgets/NavigationToggle/NavigationToggleViewModel.js
var a2 = class extends S {
  constructor(t2) {
    super(t2), this.navigationMode = "pan", this.view = null;
  }
  initialize() {
    this.addHandles(p(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.inputManager;
    }, () => this._setNavigationMode()));
  }
  destroy() {
    this.view = null;
  }
  get state() {
    var _a, _b;
    return ((_a = this.view) == null ? void 0 : _a.ready) && "3d" === ((_b = this.view) == null ? void 0 : _b.type) ? "ready" : "disabled";
  }
  toggle() {
    "disabled" !== this.state && (this.navigationMode = "pan" !== this.navigationMode ? "pan" : "rotate", this._setNavigationMode());
  }
  _setNavigationMode() {
    var _a;
    const t2 = (_a = this.view) == null ? void 0 : _a.inputManager;
    t2 && (t2.primaryDragAction = "pan" === this.navigationMode ? "pan" : "rotate");
  }
};
e([y({ readOnly: true })], a2.prototype, "state", null), e([y()], a2.prototype, "navigationMode", void 0), e([y()], a2.prototype, "view", void 0), a2 = e([a("esri.widgets.NavigationToggle.NavigationToggleViewModel")], a2);
var r2 = a2;

// node_modules/@arcgis/core/widgets/NavigationToggle.js
var c = class extends D {
  constructor(t2, e4) {
    super(t2, e4), this.messages = null, this.viewModel = new r2(), this.toggle = () => this.viewModel.toggle(), this._panButton = null, this._rotateButton = null, this._toggle = () => {
      var _a;
      const t3 = "pan" === ((_a = this.viewModel) == null ? void 0 : _a.navigationMode) ? this._rotateButton : this._panButton;
      t3 == null ? void 0 : t3.setFocus(), this.toggle();
    };
  }
  loadDependencies() {
    return r({ button: () => import("./calcite-button-V4T5NPWY.js") });
  }
  get icon() {
    return "move";
  }
  set icon(t2) {
    this._overrideIfSome("icon", t2);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(t2) {
    this._overrideIfSome("label", t2);
  }
  set layout(t2) {
    "horizontal" !== t2 && (t2 = "vertical"), this._set("layout", t2);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(t2) {
    this.viewModel.view = t2;
  }
  render() {
    var _a, _b;
    const t2 = "disabled" === ((_a = this.viewModel) == null ? void 0 : _a.state), e4 = "pan" === ((_b = this.viewModel) == null ? void 0 : _b.navigationMode), o2 = this.messages.toggle;
    return n("div", { class: this.classes(t.base, e3.widget, { [t.isLayoutHorizontal]: "horizontal" === this.layout }) }, n("calcite-button", { afterCreate: (t3) => {
      this._panButton = t3;
    }, appearance: e4 ? "outline-fill" : "solid", class: e3.widgetButton, disabled: t2, iconStart: "move", kind: "neutral", label: o2, onclick: this._toggle, tabIndex: e4 ? void 0 : -1, title: o2 }), n("calcite-button", { afterCreate: (t3) => {
      this._rotateButton = t3;
    }, appearance: e4 ? "solid" : "outline-fill", class: e3.widgetButton, disabled: t2, iconStart: "rotate", kind: "neutral", label: o2, onclick: this._toggle, tabIndex: e4 ? -1 : void 0, title: o2 }));
  }
};
e([y()], c.prototype, "icon", null), e([y()], c.prototype, "label", null), e([y({ value: "vertical" })], c.prototype, "layout", null), e([y(), e2("esri/widgets/NavigationToggle/t9n/NavigationToggle")], c.prototype, "messages", void 0), e([y()], c.prototype, "view", null), e([y({ type: r2 })], c.prototype, "viewModel", void 0), c = e([a("esri.widgets.NavigationToggle")], c);
var g = c;

export {
  g
};
//# sourceMappingURL=chunk-O3PC6BW5.js.map
