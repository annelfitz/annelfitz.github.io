import {
  b as b2
} from "./chunk-UACJ4BQN.js";
import "./chunk-ZZWM6CET.js";
import {
  h
} from "./chunk-CEFCTXUM.js";
import "./chunk-5N67JZXF.js";
import "./chunk-UC6QLXCR.js";
import "./chunk-PLT24NZO.js";
import "./chunk-WS5XOTML.js";
import "./chunk-ID25T22U.js";
import "./chunk-5SYJEI74.js";
import "./chunk-OOISODT4.js";
import "./chunk-YWPIIZFL.js";
import "./chunk-LARO5FBS.js";
import "./chunk-QFYJUFUK.js";
import "./chunk-V7IF2KNH.js";
import "./chunk-AZYURM7A.js";
import "./chunk-HBBLDSW6.js";
import "./chunk-YYI7TRI3.js";
import "./chunk-RQW2N53A.js";
import "./chunk-LHVWC4RW.js";
import "./chunk-GN2OLKIL.js";
import "./chunk-LMCIQOBX.js";
import "./chunk-4VVENLLF.js";
import "./chunk-VUHMQQ6M.js";
import "./chunk-6GQQIJM7.js";
import "./chunk-PAH4PVZY.js";
import "./chunk-5T7MASZO.js";
import "./chunk-5WKN6K5Z.js";
import "./chunk-WCBHO6BH.js";
import "./chunk-V7NVRGBC.js";
import "./chunk-KCZGCTYM.js";
import "./chunk-3YZBQBZ5.js";
import "./chunk-RFBA77K3.js";
import "./chunk-46T3D2EU.js";
import "./chunk-RYF27IO3.js";
import "./chunk-G3J4F5JD.js";
import "./chunk-OFEQM7IB.js";
import "./chunk-2GT6KC2O.js";
import "./chunk-R3RV65RE.js";
import "./chunk-5XOEX7AO.js";
import "./chunk-5MKTGTC4.js";
import "./chunk-7UDCRD5C.js";
import "./chunk-B3GKRGWX.js";
import "./chunk-FN7LLNVA.js";
import "./chunk-BR3PF5YD.js";
import "./chunk-NMKWX7AG.js";
import "./chunk-6OG4R2CR.js";
import "./chunk-XCK6RPVT.js";
import "./chunk-REXEABYB.js";
import "./chunk-VIRGWB3Z.js";
import "./chunk-QCUK7T7Y.js";
import "./chunk-2NDIVJST.js";
import "./chunk-SPYHZ6ZW.js";
import "./chunk-637XZX4A.js";
import {
  C
} from "./chunk-PMFQ2A2V.js";
import "./chunk-MBLWM4C2.js";
import "./chunk-HHAESKQ6.js";
import "./chunk-5INQRMFY.js";
import "./chunk-XP3ABGGF.js";
import "./chunk-TACIE3AK.js";
import "./chunk-6LT23NJG.js";
import "./chunk-4FXZDEEP.js";
import "./chunk-KYKKN5I4.js";
import "./chunk-PWQTGVPO.js";
import "./chunk-4MJOJUFR.js";
import "./chunk-F7X3QPMY.js";
import "./chunk-CMLG62TA.js";
import {
  n as n2
} from "./chunk-SPU25K6A.js";
import "./chunk-P257AUOX.js";
import {
  r as r2
} from "./chunk-TUZDROEC.js";
import {
  u as u2
} from "./chunk-NGAYW4TW.js";
import "./chunk-BEXFYHUM.js";
import "./chunk-MDGE56IH.js";
import "./chunk-I6RS7YIS.js";
import "./chunk-M5UX4IRZ.js";
import "./chunk-BHOYA5LV.js";
import "./chunk-5T2QNVDA.js";
import "./chunk-SI6AVZBW.js";
import "./chunk-I7LDU4W6.js";
import "./chunk-SCRCLNT5.js";
import "./chunk-NT7TKMWH.js";
import "./chunk-BQGPMKNK.js";
import "./chunk-KWLN46JY.js";
import "./chunk-7KNPDPFB.js";
import "./chunk-M6P775BS.js";
import "./chunk-J5F4VILS.js";
import "./chunk-KSBIR2KG.js";
import "./chunk-XVQGALI7.js";
import "./chunk-XFQIXBHG.js";
import "./chunk-MVSN2HAN.js";
import "./chunk-7A5N7G2Z.js";
import "./chunk-B4ZPBUH4.js";
import "./chunk-HHTLQ7O6.js";
import "./chunk-FIHLU3LF.js";
import "./chunk-PZEIVZJB.js";
import "./chunk-DXK65EP4.js";
import "./chunk-H6MCGW3O.js";
import "./chunk-OM7WUMCL.js";
import "./chunk-J54I3TB7.js";
import "./chunk-MDXZIVBP.js";
import "./chunk-7W5MWPC6.js";
import "./chunk-OE52KVBM.js";
import "./chunk-L577YNYZ.js";
import "./chunk-GL5TSVQL.js";
import "./chunk-FD7NY4JS.js";
import "./chunk-ZQTY6DQZ.js";
import "./chunk-ITCKUEVD.js";
import "./chunk-TYYN3C37.js";
import "./chunk-OBABKQ6S.js";
import "./chunk-4GGEQMYI.js";
import "./chunk-A47N2JLN.js";
import "./chunk-GQP7H7SM.js";
import "./chunk-ZPC74XHC.js";
import "./chunk-IVGJRGD2.js";
import "./chunk-JA2AO4PC.js";
import "./chunk-MTLWPXQD.js";
import "./chunk-ZEMG7GKC.js";
import "./chunk-ECIXBYOQ.js";
import "./chunk-5MQ4HAUX.js";
import "./chunk-XIWETS2Q.js";
import "./chunk-FOCTPJDR.js";
import "./chunk-2DATALUO.js";
import "./chunk-QFKFOAJ6.js";
import "./chunk-LOPMLCHC.js";
import "./chunk-JIR2YP6A.js";
import "./chunk-LANUNBDP.js";
import "./chunk-JBF6CULO.js";
import "./chunk-DRCNNCTI.js";
import "./chunk-MKOOEINB.js";
import "./chunk-JKOHBDRD.js";
import "./chunk-MDSRD3WV.js";
import "./chunk-3DFMDDMO.js";
import "./chunk-4BCSYJOQ.js";
import "./chunk-GMUCR2DJ.js";
import "./chunk-HBRJJENW.js";
import "./chunk-VHY5K2VE.js";
import "./chunk-6ENXMQPD.js";
import "./chunk-FV43HSGW.js";
import "./chunk-ZR7OV2EH.js";
import "./chunk-U76EZJUZ.js";
import "./chunk-MEEG7XMI.js";
import "./chunk-LJULTBAY.js";
import "./chunk-FD4DXBZA.js";
import "./chunk-54XXLVAD.js";
import "./chunk-KO7QNSNZ.js";
import "./chunk-ZFR4QMZ5.js";
import "./chunk-R2MAAYED.js";
import "./chunk-B7M5G3J5.js";
import "./chunk-7QHIE4SQ.js";
import "./chunk-6MGK5WBT.js";
import "./chunk-HSOVRETF.js";
import "./chunk-CPZW2LMK.js";
import "./chunk-QR7J3YDY.js";
import "./chunk-GO2OGJDG.js";
import "./chunk-UYMREM3D.js";
import {
  o as o2
} from "./chunk-4NON4JA7.js";
import "./chunk-QWREIIJ5.js";
import "./chunk-IJD65EMQ.js";
import "./chunk-4YGBWYMD.js";
import "./chunk-ZPU7GNG4.js";
import "./chunk-TNR6E67I.js";
import "./chunk-7O3VD45U.js";
import "./chunk-QREUCRQ4.js";
import "./chunk-YK3UMVCY.js";
import "./chunk-GB4RVOXH.js";
import "./chunk-JTUYA5FE.js";
import "./chunk-UNTQATE2.js";
import "./chunk-5YY6NZNY.js";
import "./chunk-5IT6RVBX.js";
import "./chunk-MTQHYT7Y.js";
import "./chunk-JCP47SOM.js";
import "./chunk-CXCB57TE.js";
import "./chunk-IWO6JXL2.js";
import "./chunk-AVR3LWTZ.js";
import {
  r
} from "./chunk-BO2EKMB5.js";
import "./chunk-YUWVLORR.js";
import "./chunk-7MYYCSEB.js";
import "./chunk-ESK2YRQM.js";
import "./chunk-3GY64OYE.js";
import "./chunk-QIEXJLRX.js";
import "./chunk-UNTPHF5R.js";
import "./chunk-YJFPDMSR.js";
import "./chunk-FFG7BDAP.js";
import "./chunk-I4SHZ6P5.js";
import "./chunk-PGOAFABD.js";
import "./chunk-63NZBHDP.js";
import "./chunk-BNDDKY53.js";
import "./chunk-BECEVYQR.js";
import "./chunk-S243OWEZ.js";
import "./chunk-QYDOVVH7.js";
import "./chunk-YSXT2SWC.js";
import "./chunk-DGRFM5OL.js";
import "./chunk-AOAT6HYL.js";
import "./chunk-YH3SFFF7.js";
import "./chunk-JBU54P54.js";
import "./chunk-UQEUYEWU.js";
import "./chunk-5LIYYE75.js";
import "./chunk-IWZSAF74.js";
import "./chunk-FMS3CZY7.js";
import "./chunk-F2EHRKUX.js";
import "./chunk-UWZ4CRJK.js";
import "./chunk-2636VFVY.js";
import "./chunk-252ISA6Z.js";
import "./chunk-TLTAGTBA.js";
import "./chunk-2QPP5AGU.js";
import "./chunk-2C26DRKK.js";
import "./chunk-M4RFJU4F.js";
import "./chunk-WVKWBQ7C.js";
import "./chunk-RK2U53CD.js";
import "./chunk-YPY24RRU.js";
import "./chunk-O7RKI2QW.js";
import "./chunk-BMB27ANS.js";
import "./chunk-3FOBZIUS.js";
import "./chunk-VVAVEXL2.js";
import "./chunk-BKBB7AOV.js";
import "./chunk-H7T5AB2S.js";
import "./chunk-HXYRQKMI.js";
import "./chunk-WKVHVZW2.js";
import "./chunk-DH7BG2VH.js";
import "./chunk-KSZESDGM.js";
import "./chunk-CHJMCUAV.js";
import "./chunk-5P74D2TG.js";
import "./chunk-33LWZO2E.js";
import "./chunk-YT66FIGM.js";
import "./chunk-VIKID44H.js";
import "./chunk-3IDXRFXE.js";
import "./chunk-TLU6YG3S.js";
import "./chunk-RLZYC2LS.js";
import "./chunk-3RIV3ECV.js";
import "./chunk-WEER6QME.js";
import "./chunk-IYU3Q2BA.js";
import "./chunk-L52HB3KV.js";
import "./chunk-TXLJQAAN.js";
import "./chunk-XJICXW6N.js";
import "./chunk-YF5E2R37.js";
import "./chunk-R4SGP2EA.js";
import "./chunk-IRL6OOVK.js";
import "./chunk-3AIILHI5.js";
import "./chunk-QJRGTKPN.js";
import "./chunk-VIH3KDZO.js";
import "./chunk-LA365FE7.js";
import "./chunk-ONKWNPIN.js";
import "./chunk-JKLFCJPR.js";
import "./chunk-J6T3FJLS.js";
import "./chunk-SA77Z3WI.js";
import "./chunk-6K2UNRXT.js";
import "./chunk-WTKV7W5Z.js";
import "./chunk-D4Y7YHG7.js";
import "./chunk-AL5NKCU5.js";
import "./chunk-6MBDB46F.js";
import "./chunk-D56W4LPT.js";
import "./chunk-BKOYOJBG.js";
import "./chunk-7JR6S3WL.js";
import "./chunk-CSSLIU64.js";
import "./chunk-CJNDQ2LH.js";
import "./chunk-B4E4X2TN.js";
import "./chunk-HS6YI5DU.js";
import "./chunk-CDBOQCLE.js";
import "./chunk-RSRUEM5U.js";
import "./chunk-HFJMEXIX.js";
import "./chunk-VYSGSKHB.js";
import "./chunk-DGJJJ2DD.js";
import "./chunk-UAFQMHYI.js";
import "./chunk-IDPLBNJX.js";
import "./chunk-ZHAZR5C3.js";
import "./chunk-P4MNTMCZ.js";
import "./chunk-BSPKLAHD.js";
import "./chunk-GPWQGIYV.js";
import "./chunk-WZJNHZ6H.js";
import "./chunk-XMYPMIYH.js";
import "./chunk-FQLGRQKL.js";
import "./chunk-YBPOKK6D.js";
import "./chunk-DRC4XSYG.js";
import "./chunk-TUVEYM7U.js";
import "./chunk-5S637BGW.js";
import "./chunk-BFOJPIF7.js";
import "./chunk-Y7RXGLGH.js";
import "./chunk-RO3CTAP7.js";
import "./chunk-GKMVTGGM.js";
import "./chunk-XGTCDM4C.js";
import "./chunk-QNG4TY7L.js";
import "./chunk-RW5QMWE6.js";
import "./chunk-LGMX4E7L.js";
import "./chunk-OKRW5W44.js";
import "./chunk-Q6RZBEZ6.js";
import "./chunk-PC66NY33.js";
import "./chunk-YY2VB3AE.js";
import "./chunk-VEYMN5N3.js";
import "./chunk-H6NTWZSO.js";
import "./chunk-BMT3OVAP.js";
import {
  b
} from "./chunk-W5ALAOW2.js";
import "./chunk-FHDHOWK5.js";
import "./chunk-Y546C2O5.js";
import "./chunk-IYKBAIQE.js";
import "./chunk-BDRVHR2K.js";
import "./chunk-DVIGFJWY.js";
import "./chunk-LQBHIBXV.js";
import "./chunk-42DUJ2CX.js";
import "./chunk-B35SNV2V.js";
import "./chunk-Z2F5OKVA.js";
import "./chunk-UQA6M3KF.js";
import "./chunk-GLF3KRAL.js";
import "./chunk-ZLQTPFTL.js";
import "./chunk-WIVZ7SMV.js";
import "./chunk-O76UVYOO.js";
import "./chunk-QCMUK3QA.js";
import "./chunk-HZSGATFT.js";
import "./chunk-KNMQQRV7.js";
import "./chunk-N5GQOIDP.js";
import "./chunk-NFB6O77E.js";
import "./chunk-AKEHDP75.js";
import "./chunk-5MMGIT64.js";
import "./chunk-ERD6I7QP.js";
import "./chunk-EZL4LTMD.js";
import "./chunk-F3BQGS35.js";
import "./chunk-Z3NX5DTX.js";
import "./chunk-J4RP32NG.js";
import "./chunk-6NLHKXEW.js";
import "./chunk-LMO6NZJA.js";
import "./chunk-A5QTLE4Y.js";
import "./chunk-SCHTG6ZQ.js";
import "./chunk-G7YFDDME.js";
import "./chunk-PCKG3UTS.js";
import "./chunk-3VMVD66K.js";
import {
  f
} from "./chunk-QYC3GV65.js";
import "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import "./chunk-I2X6UR6L.js";
import "./chunk-HV2SFSJW.js";
import "./chunk-SBARCIDP.js";
import "./chunk-2SYXH2R7.js";
import "./chunk-7JNXJYRU.js";
import "./chunk-3KPZ3BQR.js";
import "./chunk-5JYVZQZR.js";
import "./chunk-G7FOE26O.js";
import "./chunk-S5I4QKJD.js";
import "./chunk-LSM34QAB.js";
import "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import "./chunk-TCRKKQAL.js";
import "./chunk-77YSHEUQ.js";
import "./chunk-JW7VBMHD.js";
import "./chunk-GLLRUDMY.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import {
  o
} from "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-VTH4DAHQ.js";
import "./chunk-HLDUDRTD.js";
import "./chunk-SLQA5YBV.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import {
  n
} from "./chunk-Z2PDA67N.js";
import "./chunk-PWPXYWXV.js";
import "./chunk-545NO6M2.js";
import "./chunk-5LSHHVQ5.js";
import "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import {
  d
} from "./chunk-Z4Y53NDM.js";
import "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  S,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import "./chunk-JGDJR5EV.js";
import {
  u
} from "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  s
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/layers/graphics/controllers/StreamController.js
var p = 2500;
var u3 = class extends f {
  getObjectId() {
    return this.objectId;
  }
};
e([y({ type: Number, json: { read: true } })], u3.prototype, "objectId", void 0), u3 = e([a("esri.layers.graphics.controllers.StreamController.StreamGraphic")], u3);
var m = class {
  constructor(e2) {
    this.onUpdate = e2, this._idToGraphic = /* @__PURE__ */ new Map();
  }
  destroy() {
    this._idToGraphic.clear();
  }
  add(e2) {
    this._idToGraphic.set(e2.objectId, e2);
  }
  get(e2) {
    return this._idToGraphic.get(e2);
  }
  forEach(e2) {
    this._idToGraphic.forEach(e2);
  }
  removeById(e2) {
    const t = this._idToGraphic.get(e2);
    return t ? (t.sourceLayer = t.layer = null, this._idToGraphic.delete(e2), t) : null;
  }
  update(e2, t) {
    this.onUpdate(e2, t);
  }
  get size() {
    return this._idToGraphic.size;
  }
};
var y2 = class extends n(S) {
  constructor() {
    super(...arguments), this.isPaused = false, this.graphics = new h(), this._updateInfo = { websocket: 0, client: 0 }, this._updateIntervalId = null, this._outSpatialReference = null;
  }
  initialize() {
    this.addResolvingPromise(this.layer.when(() => this._startup()));
  }
  destroy() {
    this.clear();
  }
  _clearInterval() {
    null !== this._updateIntervalId && (clearInterval(this._updateIntervalId), this._updateIntervalId = null);
  }
  clear() {
    this._shutdown(), this.graphics.clear();
  }
  get updating() {
    return !this.connection || "connected" === this.connection.connectionStatus;
  }
  _shutdown() {
    this._clearInterval(), this.connection = u(this.connection), this.store = u(this.store), this.removeAllHandles();
  }
  _startup() {
    const { layer: e2, layerView: t } = this, { spatialReference: s2, definitionExpression: r3, geometryDefinition: o3, objectIdField: a2, timeInfo: n3, purgeOptions: d3, maxReconnectionAttempts: p2, maxReconnectionInterval: u5, customParameters: y3 } = e2, f2 = e2.geometryType ? o.toJSON(e2.geometryType) : null, g = s2, _ = t.view.spatialReference;
    this.clear(), this._set("connection", r(e2.parsedUrl, g, _, f2, r3, o3, p2, u5, y3 ?? void 0)), this._outSpatialReference = _.toJSON(), this.store = new m(this._onUpdate.bind(this)), this.featuresManager = new o2(this.store, a2, n3.toJSON(), d3);
    const I = "startup-watches";
    this.removeHandles(I), this.addHandles([e2.on("send-message-to-socket", (e3) => this.connection.sendMessageToSocket(e3)), e2.on("send-message-to-client", (e3) => this.connection.sendMessageToClient(e3)), this.connection.on("data-received", (e3) => this._onFeature(e3)), this.connection.on("message-received", (e3) => this._onWebSocketMessage(e3)), d(() => [e2.definitionExpression, e2.geometryDefinition, e2.purgeOptions], () => this._startup())], I), this.isPaused || this._initUpdateInterval();
  }
  _onWebSocketMessage(e2) {
    if (this.layerView.emit("message-received", e2), "type" in e2)
      switch (e2.type) {
        case "delete":
          if (e2.objectIds)
            for (const t of e2.objectIds)
              this.featuresManager.removeById(t);
          if (e2.trackIds)
            for (const t of e2.trackIds)
              this.featuresManager.removeByTrackId(t);
          break;
        case "clear":
          this.store.forEach((e3) => this.featuresManager.removeById(e3.objectId));
      }
  }
  _onFeature(e2) {
    this._updateInfo.websocket++, this.layerView.hasEventListener("data-received") && this.layerView.emit("data-received", { attributes: e2.attributes, centroid: e2.centroid, geometry: e2.geometry });
    try {
      null == e2.geometry || e2.geometry.spatialReference || (e2.geometry.spatialReference = this._outSpatialReference);
      const t = u3.fromJSON(e2);
      t.sourceLayer = t.layer = this.layer, this.featuresManager.add(t);
    } catch {
    }
  }
  _onUpdate(e2, t) {
    null != t && this.graphics.removeMany(t), null != e2 && (this._updateInfo.client += e2.length, this.graphics.addMany(e2));
  }
  _initUpdateInterval() {
    this._clearInterval();
    const { updateInterval: e2 } = this.layer;
    let t = performance.now();
    this._updateIntervalId = setInterval(() => {
      const e3 = performance.now(), s2 = e3 - t;
      if (s2 > p) {
        t = e3;
        const r3 = Math.round(this._updateInfo.client / (s2 / 1e3)), o3 = Math.round(this._updateInfo.websocket / (s2 / 1e3));
        this._updateInfo.client = 0, this._updateInfo.websocket = 0, this.layerView.emit("update-rate", { client: r3, websocket: o3 });
      }
      this.featuresManager.checkForUpdates();
    }, e2);
  }
  pauseStream() {
    this.isPaused = true, this._clearInterval();
  }
  resumeStream() {
    this.isPaused = false, this._initUpdateInterval();
  }
  disconnect() {
    this._shutdown();
  }
  connect() {
    null == this.connection && this._startup();
  }
  clearGraphics() {
    this.graphics.clear();
  }
};
e([y()], y2.prototype, "isPaused", void 0), e([y({ constructOnly: true })], y2.prototype, "layer", void 0), e([y({ constructOnly: true })], y2.prototype, "layerView", void 0), e([y()], y2.prototype, "connection", void 0), e([y({ readOnly: true })], y2.prototype, "updating", null), y2 = e([a("esri.layers.graphics.controllers.StreamController")], y2);

// node_modules/@arcgis/core/views/3d/layers/StreamLayerView3D.js
var u4 = class extends r2(b2(n2(u2))) {
  constructor() {
    super(...arguments), this.type = "stream-3d", this.updatePolicy = C.ASYNC, this.hasZ = true, this.hasM = false;
  }
  initialize() {
    this.addHandles(d(() => this.suspended, (e2) => {
      this.controller && this._onSuspendedChange(e2);
    }));
  }
  get connectionError() {
    var _a, _b;
    const e2 = (_b = (_a = this.controller) == null ? void 0 : _a.connection) == null ? void 0 : _b.errorString;
    return e2 ? new s("stream-controller", e2) : null;
  }
  createQuery() {
    return new b({ outFields: ["*"], returnGeometry: true, outSpatialReference: this.view.spatialReference });
  }
  queryLatestObservations(e2, r3) {
    return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(e2), r3 == null ? void 0 : r3.signal);
  }
  get _streamConnectionStatus() {
    var _a, _b;
    return ((_b = (_a = this.controller) == null ? void 0 : _a.connection) == null ? void 0 : _b.connectionStatus) ?? "disconnected";
  }
  createController() {
    return new y2({ layer: this.layer, layerView: this });
  }
  beforeSetController() {
  }
  _doPause() {
    var _a;
    (_a = this.controller) == null ? void 0 : _a.pauseStream();
  }
  _doResume() {
    var _a;
    (_a = this.controller) == null ? void 0 : _a.resumeStream();
  }
  _doDisconnect() {
    var _a;
    (_a = this.controller) == null ? void 0 : _a.disconnect(), this._doPause();
  }
  _doConnect() {
    var _a;
    (_a = this.controller) == null ? void 0 : _a.connect(), this.resume();
  }
  _doClear() {
    var _a;
    (_a = this.controller) == null ? void 0 : _a.clearGraphics();
  }
};
e([y({ readOnly: true })], u4.prototype, "updatePolicy", void 0), e([y({ readOnly: true })], u4.prototype, "connectionError", null), e([y()], u4.prototype, "controller", void 0), e([y({ readOnly: true })], u4.prototype, "hasZ", void 0), e([y({ readOnly: true })], u4.prototype, "hasM", void 0), e([y({ readOnly: true })], u4.prototype, "_streamConnectionStatus", null), u4 = e([a("esri.views.3d.layers.StreamLayerView3D")], u4);
var d2 = u4;
export {
  d2 as default
};
//# sourceMappingURL=StreamLayerView3D-D6HCGZIA.js.map
