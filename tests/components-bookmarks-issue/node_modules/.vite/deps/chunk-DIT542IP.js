import {
  a as a4
} from "./chunk-HFYOMP47.js";
import {
  p
} from "./chunk-JNGJWHJD.js";
import {
  v
} from "./chunk-YBPOKK6D.js";
import {
  C,
  M,
  R,
  U,
  f as f4
} from "./chunk-2NPNEA6N.js";
import {
  i as i2
} from "./chunk-Z3NX5DTX.js";
import {
  S as S2,
  T,
  d,
  f as f3
} from "./chunk-RKVEKQ5O.js";
import {
  a as a3
} from "./chunk-P7J4JFEH.js";
import {
  i
} from "./chunk-R4CJB3GP.js";
import {
  S,
  g
} from "./chunk-VTH4DAHQ.js";
import {
  c
} from "./chunk-QLL2YG25.js";
import {
  w
} from "./chunk-IZKCZQUY.js";
import {
  f as f2
} from "./chunk-MBGZKT2Z.js";
import {
  me,
  oe
} from "./chunk-UWQ3OYA5.js";
import {
  o
} from "./chunk-YOPMY6TS.js";
import {
  r
} from "./chunk-VIN55KNF.js";
import {
  n as n2
} from "./chunk-RUN6MNXL.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a2
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  a,
  n2 as n
} from "./chunk-7RBRCL6S.js";

// node_modules/@arcgis/core/layers/support/EditFieldsInfo.js
var l = class extends i(f) {
  constructor(o2) {
    super(o2), this.creatorField = null, this.creationDateField = null, this.editorField = null, this.editDateField = null, this.realm = null, this.timeZone = null;
  }
};
e([y()], l.prototype, "creatorField", void 0), e([y()], l.prototype, "creationDateField", void 0), e([y()], l.prototype, "editorField", void 0), e([y()], l.prototype, "editDateField", void 0), e([y()], l.prototype, "realm", void 0), e([y(c("dateFieldsTimeReference", true))], l.prototype, "timeZone", void 0), l = e([a2("esri.layers.support.EditFieldsInfo")], l);
var p2 = l;

// node_modules/@arcgis/core/layers/support/FeatureIndex.js
var p3 = class extends i(f) {
  constructor(o2) {
    super(o2);
  }
};
e([y({ constructOnly: true, json: { write: true } })], p3.prototype, "name", void 0), e([y({ constructOnly: true, json: { write: true } })], p3.prototype, "fields", void 0), e([y({ constructOnly: true, json: { write: true } })], p3.prototype, "isAscending", void 0), e([y({ constructOnly: true, json: { write: true } })], p3.prototype, "indexType", void 0), e([y({ constructOnly: true, json: { write: true } })], p3.prototype, "isUnique", void 0), e([y({ constructOnly: true, json: { write: true } })], p3.prototype, "description", void 0), p3 = e([a2("esri.layers.support.FeatureIndex")], p3);

// node_modules/@arcgis/core/layers/support/GeometryFieldsInfo.js
var a5 = class extends i(f) {
  constructor(e2) {
    super(e2), this.shapeAreaField = null, this.shapeLengthField = null, this.units = null;
  }
};
e([y({ type: String, json: { read: { source: "shapeAreaFieldName" } } })], a5.prototype, "shapeAreaField", void 0), e([y({ type: String, json: { read: { source: "shapeLengthFieldName" } } })], a5.prototype, "shapeLengthField", void 0), e([y({ type: String, json: { read: (e2) => oe.read(e2) || me.read(e2) } })], a5.prototype, "units", void 0), a5 = e([a2("esri.layers.support.GeometryFieldsInfo")], a5);
var c2 = a5;

// node_modules/@arcgis/core/layers/support/Relationship.js
var n3 = new n2({ esriRelCardinalityOneToOne: "one-to-one", esriRelCardinalityOneToMany: "one-to-many", esriRelCardinalityManyToMany: "many-to-many" });
var a6 = new n2({ esriRelRoleOrigin: "origin", esriRelRoleDestination: "destination" });
var l2 = class extends i(f) {
  constructor(e2) {
    super(e2), this.cardinality = null, this.composite = null, this.id = null, this.keyField = null, this.keyFieldInRelationshipTable = null, this.name = null, this.relatedTableId = null, this.relationshipTableId = null, this.role = null;
  }
};
e([y({ json: { read: n3.read, write: n3.write } })], l2.prototype, "cardinality", void 0), e([y({ json: { read: true, write: true } })], l2.prototype, "composite", void 0), e([y({ json: { read: true, write: true } })], l2.prototype, "id", void 0), e([y({ json: { read: true, write: true } })], l2.prototype, "keyField", void 0), e([y({ json: { read: true, write: true } })], l2.prototype, "keyFieldInRelationshipTable", void 0), e([y({ json: { read: true, write: true } })], l2.prototype, "name", void 0), e([y({ json: { read: true, write: true } })], l2.prototype, "relatedTableId", void 0), e([y({ json: { read: true, write: true } })], l2.prototype, "relationshipTableId", void 0), e([y({ json: { read: a6.read, write: a6.write } })], l2.prototype, "role", void 0), l2 = e([a2("esri.layers.support.Relationship")], l2);
var p4 = l2;

// node_modules/@arcgis/core/layers/support/Subtype.js
var c3 = class extends i(f) {
  constructor(o2) {
    super(o2), this.code = null, this.defaultValues = {}, this.domains = null, this.name = null;
  }
  readDomains(o2) {
    if (!o2)
      return null;
    const r2 = {};
    for (const t of Object.keys(o2))
      r2[t] = i2(o2[t]);
    return r2;
  }
  writeDomains(o2, r2) {
    var _a;
    if (!o2)
      return;
    const t = {};
    for (const e2 of Object.keys(o2))
      o2[e2] && (t[e2] = (_a = o2[e2]) == null ? void 0 : _a.toJSON());
    r2.domains = t;
  }
};
e([y({ type: Number, json: { write: true } })], c3.prototype, "code", void 0), e([y({ type: Object, json: { write: true } })], c3.prototype, "defaultValues", void 0), e([y({ json: { write: true } })], c3.prototype, "domains", void 0), e([o("domains")], c3.prototype, "readDomains", null), e([r("domains")], c3.prototype, "writeDomains", null), e([y({ type: String, json: { write: true } })], c3.prototype, "name", void 0), c3 = e([a2("esri.layers.support.Subtype")], c3);
var n4 = c3;

// node_modules/@arcgis/core/layers/mixins/FeatureLayerBase.js
var D = (D2) => {
  let R2 = class extends D2 {
    constructor() {
      super(...arguments), this.copyright = null, this.capabilities = null, this.dateFieldsTimeZone = null, this.datesInUnknownTimezone = false, this.definitionExpression = null, this.displayField = null, this.editFieldsInfo = null, this.editingInfo = null, this.elevationInfo = null, this.floorInfo = null, this.fullExtent = null, this.gdbVersion = null, this.geometryFieldsInfo = null, this.geometryType = null, this.globalIdField = null, this.hasM = void 0, this.hasZ = void 0, this.heightModelInfo = null, this.historicMoment = null, this.indexes = new (V.ofType(p3))(), this.isTable = false, this.layerId = void 0, this.maxScale = 0, this.minScale = 0, this.objectIdField = null, this.preferredTimeZone = null, this.relationships = null, this.returnM = void 0, this.returnZ = void 0, this.serviceDefinitionExpression = null, this.serviceItemId = null, this.sourceJSON = null, this.spatialReference = f2.WGS84, this.subtypeField = null, this.subtypes = null, this.trackIdField = null, this.version = void 0;
    }
    get authenticationTriggerEvent() {
      if (!this.url)
        return null;
      const { capabilities: e2 } = this;
      if (e2) {
        const { query: t2, operations: r2, editing: i3 } = e2;
        if (!t2.supportsQueryByOthers || !t2.supportsQueryByAnonymous)
          return "load";
        if (r2.supportsEditing && !(i3.supportsUpdateByOthers && i3.supportsUpdateByAnonymous && i3.supportsDeleteByOthers && i3.supportsDeleteByAnonymous))
          return "load";
      }
      if (this.userHasUpdateItemPrivileges) {
        if (U(this))
          return "load";
        if (this.hasUpdateItemRestrictions)
          return e2.operations.supportsQuery ? "editing" : "load";
      }
      if (this.userHasFullEditingPrivileges && this.hasFullEditingRestrictions)
        return "editing";
      const t = this.editFieldsInfo;
      return ((t == null ? void 0 : t.creatorField) || (t == null ? void 0 : t.editorField)) && (e2 == null ? void 0 : e2.operations.supportsEditing) ? "editing" : null;
    }
    readCapabilitiesFromService(e2, t) {
      return a4(t, this.url);
    }
    readEditingInfo(e2, t) {
      const { editingInfo: r2 } = t;
      return r2 ? { lastEditDate: null != r2.lastEditDate ? new Date(r2.lastEditDate) : null } : null;
    }
    get effectiveCapabilities() {
      var _a;
      const e2 = this.capabilities;
      if (!e2)
        return null;
      const t = a(e2), { operations: i3, editing: o2 } = t;
      return ((_a = this.sourceJSON) == null ? void 0 : _a.isMultiServicesView) ? (this.userHasUpdateItemPrivileges && (i3.supportsQuery = true), t) : this.userHasUpdateItemPrivileges ? (i3.supportsAdd = i3.supportsDelete = i3.supportsEditing = i3.supportsQuery = i3.supportsUpdate = o2.supportsDeleteByOthers = o2.supportsGeometryUpdate = o2.supportsUpdateByOthers = true, t) : (this.userHasFullEditingPrivileges && i3.supportsEditing && (i3.supportsAdd = i3.supportsDelete = i3.supportsUpdate = o2.supportsGeometryUpdate = true), t);
    }
    readGlobalIdFieldFromService(e2, t) {
      return R(t);
    }
    get hasFullEditingRestrictions() {
      var _a;
      const e2 = this.capabilities;
      if (!e2 || ((_a = this.sourceJSON) == null ? void 0 : _a.isMultiServicesView))
        return false;
      const { operations: t, editing: r2 } = e2;
      return t.supportsEditing && !(t.supportsAdd && t.supportsDelete && t.supportsUpdate && r2.supportsGeometryUpdate);
    }
    get hasUpdateItemRestrictions() {
      var _a;
      const e2 = this.capabilities;
      if (!e2)
        return false;
      const { operations: t, editing: r2 } = e2;
      return ((_a = this.sourceJSON) == null ? void 0 : _a.isMultiServicesView) ? !t.supportsQuery : !(t.supportsAdd && t.supportsDelete && t.supportsEditing && t.supportsQuery && t.supportsUpdate && r2.supportsDeleteByOthers && r2.supportsGeometryUpdate && r2.supportsUpdateByOthers);
    }
    readIsTableFromService(e2, t) {
      return "Table" === t.type;
    }
    readMaxScale(e2, t) {
      return t.effectiveMaxScale || e2 || 0;
    }
    readMinScale(e2, t) {
      return t.effectiveMinScale || e2 || 0;
    }
    readObjectIdFieldFromService(e2, t) {
      return M(t);
    }
    readServiceDefinitionExpression(e2, t) {
      return t.definitionQuery || t.definitionExpression;
    }
    set url(e2) {
      const t = g({ layer: this, url: e2, nonStandardUrlAllowed: true, logger: n.getLogger(this) });
      this._set("url", t.url), null != t.layerId && this._set("layerId", t.layerId);
    }
    writeUrl(e2, t, r2, i3) {
      S(this, e2, null, t, i3);
    }
    readVersion(e2, t) {
      return C(t);
    }
  };
  return e([y({ readOnly: true })], R2.prototype, "authenticationTriggerEvent", null), e([y({ type: String, json: { origins: { service: { read: { source: "copyrightText" } } } } })], R2.prototype, "copyright", void 0), e([y({ readOnly: true, json: { read: false, origins: { service: { read: { source: ["advancedQueryCapabilities", "allowGeometryUpdates", "allowUpdateWithoutMValues", "archivingInfo", "capabilities", "datesInUnknownTimezone", "hasAttachments", "hasM", "hasZ", "maxRecordCount", "maxRecordCountFactor", "ownershipBasedAccessControlForFeatures", "standardMaxRecordCount", "supportedQueryFormats", "supportsAdvancedQueries", "supportsApplyEditsWithGlobalIds", "supportsAttachmentsByUploadId", "supportsAttachmentsResizing", "supportsCalculate", "supportsCoordinatesQuantization", "supportsExceedsLimitStatistics", "supportsFieldDescriptionProperty", "supportsQuantizationEditMode", "supportsRollbackOnFailureParameter", "supportsStatistics", "supportsTruncate", "supportsValidateSql", "tileMaxRecordCount", "useStandardizedQueries"] } } } } })], R2.prototype, "capabilities", void 0), e([o("service", "capabilities")], R2.prototype, "readCapabilitiesFromService", null), e([y(c("dateFieldsTimeReference"))], R2.prototype, "dateFieldsTimeZone", void 0), e([y({ type: Boolean })], R2.prototype, "datesInUnknownTimezone", void 0), e([y({ type: String, json: { origins: { service: { read: false, write: false } }, name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], R2.prototype, "definitionExpression", void 0), e([y({ type: String, json: { origins: { service: { read: { source: "displayField" } } } } })], R2.prototype, "displayField", void 0), e([y({ readOnly: true, type: p2 })], R2.prototype, "editFieldsInfo", void 0), e([y({ readOnly: true })], R2.prototype, "editingInfo", void 0), e([o("editingInfo")], R2.prototype, "readEditingInfo", null), e([y({ readOnly: true })], R2.prototype, "effectiveCapabilities", null), e([y((() => {
    const e2 = a(f3), t = e2.json.origins;
    return t["web-map"] = { read: false, write: false }, t["portal-item"] = { read: false, write: false }, e2;
  })())], R2.prototype, "elevationInfo", void 0), e([y({ type: p, json: { name: "layerDefinition.floorInfo", write: true, origins: { "web-scene": { name: "layerDefinition.floorInfo", write: { enabled: true, layerContainerTypes: a3 } } } } })], R2.prototype, "floorInfo", void 0), e([y({ type: w, json: { origins: { service: { read: { source: "extent" } } } } })], R2.prototype, "fullExtent", void 0), e([y()], R2.prototype, "gdbVersion", void 0), e([y({ readOnly: true, type: c2, json: { read: { source: "geometryProperties" } } })], R2.prototype, "geometryFieldsInfo", void 0), e([y({ type: ["point", "polygon", "polyline", "multipoint", "multipatch", "mesh"], json: { origins: { service: { read: f4.read } } } })], R2.prototype, "geometryType", void 0), e([y({ type: String })], R2.prototype, "globalIdField", void 0), e([o("service", "globalIdField", ["globalIdField", "fields"])], R2.prototype, "readGlobalIdFieldFromService", null), e([y({ readOnly: true })], R2.prototype, "hasFullEditingRestrictions", null), e([y({ type: Boolean, json: { origins: { service: { read: true } } } })], R2.prototype, "hasM", void 0), e([y({ readOnly: true })], R2.prototype, "hasUpdateItemRestrictions", null), e([y({ type: Boolean, json: { origins: { service: { read: true } } } })], R2.prototype, "hasZ", void 0), e([y({ readOnly: true, type: v })], R2.prototype, "heightModelInfo", void 0), e([y({ type: Date })], R2.prototype, "historicMoment", void 0), e([y({ type: V.ofType(p3), readOnly: true })], R2.prototype, "indexes", void 0), e([y({ readOnly: true })], R2.prototype, "isTable", void 0), e([o("service", "isTable", ["type"])], R2.prototype, "readIsTableFromService", null), e([y({ type: Number, json: { origins: { service: { read: { source: "id" } }, "portal-item": { read: false, write: { target: "id" } } }, read: false } })], R2.prototype, "layerId", void 0), e([y(S2)], R2.prototype, "maxScale", void 0), e([o("service", "maxScale", ["maxScale", "effectiveMaxScale"])], R2.prototype, "readMaxScale", null), e([y(T)], R2.prototype, "minScale", void 0), e([o("service", "minScale", ["minScale", "effectiveMinScale"])], R2.prototype, "readMinScale", null), e([y({ type: String })], R2.prototype, "objectIdField", void 0), e([o("service", "objectIdField", ["objectIdField", "fields"])], R2.prototype, "readObjectIdFieldFromService", null), e([y(c("preferredTimeReference"))], R2.prototype, "preferredTimeZone", void 0), e([y({ type: [p4], readOnly: true })], R2.prototype, "relationships", void 0), e([y({ type: Boolean })], R2.prototype, "returnM", void 0), e([y({ type: Boolean })], R2.prototype, "returnZ", void 0), e([y({ readOnly: true, json: { write: false } })], R2.prototype, "serverGens", void 0), e([y({ readOnly: true })], R2.prototype, "serviceDefinitionExpression", void 0), e([o("service", "serviceDefinitionExpression", ["definitionQuery", "definitionExpression"])], R2.prototype, "readServiceDefinitionExpression", null), e([y({ type: String, readOnly: true, json: { read: false, origins: { service: { read: true } } } })], R2.prototype, "serviceItemId", void 0), e([y()], R2.prototype, "sourceJSON", void 0), e([y({ type: f2, json: { origins: { service: { read: { source: "extent.spatialReference" } } } } })], R2.prototype, "spatialReference", void 0), e([y({ type: String, readOnly: true, json: { origins: { service: { read: true } } } })], R2.prototype, "subtypeField", void 0), e([y({ type: [n4], readOnly: true, json: { read: false, origins: { service: { read: true } } } })], R2.prototype, "subtypes", void 0), e([y({ type: String, json: { read: { source: "timeInfo.trackIdField" } } })], R2.prototype, "trackIdField", void 0), e([y(d)], R2.prototype, "url", null), e([r("url")], R2.prototype, "writeUrl", null), e([y({ json: { origins: { service: { read: true } }, read: false } })], R2.prototype, "version", void 0), e([o("service", "version", ["currentVersion", "capabilities", "drawingInfo", "hasAttachments", "htmlPopupType", "relationships", "timeInfo", "typeIdField", "types"])], R2.prototype, "readVersion", null), R2 = e([a2("esri.layers.mixins.FeatureLayerBase")], R2), R2;
};

export {
  n4 as n,
  D
};
//# sourceMappingURL=chunk-DIT542IP.js.map
