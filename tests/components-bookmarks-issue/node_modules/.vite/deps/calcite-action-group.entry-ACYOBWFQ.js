import {
  CSS,
  ICONS,
  SLOTS
} from "./chunk-DMHX3RYH.js";
import {
  connectConditionalSlotComponent,
  disconnectConditionalSlotComponent
} from "./chunk-7YRTU4PX.js";
import {
  connectMessages,
  disconnectMessages,
  setUpMessages,
  updateMessages
} from "./chunk-IF3MPWQI.js";
import {
  connectLocalized,
  disconnectLocalized
} from "./chunk-AXCPOXSP.js";
import "./chunk-CTALGNVI.js";
import {
  SLOTS as SLOTS2
} from "./chunk-6WK5K4H2.js";
import "./chunk-7QCRXUYY.js";
import {
  componentFocusable,
  setComponentLoaded,
  setUpLoadableComponent
} from "./chunk-HYC423SM.js";
import {
  slotChangeHasAssignedElement
} from "./chunk-BUS2XAMG.js";
import "./chunk-L553G5FP.js";
import "./chunk-PJLSVRBA.js";
import {
  getElement,
  h,
  registerInstance
} from "./chunk-FNA2PYJM.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@esri/calcite-components/dist/esm/calcite-action-group.entry.js
var actionGroupCss = ':host{box-sizing:border-box;background-color:var(--calcite-color-foreground-1);color:var(--calcite-color-text-2);font-size:var(--calcite-font-size--1)}:host *{box-sizing:border-box}:host{display:flex;flex-direction:column;padding:0px;--calcite-action-group-columns:3;--calcite-action-group-gap:1px;--calcite-action-group-padding:1px}.container{display:flex;flex-grow:1;flex-direction:column}:host([columns="1"]){--calcite-action-group-columns:1}:host([columns="2"]){--calcite-action-group-columns:2}:host([columns="3"]){--calcite-action-group-columns:3}:host([columns="4"]){--calcite-action-group-columns:4}:host([columns="5"]){--calcite-action-group-columns:5}:host([columns="6"]){--calcite-action-group-columns:6}:host(:first-child){padding-block-start:0px}:host([layout=horizontal]),:host([layout=horizontal]) .container{flex-direction:row}:host([layout=grid]){display:grid}:host([layout=grid]) .container{display:grid;place-content:stretch;background-color:var(--calcite-color-background);gap:var(--calcite-action-group-gap);padding:var(--calcite-action-group-gap);grid-template-columns:repeat(var(--calcite-action-group-columns), auto)}:host([hidden]){display:none}[hidden]{display:none}';
var ActionGroup = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.setMenuOpen = (event) => {
      this.menuOpen = !!event.target.open;
    };
    this.handleMenuActionsSlotChange = (event) => {
      this.hasMenuActions = slotChangeHasAssignedElement(event);
    };
    this.expanded = false;
    this.label = void 0;
    this.layout = "vertical";
    this.columns = void 0;
    this.menuOpen = false;
    this.overlayPositioning = "absolute";
    this.scale = void 0;
    this.messages = void 0;
    this.messageOverrides = void 0;
    this.effectiveLocale = "";
    this.defaultMessages = void 0;
    this.hasMenuActions = false;
  }
  expandedHandler() {
    this.menuOpen = false;
  }
  onMessagesChange() {
  }
  effectiveLocaleChange() {
    updateMessages(this, this.effectiveLocale);
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component's first focusable element. */
  async setFocus() {
    await componentFocusable(this);
    this.el.focus();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectLocalized(this);
    connectMessages(this);
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectLocalized(this);
    disconnectMessages(this);
    disconnectConditionalSlotComponent(this);
  }
  async componentWillLoad() {
    setUpLoadableComponent(this);
    await setUpMessages(this);
  }
  componentDidLoad() {
    setComponentLoaded(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Component Methods
  //
  // --------------------------------------------------------------------------
  renderMenu() {
    const { expanded, menuOpen, scale, layout, messages, overlayPositioning, hasMenuActions } = this;
    return h("calcite-action-menu", { expanded, flipPlacements: ["left", "right"], hidden: !hasMenuActions, label: messages.more, onCalciteActionMenuOpen: this.setMenuOpen, open: menuOpen, overlayPositioning, placement: layout === "horizontal" ? "bottom-start" : "leading-start", scale }, h("calcite-action", { icon: ICONS.menu, scale, slot: SLOTS2.trigger, text: messages.more, textEnabled: expanded }), h("slot", { name: SLOTS.menuActions, onSlotchange: this.handleMenuActionsSlotChange }), h("slot", { name: SLOTS.menuTooltip, slot: SLOTS2.tooltip }));
  }
  render() {
    return h("div", { "aria-label": this.label, class: CSS.container, role: "group" }, h("slot", null), this.renderMenu());
  }
  static get delegatesFocus() {
    return true;
  }
  static get assetsDirs() {
    return ["assets"];
  }
  get el() {
    return getElement(this);
  }
  static get watchers() {
    return {
      "expanded": ["expandedHandler"],
      "messageOverrides": ["onMessagesChange"],
      "effectiveLocale": ["effectiveLocaleChange"]
    };
  }
};
ActionGroup.style = actionGroupCss;
export {
  ActionGroup as calcite_action_group
};
/*! Bundled license information:

@esri/calcite-components/dist/esm/calcite-action-group.entry.js:
  (*!
   * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
   * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
   * v2.6.0
   *)
*/
//# sourceMappingURL=calcite-action-group.entry-ACYOBWFQ.js.map
