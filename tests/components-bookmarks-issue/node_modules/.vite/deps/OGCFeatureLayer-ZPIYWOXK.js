import {
  C as C2,
  N,
  O,
  P,
  R,
  k,
  q,
  v,
  x
} from "./chunk-ZSZM2Q3P.js";
import "./chunk-NGNPSQZK.js";
import "./chunk-C6M5UQQR.js";
import "./chunk-E5PVY3UF.js";
import "./chunk-ZECONJNT.js";
import "./chunk-UWZ4CRJK.js";
import "./chunk-TLTAGTBA.js";
import "./chunk-2QPP5AGU.js";
import "./chunk-2C26DRKK.js";
import "./chunk-M4RFJU4F.js";
import {
  n as n2
} from "./chunk-BUEJAM23.js";
import {
  c as c3
} from "./chunk-LQR76D5M.js";
import "./chunk-2CWW7O7M.js";
import "./chunk-Q5NCQLSM.js";
import "./chunk-FLBJ53KN.js";
import {
  i as i2
} from "./chunk-QMPD4WXY.js";
import {
  c as c2
} from "./chunk-Z4ALW6LX.js";
import "./chunk-H4O73SDK.js";
import {
  p as p3
} from "./chunk-UVXSAP7V.js";
import "./chunk-IZ3VJLQ6.js";
import "./chunk-DRC4XSYG.js";
import {
  s as s2
} from "./chunk-IHQNQQJC.js";
import {
  i as i3
} from "./chunk-4IKPTZ53.js";
import {
  C
} from "./chunk-DXMBDX2I.js";
import {
  m as m3,
  u as u2
} from "./chunk-TUVEYM7U.js";
import "./chunk-5S637BGW.js";
import "./chunk-BFOJPIF7.js";
import {
  f as f4
} from "./chunk-7UUNSIMA.js";
import "./chunk-GMRQGGML.js";
import "./chunk-BYK4ZOU2.js";
import {
  p as p2
} from "./chunk-OHYLFFUW.js";
import {
  e as e2
} from "./chunk-XW3FDKYP.js";
import "./chunk-Y7RXGLGH.js";
import "./chunk-3JC3OUNW.js";
import "./chunk-RO3CTAP7.js";
import "./chunk-GKMVTGGM.js";
import "./chunk-XGTCDM4C.js";
import "./chunk-QNG4TY7L.js";
import "./chunk-RW5QMWE6.js";
import "./chunk-LGMX4E7L.js";
import "./chunk-2NPNEA6N.js";
import "./chunk-U34ZXOJT.js";
import "./chunk-OKRW5W44.js";
import "./chunk-RGAA5Z76.js";
import "./chunk-Q6RZBEZ6.js";
import "./chunk-PC66NY33.js";
import "./chunk-YY2VB3AE.js";
import "./chunk-VEYMN5N3.js";
import "./chunk-H6NTWZSO.js";
import "./chunk-BMT3OVAP.js";
import {
  b as b2
} from "./chunk-W5ALAOW2.js";
import "./chunk-FHDHOWK5.js";
import "./chunk-Y546C2O5.js";
import "./chunk-IYKBAIQE.js";
import "./chunk-BDRVHR2K.js";
import "./chunk-DVIGFJWY.js";
import "./chunk-AKEHDP75.js";
import "./chunk-5MMGIT64.js";
import "./chunk-AKQ765JR.js";
import "./chunk-ERD6I7QP.js";
import {
  d as d2
} from "./chunk-F3BQGS35.js";
import {
  y as y2
} from "./chunk-Z3NX5DTX.js";
import "./chunk-J4RP32NG.js";
import "./chunk-6NLHKXEW.js";
import "./chunk-LMO6NZJA.js";
import "./chunk-A5QTLE4Y.js";
import "./chunk-SCHTG6ZQ.js";
import "./chunk-QYC3GV65.js";
import {
  P as P2
} from "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import {
  j
} from "./chunk-4ZLXDMI5.js";
import {
  f as f3
} from "./chunk-EMYOYGGK.js";
import {
  n
} from "./chunk-6PMFOUWZ.js";
import "./chunk-3KPZ3BQR.js";
import "./chunk-5JYVZQZR.js";
import {
  t
} from "./chunk-UUG4W2PI.js";
import {
  u
} from "./chunk-WW22JHXA.js";
import {
  S
} from "./chunk-ZAM62XN5.js";
import {
  c,
  d,
  f as f2,
  m as m2,
  p,
  y as y3
} from "./chunk-RKVEKQ5O.js";
import "./chunk-P7J4JFEH.js";
import {
  b
} from "./chunk-G7FOE26O.js";
import "./chunk-USOPZ2Q6.js";
import "./chunk-S5I4QKJD.js";
import "./chunk-LSM34QAB.js";
import "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import "./chunk-JW7VBMHD.js";
import "./chunk-GLLRUDMY.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import {
  g,
  p as p4
} from "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import {
  i,
  o
} from "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-AKLOTDO2.js";
import "./chunk-6AQIVLDN.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-LBXFRGMS.js";
import "./chunk-HLDUDRTD.js";
import "./chunk-SLQA5YBV.js";
import "./chunk-UMXV3EBO.js";
import {
  m
} from "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-5LSHHVQ5.js";
import {
  w
} from "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import {
  f
} from "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import "./chunk-Z4Y53NDM.js";
import "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  s
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/layers/graphics/sources/OGCFeatureSource.js
var h = class extends m {
  constructor() {
    super(...arguments), this.featureDefinition = null, this.type = "ogc-feature";
  }
  load(t2) {
    return this.addResolvingPromise(this._loadOGCServices(this.layer, t2)), this.when();
  }
  getSource() {
    const { featureDefinition: { collection: t2, layerDefinition: e3, spatialReference: s3, supportedCrs: r }, layer: { apiKey: o2, customParameters: p5, effectiveMaxRecordCount: i4 } } = this;
    return { type: "ogc-source", collection: t2, layerDefinition: e3, maxRecordCount: i4, queryParameters: { apiKey: o2, customParameters: p5 }, spatialReference: s3, supportedCrs: r };
  }
  queryExtent(t2, e3 = {}) {
    return null;
  }
  queryFeatureCount(t2, e3 = {}) {
    return null;
  }
  queryFeatures(t2, e3 = {}) {
    return this.queryFeaturesJSON(t2, e3).then((t3) => d2.fromJSON(t3));
  }
  queryFeaturesJSON(t2, e3 = {}) {
    const s3 = this.getSource();
    return this.load(e3).then(() => R(s3, t2, e3));
  }
  queryObjectIds(t2, e3 = {}) {
    return null;
  }
  serviceSupportsSpatialReference(t2) {
    return !(!t2.isWGS84 && !t2.isWebMercator) || !!this.featureDefinition.supportedCrs[t2.wkid];
  }
  _conformsToType(t2, e3) {
    const s3 = new RegExp(`^${e3}$`, "i");
    return t2.conformsTo.some((t3) => s3.test(t3)) ?? false;
  }
  _getCapabilities(t2, e3) {
    return { analytics: { supportsCacheHint: false }, attachment: null, data: { isVersioned: false, supportsAttachment: false, supportsM: false, supportsZ: t2 }, metadata: { supportsAdvancedFieldProperties: false }, operations: { supportsCalculate: false, supportsTruncate: false, supportsValidateSql: false, supportsAdd: false, supportsDelete: false, supportsEditing: false, supportsChangeTracking: false, supportsQuery: false, supportsQueryAnalytics: false, supportsQueryAttachments: false, supportsQueryTopFeatures: false, supportsResizeAttachments: false, supportsSync: false, supportsUpdate: false, supportsExceedsLimitStatistics: false, supportsAsyncConvert3D: false }, query: { maxRecordCount: e3, maxRecordCountFactor: void 0, standardMaxRecordCount: void 0, supportsCacheHint: false, supportsCentroid: false, supportsDisjointSpatialRelationship: false, supportsDistance: false, supportsDistinct: false, supportsExtent: false, supportsFormatPBF: false, supportsGeometryProperties: false, supportsHavingClause: false, supportsHistoricMoment: false, supportsMaxRecordCountFactor: false, supportsOrderBy: false, supportsPagination: false, supportsPercentileStatistics: false, supportsQuantization: false, supportsQuantizationEditMode: false, supportsQueryByAnonymous: false, supportsQueryByOthers: false, supportsQueryGeometry: false, supportsResultType: false, supportsStandardizedQueriesOnly: false, supportsTopFeaturesQuery: false, supportsStatistics: false, supportsSpatialAggregationStatistics: false, supportedSpatialAggregationStatistics: { envelope: false, centroid: false, convexHull: false }, supportsDefaultSpatialReference: false, supportsFullTextSearch: false, supportsCompactGeometry: false, supportsSqlExpression: false, tileMaxRecordCount: void 0 }, queryRelated: { supportsCount: false, supportsOrderBy: false, supportsPagination: false, supportsCacheHint: false }, queryTopFeatures: { supportsCacheHint: false }, editing: { supportsDeleteByAnonymous: false, supportsDeleteByOthers: false, supportsGeometryUpdate: false, supportsGlobalId: false, supportsReturnServiceEditsInSourceSpatialReference: false, supportsRollbackOnFailure: false, supportsUpdateByAnonymous: false, supportsUpdateByOthers: false, supportsUploadWithItemId: false, supportsUpdateWithoutM: false, supportsAsyncApplyEdits: false, zDefault: void 0 } };
  }
  _getMaxRecordCount(t2) {
    var _a, _b, _c, _d, _e;
    const e3 = (_a = t2 == null ? void 0 : t2.components) == null ? void 0 : _a.parameters;
    return ((_c = (_b = e3 == null ? void 0 : e3.limit) == null ? void 0 : _b.schema) == null ? void 0 : _c.maximum) ?? ((_e = (_d = e3 == null ? void 0 : e3.limitFeatures) == null ? void 0 : _d.schema) == null ? void 0 : _e.maximum);
  }
  _getStorageSpatialReference(t2) {
    const e3 = t2.storageCrs ?? x, s3 = C2(e3);
    return null == s3 ? f.WGS84 : new f({ wkid: s3 });
  }
  _getSupportedSpatialReferences(t2, e3) {
    const s3 = "#/crs", r = t2.crs ?? [x], o2 = r.includes(s3) ? r.filter((t3) => t3 !== s3).concat(e3.crs ?? []) : r, p5 = /^http:\/\/www\.opengis.net\/def\/crs\/epsg\/.*\/3785$/i;
    return o2.filter((t3) => !p5.test(t3));
  }
  async _loadOGCServices(t2, s3) {
    const r = null != s3 ? s3.signal : null, { apiKey: o2, collectionId: p5, customParameters: i4, fields: y4, geometryType: f5, hasZ: h2, objectIdField: S2, timeInfo: C3, url: R2 } = t2, w2 = { fields: y4 == null ? void 0 : y4.map((t3) => t3.toJSON()), geometryType: i.toJSON(f5), hasZ: h2 ?? false, objectIdField: S2, timeInfo: C3 == null ? void 0 : C3.toJSON() }, x2 = { apiKey: o2, customParameters: i4, signal: r }, j2 = await P(R2, x2), [v2, F] = await Promise.all([O(j2, x2), N(j2, x2)]);
    if (!this._conformsToType(v2, "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"))
      throw new s("ogc-feature-layer:no-geojson-support", "Server does not support geojson");
    const O2 = F.collections.find(({ id: t3 }) => t3 === p5);
    if (!O2)
      throw new s("ogc-feature-layer:collection-not-found", "Server does not contain the named collection");
    const D = this._conformsToType(v2, "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30") ? await q(j2, x2) : null, T = await v(O2, w2, x2), A = this._getMaxRecordCount(D), _ = this._getCapabilities(T.hasZ, A), P3 = this._getStorageSpatialReference(O2).toJSON(), b3 = this._getSupportedSpatialReferences(O2, F), q2 = new RegExp(`^${k}`, "i"), E = {};
    for (const e3 of b3) {
      const t3 = C2(e3);
      null != t3 && (E[t3] || (E[t3] = e3.replace(q2, "")));
    }
    this.featureDefinition = { capabilities: _, collection: O2, layerDefinition: T, spatialReference: P3, supportedCrs: E };
  }
};
e([y()], h.prototype, "featureDefinition", void 0), e([y({ constructOnly: true })], h.prototype, "layer", void 0), e([y()], h.prototype, "type", void 0), h = e([a("esri.layers.graphics.sources.OGCFeatureSource")], h);

// node_modules/@arcgis/core/layers/OGCFeatureLayer.js
var U = s2();
var B = class extends i2(e2(c3(p3(n(c2(f4(t(u(j(f3(S(b)))))))))))) {
  constructor(e3) {
    super(e3), this.capabilities = null, this.collectionId = null, this.copyright = null, this.description = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.hasZ = void 0, this.labelingInfo = null, this.labelsVisible = true, this.legendEnabled = true, this.maxRecordCount = null, this.objectIdField = null, this.operationalLayerType = "OGCFeatureLayer", this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new h({ layer: this }), this.spatialReference = null, this.title = null, this.type = "ogc-feature", this.typeIdField = null, this.types = null, this.url = null;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e3) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["OGCFeatureServer"] }, e3).then(() => this._fetchService(e3))), this.when();
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  get effectiveMaxRecordCount() {
    var _a;
    return this.maxRecordCount ?? ((_a = this.capabilities) == null ? void 0 : _a.query.maxRecordCount) ?? 5e3;
  }
  get isTable() {
    return this.loaded && null == this.geometryType;
  }
  set renderer(e3) {
    p4(e3, this.fieldsIndex), this._set("renderer", e3);
  }
  on(e3, r) {
    return super.on(e3, r);
  }
  createPopupTemplate(e3) {
    return p2(this, e3);
  }
  createQuery() {
    return new b2();
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  getFieldDomain(e3, r) {
    var _a;
    let t2, i4 = false;
    const o2 = (_a = r == null ? void 0 : r.feature) == null ? void 0 : _a.attributes, s3 = this.typeIdField && (o2 == null ? void 0 : o2[this.typeIdField]);
    return null != s3 && this.types && (i4 = this.types.some((r2) => {
      var _a2;
      return r2.id == s3 && (t2 = (_a2 = r2.domains) == null ? void 0 : _a2[e3], "inherited" === (t2 == null ? void 0 : t2.type) && (t2 = this._getLayerDomain(e3)), true);
    })), i4 || t2 || (t2 = this._getLayerDomain(e3)), t2;
  }
  queryFeatures(e3, r) {
    return this.load().then(() => this.source.queryFeatures(b2.from(e3) || this.createQuery(), r)).then((e4) => {
      var _a;
      return (_a = e4 == null ? void 0 : e4.features) == null ? void 0 : _a.forEach((e5) => {
        e5.layer = e5.sourceLayer = this;
      }), e4;
    });
  }
  serviceSupportsSpatialReference(e3) {
    var _a;
    return ((_a = this.source) == null ? void 0 : _a.serviceSupportsSpatialReference(e3)) ?? false;
  }
  async _fetchService(e3) {
    await this.source.load(e3), this.read(this.source.featureDefinition, { origin: "service" }), p4(this.renderer, this.fieldsIndex), g(this.timeInfo, this.fieldsIndex);
  }
  _getLayerDomain(e3) {
    if (!this.fields)
      return null;
    for (const r of this.fields)
      if (r.name === e3 && r.domain)
        return r.domain;
    return null;
  }
};
e([y({ readOnly: true, json: { origins: { service: { read: true } } } })], B.prototype, "capabilities", void 0), e([y({ type: String, json: { write: true } })], B.prototype, "collectionId", void 0), e([y({ type: String })], B.prototype, "copyright", void 0), e([y({ readOnly: true })], B.prototype, "defaultPopupTemplate", null), e([y({ readOnly: true, type: String, json: { origins: { service: { name: "collection.description" } } } })], B.prototype, "description", void 0), e([y({ type: String })], B.prototype, "displayField", void 0), e([y({ type: Number })], B.prototype, "effectiveMaxRecordCount", null), e([y(f2)], B.prototype, "elevationInfo", void 0), e([y({ type: [y2], json: { origins: { service: { name: "layerDefinition.fields" } } } })], B.prototype, "fields", void 0), e([y(U.fieldsIndex)], B.prototype, "fieldsIndex", void 0), e([y({ readOnly: true, type: w, json: { origins: { service: { name: "layerDefinition.extent" } } } })], B.prototype, "fullExtent", void 0), e([y({ type: o.apiValues, json: { origins: { service: { name: "layerDefinition.geometryType", read: { reader: o.read } } } } })], B.prototype, "geometryType", void 0), e([y({ type: Boolean, json: { origins: { service: { name: "layerDefinition.hasZ" } } } })], B.prototype, "hasZ", void 0), e([y({ type: Boolean, readOnly: true })], B.prototype, "isTable", null), e([y({ type: [C], json: { origins: { "web-document": { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: i3 }, write: true } } } })], B.prototype, "labelingInfo", void 0), e([y(m2)], B.prototype, "labelsVisible", void 0), e([y(c)], B.prototype, "legendEnabled", void 0), e([y({ type: Number })], B.prototype, "maxRecordCount", void 0), e([y({ type: String, json: { origins: { service: { name: "layerDefinition.objectIdField" } } } })], B.prototype, "objectIdField", void 0), e([y({ type: ["OGCFeatureLayer"] })], B.prototype, "operationalLayerType", void 0), e([y(y3)], B.prototype, "popupEnabled", void 0), e([y({ type: P2, json: { name: "popupInfo", write: true } })], B.prototype, "popupTemplate", void 0), e([y({ types: m3, json: { origins: { service: { name: "layerDefinition.drawingInfo.renderer", write: false }, "web-scene": { types: u2, name: "layerDefinition.drawingInfo.renderer", write: true } }, name: "layerDefinition.drawingInfo.renderer", write: true } })], B.prototype, "renderer", null), e([y(p)], B.prototype, "screenSizePerspectiveEnabled", void 0), e([y({ readOnly: true })], B.prototype, "source", void 0), e([y({ readOnly: true, type: f, json: { origins: { service: { read: true } } } })], B.prototype, "spatialReference", void 0), e([y({ type: String, json: { write: { enabled: true, ignoreOrigin: true, isRequired: true }, origins: { service: { name: "collection.title" } } } })], B.prototype, "title", void 0), e([y({ readOnly: true, json: { read: false } })], B.prototype, "type", void 0), e([y({ type: String, readOnly: true })], B.prototype, "typeIdField", void 0), e([y({ type: [n2] })], B.prototype, "types", void 0), e([y(d)], B.prototype, "url", void 0), B = e([a("esri.layers.OGCFeatureLayer")], B);
var V = B;
export {
  V as default
};
//# sourceMappingURL=OGCFeatureLayer-ZPIYWOXK.js.map
