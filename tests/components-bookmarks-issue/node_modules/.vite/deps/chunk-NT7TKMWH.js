import {
  o as o10,
  r as r10,
  t as t10,
  u as u4
} from "./chunk-BQGPMKNK.js";
import {
  d as d2
} from "./chunk-KWLN46JY.js";
import {
  r as r7
} from "./chunk-7KNPDPFB.js";
import {
  h as h5
} from "./chunk-M6P775BS.js";
import {
  e as e9,
  f as f4,
  o as o9
} from "./chunk-J5F4VILS.js";
import {
  t as t11
} from "./chunk-KSBIR2KG.js";
import {
  N
} from "./chunk-XVQGALI7.js";
import {
  t as t8
} from "./chunk-MVSN2HAN.js";
import {
  A as A2,
  S as S3,
  a as a4,
  c as c4,
  l as l5
} from "./chunk-7A5N7G2Z.js";
import {
  J
} from "./chunk-B4ZPBUH4.js";
import {
  i as i5
} from "./chunk-FIHLU3LF.js";
import {
  R
} from "./chunk-PZEIVZJB.js";
import {
  f as f3,
  v
} from "./chunk-J54I3TB7.js";
import {
  c as c2
} from "./chunk-OBABKQ6S.js";
import {
  d
} from "./chunk-4GGEQMYI.js";
import {
  r as r8,
  r2 as r9,
  t as t9
} from "./chunk-ZPC74XHC.js";
import {
  A as A3
} from "./chunk-IVGJRGD2.js";
import {
  u as u3
} from "./chunk-JA2AO4PC.js";
import {
  r as r11
} from "./chunk-JBF6CULO.js";
import {
  c2 as c3,
  h as h3,
  o as o5
} from "./chunk-3DFMDDMO.js";
import {
  O as O4
} from "./chunk-GMUCR2DJ.js";
import {
  o as o8
} from "./chunk-6ENXMQPD.js";
import {
  S as S2,
  _ as _2,
  h as h4,
  o as o7
} from "./chunk-MEEG7XMI.js";
import {
  o as o6
} from "./chunk-LJULTBAY.js";
import {
  t as t7
} from "./chunk-FD4DXBZA.js";
import {
  f as f2,
  i as i4
} from "./chunk-GB4RVOXH.js";
import {
  t as t6
} from "./chunk-UNTPHF5R.js";
import {
  H
} from "./chunk-YJFPDMSR.js";
import {
  f,
  l2 as l4,
  n2 as n6,
  n3 as n7,
  o3,
  o4,
  t as t5,
  u as u2
} from "./chunk-VVAVEXL2.js";
import {
  t as t4
} from "./chunk-BKBB7AOV.js";
import {
  r as r6
} from "./chunk-HXYRQKMI.js";
import {
  D,
  O as O3
} from "./chunk-WKVHVZW2.js";
import {
  I
} from "./chunk-KSZESDGM.js";
import {
  l as l3
} from "./chunk-WEER6QME.js";
import {
  e as e8,
  n as n5,
  s as s3
} from "./chunk-TXLJQAAN.js";
import {
  E,
  L,
  O as O2,
  c,
  i as i3,
  x
} from "./chunk-IRL6OOVK.js";
import {
  n as n4,
  r as r5,
  u
} from "./chunk-LA365FE7.js";
import {
  a as a3
} from "./chunk-CJNDQ2LH.js";
import {
  n as n3,
  o as o2,
  t as t2
} from "./chunk-CDBOQCLE.js";
import {
  l as l2
} from "./chunk-WZJNHZ6H.js";
import {
  r as r3
} from "./chunk-DVIGFJWY.js";
import {
  t as t3
} from "./chunk-42DUJ2CX.js";
import {
  e as e7
} from "./chunk-GLF3KRAL.js";
import {
  l
} from "./chunk-ZLQTPFTL.js";
import {
  i as i2,
  j
} from "./chunk-HZSGATFT.js";
import {
  e as e5
} from "./chunk-N5GQOIDP.js";
import {
  e as e6,
  t
} from "./chunk-NFB6O77E.js";
import {
  r as r4
} from "./chunk-AKEHDP75.js";
import {
  h as h2
} from "./chunk-HWHMO3CO.js";
import {
  a as a2
} from "./chunk-77YSHEUQ.js";
import {
  P as P2,
  h
} from "./chunk-326OSIM5.js";
import {
  A,
  O,
  P,
  S,
  e as e4,
  g,
  i,
  o,
  r as r2,
  s as s2,
  z
} from "./chunk-JZBR4X6W.js";
import {
  e as e3,
  n as n2,
  r
} from "./chunk-OIJCMME5.js";
import {
  U
} from "./chunk-SAYWXQVM.js";
import {
  _
} from "./chunk-BVQWKK2V.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  a
} from "./chunk-JGDJR5EV.js";
import {
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";
import {
  e2,
  has
} from "./chunk-J2EGIWT6.js";

// node_modules/@arcgis/core/views/3d/glTF/internal/TextureTransformUtils.js
function s4(s6) {
  if (null == s6)
    return null;
  const a5 = null != s6.offset ? s6.offset : i4, n8 = null != s6.rotation ? s6.rotation : 0, e10 = null != s6.scale ? s6.scale : f2, f5 = t(1, 0, 0, 0, 1, 0, a5[0], a5[1], 1), c6 = t(Math.cos(n8), -Math.sin(n8), 0, Math.sin(n8), Math.cos(n8), 0, 0, 0, 1), m = t(e10[0], 0, 0, 0, e10[1], 0, 0, 0, 1), u5 = e6();
  return i2(u5, c6, m), i2(u5, f5, u5), u5;
}

// node_modules/@arcgis/core/views/3d/layers/graphics/ProcessedObjectResource.js
var s5 = class {
  constructor() {
    this.geometries = new Array(), this.materials = new Array(), this.textures = new Array();
  }
};
var t12 = class {
  constructor(t14, e10, r12) {
    this.name = t14, this.lodThreshold = e10, this.pivotOffset = r12, this.stageResources = new s5(), this.numberOfVertices = 0;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/DefaultMaterialTechnique.js
var _3 = class extends f3 {
  constructor() {
    super(...arguments), this.isSchematic = false, this.usePBR = false, this.mrrFactors = e3(r10), this.hasVertexColors = false, this.hasSymbolColors = false, this.doubleSided = false, this.doubleSidedType = "normal", this.cullFace = e8.Back, this.isInstanced = false, this.hasInstancedColor = false, this.emissiveFactor = r(0, 0, 0), this.instancedDoublePrecision = false, this.normalType = a3.Attribute, this.receiveShadows = true, this.receiveAmbientOcclusion = true, this.castShadows = true, this.shadowMappingEnabled = false, this.ambient = r(0.2, 0.2, 0.2), this.diffuse = r(0.8, 0.8, 0.8), this.externalColor = r4(1, 1, 1, 1), this.colorMixMode = "multiply", this.opacity = 1, this.layerOpacity = 1, this.origin = n2(), this.hasSlicePlane = false, this.hasSliceHighlight = true, this.offsetTransparentBackfaces = false, this.vvSize = null, this.vvColor = null, this.vvOpacity = null, this.vvSymbolAnchor = null, this.vvSymbolRotationMatrix = null, this.modelTransformation = null, this.transparent = false, this.writeDepth = true, this.customDepthTest = n5.Less, this.textureAlphaMode = s3.Blend, this.textureAlphaCutoff = o8, this.textureAlphaPremultiplied = false, this.hasOccludees = false, this.renderOccluded = h3.Occlude, this.isDecoration = false;
  }
};
var k = class extends v {
  constructor() {
    super(...arguments), this.origin = n2(), this.slicePlaneLocalOrigin = this.origin;
  }
};
var q = class _q extends r8 {
  initializeConfiguration(e10, t14) {
    t14.spherical = e10.viewingMode === l2.Global, t14.doublePrecisionRequiresObfuscation = e10.rctx.driverTest.doublePrecisionRequiresObfuscation.result, t14.textureCoordinateType = t14.hasColorTexture || t14.hasMetallicRoughnessTexture || t14.hasEmissionTexture || t14.hasOcclusionTexture || t14.hasNormalTexture ? d.Default : d.None, t14.objectAndLayerIdColorInstanced = t14.instanced;
  }
  initializeProgram(e10) {
    return this._initializeProgram(e10, _q.shader);
  }
  _initializeProgram(e10, t14) {
    return new r9(e10.rctx, t14.get().build(this.configuration), O4);
  }
  _makePipeline(e10, t14) {
    const i6 = this.configuration, r12 = e10 === o6.NONE, s6 = e10 === o6.FrontFace;
    return S2({ blending: i6.output !== o2.Color && i6.output !== o2.Alpha || !i6.transparent ? null : r12 ? c4 : A2(e10), culling: I2(i6) ? h4(i6.cullFace) : null, depthTest: { func: l5(e10, z2(i6.customDepthTest)) }, depthWrite: (r12 || s6) && i6.writeDepth ? o7 : null, colorWrite: _2, stencilWrite: i6.hasOccludees ? e9 : null, stencilTest: i6.hasOccludees ? t14 ? o9 : f4 : null, polygonOffset: r12 || s6 ? null : a4(i6.enableOffset) });
  }
  initializePipeline() {
    return this._occludeePipelineState = this._makePipeline(this.configuration.transparencyPassType, true), this._makePipeline(this.configuration.transparencyPassType, false);
  }
  getPipeline(e10) {
    return e10 ? this._occludeePipelineState : super.getPipeline();
  }
};
function z2(e10) {
  return e10 === n5.Lequal ? O3.LEQUAL : O3.LESS;
}
function I2(e10) {
  return e10.cullFace !== e8.None || !e10.hasSlicePlane && (!e10.transparent && !e10.doubleSidedMode);
}
q.shader = new t9(J, () => import("./DefaultMaterial.glsl-SWLPZT6C.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/DefaultMaterialTechniqueConfiguration.js
var c5 = class extends t11 {
  constructor() {
    super(...arguments), this.output = o2.Color, this.alphaDiscardMode = s3.Opaque, this.doubleSidedMode = i5.None, this.pbrMode = c2.Disabled, this.cullFace = e8.None, this.transparencyPassType = o6.NONE, this.normalType = a3.Attribute, this.textureCoordinateType = d.None, this.customDepthTest = n5.Less, this.spherical = false, this.hasVertexColors = false, this.hasSymbolColors = false, this.hasVerticalOffset = false, this.hasSlicePlane = false, this.hasSliceHighlight = true, this.hasColorTexture = false, this.hasMetallicRoughnessTexture = false, this.hasEmissionTexture = false, this.hasOcclusionTexture = false, this.hasNormalTexture = false, this.hasScreenSizePerspective = false, this.hasVertexTangents = false, this.hasOccludees = false, this.multipassEnabled = false, this.hasModelTransformation = false, this.offsetBackfaces = false, this.vvSize = false, this.vvColor = false, this.receiveShadows = false, this.receiveAmbientOcclusion = false, this.textureAlphaPremultiplied = false, this.instanced = false, this.instancedColor = false, this.objectAndLayerIdColorInstanced = false, this.instancedDoublePrecision = false, this.doublePrecisionRequiresObfuscation = false, this.writeDepth = true, this.transparent = false, this.enableOffset = true, this.cullAboveGround = false, this.snowCover = false, this.hasColorTextureTransform = false, this.hasEmissionTextureTransform = false, this.hasNormalTextureTransform = false, this.hasOcclusionTextureTransform = false, this.hasMetallicRoughnessTextureTransform = false;
  }
};
e([r11({ count: o2.COUNT })], c5.prototype, "output", void 0), e([r11({ count: s3.COUNT })], c5.prototype, "alphaDiscardMode", void 0), e([r11({ count: i5.COUNT })], c5.prototype, "doubleSidedMode", void 0), e([r11({ count: c2.COUNT })], c5.prototype, "pbrMode", void 0), e([r11({ count: e8.COUNT })], c5.prototype, "cullFace", void 0), e([r11({ count: o6.COUNT })], c5.prototype, "transparencyPassType", void 0), e([r11({ count: a3.COUNT })], c5.prototype, "normalType", void 0), e([r11({ count: d.COUNT })], c5.prototype, "textureCoordinateType", void 0), e([r11({ count: n5.COUNT })], c5.prototype, "customDepthTest", void 0), e([r11()], c5.prototype, "spherical", void 0), e([r11()], c5.prototype, "hasVertexColors", void 0), e([r11()], c5.prototype, "hasSymbolColors", void 0), e([r11()], c5.prototype, "hasVerticalOffset", void 0), e([r11()], c5.prototype, "hasSlicePlane", void 0), e([r11()], c5.prototype, "hasSliceHighlight", void 0), e([r11()], c5.prototype, "hasColorTexture", void 0), e([r11()], c5.prototype, "hasMetallicRoughnessTexture", void 0), e([r11()], c5.prototype, "hasEmissionTexture", void 0), e([r11()], c5.prototype, "hasOcclusionTexture", void 0), e([r11()], c5.prototype, "hasNormalTexture", void 0), e([r11()], c5.prototype, "hasScreenSizePerspective", void 0), e([r11()], c5.prototype, "hasVertexTangents", void 0), e([r11()], c5.prototype, "hasOccludees", void 0), e([r11()], c5.prototype, "multipassEnabled", void 0), e([r11()], c5.prototype, "hasModelTransformation", void 0), e([r11()], c5.prototype, "offsetBackfaces", void 0), e([r11()], c5.prototype, "vvSize", void 0), e([r11()], c5.prototype, "vvColor", void 0), e([r11()], c5.prototype, "receiveShadows", void 0), e([r11()], c5.prototype, "receiveAmbientOcclusion", void 0), e([r11()], c5.prototype, "textureAlphaPremultiplied", void 0), e([r11()], c5.prototype, "instanced", void 0), e([r11()], c5.prototype, "instancedColor", void 0), e([r11()], c5.prototype, "objectAndLayerIdColorInstanced", void 0), e([r11()], c5.prototype, "instancedDoublePrecision", void 0), e([r11()], c5.prototype, "doublePrecisionRequiresObfuscation", void 0), e([r11()], c5.prototype, "writeDepth", void 0), e([r11()], c5.prototype, "transparent", void 0), e([r11()], c5.prototype, "enableOffset", void 0), e([r11()], c5.prototype, "cullAboveGround", void 0), e([r11()], c5.prototype, "snowCover", void 0), e([r11()], c5.prototype, "hasColorTextureTransform", void 0), e([r11()], c5.prototype, "hasEmissionTextureTransform", void 0), e([r11()], c5.prototype, "hasNormalTextureTransform", void 0), e([r11()], c5.prototype, "hasOcclusionTextureTransform", void 0), e([r11()], c5.prototype, "hasMetallicRoughnessTextureTransform", void 0), e([r11({ constValue: false })], c5.prototype, "occlusionPass", void 0), e([r11({ constValue: true })], c5.prototype, "hasVvInstancing", void 0), e([r11({ constValue: false })], c5.prototype, "useCustomDTRExponentForWater", void 0), e([r11({ constValue: false })], c5.prototype, "supportsTextureAtlas", void 0), e([r11({ constValue: true })], c5.prototype, "useFillLights", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/RealisticTreeTechnique.js
var t13 = class _t extends q {
  initializeConfiguration(i6, a5) {
    super.initializeConfiguration(i6, a5), a5.hasMetallicRoughnessTexture = false, a5.hasEmissionTexture = false, a5.hasOcclusionTexture = false, a5.hasNormalTexture = false, a5.hasModelTransformation = false, a5.normalType = a3.Attribute, a5.doubleSidedMode = i5.WindingOrder, a5.hasVertexTangents = false;
  }
  initializeProgram(e10) {
    return this._initializeProgram(e10, _t.shader);
  }
};
t13.shader = new t9(R, () => import("./RealisticTree.glsl-ZFIEHXAH.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultMaterial.js
var E2 = class extends c3 {
  constructor(e10) {
    super(e10, D2), this.supportsEdges = true, this.produces = /* @__PURE__ */ new Map([[A3.OPAQUE_MATERIAL, (e11) => (n3(e11) || t2(e11)) && !this.parameters.transparent], [A3.TRANSPARENT_MATERIAL, (e11) => (n3(e11) || t2(e11)) && this.parameters.transparent && this.parameters.writeDepth], [A3.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL, (e11) => (n3(e11) || t2(e11)) && this.parameters.transparent && !this.parameters.writeDepth]]), this._configuration = new c5(), this._vertexBufferLayout = N2(this.parameters);
  }
  isVisibleForOutput(e10) {
    return e10 !== o2.Shadow && e10 !== o2.ShadowExcludeHighlight && e10 !== o2.ShadowHighlight || this.parameters.castShadows;
  }
  isVisible() {
    const e10 = this.parameters;
    if (!super.isVisible() || 0 === e10.layerOpacity)
      return false;
    const { hasInstancedColor: t14, hasVertexColors: r12, hasSymbolColors: s6, vvColor: a5 } = e10, i6 = "replace" === e10.colorMixMode, o11 = e10.opacity > 0, n8 = e10.externalColor && e10.externalColor[3] > 0, h6 = t14 || a5 || s6;
    return r12 && h6 ? i6 || o11 : r12 ? i6 ? n8 : o11 : h6 ? i6 || o11 : i6 ? n8 : o11;
  }
  getConfiguration(e10, t14) {
    return this._configuration.output = e10, this._configuration.hasNormalTexture = !!this.parameters.normalTextureId, this._configuration.hasColorTexture = !!this.parameters.textureId, this._configuration.hasVertexTangents = this.parameters.hasVertexTangents, this._configuration.instanced = this.parameters.isInstanced, this._configuration.instancedDoublePrecision = this.parameters.instancedDoublePrecision, this._configuration.vvSize = !!this.parameters.vvSize, this._configuration.hasVerticalOffset = null != this.parameters.verticalOffset, this._configuration.hasScreenSizePerspective = null != this.parameters.screenSizePerspective, this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.hasSliceHighlight = this.parameters.hasSliceHighlight, this._configuration.alphaDiscardMode = this.parameters.textureAlphaMode, this._configuration.normalType = this.parameters.normalType, this._configuration.transparent = this.parameters.transparent, this._configuration.writeDepth = this.parameters.writeDepth, null != this.parameters.customDepthTest && (this._configuration.customDepthTest = this.parameters.customDepthTest), this._configuration.hasOccludees = this.parameters.hasOccludees, this._configuration.cullFace = this.parameters.hasSlicePlane ? e8.None : this.parameters.cullFace, this._configuration.multipassEnabled = t14.multipassEnabled, this._configuration.cullAboveGround = t14.multipassTerrain.cullAboveGround, this._configuration.hasModelTransformation = null != this.parameters.modelTransformation, e10 !== o2.Color && e10 !== o2.Alpha || (this._configuration.hasVertexColors = this.parameters.hasVertexColors, this._configuration.hasSymbolColors = this.parameters.hasSymbolColors, this.parameters.treeRendering ? this._configuration.doubleSidedMode = i5.WindingOrder : this._configuration.doubleSidedMode = this.parameters.doubleSided && "normal" === this.parameters.doubleSidedType ? i5.View : this.parameters.doubleSided && "winding-order" === this.parameters.doubleSidedType ? i5.WindingOrder : i5.None, this._configuration.instancedColor = this.parameters.hasInstancedColor, this._configuration.receiveShadows = this.parameters.receiveShadows && this.parameters.shadowMappingEnabled, this._configuration.receiveAmbientOcclusion = this.parameters.receiveAmbientOcclusion && null != t14.ssao, this._configuration.vvColor = !!this.parameters.vvColor, this._configuration.textureAlphaPremultiplied = !!this.parameters.textureAlphaPremultiplied, this._configuration.pbrMode = this.parameters.usePBR ? this.parameters.isSchematic ? c2.Schematic : c2.Normal : c2.Disabled, this._configuration.hasMetallicRoughnessTexture = !!this.parameters.metallicRoughnessTextureId, this._configuration.hasEmissionTexture = !!this.parameters.emissiveTextureId, this._configuration.hasOcclusionTexture = !!this.parameters.occlusionTextureId, this._configuration.offsetBackfaces = !(!this.parameters.transparent || !this.parameters.offsetTransparentBackfaces), this._configuration.transparencyPassType = t14.transparencyPassType, this._configuration.enableOffset = t14.camera.relativeElevation < S3, this._configuration.snowCover = this.hasSnowCover(t14), this._configuration.hasColorTextureTransform = !!this.parameters.colorTextureTransformMatrix, this._configuration.hasNormalTextureTransform = !!this.parameters.normalTextureTransformMatrix, this._configuration.hasEmissionTextureTransform = !!this.parameters.emissiveTextureTransformMatrix, this._configuration.hasOcclusionTextureTransform = !!this.parameters.occlusionTextureTransformMatrix, this._configuration.hasMetallicRoughnessTextureTransform = !!this.parameters.metallicRoughnessTextureTransformMatrix), this._configuration;
  }
  hasSnowCover(e10) {
    return null != e10.weather && e10.weatherVisible && "snowy" === e10.weather.type && "enabled" === e10.weather.snowCover;
  }
  intersect(h6, l6, u5, m, p, f5) {
    if (null != this.parameters.verticalOffset) {
      const h7 = u5.camera;
      o(H2, l6[12], l6[13], l6[14]);
      let f6 = null;
      switch (u5.viewingMode) {
        case l2.Global:
          f6 = z(G, H2);
          break;
        case l2.Local:
          f6 = r2(G, z3);
      }
      let d3 = 0;
      const g2 = e4(W, H2, h7.eye), T2 = s2(g2), _4 = g(g2, g2, 1 / T2);
      let x2 = null;
      this.parameters.screenSizePerspective && (x2 = P(f6, _4)), d3 += o5(h7, T2, this.parameters.verticalOffset, x2 ?? 0, this.parameters.screenSizePerspective), g(f6, f6, d3), S(k2, f6, u5.transform.inverseRotation), m = e4(V, m, k2), p = e4(B, p, k2);
    }
    h5(h6, u5, m, p, d2(u5.verticalOffset), f5);
  }
  createGLMaterial(e10) {
    return new j2(e10);
  }
  createBufferWriter() {
    return new r7(this._vertexBufferLayout);
  }
};
var j2 = class extends u3 {
  constructor(e10) {
    super({ ...e10, ...e10.material.parameters });
  }
  _updateShadowState(e10) {
    e10.shadowMap.enabled !== this._material.parameters.shadowMappingEnabled && this._material.setParameters({ shadowMappingEnabled: e10.shadowMap.enabled });
  }
  _updateOccludeeState(e10) {
    e10.hasOccludees !== this._material.parameters.hasOccludees && this._material.setParameters({ hasOccludees: e10.hasOccludees });
  }
  beginSlot(t14) {
    this._output !== o2.Color && this._output !== o2.Alpha || (this._updateShadowState(t14), this._updateOccludeeState(t14));
    const r12 = this._material.parameters;
    this.updateTexture(r12.textureId);
    const s6 = t14.camera.viewInverseTransposeMatrix;
    return o(r12.origin, s6[3], s6[7], s6[11]), this._material.setParameters(this.textureBindParameters), this.ensureTechnique(r12.treeRendering ? t13 : q, t14);
  }
};
var L2 = class extends _3 {
  constructor() {
    super(...arguments), this.initTextureTransparent = false, this.treeRendering = false, this.hasVertexTangents = false;
  }
};
var D2 = new L2();
function N2(e10) {
  const t14 = H().vec3f(e7.POSITION);
  e10.normalType === a3.Compressed ? t14.vec2i16(e7.NORMALCOMPRESSED, { glNormalized: true }) : t14.vec3f(e7.NORMAL), e10.hasVertexTangents && t14.vec4f(e7.TANGENT);
  return (e10.textureId || e10.normalTextureId || e10.metallicRoughnessTextureId || e10.emissiveTextureId || e10.occlusionTextureId) && t14.vec2f(e7.UV0), e10.hasVertexColors && t14.vec4u8(e7.COLOR), e10.hasSymbolColors && t14.vec4u8(e7.SYMBOLCOLOR), has("enable-feature:objectAndLayerId-rendering") && t14.vec4u8(e7.OBJECTANDLAYERIDCOLOR), t14;
}
var V = n2();
var B = n2();
var z3 = r(0, 0, 1);
var G = n2();
var k2 = n2();
var H2 = n2();
var W = n2();

// node_modules/@arcgis/core/views/3d/layers/graphics/wosrLoader.js
var v2 = () => n.getLogger("esri.views.3d.layers.graphics.objectResourceUtils");
async function A4(e10, t14) {
  const n8 = await j3(e10, t14), s6 = await E3(n8.textureDefinitions ?? {}, t14);
  let a5 = 0;
  for (const r12 in s6)
    if (s6.hasOwnProperty(r12)) {
      const e11 = s6[r12];
      a5 += (e11 == null ? void 0 : e11.image) ? e11.image.width * e11.image.height * 4 : 0;
    }
  return { resource: n8, textures: s6, size: a5 + e2(n8) };
}
async function j3(r12, n8) {
  const s6 = n8 == null ? void 0 : n8.streamDataRequester;
  if (s6)
    return I3(r12, s6, n8);
  const a5 = await _(U(r12, n8));
  if (true === a5.ok)
    return a5.value.data;
  a(a5.error), P3(a5.error);
}
async function I3(e10, r12, n8) {
  const s6 = await _(r12.request(e10, "json", n8));
  if (true === s6.ok)
    return s6.value;
  a(s6.error), P3(s6.error.details.url);
}
function P3(e10) {
  throw new s("", `Request for object resource failed: ${e10}`);
}
function M(e10) {
  const t14 = e10.params, r12 = t14.topology;
  let n8 = true;
  switch (t14.vertexAttributes || (v2().warn("Geometry must specify vertex attributes"), n8 = false), t14.topology) {
    case "PerAttributeArray":
      break;
    case "Indexed":
    case null:
    case void 0: {
      const e11 = t14.faces;
      if (e11) {
        if (t14.vertexAttributes)
          for (const r13 in t14.vertexAttributes) {
            const t15 = e11[r13];
            (t15 == null ? void 0 : t15.values) ? (null != t15.valueType && "UInt32" !== t15.valueType && (v2().warn(`Unsupported indexed geometry indices type '${t15.valueType}', only UInt32 is currently supported`), n8 = false), null != t15.valuesPerElement && 1 !== t15.valuesPerElement && (v2().warn(`Unsupported indexed geometry values per element '${t15.valuesPerElement}', only 1 is currently supported`), n8 = false)) : (v2().warn(`Indexed geometry does not specify face indices for '${r13}' attribute`), n8 = false);
          }
      } else
        v2().warn("Indexed geometries must specify faces"), n8 = false;
      break;
    }
    default:
      v2().warn(`Unsupported topology '${r12}'`), n8 = false;
  }
  e10.params.material || (v2().warn("Geometry requires material"), n8 = false);
  const s6 = e10.params.vertexAttributes;
  for (const a5 in s6) {
    s6[a5].values || (v2().warn("Geometries with externally defined attributes are not yet supported"), n8 = false);
  }
  return n8;
}
function T(e10, t14) {
  var _a, _b;
  const r12 = new Array(), n8 = new Array(), s6 = new Array(), o11 = new t7(), u5 = e10.resource, c6 = r3.parse(u5.version || "1.0", "wosr");
  q2.validate(c6);
  const p = u5.model.name, g2 = u5.model.geometries, h6 = u5.materialDefinitions ?? {}, v3 = e10.textures;
  let A5 = 0;
  const j4 = /* @__PURE__ */ new Map();
  for (let a5 = 0; a5 < g2.length; a5++) {
    const e11 = g2[a5];
    if (!M(e11))
      continue;
    const i6 = k3(e11), u6 = e11.params.vertexAttributes, c7 = [], p2 = (t15) => {
      if ("PerAttributeArray" === e11.params.topology)
        return null;
      const r13 = e11.params.faces;
      for (const e12 in r13)
        if (e12 === t15)
          return r13[e12].values;
      return null;
    }, I4 = u6[e7.POSITION], P4 = I4.values.length / I4.valuesPerElement;
    for (const t15 in u6) {
      const e12 = u6[t15], r13 = e12.values, n9 = p2(t15) ?? l3(P4);
      c7.push([t15, new t3(r13, n9, e12.valuesPerElement, true)]);
    }
    const T2 = i6.texture, U3 = v3 && v3[T2];
    if (U3 && !j4.has(T2)) {
      const { image: e12, parameters: t15 } = U3, r13 = new N(e12, t15);
      n8.push(r13), j4.set(T2, r13);
    }
    const E4 = j4.get(T2), q3 = E4 ? E4.id : void 0, R2 = i6.material;
    let B2 = o11.get(R2, T2);
    if (null == B2) {
      const e12 = h6[R2.substring(R2.lastIndexOf("/") + 1)].params;
      1 === e12.transparency && (e12.transparency = 0);
      const r13 = U3 && U3.alphaChannelUsage, n9 = e12.transparency > 0 || "transparency" === r13 || "maskAndTransparency" === r13, s7 = U3 ? O5(U3.alphaChannelUsage) : void 0, a6 = { ambient: e3(e12.diffuse), diffuse: e3(e12.diffuse), opacity: 1 - (e12.transparency || 0), transparent: n9, textureAlphaMode: s7, textureAlphaCutoff: 0.33, textureId: q3, initTextureTransparent: true, doubleSided: true, cullFace: e8.None, colorMixMode: e12.externalColorMixMode || "tint", textureAlphaPremultiplied: (U3 == null ? void 0 : U3.parameters.preMultiplyAlpha) ?? false };
      (t14 == null ? void 0 : t14.materialParameters) && Object.assign(a6, t14.materialParameters), B2 = new E2(a6), o11.set(R2, T2, B2);
    }
    s6.push(B2);
    const C = new I(B2, c7);
    A5 += ((_b = (_a = c7.find((e12) => e12[0] === e7.POSITION)) == null ? void 0 : _a[1]) == null ? void 0 : _b.indices.length) ?? 0, r12.push(C);
  }
  return { engineResources: [{ name: p, stageResources: { textures: n8, materials: s6, geometries: r12 }, pivotOffset: u5.model.pivotOffset, numberOfVertices: A5, lodThreshold: null }], referenceBoundingBox: U2(r12) };
}
function U2(e10) {
  const t14 = P2();
  return e10.forEach((e11) => {
    const r12 = e11.boundingInfo;
    null != r12 && (h(t14, r12.bbMin), h(t14, r12.bbMax));
  }), t14;
}
async function E3(e10, t14) {
  const r12 = new Array();
  for (const a5 in e10) {
    const n9 = e10[a5], s7 = n9.images[0].data;
    if (!s7) {
      v2().warn("Externally referenced texture data is not yet supported");
      continue;
    }
    const o11 = n9.encoding + ";base64," + s7, i6 = "/textureDefinitions/" + a5, l6 = "rgba" === n9.channels ? n9.alphaChannelUsage || "transparency" : "none", u5 = { noUnpackFlip: true, wrap: { s: D.REPEAT, t: D.REPEAT }, preMultiplyAlpha: O5(l6) !== s3.Opaque }, c6 = null != t14 && t14.disableTextures ? Promise.resolve(null) : t8(o11, t14);
    r12.push(c6.then((e11) => ({ refId: i6, image: e11, parameters: u5, alphaChannelUsage: l6 })));
  }
  const n8 = await Promise.all(r12), s6 = {};
  for (const a5 of n8)
    s6[a5.refId] = a5;
  return s6;
}
function O5(e10) {
  switch (e10) {
    case "mask":
      return s3.Mask;
    case "maskAndTransparency":
      return s3.MaskBlend;
    case "none":
      return s3.Opaque;
    default:
      return s3.Blend;
  }
}
function k3(e10) {
  const t14 = e10.params;
  return { id: 1, material: t14.material, texture: t14.texture, region: t14.texture };
}
var q2 = new r3(1, 2, "wosr");

// node_modules/@arcgis/core/views/3d/layers/graphics/objectResourceUtils.js
async function Y(t14, r12) {
  var _a;
  const o11 = Z(a2(t14));
  if ("wosr" === o11.fileType) {
    const e10 = await (r12.cache ? r12.cache.loadWOSR(o11.url, r12) : A4(o11.url, r12)), { engineResources: t15, referenceBoundingBox: s7 } = T(e10, r12);
    return { lods: t15, referenceBoundingBox: s7, isEsriSymbolResource: false, isWosr: true };
  }
  const s6 = await (r12.cache ? r12.cache.loadGLTF(o11.url, r12, !!r12.usePBR) : l4(new n7(r12.streamDataRequester), o11.url, r12, r12.usePBR)), i6 = (_a = s6.model.meta) == null ? void 0 : _a.ESRI_proxyEllipsoid, n8 = s6.meta.isEsriSymbolResource && null != i6 && "EsriRealisticTreesStyle" === s6.meta.ESRI_webstyle;
  n8 && !s6.customMeta.esriTreeRendering && (s6.customMeta.esriTreeRendering = true, ie(s6, i6));
  const l6 = !!r12.usePBR, a5 = s6.meta.isEsriSymbolResource ? { usePBR: l6, isSchematic: false, treeRendering: n8, mrrFactors: [...o10] } : { usePBR: l6, isSchematic: false, treeRendering: false, mrrFactors: [...r10] }, u5 = { ...r12.materialParameters, treeRendering: n8 }, { engineResources: c6, referenceBoundingBox: m } = ee(s6, a5, u5, r12.skipHighLods && null == o11.specifiedLodIndex ? { skipHighLods: true } : { skipHighLods: false, singleLodIndex: o11.specifiedLodIndex });
  return { lods: c6, referenceBoundingBox: m, isEsriSymbolResource: s6.meta.isEsriSymbolResource, isWosr: false };
}
function Z(e10) {
  const t14 = e10.match(/(.*\.(gltf|glb))(\?lod=([0-9]+))?$/);
  if (t14)
    return { fileType: "gltf", url: t14[1], specifiedLodIndex: null != t14[4] ? Number(t14[4]) : null };
  return e10.match(/(.*\.(json|json\.gz))$/) ? { fileType: "wosr", url: e10, specifiedLodIndex: null } : { fileType: "unknown", url: e10, specifiedLodIndex: null };
}
function ee(e10, t14, r12, o11) {
  const s6 = e10.model, i6 = new Array(), n8 = /* @__PURE__ */ new Map(), l6 = /* @__PURE__ */ new Map(), a5 = s6.lods.length, u5 = P2();
  return s6.lods.forEach((e11, c6) => {
    const m = true === o11.skipHighLods && (a5 > 1 && 0 === c6 || a5 > 3 && 1 === c6) || false === o11.skipHighLods && null != o11.singleLodIndex && c6 !== o11.singleLodIndex;
    if (m && 0 !== c6)
      return;
    const f5 = new t12(e11.name, e11.lodThreshold, [0, 0, 0]);
    e11.parts.forEach((e12) => {
      const o12 = m ? new E2({}) : te(s6, e12, f5, t14, r12, n8, l6), { geometry: i7, vertexCount: a6 } = re(e12, null != o12 ? o12 : new E2({})), d3 = i7.boundingInfo;
      null != d3 && 0 === c6 && (h(u5, d3.bbMin), h(u5, d3.bbMax)), null != o12 && (f5.stageResources.geometries.push(i7), f5.numberOfVertices += a6);
    }), m || i6.push(f5);
  }), { engineResources: i6, referenceBoundingBox: u5 };
}
function te(e10, t14, r12, o11, s6, n8, l6) {
  var _a, _b;
  const a5 = t14.material + (t14.attributes.normal ? "_normal" : "") + (t14.attributes.color ? "_color" : "") + (t14.attributes.texCoord0 ? "_texCoord0" : "") + (t14.attributes.tangent ? "_tangent" : ""), u5 = e10.materials.get(t14.material), c6 = null != t14.attributes.texCoord0, m = null != t14.attributes.normal;
  if (null == u5)
    return null;
  const f5 = se(u5.alphaMode);
  if (!n8.has(a5)) {
    if (c6) {
      const t15 = (t16, r14 = false) => {
        if (null != t16 && !l6.has(t16)) {
          const o12 = e10.textures.get(t16);
          if (null != o12) {
            const e11 = o12.data;
            l6.set(t16, new N(r6(e11) ? e11.data : e11, { ...o12.parameters, preMultiplyAlpha: !r6(e11) && r14, encoding: r6(e11) && null != e11.encoding ? e11.encoding : void 0 }));
          }
        }
      };
      t15(u5.textureColor, f5 !== s3.Opaque), t15(u5.textureNormal), t15(u5.textureOcclusion), t15(u5.textureEmissive), t15(u5.textureMetallicRoughness);
    }
    const r13 = u5.color[0] ** (1 / o4), d4 = u5.color[1] ** (1 / o4), p = u5.color[2] ** (1 / o4), g2 = u5.emissiveFactor[0] ** (1 / o4), x2 = u5.emissiveFactor[1] ** (1 / o4), b = u5.emissiveFactor[2] ** (1 / o4), h6 = null != u5.textureColor && c6 ? l6.get(u5.textureColor) : null, T2 = u4({ normalTexture: u5.textureNormal, metallicRoughnessTexture: u5.textureMetallicRoughness, metallicFactor: u5.metallicFactor, roughnessFactor: u5.roughnessFactor, emissiveTexture: u5.textureEmissive, emissiveFactor: u5.emissiveFactor, occlusionTexture: u5.textureOcclusion }), w = null != ((_a = u5.normalTextureTransform) == null ? void 0 : _a.scale) ? (_b = u5.normalTextureTransform) == null ? void 0 : _b.scale : l;
    n8.set(a5, new E2({ ...o11, transparent: f5 === s3.Blend, customDepthTest: n5.Lequal, textureAlphaMode: f5, textureAlphaCutoff: u5.alphaCutoff, diffuse: [r13, d4, p], ambient: [r13, d4, p], opacity: u5.opacity, doubleSided: u5.doubleSided, doubleSidedType: "winding-order", cullFace: u5.doubleSided ? e8.None : e8.Back, hasVertexColors: !!t14.attributes.color, hasVertexTangents: !!t14.attributes.tangent, normalType: m ? a3.Attribute : a3.ScreenDerivative, castShadows: true, receiveShadows: u5.receiveShadows, receiveAmbientOcclusion: u5.receiveAmbientOcclustion, textureId: null != h6 ? h6.id : void 0, colorMixMode: u5.colorMixMode, normalTextureId: null != u5.textureNormal && c6 ? l6.get(u5.textureNormal).id : void 0, textureAlphaPremultiplied: null != h6 && !!h6.parameters.preMultiplyAlpha, occlusionTextureId: null != u5.textureOcclusion && c6 ? l6.get(u5.textureOcclusion).id : void 0, emissiveTextureId: null != u5.textureEmissive && c6 ? l6.get(u5.textureEmissive).id : void 0, metallicRoughnessTextureId: null != u5.textureMetallicRoughness && c6 ? l6.get(u5.textureMetallicRoughness).id : void 0, emissiveFactor: [g2, x2, b], mrrFactors: T2 ? [...t10] : [u5.metallicFactor, u5.roughnessFactor, o11.mrrFactors[2]], isSchematic: T2, colorTextureTransformMatrix: s4(u5.colorTextureTransform), normalTextureTransformMatrix: s4(u5.normalTextureTransform), scale: [w[0], w[1]], occlusionTextureTransformMatrix: s4(u5.occlusionTextureTransform), emissiveTextureTransformMatrix: s4(u5.emissiveTextureTransform), metallicRoughnessTextureTransformMatrix: s4(u5.metallicRoughnessTextureTransform), ...s6 }));
  }
  const d3 = n8.get(a5);
  if (r12.stageResources.materials.push(d3), c6) {
    const e11 = (e12) => {
      null != e12 && r12.stageResources.textures.push(l6.get(e12));
    };
    e11(u5.textureColor), e11(u5.textureNormal), e11(u5.textureOcclusion), e11(u5.textureEmissive), e11(u5.textureMetallicRoughness);
  }
  return d3;
}
function re(e10, r12) {
  const o11 = e10.attributes.position.count, s6 = o3(e10.indices || o11, e10.primitiveType), i6 = t6(3 * o11), { typedBuffer: n8, typedBufferStride: l6 } = e10.attributes.position;
  r5(i6, n8, e10.transform, 3, l6);
  const a5 = [[e7.POSITION, new t3(i6, s6, 3, true)]];
  if (null != e10.attributes.normal) {
    const r13 = t6(3 * o11), { typedBuffer: i7, typedBufferStride: n9 } = e10.attributes.normal;
    j(oe, e10.transform), n4(r13, i7, oe, 3, n9), a5.push([e7.NORMAL, new t3(r13, s6, 3, true)]);
  }
  if (null != e10.attributes.tangent) {
    const r13 = t6(4 * o11), { typedBuffer: i7, typedBufferStride: n9 } = e10.attributes.tangent;
    j(oe, e10.transform), f(r13, i7, oe, 4, n9), a5.push([e7.TANGENT, new t3(r13, s6, 4, true)]);
  }
  if (null != e10.attributes.texCoord0) {
    const t14 = t6(2 * o11), { typedBuffer: r13, typedBufferStride: i7 } = e10.attributes.texCoord0;
    n6(t14, r13, 2, i7), a5.push([e7.UV0, new t3(t14, s6, 2, true)]);
  }
  if (null != e10.attributes.color) {
    const t14 = new Uint8Array(4 * o11);
    4 === e10.attributes.color.elementCount ? e10.attributes.color instanceof c ? u2(t14, e10.attributes.color, 255) : e10.attributes.color instanceof x ? t5(t14, e10.attributes.color) : e10.attributes.color instanceof L && u2(t14, e10.attributes.color, 1 / 256) : (t14.fill(255), e10.attributes.color instanceof i3 ? u(t14, e10.attributes.color, 255, 4) : e10.attributes.color instanceof O2 ? t4(t14, e10.attributes.color.typedBuffer, 4, e10.attributes.color.typedBufferStride) : e10.attributes.color instanceof E && u(t14, e10.attributes.color, 1 / 256, 4)), a5.push([e7.COLOR, new t3(t14, s6, 4, true)]);
  }
  return { geometry: new I(r12, a5), vertexCount: o11 };
}
var oe = e6();
function se(e10) {
  switch (e10) {
    case "BLEND":
      return s3.Blend;
    case "MASK":
      return s3.Mask;
    case "OPAQUE":
    case null:
    case void 0:
      return s3.Opaque;
  }
}
function ie(e10, t14) {
  for (let r12 = 0; r12 < e10.model.lods.length; ++r12) {
    const i6 = e10.model.lods[r12];
    for (const d3 of i6.parts) {
      const i7 = d3.attributes.normal;
      if (null == i7)
        return;
      const p = d3.attributes.position, g2 = p.count, x2 = n2(), h6 = n2(), w = n2(), y = new Uint8Array(4 * g2), v3 = new Float64Array(3 * g2), R2 = h2(e5(), d3.transform);
      let j4 = 0, M2 = 0;
      for (let o11 = 0; o11 < g2; o11++) {
        p.getVec(o11, h6), i7.getVec(o11, x2), O(h6, h6, d3.transform), e4(w, h6, t14.center), i(w, w, t14.radius);
        const s6 = w[2], f5 = s2(w), g3 = Math.min(0.45 + 0.55 * f5 * f5, 1);
        i(w, w, t14.radius), null !== R2 && O(w, w, R2), z(w, w), r12 + 1 !== e10.model.lods.length && e10.model.lods.length > 1 && A(w, w, x2, s6 > -1 ? 0.2 : Math.min(-4 * s6 - 3.8, 1)), v3[j4] = w[0], v3[j4 + 1] = w[1], v3[j4 + 2] = w[2], j4 += 3, y[M2] = 255 * g3, y[M2 + 1] = 255 * g3, y[M2 + 2] = 255 * g3, y[M2 + 3] = 255, M2 += 4;
      }
      d3.attributes.normal = new i3(v3), d3.attributes.color = new x(y);
    }
  }
}

export {
  s4 as s,
  k,
  E2 as E,
  A4 as A,
  Y,
  Z,
  ee
};
//# sourceMappingURL=chunk-NT7TKMWH.js.map
