{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/SSAOBlur.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{q as e}from\"./vec32.js\";import{ScreenSpacePass as r}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{ReadDepth as o}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadDepth.glsl.js\";import{Float2DrawUniform as t}from\"../views/3d/webgl-engine/core/shaderModules/Float2DrawUniform.js\";import{FloatPassUniform as a}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as l}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as n}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DDrawUniform as s}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DDrawUniform.js\";import{Texture2DPassUniform as d}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";const i=4;function f(){const f=new n,u=f.fragment;f.include(r);const c=(i+1)/2,p=1/(2*c*c);return u.include(o),u.uniforms.add(new d(\"depthMap\",(e=>e.depthTexture)),new s(\"tex\",(e=>e.colorTexture)),new t(\"blurSize\",(e=>e.blurSize)),new a(\"projScale\",((r,o)=>{const t=e(o.camera.eye,o.camera.center);return t>5e4?Math.max(0,r.projScale-(t-5e4)):r.projScale}))),u.code.add(l`\n    void blurFunction(vec2 uv, float r, float center_d, float sharpness, inout float wTotal, inout float bTotal) {\n      float c = texture(tex, uv).r;\n      float d = linearDepthFromTexture(depthMap, uv);\n\n      float ddiff = d - center_d;\n\n      float w = exp(-r * r * ${l.float(p)} - ddiff * ddiff * sharpness);\n      wTotal += w;\n      bTotal += w * c;\n    }\n  `),f.outputs.add(\"fragBlur\",\"float\"),u.code.add(l`\n    void main(void) {\n      float b = 0.0;\n      float w_total = 0.0;\n\n      float center_d = linearDepthFromTexture(depthMap, uv);\n\n      float sharpness = -0.05 * projScale / center_d;\n      for (int r = -${l.int(i)}; r <= ${l.int(i)}; ++r) {\n        float rf = float(r);\n        vec2 uvOffset = uv + rf * blurSize;\n        blurFunction(uvOffset, rf, center_d, sharpness, w_total, b);\n      }\n\n      fragBlur = b / w_total;\n    }\n  `),f}const u=Object.freeze(Object.defineProperty({__proto__:null,build:f},Symbol.toStringTag,{value:\"Module\"}));export{u as S,f as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIkzB,IAAM,IAAE;AAAE,SAAS,IAAG;AAAC,QAAMA,KAAE,IAAIC,MAAEC,KAAEF,GAAE;AAAS,EAAAA,GAAE,QAAQC,EAAC;AAAE,QAAME,MAAG,IAAE,KAAG,GAAE,IAAE,KAAG,IAAEA,KAAEA;AAAG,SAAOD,GAAE,QAAQ,CAAC,GAAEA,GAAE,SAAS,IAAI,IAAIE,GAAE,YAAY,OAAG,EAAE,YAAa,GAAE,IAAI,EAAE,OAAO,OAAG,EAAE,YAAa,GAAE,IAAIH,GAAE,YAAY,OAAG,EAAE,QAAS,GAAE,IAAIA,GAAE,aAAa,CAAC,GAAEA,OAAI;AAAC,UAAM,IAAE,EAAEA,GAAE,OAAO,KAAIA,GAAE,OAAO,MAAM;AAAE,WAAO,IAAE,MAAI,KAAK,IAAI,GAAE,EAAE,aAAW,IAAE,IAAI,IAAE,EAAE;AAAA,EAAS,CAAE,CAAC,GAAEC,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAOroC,EAAE,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,GAItC,GAAEF,GAAE,QAAQ,IAAI,YAAW,OAAO,GAAEE,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQ5B,EAAE,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQ7C,GAAEF;AAAC;AAAC,IAAM,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAM,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["f", "o", "u", "c", "s"]
}
