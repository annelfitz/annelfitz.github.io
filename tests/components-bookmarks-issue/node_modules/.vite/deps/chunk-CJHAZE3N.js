import {
  s2 as s
} from "./chunk-P6IY7ZIQ.js";
import {
  o
} from "./chunk-M7V6LN55.js";
import {
  f as f2
} from "./chunk-MBGZKT2Z.js";
import {
  n
} from "./chunk-RUN6MNXL.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a,
  v
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";

// node_modules/@arcgis/core/rest/networks/support/TraceLocation.js
var i = new n({ startingPoint: "starting-point", barrier: "barrier" });
var p = class extends f {
  constructor(r) {
    super(r), this.globalId = null, this.isFilterBarrier = false, this.percentAlong = null, this.terminalId = null, this.type = null;
  }
};
e([y({ type: String, json: { write: true } })], p.prototype, "globalId", void 0), e([y({ type: Boolean, json: { write: true } })], p.prototype, "isFilterBarrier", void 0), e([y({ type: Number, json: { write: true } })], p.prototype, "percentAlong", void 0), e([y({ type: Number, json: { write: true } })], p.prototype, "terminalId", void 0), e([y({ type: i.apiValues, json: { type: i.jsonValues, read: { reader: i.read, source: "traceLocationType" }, write: { writer: i.write, target: "traceLocationType" } } })], p.prototype, "type", void 0), p = e([a("esri.rest.networks.support.TraceLocation")], p);
var a2 = p;

// node_modules/@arcgis/core/rest/networks/support/TraceParameters.js
var c;
var l = c = class extends f {
  static from(t) {
    return v(c, t);
  }
  constructor(t) {
    super(t), this.namedTraceConfigurationGlobalId = null, this.gdbVersion = null, this.traceLocations = [], this.moment = null, this.outSpatialReference = null, this.traceConfiguration = null, this.resultTypes = null, this.traceType = null;
  }
};
e([y({ type: String, json: { read: { source: "traceConfigurationGlobalId" }, write: { target: "traceConfigurationGlobalId" } } })], l.prototype, "namedTraceConfigurationGlobalId", void 0), e([y({ type: String, json: { write: true } })], l.prototype, "gdbVersion", void 0), e([y({ type: [a2], json: { write: true } })], l.prototype, "traceLocations", void 0), e([y({ type: Date, json: { type: Number, write: { writer: (t, o2) => {
  o2.moment = t ? t.getTime() : null;
} } } })], l.prototype, "moment", void 0), e([y({ type: f2, json: { read: false } })], l.prototype, "outSpatialReference", void 0), e([y({ type: s, json: { write: true } })], l.prototype, "traceConfiguration", void 0), e([y({ type: [Object], json: { write: true } })], l.prototype, "resultTypes", void 0), e([y({ type: o.apiValues, json: { type: o.jsonValues, read: o.read, write: o.write } })], l.prototype, "traceType", void 0), l = c = e([a("esri.rest.networks.support.TraceParameters")], l);
var u = l;

export {
  a2 as a,
  u
};
//# sourceMappingURL=chunk-CJHAZE3N.js.map
