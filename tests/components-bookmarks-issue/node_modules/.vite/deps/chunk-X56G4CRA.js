import {
  d
} from "./chunk-2AZYPUKO.js";
import {
  _
} from "./chunk-5Y24AKE7.js";
import {
  C,
  L
} from "./chunk-YULKNNDN.js";
import {
  I,
  P,
  y as y2
} from "./chunk-SA77Z3WI.js";
import {
  i
} from "./chunk-QMPD4WXY.js";
import {
  l as l2
} from "./chunk-AHEDDTVZ.js";
import {
  e as e2
} from "./chunk-XW3FDKYP.js";
import {
  l
} from "./chunk-CYVKDANA.js";
import {
  j
} from "./chunk-4ZLXDMI5.js";
import {
  t
} from "./chunk-SBARCIDP.js";
import {
  t as t2
} from "./chunk-UUG4W2PI.js";
import {
  u
} from "./chunk-WW22JHXA.js";
import {
  S
} from "./chunk-ZAM62XN5.js";
import {
  c,
  f as f3,
  v,
  w
} from "./chunk-RKVEKQ5O.js";
import {
  b
} from "./chunk-G7FOE26O.js";
import {
  t as t3
} from "./chunk-ZIJHDTB7.js";
import {
  o as o2
} from "./chunk-TGXFDJCS.js";
import {
  s as s2
} from "./chunk-LRW6CHFI.js";
import {
  m
} from "./chunk-ONK5AE7R.js";
import {
  n as n3
} from "./chunk-TPLOIZC7.js";
import {
  n as n2
} from "./chunk-Z2PDA67N.js";
import {
  f as f2
} from "./chunk-MBGZKT2Z.js";
import {
  o
} from "./chunk-YOPMY6TS.js";
import {
  U,
  V as V2
} from "./chunk-SAYWXQVM.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  a as a2
} from "./chunk-JGDJR5EV.js";
import {
  a,
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfo.js
var e3 = class extends f {
  constructor() {
    super(...arguments), this.type = null;
  }
};
e([y({ type: String, readOnly: true, json: { write: true } })], e3.prototype, "type", void 0), e3 = e([a3("esri.layers.support.BuildingFilterAuthoringInfo")], e3);
var p = e3;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoType.js
var i2;
var p2 = i2 = class extends f {
  constructor() {
    super(...arguments), this.filterType = null, this.filterValues = null;
  }
  clone() {
    return new i2({ filterType: this.filterType, filterValues: a(this.filterValues) });
  }
};
e([y({ type: String, json: { write: true } })], p2.prototype, "filterType", void 0), e([y({ type: [String], json: { write: true } })], p2.prototype, "filterValues", void 0), p2 = i2 = e([a3("esri.layers.support.BuildingFilterAuthoringInfoType")], p2);
var l3 = p2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoBlock.js
var c2;
var l4 = V.ofType(l3);
var m2 = c2 = class extends f {
  clone() {
    return new c2({ filterTypes: a(this.filterTypes) });
  }
};
e([y({ type: l4, json: { write: true } })], m2.prototype, "filterTypes", void 0), m2 = c2 = e([a3("esri.layers.support.BuildingFilterAuthoringInfoBlock")], m2);
var n4 = m2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoCheckbox.js
var p3;
var l5 = V.ofType(n4);
var n5 = p3 = class extends p {
  constructor() {
    super(...arguments), this.type = "checkbox";
  }
  clone() {
    return new p3({ filterBlocks: a(this.filterBlocks) });
  }
};
e([y({ type: ["checkbox"] })], n5.prototype, "type", void 0), e([y({ type: l5, json: { write: true } })], n5.prototype, "filterBlocks", void 0), n5 = p3 = e([a3("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")], n5);
var m3 = n5;

// node_modules/@arcgis/core/layers/support/BuildingFilterMode.js
var t4 = class extends f {
};
e([y({ readOnly: true, json: { read: false } })], t4.prototype, "type", void 0), t4 = e([a3("esri.layers.support.BuildingFilterMode")], t4);
var p4 = t4;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeSolid.js
var t5;
var p5 = t5 = class extends p4 {
  constructor() {
    super(...arguments), this.type = "solid";
  }
  clone() {
    return new t5();
  }
};
e([y({ type: ["solid"], readOnly: true, json: { write: true } })], p5.prototype, "type", void 0), p5 = t5 = e([a3("esri.layers.support.BuildingFilterModeSolid")], p5);
var i3 = p5;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeWireFrame.js
var c3;
var m4 = c3 = class extends p4 {
  constructor() {
    super(...arguments), this.type = "wire-frame", this.edges = null;
  }
  clone() {
    return new c3({ edges: a(this.edges) });
  }
};
e([o2({ wireFrame: "wire-frame" })], m4.prototype, "type", void 0), e([y(t3)], m4.prototype, "edges", void 0), m4 = c3 = e([a3("esri.layers.support.BuildingFilterModeWireFrame")], m4);
var a4 = m4;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeXRay.js
var t6;
var p6 = t6 = class extends p4 {
  constructor() {
    super(...arguments), this.type = "x-ray";
  }
  clone() {
    return new t6();
  }
};
e([y({ type: ["x-ray"], readOnly: true, json: { write: true } })], p6.prototype, "type", void 0), p6 = t6 = e([a3("esri.layers.support.BuildingFilterModeXRay")], p6);
var c4 = p6;

// node_modules/@arcgis/core/layers/support/BuildingFilterBlock.js
var d2;
var a5 = { nonNullable: true, types: { key: "type", base: p4, typeMap: { solid: i3, "wire-frame": a4, "x-ray": c4 } }, json: { read: (e4) => {
  switch (e4 == null ? void 0 : e4.type) {
    case "solid":
      return i3.fromJSON(e4);
    case "wireFrame":
      return a4.fromJSON(e4);
    case "x-ray":
      return c4.fromJSON(e4);
    default:
      return;
  }
}, write: { enabled: true, isRequired: true } } };
var m5 = d2 = class extends f {
  constructor() {
    super(...arguments), this.filterExpression = null, this.filterMode = new i3(), this.title = "";
  }
  clone() {
    return new d2({ filterExpression: this.filterExpression, filterMode: a(this.filterMode), title: this.title });
  }
};
e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], m5.prototype, "filterExpression", void 0), e([y(a5)], m5.prototype, "filterMode", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], m5.prototype, "title", void 0), m5 = d2 = e([a3("esri.layers.support.BuildingFilterBlock")], m5);
var c5 = m5;

// node_modules/@arcgis/core/layers/support/BuildingFilter.js
var d3;
var u2 = V.ofType(c5);
var m6 = d3 = class extends f {
  constructor() {
    super(...arguments), this.description = null, this.filterBlocks = null, this.id = n3(), this.name = null;
  }
  clone() {
    return new d3({ description: this.description, filterBlocks: a(this.filterBlocks), id: this.id, name: this.name, filterAuthoringInfo: a(this.filterAuthoringInfo) });
  }
};
e([y({ type: String, json: { write: true } })], m6.prototype, "description", void 0), e([y({ type: u2, json: { write: { enabled: true, isRequired: true } } })], m6.prototype, "filterBlocks", void 0), e([y({ types: { key: "type", base: p, typeMap: { checkbox: m3 } }, json: { read: (o3) => "checkbox" === (o3 == null ? void 0 : o3.type) ? m3.fromJSON(o3) : null, write: true } })], m6.prototype, "filterAuthoringInfo", void 0), e([y({ type: String, constructOnly: true, json: { write: { enabled: true, isRequired: true } } })], m6.prototype, "id", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], m6.prototype, "name", void 0), m6 = d3 = e([a3("esri.layers.support.BuildingFilter")], m6);
var f4 = m6;

// node_modules/@arcgis/core/layers/support/BuildingSummaryStatistics.js
var p7 = class extends f {
  constructor() {
    super(...arguments), this.fieldName = null, this.modelName = null, this.label = null, this.min = null, this.max = null, this.mostFrequentValues = null, this.subLayerIds = null;
  }
};
e([y({ type: String })], p7.prototype, "fieldName", void 0), e([y({ type: String })], p7.prototype, "modelName", void 0), e([y({ type: String })], p7.prototype, "label", void 0), e([y({ type: Number })], p7.prototype, "min", void 0), e([y({ type: Number })], p7.prototype, "max", void 0), e([y({ json: { read: (e4) => Array.isArray(e4) && (e4.every((e5) => "string" == typeof e5) || e4.every((e5) => "number" == typeof e5)) ? e4.slice() : null } })], p7.prototype, "mostFrequentValues", void 0), e([y({ type: [Number] })], p7.prototype, "subLayerIds", void 0), p7 = e([a3("esri.layers.support.BuildingSummaryStatistics.BuildingFieldStatistics")], p7);
var n6 = class extends m.LoadableMixin(n2(f)) {
  constructor() {
    super(...arguments), this.url = null;
  }
  get fields() {
    return this.loaded || "loading" === this.loadStatus ? this._get("fields") : (n.getLogger(this).error("building summary statistics are not loaded"), null);
  }
  load(e4) {
    const t7 = null != e4 ? e4.signal : null;
    return this.addResolvingPromise(this._fetchService(t7)), Promise.resolve(this);
  }
  async _fetchService(e4) {
    const r = (await U(this.url, { query: { f: "json" }, responseType: "json", signal: e4 })).data;
    this.read(r, { origin: "service" });
  }
};
e([y({ constructOnly: true, type: String })], n6.prototype, "url", void 0), e([y({ readOnly: true, type: [p7], json: { read: { source: "summary" } } })], n6.prototype, "fields", null), n6 = e([a3("esri.layers.support.BuildingSummaryStatistics")], n6);
var u3 = n6;

// node_modules/@arcgis/core/layers/BuildingSceneLayer.js
var C2 = V.ofType(f4);
var R = a(d.sublayersProperty);
var _a;
var U2 = (_a = R.json) == null ? void 0 : _a.origins;
U2 && (U2["web-scene"] = { type: [_], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } }, U2["portal-item"] = { type: [_], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } });
var M = class extends L(l2(u(j(t2(S(e2(i(b)))))))) {
  constructor(e4) {
    super(e4), this.operationalLayerType = "BuildingSceneLayer", this.allSublayers = new l({ getCollections: () => [this.sublayers], getChildrenFunction: (e5) => "building-group" === e5.type ? e5.sublayers : null }), this.sublayers = null, this._sublayerOverrides = null, this.filters = new C2(), this.activeFilterId = null, this.summaryStatistics = null, this.outFields = null, this.legendEnabled = true, this.type = "building-scene";
  }
  normalizeCtorArgs(e4) {
    return "string" == typeof e4 ? { url: e4 } : e4 ?? {};
  }
  destroy() {
    this.allSublayers.destroy();
  }
  readSublayers(e4, r, t7) {
    const s3 = d.readSublayers(e4, r, t7);
    return d.forEachSublayer(s3, (e5) => e5.layer = this), this._sublayerOverrides && (this.applySublayerOverrides(s3, this._sublayerOverrides), this._sublayerOverrides = null), s3;
  }
  applySublayerOverrides(e4, { overrides: r, context: t7 }) {
    d.forEachSublayer(e4, (e5) => e5.read(r.get(e5.id), t7));
  }
  readSublayerOverrides(e4, r) {
    var _a2;
    const t7 = /* @__PURE__ */ new Map();
    for (const i4 of e4)
      null != i4 && "object" == typeof i4 && "number" == typeof i4.id ? t7.set(i4.id, i4) : (_a2 = r.messages) == null ? void 0 : _a2.push(new s("building-scene-layer:invalid-sublayer-override", "Invalid value for sublayer override. Not an object or no id specified.", { value: i4 }));
    return { overrides: t7, context: r };
  }
  writeSublayerOverrides(e4, r, t7) {
    const s3 = [];
    d.forEachSublayer(this.sublayers, (e5) => {
      const r2 = e5.write({}, t7);
      Object.keys(r2).length > 1 && s3.push(r2);
    }), s3.length > 0 && (r.sublayers = s3);
  }
  writeUnappliedOverrides(e4, r) {
    r.sublayers = [], e4.overrides.forEach((e5) => {
      r.sublayers.push(a(e5));
    });
  }
  write(e4, r) {
    return e4 = super.write(e4, r), !r || "web-scene" !== r.origin && "portal-item" !== r.origin || (this.sublayers ? this.writeSublayerOverrides(this.sublayers, e4, r) : this._sublayerOverrides && this.writeUnappliedOverrides(this._sublayerOverrides, e4)), e4;
  }
  read(e4, r) {
    if (super.read(e4, r), r && ("web-scene" === r.origin || "portal-item" === r.origin) && null != e4 && Array.isArray(e4.sublayers)) {
      const t7 = this.readSublayerOverrides(e4.sublayers, r);
      this.sublayers ? this.applySublayerOverrides(this.sublayers, t7) : this._sublayerOverrides = t7;
    }
  }
  readSummaryStatistics(e4, r) {
    var _a2;
    if ("string" == typeof r.statisticsHRef) {
      const e5 = V2((_a2 = this.parsedUrl) == null ? void 0 : _a2.path, r.statisticsHRef);
      return new u3({ url: e5 });
    }
    return null;
  }
  set elevationInfo(e4) {
    this._set("elevationInfo", e4), this._validateElevationInfo();
  }
  load(e4) {
    const r = null != e4 ? e4.signal : null, t7 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e4).catch(a2).then(() => this._fetchService(r)).then(() => this._fetchAssociatedFeatureService(r));
    return this.addResolvingPromise(t7), Promise.resolve(this);
  }
  loadAll() {
    return t(this, (e4) => {
      d.forEachSublayer(this.sublayers, (r) => {
        "building-group" !== r.type && e4(r);
      }), this.summaryStatistics && e4(this.summaryStatistics);
    });
  }
  async saveAs(e4, r) {
    return this._debouncedSaveOperations(C.SAVE_AS, { ...r, getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" }, e4);
  }
  async save() {
    const e4 = { getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" };
    return this._debouncedSaveOperations(C.SAVE, e4);
  }
  validateLayer(e4) {
    if (!e4.layerType || "Building" !== e4.layerType)
      throw new s("buildingscenelayer:layer-type-not-supported", "BuildingSceneLayer does not support this layer type", { layerType: e4.layerType });
  }
  _getTypeKeywords() {
    return ["Building"];
  }
  async _fetchAssociatedFeatureService(e4) {
    try {
      const { portalItem: r } = await s2(`${this.url}/layers/${this.layerId}`, { sceneLayerItem: this.portalItem, customParameters: this.customParameters, apiKey: this.apiKey, signal: e4 });
      this.associatedFeatureServiceItem = r;
    } catch (r) {
      n.getLogger(this).warn("Associated feature service item could not be loaded", r);
    }
  }
  _validateElevationInfo() {
    const e4 = this.elevationInfo, r = "Building scene layers";
    P(n.getLogger(this), y2(r, "absolute-height", e4)), P(n.getLogger(this), I(r, e4));
  }
};
e([y({ type: ["BuildingSceneLayer"] })], M.prototype, "operationalLayerType", void 0), e([y({ readOnly: true })], M.prototype, "allSublayers", void 0), e([y(R)], M.prototype, "sublayers", void 0), e([o("service", "sublayers")], M.prototype, "readSublayers", null), e([y({ type: C2, nonNullable: true, json: { write: true } })], M.prototype, "filters", void 0), e([y({ type: String, json: { write: true } })], M.prototype, "activeFilterId", void 0), e([y({ readOnly: true, type: u3 })], M.prototype, "summaryStatistics", void 0), e([o("summaryStatistics", ["statisticsHRef"])], M.prototype, "readSummaryStatistics", null), e([y({ type: [String], json: { read: false } })], M.prototype, "outFields", void 0), e([y(v)], M.prototype, "fullExtent", void 0), e([y(c)], M.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide", "hide-children"] })], M.prototype, "listMode", void 0), e([y(w(f2))], M.prototype, "spatialReference", void 0), e([y(f3)], M.prototype, "elevationInfo", null), e([y({ json: { read: false }, readOnly: true })], M.prototype, "type", void 0), e([y()], M.prototype, "associatedFeatureServiceItem", void 0), M = e([a3("esri.layers.BuildingSceneLayer")], M);
var H = M;

export {
  i3 as i,
  c4 as c,
  c5 as c2,
  f4 as f,
  H
};
//# sourceMappingURL=chunk-X56G4CRA.js.map
