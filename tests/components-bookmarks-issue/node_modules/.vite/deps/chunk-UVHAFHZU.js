import {
  G
} from "./chunk-TCQ65UXM.js";
import {
  L,
  Te
} from "./chunk-KDAM4HTO.js";
import {
  d as d3
} from "./chunk-AKQ765JR.js";
import {
  f
} from "./chunk-QYC3GV65.js";
import {
  s
} from "./chunk-QX66UTIR.js";
import {
  i
} from "./chunk-R4CJB3GP.js";
import {
  P,
  d as d2
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import {
  S,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  d,
  k as k2
} from "./chunk-JGDJR5EV.js";
import {
  k
} from "./chunk-J2EGIWT6.js";

// node_modules/@arcgis/core/widgets/Feature/FeatureRelationship/FeatureRelationshipViewModel.js
var _ = 100;
var g = class extends i(s(S)) {
  constructor(e2) {
    super(e2), this._loaded = false, this._queryAbortController = null, this._queryPageAbortController = null, this._queryFeatureCountAbortController = null, this.featuresPerPage = 10, this.description = null, this.graphic = null, this.layer = null, this.map = null, this.orderByFields = null, this.featureCount = 0, this.relationshipId = null, this.showAllEnabled = false, this.title = null, this._cancelQuery = () => {
      const { _queryAbortController: e3 } = this;
      e3 && e3.abort(), this._queryAbortController = null;
    }, this._cancelQueryFeatureCount = () => {
      const { _queryFeatureCountAbortController: e3 } = this;
      e3 && e3.abort(), this._queryFeatureCountAbortController = null;
    }, this._cancelQueryPage = () => {
      const { _queryPageAbortController: e3 } = this;
      e3 && e3.abort(), this._queryPageAbortController = null;
    }, this._queryController = async () => {
      this._cancelQuery();
      const e3 = new AbortController();
      this._queryAbortController = e3, await d(this._query()), this._queryAbortController === e3 && (this._queryAbortController = null);
    }, this._queryFeatureCountController = async () => {
      this._loaded = false, this._cancelQueryFeatureCount();
      const e3 = new AbortController();
      this._queryFeatureCountAbortController = e3, await d(this._queryFeatureCount()), this._queryFeatureCountAbortController === e3 && (this._queryFeatureCountAbortController = null), this._loaded = true;
    }, this._queryPageController = async () => {
      const e3 = new AbortController();
      this._queryPageAbortController = e3, await d(this._queryPage()), this._queryPageAbortController === e3 && (this._queryPageAbortController = null);
    }, this._queryDebounced = k2(this._queryController, _), this._queryFeatureCountDebounced = k2(this._queryFeatureCountController, _), this._queryPageDebounced = k2(this._queryPageController, _), this._query = async () => {
      const { _queryAbortController: e3, relatedFeatures: t } = this;
      this.featureCount && (this._destroyRelatedFeatureViewModels(), this.featurePage = 1, t.removeAll(), this.destroyed || t.addMany(this._sliceFeatures(await this._queryRelatedFeatures({ signal: e3 == null ? void 0 : e3.signal }))));
    }, this.addHandles([d2(() => {
      var _a;
      return [this.displayCount, this.graphic, this.layer, (_a = this.layer) == null ? void 0 : _a.loaded, this.map, this.orderByFields, this.relationshipId, this.featuresPerPage, this.showAllEnabled, this.canQuery, this.featureCount];
    }, () => this._queryDebounced(), P), d2(() => [this.featurePage, this.showAllEnabled], () => this._queryPageDebounced()), d2(() => [this.layer, this.relationshipId, this.objectId, this.canQuery], () => this._queryFeatureCountDebounced())]);
  }
  destroy() {
    this._destroyRelatedFeatureViewModels(), this.relatedFeatures.removeAll(), this._cancelQuery(), this._cancelQueryFeatureCount(), this._cancelQueryPage();
  }
  set featurePage(e2) {
    const { featuresPerPage: t, featureCount: r } = this, o = 1, l = Math.ceil(r / t) || 1;
    this._set("featurePage", Math.min(Math.max(e2, o), l));
  }
  get featurePage() {
    return this._get("featurePage");
  }
  get orderByFieldsFixedCasing() {
    const { orderByFields: e2, relatedLayer: t } = this;
    return e2 && (t == null ? void 0 : t.loaded) ? e2.map((e3) => {
      const r = e3.clone();
      return r.field = L(e3.field, t), r;
    }) : e2 ?? [];
  }
  get supportsCacheHint() {
    var _a, _b, _c;
    return !!((_c = (_b = (_a = this.layer) == null ? void 0 : _a.capabilities) == null ? void 0 : _b.queryRelated) == null ? void 0 : _c.supportsCacheHint);
  }
  get canLoad() {
    return !!this.map && "number" == typeof this.relationshipId && "number" == typeof this.objectId;
  }
  get canQuery() {
    var _a, _b;
    const e2 = (_b = (_a = this.layer) == null ? void 0 : _a.capabilities) == null ? void 0 : _b.queryRelated;
    return !!(this.relatedLayer && this.relationship && "number" == typeof this.relationshipId && "number" == typeof this.objectId && (e2 == null ? void 0 : e2.supportsCount) && (e2 == null ? void 0 : e2.supportsPagination));
  }
  get itemDescriptionFieldName() {
    var _a;
    return ((_a = this.orderByFieldsFixedCasing[0]) == null ? void 0 : _a.field) || null;
  }
  set displayCount(e2) {
    const t = 0, r = 10;
    this._set("displayCount", Math.min(Math.max(e2, t), r));
  }
  get displayCount() {
    return this._get("displayCount");
  }
  get objectId() {
    var _a, _b;
    return (this.objectIdField && ((_b = (_a = this.graphic) == null ? void 0 : _a.attributes) == null ? void 0 : _b[this.objectIdField])) ?? null;
  }
  get objectIdField() {
    var _a;
    return ((_a = this.layer) == null ? void 0 : _a.objectIdField) || null;
  }
  get relatedFeatures() {
    return this._get("relatedFeatures") || new V();
  }
  get relatedLayer() {
    const { layer: e2, map: t, relationship: r } = this;
    return (e2 == null ? void 0 : e2.loaded) && t && r ? Te(t, e2, r) ?? null : null;
  }
  get relationship() {
    var _a;
    const { relationshipId: e2, layer: t } = this;
    return "number" == typeof e2 ? ((_a = t == null ? void 0 : t.relationships) == null ? void 0 : _a.find(({ id: t2 }) => t2 === e2)) ?? null : null;
  }
  get relatedFeatureViewModels() {
    return this._get("relatedFeatureViewModels") || new V();
  }
  get state() {
    const { _queryAbortController: e2, _queryFeatureCountAbortController: t, _queryPageAbortController: r, canQuery: o, _loaded: l, canLoad: a2 } = this;
    return t || a2 && !l ? "loading" : e2 || r ? "querying" : o ? "ready" : "disabled";
  }
  getRelatedFeatureByObjectId(e2) {
    return this.relatedFeatures.find((t) => t.getObjectId() === e2);
  }
  refresh() {
    this._queryFeatureCountDebounced();
  }
  _destroyRelatedFeatureViewModels() {
    var _a;
    (_a = this.relatedFeatureViewModels) == null ? void 0 : _a.forEach((e2) => !e2.destroyed && e2.destroy()), this.relatedFeatureViewModels.removeAll();
  }
  async _queryFeatureCount() {
    const { layer: e2, relatedLayer: t, relationshipId: r, objectId: o, _queryFeatureCountAbortController: l, canQuery: a2, supportsCacheHint: s2 } = this;
    if (await (e2 == null ? void 0 : e2.load()), await (t == null ? void 0 : t.load()), !a2 || !e2 || !t)
      return void this._set("featureCount", 0);
    const i2 = t.createQuery(), n = new d3({ cacheHint: s2, relationshipId: r, returnGeometry: false, objectIds: [o], where: i2.where ?? void 0 }), u = await e2.queryRelatedFeaturesCount(n, { signal: l == null ? void 0 : l.signal });
    this._set("featureCount", u[o] || 0);
  }
  _sliceFeatures(e2) {
    const { showAllEnabled: t, displayCount: r } = this;
    return t ? e2 : r ? e2.slice(0, r) : [];
  }
  async _queryPage() {
    const { relatedFeatures: e2, featurePage: t, showAllEnabled: r, _queryPageAbortController: o, featureCount: l } = this;
    !r || t < 2 || !l || e2.addMany(await this._queryRelatedFeatures({ signal: o == null ? void 0 : o.signal }));
  }
  async _queryRelatedFeatures(e2) {
    var _a;
    const { orderByFieldsFixedCasing: t, showAllEnabled: r, featuresPerPage: l, displayCount: a2, layer: s2, relationshipId: i2, featurePage: n, featureCount: u, relatedLayer: d4, supportsCacheHint: y2 } = this, { canQuery: h, objectId: c } = this;
    if (!h || !s2 || !d4)
      return [];
    const C = r ? ((n - 1) * l + u) % u : 0, _2 = r ? l : a2, g2 = d4.objectIdField, F2 = [...t.map((e3) => e3.field), ...G(d4), g2].filter(k), f2 = t.map((e3) => `${e3.field} ${e3.order}`), m = d4.createQuery(), q = new d3({ orderByFields: f2, start: C, num: _2, outFields: F2, cacheHint: y2, relationshipId: i2, returnGeometry: false, objectIds: [c], where: m.where ?? void 0 }), A = await s2.queryRelatedFeatures(q, { signal: e2 == null ? void 0 : e2.signal }), w = ((_a = A[c]) == null ? void 0 : _a.features) || [];
    return w.forEach((e3) => {
      e3.sourceLayer = d4, e3.layer = d4;
    }), w;
  }
};
e([y()], g.prototype, "_loaded", void 0), e([y()], g.prototype, "_queryAbortController", void 0), e([y()], g.prototype, "_queryPageAbortController", void 0), e([y()], g.prototype, "_queryFeatureCountAbortController", void 0), e([y({ value: 1 })], g.prototype, "featurePage", null), e([y()], g.prototype, "featuresPerPage", void 0), e([y({ readOnly: true })], g.prototype, "orderByFieldsFixedCasing", null), e([y({ readOnly: true })], g.prototype, "supportsCacheHint", null), e([y({ readOnly: true })], g.prototype, "canLoad", null), e([y({ readOnly: true })], g.prototype, "canQuery", null), e([y()], g.prototype, "description", void 0), e([y({ readOnly: true })], g.prototype, "itemDescriptionFieldName", null), e([y({ value: 3 })], g.prototype, "displayCount", null), e([y({ type: f })], g.prototype, "graphic", void 0), e([y()], g.prototype, "layer", void 0), e([y()], g.prototype, "map", void 0), e([y({ readOnly: true })], g.prototype, "objectId", null), e([y({ readOnly: true })], g.prototype, "objectIdField", null), e([y()], g.prototype, "orderByFields", void 0), e([y({ readOnly: true })], g.prototype, "relatedFeatures", null), e([y({ readOnly: true })], g.prototype, "relatedLayer", null), e([y({ readOnly: true })], g.prototype, "relationship", null), e([y()], g.prototype, "featureCount", void 0), e([y({ readOnly: true })], g.prototype, "relatedFeatureViewModels", null), e([y()], g.prototype, "relationshipId", void 0), e([y()], g.prototype, "showAllEnabled", void 0), e([y()], g.prototype, "state", null), e([y()], g.prototype, "title", void 0), g = e([a("esri.widgets.Feature.FeatureRelationship.FeatureRelationshipViewModel")], g);
var F = g;

export {
  F
};
//# sourceMappingURL=chunk-UVHAFHZU.js.map
