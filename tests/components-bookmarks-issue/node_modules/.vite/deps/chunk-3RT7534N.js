import {
  a as a3,
  c as c2,
  f,
  o as o2,
  u as u2,
  v,
  y as y2
} from "./chunk-R5A6POKY.js";
import {
  e as e2
} from "./chunk-4ZRUV2JM.js";
import {
  a as a2,
  c,
  p
} from "./chunk-X2GCSX3A.js";
import {
  s as s2
} from "./chunk-QX66UTIR.js";
import {
  D
} from "./chunk-RGCWZ2KZ.js";
import {
  n
} from "./chunk-5VMSFOCB.js";
import {
  s
} from "./chunk-IOB3DJMR.js";
import {
  P,
  d
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import {
  S,
  o3 as o,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  u
} from "./chunk-QHK5ZYFW.js";
import {
  k
} from "./chunk-J2EGIWT6.js";

// node_modules/@arcgis/core/widgets/LayerList/ListItemPanel.js
var c3 = "legends";
var g = class extends s2(D) {
  constructor(e3, t) {
    super(e3, t), this._legend = null, this.className = null, this.content = null, this.flowEnabled = false, this.image = null, this.listItem = null, this.open = false, this.visible = true;
  }
  initialize() {
    this.addHandles(d(() => this.content, (e3) => this._createLegend(e3), P));
  }
  destroy() {
    this._legend = u(this._legend);
  }
  get disabled() {
    var _a;
    const { listItem: e3, _legend: t, content: i } = this;
    return !e3 || !(Array.isArray(i) && i.length > 1) && (!!t && (!((_a = t.activeLayerInfos) == null ? void 0 : _a.length) || !e3.visibleAtCurrentScale || !e3.visible));
  }
  set disabled(e3) {
    this._overrideIfSome("disabled", e3);
  }
  get icon() {
    const { image: e3 } = this, t = this._getFirstWidget();
    return this._get("icon") ?? (!e3 && t ? t.icon : null);
  }
  set icon(e3) {
    this._overrideIfSome("icon", e3);
  }
  get title() {
    var _a;
    return this._get("title") || (((_a = this._getFirstWidget()) == null ? void 0 : _a.label) ?? "");
  }
  set title(e3) {
    this._override("title", e3);
  }
  render() {
    return n("div", { class: "esri-list-item-panel" }, this._renderContents());
  }
  _renderContent(e3) {
    const { _legend: t, disabled: i } = this;
    return !e3 || i ? null : "legend" === e3 && t ? n("div", { key: "legend-widget" }, t.render()) : "string" == typeof e3 ? n("div", { innerHTML: e3, key: e3 }) : e2(e3) ? n("div", { key: "content-widget" }, e3.render()) : e3 instanceof HTMLElement ? n("div", { afterCreate: this._attachToNode, bind: e3, key: "content-element" }) : null;
  }
  _renderContents() {
    const { content: e3 } = this;
    return Array.isArray(e3) ? e3.map((e4) => this._renderContent(e4)) : this._renderContent(e3);
  }
  _getLegendOptions() {
    const { listItem: e3 } = this;
    if (!e3)
      return {};
    const { layer: t, view: i } = e3;
    return t && i && "subtype-sublayer" !== t.type ? { view: i, layerInfos: [v(t)] } : {};
  }
  async _createLegend(e3) {
    if (!this._hasLegend(e3) || this._legend)
      return;
    const { default: t } = await import("./Legend-SFY6OVS5.js"), { listItem: i } = this, n2 = new t(this._getLegendOptions());
    this._legend = n2, this.notifyChange("className"), this.notifyChange("title");
    const o3 = d(() => {
      var _a, _b;
      return [i == null ? void 0 : i.view, i == null ? void 0 : i.layer, (_a = i == null ? void 0 : i.layer) == null ? void 0 : _a.source, (_b = i == null ? void 0 : i.layer) == null ? void 0 : _b.parent];
    }, () => this._updateLegend(n2), P);
    this.addHandles(o3, c3), this.scheduleRender();
  }
  _hasLegend(e3) {
    const t = "legend";
    return e3 === t || null != e3 && !!Array.isArray(e3) && e3.includes(t);
  }
  _attachToNode(e3) {
    e3.appendChild(this);
  }
  _updateLegend(e3) {
    e3.set(this._getLegendOptions()), this.scheduleRender();
  }
  _getWidget(e3) {
    return "legend" === e3 ? this._legend : e2(e3) ? e3 : null;
  }
  _getFirstWidget() {
    const { content: e3 } = this;
    return Array.isArray(e3) ? e3.map((e4) => this._getWidget(e4)).find((e4) => e4) : this._getWidget(e3);
  }
};
e([y()], g.prototype, "_legend", void 0), e([y()], g.prototype, "className", void 0), e([y()], g.prototype, "content", void 0), e([y()], g.prototype, "disabled", null), e([y()], g.prototype, "flowEnabled", void 0), e([y()], g.prototype, "icon", null), e([y()], g.prototype, "image", void 0), e([y()], g.prototype, "listItem", void 0), e([y()], g.prototype, "open", void 0), e([y()], g.prototype, "title", null), e([y()], g.prototype, "visible", void 0), g = e([a("esri.widgets.LayerList.ListItemPanel")], g);
var h = g;

// node_modules/@arcgis/core/widgets/LayerList/ListItem.js
var g2;
var C = V.ofType({ key: "type", defaultKeyValue: "button", base: p, typeMap: { button: c, toggle: a2, slider: a3 } });
var _ = V.ofType(C);
var P2 = "layer";
var j = "child-list-mode";
var I = "hide";
var O = g2 = class extends s2(S) {
  constructor(t) {
    super(t), this.actionsSections = new _(), this.actionsOpen = false, this.checkPublishStatusEnabled = false, this.children = new (V.ofType(g2))(), this.childrenSortable = true, this.hidden = false, this.layer = null, this.layerView = null, this.listItemCreatedFunction = null, this.open = false, this.panel = null, this.parent = null, this.sortable = true, this.view = null;
  }
  initialize() {
    if (this.addHandles([d(() => {
      var _a;
      return [this.layer, (_a = this.layer) == null ? void 0 : _a.listMode];
    }, () => this._watchLayerProperties(this.layer), P), d(() => this.checkPublishStatusEnabled, (t) => this._updateChildrenPublishing(t), P), d(() => this.view, (t) => this._updateChildrenView(t), P), d(() => this.panel, (t) => this._setListItemOnPanel(t), P), d(() => [this.layer, this.view], () => this._getLayerView(), P)]), "function" == typeof this.listItemCreatedFunction) {
      const t = { item: this };
      this.listItemCreatedFunction.call(null, t);
    }
  }
  destroy() {
    this.view = null;
  }
  get connectionStatus() {
    const { layerView: t, publishing: e3 } = this;
    if (!e3 && t && "connectionStatus" in t)
      return t.connectionStatus;
  }
  get error() {
    var _a;
    return (_a = this.layer) == null ? void 0 : _a.loadError;
  }
  get incompatible() {
    const { layerView: t } = this;
    return !(!t || !("spatialReferenceSupported" in t)) && !t.spatialReferenceSupported;
  }
  castPanel(t) {
    var _a;
    return ((_a = this.panel) == null ? void 0 : _a.open) && !t.hasOwnProperty("open") && (t.open = true), t ? new h(t) : null;
  }
  get title() {
    const t = o(this, "layer.layer");
    return (!t || t && o(this, "layer.layer.loaded")) && o(this, "layer.title") || o(this, "layer.attributes.title") || "";
  }
  set title(t) {
    this._override("title", t);
  }
  get publishing() {
    var _a;
    const { layer: t, checkPublishStatusEnabled: e3 } = this;
    return e3 && t && "publishingInfo" in t && "publishing" === ((_a = t.publishingInfo) == null ? void 0 : _a.status);
  }
  get updating() {
    const { layerView: t, connectionStatus: e3, layer: i, publishing: s3 } = this;
    return !s3 && !e3 && (t ? t.updating : "loading" === (i == null ? void 0 : i.loadStatus) || false);
  }
  get visible() {
    var _a;
    return (_a = this.layer) == null ? void 0 : _a.visible;
  }
  set visible(t) {
    const e3 = this.layer;
    e3 && (e3.visible = t);
  }
  get visibleAtCurrentScale() {
    var _a;
    return !f(this.layer, (_a = this.view) == null ? void 0 : _a.scale);
  }
  get visibilityMode() {
    return o2(this.layer);
  }
  clone() {
    return new g2({ actionsSections: this.actionsSections.clone(), actionsOpen: this.actionsOpen, checkPublishStatusEnabled: this.checkPublishStatusEnabled, children: this.children.clone(), childrenSortable: this.childrenSortable, hidden: this.hidden, layer: this.layer, listItemCreatedFunction: this.listItemCreatedFunction, open: this.open, panel: this.panel, parent: this.parent, sortable: this.sortable, title: this.title, view: this.view, visible: this.visible });
  }
  _setListItemOnPanel(t) {
    t && (t.listItem = this);
  }
  _updateChildrenPublishing(t) {
    const e3 = this.children;
    e3 && e3.forEach((e4) => e4.checkPublishStatusEnabled = t);
  }
  _updateChildrenView(t) {
    const e3 = this.children;
    e3 && e3.forEach((e4) => e4.view = t);
  }
  _addChildren(t) {
    if (this.removeHandles(j), this.children.removeAll(), !t)
      return;
    t.forEach((e4) => {
      this.addHandles(d(() => e4.listMode, () => this._addChildren(t)), j);
    });
    const e3 = t.filter((t2) => u2(t2) !== I);
    this.children.addMany(this._makeChildren(e3));
  }
  _watchSublayerChanges(t) {
    t && this.addHandles(t.on("change", () => {
      this._addChildren(t);
    }), P2);
  }
  _initializeChildLayers(t) {
    this._addChildren(t), this._watchSublayerChanges(t);
  }
  _makeChildren(t) {
    return t.map((t2) => y2(t2) ? new g2({ layer: t2, checkPublishStatusEnabled: this.checkPublishStatusEnabled, listItemCreatedFunction: this.listItemCreatedFunction, parent: this, view: this.view }) : null).filter(k).reverse();
  }
  _watchLayerProperties(t) {
    if (this.removeHandles(P2), this.removeHandles(j), !t)
      return;
    if ("hide-children" === u2(t))
      return void this.children.removeAll();
    const e3 = c2(t);
    e3 && this.addHandles(d(() => t[e3], (i) => {
      t.hasOwnProperty(e3) && this._initializeChildLayers(i);
    }, P), P2);
  }
  async _getLayerView() {
    const { layer: t, view: e3 } = this;
    if (t && e3)
      try {
        const i = "subtype-sublayer" === t.type ? t.parent : t, s3 = i && await e3.whenLayerView(i);
        if ((s3 == null ? void 0 : s3.layer) !== i)
          return;
        this._set("layerView", s3);
      } catch {
      }
  }
};
e([y({ type: _ })], O.prototype, "actionsSections", void 0), e([y()], O.prototype, "actionsOpen", void 0), e([y()], O.prototype, "checkPublishStatusEnabled", void 0), e([y({ type: V })], O.prototype, "children", void 0), e([y()], O.prototype, "childrenSortable", void 0), e([y({ readOnly: true })], O.prototype, "connectionStatus", null), e([y({ readOnly: true })], O.prototype, "error", null), e([y()], O.prototype, "hidden", void 0), e([y({ readOnly: true })], O.prototype, "incompatible", null), e([y()], O.prototype, "layer", void 0), e([y({ readOnly: true })], O.prototype, "layerView", void 0), e([y()], O.prototype, "listItemCreatedFunction", void 0), e([y()], O.prototype, "open", void 0), e([y({ type: h })], O.prototype, "panel", void 0), e([s("panel")], O.prototype, "castPanel", null), e([y()], O.prototype, "parent", void 0), e([y()], O.prototype, "sortable", void 0), e([y()], O.prototype, "title", null), e([y({ readOnly: true })], O.prototype, "publishing", null), e([y({ readOnly: true })], O.prototype, "updating", null), e([y()], O.prototype, "view", void 0), e([y()], O.prototype, "visible", null), e([y({ readOnly: true })], O.prototype, "visibleAtCurrentScale", null), e([y({ readOnly: true })], O.prototype, "visibilityMode", null), O = g2 = e([a("esri.widgets.LayerList.ListItem")], O);
var L = O;

export {
  L
};
//# sourceMappingURL=chunk-3RT7534N.js.map
