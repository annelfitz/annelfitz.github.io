{
  "version": 3,
  "sources": ["../../@esri/calcite-components/node_modules/color-name/index.js", "../../@esri/calcite-components/node_modules/simple-swizzle/node_modules/is-arrayish/index.js", "../../@esri/calcite-components/node_modules/simple-swizzle/index.js", "../../@esri/calcite-components/node_modules/color-string/index.js", "../../@esri/calcite-components/node_modules/color/node_modules/color-name/index.js", "../../@esri/calcite-components/node_modules/color/node_modules/color-convert/conversions.js", "../../@esri/calcite-components/node_modules/color/node_modules/color-convert/route.js", "../../@esri/calcite-components/node_modules/color/node_modules/color-convert/index.js", "../../@esri/calcite-components/node_modules/color/index.js", "../../@esri/calcite-components/dist/components/src/components/color-picker/utils.ts", "../../@esri/calcite-components/dist/components/src/components/color-picker-swatch/resources.ts", "../../@esri/calcite-components/dist/components/src/components/color-picker-swatch/color-picker-swatch.scss?tag=calcite-color-picker-swatch&encapsulation=shadow", "../../@esri/calcite-components/dist/components/src/components/color-picker-swatch/color-picker-swatch.tsx"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n", "'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n", "/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n", "'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n", "import { ColorValue, HSLA, HSVA, RGB, RGBA } from \"./interfaces\";\nimport Color from \"color\";\n\nexport const hexChar = /^[0-9A-F]$/i;\nconst shorthandHex = /^#[0-9A-F]{3}$/i;\nconst longhandHex = /^#[0-9A-F]{6}$/i;\nconst shorthandHexWithAlpha = /^#[0-9A-F]{4}$/i;\nconst longhandHexWithAlpha = /^#[0-9A-F]{8}$/i;\n\nexport const alphaToOpacity = (alpha: number): number => Number((alpha * 100).toFixed());\n\nexport const opacityToAlpha = (opacity: number): number => Number((opacity / 100).toFixed(2));\n\nexport function isValidHex(hex: string, hasAlpha = false): boolean {\n  return isShorthandHex(hex, hasAlpha) || isLonghandHex(hex, hasAlpha);\n}\n\nexport function canConvertToHexa(hex: string): boolean {\n  const validHex = isValidHex(hex, false);\n  const validHexa = isValidHex(hex, true);\n  return !validHexa && validHex;\n}\n\nfunction evaluateHex(hex: string, length: number, pattern: RegExp): boolean {\n  if (!hex) {\n    return false;\n  }\n\n  return hex.length === length && pattern.test(hex);\n}\n\nexport function isShorthandHex(hex: string, hasAlpha = false): boolean {\n  const hexLength = hasAlpha ? 5 : 4;\n  const hexPattern = hasAlpha ? shorthandHexWithAlpha : shorthandHex;\n\n  return evaluateHex(hex, hexLength, hexPattern);\n}\n\nexport function isLonghandHex(hex: string, hasAlpha = false): boolean {\n  const hexLength = hasAlpha ? 9 : 7;\n  const hexPattern = hasAlpha ? longhandHexWithAlpha : longhandHex;\n\n  return evaluateHex(hex, hexLength, hexPattern);\n}\n\nexport function normalizeHex(hex: string, hasAlpha = false, convertFromHexToHexa = false): string {\n  hex = hex.toLowerCase();\n\n  if (!hex.startsWith(\"#\")) {\n    hex = `#${hex}`;\n  }\n\n  if (isShorthandHex(hex, hasAlpha)) {\n    return rgbToHex(hexToRGB(hex, hasAlpha));\n  }\n\n  if (hasAlpha && convertFromHexToHexa && isValidHex(hex, false /* we only care about RGB hex for conversion */)) {\n    const isShorthand = isShorthandHex(hex, false);\n    return rgbToHex(hexToRGB(`${hex}${isShorthand ? \"f\" : \"ff\"}`, true));\n  }\n\n  return hex;\n}\n\nexport function hexify(color: Color, hasAlpha = false): string {\n  return hasAlpha ? color.hexa() : color.hex();\n}\n\nexport function rgbToHex(color: RGB | RGBA): string {\n  const { r, g, b } = color;\n\n  const rChars = numToHex(r);\n  const gChars = numToHex(g);\n  const bChars = numToHex(b);\n  const alphaChars = \"a\" in color ? numToHex(color.a * 255) : \"\";\n\n  return `#${rChars}${gChars}${bChars}${alphaChars}`.toLowerCase();\n}\n\nfunction numToHex(num: number): string {\n  return num.toString(16).padStart(2, \"0\");\n}\n\nexport function normalizeAlpha<T extends RGBA | HSVA | HSLA>(colorObject: ReturnType<Color[\"object\"]>): T {\n  const normalized = { ...colorObject, a: colorObject.alpha ?? 1 /* Color() will omit alpha if 1 */ };\n  delete normalized.alpha;\n\n  return normalized as T;\n}\n\nexport function normalizeColor(alphaColorObject: RGBA | HSVA | HSLA): ReturnType<Color[\"object\"]> {\n  const normalized = { ...alphaColorObject, alpha: alphaColorObject.a ?? 1 };\n  delete normalized.a;\n\n  return normalized;\n}\n\nexport function hexToRGB(hex: string, hasAlpha = false): RGB | RGBA {\n  if (!isValidHex(hex, hasAlpha)) {\n    return null;\n  }\n\n  hex = hex.replace(\"#\", \"\");\n\n  let r: number;\n  let g: number;\n  let b: number;\n  let a: number;\n  const isShorthand = hex.length === 3 || hex.length === 4;\n\n  if (isShorthand) {\n    const [first, second, third, fourth] = hex.split(\"\");\n\n    r = parseInt(`${first}${first}`, 16);\n    g = parseInt(`${second}${second}`, 16);\n    b = parseInt(`${third}${third}`, 16);\n    a = parseInt(`${fourth}${fourth}`, 16) / 255;\n  } else {\n    r = parseInt(hex.slice(0, 2), 16);\n    g = parseInt(hex.slice(2, 4), 16);\n    b = parseInt(hex.slice(4, 6), 16);\n    a = parseInt(hex.slice(6, 8), 16) / 255;\n  }\n\n  return isNaN(a) ? { r, g, b } : { r, g, b, a };\n}\n\n// these utils allow users to pass enum values as strings without having to access the enum\n// based on the approach suggested by https://github.com/microsoft/TypeScript/issues/17690#issuecomment-321365759,\nconst enumify = <T extends { [index: string]: U }, U extends string>(x: T) => x;\ntype Enumify<T> = T[keyof T];\n\nexport const CSSColorMode = enumify({\n  HEX: \"hex\",\n  HEXA: \"hexa\",\n  RGB_CSS: \"rgb-css\",\n  RGBA_CSS: \"rgba-css\",\n  HSL_CSS: \"hsl-css\",\n  HSLA_CSS: \"hsla-css\",\n});\ntype CSSColorMode = Enumify<typeof CSSColorMode>;\n\nexport const ObjectColorMode = enumify({\n  RGB: \"rgb\",\n  RGBA: \"rgba\",\n  HSL: \"hsl\",\n  HSLA: \"hsla\",\n  HSV: \"hsv\",\n  HSVA: \"hsva\",\n});\ntype ObjectColorMode = Enumify<typeof ObjectColorMode>;\n\nexport type SupportedMode = CSSColorMode | ObjectColorMode;\n\nexport type Format = \"auto\" | SupportedMode;\n\nexport function parseMode(colorValue: ColorValue): SupportedMode | null {\n  if (typeof colorValue === \"string\") {\n    if (colorValue.startsWith(\"#\")) {\n      const { length } = colorValue;\n\n      if (length === 4 || length === 7) {\n        return CSSColorMode.HEX;\n      }\n      if (length === 5 || length === 9) {\n        return CSSColorMode.HEXA;\n      }\n    }\n\n    if (colorValue.startsWith(\"rgba(\")) {\n      return CSSColorMode.RGBA_CSS;\n    }\n\n    if (colorValue.startsWith(\"rgb(\")) {\n      return CSSColorMode.RGB_CSS;\n    }\n\n    if (colorValue.startsWith(\"hsl(\")) {\n      return CSSColorMode.HSL_CSS;\n    }\n\n    if (colorValue.startsWith(\"hsla(\")) {\n      return CSSColorMode.HSLA_CSS;\n    }\n  }\n\n  if (typeof colorValue === \"object\") {\n    if (hasChannels(colorValue, \"r\", \"g\", \"b\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.RGBA : ObjectColorMode.RGB;\n    }\n\n    if (hasChannels(colorValue, \"h\", \"s\", \"l\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSLA : ObjectColorMode.HSL;\n    }\n\n    if (hasChannels(colorValue, \"h\", \"s\", \"v\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSVA : ObjectColorMode.HSV;\n    }\n  }\n\n  return null;\n}\n\nfunction hasChannels(colorObject: Exclude<ColorValue, string> | null, ...channels: string[]): boolean {\n  return channels.every((channel) => channel && colorObject && `${channel}` in colorObject);\n}\n\nexport function colorEqual(value1: Color | null, value2: Color | null): boolean {\n  return value1?.rgb().array().toString() === value2?.rgb().array().toString();\n}\n\nexport function alphaCompatible(mode: SupportedMode): boolean {\n  return (\n    mode === CSSColorMode.HEXA ||\n    mode === CSSColorMode.RGBA_CSS ||\n    mode === CSSColorMode.HSLA_CSS ||\n    mode === ObjectColorMode.RGBA ||\n    mode === ObjectColorMode.HSLA ||\n    mode === ObjectColorMode.HSVA\n  );\n}\n\nexport function toAlphaMode(mode: SupportedMode): SupportedMode {\n  const alphaMode =\n    mode === CSSColorMode.HEX\n      ? CSSColorMode.HEXA\n      : mode === CSSColorMode.RGB_CSS\n        ? CSSColorMode.RGBA_CSS\n        : mode === CSSColorMode.HSL_CSS\n          ? CSSColorMode.HSLA_CSS\n          : mode === ObjectColorMode.RGB\n            ? ObjectColorMode.RGBA\n            : mode === ObjectColorMode.HSL\n              ? ObjectColorMode.HSLA\n              : mode === ObjectColorMode.HSV\n                ? ObjectColorMode.HSVA\n                : mode;\n\n  return alphaMode;\n}\n\nexport function toNonAlphaMode(mode: SupportedMode): SupportedMode {\n  const nonAlphaMode =\n    mode === CSSColorMode.HEXA\n      ? CSSColorMode.HEX\n      : mode === CSSColorMode.RGBA_CSS\n        ? CSSColorMode.RGB_CSS\n        : mode === CSSColorMode.HSLA_CSS\n          ? CSSColorMode.HSL_CSS\n          : mode === ObjectColorMode.RGBA\n            ? ObjectColorMode.RGB\n            : mode === ObjectColorMode.HSLA\n              ? ObjectColorMode.HSL\n              : mode === ObjectColorMode.HSVA\n                ? ObjectColorMode.HSV\n                : mode;\n\n  return nonAlphaMode;\n}\n", "export const CSS = {\n  swatch: \"swatch\",\n  noColorSwatch: \"swatch--no-color\",\n  checker: \"checker\",\n};\n\nexport const COLORS = {\n  borderLight: \"rgba(0, 0, 0, 0.3)\",\n  borderDark: \"rgba(255, 255, 255, 0.15)\",\n};\n\nconst checkerSquareSize = 4;\n\nexport const CHECKER_DIMENSIONS = {\n  squareSize: checkerSquareSize,\n  size: checkerSquareSize * 2,\n};\n", "$size-s: 20px;\n$size-m: 24px;\n$size-l: 28px;\n\n:host {\n  @apply relative inline-flex;\n}\n\n:host([scale=\"s\"]) {\n  @apply h-5 w-5;\n}\n\n:host([scale=\"m\"]) {\n  @apply h-6 w-6;\n}\n\n:host([scale=\"l\"]) {\n  @apply h-8 w-8;\n}\n\n.swatch {\n  @apply overflow-hidden;\n  block-size: inherit;\n  inline-size: inherit;\n\n  rect {\n    @apply transition-all duration-150 ease-in-out;\n  }\n}\n\n.swatch--no-color {\n  rect {\n    fill: var(--calcite-color-foreground-1);\n  }\n\n  line {\n    stroke: var(--calcite-color-status-danger);\n  }\n}\n\n.checker {\n  fill: #cacaca;\n}\n\n@include base-component();\n", "import { Component, Element, Fragment, h, Prop, VNode, Watch } from \"@stencil/core\";\nimport Color from \"color\";\nimport { getModeName } from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport { hexify } from \"../color-picker/utils\";\nimport { CHECKER_DIMENSIONS, COLORS, CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-color-picker-swatch\",\n  styleUrl: \"color-picker-swatch.scss\",\n  shadow: true,\n})\nexport class ColorPickerSwatch {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is active.\n   */\n  @Prop({\n    reflect: true,\n  })\n  active = false;\n\n  /**\n   * The color value.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n   */\n  @Prop()\n  color: string | null;\n\n  @Watch(\"color\")\n  handleColorChange(color: string | null): void {\n    this.internalColor = color ? Color(color) : null;\n  }\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerSwatchElement;\n\n  private internalColor: Color;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.handleColorChange(this.color);\n  }\n\n  render(): VNode {\n    const isEmpty = !this.internalColor;\n    const classes = {\n      [CSS.swatch]: true,\n      [CSS.noColorSwatch]: isEmpty,\n    };\n\n    return (\n      <svg class={classes} xmlns=\"http://www.w3.org/2000/svg\">\n        {this.renderSwatch()}\n      </svg>\n    );\n  }\n\n  renderSwatch(): VNode {\n    const { active, el, internalColor } = this;\n    const borderRadius = active ? \"100%\" : \"0\";\n    const theme = getModeName(el);\n    const borderColor = theme === \"light\" ? COLORS.borderLight : COLORS.borderDark;\n    const commonSwatchProps = {\n      height: \"100%\",\n      rx: borderRadius,\n      stroke: borderColor,\n\n      // stroke-width and clip-path are needed to hide overflowing portion of stroke\n      // see https://stackoverflow.com/a/7273346/194216\n\n      // using attribute to work around Stencil using the prop name vs the attribute when rendering\n      [\"stroke-width\"]: \"2\",\n      width: \"100%\",\n    };\n\n    const isEmpty = !internalColor;\n\n    if (isEmpty) {\n      return (\n        <Fragment>\n          <clipPath id=\"shape\">\n            <rect height=\"100%\" rx={borderRadius} width=\"100%\" />\n          </clipPath>\n          <rect\n            clip-path={`inset(0 round ${borderRadius})`}\n            rx={borderRadius}\n            {...commonSwatchProps}\n          />\n          <line clip-path=\"url(#shape)\" stroke-width=\"3\" x1=\"100%\" x2=\"0\" y1=\"0\" y2=\"100%\" />\n        </Fragment>\n      );\n    }\n\n    const alpha = internalColor.alpha();\n    const hex = hexify(internalColor);\n    const hexa = hexify(internalColor, alpha < 1);\n\n    return (\n      <Fragment>\n        <title>{hexa}</title>\n        <defs>\n          <pattern\n            height={CHECKER_DIMENSIONS.size}\n            id=\"checker\"\n            patternUnits=\"userSpaceOnUse\"\n            width={CHECKER_DIMENSIONS.size}\n            x=\"0\"\n            y=\"0\"\n          >\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x=\"0\"\n              y=\"0\"\n            />\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x={CHECKER_DIMENSIONS.squareSize}\n              y={CHECKER_DIMENSIONS.squareSize}\n            />\n          </pattern>\n        </defs>\n        <rect fill=\"url(#checker)\" height=\"100%\" rx={borderRadius} width=\"100%\" />\n        <rect\n          fill={hex}\n          style={{\n            \"clip-path\":\n              alpha < 1 ? \"polygon(100% 0, 0 0, 0 100%)\" : `inset(0 round ${borderRadius})`,\n          }}\n          {...commonSwatchProps}\n        />\n        {alpha < 1 ? (\n          <rect\n            fill={hexa}\n            key=\"opacity-fill\"\n            style={{ \"clip-path\": \"polygon(100% 0, 100% 100%, 0 100%)\" }}\n            {...commonSwatchProps}\n          />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["isArrayish", "swizzle", "colorNames", "h", "cssKeywords", "convert", "color", "colorString", "models", "color", "ColorPickerSwatch", "color", "Color"]
}
