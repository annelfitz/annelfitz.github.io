import {
  $,
  h,
  m
} from "./chunk-SA77Z3WI.js";
import {
  e
} from "./chunk-BKOYOJBG.js";
import {
  G,
  x
} from "./chunk-JZBR4X6W.js";
import {
  r,
  t
} from "./chunk-OIJCMME5.js";

// node_modules/@arcgis/core/views/interactive/sketch/normalizedPoint.js
function i(t2, r2, e2) {
  return r(t2, r2, e2);
}
function l(n2) {
  return n2;
}
function f(n2) {
  return n2;
}
function s(t2, r2, e2) {
  return l(r(t2, r2, e2));
}
function a(n2) {
  return t(n2);
}
function p(n2, t2, { coordinateHelper: r2, elevationInfo: e2 }) {
  return n2 ? d(r2.vectorToDehydratedPoint(n2, v), t2, e2) : null;
}
function d(t2, r2, u) {
  if (null == t2)
    return null;
  if (null == r2)
    return l(r(t2.x, t2.y, t2.z ?? 0));
  if ("2d" === r2.type)
    return l(r(t2.x, t2.y, 0));
  const i2 = h(r2, t2, u, $) ?? 0;
  return l(r(t2.x, t2.y, i2));
}
function m2(n2, t2) {
  return e(n2[0], n2[1], n2[2], t2);
}
function y(n2, t2, { z: e2, m: i2 }, l2) {
  const { spatialReference: f2, elevationInfo: c } = l2;
  let s3;
  if (null == e2 && null == i2)
    s3 = void 0;
  else if (null == t2 || "2d" === t2.type)
    s3 = e2 ?? void 0;
  else {
    s3 = m(t2, n2, f2, $, c) ?? 0;
  }
  const a2 = e(n2[0], n2[1], s3, f2);
  return null != i2 && (a2.m = i2, a2.hasM = true), a2;
}
var v = e(0, 0, 0, null);

// node_modules/@arcgis/core/views/interactive/snapping/SnappingDomain.js
var E;
!function(E2) {
  E2[E2.FEATURE = 1] = "FEATURE", E2[E2.SELF = 2] = "SELF", E2[E2.ALL = 3] = "ALL";
}(E || (E = {}));

// node_modules/@arcgis/core/views/interactive/snapping/hints/SnappingHint.js
var s2 = class {
  constructor(s3, t2) {
    this.isDraped = s3, this.domain = t2;
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/hints/LineSnappingHint.js
var n = class _n extends s2 {
  constructor(t2, e2, s3, n2, r2 = E.ALL, a2 = true, h2 = true) {
    super(n2, r2), this.type = t2, this.lineStart = e2, this.lineEnd = s3, this.fadeLeft = a2, this.fadeRight = h2;
  }
  equals(e2) {
    return e2 instanceof _n && (this.type === e2.type && G(this.lineStart, e2.lineStart) && G(this.lineEnd, e2.lineEnd) && this.fadeLeft === e2.fadeLeft && this.fadeRight === e2.fadeRight);
  }
  get length() {
    return x(this.lineStart, this.lineEnd);
  }
};

export {
  i,
  l,
  f,
  s,
  a,
  p,
  d,
  m2 as m,
  y,
  E,
  s2,
  n
};
//# sourceMappingURL=chunk-WCBCYPOZ.js.map
