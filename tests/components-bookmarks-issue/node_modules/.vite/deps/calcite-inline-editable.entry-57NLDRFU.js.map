{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/esm/src/components/inline-editable/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/inline-editable/inline-editable.scss?tag=calcite-inline-editable&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/inline-editable/inline-editable.tsx"],
  "sourcesContent": ["export const CSS = {\n  wrapper: \"wrapper\",\n  confirmChangesButton: \"confirm-changes-button\",\n  cancelEditingButton: \"cancel-editing-button\",\n  inputWrapper: \"input-wrapper\",\n  cancelEditingButtonWrapper: \"cancel-editing-button-wrapper\",\n  enableEditingButton: \"enable-editing-button\",\n  controlsWrapper: \"controls-wrapper\",\n};\n", ":host {\n  @apply block;\n}\n\n:host([scale=\"s\"]) {\n  .controls-wrapper {\n    @apply h-6;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .controls-wrapper {\n    @apply h-8;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .controls-wrapper {\n    @apply h-11;\n  }\n}\n\n:host(:not([editing-enabled]):not([disabled])) {\n  .wrapper {\n    &:hover {\n      @apply bg-foreground-2;\n    }\n  }\n}\n\n.wrapper {\n  @apply bg-foreground-1\n    transition-default\n    box-border\n    flex\n    justify-between;\n\n  .input-wrapper {\n    @apply flex-1;\n  }\n}\n\n.controls-wrapper {\n  @apply flex;\n}\n\n@include disabled() {\n  .cancel-editing-button-wrapper {\n    @apply border-color-2;\n  }\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { getSlotted } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Scale } from \"../interfaces\";\nimport { InlineEditableMessages } from \"./assets/inline-editable/t9n\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding a `calcite-input`.\n */\n@Component({\n  tag: \"calcite-inline-editable\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  styleUrl: \"inline-editable.scss\",\n  assetsDirs: [\"assets\"],\n})\nexport class InlineEditable\n  implements\n    InteractiveComponent,\n    LabelableComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Props\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(disabled: boolean): void {\n    if (this.inputElement) {\n      this.inputElement.disabled = disabled;\n    }\n  }\n\n  /**\n   * When `true`, inline editing is enabled on the component.\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  @Watch(\"editingEnabled\")\n  editingEnabledWatcher(newValue: boolean, oldValue: boolean): void {\n    if (this.inputElement) {\n      this.inputElement.editingEnabled = newValue;\n    }\n    if (!newValue && !!oldValue) {\n      this.shouldEmitCancel = true;\n    }\n  }\n\n  /** When `true`, a busy indicator is displayed. */\n  @Prop({ mutable: true, reflect: true }) loading = false;\n\n  /** When `true` and `editingEnabled` is `true`, displays save and cancel controls on the component. */\n  @Prop({ reflect: true }) controls = false;\n\n  /** Specifies the size of the component. Defaults to the scale of the wrapped `calcite-input` or the scale of the closest wrapping component with a set scale. */\n  @Prop({ reflect: true, mutable: true }) scale: Scale;\n\n  /** Specifies a callback to be executed prior to disabling editing via the controls. When provided, the component's loading state will be handled automatically. */\n  @Prop() afterConfirm: () => Promise<void>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InlineEditableMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InlineEditableMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback() {\n    connectInteractive(this);\n    connectLabel(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.mutationObserverCallback();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback() {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.mutationObserver?.disconnect();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div\n          class={CSS.wrapper}\n          onClick={this.enableEditingHandler}\n          onKeyDown={this.escapeKeyHandler}\n        >\n          <div class={CSS.inputWrapper}>\n            <slot />\n          </div>\n          <div class={CSS.controlsWrapper}>\n            <calcite-button\n              appearance=\"transparent\"\n              class={CSS.enableEditingButton}\n              disabled={this.disabled}\n              iconStart=\"pencil\"\n              kind=\"neutral\"\n              label={this.messages.enableEditing}\n              onClick={this.enableEditingHandler}\n              scale={this.scale}\n              style={{\n                opacity: this.editingEnabled ? \"0\" : \"1\",\n                width: this.editingEnabled ? \"0\" : \"inherit\",\n              }}\n              type=\"button\"\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={(el) => (this.enableEditingButton = el)}\n            />\n            {this.shouldShowControls && [\n              <div class={CSS.cancelEditingButtonWrapper}>\n                <calcite-button\n                  appearance=\"transparent\"\n                  class={CSS.cancelEditingButton}\n                  disabled={this.disabled}\n                  iconStart=\"x\"\n                  kind=\"neutral\"\n                  label={this.messages.cancelEditing}\n                  onClick={this.cancelEditingHandler}\n                  scale={this.scale}\n                  type=\"button\"\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={(el) => (this.cancelEditingButton = el)}\n                />\n              </div>,\n              <calcite-button\n                appearance=\"solid\"\n                class={CSS.confirmChangesButton}\n                disabled={this.disabled}\n                iconStart=\"check\"\n                kind=\"brand\"\n                label={this.messages.confirmChanges}\n                loading={this.loading}\n                onClick={this.confirmChangesHandler}\n                scale={this.scale}\n                type=\"button\"\n                // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                ref={(el) => (this.confirmEditingButton = el)}\n              />,\n            ]}\n          </div>\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emits when the component's \"cancel editing\" button is pressed.\n   */\n  @Event({ cancelable: false }) calciteInlineEditableEditCancel: EventEmitter<void>;\n\n  /**\n   * Emits when the component's \"confirm edits\" button is pressed.\n   */\n  @Event({ cancelable: false }) calciteInlineEditableEditConfirm: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalInlineEditableEnableEditingChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalInputBlur\")\n  blurHandler(): void {\n    if (!this.controls) {\n      this.disableEditing();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInlineEditableElement;\n\n  private inputElement: HTMLCalciteInputElement;\n\n  private valuePriorToEditing: string;\n\n  private shouldEmitCancel: boolean;\n\n  private enableEditingButton: HTMLCalciteButtonElement;\n\n  private cancelEditingButton: HTMLCalciteButtonElement;\n\n  private confirmEditingButton: HTMLCalciteButtonElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  mutationObserver = createObserver(\"mutation\", () => this.mutationObserverCallback());\n\n  @State() defaultMessages: InlineEditableMessages;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.el?.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  mutationObserverCallback(): void {\n    this.updateSlottedInput();\n    this.scale = this.scale || this.inputElement?.scale;\n  }\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  updateSlottedInput(): void {\n    const inputElement: HTMLCalciteInputElement = getSlotted(this.el, {\n      matches: \"calcite-input\",\n    });\n\n    this.inputElement = inputElement;\n\n    if (!inputElement) {\n      return;\n    }\n\n    this.inputElement.disabled = this.disabled;\n    this.inputElement.label = this.inputElement.label || getLabelText(this);\n  }\n\n  private get shouldShowControls(): boolean {\n    return this.editingEnabled && this.controls;\n  }\n\n  private enableEditing = () => {\n    this.valuePriorToEditing = this.inputElement?.value;\n    this.editingEnabled = true;\n    this.inputElement?.setFocus();\n    this.calciteInternalInlineEditableEnableEditingChange.emit();\n  };\n\n  private disableEditing = () => {\n    this.editingEnabled = false;\n  };\n\n  private cancelEditing = () => {\n    if (this.inputElement) {\n      this.inputElement.value = this.valuePriorToEditing;\n    }\n    this.disableEditing();\n    this.enableEditingButton.setFocus();\n    if (!this.editingEnabled && !!this.shouldEmitCancel) {\n      this.calciteInlineEditableEditCancel.emit();\n    }\n  };\n\n  private escapeKeyHandler = async (event: KeyboardEvent) => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === \"Escape\") {\n      event.preventDefault();\n      this.cancelEditing();\n    }\n\n    if (event.key === \"Tab\" && this.shouldShowControls) {\n      if (!event.shiftKey && event.target === this.inputElement) {\n        event.preventDefault();\n        this.cancelEditingButton.setFocus();\n      }\n      if (!!event.shiftKey && event.target === this.cancelEditingButton) {\n        event.preventDefault();\n        this.inputElement?.setFocus();\n      }\n    }\n  };\n\n  private cancelEditingHandler = async (event: MouseEvent) => {\n    event.preventDefault();\n    this.cancelEditing();\n  };\n\n  private enableEditingHandler = async (event: MouseEvent) => {\n    if (\n      this.disabled ||\n      event.target === this.cancelEditingButton ||\n      event.target === this.confirmEditingButton\n    ) {\n      return;\n    }\n\n    event.preventDefault();\n    if (!this.editingEnabled) {\n      this.enableEditing();\n    }\n  };\n\n  private confirmChangesHandler = async (event: MouseEvent) => {\n    event.preventDefault();\n    this.calciteInlineEditableEditConfirm.emit();\n    try {\n      if (this.afterConfirm) {\n        this.loading = true;\n        await this.afterConfirm();\n        this.disableEditing();\n        this.enableEditingButton.setFocus();\n      }\n    } catch (error) {\n    } finally {\n      this.loading = false;\n    }\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
