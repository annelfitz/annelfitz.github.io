import {
  InteractiveContainer,
  connectInteractive,
  disconnectInteractive,
  updateHostInteraction
} from "./chunk-66JQNCB7.js";
import "./chunk-OUKAB5XV.js";
import {
  slotChangeHasAssignedElement
} from "./chunk-BUS2XAMG.js";
import "./chunk-L553G5FP.js";
import "./chunk-PJLSVRBA.js";
import {
  getElement,
  h,
  registerInstance
} from "./chunk-FNA2PYJM.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@esri/calcite-components/dist/esm/calcite-tile.entry.js
var CSS = {
  container: "container",
  content: "content",
  contentContainer: "content-container",
  contentSlotContainer: "content-slot-container",
  description: "description",
  heading: "heading",
  largeVisual: "large-visual"
};
var SLOTS = {
  contentStart: "content-start",
  contentEnd: "content-end"
};
var tileCss = ":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{--calcite-tile-background-color:var(--calcite-color-foreground-1);--calcite-tile-border-color:var(--calcite-color-border-2);--calcite-tile-description-text-color:var(--calcite-color-text-3);--calcite-tile-heading-text-color:var(--calcite-color-text-2);box-sizing:border-box;display:inline-block;max-inline-size:460px;min-inline-size:140px}:host .container{background-color:var(--calcite-tile-background-color);block-size:var(--calcite-container-size-content-fluid);box-sizing:border-box;display:flex;flex-direction:column;gap:var(--calcite-spacing-md);inline-size:var(--calcite-container-size-content-fluid);pointer-events:none;transition-duration:150ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-user-select:none;user-select:none}:host .content-container{display:flex;outline-color:transparent;padding:0;inline-size:100%}:host .content-slot-container{align-items:center;display:flex}:host .content-slot-container:first-child{padding-inline:0 0.75rem}:host .content-slot-container:last-child{padding-inline:0.75rem 0}:host .heading{color:var(--calcite-tile-heading-text-color);font-size:var(--calcite-font-size--1);font-weight:var(--calcite-font-weight-medium);line-height:1.20313rem;overflow-wrap:break-word}:host .large-visual{align-items:center;justify-content:center;min-block-size:12rem;text-align:center}:host .large-visual calcite-icon{block-size:64px;inline-size:64px}:host .large-visual .content-container{justify-content:center}:host .description{color:var(--calcite-tile-description-text-color);font-size:var(--calcite-font-size--2);font-weight:var(--calcite-font-weight-regular);line-height:1.03125rem;overflow-wrap:break-word}:host([alignment=center]) .container{align-items:center;text-align:center}:host([scale=s]){max-inline-size:400px;min-inline-size:100px}:host([scale=s]) .container{gap:var(--calcite-spacing-sm)}:host([scale=s]) .heading{font-size:var(--calcite-font-size--2);line-height:1.03125rem}:host([scale=s]) .description{font-size:var(--calcite-font-size--3);line-height:0.85938rem}:host([scale=l]){max-inline-size:520px;min-inline-size:160px}:host([scale=l]) .container{gap:var(--calcite-spacing-xl)}:host([scale=l]) .heading{font-size:var(--calcite-font-size-0);line-height:1.375rem}:host([scale=l]) .description{font-size:var(--calcite-font-size--1);line-height:1.20313rem}:host(:not([href])){--calcite-ui-icon-color:var(--calcite-color-text-3)}:host([href]),:host([href]:hover){--calcite-tile-heading-text-color:var(--calcite-color-text-link)}:host([href]) .heading,:host([href]:hover) .heading{text-decoration-line:underline}:host(:not([embed])) .container{box-shadow:0 0 0 1px var(--calcite-tile-border-color);padding:var(--calcite-spacing-md)}:host(:not([embed])[scale=s]) .container{padding:var(--calcite-spacing-sm)}:host(:not([embed])[scale=l]) .container{padding:var(--calcite-spacing-xl)}:host(:not([embed])[href]:hover),:host(:not([embed])[href]:focus){--calcite-tile-border-color:var(--calcite-color-brand)}:host(:not([embed])[href]:hover) .container,:host(:not([embed])[href]:focus) .container{box-shadow:0 0 0 2px var(--calcite-tile-border-color);cursor:pointer;position:relative;z-index:var(--calcite-z-index)}:host(:not([embed])[href]:active){--calcite-tile-border-color:var(--calcite-color-brand)}:host(:not([embed])[href]:active) .container{box-shadow:0 0 0 3px var(--calcite-tile-border-color)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host(:hover),:host([active]){--calcite-tile-description-text-color:var(--calcite-color-text-2);--calcite-tile-heading-text-color:var(--calcite-color-text-1)}:host([hidden]){display:none}[hidden]{display:none}";
var Tile = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.handleContentStartSlotChange = (event) => {
      this.hasContentStart = slotChangeHasAssignedElement(event);
    };
    this.handleContentEndSlotChange = (event) => {
      this.hasContentEnd = slotChangeHasAssignedElement(event);
    };
    this.active = false;
    this.alignment = "start";
    this.description = void 0;
    this.disabled = false;
    this.embed = false;
    this.focused = false;
    this.heading = void 0;
    this.href = void 0;
    this.icon = void 0;
    this.iconFlipRtl = false;
    this.scale = "m";
    this.hasContentStart = false;
    this.hasContentEnd = false;
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectInteractive(this);
  }
  disconnectedCallback() {
    disconnectInteractive(this);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderTile() {
    const { icon, hasContentStart, hasContentEnd, heading, description, iconFlipRtl } = this;
    const isLargeVisual = heading && icon && !description;
    return h("div", { class: { [CSS.container]: true, [CSS.largeVisual]: isLargeVisual } }, icon && h("calcite-icon", { flipRtl: iconFlipRtl, icon, scale: "l" }), h("div", { class: CSS.contentContainer }, h("div", { class: { [CSS.contentSlotContainer]: hasContentStart } }, h("slot", { name: SLOTS.contentStart, onSlotchange: this.handleContentStartSlotChange })), h("div", { class: CSS.content }, heading && h("div", { class: CSS.heading }, heading), description && h("div", { class: CSS.description }, description)), h("div", { class: { [CSS.contentSlotContainer]: hasContentEnd } }, h("slot", { name: SLOTS.contentEnd, onSlotchange: this.handleContentEndSlotChange }))));
  }
  render() {
    const { disabled } = this;
    return h(InteractiveContainer, { disabled }, this.href ? h("calcite-link", { disabled, href: this.href }, this.renderTile()) : this.renderTile());
  }
  get el() {
    return getElement(this);
  }
};
Tile.style = tileCss;
export {
  Tile as calcite_tile
};
/*! Bundled license information:

@esri/calcite-components/dist/esm/calcite-tile.entry.js:
  (*!
   * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
   * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
   * v2.6.0
   *)
*/
//# sourceMappingURL=calcite-tile.entry-HK4ZVMD7.js.map
