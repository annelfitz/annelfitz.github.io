import {
  _
} from "./chunk-QNRX3HFY.js";
import {
  h
} from "./chunk-B4G2B67L.js";
import {
  e as e4
} from "./chunk-HLKM6YBE.js";
import {
  e as e3
} from "./chunk-EAAEPSBY.js";
import "./chunk-VXM3PR7E.js";
import "./chunk-VE57JPH4.js";
import "./chunk-YKIGDW5O.js";
import {
  c
} from "./chunk-XDDNM6BM.js";
import "./chunk-FLBJ53KN.js";
import "./chunk-CQFVWMFK.js";
import "./chunk-QX66UTIR.js";
import "./chunk-R4CJB3GP.js";
import {
  n as n2,
  t
} from "./chunk-HTKSTTSR.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-CZSTCON2.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import {
  D,
  e2,
  r
} from "./chunk-RGCWZ2KZ.js";
import {
  n
} from "./chunk-5VMSFOCB.js";
import "./chunk-LGQXPGTM.js";
import "./chunk-2SDMYJDE.js";
import "./chunk-TPLOIZC7.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  d
} from "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-MDRC3XUT.js";
import "./chunk-NCF6OYL5.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/analysis/SliceAnalysis.js
var a2 = class extends c {
  constructor(e5) {
    super(e5), this.type = "slice", this.tiltEnabled = false, this.shape = null, this.excludeGroundSurface = false;
  }
  get excludedLayers() {
    return this._get("excludedLayers") || new V();
  }
  set excludedLayers(e5) {
    this._set("excludedLayers", n2(e5, this._get("excludedLayers")));
  }
  get requiredPropertiesForEditing() {
    var _a;
    return [(_a = this.shape) == null ? void 0 : _a.position];
  }
  clear() {
    this.shape = null;
  }
};
e([y({ type: ["slice"] })], a2.prototype, "type", void 0), e([y()], a2.prototype, "tiltEnabled", void 0), e([y({ types: { key: "type", base: null, typeMap: { plane: h }, defaultKeyValue: "plane" } })], a2.prototype, "shape", void 0), e([y({ cast: t, clonable: (e5) => e5.slice() })], a2.prototype, "excludedLayers", null), e([y({ type: Boolean, nonNullable: true })], a2.prototype, "excludeGroundSurface", void 0), e([y({ readOnly: true })], a2.prototype, "requiredPropertiesForEditing", null), a2 = e([a("esri.analysis.SliceAnalysis")], a2);
var c2 = a2;

// node_modules/@arcgis/core/widgets/Slice/SliceViewModel.js
var a3 = /* @__PURE__ */ new Set();
var i = class extends _ {
  constructor(e5) {
    super(e5), this.analysis = null, this.supportedViewType = "3d", this.unsupportedErrorMessage = "SliceViewModel is only supported in 3D views.", a3.add(this);
  }
  destroy() {
    a3.delete(this);
  }
  get state() {
    return this.disabled || !this.ready ? "disabled" : null == this.tool ? "ready" : this.tool.state;
  }
  get shape() {
    return this.analysis.shape;
  }
  set shape(e5) {
    this.analysis.shape = e5;
  }
  get tiltEnabled() {
    return this.analysis.tiltEnabled;
  }
  set tiltEnabled(e5) {
    this.analysis.tiltEnabled = e5;
  }
  get layersMode() {
    var _a;
    return ((_a = this.tool) == null ? void 0 : _a.layersMode) ?? "none";
  }
  get excludedLayers() {
    return this.analysis.excludedLayers;
  }
  set excludedLayers(e5) {
    this.analysis.excludedLayers = V.isCollection(e5) ? e5 : new V(e5);
  }
  get excludeGroundSurface() {
    return this.analysis.excludeGroundSurface;
  }
  set excludeGroundSurface(e5) {
    this.analysis.excludeGroundSurface = e5;
  }
  async start() {
    await super.start(), a3.forEach((e5) => {
      e5.view === this.view && e5 !== this && e5.clear();
    }), null != this.analysisView && (this.analysisView.active = true);
  }
  enterExcludeLayerMode() {
    null != this.tool && this.tool.enterExcludeLayerMode();
  }
  exitExcludeLayerMode() {
    null != this.tool && this.tool.exitExcludeLayerMode();
  }
  onConnectToAnalysisView(e5) {
    e5.active = true;
  }
  constructAnalysis() {
    return new c2();
  }
};
e([y({ type: c2 })], i.prototype, "analysis", void 0), e([y({ readOnly: true })], i.prototype, "state", null), e([y()], i.prototype, "shape", null), e([y()], i.prototype, "tiltEnabled", null), e([y()], i.prototype, "layersMode", null), e([y()], i.prototype, "excludedLayers", null), e([y({ nonNullable: true })], i.prototype, "excludeGroundSurface", null), i = e([a("esri.widgets.Slice.SliceViewModel")], i);
var n3 = i;

// node_modules/@arcgis/core/widgets/Slice.js
var u = "esri-slice";
var p = { base: u, actions: `${u}__actions`, cancelButton: `${u}__cancel-button`, container: `${u}__container`, error: `${u}__error`, excludeButton: `${u}__exclude-button`, hint: `${u}__hint`, hintText: `${u}__hint-text`, layerItem: `${u}__layer-item`, layerList: `${u}__layer-list`, layerListHeading: `${u}__layer-list-title`, newSliceButton: `${u}__clear-button` };
var m = class extends D {
  constructor(e5, s) {
    super(e5, s), this.headingLevel = 3, this.messages = null, this.viewModel = new n3(), this._onNewSliceClick = () => {
      d(this.viewModel.start());
    };
  }
  loadDependencies() {
    return r({ action: () => import("./calcite-action-P2CTRNG2.js"), button: () => import("./calcite-button-V4T5NPWY.js"), "list-item": () => import("./calcite-list-item-K4SMX7ZK.js"), list: () => import("./calcite-list-CC3BA3BY.js") });
  }
  get active() {
    return this.viewModel.active;
  }
  get analysis() {
    return this.viewModel.analysis;
  }
  set analysis(e5) {
    this.viewModel.analysis = e5;
  }
  get excludedLayers() {
    return this.viewModel.excludedLayers;
  }
  set excludedLayers(e5) {
    this.viewModel.excludedLayers = e5;
  }
  get excludeGroundSurface() {
    return this.viewModel.excludeGroundSurface;
  }
  set excludeGroundSurface(e5) {
    this.viewModel.excludeGroundSurface = e5;
  }
  get icon() {
    return "slice";
  }
  set icon(e5) {
    this._overrideIfSome("icon", e5);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e5) {
    this._overrideIfSome("label", e5);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e5) {
    this.viewModel.view = e5;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(e5) {
    this.viewModel.visible = e5;
  }
  get hasVoxelLayers() {
    var _a;
    const e5 = (_a = this.viewModel) == null ? void 0 : _a.view;
    return null != e5 && e5.allLayerViews.some((e6) => "voxel-3d" === e6.type);
  }
  render() {
    return n("div", { class: this.classes(p.base, e3.widget, e3.panel), role: "presentation" }, this.visible ? n("div", { class: p.container }, this.viewModel.supported ? [this._renderHint(), this._renderLayerList(), this._renderActions()] : this._renderUnsupported()) : null);
  }
  _renderUnsupported() {
    return n("div", { class: p.error, key: "unsupported" }, n("p", null, this.messages.unsupported));
  }
  _renderHint() {
    const { hasVoxelLayers: e5, messages: t2, viewModel: s } = this, { active: i2, layersMode: l, state: r2 } = s;
    let o = null;
    return i2 && ("exclude" === l ? o = t2.excludeHint : "ready" === r2 && (o = e5 ? t2.voxelHint : t2.hint)), o ? n("div", { class: p.hint, key: "hint" }, n("p", { class: p.hintText }, o), n("p", { class: p.hintText }, t2.verticalHint)) : null;
  }
  _renderLayerList() {
    const { excludedLayers: e5, excludeGroundSurface: t2, headingLevel: s, messages: i2, viewModel: l } = this, { layersMode: r2, state: o } = l, n4 = "slicing" === o || "sliced" === o, a4 = e5 ? e5.toArray().map((e6) => this._renderLayerItem({ uid: e6.uid, title: e6.title, onClick: () => (this.excludedLayers.remove(e6), false) })) : [];
    return t2 && a4.push(this._renderLayerItem({ uid: "ground", title: i2.ground, onClick: () => (this.excludeGroundSurface = false, false) })), "exclude" !== r2 && n4 && 0 !== a4.length ? n("div", { class: p.layerList, key: "settings" }, n(e4, { class: p.layerListHeading, level: s }, i2.excludedLayers), n("calcite-list", { selectionMode: "none" }, a4)) : null;
  }
  _renderActions() {
    const { messages: e5, viewModel: t2 } = this, { active: s, state: i2 } = t2, l = "disabled" === i2, r2 = "slicing" === i2 || "sliced" === i2, o = "exclude" === t2.layersMode, n4 = [];
    return s && !r2 || o || n4.push(n("calcite-button", { class: p.newSliceButton, disabled: l, key: "new-slice", onclick: this._onNewSliceClick }, e5.newSlice)), r2 && !o && n4.push(n("calcite-button", { appearance: "outline-fill", class: p.excludeButton, disabled: l, key: "exclude", onclick: () => t2.enterExcludeLayerMode() }, e5.excludeLayer)), s && o && n4.push(n("calcite-button", { appearance: "outline-fill", class: p.cancelButton, disabled: l, key: "cancel-exclude", onclick: () => t2.exitExcludeLayerMode() }, e5.cancel)), 0 === n4.length ? null : n("div", { class: p.actions }, n4);
  }
  _renderLayerItem(e5) {
    const t2 = this.messages.includeLayer;
    return n("calcite-list-item", { class: p.layerItem, key: e5.uid, label: e5.title ?? "" }, n("calcite-action", { icon: "x", onclick: e5.onClick, scale: "s", slot: "actions-end", text: t2, title: t2 }));
  }
};
e([y()], m.prototype, "active", null), e([y({ constructOnly: true, nonNullable: true })], m.prototype, "analysis", null), e([y()], m.prototype, "excludedLayers", null), e([y()], m.prototype, "excludeGroundSurface", null), e([y()], m.prototype, "headingLevel", void 0), e([y()], m.prototype, "icon", null), e([y()], m.prototype, "label", null), e([y(), e2("esri/widgets/Slice/t9n/Slice")], m.prototype, "messages", void 0), e([y()], m.prototype, "view", null), e([y({ type: n3 })], m.prototype, "viewModel", void 0), e([y()], m.prototype, "visible", null), e([y()], m.prototype, "hasVoxelLayers", null), m = e([a("esri.widgets.Slice")], m);
var y2 = m;
export {
  y2 as default
};
//# sourceMappingURL=Slice-KGOEO7V3.js.map
