import {
  n as n5
} from "./chunk-YA4N4OVA.js";
import {
  d as d3,
  f
} from "./chunk-4VAAKQZY.js";
import {
  A as A3
} from "./chunk-BJMVCX7I.js";
import {
  D as D2
} from "./chunk-DUBEFL4F.js";
import {
  t
} from "./chunk-UYZHJ6W5.js";
import {
  a as a3
} from "./chunk-LVTZ43ZA.js";
import {
  e as e5
} from "./chunk-7RP2CUPD.js";
import {
  e as e7
} from "./chunk-HLKM6YBE.js";
import {
  e as e6
} from "./chunk-EAAEPSBY.js";
import "./chunk-JBF6CULO.js";
import "./chunk-3AIILHI5.js";
import "./chunk-P4MNTMCZ.js";
import "./chunk-WZJNHZ6H.js";
import "./chunk-UQA6M3KF.js";
import "./chunk-ZLQTPFTL.js";
import "./chunk-N5GQOIDP.js";
import "./chunk-HWHMO3CO.js";
import {
  n as n4
} from "./chunk-HTKSTTSR.js";
import {
  u as u3
} from "./chunk-WDPG5BMO.js";
import {
  c as c2,
  i as i2,
  s as s3
} from "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import {
  i as i3,
  m
} from "./chunk-6CWL7BCV.js";
import {
  i
} from "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import {
  n as n3
} from "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import {
  D,
  e2 as e4,
  r
} from "./chunk-RGCWZ2KZ.js";
import {
  n as n2
} from "./chunk-5VMSFOCB.js";
import "./chunk-LGQXPGTM.js";
import {
  g
} from "./chunk-2SDMYJDE.js";
import {
  n
} from "./chunk-TPLOIZC7.js";
import {
  s as s2,
  u as u2
} from "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import {
  j
} from "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import {
  Duration
} from "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import {
  a as a2,
  c
} from "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import {
  A as A2,
  d as d2
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import {
  d
} from "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  S,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  A,
  e as e3,
  s
} from "./chunk-JGDJR5EV.js";
import {
  e as e2,
  l,
  u
} from "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import "./chunk-7RBRCL6S.js";
import {
  k
} from "./chunk-J2EGIWT6.js";
import "./chunk-MDRC3XUT.js";
import "./chunk-NCF6OYL5.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/widgets/ShadowCast/css.js
var i4 = "esri-shadow-cast";
var e8 = { base: i4, timeRange: `${i4}__time-range`, timeRangeIndicator: `${i4}__time-range__indicator`, datePickerContainer: `${i4}__date-picker-container`, datePicker: `${i4}__date-picker`, visualization: `${i4}__visualization`, visualizationSelect: `${i4}__visualization__select`, visualizationConfigHidden: `${i4}__visualization__config--hidden` };
var a4 = `${i4}__label`;
var _ = `${i4}__threshold-config`;
var t2 = { base: _, valueLabel: `${_}__value-label` };
var n6 = `${i4}__duration-config`;
var o = { base: n6, radioGroup: `${n6}__radio-group` };
var r2 = `${i4}__discrete-config`;
var c3 = { base: r2 };
var s4 = `${i4}__tooltip`;
var l2 = { base: s4, content: `${s4}__content` };

// node_modules/@arcgis/core/widgets/ShadowCast/ShadowCastState.js
var a5;
!function(a6) {
  a6.Disabled = "disabled", a6.Ready = "ready";
}(a5 || (a5 = {}));

// node_modules/@arcgis/core/widgets/ShadowCast/DiscreteOptions.js
var p = class extends S {
  constructor() {
    super({}), this.color = new u3([50, 50, 50, 0.7]), this.intervalOptions = new V([m(15, "minutes", "milliseconds"), m(30, "minutes", "milliseconds"), m(1, "hours", "milliseconds"), m(2, "hours", "milliseconds"), m(3, "hours", "milliseconds")]), this.interval = this.intervalOptions.at(0);
  }
  set intervalOptions(o3) {
    this._set("intervalOptions", n4(o3, this._get("intervalOptions")));
  }
};
e([y({ type: u3 })], p.prototype, "color", void 0), e([y()], p.prototype, "interval", void 0), e([y({ type: V })], p.prototype, "intervalOptions", null), p = e([a("esri.widgets.ShadowCast.DiscreteOptions")], p);
var n7 = p;

// node_modules/@arcgis/core/widgets/ShadowCast/DurationMode.js
var o2;
!function(o3) {
  o3.Continuous = "continuous", o3.Hourly = "hourly";
}(o2 || (o2 = {}));

// node_modules/@arcgis/core/widgets/ShadowCast/DurationOptions.js
var c4 = class extends S {
  constructor() {
    super(...arguments), this.color = new u3([0, 0, 255, 0.7]), this.mode = o2.Continuous;
  }
};
e([y({ type: u3 })], c4.prototype, "color", void 0), e([y()], c4.prototype, "mode", void 0), c4 = e([a("esri.widgets.ShadowCast.DurationOptions")], c4);
var i5 = c4;

// node_modules/@arcgis/core/widgets/ShadowCast/ShadowTooltipViewModel.js
var l3;
!function(t3) {
  t3.PointerMove = "pointer-move", t3.Main = "main";
}(l3 || (l3 = {}));
var m2 = 300;
var u4 = class extends S {
  constructor(t3) {
    super(t3), this._screenPoint = null, this._accumulatedShadowTime = null, this._shadowTimeTask = null, this._updateAccumulatedShadowTime = (t4, e12) => {
      this._shadowTimeTask = e2(this._shadowTimeTask), this._shadowTimeTask = d(async (o3) => {
        const { results: i7, ground: s6 } = await t4.hitTest(e12);
        if (0 === i7.length && !s6.mapPoint)
          return void (this._accumulatedShadowTime = null);
        const a6 = await this.getDuration(e12, o3);
        this._accumulatedShadowTime = a6;
      });
    }, this._throttledUpdateAccumulatedShadowTime = e5(this._updateAccumulatedShadowTime, m2);
  }
  initialize() {
    this.addHandles(d2(() => ({ enabled: this.enabled, view: this.view }), ({ enabled: t3, view: e12 }) => {
      t3 && null != e12 ? this._startTracking(e12) : this._stopTracking();
    }, A2));
  }
  get screenPoint() {
    return this.enabled ? this._screenPoint : null;
  }
  get accumulatedShadowTime() {
    return this.enabled ? this._accumulatedShadowTime : null;
  }
  get testData() {
    return { setThrottleDelay: (t3) => {
      this._throttledUpdateAccumulatedShadowTime.remove(), this._throttledUpdateAccumulatedShadowTime = e5(this._updateAccumulatedShadowTime, t3);
    } };
  }
  _startTracking(t3) {
    if (this.hasHandles(l3.Main))
      return;
    const e12 = () => {
      this.hasHandles(l3.PointerMove) || this.addHandles(t3.on("pointer-move", (e13) => {
        const o4 = c2(e13.x, e13.y);
        this._screenPoint = o4, this._throttledUpdateAccumulatedShadowTime(t3, o4);
      }), l3.PointerMove);
    }, o3 = () => {
      this.removeHandles(l3.PointerMove), this._screenPoint = null, this._accumulatedShadowTime = null;
    };
    this.addHandles([this._throttledUpdateAccumulatedShadowTime, t3.on("pointer-enter", e12), t3.on("pointer-leave", o3), t3.on("pointer-down", o3), t3.on("pointer-drag", o3), t3.on("pointer-up", e12), t3.on("click", (e13) => {
      const o4 = c2(e13.x, e13.y);
      this._screenPoint = o4, this._updateAccumulatedShadowTime(t3, o4);
    }), e3(() => {
      this._shadowTimeTask = e2(this._shadowTimeTask);
    })], l3.Main), e12();
  }
  _stopTracking() {
    this.removeHandles(l3.Main);
  }
};
e([y()], u4.prototype, "getDuration", void 0), e([y()], u4.prototype, "view", void 0), e([y()], u4.prototype, "enabled", void 0), e([y()], u4.prototype, "screenPoint", null), e([y()], u4.prototype, "accumulatedShadowTime", null), e([y()], u4.prototype, "_screenPoint", void 0), e([y()], u4.prototype, "_accumulatedShadowTime", void 0), e([y()], u4.prototype, "_shadowTimeTask", void 0), u4 = e([a("esri.widgets.ShadowCast.ShadowTooltipViewModel")], u4);

// node_modules/@arcgis/core/widgets/ShadowCast/ShadowVisualizationType.js
var r3;
!function(r5) {
  r5.Threshold = "threshold", r5.Duration = "duration", r5.Discrete = "discrete";
}(r3 || (r3 = {}));
var e9 = [r3.Threshold, r3.Duration, r3.Discrete];

// node_modules/@arcgis/core/widgets/ShadowCast/ThresholdOptions.js
var p2 = class extends S {
  constructor() {
    super(...arguments), this.color = new u3([255, 0, 0, 0.7]), this.value = m(4, "hours", "milliseconds"), this.minValue = 0, this.maxValue = m(8, "hours", "milliseconds");
  }
};
e([y({ type: u3 })], p2.prototype, "color", void 0), e([y()], p2.prototype, "value", void 0), e([y()], p2.prototype, "minValue", void 0), e([y()], p2.prototype, "maxValue", void 0), p2 = e([a("esri.widgets.ShadowCast.ThresholdOptions")], p2);
var c5 = p2;

// node_modules/@arcgis/core/widgets/ShadowCast/ShadowCastViewModel.js
var C = [];
var V2 = n3();
var E = [];
var R = 255;
var A4 = m(1, "hours", "milliseconds");
var S2 = 500;
var x = class extends S {
  constructor(e12) {
    super(e12), this.view = null, this.tooltip = new u4({ getDuration: (e13, t3) => this.getDuration(e13, t3) }), this.startTimeOfDay = m(10, "hours", "milliseconds"), this.endTimeOfDay = m(16, "hours", "milliseconds"), this.visualizationType = r3.Threshold, this.thresholdOptions = new c5(), this.durationOptions = new i5(), this.discreteOptions = new n7(), this._running = true, this._stopPreviewingTask = null, this._forcePreview = false, this._autoRestoreForcePreviewEnabled = true, this._utcOffset = null, this.date = /* @__PURE__ */ new Date();
  }
  initialize() {
    this.addHandles([d2(() => ({ view: this.view, tooltipEnabled: this._tooltipEnabled }), ({ view: e12, tooltipEnabled: t3 }) => {
      this.tooltip.view = e12, this.tooltip.enabled = t3;
    }, A2), d2(() => this._forcePreviewDependencies, () => {
      e2(this._stopPreviewingTask), this._forcePreview = true, this._autoRestoreForcePreviewEnabled && (this._stopPreviewingTask = d(async (e12) => {
        await A(S2, e12), s(e12), this._forcePreview = false;
      }));
    }, A2), d2(() => ({ renderer: this.renderer, parameters: this._visualizationParameters }), (e12) => N(e12.renderer, e12.parameters), A2), d2(() => ({ renderer: this.renderer, parameters: { lightDirections: this._lightDirections } }), (e12) => N(e12.renderer, e12.parameters), A2), d2(() => ({ renderer: this.renderer, parameters: { enabled: this._running } }), (e12) => N(e12.renderer, e12.parameters), A2), d2(() => ({ renderer: this.renderer, parameters: { previewing: this._previewing } }), (e12) => N(e12.renderer, e12.parameters), A2)]);
  }
  destroy() {
    this.stop(), N(this.renderer, { enabled: false }), u(this.tooltip);
  }
  get state() {
    return null != this.view && this.view.ready && null != this._referencePosition ? a5.Ready : a5.Disabled;
  }
  set date(e12) {
    const t3 = new Date(e12);
    t3.setHours(0, 0, 0, 0), this._set("date", t3);
  }
  get utcOffset() {
    return this._utcOffset ?? this._utcOffsetAuto;
  }
  set utcOffset(e12) {
    this._utcOffset = e12;
  }
  get testData() {
    return { setAutoRestoreForcedPreviewEnabled: (e12) => {
      this._autoRestoreForcePreviewEnabled = e12;
    }, setForcedPreview: (e12) => {
      this._forcePreview = e12;
    }, isPreviewing: () => this._previewing };
  }
  get _previewing() {
    const { view: e12 } = this;
    return null == (e12 == null ? void 0 : e12.allLayerViews) || (this._forcePreview || !e12.stationary || e12.allLayerViews.some((e13) => M(e13) && e13.updating));
  }
  get _utcOffsetAuto() {
    const e12 = this._referencePosition;
    return null != e12 ? a3(e12[0], false) : 0;
  }
  get _dateUTCOffset() {
    let e12 = this.date;
    return e12 = i3(e12, -e12.getTimezoneOffset(), "minutes"), e12 = i3(e12, -this.utcOffset, "hours"), e12;
  }
  get _startDateTimeUTC() {
    return i3(this._dateUTCOffset, this.startTimeOfDay);
  }
  get _endDateTimeUTC() {
    return i3(this._dateUTCOffset, this.endTimeOfDay);
  }
  get _referencePosition() {
    var _a, _b;
    return (_b = (_a = this.view) == null ? void 0 : _a.environmentManager) == null ? void 0 : _b.referencePositionGeographic;
  }
  get _interval() {
    const e12 = this._duration > 0 ? Math.floor(this._duration / R) : R, t3 = this.discreteOptions.interval;
    switch (this.visualizationType) {
      case r3.Threshold:
      case r3.Duration:
        return e12;
      case r3.Discrete:
        return t3 > 0 ? t3 : e12;
    }
  }
  get _sampleCount() {
    return this._lightDirections.length;
  }
  get _duration() {
    return this.endTimeOfDay - this.startTimeOfDay;
  }
  get _lightDirections() {
    const { view: e12 } = this;
    if (null == e12)
      return C;
    const t3 = "global" === e12.viewingMode ? V2 : this._referencePosition;
    if (null == t3)
      return C;
    const i7 = this._interval, r5 = D2(this._startDateTimeUTC, this._endDateTimeUTC, i7, t3, e12.state.viewingMode), s6 = r5.length;
    E.length = 0;
    const o3 = n5(0, s6, E), n9 = new Array(s6);
    for (let a6 = 0; a6 < s6; ++a6)
      n9[a6] = r5[o3[a6]];
    return n9;
  }
  get _tooltipEnabled() {
    return this.state === a5.Ready && this.visualizationType !== r3.Discrete && this._running && !this._previewing;
  }
  get _visualizationParameters() {
    if (!this._running)
      return null;
    switch (this.visualizationType) {
      case r3.Threshold:
        return this._thresholdVisualizationParameters;
      case r3.Duration:
        return this._durationVisualizationParameters;
      case r3.Discrete:
        return this._discreteVisualizationParameters;
    }
  }
  get _thresholdVisualizationParameters() {
    const { value: e12, color: i7 } = this.thresholdOptions, r5 = this._duration;
    return { visualization: t.Threshold, color: u3.toUnitRGBA(i7), threshold: r5 > 0 ? e12 / this._duration : 0 };
  }
  get _durationVisualizationParameters() {
    const { color: e12, mode: i7 } = this.durationOptions, r5 = this._duration, s6 = r5 > 0 && i7 === o2.Hourly ? A4 / r5 : 0;
    return { color: u3.toUnitRGBA(e12), visualization: t.Gradient, bandsEnabled: s6 > 0, bandSize: s6 };
  }
  get _discreteVisualizationParameters() {
    return { color: u3.toUnitRGBA(this.discreteOptions.color), visualization: t.Gradient, bandsEnabled: false, bandSize: 0 };
  }
  get _forcePreviewDependencies() {
    const { view: e12 } = this;
    if (null == e12)
      return null;
    const t3 = e12.slicePlane, i7 = e12.allLayerViews.toArray().filter(M), s6 = i7.map((e13) => e13.layer).filter(k), o3 = i7.map((e13) => e13.visible), n9 = s6.map((e13) => e13.visible), a6 = s6.map((e13) => e13.opacity), l5 = s6.filter((e13) => "definitionExpression" in e13).map((e13) => e13.definitionExpression), u7 = i7.filter((e13) => "filter" in e13).map((e13) => e13.filter);
    return { slicePlane: t3, startDateUTC: this._startDateTimeUTC, endDateUTC: this._endDateTimeUTC, layerViewVisibilities: o3, layerVisibilities: n9, layerOpacities: a6, filters: u7, definitionExpressions: l5 };
  }
  get renderer() {
    const { view: e12 } = this;
    if (null == e12)
      return null;
    const t3 = e12._stage;
    return null == t3 ? null : t3.renderer;
  }
  start() {
    this.setRunning(true);
  }
  stop() {
    this.setRunning(false);
  }
  setRunning(e12) {
    this._running = e12;
  }
  async getDuration(e12, t3) {
    const { view: i7, renderer: r5 } = this;
    if (null == i7 || null == r5)
      return 0;
    const s6 = i7.state.camera.screenToRender(i2(e12.x, e12.y), s3()), o3 = r5.readAccumulatedShadow(s6), n9 = this._sampleCount;
    if (0 === n9)
      return 0;
    return o3 * n9 * (this._duration / n9);
  }
};
function N(e12, t3) {
  null != e12 && null != t3 && e12.setParameters({ shadowCastOptions: t3 });
}
function M(e12) {
  if (e12.suspended)
    return false;
  switch (e12.type) {
    case "building-scene-3d":
    case "csv-3d":
    case "elevation-3d":
    case "feature-3d":
    case "geojson-3d":
    case "graphics-3d":
    case "integrated-mesh-3d":
    case "integrated-mesh-3dtiles":
    case "ogc-feature-3d":
    case "route-3d":
    case "scene-layer-3d":
    case "scene-layer-graphics-3d":
    case "stream-3d":
    case "wms-3d":
      return true;
    case "base-dynamic-3d":
    case "dimension-3d":
    case "imagery-3d":
    case "imagery-tile-3d":
    case "line-of-sight-3d":
    case "map-image-3d":
    case "point-cloud-3d":
    case "tile-3d":
    case "vector-tile-3d":
    case "voxel-3d":
    case "wfs-3d":
    case "wmts-3d":
    case "media-3d":
    default:
      return false;
    case "group":
      return e12.layerViews.toArray().some((e13) => M(e13));
  }
}
e([y()], x.prototype, "state", null), e([y()], x.prototype, "view", void 0), e([y()], x.prototype, "tooltip", void 0), e([y({ nonNullable: true })], x.prototype, "date", null), e([y({ nonNullable: true })], x.prototype, "utcOffset", null), e([y({ nonNullable: true })], x.prototype, "startTimeOfDay", void 0), e([y({ nonNullable: true })], x.prototype, "endTimeOfDay", void 0), e([y({ nonNullable: true })], x.prototype, "visualizationType", void 0), e([y({ type: c5, nonNullable: true })], x.prototype, "thresholdOptions", void 0), e([y({ type: i5, nonNullable: true })], x.prototype, "durationOptions", void 0), e([y({ type: n7, nonNullable: true })], x.prototype, "discreteOptions", void 0), e([y()], x.prototype, "_running", void 0), e([y()], x.prototype, "_stopPreviewingTask", void 0), e([y()], x.prototype, "_forcePreview", void 0), e([y()], x.prototype, "_autoRestoreForcePreviewEnabled", void 0), e([y()], x.prototype, "_previewing", null), e([y()], x.prototype, "_utcOffset", void 0), e([y()], x.prototype, "_utcOffsetAuto", null), e([y()], x.prototype, "_dateUTCOffset", null), e([y()], x.prototype, "_startDateTimeUTC", null), e([y()], x.prototype, "_endDateTimeUTC", null), e([y()], x.prototype, "_referencePosition", null), e([y()], x.prototype, "_interval", null), e([y()], x.prototype, "_sampleCount", null), e([y()], x.prototype, "_duration", null), e([y()], x.prototype, "_lightDirections", null), e([y()], x.prototype, "_tooltipEnabled", null), e([y()], x.prototype, "_visualizationParameters", null), e([y()], x.prototype, "_thresholdVisualizationParameters", null), e([y()], x.prototype, "_durationVisualizationParameters", null), e([y()], x.prototype, "_discreteVisualizationParameters", null), e([y()], x.prototype, "_forcePreviewDependencies", null), e([y()], x.prototype, "renderer", null), x = e([a("esri.widgets.ShadowCast.ShadowCastViewModel")], x);
var F = x;

// node_modules/@arcgis/core/widgets/ShadowCast/ShadowCastVisibleElements.js
var s5 = class extends S {
  constructor() {
    super(...arguments), this.timeRangeSlider = true, this.timezone = true, this.datePicker = true, this.visualizationOptions = true, this.colorPicker = true, this.tooltip = true;
  }
};
e([y()], s5.prototype, "timeRangeSlider", void 0), e([y()], s5.prototype, "timezone", void 0), e([y()], s5.prototype, "datePicker", void 0), e([y()], s5.prototype, "visualizationOptions", void 0), e([y()], s5.prototype, "colorPicker", void 0), e([y()], s5.prototype, "tooltip", void 0), s5 = e([a("esri.widgets.ShadowCast.ShadowCastVisibleElements")], s5);
var i6 = s5;

// node_modules/@arcgis/core/intl/duration.js
function n8(l5, r5 = "milliseconds", n9 = {}) {
  const i7 = { locale: e10(), numberingSystem: "latn" };
  let s6;
  return s6 = l5 ? Duration.fromMillis(m(l5, r5, "milliseconds"), i7).rescale() : Duration.fromObject({ seconds: 0 }, i7), s6.toHuman({ listStyle: "narrow", unitDisplay: "long", ...n9 });
}
function e10() {
  return "bs" === a2() ? "hr" : c();
}

// node_modules/@arcgis/core/widgets/ShadowCast/components/Label.js
function r4(r5, e12) {
  const { for: a6, label: c7, tabIndex: l5, ...i7 } = r5;
  return n2("div", { class: g(a4, i7 == null ? void 0 : i7.class), key: a6, ...i7 }, n2("calcite-label", { for: a6, scale: "s", tabIndex: l5 }, c7), e12);
}

// node_modules/@arcgis/core/widgets/support/ColorPicker.js
var c6 = "esri-color-picker";
var d4 = { base: c6, backgroundPattern: `${c6}__bg-pattern`, toggleButton: `${c6}__toggle-button`, popover: `${c6}__popover` };
var m3 = class extends D {
  constructor(e12, t3) {
    super(e12, t3), this.value = new u3(), this.alphaEnabled = true, this._containerElement = null, this._button = null, this._open = false, this._onColorInput = (e13) => {
      var _a;
      const t4 = e13.target.value, r5 = "string" == typeof t4 ? new u3(t4) : new u3();
      this.value = r5, (_a = this.onChange) == null ? void 0 : _a.call(this, r5);
    };
  }
  initialize() {
    this.addHandles(d2(() => ({ container: this._containerElement, value: this.value }), ({ container: e12, value: o3 }) => {
      e12 == null ? void 0 : e12.style.setProperty("--esri-color-picker-value", o3.toCss(true));
    }, A2));
  }
  loadDependencies() {
    return r({ button: () => import("./calcite-button-V4T5NPWY.js"), "color-picker": () => import("./calcite-color-picker-C43X433H.js"), popover: () => import("./calcite-popover-4LQ4GPZW.js") });
  }
  render() {
    const e12 = this._messages, o3 = this._open ? e12.close : e12.open;
    return n2("div", { afterCreate: (e13) => this._containerElement = e13, class: this.classes(d4.base, this.class) }, n2("div", { class: d4.backgroundPattern, key: "background-pattern" }), n2("calcite-button", { afterCreate: (e13) => this._button = e13, appearance: "transparent", class: d4.toggleButton, key: "popover-trigger", kind: "neutral", label: o3, scale: "s", tabIndex: -1, title: o3 }), n2("calcite-popover", { autoClose: true, class: d4.popover, key: "popover", label: e12.label, overlayPositioning: "fixed", referenceElement: this._button, onCalcitePopoverClose: () => this._open = false, onCalcitePopoverOpen: () => this._open = true }, n2("calcite-color-picker", { alphaChannel: this.alphaEnabled, channelsDisabled: true, key: "color-picker", savedDisabled: true, value: this.value.toCss(), onCalciteColorPickerInput: this._onColorInput })));
  }
};
e([y()], m3.prototype, "class", void 0), e([y()], m3.prototype, "value", void 0), e([y()], m3.prototype, "alphaEnabled", void 0), e([y()], m3.prototype, "onChange", void 0), e([y()], m3.prototype, "_containerElement", void 0), e([y()], m3.prototype, "_button", void 0), e([y()], m3.prototype, "_open", void 0), e([y(), e4("esri/widgets/support/t9n/ColorPicker")], m3.prototype, "_messages", void 0), m3 = e([a("esri.widgets.support.ColorPicker")], m3);

// node_modules/@arcgis/core/widgets/ShadowCast/components/LabeledColorPicker.js
function e11(e12) {
  return n2(r4, { for: e12.id, label: e12.label, tabIndex: -1 }, n2(m3, { id: e12.id, value: e12.value, onChange: e12.onChange }));
}

// node_modules/@arcgis/core/widgets/ShadowCast/components/DiscreteConfigurator.js
var d5 = class extends D {
  constructor(o3) {
    super(o3), this.colorPickerVisible = true, this._selectId = `select-${n()}`, this._colorPickerId = `color-picker-${n()}`, this._onColorChange = (o4) => {
      this.options.color = o4;
    };
  }
  loadDependencies() {
    return r({ label: () => import("./calcite-label-W4VTHQAF.js"), option: () => import("./calcite-option-TCD47JBL.js"), select: () => import("./calcite-select-DL7WB63T.js") });
  }
  render() {
    const o3 = this._messages.discrete, e12 = o3.intervalLabel, { color: t3, interval: s6, intervalOptions: i7 } = this.options;
    return n2("div", { class: c3.base }, n2(r4, { for: this._selectId, label: e12 }, n2("calcite-select", { bind: this, id: this._selectId, label: e12, onCalciteSelectChange: this._onIntervalChange }, i7.toArray().map((o4) => n2("calcite-option", { key: o4, selected: o4 === s6, value: String(o4) }, n8(o4))))), this.colorPickerVisible ? n2(e11, { id: this._colorPickerId, label: o3.colorLabel, value: t3, onChange: this._onColorChange }) : null);
  }
  _onIntervalChange(o3) {
    var _a;
    const e12 = parseInt((_a = o3.target.selectedOption) == null ? void 0 : _a.value, 10);
    Number.isFinite(e12) && (this.options.interval = e12);
  }
};
e([y()], d5.prototype, "options", void 0), e([y()], d5.prototype, "colorPickerVisible", void 0), e([y(), e4("esri/widgets/ShadowCast/t9n/ShadowCast")], d5.prototype, "_messages", void 0), d5 = e([a("esri.widgets.ShadowCast.components.DiscreteConfigurator")], d5);

// node_modules/@arcgis/core/widgets/ShadowCast/components/DurationConfigurator.js
var u5 = class extends D {
  constructor(o3) {
    super(o3), this.colorPickerVisible = true, this._modeSelectorId = `mode-selector-${n()}`, this._colorPickerId = `color-picker-${n()}`, this._onColorChange = (o4) => {
      this.options.color = o4;
    }, this._setContinuous = () => {
      this.options.mode = o2.Continuous;
    }, this._setHourly = () => {
      this.options.mode = o2.Hourly;
    };
  }
  loadDependencies() {
    return r({ button: () => import("./calcite-button-V4T5NPWY.js"), label: () => import("./calcite-label-W4VTHQAF.js") });
  }
  render() {
    const o3 = this._messages.duration, { color: t3, mode: s6 } = this.options;
    return n2("div", { class: o.base }, n2(r4, { for: this._modeSelectorId, label: o3.modeLabel }, n2("div", { class: o.radioGroup }, n2(d6, { active: s6 === o2.Continuous, label: o3.continuousLabel, onclick: this._setContinuous }), n2(d6, { active: s6 === o2.Hourly, label: o3.hourlyLabel, onclick: this._setHourly }))), this.colorPickerVisible ? n2(e11, { id: this._colorPickerId, label: o3.colorLabel, value: t3, onChange: this._onColorChange }) : null);
  }
};
function d6({ active: o3, label: t3, ...s6 }) {
  return n2("calcite-button", { alignment: "center", appearance: o3 ? "solid" : "outline", scale: "s", width: "half", ...s6 }, t3);
}
e([y()], u5.prototype, "options", void 0), e([y()], u5.prototype, "colorPickerVisible", void 0), e([y(), e4("esri/widgets/ShadowCast/t9n/ShadowCast")], u5.prototype, "_messages", void 0), u5 = e([a("esri.widgets.ShadowCast.components.DurationConfigurator")], u5);

// node_modules/@arcgis/core/widgets/ShadowCast/components/ShadowTooltipContent.js
var l4 = m(1, "minutes", "milliseconds");
var d7 = m(15, "minutes", "milliseconds");
var u6 = class extends D {
  constructor(t3, o3) {
    super(t3, o3), this.accumulatedShadowTime = null, this._messages = null;
  }
  render() {
    const t3 = this._formattedContent;
    return n2("div", { class: l2.base }, t3 ? n2("div", { class: l2.content }, t3) : null);
  }
  get _formattedContent() {
    const t3 = this._messages, s6 = this.accumulatedShadowTime;
    if (null == t3 || null == s6)
      return null;
    const r5 = i(s6, s6 < d7 ? l4 : d7);
    return s2(t3.timeInShadow, { duration: n8(r5) });
  }
};
e([y()], u6.prototype, "accumulatedShadowTime", void 0), e([y()], u6.prototype, "view", void 0), e([y(), e4("esri/widgets/ShadowCast/t9n/ShadowCast")], u6.prototype, "_messages", void 0), e([y({ readOnly: true })], u6.prototype, "_formattedContent", null), u6 = e([a("esri.widgets.ShadowCast.components.ShadowTooltipContent")], u6);

// node_modules/@arcgis/core/widgets/ShadowCast/components/ShadowTooltip.js
var d8 = class extends S {
  constructor(t3) {
    super(t3), this._updateHandle = null, this._contentContainer = this._createContainer();
  }
  initialize() {
    this.container.appendChild(this._contentContainer), this._contentWidget = new u6({}, this._contentContainer), this._updateHandle = d2(() => {
      const t3 = this._contentContainer, { screenPoint: e12, accumulatedShadowTime: o3 } = this.viewModel.tooltip;
      return { contentContainer: t3, screenPoint: e12, accumulatedShadowTime: o3 };
    }, (t3) => this._update(t3), A2);
  }
  destroy() {
    this._updateHandle = l(this._updateHandle), this._contentWidget = u(this._contentWidget), this.container.contains(this._contentContainer) && this.container.removeChild(this._contentContainer);
  }
  get testData() {
    var _a;
    return { displayedValue: "none" === this._contentContainer.style.display ? null : (_a = this._contentWidget.container) == null ? void 0 : _a.innerText };
  }
  _update({ contentContainer: t3, screenPoint: e12, accumulatedShadowTime: o3 }) {
    const { style: n9 } = t3;
    null != e12 ? (n9.display = "block", n9.transform = `translate(${e12.x}px, ${e12.y}px)`, this._contentWidget.accumulatedShadowTime = o3) : n9.display = "none";
  }
  _createContainer() {
    const t3 = document.createElement("div"), { style: e12 } = t3;
    return e12.position = "absolute", e12.top = "0", e12.left = "0", t3;
  }
};
e([y()], d8.prototype, "viewModel", void 0), e([y()], d8.prototype, "container", void 0), e([y()], d8.prototype, "_contentContainer", void 0), e([y()], d8.prototype, "_contentWidget", void 0), d8 = e([a("esri.widgets.ShadowCast.components.ShadowTooltip")], d8);

// node_modules/@arcgis/core/widgets/ShadowCast/components/ThresholdConfigurator.js
var j2 = class extends D {
  constructor(e12) {
    super(e12), this.colorPickerVisible = true, this._valueSliderId = `value-slider-${n()}`, this._colorPickerId = `color-picker-${n()}`, this._valueSlider = new A3({ visibleElements: { labels: false, rangeLabels: false }, steps: m(30, "minutes", "milliseconds"), labelFormatFunction: (e13, o3) => {
      const s6 = m(e13, "milliseconds", "hours");
      return "tick" === o3 ? u2(s6, { maximumFractionDigits: 0 }) : "";
    } }), this._onColorChange = (e13) => {
      this.options.color = e13;
    };
  }
  initialize() {
    const e12 = ({ value: e13 }) => {
      this.options.value = e13;
    };
    this.addHandles([d2(() => {
      const { value: e13, minValue: o3, maxValue: s6 } = this.options;
      return { value: e13, minValue: o3, maxValue: s6 };
    }, ({ value: e13, minValue: o3, maxValue: s6 }) => {
      const r5 = this._valueSlider;
      r5.min = o3, r5.max = s6, r5.values = [e13];
      const i7 = s6 - o3, l5 = Math.floor(m(i7, "milliseconds", "hours"));
      r5.tickConfigs = [{ mode: "count", values: 2 * l5 + 1, labelsVisible: false }, { mode: "count", values: l5 + 1, labelsVisible: true }];
    }, A2), this._valueSlider.on("thumb-change", e12), this._valueSlider.on("thumb-drag", e12)]);
  }
  loadDependencies() {
    return r({ label: () => import("./calcite-label-W4VTHQAF.js") });
  }
  destroy() {
    this._valueSlider = u(this._valueSlider);
  }
  render() {
    const e12 = this._messages.threshold, { color: o3 } = this.options;
    return n2("div", { class: t2.base }, n2(r4, { class: t2.valueLabel, for: this._valueSliderId, label: e12.valueLabel }, this._valueSlider.render()), this.colorPickerVisible ? n2(e11, { id: this._colorPickerId, label: e12.colorLabel, value: o3, onChange: this._onColorChange }) : null);
  }
  get testData() {
    return { valueSlider: this._valueSlider };
  }
};
e([y()], j2.prototype, "options", void 0), e([y()], j2.prototype, "colorPickerVisible", void 0), e([y()], j2.prototype, "testData", null), e([y()], j2.prototype, "_valueSlider", void 0), e([y(), e4("esri/widgets/ShadowCast/t9n/ShadowCast")], j2.prototype, "_messages", void 0), j2 = e([a("esri.widgets.ShadowCast.components.ThresholdConfigurator")], j2);

// node_modules/@arcgis/core/widgets/ShadowCast.js
var T;
!function(e12) {
  e12.Slider = "slider";
}(T || (T = {}));
var D3 = { hour: "2-digit", minute: "2-digit", timeZone: "UTC" };
var z = /(.*)\s(.*)/;
var V3 = { labelFormatFunction: f, min: 0, max: 1439, steps: 15, rangeLabelInputsEnabled: false, visibleElements: { labels: false, rangeLabels: false }, tickConfigs: [{ mode: "position", values: [0, 360, 720, 1080, 1439], labelsVisible: true, tickCreatedFunction: (e12, i7, t3) => {
  i7.classList.add(e6.primaryTick), t3.classList.add(e6.primaryTickLabel);
  const o3 = t3.innerText.match(z);
  o3 && (t3.innerHTML = `${o3[1]}<br><div class="${e6.primaryTickAmPm}">${o3[2]}</div>`);
} }, { mode: "position", values: [120, 240, 480, 600, 840, 960, 1200, 1320], tickCreatedFunction: (e12, i7) => {
  i7.classList.add(e6.secondaryTick);
} }] };
var L = class extends D {
  constructor(e12, i7) {
    super(e12, i7), this.viewModel = null, this.headingLevel = 4, this.visibleElements = new i6(), this._defaultViewModel = null, this._timeSlider = new A3({ ...V3, container: document.createElement("div") }), this._tooltip = null, this._onTimezoneChange = (e13) => {
      this.viewModel.utcOffset = e13;
    }, this._onDateChange = (e13) => {
      const i8 = e13.target.valueAsDate;
      this.viewModel.date = Array.isArray(i8) ? i8[0] : i8;
    }, (e12 == null ? void 0 : e12.viewModel) || (this._defaultViewModel = new F({ view: e12 == null ? void 0 : e12.view }), this.viewModel = this._defaultViewModel);
  }
  initialize() {
    this.addHandles([d2(() => ({ viewModel: this.viewModel, slider: this._timeSlider }), (e12) => this._connectTimeSlider(e12), A2), d2(() => {
      var _a;
      return { container: (_a = this.view) == null ? void 0 : _a.surface, viewModel: this.viewModel, tooltipVisible: this.visibleElements.tooltip };
    }, ({ container: e12, viewModel: t3, tooltipVisible: o3 }) => {
      this._tooltip = u(this._tooltip), null != e12 && o3 && (this._tooltip = new d8({ viewModel: t3, container: e12 }));
    }, A2), d2(() => ({ viewModel: this.viewModel, visible: this.visible }), ({ viewModel: e12, visible: i7 }) => e12.setRunning(i7), A2)]);
  }
  destroy() {
    this._timeSlider = u(this._timeSlider), null != this._defaultViewModel && this.viewModel !== this._defaultViewModel && this._defaultViewModel.destroy();
  }
  loadDependencies() {
    return r({ "input-date-picker": () => import("./calcite-input-date-picker-QVEGEMR6.js"), option: () => import("./calcite-option-TCD47JBL.js"), select: () => import("./calcite-select-DL7WB63T.js") });
  }
  render() {
    const { visibleElements: e12, viewModel: i7 } = this, t3 = i7.state === a5.Disabled;
    return n2("div", { class: this.classes(e8.base, e6.widget, e6.panel, { [e6.widgetDisabled]: t3 }), key: this }, this._renderTimeRangeSection(), e12.visualizationOptions ? this._renderVisualizationOptionsSection() : null);
  }
  get view() {
    var _a;
    return (_a = this.viewModel) == null ? void 0 : _a.view;
  }
  set view(e12) {
    this.viewModel && (this.viewModel.view = e12);
  }
  get icon() {
    return "measure-building-height-shadow";
  }
  set icon(e12) {
    this._overrideIfSome("icon", e12);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e12) {
    this._overrideIfSome("label", e12);
  }
  get testData() {
    return { tooltip: this._tooltip };
  }
  _connectTimeSlider({ viewModel: e12, slider: i7 }) {
    if (this.removeHandles(T.Slider), null == i7)
      return;
    const r5 = (e13) => m(e13, "milliseconds", "minutes"), a6 = (e13) => m(e13, "minutes", "milliseconds"), l5 = ({ index: i8, value: t3 }) => {
      0 === i8 ? e12.startTimeOfDay = a6(t3) : e12.endTimeOfDay = a6(t3);
    };
    this.addHandles([d2(() => [e12.startTimeOfDay, e12.endTimeOfDay], (e13) => {
      i7.values = e13.map(r5);
    }, A2), i7.on("thumb-change", l5), i7.on("thumb-drag", l5), i7.on("segment-drag", () => {
      [e12.startTimeOfDay, e12.endTimeOfDay] = i7.values.map(a6);
    })], T.Slider);
  }
  _renderTimeRangeSection() {
    const { visibleElements: e12 } = this;
    return e12.timeRangeSlider || e12.datePicker ? n2("section", { class: e8.timeRange, key: "time-range" }, n2(e7, { level: this.headingLevel }, this.messages.timeLabel), e12.timeRangeSlider ? this._renderTimeRange() : null, e12.datePicker ? this._renderDatePicker() : null) : null;
  }
  _renderTimeRange() {
    const { messages: e12, viewModel: i7, visibleElements: t3 } = this, { startTimeOfDay: o3, endTimeOfDay: s6 } = i7, [r5, a6] = [o3, s6].map((e13) => j(new Date(e13), D3));
    return [n2("div", { class: e8.timeRangeIndicator, key: "time-range-indicator" }, s2(e12.timeRange, { start: r5, end: a6 }), t3.timezone ? n2(d3, { value: i7.utcOffset, onChange: this._onTimezoneChange }) : null), n2("div", { afterCreate: this._timeSliderContainerAfterCreate, afterRemoved: this._timeSliderContainerAfterRemoved, bind: this, key: "time-slider-container" })];
  }
  _timeSliderContainerAfterCreate(e12) {
    var _a;
    const i7 = (_a = this._timeSlider) == null ? void 0 : _a.container;
    i7 && e12.appendChild(i7);
  }
  _timeSliderContainerAfterRemoved(e12) {
    var _a;
    const i7 = (_a = this._timeSlider) == null ? void 0 : _a.container;
    i7 && e12.removeChild(i7);
  }
  _renderDatePicker() {
    return n2("div", { class: e8.datePickerContainer, key: e8.datePickerContainer }, n2("calcite-input-date-picker", { class: e8.datePicker, key: e8.datePicker, overlayPositioning: "fixed", placement: "bottom", valueAsDate: this.viewModel.date, onCalciteInputDatePickerChange: this._onDateChange }));
  }
  _renderVisualizationOptionsSection() {
    const { headingLevel: e12, messages: i7, viewModel: t3, visibleElements: o3 } = this, s6 = o3.colorPicker, r5 = (e13) => this.classes(t3.visualizationType === e13 ? null : e8.visualizationConfigHidden);
    return n2("section", { class: e8.visualization, key: "visualization" }, n2(e7, { level: e12 }, i7.visualizationLabel), this._renderVisualizationSelect(), n2("div", { class: r5(r3.Threshold), key: "threshold-configurator" }, n2(j2, { colorPickerVisible: s6, options: t3.thresholdOptions })), n2("div", { class: r5(r3.Duration), key: "duration-configurator" }, n2(u5, { colorPickerVisible: s6, options: t3.durationOptions })), n2("div", { class: r5(r3.Discrete), key: "discrete-configurator" }, n2(d5, { colorPickerVisible: s6, options: t3.discreteOptions })));
  }
  _renderVisualizationSelect() {
    const e12 = this.messages, i7 = this.viewModel.visualizationType;
    return n2("calcite-select", { bind: this, class: e8.visualizationSelect, key: "visualization-select", label: e12.visualizationLabel, onCalciteSelectChange: this._onVisualizationTypeChange }, [{ type: r3.Threshold, label: e12.threshold.label }, { type: r3.Duration, label: e12.duration.label }, { type: r3.Discrete, label: e12.discrete.label }].map(({ type: e13, label: t3 }) => n2("calcite-option", { selected: e13 === i7, value: e13 }, t3)));
  }
  _onVisualizationTypeChange(e12) {
    var _a;
    const i7 = (_a = e12.target.selectedOption) == null ? void 0 : _a.value;
    this.viewModel.visualizationType = i7 ?? r3.Threshold;
  }
};
e([y()], L.prototype, "viewModel", void 0), e([y()], L.prototype, "view", null), e([y()], L.prototype, "headingLevel", void 0), e([y()], L.prototype, "icon", null), e([y()], L.prototype, "label", null), e([y({ type: i6, nonNullable: true })], L.prototype, "visibleElements", void 0), e([y(), e4("esri/widgets/ShadowCast/t9n/ShadowCast")], L.prototype, "messages", void 0), e([y()], L.prototype, "_defaultViewModel", void 0), e([y()], L.prototype, "_timeSlider", void 0), e([y()], L.prototype, "_tooltip", void 0), L = e([a("esri.widgets.ShadowCast")], L);
var O = L;
export {
  O as default
};
//# sourceMappingURL=ShadowCast-U36YDW6A.js.map
