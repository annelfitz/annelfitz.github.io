{
  "version": 3,
  "sources": ["../../@arcgis/core/rest/versionManagement/gdbVersion/support/PostResult.js", "../../@arcgis/core/rest/versionManagement/gdbVersion/post.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{_ as o}from\"../../../../chunks/tslib.es6.js\";import{JSONSupport as r}from\"../../../../core/JSONSupport.js\";import{property as s}from\"../../../../core/accessorSupport/decorators/property.js\";import\"../../../../core/has.js\";import\"../../../../core/Logger.js\";import\"../../../../core/RandomLCG.js\";import{subclass as e}from\"../../../../core/accessorSupport/decorators/subclass.js\";let t=class extends r{constructor(o){super(o),this.moment=null,this.success=!1}};o([s({type:Date,json:{type:Number,write:{writer:(o,r)=>{r.moment=o?o.getTime():null}}}})],t.prototype,\"moment\",void 0),o([s({type:Boolean,json:{write:!0}})],t.prototype,\"success\",void 0),t=o([e(\"esri.rest.versionManagement.gdbVersion.support.PostResult\")],t);const p=t;export{p as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport r from\"../../../request.js\";import s from\"../../../core/Error.js\";import{parseUrl as o,asValidOptions as t,encode as i}from\"../../utils.js\";import{addServerVersion as e}from\"./serverVersionUtils.js\";import n from\"./support/PostResult.js\";const p=new Map;async function m(m,f,a,u){p.has(m)||await e(p,m);const c=p.get(m);if((c?.serverVersion??0)<=11.1)throw new s(\"post:enterprise-version\",\"versioning API requires ArcGIS Enterprise version 11.2 or higher\");if(!f)throw new s(\"post:missing-guid\",\"guid for version is missing\");const w=o(m),g=a.toJSON();a.rows&&(g.rows=JSON.stringify(a.rows));const h=t(w.query,{query:i({...g,f:\"json\"}),...u,method:\"post\"});f.startsWith(\"{\")&&(f=f.slice(1,-1));const v=`${w.path}/versions/${f}/post`,{data:j}=await r(v,h);return n.fromJSON(j)}export{m as post,p as serverVersionCacheMap};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIiY,IAAI,IAAE,cAAc,EAAC;AAAA,EAAC,YAAY,GAAE;AAAC,UAAM,CAAC,GAAE,KAAK,SAAO,MAAK,KAAK,UAAQ;AAAA,EAAE;AAAC;AAAE,EAAE,CAAC,EAAE,EAAC,MAAK,MAAK,MAAK,EAAC,MAAK,QAAO,OAAM,EAAC,QAAO,CAAC,GAAEA,OAAI;AAAC,EAAAA,GAAE,SAAO,IAAE,EAAE,QAAQ,IAAE;AAAI,EAAC,EAAC,EAAC,CAAC,CAAC,GAAE,EAAE,WAAU,UAAS,MAAM,GAAE,EAAE,CAAC,EAAE,EAAC,MAAK,SAAQ,MAAK,EAAC,OAAM,KAAE,EAAC,CAAC,CAAC,GAAE,EAAE,WAAU,WAAU,MAAM,GAAE,IAAE,EAAE,CAAC,EAAE,2DAA2D,CAAC,GAAE,CAAC;AAAE,IAAM,IAAE;;;ACAxe,IAAMC,KAAE,oBAAI;AAAI,eAAe,EAAEC,IAAEC,IAAEC,IAAE,GAAE;AAAC,EAAAH,GAAE,IAAIC,EAAC,KAAG,MAAM,EAAED,IAAEC,EAAC;AAAE,QAAM,IAAED,GAAE,IAAIC,EAAC;AAAE,QAAI,uBAAG,kBAAe,MAAI;AAAK,UAAM,IAAI,EAAE,2BAA0B,kEAAkE;AAAE,MAAG,CAACC;AAAE,UAAM,IAAI,EAAE,qBAAoB,6BAA6B;AAAE,QAAM,IAAEA,GAAED,EAAC,GAAE,IAAEE,GAAE,OAAO;AAAE,EAAAA,GAAE,SAAO,EAAE,OAAK,KAAK,UAAUA,GAAE,IAAI;AAAG,QAAM,IAAE,EAAE,EAAE,OAAM,EAAC,OAAMC,GAAE,EAAC,GAAG,GAAE,GAAE,OAAM,CAAC,GAAE,GAAG,GAAE,QAAO,OAAM,CAAC;AAAE,EAAAF,GAAE,WAAW,GAAG,MAAIA,KAAEA,GAAE,MAAM,GAAE,EAAE;AAAG,QAAM,IAAE,GAAG,EAAE,IAAI,aAAaA,EAAC,SAAQ,EAAC,MAAK,EAAC,IAAE,MAAM,EAAE,GAAE,CAAC;AAAE,SAAO,EAAE,SAAS,CAAC;AAAC;",
  "names": ["r", "p", "m", "f", "a", "s"]
}
