{
  "version": 3,
  "sources": ["../../@arcgis/core/layers/support/ElevationTile.js", "../../@arcgis/core/layers/support/ElevationQuery.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{ElevationSamplerData as a}from\"./ElevationSamplerData.js\";class t{constructor(t,l=null){if(this.tile=t,null!=l&&null!=t){const e=t.extent;this._samplerData=new a(l,e)}}get zmin(){return null!=this._samplerData?this._samplerData.data.minValue:0}get zmax(){return null!=this._samplerData?this._samplerData.data.maxValue:0}get hasNoDataValues(){return!!this._samplerData?.data.hasNoDataValues}sample(a,t){if(null==this._samplerData)return;const{safeWidth:e,data:s,dx:r,dy:n,y1:i,x0:u}=this._samplerData,{width:o,values:m,noDataValue:h}=s,p=l(n*(i-t),0,e),D=l(r*(a-u),0,e),d=Math.floor(p),f=Math.floor(D),_=d*o+f,c=_+o,x=m[_],V=m[c],g=m[_+1],v=m[c+1];if(x!==h&&V!==h&&g!==h&&v!==h){const a=D-f,t=x+(g-x)*a;return t+(V+(v-V)*a-t)*(p-d)}}}function l(a,t,l){return a<t?t:a>l?l:a}export{t as ElevationTile};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{assertIsSome as i}from\"../../core/maybe.js\";import{whenOrAbort as n,throwIfAbortError as o}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as l}from\"../../core/unitUtils.js\";import s from\"../../geometry/Multipoint.js\";import a from\"../../geometry/Point.js\";import r from\"../../geometry/Polyline.js\";import{initializeProjection as c,project as u}from\"../../geometry/projection.js\";import{fromExtent as h,create as f,contains as p}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as m}from\"./ElevationSampler.js\";import{ElevationTile as d}from\"./ElevationTile.js\";import{TileKey as y}from\"./TileKey.js\";class T{async queryAll(e,i,n){if(!(e=n&&n.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const o=w.fromGeometry(i);let l=!1;n&&n.returnSampleInfo||(l=!0);const s={...R,...n,returnSampleInfo:!0},a=await this.query(e[e.length-1],o,s),r=await this._queryAllContinue(e,a,s);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof w)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const o={...R,...n},l=new x(e,i.spatialReference,o),s=o.signal;return await e.load({signal:s}),await q(l,i,s),await this._selectTiles(l,s),await F(l,s),j(l),b(l,s)}async createSampler(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const o={...R,...n};return this._createSampler(e,i,o)}async createSamplerAll(e,i,n){if(!(e=n&&n.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const o={...R,...n,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],i,o);return this._createSamplerAllContinue(e,i,l,o)}async _createSampler(e,t,i,n){const o=i.signal;await e.load({signal:o});const l=t.spatialReference,s=e.tileInfo.spatialReference;l.equals(s)||(await c([{source:l,dest:s}],{signal:o}),t=u(t,s));const a=new _(e,t,i,n);return await this._selectTiles(a,o),await F(a,o),new m(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const o=i.samplers.filter((e=>!e.tile.hasNoDataValues)).map((e=>h(e.extent))),l=await this._createSampler(e[e.length-1],t,n,o);if(0===l.samplers.length)return i;const s=i.samplers.concat(l.samplers),a=new m(s,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,n){const o=e.pop(),l=t.geometry.coordinates,s=t.sampleInfo;i(s);const a=[],r=[];for(let i=0;i<l.length;i++){const t=s[i];t.demResolution>=0?t.source||(t.source=o):e.length&&(a.push(l[i]),r.push(i))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,n),h=u.sampleInfo;if(!h)throw new Error(\"no sampleInfo\");return r.forEach(((e,t)=>{l[e].z=u.geometry.coordinates[t].z,s[e].demResolution=h[t].demResolution})),this._queryAllContinue(e,t,n)}async _selectTiles(e,i){\"geometry\"===e.type&&I(e);const n=e.options.demResolution;if(\"number\"==typeof n)C(e,n);else if(\"finest-contiguous\"===n)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==n)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${n}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,o=E(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,o,t)}async _selectTilesFinestContiguousAt(e,i,l){const s=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=s.tilemapCache,r=e.getTilesToFetch();try{if(a&&!L(a))await n(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:l})))),l);else if(await F(e,l),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){o(c),await this._selectTilesFinestContiguousAt(e,i-1,l)}}async _selectTilesAuto(t,i){M(t),S(t);const l=t.layer.tilemapCache;if(!l||L(l))return this._selectTilesAutoPrefetchUpsample(t,i);const s=t.getTilesToFetch(),a={},r=s.map((async t=>{const n=new y(null,0,0,0,f()),s=await e(l.fetchAvailabilityUpsample(t.level,t.row,t.col,n,{signal:i}));!1!==s.ok?null!=t.id&&(a[t.id]=n):o(s.error)}));await n(Promise.all(r),i),t.remapTiles(a)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await F(e,t);let n=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?n=!0:t()})),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}}class w{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new w;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await c([{source:this.spatialReference,dest:e}],{signal:t});const i=new s({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),n=u(i,e);if(!n)return null;const o=this.coordinates.map(((e,t)=>{const i=e.clone(),o=n.points[t];return i.x=o[0],i.y=o[1],i})),l=this.clone(o);return l.spatialReference=e,l}static fromGeometry(e){const t=new w;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof w)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const n=e.clone(t);return n.spatialReference=i,n};else switch(e.type){case\"point\":{const i=e,{hasZ:n,hasM:o}=i;t.coordinates=n&&o?[new v(i.x,i.y,i.z,i.m)]:n?[new v(i.x,i.y,i.z)]:o?[new v(i.x,i.y,null,i.m)]:[new v(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new a(t[0].x,t[0].y,t[0].z,t[0].m,i):new a(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:n,hasM:o}=i;t.coordinates=n&&o?i.points.map((e=>new v(e[0],e[1],e[2],e[3]))):n?i.points.map((e=>new v(e[0],e[1],e[2]))):o?i.points.map((e=>new v(e[0],e[1],null,e[2]))):i.points.map((e=>new v(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new s({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatialReference:i}):new s(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,n=[],o=[],{hasZ:l,hasM:s}=e;let a=0;for(const e of i.paths)if(o.push([a,a+e.length]),a+=e.length,l&&s)for(const t of e)n.push(new v(t[0],t[1],t[2],t[3]));else if(l)for(const t of e)n.push(new v(t[0],t[1],t[2]));else if(s)for(const t of e)n.push(new v(t[0],t[1],null,t[2]));else for(const t of e)n.push(new v(t[0],t[1]));t.coordinates=n,t._exporter=(t,i)=>{const n=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),l=o.map((e=>n.slice(e[0],e[1])));return new r({paths:l,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class v{constructor(e,t,i=null,n=null,o=null,l=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=o,this.elevationTile=l}clone(){return new v(this.x,this.y,this.z,this.m)}}class g{constructor(e,t){this.layer=e,this.options=t}}class x extends g{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const{tileInfo:t,tilemapCache:i}=this.layer,n=D(t,i)[e].level;this.geometry.coordinates.forEach((e=>e.tile=t.tileAt(n,e.x,e.y)))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;if(!n)continue;const o=i.tile?.id;i.elevationTile||!o||e[o]||(e[o]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class _ extends g{constructor(e,t,i,n){super(e,i),this.type=\"extent\",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.clone().intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=D(t,i);if(!e)return n.length-1;const o=this.extent;if(null==o)return-1;for(let l=n.length-1;l>=0;l--){const i=n[l],s=i.resolution*t.size[0],a=i.resolution*t.size[1];if(Math.ceil(o.width/s)*Math.ceil(o.height/a)<=e)return l}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=z(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let n=!1;e(i,(()=>n=!0)),n?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=z(this._candidateTiles,t)}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(null==t)return;const{tileInfo:i,tilemapCache:n}=this.layer,o=D(i,n)[e],l=i.tileAt(o.level,t.xmin,t.ymin),s=l.extent;if(null==s)return;const a=o.resolution*i.size[0],r=o.resolution*i.size[1],c=Math.ceil((t.xmax-s[0])/a),u=Math.ceil((t.ymax-s[1])/r);for(let h=0;h<u;h++)for(let e=0;e<c;e++){const t=new y(null,l.level,l.row-h,l.col+e);i.updateTileInfo(t),this._tileIsMasked(t)||this._candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&p(t,e.extent)))}}function E(e,t,i=0){const n=D(e,t);let o=n.length-1;if(i>0){const t=i/l(e.spatialReference),s=n.findIndex((e=>e.resolution<t));0===s?o=0:s>0&&(o=s-1)}return o}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};async function q(e,i,n){let o;const l=e.layer.tileInfo.spatialReference;if(i instanceof w?o=await i.project(l,n):(await c([{source:i.spatialReference,dest:l}],{signal:n}),o=u(i,l)),!o)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=w.fromGeometry(o)}function I(e){if(null==e.layer.fullExtent)return;const t=new d(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const n=e.x,o=e.y;(n<i.xmin||n>i.xmax||o<i.ymin||o>i.ymax)&&(e.elevationTile=t)}))}function A(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,o=t/l(i.spatialReference),s=D(i,n);let a=s[0],r=0;for(let l=1;l<s.length;l++){const e=s[l];Math.abs(e.resolution-o)<Math.abs(a.resolution-o)&&(a=e,r=l)}return r}function C(e,t){const i=A(e,t);e.selectTilesAtLOD(i)}function M(e){const{tileInfo:t,tilemapCache:i}=e.layer,n=E(t,i,e.options.minDemResolution);e.selectTilesAtLOD(n,e.options.maximumAutoTileRequests)}function D(e,t){const i=e.lods;if(L(t)){const{effectiveMinLOD:e,effectiveMaxLOD:n}=t;return i.filter((t=>t.level>=e&&t.level<=n))}return i}async function F(e,t){const i=e.getTilesToFetch(),o={},l=e.options.cache,s=e.options.noDataValue,a=i.map((async i=>{if(null==i.id)return;const n=`${e.layer.uid}:${i.id}:${s}`,a=null!=l?l.get(n):null,r=null!=a?a:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:s,signal:t});null!=l&&l.put(n,r),o[i.id]=new d(i,r)}));await n(Promise.allSettled(a),t),e.populateElevationTiles(o)}function S(e){const t=e.layer.tileInfo;let i=0;const n={},o=e=>{null!=e.id&&(e.id in n?n[e.id]++:(n[e.id]=1,i++))},l=e=>{if(null==e.id)return;const t=n[e.id];1===t?(delete n[e.id],i--):n[e.id]=t-1};e.forEachTileToFetch(o,l);let s=!0;for(;s&&(s=!1,e.forEachTileToFetch((n=>{i<=e.options.maximumAutoTileRequests||(l(n),t.upsampleTile(n)&&(s=!0),o(n))}),l),s););}function j(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);null!=e?n=e:t.elevationTile=null}t.z=n}))}function z(e,t){const i={},n=[];for(const l of e){const e=l.id;e&&!i[e]?(i[e]=l,n.push(l)):t&&t(l)}const o=n.sort(((e,t)=>e.level-t.level));return o.filter(((e,i)=>{for(let n=0;n<i;n++){const i=o[n].extent;if(i&&e.extent&&p(i,e.extent))return t&&t(e),!1}return!0}))}async function b(e,t){const n=await e.geometry.project(e.outSpatialReference,t);i(n);const o={geometry:n.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(o.sampleInfo=k(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),o}function k(e){const t=e.layer.tileInfo,i=l(t.spatialReference);return e.geometry.coordinates.map((n=>{let o=-1;if(n.elevationTile&&n.elevationTile!==e.outsideExtentTile){o=t.lodAt(n.elevationTile.tile.level).resolution*i}return{demResolution:o}}))}function L(e){return null!=e?.tileInfo}export{T as ElevationQuery,w as GeometryDescriptor,E as getFinestLodIndex};\n"],
  "mappings": "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",
  "names": ["t", "l", "a", "s", "n", "u", "o", "m", "h", "D", "_", "x", "g", "v", "n", "e", "o", "l", "s", "R", "a", "x", "t", "_", "u", "h", "i"]
}
