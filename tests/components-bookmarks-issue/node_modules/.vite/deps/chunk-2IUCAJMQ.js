import {
  r as r2
} from "./chunk-6H6AEMQY.js";
import {
  h
} from "./chunk-54XXLVAD.js";
import {
  l
} from "./chunk-5S637BGW.js";
import {
  E
} from "./chunk-QLL2YG25.js";
import {
  r2 as r
} from "./chunk-I2RC5KWA.js";
import {
  s
} from "./chunk-J2EGIWT6.js";

// node_modules/@arcgis/core/widgets/Legend/support/heatmapRampUtils.js
function r3(r4) {
  if (!r4.colorStops)
    return [];
  const e = [...r4.colorStops].filter((o) => {
    var _a;
    return ((_a = o.color) == null ? void 0 : _a.a) > 0;
  });
  let t = e.length - 1;
  if (e && e[0]) {
    const r5 = e[t];
    r5 && 1 !== r5.ratio && (e.push(new l({ ratio: 1, color: r5.color })), t++);
  }
  return e.map((o, e2) => {
    var _a, _b;
    let l2 = "";
    return 0 === e2 ? l2 = ((_a = r4.legendOptions) == null ? void 0 : _a.minLabel) || "low" : e2 === t && (l2 = ((_b = r4.legendOptions) == null ? void 0 : _b.maxLabel) || "high"), { color: o.color, label: l2, ratio: o.ratio };
  }).reverse();
}

// node_modules/@arcgis/core/renderers/support/utils.js
var v = E("short-date");
async function w(e, l2, t) {
  r(e, l2, () => []).push(...t);
}
async function x(l2) {
  var _a, _b;
  const t = /* @__PURE__ */ new Map();
  if (!l2)
    return t;
  if ("visualVariables" in l2 && l2.visualVariables) {
    const e = l2.visualVariables.filter((e2) => "color" === e2.type);
    for (const l3 of e) {
      const e2 = (await r2(l3) ?? []).map((e3) => e3.color);
      await w(t, l3.field || l3.valueExpression, e2);
    }
  }
  if ("heatmap" === l2.type) {
    const e = r3(l2).map((e2) => e2.color);
    await w(t, l2.field || l2.valueExpression, e);
  } else if ("pie-chart" === l2.type) {
    for (const e of l2.attributes)
      await w(t, e.field || e.valueExpression, [e.color]);
    await w(t, "default", [(_a = l2 == null ? void 0 : l2.othersCategory) == null ? void 0 : _a.color, h(l2.backgroundFillSymbol, null)]);
  } else if ("dot-density" === l2.type) {
    for (const e of l2.attributes)
      await w(t, e.field || e.valueExpression, [e.color]);
    await w(t, "default", [l2.backgroundColor]);
  } else if ("unique-value" === l2.type)
    if ("predominance" === ((_b = l2.authoringInfo) == null ? void 0 : _b.type))
      for (const e of l2.uniqueValueInfos ?? [])
        await w(t, e.value.toString(), [h(e.symbol, null)]);
    else {
      const e = (l2.uniqueValueInfos ?? []).map((e2) => h(e2.symbol, null)), { field: i, field2: o, field3: a2, valueExpression: n2 } = l2;
      (i || n2) && await w(t, i || n2, e), o && await w(t, o, e), a2 && await w(t, a2, e);
    }
  else if ("class-breaks" === l2.type) {
    const e = l2.classBreakInfos.map((e2) => h(e2.symbol, null)), { field: i, valueExpression: o } = l2;
    await w(t, i ?? o, e);
  } else
    "simple" === l2.type && await w(t, "default", [h(l2.symbol, null)]);
  return "defaultSymbol" in l2 && l2.defaultSymbol && await w(t, "default", [h(l2.defaultSymbol, null)]), t.forEach((l3, i) => {
    const o = s(l3.filter(Boolean), (e, l4) => JSON.stringify(e) === JSON.stringify(l4));
    t.set(i, o);
  }), t;
}

export {
  r3 as r,
  v,
  x
};
//# sourceMappingURL=chunk-2IUCAJMQ.js.map
