{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js", "../../@arcgis/core/chunks/HUDMaterial.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{AlignPixel as e}from\"./AlignPixel.glsl.js\";import{multipassGeometryTest as o}from\"../shading/MultipassGeometryTest.glsl.js\";import{multipassTerrainTest as t}from\"../shading/MultipassTerrainTest.glsl.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";function i(i,s){const{vertex:p,fragment:n}=i;p.include(e),s.multipassEnabled&&(p.include(o),i.varyings.add(\"depth\",\"float\")),p.code.add(r`\n  void main(void) {\n    vec4 posProjCenter;\n    if (dot(position, position) > 0.0) {\n      // Render single point to center of the pixel to avoid subpixel filtering to affect the marker color\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n      posProjCenter = alignToPixelCenter(posProj, viewport.zw);\n\n      ${s.multipassEnabled?r`\n        // Don't draw vertices behind geometry\n        if(geometryDepthTest(.5 + .5 * posProjCenter.xy / posProjCenter.w, projectAux.posView.z)){\n          posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n        }`:\"\"}\n\n      ${s.multipassEnabled?\"depth = projectAux.posView.z;\":\"\"}\n      vec3 vpos = projectAux.posModel;\n      if (rejectBySlice(vpos)) {\n        // Project out of clip space\n        posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n      }\n\n    } else {\n      // Project out of clip space\n      posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n    }\n\n    gl_Position = posProjCenter;\n    gl_PointSize = 1.0;\n  }\n  `),i.include(t,s),n.code.add(r`\n  void main() {\n    fragColor = vec4(1);\n    ${s.multipassEnabled?r`\n        if(terrainDepthTest(depth)) {\n          fragColor.g = 0.5;\n        }`:\"\"}\n  }\n  `)}export{i as HUDOcclusionPass};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{set as e,copy as o}from\"../core/libs/gl-matrix-2/math/vec2.js\";import{create as i}from\"../core/libs/gl-matrix-2/factories/vec2f64.js\";import{ZEROS as r}from\"../core/libs/gl-matrix-2/factories/vec4f64.js\";import{ShaderOutput as l}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as t}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{ObjectAndLayerIdColor as a}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js\";import{AlignPixel as s}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/AlignPixel.glsl.js\";import{HUD as n}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUD.glsl.js\";import{HUDOcclusionPass as c}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js\";import{HUDVisibility as d}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUDVisibility.glsl.js\";import{occludedHighlightFlag as u,unoccludedHighlightFlag as p}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{VisualVariables as g}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as f,defaultMaskAlphaCutoff as v}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{ColorConversion as m}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{RgbaFloatEncoding as b}from\"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{ScreenSizePerspective as h,addScreenSizePerspective as w,addScreenSizePerspectiveAlignment as x}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js\";import{addPixelRatio as C}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float2PassUniform as P}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float4PassUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as j}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as z}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as y}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as A}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as O}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as $}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function F(o){const i=new y,F=o.signedDistanceFieldEnabled;if(i.include(n,o),i.include(t,o),o.occlusionPass)return i.include(c,o),i;const{vertex:B,fragment:H}=i;i.include(h),H.include(b),H.include(m),i.include(g,o),i.include(a,o),i.include(d),i.varyings.add(\"vcolor\",\"vec4\"),i.varyings.add(\"vtc\",\"vec2\"),i.varyings.add(\"vsize\",\"vec2\"),i.varyings.add(\"voccluded\",\"float\"),B.uniforms.add(new S(\"viewport\",((e,o)=>o.camera.fullViewport)),new P(\"screenOffset\",((o,i)=>e(T,2*o.screenOffset[0]*i.camera.pixelRatio,2*o.screenOffset[1]*i.camera.pixelRatio))),new P(\"anchorPosition\",(e=>D(e))),new S(\"materialColor\",(e=>e.color))),C(B),F&&(B.uniforms.add(new S(\"outlineColor\",(e=>e.outlineColor))),H.uniforms.add(new S(\"outlineColor\",(e=>L(e)?e.outlineColor:r)),new j(\"outlineSize\",(e=>L(e)?e.outlineSize:0)))),o.pixelSnappingEnabled&&B.include(s),o.hasScreenSizePerspective&&(w(B),x(B)),o.debugDrawLabelBorder&&i.varyings.add(\"debugBorderCoords\",\"vec4\"),i.attributes.add($.UV0,\"vec2\"),i.attributes.add($.COLOR,\"vec4\"),i.attributes.add($.SIZE,\"vec2\"),i.attributes.add($.FEATUREATTRIBUTE,\"vec4\"),B.code.add(z`\n    void main(void) {\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n      forwardObjectAndLayerIdColor();\n\n      if (rejectBySlice(projectAux.posModel)) {\n        // Project outside of clip plane\n        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n        return;\n      }\n      vec2 inputSize;\n      ${o.hasScreenSizePerspective?z`\n            inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);\n            vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);\n         `:z`\n            inputSize = size;\n            vec2 screenOffsetScaled = screenOffset;`}\n\n      ${o.vvSize?\"inputSize *= vvScale(featureAttribute).xx;\":\"\"}\n\n      vec2 combinedSize = inputSize * pixelRatio;\n      vec4 quadOffset = vec4(0.0);\n      bool visible = testHUDVisibility(posProj);\n      voccluded = visible ? 0.0 : 1.0;\n    `);const U=z`vec2 uv01 = floor(uv0);\nvec2 uv = uv0 - uv01;\nquadOffset.xy = ((uv01 - anchorPosition) * 2.0 * combinedSize + screenOffsetScaled) / viewport.zw * posProj.w;`,V=o.pixelSnappingEnabled?F?z`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;`:z`posProj += quadOffset;\nif (inputSize.x == size.x) {\nposProj = alignToPixelOrigin(posProj, viewport.zw);\n}`:z`posProj += quadOffset;`;B.code.add(z`\n    ${o.occlusionTestEnabled?\"if (visible) {\":\"\"}\n    ${U}\n    ${o.vvColor?\"vcolor = interpolateVVColor(featureAttribute.y) * materialColor;\":\"vcolor = color / 255.0 * materialColor;\"}\n\n    ${o.output===l.ObjectAndLayerIdColor?z`vcolor.a = 1.0;`:\"\"}\n\n    bool alphaDiscard = vcolor.a < ${z.float(f)};\n    ${F?`alphaDiscard = alphaDiscard && outlineColor.a < ${z.float(f)};`:\"\"}\n    if (alphaDiscard) {\n      // \"early discard\" if both symbol color (= fill) and outline color (if applicable) are transparent\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n      return;\n    } else {\n      ${V}\n      gl_Position = posProj;\n    }\n\n    vtc = uv;\n\n    ${o.debugDrawLabelBorder?\"debugBorderCoords = vec4(uv01, 1.5 / combinedSize);\":\"\"}\n    vsize = inputSize;\n    ${o.occlusionTestEnabled?z`} else { vtc = vec2(0.0);\n      ${o.debugDrawLabelBorder?\"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);}\":\"}\"}`:\"\"}\n  }\n  `),H.uniforms.add(new A(\"tex\",(e=>e.texture)));const E=o.debugDrawLabelBorder?z`(isBorder > 0.0 ? 0.0 : ${z.float(v)})`:z.float(v),I=z`\n    ${o.debugDrawLabelBorder?z`\n      float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));`:\"\"}\n\n    ${o.sampleSignedDistanceFieldTexelCenter?z`\n      // Attempt to sample texel centers to avoid that thin cross outlines\n      // disappear with large symbol sizes.\n      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/7058#issuecomment-603041\n      float txSize = float(textureSize(tex, 0).x);\n      float texelSize = 1.0 / txSize;\n\n      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel\n      vec2 scaleFactor = (vsize - txSize) * texelSize;\n      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;\n      `:z`\n      vec2 samplePos = vtc;\n      `}\n\n    ${F?z`\n      vec4 fillPixelColor = vcolor;\n\n      // Get distance and map it into [-0.5, 0.5]\n      float d = rgba2float(texture(tex, samplePos)) - 0.5;\n\n      // Distance in output units (i.e. pixels)\n      float dist = d * vsize.x;\n\n      // Create smooth transition from the icon into its outline\n      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);\n      fillPixelColor.a *= fillAlphaFactor;\n\n      if (outlineSize > 0.25) {\n        vec4 outlinePixelColor = outlineColor;\n        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);\n\n        // Create smooth transition around outline\n        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);\n        outlinePixelColor.a *= outlineAlphaFactor;\n\n        if (\n          outlineAlphaFactor + fillAlphaFactor < ${E} ||\n          fillPixelColor.a + outlinePixelColor.a < ${z.float(f)}\n        ) {\n          discard;\n        }\n\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)\n        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);\n        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +\n          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);\n\n        fragColor = vec4(compositeColor, compositeAlpha);\n      } else {\n        if (fillAlphaFactor < ${E}) {\n          discard;\n        }\n\n        fragColor = premultiplyAlpha(fillPixelColor);\n      }\n\n      // visualize SDF:\n      // fragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);\n      `:z`\n          vec4 texColor = texture(tex, vtc, -0.5);\n          if (texColor.a < ${E}) {\n            discard;\n          }\n          fragColor = texColor * premultiplyAlpha(vcolor);\n          `}\n\n    // Draw debug border with transparency, so that original texels along border are still partially visible\n    ${o.debugDrawLabelBorder?z`fragColor = mix(fragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);`:\"\"}\n  `;switch(o.output){case l.Color:H.code.add(z`\n        void main() {\n          ${I}\n          ${o.transparencyPassType===O.FrontFace?\"fragColor.rgb /= fragColor.a;\":\"\"}\n        }`);break;case l.Alpha:H.code.add(z`\n        void main() {\n          ${I}\n          fragColor = vec4(fragColor.a);\n        }`);break;case l.ObjectAndLayerIdColor:H.code.add(z`\n        void main() {\n          ${I}\n          outputObjectAndLayerIdColor();\n        }`);break;case l.Highlight:H.constants.add(\"occludedHighlightFlag\",\"vec4\",u),H.constants.add(\"unoccludedHighlightFlag\",\"vec4\",p),H.code.add(z`\n        void main() {\n          ${I}\n          if (voccluded == 1.0) {\n            fragColor = occludedHighlightFlag;\n          } else {\n            fragColor = unoccludedHighlightFlag;\n          }\n        }`)}return i}function L(e){return e.outlineColor[3]>0&&e.outlineSize>0}function D(e,i=T){return e.textureIsSignedDistanceField?B(e.anchorPosition,e.distanceFieldBoundingBox,i):o(i,e.anchorPosition),i}function B(o,i,r){null!=i?e(r,o[0]*(i[2]-i[0])+i[0],o[1]*(i[3]-i[1])+i[1]):e(r,0,0)}const T=i(),H=Object.freeze(Object.defineProperty({__proto__:null,build:F,calculateAnchorPosForRendering:D},Symbol.toStringTag,{value:\"Module\"}));export{H,F as b,D as c};\n"],
  "mappings": "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",
  "names": ["i", "s", "n", "o", "a", "o", "i", "F", "d", "B", "H", "s", "e", "t", "r"]
}
