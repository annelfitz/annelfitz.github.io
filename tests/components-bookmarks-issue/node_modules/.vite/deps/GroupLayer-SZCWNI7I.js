import {
  e as e3
} from "./chunk-2MEFZKMO.js";
import {
  d as d2,
  n2 as n3,
  t as t4
} from "./chunk-NVYR73RE.js";
import {
  f
} from "./chunk-HV2SFSJW.js";
import {
  l
} from "./chunk-CYVKDANA.js";
import {
  A as A2
} from "./chunk-7EQJLP2H.js";
import {
  j
} from "./chunk-4ZLXDMI5.js";
import {
  t as t2
} from "./chunk-SBARCIDP.js";
import {
  r as r2
} from "./chunk-VQWLJR3W.js";
import {
  n as n2
} from "./chunk-6PMFOUWZ.js";
import "./chunk-3KPZ3BQR.js";
import "./chunk-5JYVZQZR.js";
import {
  t as t3
} from "./chunk-UUG4W2PI.js";
import {
  u
} from "./chunk-WW22JHXA.js";
import {
  S as S2
} from "./chunk-ZAM62XN5.js";
import "./chunk-RKVEKQ5O.js";
import "./chunk-P7J4JFEH.js";
import {
  b
} from "./chunk-G7FOE26O.js";
import "./chunk-USOPZ2Q6.js";
import "./chunk-S5I4QKJD.js";
import "./chunk-LSM34QAB.js";
import "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-AKLOTDO2.js";
import "./chunk-6AQIVLDN.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-LBXFRGMS.js";
import {
  a as a3
} from "./chunk-GWC53NTZ.js";
import "./chunk-HLDUDRTD.js";
import {
  S
} from "./chunk-SLQA5YBV.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import {
  o
} from "./chunk-YOPMY6TS.js";
import {
  r
} from "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import {
  A,
  C,
  d,
  v
} from "./chunk-Z4Y53NDM.js";
import "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  e as e2,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a2,
  t
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  a,
  k
} from "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  n2 as n
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/layers/GroupLayer.js
var V = class extends n2(t3(u(j(n3(d2(S2(b))))))) {
  constructor(e4) {
    super(e4), this.allLayers = new l({ getCollections: () => [this.layers], getChildrenFunction: (e5) => "layers" in e5 ? e5.layers : null }), this.allTables = t4(this), this.fullExtent = void 0, this.operationalLayerType = "GroupLayer", this.spatialReference = void 0, this.type = "group", this._debouncedSaveOperations = k(async (e5, i, t5) => {
      const { save: r3, saveAs: s } = await import("./groupLayerUtils-TLT4HLKE.js");
      switch (e5) {
        case A2.SAVE:
          return r3(this, i);
        case A2.SAVE_AS:
          return s(this, t5, i);
      }
    });
  }
  initialize() {
    this._enforceVisibility(this.visibilityMode, this.visible), this.addHandles([d(() => {
      let e4 = this.parent;
      for (; e4 && "parent" in e4 && e4.parent; )
        e4 = e4.parent;
      return e4 && e3 in e4;
    }, (e4) => {
      const i = "prevent-adding-tables";
      this.removeHandles(i), e4 && (this.tables.removeAll(), this.addHandles(v(() => this.tables, "before-add", (e5) => {
        e5.preventDefault(), n.getLogger(this).errorOnce("tables", "tables in group layers in a webscene are not supported. Please move the tables from the group layer to the webscene if you want to persist them.");
      }), i));
    }, A), d(() => this.visible, this._onVisibilityChange.bind(this), C)]);
  }
  destroy() {
    this.allLayers.destroy(), this.allTables.destroy();
  }
  get sourceIsPortalItem() {
    return this.portalItem && this.originIdOf("portalItem") === e2.USER;
  }
  _writeLayers(e4, i, t5, r3) {
    const s = [];
    if (!e4)
      return s;
    e4.forEach((e5) => {
      const i2 = f(e5, r3.webmap ? r3.webmap.getLayerJSONFromResourceInfo(e5) : null, r3);
      (i2 == null ? void 0 : i2.layerType) && s.push(i2);
    }), i.layers = s;
  }
  set portalItem(e4) {
    this._set("portalItem", e4);
  }
  readPortalItem(e4, i, t5) {
    const { itemId: r3, layerType: s } = i;
    if ("GroupLayer" === s && r3)
      return new S({ id: r3, portal: t5 == null ? void 0 : t5.portal });
  }
  writePortalItem(e4, i) {
    (e4 == null ? void 0 : e4.id) && (i.itemId = e4.id);
  }
  set visibilityMode(e4) {
    const i = this._get("visibilityMode") !== e4;
    this._set("visibilityMode", e4), i && this._enforceVisibility(e4, this.visible);
  }
  async beforeSave() {
    return r2(this);
  }
  load(e4) {
    const i = this.loadFromPortal({ supportedTypes: ["Feature Service", "Feature Collection", "Group Layer", "Scene Service"], layerModuleTypeMap: a3 }, e4).catch((e5) => {
      if (a(e5), this.sourceIsPortalItem)
        throw e5;
    });
    return this.addResolvingPromise(i), Promise.resolve(this);
  }
  async loadAll() {
    return t2(this, (e4) => {
      e4(this.layers, this.tables);
    });
  }
  async save(e4) {
    return this._debouncedSaveOperations(A2.SAVE, e4);
  }
  async saveAs(e4, i) {
    return this._debouncedSaveOperations(A2.SAVE_AS, i, e4);
  }
  layerAdded(e4) {
    e4.visible && "exclusive" === this.visibilityMode ? this._turnOffOtherLayers(e4) : "inherited" === this.visibilityMode && (e4.visible = this.visible), this.hasHandles(e4.uid) ? console.error(`Layer read to Grouplayer: uid=${e4.uid}`) : this.addHandles(d(() => e4.visible, (i) => this._onChildVisibilityChange(e4, i), C), e4.uid);
  }
  layerRemoved(e4) {
    this.removeHandles(e4.uid), this._enforceVisibility(this.visibilityMode, this.visible);
  }
  _turnOffOtherLayers(e4) {
    this.layers.forEach((i) => {
      i !== e4 && (i.visible = false);
    });
  }
  _enforceVisibility(e4, i) {
    if (!t(this).initialized)
      return;
    const t5 = this.layers;
    let r3 = t5.find((e5) => e5.visible);
    switch (e4) {
      case "exclusive":
        t5.length && !r3 && (r3 = t5.at(0), r3.visible = true), this._turnOffOtherLayers(r3);
        break;
      case "inherited":
        t5.forEach((e5) => {
          e5.visible = i;
        });
    }
  }
  _onVisibilityChange(e4) {
    "inherited" === this.visibilityMode && this.layers.forEach((i) => {
      i.visible = e4;
    });
  }
  _onChildVisibilityChange(e4, i) {
    switch (this.visibilityMode) {
      case "exclusive":
        i ? this._turnOffOtherLayers(e4) : this._isAnyLayerVisible() || (e4.visible = true);
        break;
      case "inherited":
        e4.visible = this.visible;
    }
  }
  _isAnyLayerVisible() {
    return this.layers.some((e4) => e4.visible);
  }
};
e([y({ readOnly: true, dependsOn: [] })], V.prototype, "allLayers", void 0), e([y({ readOnly: true })], V.prototype, "allTables", void 0), e([y({ json: { read: true, write: true } })], V.prototype, "blendMode", void 0), e([y()], V.prototype, "fullExtent", void 0), e([y({ readOnly: true })], V.prototype, "sourceIsPortalItem", null), e([y({ json: { read: false, write: { ignoreOrigin: true } } })], V.prototype, "layers", void 0), e([r("layers")], V.prototype, "_writeLayers", null), e([y({ type: ["GroupLayer"] })], V.prototype, "operationalLayerType", void 0), e([y({ json: { origins: { "web-map": { read: false, write: { overridePolicy(e4, i, t5) {
  return { enabled: "Group Layer" === (e4 == null ? void 0 : e4.type) && (t5 == null ? void 0 : t5.initiator) !== this };
} } }, "web-scene": { read: false, write: false } } } })], V.prototype, "portalItem", null), e([o("web-map", "portalItem", ["itemId"])], V.prototype, "readPortalItem", null), e([r("web-map", "portalItem", { itemId: { type: String } })], V.prototype, "writePortalItem", null), e([y()], V.prototype, "spatialReference", void 0), e([y({ json: { read: false }, readOnly: true, value: "group" })], V.prototype, "type", void 0), e([y({ type: ["independent", "inherited", "exclusive"], value: "independent", json: { write: true, origins: { "web-map": { type: ["independent", "exclusive"], write: (e4, i, t5) => {
  "inherited" !== e4 && (i[t5] = e4);
} } } } })], V.prototype, "visibilityMode", null), V = e([a2("esri.layers.GroupLayer")], V);
var C2 = V;
export {
  C2 as default
};
//# sourceMappingURL=GroupLayer-SZCWNI7I.js.map
