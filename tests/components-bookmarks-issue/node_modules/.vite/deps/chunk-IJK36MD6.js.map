{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/components/src/components/tabs/resources.ts", "../../@esri/calcite-components/dist/components/src/components/tabs/tabs.scss?tag=calcite-tabs&encapsulation=shadow", "../../@esri/calcite-components/dist/components/src/components/tabs/tabs.tsx"],
  "sourcesContent": ["export const SLOTS = {\n  titleGroup: \"title-group\",\n};\n", ":host {\n  @apply flex flex-col;\n}\n\n:host([bordered]) {\n  box-shadow: inset 0 1px 0 var(--calcite-color-border-1);\n  background-color: var(--calcite-color-foreground-1);\n}\n\n:host([bordered]:not([position=\"bottom\"])) ::slotted(calcite-tab-nav) {\n  margin-block-end: -1px;\n}\n\n:host([bordered][position=\"bottom\"]) {\n  box-shadow:\n    inset 0 1px 0 var(--calcite-color-border-1),\n    inset 0 -1px 0 var(--calcite-color-border-1);\n}\n\n:host([bordered]) section {\n  @apply border-color-1 border border-solid;\n}\n\n:host([bordered][scale=\"s\"]) section {\n  @apply p-3;\n}\n\n:host([bordered][scale=\"m\"]) section {\n  @apply p-2;\n}\n\n:host([bordered][scale=\"l\"]) section {\n  @apply p-4;\n}\n\n:host([position=\"bottom\"]) {\n  @apply flex-col-reverse;\n}\n\nsection {\n  @apply border-t-color-1\n    flex\n    flex-grow\n    overflow-hidden\n    border-t;\n  border-block-start-style: solid;\n}\n\n:host([position=\"bottom\"]) section {\n  @apply border-b-color-1\n    flex-col-reverse\n    border-t-0\n    border-b;\n}\n\n:host([position=\"bottom\"]:not([bordered])) section {\n  border-block-end-style: solid;\n}\n\n@media (forced-colors: active) {\n  :host([bordered]) section {\n    @apply border-t-0\n      border-b;\n  }\n  :host([position=\"bottom\"][bordered]) section {\n    @apply border-t\n      border-b-0;\n  }\n}\n\n@include base-component();\n", "import { Component, Element, Fragment, h, Listen, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { TabLayout, TabPosition } from \"./interfaces\";\nimport { SLOTS } from \"./resources\";\nimport { createObserver } from \"../../utils/observers\";\n\n/**\n * @slot - A slot for adding `calcite-tab`s.\n * @slot title-group - A slot for adding a `calcite-tab-nav`.\n */\n@Component({\n  tag: \"calcite-tabs\",\n  styleUrl: \"tabs.scss\",\n  shadow: true,\n})\nexport class Tabs {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies the layout of the `calcite-tab-nav`, justifying the `calcite-tab-title`s to the start (`\"inline\"`), or across and centered (`\"center\"`).\n   */\n  @Prop({ reflect: true }) layout: TabLayout = \"inline\";\n\n  /**\n   * Specifies the position of `calcite-tab-nav` and `calcite-tab-title` components in relation to the `calcite-tabs`.\n   */\n  @Prop({ reflect: true }) position: TabPosition = \"top\";\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"position\")\n  @Watch(\"scale\")\n  handleInheritableProps(): void {\n    this.updateItems();\n  }\n\n  /**\n   * When `true`, the component will display with a folder style menu.\n   */\n  @Prop() bordered = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.mutationObserver.observe(this.el, { childList: true });\n    this.updateItems();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    this.updateItems();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        <slot name={SLOTS.titleGroup} />\n        <section>\n          <slot />\n        </section>\n      </Fragment>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteInternalTabTitleRegister\")\n  calciteInternalTabTitleRegister(event: CustomEvent): void {\n    this.titles = [...this.titles, event.target as HTMLCalciteTabTitleElement];\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteTabTitleUnregister\", { target: \"body\" })\n  calciteTabTitleUnregister(event: CustomEvent): void {\n    this.titles = this.titles.filter((el) => el !== event.detail);\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteInternalTabRegister\")\n  calciteInternalTabRegister(event: CustomEvent): void {\n    this.tabs = [...this.tabs, event.target as HTMLCalciteTabElement];\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteTabUnregister\", { target: \"body\" })\n  calciteTabUnregister(event: CustomEvent): void {\n    this.tabs = this.tabs.filter((el) => el !== event.detail);\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabsElement;\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab-titles>`s to match up ARIA\n   * attributes.\n   */\n  @State() titles: HTMLCalciteTabTitleElement[] = [];\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab>`s to match up ARIA attributes.\n   */\n  @State() tabs: HTMLCalciteTabElement[] = [];\n\n  mutationObserver = createObserver(\"mutation\", (mutationsList: MutationRecord[]) => {\n    for (const mutation of mutationsList) {\n      const target = mutation.target as HTMLElement;\n      if (\n        target.nodeName === \"CALCITE-TAB-NAV\" ||\n        target.nodeName === \"CALCITE-TAB-TITLE\" ||\n        target.nodeName === \"CALCITE-TAB\"\n      ) {\n        this.updateItems();\n      }\n    }\n  });\n\n  private updateItems(): void {\n    const { position, scale } = this;\n\n    const nav = this.el.querySelector(\"calcite-tab-nav\");\n    if (nav) {\n      nav.position = position;\n      nav.scale = scale;\n    }\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab\")).forEach((tab: HTMLCalciteTabElement) => {\n      if (tab.parentElement === this.el) {\n        tab.scale = scale;\n      }\n    });\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab-nav > calcite-tab-title\")).forEach(\n      (title: HTMLCalciteTabTitleElement) => {\n        title.position = position;\n        title.scale = scale;\n      },\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   *\n   * Matches up elements from the internal `tabs` and `titles` to automatically\n   * update the ARIA attributes and link `<calcite-tab>` and\n   * `<calcite-tab-title>` components.\n   */\n  async registryHandler(): Promise<void> {\n    let tabIds;\n    let titleIds;\n\n    // determine if we are using `tab` based or `index` based tab identifiers.\n    if (this.tabs.some((el) => el.tab) || this.titles.some((el) => el.tab)) {\n      // if we are using `tab` based identifiers sort by `tab` to account for\n      // possible out of order tabs and get the id of each tab\n      tabIds = this.tabs.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n      titleIds = this.titles.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n    } else {\n      // if we are using index based tabs then the `<calcite-tab>` and\n      // `<calcite-tab-title>` might have been rendered out of order so the\n      // order of `this.tabs` and `this.titles` might not reflect the DOM state,\n      // and might not match each other so we need to get the index of all the\n      // tabs and titles in the DOM order to match them up as a source of truth\n      const tabDomIndexes = await Promise.all(this.tabs.map((el) => el.getTabIndex()));\n\n      const titleDomIndexes = await Promise.all(this.titles.map((el) => el.getTabIndex()));\n\n      // once we have the DOM order as a source of truth we can build the\n      // matching tabIds and titleIds arrays\n      tabIds = tabDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = this.tabs[registryIndex].id;\n        return ids;\n      }, []);\n\n      titleIds = titleDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = this.titles[registryIndex].id;\n        return ids;\n      }, []);\n    }\n\n    // pass all our new aria information to each `<calcite-tab>` and\n    // `<calcite-tab-title>` which will check if they can update their internal\n    // `controlled` or `labeledBy` states and re-render if necessary\n    this.tabs.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n    this.titles.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n  }\n}\n"],
  "mappings": "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",
  "names": ["Tabs"]
}
