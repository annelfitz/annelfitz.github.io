{
  "version": 3,
  "sources": ["../../@arcgis/map-components/dist/esm/arcgis-daylight.entry.js"],
  "sourcesContent": ["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.0-next.13\n */\nimport { r as registerInstance, c as createEvent, h, g as getElement } from './index-2198b48c.js';\nimport { m as newWidgetsDaylight } from './index-08887307.js';\nimport { r as referenceElementHelper, c as checkForView } from './component-utils-97b1c3e3.js';\nimport { o as onDisconnectedHelper } from './disconnected-45c113cb.js';\n\nconst daylightCss = \"\";\n\nconst ArcgisDaylight = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.arcgisDaylightReady = createEvent(this, \"arcgisDaylightReady\", 7);\n        this._watchHandles = [];\n        this.referenceElement = undefined;\n        this.currentSeason = undefined;\n        this.dayPlaying = false;\n        this.yearPlaying = false;\n        this.dateOrSeason = \"date\";\n        this.icon = undefined;\n        this.playSpeedMultiplier = 1.0;\n        this.timeSliderSteps = 5;\n        this.visibleElementsHeader = true;\n        this.visibleElementsPlayButtons = true;\n        this.visibleElementsDatePicker = true;\n        this.visibleElementsTimezone = true;\n        this.visibleElementsSunLightingToggle = true;\n        this.visibleElementsShadowsToggle = true;\n        this.position = \"bottom-left\";\n        this.view = undefined;\n        this.widget = undefined;\n    }\n    referenceElementWatcher(value) {\n        void referenceElementHelper(this, value);\n    }\n    currentSeasonWatcher(value) {\n        if (this.widget) {\n            this.widget.viewModel.currentSeason = value;\n        }\n    }\n    dayPlayingWatcher(value) {\n        if (this.widget) {\n            this.widget.viewModel.dayPlaying = value;\n        }\n    }\n    yearPlayingWatcher(value) {\n        if (this.widget) {\n            this.widget.viewModel.yearPlaying = value;\n        }\n    }\n    dateOrSeasonWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.widget.dateOrSeason = value;\n        }\n    }\n    iconWatcher(value) {\n        if (this.widget) {\n            this.widget.icon = value;\n        }\n    }\n    playSpeedMultiplierWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.widget.playSpeedMultiplier = value;\n        }\n    }\n    timeSliderStepsWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.widget.timeSliderSteps = value;\n        }\n    }\n    visibleElementsHeaderWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements.header = value;\n        }\n    }\n    visibleElementsPlayButtonsWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = {\n                ...this.widget.visibleElements,\n                playButtons: value\n            };\n        }\n    }\n    visibleElementsDatePickerWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = {\n                ...this.widget.visibleElements,\n                datePicker: value\n            };\n        }\n    }\n    visibleElementsTimezoneWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = {\n                ...this.widget.visibleElements,\n                timezone: value\n            };\n        }\n    }\n    visibleElementsSunLightingToggleWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = {\n                ...this.widget.visibleElements,\n                sunLightingToggle: value\n            };\n        }\n    }\n    visibleElementsShadowsToggleWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = {\n                ...this.widget.visibleElements,\n                shadowsToggle: value\n            };\n        }\n    }\n    positionWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.view.ui.move(this.childElem, value);\n        }\n    }\n    viewWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.widget.view = value;\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    async componentDidLoad() {\n        const params = this._createParams();\n        const widget = await newWidgetsDaylight(params);\n        this.widget = widget;\n        this._addContainer();\n        this._setViewModelParams();\n        this.arcgisDaylightReady.emit();\n        checkForView(this);\n    }\n    disconnectedCallback() {\n        onDisconnectedHelper(this);\n    }\n    render() {\n        return h(\"div\", { ref: (el) => (this.childElem = el) });\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    _addContainer() {\n        this.widget.container = this.childElem;\n    }\n    _createParams() {\n        const params = {};\n        params.visibleElements = {\n            header: this.visibleElementsHeader,\n            playButtons: this.visibleElementsPlayButtons,\n            datePicker: this.visibleElementsDatePicker,\n            timezone: this.visibleElementsTimezone,\n            sunLightingToggle: this.visibleElementsSunLightingToggle,\n            shadowsToggle: this.visibleElementsShadowsToggle\n        };\n        if (this.icon) {\n            params.icon = this.icon;\n        }\n        if (this.view) {\n            params.view = this.view;\n        }\n        if (this.dateOrSeason) {\n            params.dateOrSeason = this.dateOrSeason;\n        }\n        if (this.playSpeedMultiplier) {\n            params.playSpeedMultiplier = this.playSpeedMultiplier;\n        }\n        if (this.timeSliderSteps) {\n            params.timeSliderSteps = this.timeSliderSteps;\n        }\n        return params;\n    }\n    _setViewModelParams() {\n        const params = {\n            dayPlaying: this.dayPlaying,\n            yearPlaying: this.yearPlaying\n        };\n        if (this.currentSeason) {\n            params.currentSeason = this.currentSeason;\n        }\n        this.widget.viewModel.set(params);\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"referenceElement\": [\"referenceElementWatcher\"],\n        \"currentSeason\": [\"currentSeasonWatcher\"],\n        \"dayPlaying\": [\"dayPlayingWatcher\"],\n        \"yearPlaying\": [\"yearPlayingWatcher\"],\n        \"dateOrSeason\": [\"dateOrSeasonWatcher\"],\n        \"icon\": [\"iconWatcher\"],\n        \"playSpeedMultiplier\": [\"playSpeedMultiplierWatcher\"],\n        \"timeSliderSteps\": [\"timeSliderStepsWatcher\"],\n        \"visibleElementsHeader\": [\"visibleElementsHeaderWatcher\"],\n        \"visibleElementsPlayButtons\": [\"visibleElementsPlayButtonsWatcher\"],\n        \"visibleElementsDatePicker\": [\"visibleElementsDatePickerWatcher\"],\n        \"visibleElementsTimezone\": [\"visibleElementsTimezoneWatcher\"],\n        \"visibleElementsSunLightingToggle\": [\"visibleElementsSunLightingToggleWatcher\"],\n        \"visibleElementsShadowsToggle\": [\"visibleElementsShadowsToggleWatcher\"],\n        \"position\": [\"positionWatcher\"],\n        \"view\": [\"viewWatcher\"]\n    }; }\n};\nArcgisDaylight.style = daylightCss;\n\nexport { ArcgisDaylight as arcgis_daylight };\n"],
  "mappings": "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",
  "names": []
}
