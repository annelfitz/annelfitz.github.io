import {
  c,
  m as m2,
  p,
  t as t2
} from "./chunk-YCSHXPL7.js";
import {
  j,
  m2 as m,
  u
} from "./chunk-HV6S3GY2.js";
import {
  n as n3,
  x2 as x
} from "./chunk-M5ZB5S5C.js";
import {
  f as f2
} from "./chunk-MBGZKT2Z.js";
import {
  n as n2
} from "./chunk-BPRXWDBO.js";
import {
  U,
  t3 as t
} from "./chunk-SAYWXQVM.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import {
  S,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";
import {
  has
} from "./chunk-J2EGIWT6.js";

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryResult.js
var t3 = class extends S {
  constructor(r4) {
    super(r4), this.resultRows = [];
  }
};
e([y()], t3.prototype, "resultRows", void 0), t3 = e([a("esri.rest.knowledgeGraph.GraphQueryResult")], t3);
var c2 = t3;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryStreamingResult.js
var t4 = class extends S {
  constructor(r4) {
    super(r4), this.resultRowsStream = new ReadableStream();
  }
};
e([y()], t4.prototype, "resultRowsStream", void 0), t4 = e([a("esri.rest.knowledgeGraph.GraphQueryStreamingResult")], t4);
var c3 = t4;

// node_modules/@arcgis/core/rest/knowledgeGraph/FieldIndex.js
var s2 = class extends f {
  constructor(o3) {
    super(o3), this.name = null, this.unique = null, this.ascending = null, this.description = null, this.fieldNames = null;
  }
};
e([y({ type: String, json: { write: true } })], s2.prototype, "name", void 0), e([y({ type: Boolean, json: { write: true } })], s2.prototype, "unique", void 0), e([y({ type: Boolean, json: { write: true } })], s2.prototype, "ascending", void 0), e([y({ type: String, json: { write: true } })], s2.prototype, "description", void 0), e([y({ type: [String], json: { write: true } })], s2.prototype, "fieldNames", void 0), s2 = e([a("esri.rest.knowledgeGraph.FieldIndex")], s2);
var i = s2;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphProperty.js
var i2 = class extends f {
  constructor(t10) {
    super(t10), this.name = null, this.alias = null, this.fieldType = null, this.geometryType = null, this.hasM = null, this.hasZ = null, this.nullable = null, this.editable = null, this.required = null, this.defaultVisibility = null, this.systemMaintained = null, this.role = null, this.defaultValue = null;
  }
};
e([y({ type: String, json: { write: true } })], i2.prototype, "name", void 0), e([y({ type: String, json: { write: true } })], i2.prototype, "alias", void 0), e([y({ type: String, json: { write: true } })], i2.prototype, "fieldType", void 0), e([y({ type: String, json: { write: true } })], i2.prototype, "geometryType", void 0), e([y({ type: Boolean, json: { write: true } })], i2.prototype, "hasM", void 0), e([y({ type: Boolean, json: { write: true } })], i2.prototype, "hasZ", void 0), e([y({ type: Boolean, json: { write: true } })], i2.prototype, "nullable", void 0), e([y({ type: Boolean, json: { write: true } })], i2.prototype, "editable", void 0), e([y({ type: Boolean, json: { write: true } })], i2.prototype, "required", void 0), e([y({ type: Boolean, json: { write: true } })], i2.prototype, "defaultVisibility", void 0), e([y({ type: Boolean, json: { write: true } })], i2.prototype, "systemMaintained", void 0), e([y()], i2.prototype, "role", void 0), e([y({ type: Object, json: { type: String, write: { writer: (t10, e6) => {
  e6.defaultValue = null != t10 ? t10.toString() : null;
} } } })], i2.prototype, "defaultValue", void 0), i2 = e([a("esri.rest.knowledgeGraph.GraphProperty")], i2);
var l = i2;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphObjectType.js
var i3 = class extends f {
  constructor(o3) {
    super(o3), this.name = null, this.alias = null, this.role = null, this.strict = null, this.properties = null, this.fieldIndexes = null;
  }
};
e([y({ type: String, json: { write: true } })], i3.prototype, "name", void 0), e([y({ type: String, json: { write: true } })], i3.prototype, "alias", void 0), e([y({ type: String, json: { write: true } })], i3.prototype, "role", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "strict", void 0), e([y({ type: [l], json: { write: true } })], i3.prototype, "properties", void 0), e([y({ type: [i], json: { write: true } })], i3.prototype, "fieldIndexes", void 0), i3 = e([a("esri.rest.knowledgeGraph.GraphObjectType")], i3);
var n4 = i3;

// node_modules/@arcgis/core/rest/knowledgeGraph/EntityType.js
var e2 = class extends n4 {
  constructor(r4) {
    super(r4);
  }
};
e2 = e([a("esri.rest.knowledgeGraph.EntityType")], e2);
var t5 = e2;

// node_modules/@arcgis/core/rest/knowledgeGraph/RelationshipType.js
var t6 = class extends n4 {
  constructor(o3) {
    super(o3), this.endPoints = [];
  }
};
e([y()], t6.prototype, "endPoints", void 0), t6 = e([a("esri.rest.knowledgeGraph.RelationshipType")], t6);
var p2 = t6;

// node_modules/@arcgis/core/rest/knowledgeGraph/DataModel.js
var n5 = class extends f {
  constructor(t10) {
    super(t10), this.timestamp = null, this.spatialReference = null, this.strict = null, this.objectIdField = null, this.globalIdField = null, this.arcgisManaged = null, this.identifierInfo = null, this.searchIndexes = null, this.entityTypes = null, this.relationshipTypes = null;
  }
};
e([y({ type: Date, json: { type: Number, write: { writer: (t10, e6) => {
  e6.timestamp = t10 == null ? void 0 : t10.getTime();
} } } })], n5.prototype, "timestamp", void 0), e([y({ type: f2, json: { write: true } })], n5.prototype, "spatialReference", void 0), e([y({ type: Boolean, json: { write: true } })], n5.prototype, "strict", void 0), e([y({ type: String, json: { write: true } })], n5.prototype, "objectIdField", void 0), e([y({ type: String, json: { write: true } })], n5.prototype, "globalIdField", void 0), e([y()], n5.prototype, "arcgisManaged", void 0), e([y()], n5.prototype, "identifierInfo", void 0), e([y()], n5.prototype, "searchIndexes", void 0), e([y({ type: [t5], json: { write: true } })], n5.prototype, "entityTypes", void 0), e([y({ type: [p2], json: { write: true } })], n5.prototype, "relationshipTypes", void 0), n5 = e([a("esri.rest.knowledgeGraph.DataModel")], n5);
var l2 = n5;

// node_modules/@arcgis/core/rest/knowledgeGraph/ServiceDefinition.js
var i4 = class extends f {
  constructor(t10) {
    super(t10), this.capabilities = [], this.supportsSearch = false, this.supportedQueryFormats = [], this.allowGeometryUpdates = false, this.searchMaxRecordCount = null, this.serviceCapabilities = null, this.maxRecordCount = null, this.description = "", this.copyrightText = "", this.units = "", this.spatialReference = null, this.currentVersion = null, this.dateFieldsTimeReference = null, this.serviceItemId = "", this.supportsDocuments = false, this.dataEditingNotSupported = false, this.schemaEditingNotSupported = false;
  }
};
e([y({ type: [String], json: { write: true } })], i4.prototype, "capabilities", void 0), e([y({ type: Boolean, json: { write: true } })], i4.prototype, "supportsSearch", void 0), e([y({ type: [String], json: { write: true } })], i4.prototype, "supportedQueryFormats", void 0), e([y({ type: Boolean, json: { write: true } })], i4.prototype, "allowGeometryUpdates", void 0), e([y({ type: Number, json: { write: true } })], i4.prototype, "searchMaxRecordCount", void 0), e([y({ type: Object, json: { write: true } })], i4.prototype, "serviceCapabilities", void 0), e([y({ type: Number, json: { write: true } })], i4.prototype, "maxRecordCount", void 0), e([y({ type: String, json: { write: true } })], i4.prototype, "description", void 0), e([y({ type: String, json: { write: true } })], i4.prototype, "copyrightText", void 0), e([y({ type: String, json: { write: true } })], i4.prototype, "units", void 0), e([y({ type: Object, json: { write: true } })], i4.prototype, "spatialReference", void 0), e([y({ type: Number, json: { write: true } })], i4.prototype, "currentVersion", void 0), e([y({ type: Object, json: { write: true } })], i4.prototype, "dateFieldsTimeReference", void 0), e([y({ type: String, json: { write: true } })], i4.prototype, "serviceItemId", void 0), e([y({ type: Boolean, json: { write: true } })], i4.prototype, "supportsDocuments", void 0), e([y({ type: Boolean, json: { write: true } })], i4.prototype, "dataEditingNotSupported", void 0), e([y({ type: Boolean, json: { write: true } })], i4.prototype, "schemaEditingNotSupported", void 0), i4 = e([a("esri.rest.knowledgeGraph.ServiceDefinition")], i4);
var s3 = i4;

// node_modules/@arcgis/core/rest/knowledgeGraph/KnowledgeGraph.js
var p3 = class extends f {
  constructor(o3) {
    super(o3), this.dataModel = null, this.serviceDefinition = null;
  }
};
e([y({ type: String, json: { write: true } })], p3.prototype, "url", void 0), e([y({ type: l2, json: { write: true } })], p3.prototype, "dataModel", void 0), e([y({ type: s3, json: { write: true } })], p3.prototype, "serviceDefinition", void 0), p3 = e([a("esri.rest.knowledgeGraph.KnowledgeGraph")], p3);
var c4 = p3;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/knowledgeWasmAccess.js
var t7 = "esri/rest/knowledgeGraph/wasmInterface/";
var s4;
var n6 = null;
async function r() {
  const e6 = n6 ?? s4;
  if (e6)
    return e6;
  const t10 = has("wasm-simd");
  return s4 = o(t10), s4;
}
async function o(s8) {
  if (s8) {
    const { default: s9 } = await import("./arcgis-knowledge-client-core-simd-ERLGMP4I.js").then((e6) => e6.a);
    return s9({ locateFile: (s10) => n2(t7 + s10) });
  }
  const { default: n7 } = await import("./arcgis-knowledge-client-core-EIXLIZMF.js").then((e6) => e6.a);
  return n7({ locateFile: (s9) => n2(t7 + s9) });
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/queryToWasmEncodedFactories.js
function a2(e6, t10) {
  const n7 = new t10.ArrayValue();
  return n7.deleteLater(), e6.forEach((e7) => {
    n7.add_value(m3(e7, t10));
  }), n7;
}
function l3(e6, t10) {
  const n7 = new t10.ObjectValue();
  n7.deleteLater();
  for (const [o3, r4] of Object.entries(e6))
    n7.set_key_value(o3, m3(r4, t10));
  return n7;
}
function s5(i7, a5) {
  if (i7 instanceof u)
    return f3(i7, a5);
  if (i7 instanceof x)
    return g(i7, a5);
  if (i7 instanceof m || i7 instanceof j)
    return c5(i7, a5);
  throw new s("knowledge-graph:unsupported-geometry", "Only Point, Multipoint, Polyline, and Polygon geometry are supported by ArcGIS Knowledge", { geometry: i7 });
}
function u2(e6, t10) {
  t10.input_quantization_parameters = { xy_resolution: e6.xyResolution, x_false_origin: e6.xFalseOrigin, y_false_origin: e6.yFalseOrigin, z_resolution: e6.zResolution, z_false_origin: e6.zFalseOrigin, m_resolution: e6.mResolution, m_false_origin: e6.mFalseOrigin };
}
function y2(t10, n7, o3) {
  if (!t10.extent)
    throw new s("knowledge-graph:illegal-output-quantization", "The Output quantization provided to the encoder had an illegal value as part of its extent", t10.extent);
  if (!t10.quantizeMode)
    throw new s("knowledge-graph:illegal-output-quantization", "The Output quantization contained an illegal mode setting", t10.quantizeMode);
  if (!t10.tolerance)
    throw new s("knowledge-graph:illegal-output-quantization", "The Output quantization contained an illegal tolerance setting", t10.quantizeMode);
  n7.output_quantization_parameters = { extent: { xmax: t10.extent.xmax, ymax: t10.extent.ymax, xmin: t10.extent.xmin, ymin: t10.extent.ymin }, quantize_mode: o3.esriQuantizeMode[t10.quantizeMode], tolerance: t10.tolerance };
}
function m3(e6, t10) {
  if (null == e6)
    return "";
  if ("object" != typeof e6)
    return e6;
  if (e6 instanceof Date)
    return e6;
  if (e6 instanceof n3)
    return s5(e6, t10);
  if (Array.isArray(e6)) {
    const n7 = new t10.ArrayValue();
    return n7.deleteLater(), e6.forEach((e7) => {
      n7.add_value(m3(e7, t10));
    }), n7;
  }
  return l3(e6, t10);
}
function c5(e6, t10) {
  const n7 = new t10.GeometryValue();
  n7.deleteLater(), n7.has_z = e6.hasZ, n7.has_m = e6.hasM;
  const i7 = [], a5 = [];
  let l5 = [];
  e6 instanceof m ? (n7.geometry_type = t10.esriGeometryType.esriGeometryPolyline, l5 = e6.paths) : e6 instanceof j && (n7.geometry_type = t10.esriGeometryType.esriGeometryPolygon, l5 = e6.rings);
  let s8 = 0, u3 = 0;
  return l5.forEach((e7) => {
    let t11 = 0;
    e7.forEach((e8) => {
      t11++, e8.forEach((e9) => {
        i7[u3] = e9, u3++;
      });
    }), a5[s8] = t11, s8++;
  }), n7.coords = new Float64Array(i7), n7.lengths = new Uint32Array(a5), n7;
}
function f3(e6, t10) {
  const n7 = new t10.GeometryValue();
  n7.deleteLater(), n7.geometry_type = n7.geometry_type = t10.esriGeometryType.esriGeometryMultipoint, n7.has_z = e6.hasZ, n7.has_m = e6.hasM;
  const o3 = [], r4 = [];
  r4[0] = e6.points.length;
  let i7 = 0;
  return e6.points.forEach((e7) => {
    e7.forEach((e8) => {
      o3[i7] = e8, i7++;
    });
  }), n7.coords = new Float64Array(o3), n7.lengths = new Uint32Array(r4), n7;
}
function g(e6, t10) {
  const n7 = new t10.GeometryValue();
  n7.deleteLater(), n7.geometry_type = t10.esriGeometryType.esriGeometryPoint, n7.has_z = e6.hasZ, n7.has_m = e6.hasM;
  const o3 = [], r4 = [];
  r4[0] = 1, o3[0] = e6.x, o3[1] = e6.y;
  let i7 = 2;
  return e6.hasZ && (o3[i7] = e6.z, i7++), e6.hasM && (o3[i7] = e6.m, i7++), n7.coords = new Float64Array(o3), n7.lengths = new Uint32Array(r4), n7;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/updateToWasmEncodedFactories.js
function r2(i7, n7) {
  if (!i7.typeName)
    throw new s("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits");
  if (i7 instanceof m2) {
    const e6 = new n7.EntityValue();
    e6.deleteLater(), e6.type_name = i7.typeName;
    for (const [t10, o3] of Object.entries(i7.properties))
      e6.set_key_value(t10, a3(o3, n7));
    return i7.id && e6.set_id(i7.id), e6;
  }
  if (i7 instanceof p) {
    const e6 = new n7.RelationshipValue();
    e6.deleteLater(), e6.type_name = i7.typeName;
    for (const [t10, o3] of Object.entries(i7.properties))
      e6.set_key_value(t10, a3(o3, n7));
    return i7.id && e6.set_id(i7.id), i7.originId && i7.destinationId && e6.set_related_entity_ids(i7.originId, i7.destinationId), e6;
  }
  throw new s("knowledge-graph:applyEdits-encoding-failure", "Could not determine the type of a named graph object passed to the encoder");
}
function s6(e6) {
  return { xy_resolution: e6.xyResolution, x_false_origin: e6.xFalseOrigin, y_false_origin: e6.yFalseOrigin, z_resolution: e6.zResolution, z_false_origin: e6.zFalseOrigin, m_resolution: e6.mResolution, m_false_origin: e6.mFalseOrigin };
}
function a3(e6, t10) {
  return null == e6 ? "" : "object" != typeof e6 || e6 instanceof Date ? e6 : e6 instanceof n3 ? s5(e6, t10) : "";
}

// node_modules/@arcgis/core/rest/knowledgeGraph/SearchIndex.js
var t8 = class extends S {
  constructor(r4) {
    super(r4), this.name = null, this.supportedCategory = null, this.analyzers = [], this.searchProperties = /* @__PURE__ */ new Map();
  }
};
e([y()], t8.prototype, "name", void 0), e([y()], t8.prototype, "supportedCategory", void 0), e([y()], t8.prototype, "analyzers", void 0), e([y()], t8.prototype, "searchProperties", void 0), t8 = e([a("esri.rest.knowledgeGraph.SearchIndex")], t8);
var p4 = t8;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmDataModelWrapperInterfaces.js
var e3;
var r3;
var i5;
var t9;
var o2;
var s7;
var y3;
!function(e6) {
  e6[e6.Regular = 0] = "Regular", e6[e6.Provenance = 1] = "Provenance", e6[e6.Document = 2] = "Document";
}(e3 || (e3 = {})), function(e6) {
  e6[e6.esriFieldTypeSmallInteger = 0] = "esriFieldTypeSmallInteger", e6[e6.esriFieldTypeInteger = 1] = "esriFieldTypeInteger", e6[e6.esriFieldTypeSingle = 2] = "esriFieldTypeSingle", e6[e6.esriFieldTypeDouble = 3] = "esriFieldTypeDouble", e6[e6.esriFieldTypeString = 4] = "esriFieldTypeString", e6[e6.esriFieldTypeDate = 5] = "esriFieldTypeDate", e6[e6.esriFieldTypeOID = 6] = "esriFieldTypeOID", e6[e6.esriFieldTypeGeometry = 7] = "esriFieldTypeGeometry", e6[e6.esriFieldTypeBlob = 8] = "esriFieldTypeBlob", e6[e6.esriFieldTypeRaster = 9] = "esriFieldTypeRaster", e6[e6.esriFieldTypeGUID = 10] = "esriFieldTypeGUID", e6[e6.esriFieldTypeGlobalID = 11] = "esriFieldTypeGlobalID", e6[e6.esriFieldTypeXML = 12] = "esriFieldTypeXML", e6[e6.esriFieldTypeBigInteger = 13] = "esriFieldTypeBigInteger", e6[e6.esriFieldTypeDateOnly = 14] = "esriFieldTypeDateOnly", e6[e6.esriFieldTypeTimeOnly = 15] = "esriFieldTypeTimeOnly", e6[e6.esriFieldTypeTimestampOffset = 16] = "esriFieldTypeTimestampOffset";
}(r3 || (r3 = {})), function(e6) {
  e6[e6.esriGeometryNull = 0] = "esriGeometryNull", e6[e6.esriGeometryPoint = 1] = "esriGeometryPoint", e6[e6.esriGeometryMultipoint = 2] = "esriGeometryMultipoint", e6[e6.esriGeometryPolyline = 3] = "esriGeometryPolyline", e6[e6.esriGeometryPolygon = 4] = "esriGeometryPolygon", e6[e6.esriGeometryEnvelope = 5] = "esriGeometryEnvelope", e6[e6.esriGeometryAny = 6] = "esriGeometryAny", e6[e6.esriGeometryMultiPatch = 7] = "esriGeometryMultiPatch";
}(i5 || (i5 = {})), function(e6) {
  e6[e6.esriMethodHintUNSPECIFIED = 0] = "esriMethodHintUNSPECIFIED", e6[e6.esriUUIDESRI = 1] = "esriUUIDESRI", e6[e6.esriUUIDRFC4122 = 2] = "esriUUIDRFC4122";
}(t9 || (t9 = {})), function(e6) {
  e6[e6.esriTypeUNSPECIFIED = 0] = "esriTypeUNSPECIFIED", e6[e6.esriTypeEntity = 1] = "esriTypeEntity", e6[e6.esriTypeRelationship = 2] = "esriTypeRelationship", e6[e6.esriTypeBoth = 4] = "esriTypeBoth";
}(o2 || (o2 = {})), function(e6) {
  e6[e6.esriGraphPropertyUNSPECIFIED = 0] = "esriGraphPropertyUNSPECIFIED", e6[e6.esriGraphPropertyRegular = 1] = "esriGraphPropertyRegular", e6[e6.esriGraphPropertyDocumentName = 2] = "esriGraphPropertyDocumentName", e6[e6.esriGraphPropertyDocumentTitle = 3] = "esriGraphPropertyDocumentTitle", e6[e6.esriGraphPropertyDocumentUrl = 4] = "esriGraphPropertyDocumentUrl", e6[e6.esriGraphPropertyDocumentText = 5] = "esriGraphPropertyDocumentText", e6[e6.esriGraphPropertyDocumentKeywords = 6] = "esriGraphPropertyDocumentKeywords", e6[e6.esriGraphPropertyDocumentContentType = 7] = "esriGraphPropertyDocumentContentType", e6[e6.esriGraphPropertyDocumentMetadata = 8] = "esriGraphPropertyDocumentMetadata", e6[e6.esriGraphPropertyDocumentFileExtension = 9] = "esriGraphPropertyDocumentFileExtension";
}(s7 || (s7 = {})), function(e6) {
  e6[e6.esriIdentifierInfoTypeUNSPECIFIED = 0] = "esriIdentifierInfoTypeUNSPECIFIED", e6[e6.esriIdentifierInfoTypeDatabaseNative = 1] = "esriIdentifierInfoTypeDatabaseNative", e6[e6.esriIdentifierInfoTypeUniformProperty = 2] = "esriIdentifierInfoTypeUniformProperty";
}(y3 || (y3 = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToDataModelFactories.js
function _(i7) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k;
  return i7.deleteLater(), new l2({ timestamp: i7.timestamp, spatialReference: new f2(i7.spatial_reference), strict: i7.strict, objectIdField: i7.objectid_property, globalIdField: i7.globalid_property, arcgisManaged: i7.arcgis_managed, identifierInfo: { identifierMappingInfo: { identifierInfoType: y3[(_c = (_b = (_a = i7.identifier_info) == null ? void 0 : _a.identifier_mapping_info) == null ? void 0 : _b.identifier_info_type) == null ? void 0 : _c.value], databaseNativeIdentifier: (_e = (_d = i7.identifier_info) == null ? void 0 : _d.identifier_mapping_info) == null ? void 0 : _e.database_native_identifier, uniformPropertyIdentifier: { identifierPropertyName: (_h = (_g = (_f = i7.identifier_info) == null ? void 0 : _f.identifier_mapping_info) == null ? void 0 : _g.uniform_property_identifier) == null ? void 0 : _h.identifier_property_name } }, identifierGenerationInfo: { uuidMethodHint: t9[(_k = (_j = (_i = i7.identifier_info) == null ? void 0 : _i.identifier_generation_info) == null ? void 0 : _j.uuid_method_hint) == null ? void 0 : _k.value] } }, searchIndexes: M(i7.search_indexes), entityTypes: j2(i7.entity_types), relationshipTypes: x2(i7.relationship_types) });
}
function c6(e6) {
  return e6.deleteLater(), new t5(z(e6));
}
function g2(e6) {
  return e6.deleteLater(), new i({ name: e6.name, unique: e6.unique, ascending: e6.ascending, description: e6.description, fieldNames: I(e6.fields) });
}
function z(e6) {
  return { name: e6.name, alias: e6.alias, role: e3[e6.role.value] ? e3[e6.role.value] : null, strict: e6.strict, properties: T(e6.properties), fieldIndexes: w(e6.field_indexes) };
}
function b(e6) {
  return e6.deleteLater(), new l({ alias: e6.alias, name: e6.name, fieldType: r3[e6.field_type.value] ? r3[e6.field_type.value] : null, geometryType: i5[e6.geometry_type.value] ? i5[e6.geometry_type.value] : null, hasM: e6.has_m, hasZ: e6.has_z, nullable: e6.nullable, editable: e6.editable, required: e6.required, defaultVisibility: e6.default_visibility, systemMaintained: e6.system_maintained, role: s7[e6.role.value], defaultValue: e6.default_value });
}
function v(e6) {
  e6.deleteLater();
  const t10 = z(e6), i7 = [];
  for (let n7 = 0; n7 < e6.end_points.size(); n7++) {
    const t11 = e6.end_points.get(n7);
    i7.push({ originEntityType: t11.origin_entity_type, destinationEntityType: t11.dest_entity_type });
  }
  return e6.end_points.delete(), new p2(Object.assign({ endPoints: i7 }, t10));
}
function j2(e6) {
  const t10 = [];
  for (let i7 = 0; i7 < e6.size(); i7++)
    t10.push(c6(e6.get(i7)));
  return e6.delete(), t10;
}
function I(e6) {
  const t10 = [];
  for (let i7 = 0; i7 < e6.size(); i7++)
    t10.push(e6.get(i7));
  return e6.delete(), t10;
}
function T(e6) {
  const t10 = [];
  for (let i7 = 0; i7 < e6.size(); i7++)
    t10.push(b(e6.get(i7)));
  return e6.delete(), t10;
}
function w(e6) {
  const t10 = [];
  for (let i7 = 0; i7 < e6.size(); i7++)
    t10.push(g2(e6.get(i7)));
  return e6.delete(), t10;
}
function x2(e6) {
  const t10 = [];
  for (let i7 = 0; i7 < e6.size(); i7++)
    t10.push(v(e6.get(i7)));
  return e6.delete(), t10;
}
function M(e6) {
  const t10 = [];
  for (let i7 = 0; i7 < e6.size(); i7++) {
    const i8 = new p4(), n7 = e6.get(0);
    i8.name = n7.name, i8.supportedCategory = o2[n7.supported_category.value];
    const r4 = n7.analyzers.size();
    for (let e7 = 0; e7 < r4; e7++)
      i8.analyzers.push({ name: n7.analyzers.get(e7).name });
    n7.analyzers.delete();
    for (let e7 = 0; e7 < n7.search_properties.keys().size(); e7++) {
      const t11 = n7.search_properties.keys().get(e7), r5 = n7.search_properties.get(t11), a5 = [];
      for (let e8 = 0; e8 < r5.property_names.size(); e8++)
        a5.push(r5.property_names.get(e8));
      i8.searchProperties.set(t11, { propertyNames: a5 });
    }
    t10.push(i8);
  }
  return e6.delete(), t10;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/KnowledgeWasmInterface.js
var E;
!function(E4) {
  E4[E4.ESRI_GEOMETRY_NULL = 0] = "ESRI_GEOMETRY_NULL", E4[E4.ESRI_GEOMETRY_POINT = 1] = "ESRI_GEOMETRY_POINT", E4[E4.ESRI_GEOMETRY_MULTIPOINT = 2] = "ESRI_GEOMETRY_MULTIPOINT", E4[E4.ESRI_GEOMETRY_POLYLINE = 3] = "ESRI_GEOMETRY_POLYLINE", E4[E4.ESRI_GEOMETRY_POLYGON = 4] = "ESRI_GEOMETRY_POLYGON", E4[E4.ESRI_GEOMETRY_ENVELOPE = 5] = "ESRI_GEOMETRY_ENVELOPE", E4[E4.ESRI_GEOMETRY_ANY = 6] = "ESRI_GEOMETRY_ANY", E4[E4.ESRI_GEOMETRY_MULTI_PATCH = 7] = "ESRI_GEOMETRY_MULTI_PATCH";
}(E || (E = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmQueryWrapperInterfaces.js
var T2;
var A;
!function(T4) {
  T4[T4.OBJECT = 0] = "OBJECT", T4[T4.ENTITY = 1] = "ENTITY", T4[T4.RELATIONSHIP = 2] = "RELATIONSHIP", T4[T4.PATH = 3] = "PATH", T4[T4.ARRAY = 4] = "ARRAY";
}(T2 || (T2 = {})), function(T4) {
  T4[T4.view = 0] = "view", T4[T4.edit = 1] = "edit";
}(A || (A = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToGeometryFactories.js
function l4(e6, o3) {
  const r4 = { spatialReference: o3 }, n7 = c7(e6, r4), s8 = e6.lengths, l5 = e6.coords, i7 = s8[0];
  r4.points = [];
  let a5 = 0;
  for (let t10 = 0; t10 < i7; t10++) {
    const e7 = [];
    for (let t11 = 0; t11 < n7; t11++)
      e7[t11] = l5[a5], a5++;
    r4.points.push(e7);
  }
  return new u(r4);
}
function i6(e6, t10) {
  const r4 = { spatialReference: t10 };
  let n7 = 2;
  c7(e6, r4);
  const s8 = e6.coords;
  return r4.x = s8[0], r4.y = s8[1], e6.has_z && (r4.z = s8[n7], n7++), e6.has_m && (r4.m = s8[n7]), new x(r4);
}
function a4(e6, t10) {
  return new m(f4(e6, t10));
}
function m4(e6, t10) {
  return new j(f4(e6, t10));
}
function f4(t10, o3) {
  const r4 = { spatialReference: o3 }, n7 = c7(t10, r4), l5 = t10.lengths, i7 = t10.coords;
  let a5 = "";
  if (t10.geometry_type.value === E.ESRI_GEOMETRY_POLYGON)
    a5 = "rings";
  else {
    if (t10.geometry_type.value !== E.ESRI_GEOMETRY_POLYLINE)
      throw new s("KnowledgeGraph:illegal-geometry-type", "Illegal Geometry type for multipath conversion");
    a5 = "paths";
  }
  r4[a5] = [];
  let m6 = 0;
  return l5.forEach((e6) => {
    const t11 = [];
    for (let o4 = 0; o4 < e6; o4++) {
      const e7 = [];
      for (let t12 = 0; t12 < n7; t12++)
        e7[t12] = i7[m6], m6++;
      t11.push(e7);
    }
    r4[a5].push(t11);
  }), r4;
}
function c7(e6, t10) {
  let o3 = 2;
  return e6.has_z ? (t10.hasZ = e6.has_z, o3++) : t10.hasZ = false, e6.has_m ? (t10.hasM = e6.has_m, o3++) : t10.hasM = false, o3;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToQueryResponseObjFactories.js
var _2 = () => n.getLogger("esri.rest.knowledgeGraph.WasmToQueryResponseObjConstructors");
var d = { decodedWasmObjToQueryResponseObj: (e6, t10, n7) => {
  if (null == e6)
    return null;
  if ("object" != typeof e6)
    return e6;
  if ("getDate" in e6)
    return e6;
  if ("geometry_type" in e6)
    switch (e6.geometry_type.value) {
      case null:
        return null;
      case E.ESRI_GEOMETRY_POINT:
        return i6(e6, n7);
      case E.ESRI_GEOMETRY_MULTIPOINT:
        return l4(e6, n7);
      case E.ESRI_GEOMETRY_POLYLINE:
        return a4(e6, n7);
      case E.ESRI_GEOMETRY_POLYGON:
        return m4(e6, n7);
      case E.ESRI_GEOMETRY_ENVELOPE:
      case E.ESRI_GEOMETRY_MULTI_PATCH:
        return _2().warnOnce("Envelope and Multipatch are not supported on knowledge entities, but one of those geometry types was detected. Result interpreted as null"), null;
      case E.ESRI_GEOMETRY_NULL:
      case E.ESRI_GEOMETRY_ANY:
      default:
        return _2().warnOnce("Unknown or blank geometry type returned - Result interpreted as null"), null;
    }
  else {
    if (!("object_value_type" in e6))
      return _2().warnOnce("A decoded value came back of a type that is not supported. Result interpreted as null"), null;
    switch (e6.object_value_type.value) {
      case T2.OBJECT:
        return g3(e6, t10, n7);
      case T2.ENTITY:
        return f5(e6, t10, n7);
      case T2.RELATIONSHIP:
        return j3(e6, t10, n7);
      case T2.PATH:
        return R(e6, t10, n7);
      case T2.ARRAY:
        return m5(e6, t10, n7);
      default:
        return _2().warnOnce("Unknown graph object type detected!  Result interpreted as null"), null;
    }
  }
} };
function m5(e6, t10, n7) {
  const r4 = [], o3 = e6.count();
  for (let s8 = 0; s8 < o3; s8++) {
    const o4 = e6.get_value_at(s8);
    r4.push(E2(o4, t10, n7));
  }
  return r4;
}
function E2(e6, t10, n7) {
  return d.decodedWasmObjToQueryResponseObj(e6, t10, n7);
}
function f5(e6, n7, r4) {
  const o3 = e6.type_name, s8 = O(e6, n7, r4), u3 = e6.get_id();
  return new m2(Object.assign({ typeName: o3, id: u3 }, s8));
}
function O(e6, t10, n7) {
  const r4 = {}, o3 = e6.key_count();
  for (let s8 = 0; s8 < o3; s8++)
    r4[e6.get_key_at(s8)] = E2(e6.get_value_at(s8), t10, n7);
  return { properties: r4 };
}
function g3(e6, t10, n7) {
  return new t2(O(e6, t10, n7));
}
function R(e6, t10, n7) {
  const r4 = e6.entity_count(), s8 = e6.relationship_count(), u3 = [];
  for (let o3 = 0; o3 < r4; o3++)
    u3.push(f5(e6.get_entity_at(o3), t10, n7)), o3 < s8 && u3.push(j3(e6.get_relationship_at(o3), t10, n7));
  return new c({ path: u3 });
}
function j3(e6, t10, n7) {
  const r4 = e6.type_name, o3 = O(e6, t10, n7);
  return new p(Object.assign({ typeName: r4, id: e6.get_id(), originId: e6.get_origin_entity_id(), destinationId: e6.get_destination_entity_id() }, o3));
}

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphApplyEditsResult.js
var e4 = class extends S {
  constructor(r4) {
    super(r4), this.hasError = null, this.error = null, this.editResults = [];
  }
};
e([y()], e4.prototype, "hasError", void 0), e([y()], e4.prototype, "error", void 0), e([y()], e4.prototype, "editResults", void 0), e4 = e([a("esri.rest.knowledgeGraph.GraphApplyEditsResult")], e4);
var p6 = e4;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToUpdateResponseFactories.js
function e5(e6) {
  const o3 = e6.has_error(), t10 = new p6({ hasError: o3, error: o3 ? { errorCode: e6.error.error_code, errorMessage: e6.error.error_message } : null }), s8 = e6.get_edit_results_count();
  for (let r4 = 0; r4 < s8; r4++) {
    const o4 = e6.get_edit_results_at(r4), s9 = e6.get_edit_results_type_name_at(r4), _3 = [], d2 = [], u3 = [], a5 = o4.get_add_results_count(), l5 = o4.get_update_results_count(), g4 = o4.get_delete_results_count();
    for (let r5 = 0; r5 < a5; r5++) {
      const e7 = o4.get_add_result_at(r5);
      _3.push({ id: e7.id, error: { errorCode: e7.error.error_code, errorMessage: e7.error.error_message } });
    }
    for (let r5 = 0; r5 < l5; r5++) {
      const e7 = o4.get_update_result_at(r5);
      d2.push({ id: e7.id, error: { errorCode: e7.error.error_code, errorMessage: e7.error.error_message } });
    }
    for (let r5 = 0; r5 < g4; r5++) {
      const e7 = o4.get_delete_result_at(r5);
      u3.push({ id: e7.id, error: { errorCode: e7.error.error_code, errorMessage: e7.error.error_message } });
    }
    t10.editResults.push({ typeName: s9, adds: _3, updates: d2, deletes: u3 });
  }
  return t10;
}

// node_modules/@arcgis/core/rest/knowledgeGraphService.js
var b2 = { fetchKnowledgeGraph: async (e6) => {
  const t10 = new c4({ url: e6 }), r4 = [];
  return r4.push(q(t10)), r4.push(A2(t10)), await Promise.all(r4), t10;
}, refreshDataModel: async (e6) => {
  e6.dataModel = await z2(e6);
}, refreshServiceDefinition: async (e6) => {
  var _a, _b;
  const r4 = (await U(e6.url, { query: { f: "json" } })).data;
  return r4.capabilities = (_a = r4 == null ? void 0 : r4.capabilities) == null ? void 0 : _a.split(","), r4.supportedQueryFormats = (_b = r4 == null ? void 0 : r4.supportedQueryFormats) == null ? void 0 : _b.split(","), e6.serviceDefinition = new s3(r4), e6.serviceDefinition;
}, executeQueryStreaming: async (e6, t10, a5) => {
  const n7 = `${e6.url}/graph/query`;
  await M2(e6);
  const i7 = await F(n7, a5);
  i7.data.body = await D(t10, e6);
  const d2 = await Q(i7.data.url, i7.data);
  if (e6.dataModel)
    return new c3({ resultRowsStream: await I2(d2, e6.dataModel, t10.outputSpatialReference ?? void 0) });
  throw new s("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
}, executeApplyEdits: async (e6, t10, a5) => {
  var _a;
  if ((_a = e6.serviceDefinition) == null ? void 0 : _a.dataEditingNotSupported)
    throw new s("knowledge-graph:data-editing-not-supported", "The Knowledge Graph Service definition indicated that data editing is not supported");
  const n7 = `${e6.url}/graph/applyEdits`;
  await M2(e6);
  const o3 = await F(n7, a5);
  o3.data.body = await C(t10, e6);
  return P(await Q(o3.data.url, o3.data));
}, executeQuery: async (e6, a5, o3) => {
  var _a;
  const i7 = `${e6.url}/graph/query`, d2 = await U(i7, { responseType: "array-buffer", query: { f: "pbf", openCypherQuery: a5.openCypherQuery, ...o3 == null ? void 0 : o3.query }, signal: o3 == null ? void 0 : o3.signal, timeout: o3 == null ? void 0 : o3.timeout }), p7 = (_a = d2.getHeader) == null ? void 0 : _a.call(d2, "content-type"), c8 = d2.data;
  if (p7 == null ? void 0 : p7.includes("application/x-protobuf")) {
    const t10 = new (await r()).GraphQueryDecoder();
    if (t10.deleteLater(), e6.dataModel)
      return new c2({ resultRows: L(t10, c8, e6.dataModel) });
    throw new s("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: p7, data: d2.data });
}, executeSearch: async (e6, a5, o3) => {
  var _a;
  const i7 = a5.typeCategoryFilter, d2 = `${e6.url}/graph/search`, p7 = await U(d2, { responseType: "array-buffer", query: { f: "pbf", searchQuery: `"${a5.searchQuery}"`, typeCategoryFilter: i7, ...o3 == null ? void 0 : o3.query }, signal: o3 == null ? void 0 : o3.signal, timeout: o3 == null ? void 0 : o3.timeout }), c8 = (_a = p7.getHeader) == null ? void 0 : _a.call(p7, "content-type"), l5 = p7.data;
  if (c8 == null ? void 0 : c8.includes("application/x-protobuf")) {
    const t10 = new (await r()).GraphQueryDecoder();
    if (t10.deleteLater(), e6.dataModel)
      return new c2({ resultRows: L(t10, l5, e6.dataModel) });
    throw new s("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: c8, data: p7.data });
}, executeSearchStreaming: async (e6, t10, a5) => {
  const n7 = `${e6.url}/graph/search`;
  await M2(e6);
  const i7 = await F(n7, a5);
  i7.data.body = await W(t10);
  const d2 = await Q(i7.data.url, i7.data);
  if (e6.dataModel)
    return new c3({ resultRowsStream: await I2(d2, e6.dataModel) });
  throw new s("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
}, _fetchWrapper: async (e6, t10) => fetch(e6, t10) };
async function v2(e6, t10, r4) {
  return b2.executeApplyEdits(e6, t10, r4);
}
async function S2(e6, t10, r4) {
  return b2.executeQuery(e6, t10, r4);
}
async function G(e6, t10, r4) {
  return b2.executeQueryStreaming(e6, t10, r4);
}
async function x3(e6, t10, r4) {
  return b2.executeSearch(e6, t10, r4);
}
async function E3(e6, t10, r4) {
  return b2.executeSearchStreaming(e6, t10, r4);
}
async function T3(e6) {
  return b2.fetchKnowledgeGraph(e6);
}
async function q(e6) {
  return b2.refreshDataModel(e6);
}
async function A2(e6) {
  return b2.refreshServiceDefinition(e6);
}
async function Q(e6, t10) {
  return b2._fetchWrapper(e6, t10);
}
async function M2(t10) {
  var _a;
  const r4 = (_a = t) == null ? void 0 : _a.findCredential(t10.url);
  r4 || (t10.dataModel ? await z2(t10) : await q(t10));
}
function R2(e6, t10, a5) {
  if (0 !== e6.error_code)
    throw new s(t10, a5, { errorCode: e6.error_code, errorMessage: e6.error_message });
}
function j4(e6, t10, r4, a5) {
  null == t10 ? r4.set_param_key_value(e6, "") : "object" != typeof t10 || t10 instanceof Date ? r4.set_param_key_value(e6, t10) : t10 instanceof n3 ? r4.set_param_key_value(e6, s5(t10, a5)) : Array.isArray(t10) ? r4.set_param_key_value(e6, a2(t10, a5)) : r4.set_param_key_value(e6, l3(t10, a5));
}
async function C(e6, t10) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i;
  if (t10.dataModel || await q(t10), !t10.dataModel)
    throw new s("knowledge-graph:data-model-undefined", "Encoding could not proceed because a data model was not provided and it could not be determined from the service");
  const a5 = await r(), n7 = !!((_a = e6.options) == null ? void 0 : _a.cascadeDelete), o3 = new a5.GraphApplyEditsEncoder(a5.SpatialReferenceUtil.WGS84(), ((_b = e6.options) == null ? void 0 : _b.inputQuantizationParameters) ? s6((_c = e6.options) == null ? void 0 : _c.inputQuantizationParameters) : a5.InputQuantizationUtil.WGS84_lossless());
  o3.deleteLater(), o3.cascade_delete = n7;
  try {
    let t11;
    (_d = e6.entityAdds) == null ? void 0 : _d.forEach((e7) => {
      t11 = o3.add_entity(r2(e7, a5)), R2(t11, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - an entity failed to be added to the encoder");
    }), (_e = e6.relationshipAdds) == null ? void 0 : _e.forEach((e7) => {
      if (!e7.originId || !e7.destinationId)
        throw new s("knowledge-graph:relationship-origin-destination-missing", "When adding a new relationship, you must provide both an origin and destination id on the appropriate class property");
      t11 = o3.add_relationship(r2(e7, a5)), R2(t11, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - a relationship failed to be added to the encoder");
    }), (_f = e6.entityUpdates) == null ? void 0 : _f.forEach((e7) => {
      if (!e7.id)
        throw new s("knowledge-graph:entity-id-missing", "When updating an entity or relationship, you must specify the id on the class level property");
      t11 = o3.update_entity(r2(e7, a5)), R2(t11, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - an entity failed to be added to the encoder");
    }), (_g = e6.relationshipUpdates) == null ? void 0 : _g.forEach((e7) => {
      if (!e7.id)
        throw new s("knowledge-graph:relationship-id-missing", "When updating an entity or relationship, you must specify the id on the class level property");
      t11 = o3.update_relationship(r2(e7, a5)), R2(t11, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - a relationship failed to be added to the encoder");
    }), (_h = e6.entityDeletes) == null ? void 0 : _h.forEach((e7) => {
      var _a2;
      if (!e7.typeName)
        throw new s("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits - delete");
      const t12 = o3.make_delete_helper(e7.typeName, true);
      t12.deleteLater(), (_a2 = e7.ids) == null ? void 0 : _a2.forEach((e8) => {
        t12.delete_by_id(e8);
      });
    }), (_i = e6.relationshipDeletes) == null ? void 0 : _i.forEach((e7) => {
      var _a2;
      if (!e7.typeName)
        throw new s("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits - delete");
      const t12 = o3.make_delete_helper(e7.typeName, false);
      (_a2 = e7.ids) == null ? void 0 : _a2.forEach((e8) => {
        t12.delete_by_id(e8);
      });
    }), o3.encode();
  } catch (d2) {
    throw new s("knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits failed", { error: d2 });
  }
  const i7 = o3.get_encoding_result();
  return R2(i7.error, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits failed"), structuredClone(i7.get_byte_buffer());
}
async function D(e6, t10) {
  var _a, _b;
  const a5 = await r(), n7 = new a5.GraphQueryRequestEncoder();
  if (n7.deleteLater(), e6.outputSpatialReference ? n7.output_spatial_reference = { wkid: e6.outputSpatialReference.wkid, latestWkid: e6.outputSpatialReference.latestWkid, vcsWkid: e6.outputSpatialReference.vcsWkid, latestVcsWkid: e6.outputSpatialReference.latestVcsWkid, wkt: e6.outputSpatialReference.wkt ?? "" } : n7.output_spatial_reference = a5.SpatialReferenceUtil.WGS84(), n7.open_cypher_query = e6.openCypherQuery, e6.bindParameters)
    for (const [r4, d2] of Object.entries(e6.bindParameters))
      j4(r4, d2, n7, a5);
  if (e6.bindGeometryQuantizationParameters)
    u2(e6.bindGeometryQuantizationParameters, n7);
  else {
    if (t10.dataModel || await q(t10), 4326 !== ((_b = (_a = t10.dataModel) == null ? void 0 : _a.spatialReference) == null ? void 0 : _b.wkid))
      throw new s("knowledge-graph:SR-quantization-mismatch", "If the DataModel indicates a coordinate system other than WGS84, inputQuantizationParameters must be provided to the query encoder");
    n7.input_quantization_parameters = a5.InputQuantizationUtil.WGS84_lossless();
  }
  e6.outputQuantizationParameters && y2(e6.outputQuantizationParameters, n7, a5);
  try {
    n7.encode();
  } catch (i7) {
    throw new s("knowledge-graph:query-encoding-failed", "Attempting to encode the query failed", { error: i7 });
  }
  const o3 = n7.get_encoding_result();
  if (0 !== o3.error.error_code)
    throw new s("knowledge-graph:query-encoding-failed", "Attempting to encode the query failed", { errorCode: o3.error.error_code, errorMessage: o3.error.error_message });
  return structuredClone(o3.get_byte_buffer());
}
async function W(e6) {
  var _a;
  const t10 = await r(), a5 = new t10.GraphSearchRequestEncoder();
  if (a5.deleteLater(), a5.search_query = e6.searchQuery, a5.type_category_filter = t10.esriNamedTypeCategory[e6.typeCategoryFilter], true === e6.returnSearchContext && (a5.return_search_context = e6.returnSearchContext), null != e6.start && e6.start > 0 && (a5.start_index = e6.start), null != e6.num && (a5.max_num_results = e6.num), null != e6.idsFilter && Array.isArray(e6.idsFilter) && e6.idsFilter.length > 0)
    try {
      a5.set_ids_filter(a2(e6.idsFilter, t10));
    } catch (o3) {
      throw new s("knowledge-graph:ids-format-error", "Attempting to set ids filter failed.  This is usually caused by an incorrectly formatted UUID string", { error: o3 });
    }
  (_a = e6.namedTypesFilter) == null ? void 0 : _a.forEach((e7) => {
    a5.add_named_type_filter(e7);
  });
  try {
    a5.encode();
  } catch (o3) {
    throw new s("knowledge-graph:search-encoding-failed", "Attempting to encode the search failed", { error: o3 });
  }
  const n7 = a5.get_encoding_result();
  if (0 !== n7.error.error_code)
    throw new s("knowledge-graph:search-encoding-failed", "Attempting to get encoding result from the query failed", { errorCode: n7.error.error_code, errorMessage: n7.error.error_message });
  return structuredClone(n7.get_byte_buffer());
}
async function F(e6, r4) {
  return U(e6, { responseType: "native-request-init", method: "post", query: { f: "pbf", ...r4 == null ? void 0 : r4.query }, body: "x", headers: { "Content-Type": "application/octet-stream" }, signal: r4 == null ? void 0 : r4.signal, timeout: r4 == null ? void 0 : r4.timeout });
}
async function P(e6) {
  const t10 = e6.headers.get("content-type");
  if (t10 == null ? void 0 : t10.includes("application/x-protobuf")) {
    const t11 = await e6.arrayBuffer(), r4 = new (await r()).GraphApplyEditsDecoder();
    return r4.deleteLater(), r4.decode(new Uint8Array(t11)), e5(r4);
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: t10, data: e6.text() });
}
function L(e6, t10, a5, n7 = new f2({ wkid: f2.WGS84.wkid })) {
  e6.push_buffer(new Uint8Array(t10));
  const o3 = [];
  let i7 = 0;
  for (; e6.next_row(); ) {
    i7 || (i7 = e6.get_header_keys().size());
    const t11 = new Array(i7);
    for (let r4 = 0; r4 < i7; r4++) {
      const o4 = e6.get_value(r4);
      t11[r4] = E2(o4, a5, n7);
    }
    o3.push(t11);
  }
  if (e6.has_error())
    throw new s("knowledge-graph:stream-decoding-error", "One or more result rows were not successfully decoded", { errorCode: e6.error.error_code, errorMessage: e6.error.error_message });
  return o3;
}
async function I2(e6, t10, n7) {
  var _a;
  const o3 = e6.headers.get("content-type");
  if (e6.headers.get("content-length") && n.getLogger("esri.rest.knowledgeGraph.knowledgeGraphService").warnOnce("Found `Content-Length` header when expecting a streaming HTTP response! Please investigate whether all intermediate HTTP proxies and/or load balancers are configured such that they don't forcefully buffer the entire response before returning it to the client. A valid HTTP streaming response should use Chunked Transfer Encoding and not have a Content Length defined."), o3 == null ? void 0 : o3.includes("application/x-protobuf")) {
    const a5 = (_a = e6.body) == null ? void 0 : _a.getReader(), o4 = new (await r()).GraphQueryDecoder();
    return o4.deleteLater(), new ReadableStream({ async start(e7) {
      try {
        return i7();
      } catch (d2) {
        a5 == null ? void 0 : a5.releaseLock(), e7.error(new s("knowledge-graph:stream-decoding-error", "The server returned a valid response, but there was an error decoding the response stream", { error: d2 })), e7.close();
      }
      function i7() {
        return a5 == null ? void 0 : a5.read().then(({ done: d2, value: s8 }) => {
          if (d2) {
            let t11;
            if (o4.has_error() && (t11 = new s("knowledge-graph:stream-decoding-error", "One or more result rows were not successfully decoded", { errorCode: o4.error.error_code, errorMessage: o4.error.error_message })), a5.releaseLock(), t11)
              throw e7.error(t11), t11;
            return void e7.close();
          }
          const p7 = L(o4, s8, t10, n7);
          return p7.length > 0 && e7.enqueue(p7), i7();
        });
      }
    } });
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: o3, data: e6.text() });
}
async function z2(e6) {
  var _a;
  const a5 = `${e6.url}/dataModel/queryDataModel`, n7 = await U(a5, { responseType: "array-buffer", query: { f: "pbf" } }), o3 = (_a = n7.getHeader) == null ? void 0 : _a.call(n7, "content-type"), i7 = n7.data;
  if (o3 == null ? void 0 : o3.includes("application/x-protobuf")) {
    const e7 = (await r()).decode_data_model_from_protocol_buffer(new Uint8Array(i7));
    if (!e7)
      throw new s("knowledge-graph:data-model-decode-failure", "The server responded to the data model query, but the response failed to be decoded.  This typically occurs when the Knowledge JS API (4.26 or later) is used with an unsupported backend (11.0 or earlier)");
    return _(e7);
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: o3, data: n7.data });
}

export {
  t5 as t,
  p2 as p,
  b2 as b,
  v2 as v,
  S2 as S,
  G,
  x3 as x,
  E3 as E,
  T3 as T,
  q,
  A2 as A,
  Q
};
//# sourceMappingURL=chunk-GRZEAINR.js.map
