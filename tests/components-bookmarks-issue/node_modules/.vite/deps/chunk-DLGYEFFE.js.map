{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/components/src/components/table-header/resources.ts", "../../@esri/calcite-components/dist/components/src/components/table-header/table-header.scss?tag=calcite-table-header&encapsulation=shadow", "../../@esri/calcite-components/dist/components/src/components/table-header/table-header.tsx"],
  "sourcesContent": ["export const CSS = {\n  numberCell: \"number-cell\",\n  selectionCell: \"selection-cell\",\n  bodyRow: \"body-row\",\n  footerRow: \"footer-row\",\n  heading: \"heading\",\n  description: \"description\",\n  multipleSelectionCell: \"cell--multiple-selection\",\n  assistiveText: \"assistive-text\",\n  active: \"active\",\n  selectedCell: \"selected-cell\",\n  lastCell: \"last-cell\",\n  staticCell: \"static-cell\",\n};\n", "/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-table-header-background: Specifies the background color of the component.\n * @prop --calcite-table-header-border-color: Specifies the border color of the component.\n */\n\n:host {\n  --calcite-internal-table-header-background: var(--calcite-table-header-background, var(--calcite-color-foreground-2));\n  --calcite-internal-table-header-border-color: var(--calcite-table-border-color, var(--calcite-color-border-3));\n  @apply contents;\n}\n\n:host([alignment=\"center\"]) th {\n  @apply text-center;\n}\n\n:host([alignment=\"end\"]) th {\n  @apply text-end;\n}\n\n.assistive-text {\n  @apply sr-only;\n}\n\nth {\n  @apply text-color-1 text-start font-medium align-top whitespace-normal;\n  font-size: var(--calcite-internal-table-cell-font-size);\n  border-inline-end: 1px solid var(--calcite-internal-table-header-border-color);\n  border-block-end: 1px solid var(--calcite-internal-table-header-border-color);\n  padding-block: calc(var(--calcite-internal-table-cell-padding) * 1.5);\n  padding-inline: var(--calcite-internal-table-cell-padding);\n  background-color: var(--calcite-internal-table-header-background);\n\n  &:not(.static-cell) {\n    @apply focus-base;\n    &:not(.static-cell):focus-within {\n      @apply focus-inset;\n    }\n  }\n}\n\nth.last-cell {\n  border-inline-end: 0;\n}\n\nth.body-row,\nth.footer-row {\n  @apply align-middle;\n  border-block-end: 0;\n}\n\nth.footer-row {\n  border-block-start: 1px solid var(--calcite-internal-table-header-border-color);\n}\n\n.cell--multiple-selection {\n  @apply cursor-pointer align-middle text-color-3;\n}\n\n.selected-cell:not(.number-cell):not(.footer-cell) {\n  --calcite-internal-table-header-background: var(--calcite-color-foreground-current);\n}\n\n.number-cell,\n.selection-cell {\n  @apply text-color-2;\n  inline-size: 2rem;\n  min-inline-size: 2rem;\n}\n\n.selection-cell calcite-icon.active {\n  color: var(--calcite-color-brand);\n}\n.number-cell calcite-icon,\n.selection-cell calcite-icon {\n  @apply ms-auto me-auto align-middle;\n}\n\n.heading {\n  @apply text-color-1;\n}\n\n.description {\n  @apply text-color-3;\n  font-size: var(--calcite-internal-table-cell-font-size-secondary);\n}\n", "import { Component, Element, h, Host, Method, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { Alignment, Scale, SelectionMode } from \"../interfaces\";\nimport { TableHeaderMessages } from \"./assets/table-header/t9n\";\nimport { CSS } from \"./resources\";\nimport { RowType, TableInteractionMode } from \"../table/interfaces\";\nimport { getIconScale } from \"../../utils/component\";\n\n@Component({\n  tag: \"calcite-table-header\",\n  styleUrl: \"table-header.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TableHeader implements LocalizedComponent, LoadableComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment = \"start\";\n\n  /** Specifies the number of columns the component should span. */\n  @Prop({ reflect: true }) colSpan: number;\n\n  /** A description to display beneath heading content. */\n  @Prop({ reflect: true }) description: string;\n\n  /** A heading to display above description content. */\n  @Prop({ reflect: true }) heading: string;\n\n  /** Specifies the number of rows the component should span. */\n  @Prop({ reflect: true }) rowSpan: number;\n\n  /** @internal */\n  @Prop() interactionMode: TableInteractionMode = \"interactive\";\n\n  /** @internal */\n  @Prop() lastCell: boolean;\n\n  /** @internal */\n  @Prop() numberCell = false;\n\n  /** @internal */\n  @Prop() parentRowIsSelected: boolean;\n\n  /** @internal */\n  @Prop() parentRowType: RowType;\n\n  /** @internal */\n  @Prop() positionInRow: number;\n\n  /** @internal */\n  @Prop() scale: Scale;\n\n  /** @internal */\n  @Prop() selectedRowCount: number;\n\n  /** @internal */\n  @Prop() selectedRowCountLocalized: string;\n\n  @Watch(\"selectedRowCount\")\n  @Watch(\"selectedRowCountLocalized\")\n  onSelectedChange(): void {\n    this.updateScreenReaderText();\n  }\n\n  /** @internal */\n  @Prop() selectionCell = false;\n\n  /** @internal */\n  @Prop() selectionMode: SelectionMode;\n\n  /** @internal */\n  @Prop() bodyRowCount: number;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TableHeaderMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TableHeaderMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    this.updateScreenReaderText();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n  @Element() el: HTMLCalciteTableHeaderElement;\n\n  @State() defaultMessages: TableHeaderMessages;\n\n  @State() focused = false;\n\n  @State() screenReaderText = \"\";\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  private containerEl: HTMLTableCellElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.containerEl.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private updateScreenReaderText(): void {\n    let text = \"\";\n    const sharedText = `${this.selectedRowCountLocalized} ${this.messages?.selected}`;\n    if (this.numberCell) {\n      text = this.messages?.rowNumber;\n    } else if (this.selectionMode === \"single\") {\n      text = `${this.messages?.selectionColumn}. ${sharedText}`;\n    } else if (this.bodyRowCount === this.selectedRowCount) {\n      text = `${this.messages?.selectionColumn}. ${this.messages?.all} ${sharedText} ${this.messages?.keyboardDeselectAll}`;\n    } else {\n      text = `${this.messages?.selectionColumn}. ${sharedText} ${this.messages?.keyboardSelectAll}`;\n    }\n    this.screenReaderText = text;\n  }\n\n  private onContainerBlur = (): void => {\n    this.focused = false;\n  };\n\n  private onContainerFocus = (): void => {\n    this.focused = true;\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const scope = this.rowSpan\n      ? \"rowgroup\"\n      : this.colSpan\n        ? \"colgroup\"\n        : this.parentRowType === \"body\"\n          ? \"row\"\n          : \"col\";\n\n    const allSelected = this.selectedRowCount === this.bodyRowCount;\n    const selectionIcon = allSelected ? \"check-square-f\" : \"check-square\";\n    const staticCell = this.interactionMode === \"static\" && !this.selectionCell;\n    return (\n      <Host>\n        <th\n          aria-colindex={this.parentRowType === \"head\" ? this.positionInRow : undefined}\n          class={{\n            [CSS.bodyRow]: this.parentRowType === \"body\",\n            [CSS.footerRow]: this.parentRowType === \"foot\",\n            [CSS.numberCell]: this.numberCell,\n            [CSS.selectionCell]: this.selectionCell,\n            [CSS.selectedCell]: this.parentRowIsSelected,\n            [CSS.multipleSelectionCell]: this.selectionMode === \"multiple\",\n            [CSS.staticCell]: staticCell,\n            [CSS.lastCell]: this.lastCell && (!this.rowSpan || (this.colSpan && !!this.rowSpan)),\n          }}\n          colSpan={this.colSpan}\n          onBlur={this.onContainerBlur}\n          onFocus={this.onContainerFocus}\n          role={this.parentRowType === \"head\" ? \"columnheader\" : \"rowheader\"}\n          rowSpan={this.rowSpan}\n          scope={scope}\n          tabIndex={this.selectionCell ? 0 : staticCell ? -1 : 0}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(el) => (this.containerEl = el)}\n        >\n          {this.heading && <div class={CSS.heading}>{this.heading}</div>}\n          {this.description && <div class={CSS.description}>{this.description}</div>}\n          {this.selectionCell && this.selectionMode === \"multiple\" && (\n            <calcite-icon\n              class={{ [CSS.active]: allSelected }}\n              icon={selectionIcon}\n              scale={getIconScale(this.scale)}\n            />\n          )}\n          <span\n            aria-hidden={true}\n            aria-live={this.focused ? \"polite\" : \"off\"}\n            class={CSS.assistiveText}\n          >\n            {(this.selectionCell || this.numberCell) && this.screenReaderText}\n          </span>\n        </th>\n      </Host>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["TableHeader"]
}
