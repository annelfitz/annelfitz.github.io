import {
  e as e5
} from "./chunk-AVQM6UNY.js";
import {
  B
} from "./chunk-7IFMSG3H.js";
import {
  F,
  S as S2,
  T,
  U,
  k,
  q,
  x as x2
} from "./chunk-NIRB3OB6.js";
import {
  e as e4
} from "./chunk-HWBFFWYY.js";
import {
  t
} from "./chunk-UANQJYHL.js";
import {
  f as f2
} from "./chunk-OMRW2J7M.js";
import {
  e as e3
} from "./chunk-7KPPNEIJ.js";
import {
  b
} from "./chunk-G4YIJOSP.js";
import {
  s as s2
} from "./chunk-PMQ5HDZI.js";
import {
  p
} from "./chunk-QD3CP3I4.js";
import {
  n as n2
} from "./chunk-CXNX736Z.js";
import {
  D,
  e2,
  r
} from "./chunk-RGCWZ2KZ.js";
import {
  i,
  n
} from "./chunk-5VMSFOCB.js";
import {
  g,
  v
} from "./chunk-2SDMYJDE.js";
import {
  u as u2
} from "./chunk-C62RZQQX.js";
import {
  E2 as E,
  R2,
  x
} from "./chunk-UWQ3OYA5.js";
import {
  A as A2,
  d
} from "./chunk-Z4Y53NDM.js";
import {
  M,
  R,
  S,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  A,
  f2 as f,
  s
} from "./chunk-JGDJR5EV.js";
import {
  u
} from "./chunk-QHK5ZYFW.js";

// node_modules/@arcgis/core/views/interactive/tooltip/css.js
var e6 = "esri-tooltip";
var t2 = `${e6}-content`;
var n3 = `${e6}-content--input`;
var o = `${e6}-content__header`;
var a2 = `${e6}-content__header__spacer`;
var _ = `${e6}-content__header__actions`;
var c = `${e6}-draw-header-actions`;
var r2 = `${e6}-table`;
var $ = `${e6}-help-message`;

// node_modules/@arcgis/core/views/interactive/tooltip/components/TooltipField.js
var p2 = `${e6}-field`;
var d2 = { base: p2, inputMode: `${p2}--input`, title: `${p2}__title`, value: `${p2}__value` };
var c2 = class extends D {
  constructor() {
    super(...arguments), this.hidden = false, this.mode = "feedback";
  }
  render() {
    return n("div", { class: this.classes({ [d2.base]: true, [d2.inputMode]: "input" === this.mode }) }, n("div", { class: d2.title }, this.title), n("div", { class: d2.value }, this.value));
  }
};
e([y()], c2.prototype, "hidden", void 0), e([y()], c2.prototype, "mode", void 0), e([y()], c2.prototype, "title", void 0), e([y()], c2.prototype, "value", void 0), c2 = e([a("esri.views.interactive.tooltip.components.TooltipField")], c2);

// node_modules/@arcgis/core/views/interactive/tooltip/components/ValueByValue.js
var p3 = { base: `${e6}-value-by-value` };
var a3 = class extends D {
  constructor() {
    super(...arguments), this.divider = "Ã—";
  }
  render() {
    return n("div", { class: p3.base }, n("span", null, this.left), n("span", null, this.divider), n("span", null, this.right));
  }
};
e([y()], a3.prototype, "left", void 0), e([y()], a3.prototype, "divider", void 0), e([y()], a3.prototype, "right", void 0), a3 = e([a("esri.views.interactive.tooltip.components.ValueByValue")], a3);

// node_modules/@arcgis/core/views/interactive/tooltip/fields/parsingAndFormattingUtils.js
var s3 = 1;
var m = 6;
function g2(t3, u5) {
  return { angleRelative: p4, direction: f3, directionRelative: h, directionRelativeBilateral: v2, decimalDegrees: D2, area: (n13, r4) => k(t3, n13, r4 ?? u5.area), length: (e7, r4, i6) => q(t3, e7, r4 ?? u5.length, i6), lengthRelative: (e7, n13) => x2(t3, e7, n13 ?? u5.length), totalLength: (e7, r4) => q(t3, e7, r4 ?? u5.length), verticalLength: (e7, n13) => F(t3, e7, n13 ?? u5.length), verticalLengthRelative: (e7, n13) => S2(t3, e7, n13 ?? u5.verticalLength), percentage: j, scalar: R3, scale: x3 };
}
function p4(t3) {
  return u2(t3, { signDisplay: "exceptZero", ...L(s3) });
}
function f3(t3) {
  return T(t3, t3.rotationType, s3);
}
function h(t3) {
  const e7 = B(t3);
  return u2(e7, { style: "unit", unitDisplay: "narrow", unit: "degree", signDisplay: e7 > 0 ? "never" : "exceptZero", ...L(s3) });
}
function v2(t3) {
  return T(t3, t3.rotationType, s3);
}
var y2 = (t3) => s2(t3, "degrees");
function D2(t3) {
  return T(y2(t3), "geographic", m);
}
function d3(t3) {
  return R3(y2(t3), m);
}
function j(t3) {
  return u2(t3.value, { style: "percent" });
}
function x3(t3) {
  return u2(t3, { style: "percent", maximumFractionDigits: 0 });
}
function R3(t3, e7) {
  return u2(t3.value, L(e7));
}
function F2(e7) {
  return (n13, r4) => {
    const i6 = null != n13 ? p(n13) : null;
    return null != i6 ? e7(i6, r4) : null;
  };
}
function L(t3) {
  return { minimumFractionDigits: t3, maximumFractionDigits: t3 };
}

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContent.js
var T2 = class extends D {
  constructor() {
    super(...arguments), this._focusAbortController = new AbortController(), this._transition = null, this._mode = "feedback", this._getFormatters = t(g2), this._onDiscard = () => {
      this.exitInputMode();
    }, this._onCommit = (t3, e7) => {
      if ("commit-and-exit" === e7)
        return void this.exitInputMode();
      const o2 = this._getFocusableElements(), i6 = o2.length, s5 = o2.indexOf(t3);
      if (-1 === s5)
        return void this.exitInputMode();
      const n13 = ((s5 + ("commit-and-next" === e7 ? 1 : -1)) % i6 + i6) % i6;
      M2(o2.at(n13));
    }, this._handleTab = (t3) => {
      if (t3.code !== f2.next)
        return;
      const e7 = this._getFocusableElements(), o2 = e7.at(0), i6 = e7.at(-1);
      o2 && i6 && (t3.shiftKey ? document.activeElement === o2 && (t3.preventDefault(), M2(i6)) : document.activeElement === i6 && (t3.preventDefault(), M2(o2)));
    };
  }
  get mode() {
    return this._mode;
  }
  get _displayUnits() {
    const t3 = e4(this.tooltip.view);
    return { length: t3, verticalLength: t3, area: t3, angle: "degrees" };
  }
  get _inputUnitInfos() {
    const t3 = this._messagesUnits, e7 = (e8) => ({ unit: e8, abbreviation: b(t3, e8, "abbr") }), o2 = e4(this.tooltip.view), i6 = e7(E(o2)), s5 = e7(R2(o2)), n13 = e7(x(o2)), r4 = e7("degrees");
    return { length: i6, lengthRelative: i6, verticalLength: s5, verticalLengthRelative: s5, area: n13, direction: r4, orientation: r4, rotation: r4, longitudeLatitude: r4 };
  }
  get _formatters() {
    return this._getFormatters(this._messagesUnits, this._displayUnits);
  }
  get fieldContext() {
    return { formatters: this._formatters, inputUnitInfos: this._inputUnitInfos, messages: this._messagesTooltip, sketchOptions: this.info.sketchOptions, onCommit: this._onCommit, onDiscard: this._onDiscard };
  }
  render() {
    const t3 = D3(this._renderContent()), { visibleElements: e7 } = this.info.sketchOptions.tooltips, o2 = e7.helpMessage ? this._getHelpMessage() : null, i6 = t3.length > 0, s5 = i6 || !!o2, n13 = "input" === this.mode, r4 = D3(this._renderActions());
    return n("div", { class: g(t2, n13 && n3), onkeydown: this._handleTab }, n13 && s5 && e7.header ? n("div", { class: o, key: "header" }, n("calcite-button", { appearance: "transparent", iconFlipRtl: "both", iconStart: "chevron-left", key: "discard-button", kind: "neutral", onclick: this._onDiscard, scale: "s", tabIndex: -1 }), r4.length > 0 ? n(i, null, n("div", { class: a2, key: "spacer" }), n("div", { class: _, key: "actions" }, r4)) : null) : null, i6 ? n("div", { class: r2, key: "content" }, ...t3) : null, o2 ? n("div", { class: $, key: "help-message" }, o2) : null);
  }
  _renderActions() {
    return null;
  }
  loadDependencies() {
    return r({ button: () => import("./calcite-button-V4T5NPWY.js"), icon: () => import("./calcite-icon-25XWA6H7.js"), input: () => import("./calcite-input-CHG5BNQ7.js") });
  }
  async enterInputMode(t3) {
    try {
      await this._transitionTo("input"), await this._focusField(t3);
    } catch (e7) {
      f(e7);
    }
  }
  async exitInputMode() {
    try {
      await this._transitionTo("feedback"), document.querySelector(".esri-view-surface").focus();
    } catch (t3) {
      f(t3);
    }
  }
  _getHelpMessage(t3) {
    var _a, _b, _c;
    const { info: e7 } = this, { helpMessage: o2, viewType: i6 } = e7, s5 = t3 ?? o2, n13 = "3d" === i6 ? "helpMessages3d" : "helpMessages2d";
    return s5 ? (_c = (_b = (_a = this._messagesTooltip) == null ? void 0 : _a.sketch) == null ? void 0 : _b[n13]) == null ? void 0 : _c[s5] : void 0;
  }
  async _focusField(t3) {
    var _a;
    (_a = this._focusAbortController) == null ? void 0 : _a.abort(), this._focusAbortController = new AbortController();
    const { signal: e7 } = this._focusAbortController;
    await this._waitForInputs(), s(e7);
    const o2 = this._getFocusableInputs();
    M2(t3 ? o2.find((e8) => e8.getAttribute("data-field-name") === t3) : o2.at(0));
  }
  async _transitionTo(t3) {
    var _a, _b;
    if (this._mode === t3)
      return;
    const o2 = () => {
      this._mode = t3, this.tooltip.positionMode = "input" === t3 ? "fixed" : "follow-cursor";
    };
    if (!((_a = this.domNode) == null ? void 0 : _a.firstChild) || !document.startViewTransition || e3())
      return void o2();
    this.autoRenderingEnabled = false, (_b = this._transition) == null ? void 0 : _b.skipTransition();
    const i6 = this._transition = document.startViewTransition(() => {
      if (!this.destroyed)
        return this.autoRenderingEnabled = true, o2(), this.renderNow(), M();
    });
    try {
      await this._transition.finished;
    } finally {
      i6 === this._transition && (this._transition = null);
    }
  }
  async _waitForInputs() {
    const t3 = Date.now(), e7 = () => {
      var _a;
      return Array.from(((_a = this.domNode) == null ? void 0 : _a.querySelectorAll("calcite-input")) ?? []);
    };
    for (; 0 === e7().length; )
      if (await A(E2), Date.now() - t3 > S3)
        return;
  }
  _getFocusableInputs() {
    var _a;
    return Array.from(((_a = this.domNode) == null ? void 0 : _a.querySelectorAll("calcite-input:not([read-only]):not([disabled])")) ?? []);
  }
  _getFocusableElements() {
    var _a;
    const t3 = (_a = this.domNode) == null ? void 0 : _a.querySelector(`.${c}`);
    return [...Array.from((t3 == null ? void 0 : t3.querySelectorAll("calcite-action:not([disabled])")) ?? []), ...this._getFocusableInputs()];
  }
};
function M2(t3) {
  t3 == null ? void 0 : t3.setFocus();
}
function D3(t3) {
  return (Array.isArray(t3) ? t3 : [t3]).flat(10).filter((t4) => !!t4);
}
e([e2("esri/core/t9n/Units"), y()], T2.prototype, "_messagesUnits", void 0), e([e2("esri/views/interactive/tooltip/t9n/Tooltip"), y()], T2.prototype, "_messagesTooltip", void 0), e([y()], T2.prototype, "info", void 0), e([y()], T2.prototype, "tooltip", void 0), e([y()], T2.prototype, "_mode", void 0), e([y()], T2.prototype, "mode", null), e([y()], T2.prototype, "_displayUnits", null), e([y()], T2.prototype, "_inputUnitInfos", null), e([y()], T2.prototype, "_formatters", null), e([y()], T2.prototype, "fieldContext", null), T2 = e([a("esri.views.interactive.tooltip.content.TooltipContent")], T2);
var E2 = 50;
var S3 = 1e3;

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentDrawCircle.js
var n4 = class extends T2 {
  _renderContent() {
    const { area: t3, radius: e7, xSize: s5, ySize: n13, visibleElements: a5 } = this.info, p7 = this._messagesTooltip.sketch, m4 = this._formatters;
    return n(i, null, a5.radius && null != e7 ? n(c2, { title: p7.radius, value: m4.length(e7) }) : null, a5.size && null != s5 && null != n13 ? n(c2, { title: p7.size, value: n(a3, { left: m4.length(s5), right: m4.length(n13) }) }) : null, a5.area ? n(c2, { title: p7.area, value: m4.area(t3) }) : null);
  }
};
n4 = e([a("esri.views.interactive.tooltip.content.TooltipContentDrawCircle")], n4);

// node_modules/@arcgis/core/views/interactive/tooltip/components/TooltipEditableField.js
var u3 = `${e6}-editable-field`;
var p5 = { base: u3, inputMode: `${u3}--input`, locked: `${u3}--locked`, title: `${u3}__title`, titleContent: `${u3}__title__content`, value: `${u3}__value`, valueContent: `${u3}__value__content`, valueContentReadOnly: `${u3}__value__content--read-only`, input: `${u3}__input`, inputSuffix: `${u3}__input-suffix`, button: `${u3}__button` };
var d4 = class extends D {
  constructor() {
    super(...arguments), this._input = null, this._selectText = () => {
      const t3 = () => {
        var _a;
        this._input === document.activeElement && ((_a = this._input) == null ? void 0 : _a.selectText());
      };
      t3(), R().then(t3);
    }, this._onKeyDown = (t3) => {
      t3.key === f2.discard && this._discard();
    }, this._onInputKeyDown = (t3) => {
      switch (t3.key) {
        case f2.commit:
          return this._commit({ type: "commit-and-exit", allowLockingCurrentValue: true });
        case f2.next:
          return t3.preventDefault(), t3.stopPropagation(), this._commit({ type: t3.shiftKey ? "commit-and-previous" : "commit-and-next", allowLockingCurrentValue: false });
      }
    }, this._onInput = (t3) => {
      this.field.inputValue = t3.target.value;
    }, this._onLockClick = () => {
      const { field: t3 } = this;
      t3.locked ? t3.unlock() : this._lock();
    };
  }
  initialize() {
    this.addHandles(d(() => this._rawDisplayValue, () => {
      const { committed: t3, inputValue: e7 } = this.field;
      t3 || e7 || this._input !== document.activeElement || this._selectText();
    }));
  }
  loadDependencies() {
    return r({ action: () => import("./calcite-action-P2CTRNG2.js"), icon: () => import("./calcite-icon-25XWA6H7.js"), input: () => import("./calcite-input-CHG5BNQ7.js") });
  }
  render() {
    const { mode: t3, field: e7 } = this, i6 = "input" === t3, { locked: o2 } = e7;
    return n("div", { class: this.classes({ [p5.base]: true, [p5.inputMode]: "input" === t3, [p5.locked]: o2 }) }, n("div", { class: p5.title, key: "title" }, n("div", { class: p5.titleContent, key: "title-content" }, this._title, o2 && !i6 ? n("calcite-icon", { icon: "lock", key: "icon", scale: "s" }) : null)), n("div", { class: p5.value, key: "value" }, i6 ? this._renderInputModeValue() : this._renderFeedbackModeValue()));
  }
  get _formattedValue() {
    const { context: t3, field: e7 } = this, { actual: i6, committed: o2, format: n13 } = e7;
    return null != o2 ? n13(o2, t3) : null != i6 ? n13(i6, t3) : m2;
  }
  get _rawDisplayValue() {
    const { field: t3 } = this, { actual: e7, inputValue: i6, committed: o2 } = t3;
    if (null != i6)
      return i6;
    const { context: n13 } = this;
    return null != o2 ? t3.formatForInputMode(o2, n13) : null != e7 ? t3.formatForInputMode(e7, n13) : null;
  }
  get _suffix() {
    const { suffix: t3 } = this.field;
    return null == t3 ? null : "string" == typeof t3 ? t3 : t3(this.context);
  }
  get _title() {
    const { title: t3 } = this.field;
    return "string" == typeof t3 ? t3 : t3(this.context);
  }
  _renderFeedbackModeValue() {
    return n("span", { key: "value-feedback" }, this._formattedValue);
  }
  _renderInputModeValue() {
    return this.field.readOnly ? this._renderValueReadOnly() : this._renderValueWritable();
  }
  _renderValueReadOnly() {
    return n("span", { class: p5.valueContentReadOnly, key: "value-readonly" }, this._formattedValue);
  }
  _renderValueWritable() {
    var _a;
    const { locked: t3, name: e7 } = this.field, i6 = ((_a = this.context) == null ? void 0 : _a.messages.sketch) ?? {}, o2 = t3 ? i6.unlockConstraint : i6.lockConstraint;
    return n("div", { class: p5.valueContent, key: "value-writable", onkeydown: this._onKeyDown }, n("calcite-input", { afterCreate: (t4) => {
      this._input = t4;
    }, class: p5.input, "data-field-name": e7, onfocus: this._selectText, onkeydown: this._onInputKeyDown, scale: "s", type: "text", value: this._rawDisplayValue ?? m2, onCalciteInputInput: this._onInput }), n("div", { class: p5.inputSuffix, key: "suffix" }, this._suffix), n("calcite-action", { alignment: "center", appearance: "transparent", class: p5.button, compact: true, icon: t3 ? "lock" : "unlock", label: o2, onclick: this._onLockClick, scale: "s", tabIndex: -1, text: "", title: o2 }));
  }
  _commit({ type: t3, allowLockingCurrentValue: e7 }) {
    const { _input: i6, field: o2 } = this;
    if (!i6)
      return;
    const { locked: n13, inputValue: s5 } = o2;
    n13 && "" === s5 ? o2.unlock() : (e7 && !n13 || null != s5) && this._lock(), this.context.onCommit(i6, t3);
  }
  _discard() {
    this._input && (this.field.inputValue = null, this.context.onDiscard(this._input));
  }
  _lock() {
    const { field: t3 } = this;
    t3.lock(t3.parse(t3.inputValue, this.context));
  }
};
e([y()], d4.prototype, "field", void 0), e([y()], d4.prototype, "context", void 0), e([y()], d4.prototype, "mode", void 0), e([y()], d4.prototype, "_formattedValue", null), e([y()], d4.prototype, "_input", void 0), e([y()], d4.prototype, "_rawDisplayValue", null), e([y()], d4.prototype, "_suffix", null), e([y()], d4.prototype, "_title", null), d4 = e([a("esri.views.interactive.tooltip.components.TooltipEditableField")], d4);
var m2 = "â€”";

// node_modules/@arcgis/core/views/interactive/tooltip/content/Fields.js
function i2(i6) {
  const l6 = i6.fields.filter((t3) => true === (t3 == null ? void 0 : t3.visible));
  return 0 === l6.length ? null : n(i, null, l6.map((e7) => n(d4, { context: i6.context, field: e7, key: e7.id, mode: i6.mode })));
}

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentDrawMesh.js
var i3 = class extends T2 {
  _renderContent() {
    const { fieldContext: o2, info: t3, mode: r4 } = this, { elevation: i6, visibleElements: n13 } = t3;
    return n(i2, { context: o2, fields: [n13.elevation ? i6 : void 0], mode: r4 });
  }
};
i3 = e([a("esri.views.interactive.tooltip.content.TooltipContentDrawMesh")], i3);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentDrawPoint.js
var s4 = class extends T2 {
  _renderContent() {
    const { fieldContext: o2, info: t3, mode: r4 } = this, { elevation: s5, visibleElements: n13 } = t3;
    return n(i2, { context: o2, fields: [n13.coordinate ? t3.effectiveX : void 0, n13.coordinate ? t3.effectiveY : void 0, n13.elevation ? s5 : void 0], mode: r4 });
  }
};
s4 = e([a("esri.views.interactive.tooltip.content.TooltipContentDrawPoint")], s4);

// node_modules/@arcgis/core/views/interactive/tooltip/components/DrawHeaderActions.js
var p6 = class extends D {
  constructor(t3) {
    super(t3);
  }
  render() {
    const { visibleElements: t3 } = this.sketchOptions.tooltips;
    return n("div", { class: c }, t3.direction ? n(a4, { messages: this.messages, sketchOptions: this.sketchOptions }) : null);
  }
  loadDependencies() {
    return r({ action: () => import("./calcite-action-P2CTRNG2.js"), dropdown: () => import("./calcite-dropdown-4KYIVSVI.js"), "dropdown-item": () => import("./calcite-dropdown-item-J3TR6MXT.js"), "dropdown-group": () => import("./calcite-dropdown-group-P5PY6RML.js") });
  }
};
function a4(t3) {
  var _a, _b, _c, _d;
  const { directionMode: e7 } = t3.sketchOptions.values, o2 = (_a = t3.messages) == null ? void 0 : _a.sketch, s5 = (_b = o2 == null ? void 0 : o2.directionModeSelect) == null ? void 0 : _b.title, r4 = "absolute", c3 = "relative";
  return n("calcite-dropdown", { key: "direction-mode", placement: "bottom-end", scale: "s", widthScale: "s", onCalciteDropdownSelect: (e8) => {
    var _a2, _b2;
    const o3 = (_b2 = (_a2 = e8.target.selectedItems) == null ? void 0 : _a2[0]) == null ? void 0 : _b2.getAttribute("data-mode");
    t3.sketchOptions.values.directionMode = o3 ?? "absolute";
  } }, n("calcite-action", { alignment: "end", appearance: "transparent", icon: e5[e7], label: s5, scale: "s", slot: "trigger", text: "", textEnabled: false, title: s5 }), n("calcite-dropdown-group", { selectionMode: "single" }, n("calcite-dropdown-item", { "data-mode": c3, "data-testid": "tooltip-direction-mode-relative", iconStart: e5.relative, key: "relative", selected: e7 === c3 }, (_c = o2 == null ? void 0 : o2.directionModeSelect) == null ? void 0 : _c.relative), n("calcite-dropdown-item", { "data-mode": r4, "data-testid": "tooltip-direction-mode-absolute", iconStart: e5.absolute, key: "absolute", selected: e7 === r4 }, (_d = o2 == null ? void 0 : o2.directionModeSelect) == null ? void 0 : _d.absolute)));
}
e([e2("esri/views/interactive/tooltip/t9n/Tooltip"), y()], p6.prototype, "messages", void 0), e([y()], p6.prototype, "sketchOptions", void 0), p6 = e([a("esri.views.interactive.tooltip.components.DrawHeaderActions")], p6);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentDrawPolygon.js
var n5 = class extends T2 {
  _renderContent() {
    const { fieldContext: o2, info: t3, mode: e7 } = this, { area: s5, distance: n13, elevation: c3, direction: p7, visibleElements: d6 } = t3;
    return n(i2, { context: o2, fields: [d6.direction ? p7 : void 0, d6.distance ? n13 : void 0, d6.elevation ? c3 : void 0, d6.area ? s5 : void 0], mode: e7 });
  }
  _renderActions() {
    return n(p6, { sketchOptions: this.info.sketchOptions });
  }
};
n5 = e([a("esri.views.interactive.tooltip.content.TooltipContentDrawPolygon")], n5);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentDrawPolyline.js
var n6 = class extends T2 {
  _renderContent() {
    const { fieldContext: o2, info: t3, mode: e7 } = this, { distance: r4, elevation: n13, direction: c3, totalLength: p7, visibleElements: d6 } = t3;
    return n(i2, { context: o2, fields: [d6.direction ? c3 : void 0, d6.distance ? r4 : void 0, d6.elevation ? n13 : void 0, d6.totalLength ? p7 : void 0], mode: e7 });
  }
  _renderActions() {
    return n(p6, { sketchOptions: this.info.sketchOptions });
  }
};
n6 = e([a("esri.views.interactive.tooltip.content.TooltipContentDrawPolyline")], n6);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentDrawRectangle.js
var n7 = class extends T2 {
  _renderContent() {
    const { area: t3, xSize: e7, ySize: s5, visibleElements: n13 } = this.info, a5 = this._messagesTooltip.sketch, p7 = this._formatters;
    return n(i, null, n13.size && null != e7 && null != s5 ? n(c2, { title: a5.size, value: n(a3, { left: p7.length(e7), right: p7.length(s5) }) }) : null, n13.area ? n(c2, { title: a5.area, value: p7.area(t3) }) : null);
  }
};
n7 = e([a("esri.views.interactive.tooltip.content.TooltipContentDrawRectangle")], n7);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentExtentRotate.js
var n8 = class extends T2 {
  _renderContent() {
    const { angle: t3, visibleElements: o2 } = this.info, s5 = this._messagesTooltip.sketch;
    return n(i, null, o2.rotation ? n(c2, { title: s5.rotation, value: this._formatters.angleRelative(t3) }) : null);
  }
};
n8 = e([a("esri.views.interactive.tooltip.content.TooltipContentExtentRotate")], n8);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentExtentScale.js
var n9 = class extends T2 {
  _renderContent() {
    const t3 = this.info, { visibleElements: e7 } = t3, r4 = this._messagesTooltip.sketch, n13 = this._formatters;
    return n(i, null, e7.size ? n(c2, { title: r4.size, value: n(a3, { left: n13.length(t3.xSize), right: n13.length(t3.ySize) }) }) : null, e7.scale ? n(c2, { title: r4.scale, value: n(a3, { left: n13.scale(t3.xScale), right: n13.scale(t3.yScale) }) }) : null);
  }
};
n9 = e([a("esri.views.interactive.tooltip.content.TooltipContentExtentScale")], n9);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentReshapeEdgeOffset.js
var l = class extends T2 {
  _renderContent() {
    const { area: t3, distance: e7, totalLength: s5, visibleElements: l6 } = this.info, n13 = this._messagesTooltip.sketch, a5 = this._formatters;
    return n(i, null, l6.distance ? n(c2, { title: n13.distance, value: a5.lengthRelative(e7) }) : null, l6.area && null != t3 ? n(c2, { title: n13.area, value: a5.area(t3) }) : null, l6.totalLength && null != s5 ? n(c2, { title: n13.totalLength, value: a5.length(s5) }) : null);
  }
};
l = e([a("esri.views.interactive.tooltip.content.TooltipContentReshapeEdgeOffset")], l);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTransformAbsolute.js
var l2 = class extends T2 {
  _renderContent() {
    const { info: t3 } = this, { visibleElements: e7 } = t3, s5 = this._messagesTooltip.sketch, l6 = this._formatters;
    return n(i, null, e7.orientation && null != t3.orientation ? n(c2, { key: "orientation", title: s5.orientation, value: T(t3.orientation, t3.rotationType, t3.orientationPrecision) }) : null, e7.size && null != t3.size ? n(c2, { key: "size", title: s5.size, value: l6.length(t3.size, t3.sizeUnit, t3.sizePrecision) }) : null);
  }
};
l2 = e([a("esri.views.interactive.tooltip.content.TooltipContentTransformAbsolute")], l2);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTransformRotate.js
var l3 = class extends T2 {
  _renderContent() {
    const { info: o2 } = this, { visibleElements: i6 } = o2, n13 = this._messagesTooltip.sketch;
    return n(i, null, i6.rotation && null != o2.rotation ? n(c2, { key: "rotation", title: n13.rotation, value: U(o2.rotation, o2.rotationType, o2.rotationPrecision) }) : null, i6.orientation && null != o2.orientation ? n(c2, { key: "orientation", title: n13.orientation, value: T(o2.orientation, o2.rotationType, o2.orientationPrecision) }) : null);
  }
};
l3 = e([a("esri.views.interactive.tooltip.content.TooltipContentTransformRotate")], l3);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTransformScale.js
var l4 = class extends T2 {
  _renderContent() {
    const { info: e7 } = this, { visibleElements: s5 } = e7, o2 = this._messagesTooltip.sketch, l6 = this._formatters;
    return n(i, null, s5.scale && null != e7.scale ? n(c2, { key: "scale", title: o2.scale, value: l6.percentage(e7.scale) }) : null, s5.size && null != e7.size ? n(c2, { key: "size", title: o2.size, value: l6.length(e7.size, e7.sizeUnit, e7.sizePrecision) }) : null);
  }
};
l4 = e([a("esri.views.interactive.tooltip.content.TooltipContentTransformScale")], l4);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTranslate.js
var n10 = class extends T2 {
  _renderContent() {
    const { info: t3 } = this, { visibleElements: o2 } = t3, e7 = this._messagesTooltip.sketch, n13 = this._formatters;
    return n(i, null, o2.distance ? n(c2, { title: e7.distance, value: n13.length(t3.distance) }) : null);
  }
};
n10 = e([a("esri.views.interactive.tooltip.content.TooltipContentTranslate")], n10);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTranslateVertex.js
var i4 = class extends T2 {
  _renderContent() {
    const { distance: t3, elevation: e7, area: l6, totalLength: i6, visibleElements: n13 } = this.info, a5 = this._messagesTooltip.sketch, c3 = this._formatters;
    return n(i, null, n13.distance ? n(c2, { title: a5.distance, value: c3.length(t3) }) : null, n13.elevation && null != (e7 == null ? void 0 : e7.actual) ? n(c2, { title: a5.elevation, value: c3.verticalLength(e7.actual) }) : null, n13.area && null != l6 ? n(c2, { title: a5.area, value: c3.area(l6) }) : null, n13.totalLength && null != i6 ? n(c2, { title: a5.totalLength, value: c3.length(i6) }) : null);
  }
};
i4 = e([a("esri.views.interactive.tooltip.content.TooltipContentTranslateVertex")], i4);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTranslateVertexXY.js
var i5 = class extends T2 {
  _renderContent() {
    const { area: t3, distance: e7, elevation: l6, totalLength: i6, visibleElements: a5 } = this.info, n13 = this._messagesTooltip.sketch, c3 = this._formatters;
    return n(i, null, a5.distance ? n(c2, { title: n13.distance, value: c3.lengthRelative(e7) }) : null, a5.elevation && null != (l6 == null ? void 0 : l6.actual) ? n(c2, { title: n13.elevation, value: c3.verticalLength(l6.actual) }) : null, a5.area && null != t3 ? n(c2, { title: n13.area, value: c3.area(t3) }) : null, a5.totalLength && null != i6 ? n(c2, { title: n13.totalLength, value: c3.length(i6) }) : null);
  }
};
i5 = e([a("esri.views.interactive.tooltip.content.TooltipContentTranslateVertexXY")], i5);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTranslateVertexZ.js
var l5 = class extends T2 {
  _renderContent() {
    const { distance: t3, elevation: e7, visibleElements: s5 } = this.info, l6 = this._messagesTooltip.sketch, n13 = this._formatters;
    return n(i, null, s5.distance ? n(c2, { title: l6.distance, value: n13.verticalLengthRelative(t3) }) : null, s5.elevation && null != (e7 == null ? void 0 : e7.actual) ? n(c2, { title: l6.elevation, value: n13.verticalLength(e7.actual) }) : null);
  }
};
l5 = e([a("esri.views.interactive.tooltip.content.TooltipContentTranslateVertexZ")], l5);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTranslateXY.js
var n11 = class extends T2 {
  _renderContent() {
    const { info: t3 } = this, { visibleElements: o2 } = t3, e7 = this._messagesTooltip.sketch, n13 = this._formatters;
    return n(i, null, o2.distance ? n(c2, { title: e7.distance, value: n13.length(t3.distance) }) : null);
  }
};
n11 = e([a("esri.views.interactive.tooltip.content.TooltipContentTranslateXY")], n11);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTranslateZ.js
var n12 = class extends T2 {
  _renderContent() {
    const { info: t3 } = this, { visibleElements: o2 } = t3, e7 = this._messagesTooltip.sketch;
    return n(i, null, o2.distance ? n(c2, { title: e7.distance, value: this._formatters.verticalLengthRelative(t3.distance) }) : null);
  }
};
n12 = e([a("esri.views.interactive.tooltip.content.TooltipContentTranslateZ")], n12);

// node_modules/@arcgis/core/views/interactive/tooltip/content/tooltipContentFactory.js
function x4(x5, d6) {
  if (null == d6)
    return null;
  const y3 = document.createElement("div");
  switch (d6.type) {
    case "draw-point":
      return new s4({ tooltip: x5, info: d6, container: y3 });
    case "draw-polygon":
      return new n5({ tooltip: x5, info: d6, container: y3 });
    case "draw-polyline":
      return new n6({ tooltip: x5, info: d6, container: y3 });
    case "draw-mesh":
      return new i3({ tooltip: x5, info: d6, container: y3 });
    case "draw-rectangle":
      return new n7({ tooltip: x5, info: d6, container: y3 });
    case "draw-circle":
      return new n4({ tooltip: x5, info: d6, container: y3 });
    case "extent-rotate":
      return new n8({ tooltip: x5, info: d6, container: y3 });
    case "extent-scale":
      return new n9({ tooltip: x5, info: d6, container: y3 });
    case "transform-absolute":
      return new l2({ tooltip: x5, info: d6, container: y3 });
    case "transform-rotate":
      return new l3({ tooltip: x5, info: d6, container: y3 });
    case "transform-scale":
      return new l4({ tooltip: x5, info: d6, container: y3 });
    case "translate":
      return new n10({ tooltip: x5, info: d6, container: y3 });
    case "translate-z":
      return new n12({ tooltip: x5, info: d6, container: y3 });
    case "translate-xy":
      return new n11({ tooltip: x5, info: d6, container: y3 });
    case "translate-vertex":
      return new i4({ tooltip: x5, info: d6, container: y3 });
    case "translate-vertex-z":
      return new l5({ tooltip: x5, info: d6, container: y3 });
    case "translate-vertex-xy":
      return new i5({ tooltip: x5, info: d6, container: y3 });
    case "reshape-edge-offset":
      return new l({ tooltip: x5, info: d6, container: y3 });
  }
}

// node_modules/@arcgis/core/views/interactive/tooltip/Tooltip.js
var d5 = { base: `${e6}` };
var u4 = class extends S {
  constructor(t3) {
    super(t3), this.info = null, this.positionMode = "follow-cursor", this.content = null, this.contentContainer = (() => {
      const t4 = document.createElement("div");
      return t4.classList.add(d5.base), n2(t4), t4;
    })();
  }
  initialize() {
    const { contentContainer: t3 } = this;
    this.addHandles([d(() => {
      var _a;
      return (_a = this.view.overlay) == null ? void 0 : _a.surface;
    }, (o2) => {
      t3.remove(), o2 == null ? void 0 : o2.appendChild(t3);
    }, A2), d(() => this.info, (o2, n13) => {
      if (null != this.content && null != o2 && null != n13 && o2.type === n13.type)
        this.content.info = o2;
      else {
        this.content = u(this.content);
        const n14 = x4(this, o2);
        n14 && (this.content = n14, n14.container && t3.appendChild(n14.container));
      }
    }, A2), d(() => ({ container: this.contentContainer, content: this.content, screenPoint: this._screenPoint, positionMode: this.positionMode }), h2, A2)]);
  }
  destroy() {
    this.info = null, this.content = u(this.content), this.contentContainer.remove();
  }
  get mode() {
    var _a;
    return ((_a = this.content) == null ? void 0 : _a.mode) ?? "feedback";
  }
  get test() {
    var _a;
    return { visible: "none" !== ((_a = this.contentContainer) == null ? void 0 : _a.style.display) };
  }
  get _screenPoint() {
    const t3 = this.view.inputManager;
    return (t3 == null ? void 0 : t3.multiTouchActive) ? null : t3 == null ? void 0 : t3.latestPointerLocation;
  }
  clear() {
    this.info = null;
  }
  async enterInputMode(t3) {
    var _a;
    await ((_a = this.content) == null ? void 0 : _a.enterInputMode(t3));
  }
  async exitInputMode() {
    var _a;
    await ((_a = this.content) == null ? void 0 : _a.exitInputMode());
  }
};
function h2({ container: t3, content: o2, screenPoint: e7, positionMode: n13 }) {
  const { style: i6 } = t3;
  if ("fixed" !== n13)
    if (null != e7 && null != o2) {
      i6.display = "block";
      const o3 = v(t3), n14 = `translate(${Math.round(e7.x) + m3[0] * (o3 ? -1 : 1)}px, ${Math.round(e7.y) + m3[1]}px)`;
      i6.transform = o3 ? `translate(-100%, 0) ${n14}` : n14;
    } else
      i6.display = "none";
}
e([y({ nonNullable: true })], u4.prototype, "view", void 0), e([y()], u4.prototype, "info", void 0), e([y()], u4.prototype, "positionMode", void 0), e([y()], u4.prototype, "content", void 0), e([y()], u4.prototype, "mode", null), e([y()], u4.prototype, "contentContainer", void 0), e([y()], u4.prototype, "_screenPoint", null), u4 = e([a("esri.views.interactive.tooltip.Tooltip")], u4);
var m3 = [20, 20];

// node_modules/@arcgis/core/views/interactive/tooltip/SketchTooltipInfo.js
var r3 = class extends S {
  constructor(e7) {
    super(e7), this.helpMessage = void 0, this.viewType = void 0;
  }
  get visibleElements() {
    return this.sketchOptions.tooltips.visibleElements;
  }
  get allFields() {
    return [];
  }
  get editableFields() {
    return this.allFields.filter((e7) => e7.visible && !e7.readOnly);
  }
};
e([y()], r3.prototype, "sketchOptions", void 0), e([y()], r3.prototype, "visibleElements", null), e([y()], r3.prototype, "helpMessage", void 0), e([y()], r3.prototype, "viewType", void 0), e([y()], r3.prototype, "allFields", null), e([y()], r3.prototype, "editableFields", null), r3 = e([a("esri.views.interactive.tooltip.SketchTooltipInfo")], r3);

export {
  r3 as r,
  d3 as d,
  F2 as F,
  u4 as u
};
//# sourceMappingURL=chunk-EIFRMATR.js.map
