import {
  l
} from "./chunk-TXFZLIFM.js";
import {
  B,
  G2 as G,
  He,
  Q,
  U,
  Y,
  a,
  ae,
  r as r2
} from "./chunk-YGY4RCQM.js";
import "./chunk-GEMKWQ3Q.js";
import "./chunk-QD3CP3I4.js";
import "./chunk-Z3NX5DTX.js";
import "./chunk-J4RP32NG.js";
import "./chunk-6NLHKXEW.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import {
  r2 as r,
  x
} from "./chunk-PWPXYWXV.js";
import {
  m
} from "./chunk-545NO6M2.js";
import "./chunk-5LSHHVQ5.js";
import "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import "./chunk-NDIXNREV.js";
import "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/arcade/functions/featuresetstats.js
async function m2(n, t, e, a2) {
  if (1 === e.length) {
    if (U(e[0]))
      return l(n, e[0], Y(e[1], -1));
    if (Q(e[0]))
      return l(n, e[0].toArray(), Y(e[1], -1));
  } else if (2 === e.length) {
    if (U(e[0]))
      return l(n, e[0], Y(e[1], -1));
    if (Q(e[0]))
      return l(n, e[0].toArray(), Y(e[1], -1));
    if (B(e[0])) {
      const r3 = await e[0].load(), i = await y(x.create(e[1], r3.getFieldsIndex(), r3.dateFieldsTimeZoneDefaultUTC), a2, t);
      return g(t, await e[0].calculateStatistic(n, i, Y(e[2], 1e3), t.abortSignal));
    }
  } else if (3 === e.length && B(e[0])) {
    const r3 = await e[0].load(), i = await y(x.create(e[1], r3.getFieldsIndex(), r3.dateFieldsTimeZoneDefaultUTC), a2, t);
    return g(t, await e[0].calculateStatistic(n, i, Y(e[2], 1e3), t.abortSignal));
  }
  return l(n, e, -1);
}
function g(t, e) {
  return e instanceof r ? m.fromReaderAsTimeStampOffset(e.toStorageFormat()) : e instanceof Date ? m.dateJSAndZoneToArcadeDate(e, He(t)) : e;
}
async function y(n, t, e) {
  const a2 = n.getVariables();
  if (a2.length > 0) {
    const r3 = [];
    for (let n2 = 0; n2 < a2.length; n2++) {
      const i2 = { name: a2[n2] };
      r3.push(await t.evaluateIdentifier(e, i2));
    }
    const i = {};
    for (let n2 = 0; n2 < a2.length; n2++)
      i[a2[n2]] = r3[n2];
    return n.parameters = i, n;
  }
  return n;
}
function A(n) {
  "async" === n.mode && (n.functions.stdev = function(t, e) {
    return n.standardFunctionAsync(t, e, (e2, a2, r3) => m2("stdev", t, r3, n));
  }, n.functions.variance = function(t, e) {
    return n.standardFunctionAsync(t, e, (e2, a2, r3) => m2("variance", t, r3, n));
  }, n.functions.average = function(t, e) {
    return n.standardFunctionAsync(t, e, (e2, a2, r3) => m2("mean", t, r3, n));
  }, n.functions.mean = function(t, e) {
    return n.standardFunctionAsync(t, e, (e2, a2, r3) => m2("mean", t, r3, n));
  }, n.functions.sum = function(t, e) {
    return n.standardFunctionAsync(t, e, (e2, a2, r3) => m2("sum", t, r3, n));
  }, n.functions.min = function(t, e) {
    return n.standardFunctionAsync(t, e, (e2, a2, r3) => m2("min", t, r3, n));
  }, n.functions.max = function(t, e) {
    return n.standardFunctionAsync(t, e, (e2, a2, r3) => m2("max", t, r3, n));
  }, n.functions.count = function(c, u) {
    return n.standardFunctionAsync(c, u, async (n2, f, d) => {
      if (ae(d, 1, 1, c, u), B(d[0]))
        return d[0].count(n2.abortSignal);
      if (U(d[0]) || G(d[0]))
        return d[0].length;
      if (Q(d[0]))
        return d[0].length();
      throw new a(c, r2.InvalidParameter, u);
    });
  });
}
export {
  A as registerFunctions
};
//# sourceMappingURL=featuresetstats-2VAY23QP.js.map
