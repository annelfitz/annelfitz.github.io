import {
  o as o4
} from "./chunk-HBRJJENW.js";
import {
  e as e4
} from "./chunk-VHY5K2VE.js";
import {
  d
} from "./chunk-ZR7OV2EH.js";
import {
  o as o2
} from "./chunk-LJULTBAY.js";
import {
  e as e3
} from "./chunk-6MGK5WBT.js";
import {
  e as e2
} from "./chunk-QR7J3YDY.js";
import {
  o as o3
} from "./chunk-UYMREM3D.js";
import {
  o
} from "./chunk-P4MNTMCZ.js";
import {
  e
} from "./chunk-GLF3KRAL.js";

// node_modules/@arcgis/core/chunks/CheckerBoard.glsl.js
function n(n2) {
  const c2 = new o3(), { vertex: v, fragment: m } = c2;
  return d(v, n2), c2.attributes.add(e.POSITION, "vec3"), c2.attributes.add(e.UV0, "vec2"), c2.varyings.add("vUV", "vec2"), n2.multipassEnabled && c2.varyings.add("depth", "float"), v.code.add(o`
    void main(void) {
      vUV = uv0;
      ${n2.multipassEnabled ? "depth = (view * vec4(position, 1.0)).z;" : ""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `), c2.include(o4, n2), m.uniforms.add(new e2("size", (e5) => e5.size)), m.uniforms.add(new e3("color1", (e5) => e5.color1)), m.uniforms.add(new e3("color2", (e5) => e5.color2)), m.include(e4), m.code.add(o`
    void main() {
      ${n2.multipassEnabled ? "terrainDepthTest(depth);" : ""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      fragColor = mix(color2, color1, t);
      ${n2.transparencyPassType === o2.Color ? "fragColor = premultiplyAlpha(fragColor);" : ""}
    }
  `), c2;
}
var c = Object.freeze(Object.defineProperty({ __proto__: null, build: n }, Symbol.toStringTag, { value: "Module" }));

export {
  n,
  c
};
//# sourceMappingURL=chunk-SSVYYDUI.js.map
