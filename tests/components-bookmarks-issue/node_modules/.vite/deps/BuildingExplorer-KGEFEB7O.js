import {
  e as e5
} from "./chunk-HLKM6YBE.js";
import {
  i as i2
} from "./chunk-WK2KEW7P.js";
import {
  e as e4
} from "./chunk-EAAEPSBY.js";
import {
  H,
  c,
  c2,
  f,
  i
} from "./chunk-X56G4CRA.js";
import "./chunk-2AZYPUKO.js";
import "./chunk-5Y24AKE7.js";
import "./chunk-UYDBB2JF.js";
import "./chunk-J6T3FJLS.js";
import "./chunk-67A4RFMD.js";
import "./chunk-YULKNNDN.js";
import "./chunk-A64EK7QM.js";
import "./chunk-SA77Z3WI.js";
import "./chunk-676ANOCK.js";
import "./chunk-6K2UNRXT.js";
import "./chunk-WTKV7W5Z.js";
import "./chunk-D4Y7YHG7.js";
import "./chunk-AL5NKCU5.js";
import "./chunk-6MBDB46F.js";
import "./chunk-D56W4LPT.js";
import "./chunk-BKOYOJBG.js";
import "./chunk-7JR6S3WL.js";
import "./chunk-CSSLIU64.js";
import "./chunk-CJNDQ2LH.js";
import "./chunk-B4E4X2TN.js";
import "./chunk-HS6YI5DU.js";
import "./chunk-CDBOQCLE.js";
import "./chunk-RSRUEM5U.js";
import "./chunk-HFJMEXIX.js";
import "./chunk-VYSGSKHB.js";
import "./chunk-DGJJJ2DD.js";
import "./chunk-UAFQMHYI.js";
import "./chunk-IDPLBNJX.js";
import "./chunk-ZHAZR5C3.js";
import "./chunk-P4MNTMCZ.js";
import "./chunk-EWD7I5UU.js";
import "./chunk-4UEJR4VO.js";
import "./chunk-BUEJAM23.js";
import "./chunk-LQR76D5M.js";
import "./chunk-2CWW7O7M.js";
import "./chunk-Q5NCQLSM.js";
import "./chunk-FLBJ53KN.js";
import "./chunk-YH2IYJYF.js";
import "./chunk-BSPKLAHD.js";
import "./chunk-GGHKH3LP.js";
import "./chunk-VS6AHHIY.js";
import "./chunk-5DH2QVPW.js";
import "./chunk-GPWQGIYV.js";
import "./chunk-WZJNHZ6H.js";
import "./chunk-XMYPMIYH.js";
import "./chunk-FQLGRQKL.js";
import "./chunk-DIT542IP.js";
import "./chunk-HFYOMP47.js";
import "./chunk-TOKUWZQG.js";
import "./chunk-JNGJWHJD.js";
import "./chunk-QMPD4WXY.js";
import "./chunk-OF4YIONV.js";
import "./chunk-YBPOKK6D.js";
import "./chunk-AHEDDTVZ.js";
import "./chunk-Z4ALW6LX.js";
import "./chunk-H4O73SDK.js";
import "./chunk-UVXSAP7V.js";
import "./chunk-IZ3VJLQ6.js";
import "./chunk-DRC4XSYG.js";
import "./chunk-IHQNQQJC.js";
import "./chunk-4IKPTZ53.js";
import "./chunk-DXMBDX2I.js";
import "./chunk-TUVEYM7U.js";
import "./chunk-5S637BGW.js";
import "./chunk-BFOJPIF7.js";
import "./chunk-7UUNSIMA.js";
import "./chunk-GMRQGGML.js";
import "./chunk-BYK4ZOU2.js";
import "./chunk-OHYLFFUW.js";
import "./chunk-XW3FDKYP.js";
import "./chunk-Y7RXGLGH.js";
import "./chunk-3JC3OUNW.js";
import "./chunk-RO3CTAP7.js";
import "./chunk-GKMVTGGM.js";
import "./chunk-XGTCDM4C.js";
import "./chunk-QNG4TY7L.js";
import "./chunk-RW5QMWE6.js";
import "./chunk-LGMX4E7L.js";
import "./chunk-2QCWKZIQ.js";
import "./chunk-2NPNEA6N.js";
import "./chunk-U34ZXOJT.js";
import "./chunk-OKRW5W44.js";
import "./chunk-RGAA5Z76.js";
import "./chunk-Q6RZBEZ6.js";
import "./chunk-PC66NY33.js";
import "./chunk-YY2VB3AE.js";
import "./chunk-VEYMN5N3.js";
import "./chunk-H6NTWZSO.js";
import "./chunk-BMT3OVAP.js";
import "./chunk-W5ALAOW2.js";
import "./chunk-FHDHOWK5.js";
import "./chunk-Y546C2O5.js";
import "./chunk-IYKBAIQE.js";
import "./chunk-BDRVHR2K.js";
import "./chunk-DVIGFJWY.js";
import "./chunk-LQBHIBXV.js";
import "./chunk-42DUJ2CX.js";
import "./chunk-B35SNV2V.js";
import "./chunk-Z2F5OKVA.js";
import "./chunk-UQA6M3KF.js";
import "./chunk-GLF3KRAL.js";
import "./chunk-ZLQTPFTL.js";
import "./chunk-WIVZ7SMV.js";
import "./chunk-O76UVYOO.js";
import "./chunk-QCMUK3QA.js";
import "./chunk-HZSGATFT.js";
import "./chunk-KNMQQRV7.js";
import "./chunk-N5GQOIDP.js";
import "./chunk-NFB6O77E.js";
import "./chunk-AKEHDP75.js";
import "./chunk-5MMGIT64.js";
import "./chunk-AKQ765JR.js";
import "./chunk-ERD6I7QP.js";
import "./chunk-QIT4M76C.js";
import "./chunk-EZL4LTMD.js";
import "./chunk-F3BQGS35.js";
import "./chunk-Z3NX5DTX.js";
import "./chunk-J4RP32NG.js";
import "./chunk-6NLHKXEW.js";
import "./chunk-LMO6NZJA.js";
import "./chunk-A5QTLE4Y.js";
import "./chunk-SCHTG6ZQ.js";
import "./chunk-OHE3HDFF.js";
import "./chunk-QYC3GV65.js";
import "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import "./chunk-EDPA37RA.js";
import "./chunk-DORNK7ZC.js";
import "./chunk-OWKPWQPA.js";
import "./chunk-CQFVWMFK.js";
import "./chunk-CYVKDANA.js";
import "./chunk-7EQJLP2H.js";
import "./chunk-4ZLXDMI5.js";
import "./chunk-SBARCIDP.js";
import "./chunk-VQWLJR3W.js";
import "./chunk-EMYOYGGK.js";
import "./chunk-6PMFOUWZ.js";
import "./chunk-3KPZ3BQR.js";
import "./chunk-5JYVZQZR.js";
import "./chunk-UUG4W2PI.js";
import "./chunk-WW22JHXA.js";
import "./chunk-ZAM62XN5.js";
import "./chunk-RKVEKQ5O.js";
import "./chunk-P7J4JFEH.js";
import "./chunk-G7FOE26O.js";
import "./chunk-USOPZ2Q6.js";
import "./chunk-S5I4QKJD.js";
import "./chunk-LSM34QAB.js";
import "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import "./chunk-JW7VBMHD.js";
import "./chunk-GLLRUDMY.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import {
  n as n4
} from "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-AKLOTDO2.js";
import "./chunk-6AQIVLDN.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-DVI5RM3W.js";
import "./chunk-RDPH36VD.js";
import "./chunk-LBXFRGMS.js";
import "./chunk-LRW6CHFI.js";
import "./chunk-VTH4DAHQ.js";
import "./chunk-HLDUDRTD.js";
import "./chunk-SLQA5YBV.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import {
  e as e3
} from "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import {
  D,
  e2
} from "./chunk-RGCWZ2KZ.js";
import {
  n as n3
} from "./chunk-5VMSFOCB.js";
import "./chunk-LGQXPGTM.js";
import {
  L,
  g,
  v as v2
} from "./chunk-2SDMYJDE.js";
import {
  n as n2
} from "./chunk-TPLOIZC7.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-5LSHHVQ5.js";
import "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import {
  s as s2
} from "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import "./chunk-JCZIM4PO.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import {
  P,
  d,
  v,
  w
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  S,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  b,
  o3 as o,
  s
} from "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  n2 as n
} from "./chunk-7RBRCL6S.js";
import {
  x
} from "./chunk-J2EGIWT6.js";
import "./chunk-MDRC3XUT.js";
import "./chunk-NCF6OYL5.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/widgets/BuildingExplorer/support/buildingLayerUtils.js
var e6 = "overview";
var n5 = (e12) => (n14) => {
  const l8 = e12.toLowerCase();
  return n14.sublayers.find((e13) => {
    var _a;
    return ((_a = e13.modelName) == null ? void 0 : _a.toLowerCase()) === l8;
  }) ?? null;
};
var l = n5("fullmodel");
var t = n5(e6);
function o2(e12) {
  const n14 = l(e12);
  null != n14 && (n14.visible = true);
  const o7 = t(e12);
  null != o7 && (o7.visible = false);
}
function u(e12, n14) {
  const l8 = s3(e12, n14);
  if (null == l8)
    return null;
  const t4 = l8.fieldName;
  if (null == t4 || !t4)
    return null;
  const o7 = r(e12, t4), u6 = /* @__PURE__ */ new Map();
  for (const r3 of l8.mostFrequentValues ?? [])
    "number" == typeof r3 && u6.set(r3, null != o7 ? o7.getName(r3) : String(r3));
  return { fieldName: t4, fieldValueMap: u6 };
}
function r(e12, n14) {
  var _a;
  for (const l8 of e12.allSublayers.items) {
    const e13 = "building-component" === l8.type ? (_a = l8.getFieldDomain) == null ? void 0 : _a.call(l8, n14) : null;
    if (e13 && "coded-value" === e13.type)
      return e13;
  }
  return null;
}
function s3(e12, n14) {
  var _a;
  const l8 = ((_a = e12.summaryStatistics) == null ? void 0 : _a.fields) ?? [], t4 = n14.toLowerCase();
  return l8.find((e13) => {
    var _a2;
    return ((_a2 = e13.modelName) == null ? void 0 : _a2.toLowerCase()) === t4;
  }) ?? null;
}

// node_modules/@arcgis/core/widgets/BuildingExplorer/support/LayerTreeNode.js
var n6 = class extends S {
  constructor() {
    super(...arguments), this.id = "root", this.parent = null, this.children = new V(), this.layers = new V(), this.level = 0, this.collapsed = true, this._childIds = /* @__PURE__ */ new Set(), this._layerUniqueIds = /* @__PURE__ */ new Set();
  }
  initialize() {
    this.addHandles([this.layers.on("before-add", (e12) => {
      this._layerUniqueIds.has(e12.item.uid) ? e12.preventDefault() : this._layerUniqueIds.add(e12.item.uid);
    }), this.layers.on("after-add", ({ item: e12 }) => {
      this.addHandles([d(() => e12.visible, () => this.notifyChange("visible"), P), d(() => e12.title, () => this.notifyChange("title"), P)], e12.uid);
    }), this.layers.on("before-remove", ({ item: e12 }) => {
      this.removeHandles(e12.uid), this.notifyChange("title"), this.notifyChange("visible");
    }), this.children.on("before-add", (e12) => {
      this._childIds.has(e12.item.id) ? e12.preventDefault() : (e12.item._set("parent", this), this._childIds.add(e12.item.id));
    })]);
  }
  destroy() {
    this.children.forEach((e12) => e12.destroy());
  }
  get hasChildren() {
    return this.children.length > 0;
  }
  get isRoot() {
    return 0 === this.level;
  }
  get isLeaf() {
    return !this.hasChildren;
  }
  get isDiscipline() {
    return 1 === this.level;
  }
  get visible() {
    return a2(this.layers, (e12) => e12.visible);
  }
  get title() {
    return a2(this.layers, (e12) => e12.title) || this.layers.items.map((e12) => e12.title).join(", ") || null;
  }
  toggleVisibility(e12) {
    const i5 = void 0 === e12 ? !this.visible : e12;
    this.layers.forEach((e13) => {
      e13.visible = i5;
    }), i5 && null != this.parent && this.parent.toggleVisibility(true);
  }
  toggleCollapsed(e12) {
    this.collapsed = void 0 === e12 ? !this.collapsed : e12;
  }
  expand() {
    this.collapsed = false;
  }
  expandAll() {
    this.expand(), this.children.forEach((e12) => e12.expandAll());
  }
  collapse() {
    this.collapsed = true;
  }
  collapseAll() {
    this.collapse(), this.children.forEach((e12) => e12.collapseAll());
  }
  toggleAllSiblingsVisibility(e12) {
    const i5 = void 0 === e12 ? !this.visible : e12;
    this.toggleVisibility(i5), null != this.parent && (this.parent.toggleVisibility(i5), this.parent.children.forEach((e13) => e13.toggleVisibility(i5)));
  }
};
function a2(e12, i5) {
  let t4 = null;
  for (const l8 of e12.items) {
    const e13 = i5(l8);
    if (null != t4 && t4 !== e13)
      return null;
    t4 = e13;
  }
  return t4;
}
e([y({ nonNullable: true })], n6.prototype, "id", void 0), e([y()], n6.prototype, "parent", void 0), e([y({ nonNullable: true, readOnly: true })], n6.prototype, "children", void 0), e([y({ nonNullable: true, readOnly: true })], n6.prototype, "layers", void 0), e([y({ nonNullable: true })], n6.prototype, "level", void 0), e([y({ nonNullable: true })], n6.prototype, "collapsed", void 0), e([y({ readOnly: true })], n6.prototype, "hasChildren", null), e([y({ readOnly: true })], n6.prototype, "isRoot", null), e([y({ readOnly: true })], n6.prototype, "isLeaf", null), e([y({ readOnly: true })], n6.prototype, "isDiscipline", null), e([y({ readOnly: true })], n6.prototype, "visible", null), e([y({ readOnly: true })], n6.prototype, "title", null), n6 = e([a("esri.widgets.BuildingExplorer.support.LayerTreeNode")], n6);

// node_modules/@arcgis/core/widgets/BuildingExplorer/support/layerUtils.js
function a3() {
  let a9 = new AbortController();
  return async (r3) => {
    a9.abort(), a9 = new AbortController();
    const i5 = { signal: a9.signal }, l8 = r3.toArray().map((t4) => o3(t4, i5));
    await Promise.all(l8), s(i5);
  };
}
async function o3(a9, o7) {
  await a9.load(o7), await a9.loadAll(), s(o7), a9.summaryStatistics && await a9.summaryStatistics.load(o7);
}

// node_modules/@arcgis/core/widgets/BuildingExplorer/BuildingDisciplinesViewModel.js
var p = class extends S {
  constructor(e12) {
    super(e12), this.root = new n6(), this.state = "disabled", this._loadLayers = a3(), this.layers = new V();
  }
  initialize() {
    this.addHandles(this.layers.on("change", () => this._onLayersChange())), this._onLayersChange();
  }
  destroy() {
    this._set("state", "disabled"), this.root.destroy();
  }
  set layers(e12) {
    const s6 = this._get("layers");
    this._set("layers", n4(e12, s6));
  }
  _updateLayerTree() {
    this.root.destroy(), this._set("root", new n6({ collapsed: false }));
    const e12 = /* @__PURE__ */ new Map(), s6 = this.layers.length > 1 ? "modelName" : "id";
    return this.layers.forEach((t4) => {
      const r3 = l(t4);
      this._addNodesForSublayers(r3 ?? t4, this.root, e12, s6);
    }), this;
  }
  _addNodeForLayer(e12, s6, t4, r3) {
    const o7 = String(e12[r3]).toLowerCase();
    if (null == o7 || e12.isEmpty)
      return;
    const i5 = `${s6.id}/${o7}`;
    let a9 = t4.get(i5);
    a9 || (a9 = new n6({ id: o7, level: s6.level + 1 }), t4.set(i5, a9)), a9.layers.push(e12), s6.children.push(a9), this._addNodesForSublayers(e12, a9, t4, r3);
  }
  _addNodesForSublayers(e12, s6, t4, r3) {
    ("building-scene" === e12.type || "building-group" === e12.type && !e12.isEmpty) && e12.sublayers.forEach((e13) => this._addNodeForLayer(e13, s6, t4, r3));
  }
  async _onLayersChange() {
    if (this._set("state", "loading"), 0 !== this.layers.length)
      try {
        await this._loadLayers(this.layers), this._updateLayerTree(), this._set("state", "ready");
      } catch (e12) {
        b(e12) || this._set("state", "failed");
      }
  }
};
e([y({ readOnly: true })], p.prototype, "root", void 0), e([y({ type: V, nonNullable: true })], p.prototype, "layers", null), e([y({ readOnly: true, nonNullable: true })], p.prototype, "state", void 0), p = e([a("esri.widgets.BuildingExplorer.BuildingDisciplinesViewModel")], p);
var y2 = p;

// node_modules/@arcgis/core/widgets/BuildingExplorer/support/validation.js
function l2(l8) {
  const n14 = { fieldValueMap: /* @__PURE__ */ new Map(), allowedValues: [] };
  for (const e12 of l8) {
    const l9 = e12.fieldValueMap, t4 = n14.fieldValueMap;
    l9.forEach((l10, e13) => {
      t4.has(e13) || (t4.set(e13, l10), n14.allowedValues.push(e13));
    });
  }
  return n14.allowedValues.sort((l9, n15) => l9 - n15), n14;
}
function n7(l8) {
  let n14 = null;
  for (const e12 of l8)
    n14 = null != n14 ? Math.min(n14, e12) : e12;
  return n14;
}
function e7(l8) {
  let n14 = null;
  for (const e12 of l8)
    n14 = null != n14 ? Math.max(n14, e12) : e12;
  return n14;
}
function t2(l8, n14) {
  return n14.allowedValues.length > 0 ? o4(l8, n14.allowedValues) : null;
}
function o4(l8, n14) {
  if (0 === n14.length)
    return l8;
  if (l8 === 1 / 0)
    return n14[n14.length - 1];
  if (l8 === -1 / 0)
    return n14[0];
  let e12 = n14[0], t4 = Math.abs(e12 - l8);
  for (const o7 of n14) {
    const n15 = Math.abs(o7 - l8);
    n15 < t4 && (e12 = o7, t4 = n15);
  }
  return e12;
}

// node_modules/@arcgis/core/widgets/BuildingExplorer/BuildingNumericFilterViewModel.js
var p2 = class extends S {
  constructor(e12) {
    super(e12), this.state = "disabled", this._valueBeforeReady = null, this._domainInfo = l2([]), this._loadLayers = a3(), this.layers = new V();
  }
  initialize() {
    this.addHandles(this.layers.on("change", () => this._onLayersChange())), this._onLayersChange();
  }
  destroy() {
    this._set("state", "disabled");
  }
  get enabled() {
    return this.allowedValues.length > 0 && this._get("enabled");
  }
  set enabled(e12) {
    e12 !== this.enabled && this.allowedValues.length > 0 && this._set("enabled", e12);
  }
  get value() {
    return ("ready" === this.state ? this._get("value") : this._valueBeforeReady) ?? 0;
  }
  set value(e12) {
    if ("ready" !== this.state)
      return void (this._valueBeforeReady = e12);
    if (e12 === this.value)
      return;
    const t4 = t2(e12, this);
    null != t4 && this._set("value", t4);
  }
  get min() {
    return n7(this.allowedValues);
  }
  get max() {
    return e7(this.allowedValues);
  }
  get allowedValues() {
    return this._domainInfo.allowedValues;
  }
  get hasNext() {
    if (!this.enabled)
      return true;
    const e12 = this._valueIndex;
    return e12 >= 0 && e12 < this.allowedValues.length - 1;
  }
  get hasPrevious() {
    return !this.enabled || this._valueIndex > 0;
  }
  set layers(e12) {
    const t4 = this._get("layers");
    this._set("layers", n4(e12, t4));
  }
  get filterExpressions() {
    return { solid: null, xRay: null };
  }
  get _valueIndex() {
    return x(this.allowedValues, this.value);
  }
  select(e12) {
    if ("ready" !== this.state)
      return void (this._valueBeforeReady = e12);
    null != t2(e12, this) && (this.enabled = true, this.value = e12);
  }
  clear() {
    "ready" === this.state ? this.enabled = false : this._valueBeforeReady = null;
  }
  next() {
    const { state: e12, allowedValues: t4, enabled: l8, hasNext: s6, _valueIndex: a9 } = this;
    if ("ready" === e12 || null == this._valueBeforeReady) {
      if (0 !== t4.length)
        return l8 ? void (s6 && (this.value = t4[a9 + 1])) : (this.enabled = true, void (this.value = t4[0]));
    } else
      this._valueBeforeReady++;
  }
  previous() {
    const { state: e12, allowedValues: t4, enabled: l8, hasPrevious: s6, _valueIndex: a9 } = this;
    if ("ready" === e12 || null == this._valueBeforeReady) {
      if (0 !== t4.length)
        return l8 ? void (s6 && (this.value = t4[a9 - 1])) : (this.enabled = true, void (this.value = t4[t4.length - 1]));
    } else
      this._valueBeforeReady++;
  }
  getValueLabel(e12) {
    return 0 === this.layers.length ? null : this._domainInfo.fieldValueMap.get(e12) ?? null;
  }
  async _onLayersChange() {
    if (this._set("state", "loading"), this._domainInfo = l2([]), 0 !== this.layers.length)
      try {
        await this._loadLayers(this.layers), this._setup();
      } catch (e12) {
        b(e12) || this._set("state", "failed");
      }
  }
};
e([y({ value: false, nonNullable: true })], p2.prototype, "enabled", null), e([y({ nonNullable: true })], p2.prototype, "value", null), e([y({ readOnly: true })], p2.prototype, "min", null), e([y({ readOnly: true })], p2.prototype, "max", null), e([y({ readOnly: true })], p2.prototype, "allowedValues", null), e([y({ readOnly: true })], p2.prototype, "hasNext", null), e([y({ readOnly: true })], p2.prototype, "hasPrevious", null), e([y({ type: V, nonNullable: true })], p2.prototype, "layers", null), e([y({ nonNullable: true })], p2.prototype, "state", void 0), e([y()], p2.prototype, "_valueBeforeReady", void 0), e([y({ readOnly: true })], p2.prototype, "_valueIndex", null), e([y()], p2.prototype, "_domainInfo", void 0), p2 = e([a("esri.widgets.BuildingExplorer.BuildingNumericFilterViewModel")], p2);
var v3 = p2;

// node_modules/@arcgis/core/widgets/BuildingExplorer/support/filterUtils.js
var o5 = "__BUILDING_EXPLORER_FILTER__";
function e8() {
  return `${n2()}${o5}`;
}
function l3(t4) {
  const n14 = "string" == typeof t4 ? t4 : t4.id;
  return !!n14 && n14.includes(o5);
}
function f2(t4, n14) {
  for (const r3 of t4.items)
    for (const t5 of r3.filters.items) {
      if (!l3(t5))
        continue;
      const r4 = n14(t5);
      if (null != r4)
        return r4;
    }
  return null;
}
function s4(t4, n14) {
  t4.forEach((t5) => {
    const r3 = t5.filters.filter((t6) => !l3(t6));
    null != n14 && r3.push(n14), u2(t5.filters, r3) || (t5.filters = r3);
    const i5 = t5.filters.find((t6) => l3(t6));
    t5.activeFilterId = null != i5 ? i5.id : null;
  });
}
function u2(t4, n14) {
  const r3 = n14.length;
  if (null == t4 || t4.length !== r3)
    return false;
  for (let i5 = 0; i5 < r3; ++i5) {
    const r4 = n14.at(i5).toJSON(), o7 = t4.at(i5).toJSON();
    if (r4.id = "", o7.id = "", JSON.stringify(r4) !== JSON.stringify(o7))
      return false;
  }
  return true;
}
function c3(t4) {
  const r3 = p3(t4);
  return r3 ? new c2({ filterExpression: r3, filterMode: new c() }) : null;
}
function d2(t4) {
  const i5 = p3(t4);
  return i5 ? new c2({ filterExpression: i5, filterMode: new i() }) : null;
}
function p3(t4) {
  return t4.filter((t5) => !!t5).map((t5) => `(${t5})`).join(" AND ");
}

// node_modules/@arcgis/core/widgets/BuildingExplorer/BuildingLevel.js
var a4 = "bldglevel";
var n8 = class extends v3 {
  constructor() {
    super(...arguments), this._levelFieldName = null, this._parseValueFromFilter = (e12) => {
      var _a;
      const l8 = new RegExp(`${this._levelFieldName}\\s*=\\s*(\\d+)`, "gi"), s6 = new RegExp(`${this._levelFieldName}\\s*<\\s*(\\d+)`, "gi");
      for (const { filterMode: t4, filterExpression: r3 } of ((_a = e12.filterBlocks) == null ? void 0 : _a.items) ?? []) {
        if (null == r3)
          continue;
        let e13 = null;
        if ("solid" === t4.type ? e13 = l8.exec(r3) : "x-ray" === t4.type && (e13 = s6.exec(r3)), e13)
          return parseInt(e13[1], 10);
      }
      return null;
    };
  }
  get filterExpressions() {
    return this.enabled && this._levelFieldName ? { xRay: `${this._levelFieldName} < ${this.value}`, solid: `${this._levelFieldName} = ${this.value}` } : { solid: null, xRay: null };
  }
  get _firstValue() {
    const e12 = this.allowedValues;
    return e12.length > 0 ? e12[0] : 0;
  }
  _setup() {
    const e12 = [];
    this.layers.forEach((l9) => {
      const s7 = u(l9, a4);
      null != s7 && (this._levelFieldName = s7.fieldName, e12.push(s7));
    }), this._domainInfo = l2(e12);
    const l8 = this._valueBeforeReady;
    this._set("state", "ready"), this._valueBeforeReady = null;
    const s6 = l8 ?? f2(this.layers, this._parseValueFromFilter);
    null != s6 ? this.select(s6) : (this.enabled = false, this.value = this._firstValue);
  }
};
e([y({ readOnly: true })], n8.prototype, "filterExpressions", null), e([y()], n8.prototype, "_levelFieldName", void 0), e([y({ readOnly: true })], n8.prototype, "_firstValue", null), n8 = e([a("esri.widgets.BuildingExplorer.BuildingLevel")], n8);
var u3 = n8;

// node_modules/@arcgis/core/widgets/BuildingExplorer/BuildingPhase.js
var a5 = "demolishedphase";
var d3 = "createdphase";
var n9 = class extends v3 {
  constructor() {
    super(...arguments), this._createdPhaseFieldName = null, this._demolishedPhaseFieldName = null, this._parseValueFromFilter = (e12) => {
      var _a;
      const s6 = this._createdPhaseFieldName, t4 = new RegExp(`${s6}\\s*<=\\s*(\\d+)\\s*OR\\s*${s6}\\s*IS\\s*NULL`, "gi"), l8 = this._demolishedPhaseFieldName, i5 = new RegExp(`${l8}\\s*>\\s*(\\d+)\\s*OR\\s*${l8}\\s*IS\\s*NULL`, "gi");
      for (const { filterExpression: r3 } of ((_a = e12.filterBlocks) == null ? void 0 : _a.items) ?? []) {
        const e13 = r3 ? t4.exec(r3) ?? i5.exec(r3) : null;
        if (e13)
          return parseInt(e13[1], 10);
      }
      return null;
    };
  }
  get filterExpressions() {
    if (!this.enabled)
      return { solid: null, xRay: null };
    const e12 = [], s6 = this._createdPhaseFieldName;
    s6 && e12.push(`(${s6} <= ${this.value} OR ${s6} IS NULL)`);
    const t4 = this._demolishedPhaseFieldName;
    t4 && e12.push(`(${t4} > ${this.value} OR ${t4} IS NULL)`);
    const l8 = e12.join(" AND ");
    return { solid: l8, xRay: l8 };
  }
  get _lastValue() {
    const e12 = this.allowedValues;
    return e12.length > 0 ? e12[e12.length - 1] : 0;
  }
  _setup() {
    const e12 = [];
    this.layers.forEach((s7) => {
      const t4 = u(s7, d3);
      null != t4 && (this._createdPhaseFieldName = t4.fieldName, e12.push(t4));
      const l8 = u(s7, a5);
      null != l8 && (this._demolishedPhaseFieldName = l8.fieldName, e12.push(l8));
    }), this._domainInfo = l2(e12);
    const s6 = this._valueBeforeReady;
    if (this._set("state", "ready"), this._valueBeforeReady = null, this.allowedValues.length > 0) {
      const e13 = s6 ?? f2(this.layers, this._parseValueFromFilter);
      this.select(e13 ?? this._lastValue);
    } else
      this.clear();
  }
};
e([y({ readOnly: true })], n9.prototype, "filterExpressions", null), e([y()], n9.prototype, "_createdPhaseFieldName", void 0), e([y()], n9.prototype, "_demolishedPhaseFieldName", void 0), e([y({ readOnly: true })], n9.prototype, "_lastValue", null), n9 = e([a("esri.widgets.BuildingExplorer.BuildingPhase")], n9);
var h = n9;

// node_modules/@arcgis/core/widgets/BuildingExplorer/BuildingExplorerViewModel.js
var w2 = class extends S {
  constructor(e12) {
    super(e12), this.view = null, this.state = "disabled", this.level = new u3(), this.phase = new h(), this.disciplines = new y2(), this._loadLayers = a3(), this.layers = new V();
  }
  initialize() {
    this.addHandles([this.layers.on("change", () => this._onLayersChange()), d(() => ({ state: this.state, layers: this.layers, filter: this._filter }), ({ state: e12, layers: s6, filter: t4 }) => {
      "ready" === e12 && s4(s6, t4);
    }, { initial: true })]), this._onLayersChange();
  }
  destroy() {
    this.level.destroyed || this.level.destroy(), this.phase.destroyed || this.phase.destroy(), this.disciplines.destroyed || this.disciplines.destroy();
  }
  get isSupported() {
    var _a;
    return "3d" === ((_a = this.view) == null ? void 0 : _a.type);
  }
  get layers() {
    return this._get("layers");
  }
  set layers(e12) {
    const s6 = e12.filter((e13) => e13 instanceof H);
    s6.length !== e12.length && n.getLogger(this).error("Some layers are not BuildingSceneLayers but only BuildingSceneLayers can be passed to the widget."), this._set("layers", n4(s6, this._get("layers")));
  }
  get _filter() {
    const e12 = this.level.filterExpressions, s6 = this.phase.filterExpressions, t4 = [], i5 = d2([e12.solid, s6.solid]);
    null != i5 && t4.push(i5);
    const r3 = c3([e12.xRay, s6.xRay]);
    return null != r3 && t4.push(r3), 0 === t4.length ? null : new f({ id: e8(), name: "Building Explorer Filter", filterBlocks: t4 });
  }
  async _onLayersChange() {
    const e12 = this.layers;
    if (this.level.layers = e12, this.phase.layers = e12, this.disciplines.layers = e12, 0 !== e12.length) {
      this._set("state", "loading");
      try {
        await this._loadLayers(e12), await Promise.all([w(() => "ready" === this.level.state), w(() => "ready" === this.phase.state), w(() => "ready" === this.disciplines.state)]), e12.forEach(o2), this._set("state", "ready");
      } catch (s6) {
        b(s6) || this._set("state", "failed");
      }
    } else
      this._set("state", "disabled");
  }
};
e([y({ value: null })], w2.prototype, "view", void 0), e([y()], w2.prototype, "isSupported", null), e([y({ type: V, nonNullable: true })], w2.prototype, "layers", null), e([y({ readOnly: true })], w2.prototype, "state", void 0), e([y({ readOnly: true, type: u3 })], w2.prototype, "level", void 0), e([y({ readOnly: true, type: h })], w2.prototype, "phase", void 0), e([y({ readOnly: true, type: y2 })], w2.prototype, "disciplines", void 0), e([y()], w2.prototype, "_filter", null), w2 = e([a("esri.widgets.BuildingExplorer.BuildingExplorerViewModel")], w2);
var L2 = w2;

// node_modules/@arcgis/core/widgets/BuildingExplorer/css.js
var e9 = "esri-building-explorer";
var n10 = { base: e9, panelError: `${e9}__panel--error`, loadingContainer: `${e9}__loading-container`, content: `${e9}__content`, section: `${e9}__section`, levels: `${e9}__levels`, phases: `${e9}__phases`, disciplines: `${e9}__disciplines` };

// node_modules/@arcgis/core/widgets/BuildingExplorer/BuildingDisciplinesTree/BuildingDisciplinesNode.js
var h2;
var g2 = { expand: "expand", collapse: "collapse", hideSublayer: "hideSublayer", showSublayer: "showSublayer" };
var p4 = "esri-building-disciplines-tree-node";
var b2 = { base: p4, root: `${p4}--root`, leaf: `${p4}--leaf`, label: `${p4}__label`, checkbox: `${p4}__checkbox`, checkboxChecked: `${p4}__checkbox--checked`, checkboxIndeterminate: `${p4}__checkbox--indeterminate`, collapseToggle: `${p4}__collapse-toggle`, collapseToggleCollapsed: `${p4}__collapse-toggle--collapsed`, children: `${p4}__children`, level: (e12) => `${p4}--level-${e12}` };
var u4 = h2 = class extends D {
  constructor(e12) {
    super(e12), this.messages = g2, this.toggleSiblingsVisibility = false, this._childWidgets = [], this._updateChildWidgets = () => {
      this._destroyChildWidgets(), this._childWidgets = this.node.children.toArray().reverse().map((e13) => new h2({ node: e13, messages: this.messages, toggleSiblingsVisibility: this.toggleSiblingsVisibility }));
    };
  }
  initialize() {
    this.addHandles([v(() => this.node.children, "after-changes", this._updateChildWidgets, { onListenerAdd: this._updateChildWidgets, onListenerRemove: this._updateChildWidgets }), d(() => [this.messages, this.toggleSiblingsVisibility], this._updateChildWidgets, P)]);
  }
  destroy() {
    this._destroyChildWidgets();
  }
  render() {
    const e12 = this.node, s6 = e12.isRoot, i5 = e12.isLeaf;
    return e12.isDiscipline && i5 ? n3("div", { key: `${e12.id}-empty` }) : n3("div", { "aria-expanded": e12.collapsed ? "false" : "true", bind: this, class: this.classes(b2.base, b2.level(e12.level), { [b2.root]: s6, [b2.leaf]: i5 }), key: e12.id, onkeydown: this._onKeydown, role: "treeitem", tabIndex: i5 ? void 0 : 0 }, n3("label", { bind: this, class: b2.label, onclick: this._onCheckboxToggle }, this._renderCollapseToggle(), this._renderCheckbox(), n3("span", null, e12.title)), this._renderChildren(e12));
  }
  _renderCheckbox() {
    var _a, _b;
    const e12 = this.node.visible, s6 = true === e12, i5 = null === e12, t4 = s6 ? (_a = this.messages) == null ? void 0 : _a.hideSublayer : (_b = this.messages) == null ? void 0 : _b.showSublayer;
    return n3("button", { "aria-checked": s6 ? "true" : "false", "aria-label": t4, bind: this, class: this.classes(b2.checkbox, { [b2.checkboxChecked]: s6, [i2.checkMark]: s6, [b2.checkboxIndeterminate]: i5, [i2.minus]: i5 }), onclick: this._onCheckboxToggle, role: "checkbox", title: t4, type: "button" });
  }
  _renderCollapseToggle() {
    var _a, _b;
    if (!this.node.hasChildren)
      return null;
    const e12 = this.node.collapsed, s6 = e12 ? (_a = this.messages) == null ? void 0 : _a.expand : (_b = this.messages) == null ? void 0 : _b.collapse;
    return n3("div", { "aria-label": s6, bind: this, class: this.classes(b2.collapseToggle, i2.right, { [b2.collapseToggleCollapsed]: e12 }), onclick: this._onCollapseToggle, title: s6 });
  }
  _renderChildren(e12) {
    return !e12.hasChildren || e12.collapsed ? null : n3("div", { class: b2.children }, this._childWidgets.map((e13) => e13.render()));
  }
  _onKeydown(e12) {
    switch (e12.key) {
      case "Space":
      case "Enter":
        if (!e12.target.classList.contains(b2.base))
          return;
        e12.stopPropagation(), this.node.toggleVisibility();
        break;
      case "ArrowLeft":
        e12.stopPropagation(), this.node.toggleCollapsed(!v2(this.container));
        break;
      case "ArrowRight":
        e12.stopPropagation(), this.node.toggleCollapsed(v2(this.container));
    }
  }
  _onCheckboxToggle(e12) {
    e12.preventDefault(), e12.stopPropagation();
    (e12.metaKey || e12.ctrlKey) && this.toggleSiblingsVisibility ? this.node.toggleAllSiblingsVisibility() : this.node.toggleVisibility();
  }
  _onCollapseToggle(e12) {
    e12.preventDefault(), e12.stopPropagation(), this.node.toggleCollapsed();
  }
  _destroyChildWidgets() {
    this._childWidgets.forEach((e12) => e12.destroy()), this._childWidgets = [];
  }
};
e([y({ type: n6 })], u4.prototype, "node", void 0), e([y()], u4.prototype, "messages", void 0), e([y({ nonNullable: true })], u4.prototype, "toggleSiblingsVisibility", void 0), e([y()], u4.prototype, "_childWidgets", void 0), u4 = h2 = e([a("esri.widgets.BuildingExplorer.BuildingDisciplinesTree.BuildingDisciplinesNode")], u4);
var _ = u4;

// node_modules/@arcgis/core/widgets/BuildingExplorer/BuildingDisciplinesTree/BuildingDisciplinesTree.js
var l4 = { expand: "expand", collapse: "collapse", hideSublayer: "hideSublayer", showSublayer: "showSublayer" };
var p5 = { base: "esri-building-disciplines-tree" };
var a6 = class extends D {
  constructor(s6) {
    super(s6), this.toggleSiblingsVisibility = false;
  }
  render() {
    const { vm: s6 } = this, i5 = this.toggleSiblingsVisibility, e12 = this.messages ?? l4;
    return n3("div", { class: p5.base, role: "tree" }, s6.root.children.toArray().reverse().map((s7) => n3(_, { messages: e12, node: s7, toggleSiblingsVisibility: i5 })));
  }
};
e([y()], a6.prototype, "vm", void 0), e([y()], a6.prototype, "messages", void 0), e([y()], a6.prototype, "toggleSiblingsVisibility", void 0), a6 = e([a("esri.widgets.BuildingExplorer.BuildingDisciplinesTree.BuildingDisciplinesTree")], a6);
var c4 = a6;

// node_modules/@arcgis/core/chunks/constants.js
var e10 = 30;
var a7 = 20;
var l5 = 30;
var t3 = 10;
var s5 = 20;
var o6 = 2;
var r2 = 0.035;
var d4 = 30;
var i3 = 14;
var n11 = 80;
var v4 = 100;
var h3 = 40;
var c5 = Object.freeze(Object.defineProperty({ __proto__: null, alphaLevelDependencyFactor: l5, alphaSpreadFactor: t3, levelHeightDefault: i3, levelHoveredExtraHeight: e10, levelHoveredExtraWidth: a7, levelWidthConstant: h3, levelWidthMax: n11, levelWidthMin: d4, levelWidthNominator: v4, levelsMarginFactor: o6, levelsPadding: s5, levelsPointerAdjustment: r2 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/widgets/BuildingExplorer/BuildingLevelPicker/css.js
var e11 = "esri-building-level-picker";
var n12 = { container: e11, noLevel: `${e11}--no-level`, animateLevel: `${e11}--animate-level`, levelsContainer: `${e11}__levels-container`, innerLevelsContainer: `${e11}__inner-levels-container`, labelContainer: `${e11}__label-container`, arrowUp: `${e11}__arrow-up`, arrowDown: `${e11}__arrow-down` };

// node_modules/@arcgis/core/widgets/BuildingExplorer/BuildingLevelPicker/Label.js
var i4 = "esri-building-level-picker-label";
var c6 = { base: i4, active: `${i4}--active`, hover: `${i4}--hover`, empty: `${i4}--empty`, clearButton: `${i4}__clear-button` };
var a8 = { clearLevel: "", selectLevel: "" };
var p6 = class extends D {
  constructor(e12, t4) {
    super(e12, t4), this.level = null, this.active = false, this.hovering = false, this.onClear = () => {
    };
  }
  render() {
    const e12 = this.messages ?? a8;
    if (null == this.level)
      return n3("div", { class: c6.empty, title: e12.selectLevel }, e12.selectLevel);
    const t4 = e12.clearLevel;
    return n3("div", { "aria-label": t4, bind: this, class: this.classes(c6.base, { [c6.active]: this.active, [c6.hover]: this.hovering }), onclick: this.onClear, title: t4 }, n3("span", null, this.level), n3("button", { bind: this, class: this.classes(c6.clearButton, i2.close), disabled: !this.active, onclick: this.onClear, type: "button" }));
  }
};
e([y()], p6.prototype, "level", void 0), e([y({ nonNullable: true })], p6.prototype, "active", void 0), e([y({ nonNullable: true })], p6.prototype, "hovering", void 0), e([y()], p6.prototype, "messages", void 0), e([y({ nonNullable: true })], p6.prototype, "onClear", void 0), p6 = e([a("esri.widgets.BuildingExplorer.BuildingLevelPicker.Label")], p6);

// node_modules/@arcgis/core/widgets/BuildingExplorer/BuildingLevelPicker/LevelItem.js
var l6 = "esri-building-level-picker-item";
var n13 = { container: l6, base: `${l6}__base`, hover: `${l6}--hover`, active: `${l6}--active` };
var h4 = class extends D {
  constructor(t4, e12) {
    super(t4, e12), this.active = false, this.hovering = false, this.width = 0, this.height = 0, this.onSelect = () => {
    }, this.onFocus = () => {
    }, this.onBlur = () => {
    }, this._baseElement = null;
  }
  render() {
    return n3("div", { bind: this, class: this.classes(n13.container, { [n13.active]: this.active, [n13.hover]: this.hovering }), key: this, styles: { height: `${this.height}px` } }, this._renderBase());
  }
  focus() {
    null != this._baseElement && this._baseElement.focus();
  }
  _renderBase() {
    const t4 = this.width, e12 = 0.8 * this.width;
    return n3("div", { class: n13.base, styles: { width: `${Math.round(t4)}px`, height: `${Math.round(t4)}px` } }, n3("button", { afterCreate: L, "aria-label": this.label, bind: this, class: "rect", "data-node-ref": "_baseElement", onblur: this.onBlur, onclick: this.onSelect, onfocus: this.onFocus, styles: { width: `${Math.round(e12)}px`, height: `${Math.round(e12)}px` }, tabIndex: -1, title: this.label ?? "", type: "button" }));
  }
};
e([y({ nonNullable: true })], h4.prototype, "level", void 0), e([y({ nonNullable: true })], h4.prototype, "active", void 0), e([y({ nonNullable: true })], h4.prototype, "hovering", void 0), e([y({ nonNullable: true })], h4.prototype, "width", void 0), e([y({ nonNullable: true })], h4.prototype, "height", void 0), e([y({ nonNullable: true })], h4.prototype, "onSelect", void 0), e([y({ nonNullable: true })], h4.prototype, "onFocus", void 0), e([y({ nonNullable: true })], h4.prototype, "onBlur", void 0), h4 = e([a("esri.widgets.BuildingExplorer.BuildingLevelPicker.LevelItem")], h4);

// node_modules/@arcgis/core/widgets/BuildingExplorer/BuildingLevelPicker/BuildingLevelPicker.js
var W = { selectLevel: "selectLevel", clearLevel: "clearLevel", nextLevel: "nextLevel", previousLevel: "previousLevel", currentLevel: "{{value}}" };
var H2 = class extends D {
  constructor(e12, t4) {
    super(e12, t4), this._levelHandlesKey = "levelHandles", this._levelEventHandlesKey = "levelEventHandles", this._levelWidgets = [], this._labelWidget = new p6({ onClear: () => this.vm.clear() }), this._hoveredLevel = null, this._expandedLevelsHeight = void 0, this._normalizedPointerPosition = 0, this._hovering = false, this._containerPosTop = null, this._levelsContainer = null, this._onPointerUp = () => {
      var _a;
      if ((_a = window.getSelection()) == null ? void 0 : _a.removeAllRanges(), null == this._hoveredLevel)
        return;
      const { vm: e13 } = this;
      e13.enabled && this._hoveredLevel === e13.value ? e13.clear() : e13.select(this._hoveredLevel);
    }, this._onPointerEnter = () => {
      this._hovering || null == this._levelsContainer || (this._hovering = true, this._containerPosTop = this._levelsContainer.getBoundingClientRect().top ?? 0);
    }, this._onPointerLeave = () => {
      this._hovering && (this._normalizedPointerPosition = 0, this._hoveredLevel = null, this._hovering = false);
    }, this._onPointerMove = (e13) => {
      var _a;
      if (!this._hovering)
        return false;
      if ((_a = window.getSelection()) == null ? void 0 : _a.removeAllRanges(), null != this._containerPosTop) {
        const t5 = this._containerPosTop, s6 = s5 * o6, i5 = this._expandedLevelsMargin;
        let l8 = this._levelsHeight, o7 = t5 + s6 + i5;
        const n14 = this._levelHeight / 2;
        o7 += n14, l8 -= n14;
        let r3 = (e13.clientY - o7) / l8;
        r3 += r2, this._normalizedPointerPosition = r3;
      }
      return false;
    };
  }
  postInitialize() {
    this.addHandles([d(() => this._levelsContainer, () => this._onContainerChange(), P), d(() => this._levels, () => this._createLevelWidgets(), P), d(() => this.messages, () => {
      this._labelWidget.messages = this.messages ?? W;
    }, P)]);
  }
  destroy() {
    this._levelWidgets.forEach((e12) => e12.destroy()), this._labelWidget.destroy();
  }
  get _levels() {
    return this.vm.allowedValues;
  }
  get _numLevels() {
    return this._levels.length;
  }
  get _levelsHeight() {
    return Math.round(this._levelHeight * this._numLevels);
  }
  get _expandedLevelsMargin() {
    return Math.round(((this._expandedLevelsHeight ?? 0) - this._levelsHeight) / 2);
  }
  get _levelWidth() {
    const { levelWidthNominator: e12, levelWidthConstant: t4 } = c5, i5 = e12 / Math.sqrt(this._numLevels) + t4;
    return Math.round(e3(i5, d4, n11));
  }
  get _levelHeight() {
    const e12 = i3, t4 = 2 * e12 / Math.sqrt(this._numLevels);
    return Math.round(e3(t4, 2, e12));
  }
  get _gaussianFactor() {
    const e12 = this._numLevels;
    return e12 / Math.log(l5 * e12) * t3;
  }
  get _levelClosestToPointer() {
    if (!this._hovering)
      return null;
    const e12 = this._numLevels - 1, t4 = this._normalizedPointerPosition;
    return e12 >= 0 && null != t4 ? this._levels[Math.round((1 - t4) * e12)] : null;
  }
  render() {
    const e12 = this._levelWidgets.length, t4 = e12 > 1 ? this._levelWidgets.map((e13) => e13.render()) : null, s6 = s5 * o6, i5 = -s6 / o6, l8 = this._levelsHeight, o7 = l8 + 2 * s6;
    return n3("div", { bind: this, class: this.classes(e4.widget, n12.container, { [n12.animateLevel]: !this._hovering, [n12.noLevel]: e12 < 2 }), key: this, onkeydown: this._onKeyDown }, this._renderLabelContainer(), n3("div", { afterCreate: L, bind: this, class: n12.levelsContainer, "data-node-ref": "_levelsContainer", onfocus: this._onFocus, styles: { height: `${o7}px`, marginTop: `${i5}px`, marginBottom: `${i5}px` } }, n3("div", { class: n12.innerLevelsContainer, styles: { height: `${l8}px`, margin: s5 - this._expandedLevelsMargin + "px 0 0 0" } }, t4)));
  }
  _renderLabelContainer() {
    const e12 = this.messages ?? W, t4 = e12.previousLevel, s6 = e12.nextLevel;
    return n3("div", { class: n12.labelContainer, tabIndex: 0 }, n3("button", { "aria-label": s6, bind: this, class: n12.arrowUp, disabled: !this.vm.hasNext, onclick: this._onArrowUpClick, title: s6, type: "button" }), this._labelWidget.render(), n3("button", { "aria-label": t4, bind: this, class: n12.arrowDown, disabled: !this.vm.hasPrevious, onclick: this._onArrowDownClick, title: t4, type: "button" }));
  }
  _updateComponents() {
    const e12 = this.messages ?? W, t4 = this.vm.enabled ? this.vm.value : null, s6 = null != this._hoveredLevel ? this._hoveredLevel : t4;
    this._levelWidgets.forEach((s7) => {
      var _a;
      const i5 = this.vm.getValueLabel(s7.level);
      s7.label = null != i5 ? i5 : (_a = e12.currentLevel) == null ? void 0 : _a.replace("{{level}}", String(s7.level)), s7.active = s7.level === t4, s7.hovering = s7.level === this._hoveredLevel;
    }), this._labelWidget.level = s6, this._labelWidget.active = s6 === t4, this._labelWidget.hovering = null != this._hoveredLevel;
  }
  _createLevelWidgets() {
    this._levelWidgets.forEach((e12) => e12.destroy()), this._levelWidgets = this._levels.map((e12) => new h4({ level: e12, onSelect: () => this._onLevelToggle(e12) })), this.removeHandles(this._levelHandlesKey), this.addHandles([d(() => {
      const { vm: e12 } = this;
      return [this.messages, e12 == null ? void 0 : e12.value, e12 == null ? void 0 : e12.enabled, this._hoveredLevel, this._hovering];
    }, () => this._updateComponents(), P), d(() => [this._normalizedPointerPosition, this._hovering], () => this._onPointerPositionChange(), P), d(() => this._levelWidth, (e12) => this._levelWidgets.forEach((t4) => t4.width = e12), P)], this._levelHandlesKey);
  }
  _onContainerChange() {
    const e12 = this._levelsContainer;
    null != e12 && (this.removeHandles(this._levelEventHandlesKey), this.addHandles([o(e12, "pointerenter", this._onPointerEnter), o(e12, "pointerover", this._onPointerEnter), o(e12, "pointerleave", this._onPointerLeave), o(e12, "pointerup", this._onPointerUp), o(e12, "pointermove", this._onPointerMove)], this._levelEventHandlesKey));
  }
  _onKeyDown(e12) {
    switch (e12.key) {
      case "ArrowDown":
      case "ArrowLeft":
        e12.preventDefault(), e12.stopPropagation(), this.vm.previous(), this._focusCurrentLevel();
        break;
      case "ArrowUp":
      case "ArrowRight":
        e12.preventDefault(), e12.stopPropagation(), this.vm.next(), this._focusCurrentLevel();
    }
  }
  _focusCurrentLevel() {
    const e12 = this._levelWidgets.find((e13) => e13.level === this.vm.value);
    e12 == null ? void 0 : e12.focus();
  }
  _onFocus() {
    this._hoveredLevel = this._levels.length > 0 ? this._levels[0] : null;
  }
  _onLevelToggle(e12) {
    const { vm: t4 } = this;
    t4.enabled && t4.value === e12 ? t4.clear() : t4.select(e12);
  }
  _onArrowUpClick() {
    this.vm.next();
  }
  _onArrowDownClick() {
    this.vm.previous();
  }
  _onPointerPositionChange() {
    let e12 = 0;
    this._levelWidgets.forEach((t5, s6) => {
      const { width: i5, height: l8 } = this._getLevelWidgetSize(s6);
      t5.height = l8, t5.width = i5, e12 += l8;
    }), this._hoveredLevel = this._levelClosestToPointer;
    const t4 = this._expandedLevelsHeight;
    (null == t4 || Math.abs(t4 - e12) > 30) && (this._expandedLevelsHeight = e12);
  }
  _getLevelWidgetSize(e12) {
    const t4 = { width: this._levelWidth, height: this._levelHeight };
    if (this._hovering) {
      const s6 = this._getGaussianFactor(e12, this._normalizedPointerPosition);
      t4.width += a7 * s6, t4.height += e10 * s6;
    }
    return t4;
  }
  _getGaussianFactor(e12, t4) {
    const s6 = this._numLevels - 1, i5 = (s6 - e12) / s6, l8 = this._gaussianFactor * (i5 - t4);
    return Math.exp(-(l8 ** 2));
  }
};
e([y()], H2.prototype, "vm", void 0), e([y()], H2.prototype, "messages", void 0), e([y()], H2.prototype, "_levelWidgets", void 0), e([y()], H2.prototype, "_labelWidget", void 0), e([y()], H2.prototype, "_hoveredLevel", void 0), e([y()], H2.prototype, "_levels", null), e([y()], H2.prototype, "_numLevels", null), e([y({ readOnly: true })], H2.prototype, "_levelsHeight", null), e([y()], H2.prototype, "_expandedLevelsHeight", void 0), e([y({ readOnly: true })], H2.prototype, "_expandedLevelsMargin", null), e([y({ readOnly: true })], H2.prototype, "_levelWidth", null), e([y({ readOnly: true })], H2.prototype, "_levelHeight", null), e([y({ readOnly: true })], H2.prototype, "_gaussianFactor", null), e([y({ readOnly: true })], H2.prototype, "_levelClosestToPointer", null), e([y({ type: Number, range: { min: 0, max: 1 } })], H2.prototype, "_normalizedPointerPosition", void 0), e([y()], H2.prototype, "_hovering", void 0), e([y()], H2.prototype, "_containerPosTop", void 0), e([y()], H2.prototype, "_levelsContainer", void 0), H2 = e([a("esri.widgets.BuildingExplorer.BuildingLevelPicker.BuildingLevelPicker")], H2);
var x2 = H2;

// node_modules/@arcgis/core/widgets/BuildingExplorer/BuildingPhasePicker/BuildingPhasePicker.js
var l7 = { nextPhase: "nextPhase", previousPhase: "previousPhase", currentPhase: "{{value}}" };
var c7 = "esri-building-phase-picker";
var u5 = { container: `${c7}`, phasesContainer: `${c7}__phases-container`, phase: `${c7}__phase`, phaseActive: `${c7}__phase--active`, phaseCurrent: `${c7}__phase--current`, divider: `${c7}__divider`, dividerActive: `${c7}__divider--active`, arrowLeft: `${c7}__arrow-left`, arrowRight: `${c7}__arrow-right` };
var p7 = class extends D {
  constructor(e12, s6) {
    super(e12, s6), this._phasesContainer = null, this._shouldScrollCurrentPhaseIntoView = true, this._shouldFocusCurrentPhase = false, this._onKeyDown = (e13) => {
      const { vm: s7 } = this;
      switch (e13.key) {
        case "ArrowDown":
        case "ArrowLeft":
          e13.stopPropagation(), e13.preventDefault(), s7.previous(), this._shouldFocusCurrentPhase = true;
          break;
        case "ArrowUp":
        case "ArrowRight":
          e13.stopPropagation(), e13.preventDefault(), s7.next(), this._shouldFocusCurrentPhase = true;
      }
    }, this._onArrowLeftClick = () => {
      this.vm.previous();
    }, this._onArrowRightClick = () => {
      this.vm.next();
    }, this._onPhasesContainerAfterCreate = (e13) => {
      this._phasesContainer = e13, requestAnimationFrame(this._scrollOrFocusPhase);
    }, this._scrollOrFocusPhase = () => {
      const e13 = this._phasesContainer;
      if (this.destroyed || null == e13)
        return;
      const s7 = e13.querySelector(`.${u5.phaseCurrent}`);
      if (s7) {
        if (this._shouldScrollCurrentPhaseIntoView) {
          const t4 = e13.offsetWidth, r3 = s7.offsetLeft, o7 = s7.offsetWidth;
          e13.scrollLeft = -t4 / 2 + r3 - o7 / 2, this._shouldScrollCurrentPhaseIntoView = false;
        }
        this._shouldFocusCurrentPhase && (s7.focus(), this._shouldFocusCurrentPhase = false);
      }
    };
  }
  initialize() {
    this.addHandles(d(() => [this._currentPhase, this._phasesContainer, this.container], () => {
      this._shouldScrollCurrentPhaseIntoView = true, requestAnimationFrame(this._scrollOrFocusPhase);
    }, P));
  }
  get _phases() {
    return this.vm.allowedValues;
  }
  get _currentPhase() {
    const { vm: e12 } = this;
    return e12.enabled ? e12.value : null;
  }
  render() {
    if (this._phases.length < 2)
      return n3("div", { key: "no-phases" });
    const { vm: e12, container: s6, messages: t4 } = this, { previousPhase: r3, nextPhase: o7 } = t4 ?? l7, i5 = v2(s6);
    return n3("div", { class: this.classes(e4.widget, u5.container), key: this, onkeydown: this._onKeyDown }, n3("button", { "aria-label": r3, class: i5 ? u5.arrowRight : u5.arrowLeft, disabled: !e12.hasPrevious, onclick: this._onArrowLeftClick, title: r3, type: "button" }), n3("div", { afterCreate: this._onPhasesContainerAfterCreate, class: u5.phasesContainer }, this._renderPhaseButtons()), n3("button", { "aria-label": o7, class: i5 ? u5.arrowLeft : u5.arrowRight, disabled: !e12.hasNext, onclick: this._onArrowRightClick, title: o7, type: "button" }));
  }
  _renderPhaseButtons() {
    const e12 = this._phases, s6 = this._currentPhase, t4 = [];
    for (let r3 = 0; r3 < e12.length; ++r3) {
      const o7 = e12[r3], i5 = { phase: o7, active: null != s6 && o7 <= s6, current: null != s6 && o7 === s6 };
      r3 > 0 && t4.push(this._renderDivider(i5)), t4.push(this._renderPhaseButton(i5));
    }
    return t4;
  }
  _renderPhaseButton({ phase: e12, active: s6, current: t4 }) {
    const { vm: r3 } = this, o7 = r3.getValueLabel(e12);
    return n3("button", { "aria-label": o7, class: this.classes(u5.phase, { [u5.phaseActive]: s6, [u5.phaseCurrent]: t4 }), key: `phase-${e12}`, onclick: () => r3.select(e12), title: o7, type: "button" }, e12);
  }
  _renderDivider({ phase: e12, active: s6 }) {
    return n3("div", { class: this.classes(u5.divider, { [u5.dividerActive]: s6 }), key: `phase-divider-${e12}` });
  }
};
e([y({ nonNullable: true })], p7.prototype, "vm", void 0), e([y()], p7.prototype, "messages", void 0), e([y()], p7.prototype, "_phases", null), e([y()], p7.prototype, "_currentPhase", null), e([y()], p7.prototype, "_phasesContainer", void 0), p7 = e([a("esri.widgets.BuildingExplorer.BuildingPhasePicker.BuildingPhasePicker")], p7);
var d5 = p7;

// node_modules/@arcgis/core/widgets/BuildingExplorer.js
var v5 = { levels: true, phases: true, disciplines: true };
var y3 = class extends D {
  constructor(e12, s6) {
    super(e12, s6), this._defaultViewModel = new L2(), this.viewModel = this._defaultViewModel, this.visibleElements = { ...v5 }, this.headingLevel = 3, this.messages = null, this.messagesCommon = null, this.toggleSiblingsVisibility = false;
  }
  destroy() {
    this.viewModel !== this._defaultViewModel && this._defaultViewModel.destroy();
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e12) {
    this.viewModel.view = e12;
  }
  get layers() {
    return this.viewModel.layers;
  }
  set layers(e12) {
    this.viewModel.layers = e12;
  }
  _castVisibleElements(e12) {
    return { ...v5, ...e12 };
  }
  get icon() {
    return "organization";
  }
  set icon(e12) {
    this._overrideIfSome("icon", e12);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e12) {
    this._overrideIfSome("label", e12);
  }
  render() {
    const e12 = this.viewModel, s6 = "disabled" === e12.state || !e12.isSupported;
    return n3("div", { "aria-label": this.messages.widgetLabel, class: g(e4.widget, n10.base, e4.panel, { [e4.widgetDisabled]: s6 }), key: this }, this._renderContent());
  }
  _renderContent() {
    const e12 = this.viewModel, s6 = this.messages;
    if (!e12.isSupported)
      return n3("p", { class: n10.panelError }, s6.unsupported);
    if (!e12.layers.length)
      return n3("p", { class: n10.panelError }, s6.noData);
    switch (e12.state) {
      case "loading":
        return this._renderLoadingIndicator();
      case "ready":
        return n3("div", { class: n10.content, key: "content" }, this._renderLevelPickerSection(), this._renderPhasePickerSection(), this._renderDisciplinesSection());
      case "failed":
        return n3("p", { class: n10.panelError }, s6.failed);
      default:
        return null;
    }
  }
  _renderLoadingIndicator() {
    const e12 = this.messagesCommon.loading;
    return n3("div", { "aria-label": e12, class: n10.loadingContainer, key: "loading-container", role: "presentation", title: e12 }, n3("span", { "aria-hidden": "true", class: g(i2.loadingIndicator, e4.rotating) }));
  }
  _renderLevelPickerSection() {
    var _a;
    const e12 = this.viewModel.level, s6 = "ready" === e12.state, i5 = e12.allowedValues.length > 1;
    if (!this.visibleElements.levels || !s6 || !i5)
      return null;
    const t4 = (_a = this.messages) == null ? void 0 : _a.level;
    return n3("div", { class: g(n10.section, n10.levels), key: "levels" }, n3(e5, { level: this.headingLevel }, t4 == null ? void 0 : t4.title), n3(x2, { messages: t4, vm: e12 }));
  }
  _renderPhasePickerSection() {
    const e12 = this.viewModel.phase, s6 = "ready" === e12.state, i5 = e12.allowedValues.length > 1;
    if (!this.visibleElements.phases || !s6 || !i5)
      return null;
    const t4 = this.messages.phase;
    return n3("div", { class: g(n10.section, n10.phases), key: "phases" }, n3(e5, { level: this.headingLevel }, t4.title), n3(d5, { messages: t4, vm: e12 }));
  }
  _renderDisciplinesSection() {
    var _a;
    const e12 = this.viewModel.disciplines, s6 = "ready" === e12.state, i5 = e12.root.hasChildren;
    if (!this.visibleElements.disciplines || !s6 || !i5)
      return null;
    const t4 = (_a = this.messages) == null ? void 0 : _a.disciplines;
    return n3("div", { class: g(n10.section, n10.disciplines), key: "disciplines" }, n3(e5, { level: this.headingLevel }, t4.title), n3(c4, { messages: t4, toggleSiblingsVisibility: this.toggleSiblingsVisibility, vm: e12 }));
  }
};
e([y({ type: L2 })], y3.prototype, "viewModel", void 0), e([y()], y3.prototype, "view", null), e([y()], y3.prototype, "layers", null), e([y()], y3.prototype, "visibleElements", void 0), e([s2("visibleElements")], y3.prototype, "_castVisibleElements", null), e([y()], y3.prototype, "headingLevel", void 0), e([y()], y3.prototype, "icon", null), e([y()], y3.prototype, "label", null), e([y(), e2("esri/widgets/BuildingExplorer/t9n/BuildingExplorer")], y3.prototype, "messages", void 0), e([y(), e2("esri/t9n/common")], y3.prototype, "messagesCommon", void 0), e([y({ nonNullable: true })], y3.prototype, "toggleSiblingsVisibility", void 0), e([y()], y3.prototype, "uiStrings", void 0), y3 = e([a("esri.widgets.BuildingExplorer")], y3);
var w3 = y3;
export {
  w3 as default
};
//# sourceMappingURL=BuildingExplorer-KGEFEB7O.js.map
