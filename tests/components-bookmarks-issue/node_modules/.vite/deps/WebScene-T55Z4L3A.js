import {
  i as i6,
  i2 as i7,
  l as l4
} from "./chunk-7UWJ5WTY.js";
import {
  u as u4
} from "./chunk-LRSI5HZ3.js";
import {
  b as b5,
  i as i4,
  i2 as i5,
  p as p4
} from "./chunk-GJAVIUYF.js";
import {
  r as r5
} from "./chunk-JZMK5M5U.js";
import {
  n3 as n7,
  n4 as n8
} from "./chunk-B3GKRGWX.js";
import {
  L
} from "./chunk-QHWIMHBR.js";
import {
  b as b4
} from "./chunk-7PVGO24P.js";
import "./chunk-EL74TSJT.js";
import {
  i as i3
} from "./chunk-P257AUOX.js";
import {
  l as l3
} from "./chunk-BSYULFZQ.js";
import "./chunk-YKIGDW5O.js";
import {
  I as I2
} from "./chunk-QYDOVVH7.js";
import "./chunk-YSXT2SWC.js";
import "./chunk-YH3SFFF7.js";
import "./chunk-JBU54P54.js";
import {
  b as b3,
  v as v3,
  w as w4
} from "./chunk-YPY24RRU.js";
import {
  F as F2
} from "./chunk-O7RKI2QW.js";
import {
  l as l2
} from "./chunk-WZJNHZ6H.js";
import {
  v as v2
} from "./chunk-YBPOKK6D.js";
import {
  r as r4
} from "./chunk-DVIGFJWY.js";
import "./chunk-6NLHKXEW.js";
import "./chunk-SCHTG6ZQ.js";
import {
  n as n6,
  p as p3
} from "./chunk-EDPA37RA.js";
import {
  i as i2
} from "./chunk-DORNK7ZC.js";
import {
  i
} from "./chunk-OWKPWQPA.js";
import "./chunk-CQFVWMFK.js";
import {
  e as e2
} from "./chunk-2MEFZKMO.js";
import "./chunk-NVYR73RE.js";
import "./chunk-HV2SFSJW.js";
import "./chunk-CYVKDANA.js";
import {
  A
} from "./chunk-7EQJLP2H.js";
import {
  t as t2
} from "./chunk-SBARCIDP.js";
import {
  t as t3
} from "./chunk-VQWLJR3W.js";
import {
  S as S2,
  m as m2
} from "./chunk-ZAM62XN5.js";
import {
  b as b2
} from "./chunk-G7FOE26O.js";
import "./chunk-LSM34QAB.js";
import "./chunk-HWHMO3CO.js";
import "./chunk-QX66UTIR.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-R4CJB3GP.js";
import {
  n as n4,
  t
} from "./chunk-HTKSTTSR.js";
import {
  n as n5,
  r as r3
} from "./chunk-6IED7TER.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import {
  y as y2
} from "./chunk-J7AMTUNG.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import {
  o as o2
} from "./chunk-RDPH36VD.js";
import {
  f as f3,
  u as u3
} from "./chunk-LBXFRGMS.js";
import "./chunk-VTH4DAHQ.js";
import "./chunk-HLDUDRTD.js";
import {
  S
} from "./chunk-SLQA5YBV.js";
import {
  Q
} from "./chunk-UMXV3EBO.js";
import {
  m
} from "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import {
  F
} from "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import {
  d as d3
} from "./chunk-OCF7OAES.js";
import {
  p as p2
} from "./chunk-JZBR4X6W.js";
import {
  n as n3
} from "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-TPLOIZC7.js";
import "./chunk-6Z6C6JVV.js";
import {
  n as n2
} from "./chunk-Z2PDA67N.js";
import {
  w as w3
} from "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import {
  f as f2
} from "./chunk-MBGZKT2Z.js";
import {
  P2 as P
} from "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import {
  o
} from "./chunk-YOPMY6TS.js";
import {
  r
} from "./chunk-VIN55KNF.js";
import {
  s as s2
} from "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-JCZIM4PO.js";
import {
  I,
  kt,
  r as r2
} from "./chunk-SAYWXQVM.js";
import {
  d as d2,
  f
} from "./chunk-SBL4URUW.js";
import {
  p,
  v,
  w as w2
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import {
  _
} from "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  T,
  a3 as a2,
  d
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  b,
  k,
  u2,
  w
} from "./chunk-JGDJR5EV.js";
import {
  l,
  u
} from "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  a,
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/support/webSceneUtils.js
var r6 = "webscene:failed-to-copy-embedded-resources";
var o3 = "webscene:schema-validation";
function n9() {
  return new s(r6, "Copying of embedded resources is currently not supported");
}
function s3(r7) {
  return new s(o3, "Failed to save webscene due to schema validation errors. See 'details.errors' for more detailed information", { errors: r7 });
}

// node_modules/@arcgis/core/webscene/ApplicationProperties.js
var i8;
var p5 = i8 = class extends f {
  constructor(o4) {
    super(o4), this.viewing = null;
  }
  clone() {
    return new i8({ viewing: this.viewing ? this.viewing.clone() : null });
  }
};
e([y({ type: i7, json: { write: true } })], p5.prototype, "viewing", void 0), p5 = i8 = e([a2("esri.webscene.ApplicationProperties")], p5);
var c = p5;

// node_modules/@arcgis/core/webscene/InitialViewProperties.js
var p6;
var c2 = p6 = class extends f {
  constructor(e5) {
    super(e5), this.environment = new b5(), this.spatialReference = null, this.viewpoint = null;
  }
  set viewingMode(e5) {
    this._set("viewingMode", e5);
  }
  clone() {
    return new p6({ environment: this.environment.clone(), spatialReference: this.spatialReference ? this.spatialReference.clone() : null, viewingMode: this.viewingMode, viewpoint: this.viewpoint ? this.viewpoint.clone() : null });
  }
};
e([y({ type: b5, json: { write: { isRequired: true } } })], c2.prototype, "environment", void 0), e([y({ type: f2 })], c2.prototype, "spatialReference", void 0), e([y({ type: ["local", "global"] })], c2.prototype, "viewingMode", null), e([y({ type: l3, json: { write: { isRequired: true } } })], c2.prototype, "viewpoint", void 0), c2 = p6 = e([a2("esri.webscene.InitialViewProperties")], c2);
var l5 = c2;

// node_modules/@arcgis/core/webscene/support/Description.js
var e3;
var p7 = e3 = class extends f {
  constructor() {
    super(...arguments), this.text = "";
  }
  clone() {
    return new e3({ text: this.text });
  }
};
e([y({ type: String, json: { write: true } })], p7.prototype, "text", void 0), p7 = e3 = e([a2("esri.webscene.support.Description")], p7);
var c3 = p7;

// node_modules/@arcgis/core/webscene/support/SlideEnvironment.js
var c4;
var h = c4 = class extends f {
  constructor() {
    super(...arguments), this.lighting = new p4(), this.weather = new n7();
  }
  clone() {
    return new c4({ lighting: a(this.lighting), weather: a(this.weather) });
  }
};
e([y({ types: i5, json: { write: true } })], h.prototype, "lighting", void 0), e([y({ types: n8, json: { write: true } })], h.prototype, "weather", void 0), h = c4 = e([a2("esri.webscene.Environment")], h);

// node_modules/@arcgis/core/webscene/support/SlideGround.js
var i9;
var n10 = i9 = class extends f {
  constructor() {
    super(...arguments), this.opacity = null;
  }
  clone() {
    return new i9({ opacity: this.opacity });
  }
  cloneAndApplyTo(r7) {
    return null == this.opacity || ((r7 = (r7 == null ? void 0 : r7.clone()) ?? new b4()).opacity = this.opacity), r7;
  }
  static fromGround(r7) {
    return new i9({ opacity: r7.opacity });
  }
};
e([y({ type: Number, json: { type: T, read: { reader: r3, source: "transparency" }, write: { writer: (r7, o4) => {
  o4.transparency = n5(r7);
}, target: "transparency" } } })], n10.prototype, "opacity", void 0), n10 = i9 = e([a2("esri.webscene.support.SlideGround")], n10);
var u5 = n10;

// node_modules/@arcgis/core/webscene/support/SlideVisibleLayer.js
var i10;
var c5 = i10 = class extends f {
  constructor(r7) {
    super(r7), this.id = "", this.sublayerIds = null;
  }
  clone() {
    return new i10({ id: this.id, sublayerIds: a(this.sublayerIds) });
  }
};
e([y({ type: String, json: { write: true } })], c5.prototype, "id", void 0), e([y({ type: [T], json: { read: { source: "subLayerIds" }, write: { target: "subLayerIds" } } })], c5.prototype, "sublayerIds", void 0), c5 = i10 = e([a2("esri.webscene.support.SlideVisibleLayer")], c5);

// node_modules/@arcgis/core/webscene/support/Title.js
var s4;
var p8 = s4 = class extends f {
  constructor() {
    super(...arguments), this.text = "";
  }
  clone() {
    return new s4({ text: this.text });
  }
};
e([y({ type: String, json: { write: { isRequired: true } } })], p8.prototype, "text", void 0), p8 = s4 = e([a2("esri.webscene.support.Title")], p8);
var c6 = p8;

// node_modules/@arcgis/core/webscene/Slide.js
var R = 0;
var A2 = V.ofType(c5);
var q = class extends f {
  constructor(e5) {
    super(e5), this.id = Date.now().toString(16) + "-slide-" + R++, this.title = new c6(), this.description = new c3(), this.hidden = false, this.thumbnail = new u4(), this.viewpoint = null, this.basemap = null, this.ground = null, this.environment = new h(), this.visibleLayers = new A2();
  }
  destroy() {
    this.visibleLayers.removeAll(), this.basemap = null, this.thumbnail = u(this.thumbnail), this.description = null, this.title = null, this.thumbnail = null;
  }
  castTitle(e5) {
    return "string" == typeof e5 ? new c6({ text: e5 }) : d(c6, e5);
  }
  castDescription(e5) {
    return "string" == typeof e5 ? new c3({ text: e5 }) : d(c3, e5);
  }
  castThumbnail(e5) {
    return "string" == typeof e5 ? new u4({ url: e5 }) : d(u4, e5);
  }
  castBasemap(e5) {
    return b3(e5);
  }
  set visibleLayers(e5) {
    this._set("visibleLayers", n4(e5, this._get("visibleLayers"), A2));
  }
  castVisibleLayers(e5) {
    return e5 && "function" == typeof e5.map ? e5.map((e6) => {
      if ("string" == typeof e6)
        return { id: e6 };
      if (e6 instanceof b2) {
        const t4 = M(e6);
        return { id: e6.id, sublayerIds: t4 };
      }
      return e6.id ? { id: e6.id, sublayerIds: "sublayerIds" in e6 ? e6.sublayerIds : void 0 } : (n.getLogger(this).warn('Invalid visible layer, expected { id }, Layer or "id"'), e6);
    }) : null;
  }
  clone() {
    var _a, _b;
    return new (0, this.constructor)({ id: this.id, title: this.title.clone(), thumbnail: this.thumbnail.clone(), description: this.description && this.description.clone() || null, viewpoint: this.viewpoint && this.viewpoint.clone() || null, basemap: ((_a = this.basemap) == null ? void 0 : _a.clone()) || null, ground: ((_b = this.ground) == null ? void 0 : _b.clone()) || null, visibleLayers: this.visibleLayers.clone(), environment: this.environment && this.environment.clone() || null, hidden: this.hidden });
  }
  async _updateVisibleLayersFrom(e5) {
    const t4 = [];
    await Promise.allSettled(this._getLayers(e5.map).map((i12) => e5.whenLayerView(i12).then((e6) => {
      if (e6.visible) {
        const n13 = M(i12);
        t4.push(new c5({ id: e6.layer.id, sublayerIds: n13 }));
      }
    })).toArray()), this.visibleLayers.removeAll(), this.visibleLayers.addMany(t4);
  }
  updateFrom(e5, t4) {
    const i12 = { format: "png", quality: 80, width: 120, height: 75, disableDecorations: true, ...t4 == null ? void 0 : t4.screenshot };
    return e5.when(() => (this.viewpoint = e5.viewpoint.clone(), this.environment.lighting = "virtual" === e5.environment.lighting.type ? i4.prototype.clone.apply(e5.environment.lighting) : p4.prototype.clone.apply(e5.environment.lighting), this.environment.weather = e5.environment.weather.clone(), this.basemap = e5.map.basemap && e5.map.basemap.clone() || null, this.ground = e5.map.ground ? u5.fromGround(e5.map.ground) : null, this._updateVisibleLayersFrom(e5))).then(() => e5.takeScreenshot(i12)).then((e6) => (this.thumbnail = new u4({ url: e6.dataUrl }), this));
  }
  async applyTo(e5, t4) {
    null != this._applyToController && this._applyToController.abort();
    let i12 = new AbortController();
    this._applyToController = i12;
    const r7 = w(t4, () => i12 == null ? void 0 : i12.abort()), o4 = () => {
      this._applyToController === i12 && (this._applyToController = null), i12 = null, r7 == null ? void 0 : r7.remove();
    };
    try {
      await w2(() => e5.ready, i12.signal);
    } catch (d5) {
      throw o4(), d5;
    }
    if (i12.signal.aborted)
      throw o4(), u2();
    const s6 = e5.resourceController.scheduler.registerTask(I2.SLIDE);
    let a3 = false;
    const l6 = { animate: true, ...t4, signal: this._applyToController.signal }, p10 = async () => {
      await Promise.all([s6.schedule(async () => a3 = await this._setViewpointOfInterest(e5, l6)), s6.schedule(() => this._applyBasemap(e5, l6), l6.signal)]), await this._loadLayersWithSublayerVisibility(e5), await Promise.all([s6.schedule(() => this._applyLayerVisibility(e5), l6.signal), s6.schedule(() => this._applyGround(e5), l6.signal), s6.schedule(() => this._applyViewpoint(e5, l6), l6.signal)]), await s6.schedule(() => e5.environment.weather = this.environment.weather.clone());
    }, m4 = await _(e5.addUpdatingPromise(p10()));
    if (a3 && (e5.contentCamera = null), s6.remove(), o4(), false === m4.ok)
      throw m4.error;
    return this;
  }
  async _applyBasemap(e5, t4) {
    if (this.basemap) {
      try {
        await this.basemap.load(t4);
      } catch (i12) {
        if (b(i12))
          throw i12;
      }
      e5.map.basemap = v3(this.basemap, e5.map.basemap);
    }
  }
  _applyGround(e5) {
    this.ground && (e5.map.ground = this.ground.cloneAndApplyTo(e5.map.ground));
  }
  _getLayers(e5) {
    const t4 = new V();
    return this._collectLayers(e5, t4), this._collectLayers(e5.ground, t4), t4;
  }
  _collectLayers(e5, t4) {
    e5.layers.forEach((e6) => {
      e6.persistenceEnabled && (t4.add(e6), "layers" in e6 && this._collectLayers(e6, t4));
    });
  }
  async _loadLayersWithSublayerVisibility(e5) {
    this.visibleLayers && await Promise.allSettled(this._getLayers(e5.map).items.map((e6) => {
      var _a;
      const t4 = (_a = this.visibleLayers.find((t5) => t5.id === e6.id)) == null ? void 0 : _a.sublayerIds;
      return t4 ? e6.load() : null;
    }));
  }
  _applyLayerVisibility(e5) {
    if (!this.visibleLayers)
      return;
    this._getLayers(e5.map).forEach((e6) => {
      const t4 = this.visibleLayers.find((t5) => t5.id === e6.id);
      e6.visible = null != t4;
      const i12 = t4 == null ? void 0 : t4.sublayerIds, n13 = B(e6);
      i12 && n13 && n13.forEach((e7) => e7.visible = i12.includes(e7.id));
    });
  }
  async _setViewpointOfInterest(e5, t4) {
    if (e5.state.fixedContentCamera || !this.viewpoint || (t4 == null ? void 0 : t4.ignoreViewpoint) || !(t4 == null ? void 0 : t4.useDestinationCamera))
      return false;
    const { toCameraAsync: i12 } = await import("./viewpointUtils-ZFEFUUWY.js"), n13 = await i12(e5, this.viewpoint);
    return e5.contentCamera = n13, null != n13;
  }
  async _applyViewpoint(e5, t4) {
    if (this._applyCachedCameraTrackingEnabled(e5), this.viewpoint && !t4.ignoreViewpoint) {
      null != this.viewpoint.camera && (this.viewpoint.camera.fov = e5.camera.fov);
      const i12 = this.environment.lighting;
      if (t4.animate && "sun" === i12.type && i12.date)
        return this._animateToLighting(e5, t4);
      t4.animate && (e5.environment.applyLighting(i12.clone()), await e5.goTo(this.viewpoint, t4)), e5.viewpoint = this.viewpoint;
    }
    e5.environment.applyLighting(this.environment.lighting.clone());
  }
  async _animateToLighting(e5, t4) {
    let i12 = null;
    "virtual" !== e5.environment.lighting.type && "virtual" !== this.environment.lighting.type && ("global" === e5.viewingMode && (i12 = this._animateLightingWithCamera(e5, e5.environment.lighting, this.environment.lighting)), e5.environment.cachedCameraTrackingEnabled = e5.environment.lighting.cameraTrackingEnabled, e5.environment.lighting.cameraTrackingEnabled = false), e5.environment.lighting.directShadowsEnabled = this.environment.lighting.directShadowsEnabled, "virtual" === this.environment.lighting.type || "virtual" === e5.environment.lighting.type ? (e5.environment.applyLighting(this.environment.lighting.clone()), "virtual" !== e5.environment.lighting.type && (e5.environment.cachedCameraTrackingEnabled = e5.environment.lighting.cameraTrackingEnabled, e5.environment.lighting.cameraTrackingEnabled = false)) : null != this.environment.lighting.displayUTCOffset && (e5.environment.lighting.displayUTCOffset = this.environment.lighting.displayUTCOffset);
    return e5.goTo(this.viewpoint, t4).then(() => {
      this._applyCachedCameraTrackingEnabled(e5), e5.environment.applyLighting(this.environment.lighting.clone());
    }).catch((t5) => {
      throw null == e5.animation && this._applyCachedCameraTrackingEnabled(e5), t5;
    }).finally(() => {
      l(i12);
    });
  }
  _applyCachedCameraTrackingEnabled(e5) {
    null != e5.environment.cachedCameraTrackingEnabled && (e5.environment.lighting.cameraTrackingEnabled = e5.environment.cachedCameraTrackingEnabled, e5.environment.cachedCameraTrackingEnabled = null);
  }
  _getTime(e5) {
    return [e5.getTime(), 3600 * e5.getUTCHours() + 60 * e5.getUTCMinutes() + e5.getUTCSeconds()];
  }
  _setTime(e5, t4, i12) {
    return e5.setTime(t4), e5.setUTCHours(i12 / 3600), e5.setUTCMinutes(i12 % 3600 / 60), e5.setUTCSeconds(i12 % 3600 % 60), e5;
  }
  _animateLightingWithCamera(e5, t4, i12) {
    const n13 = new Date(t4.date.toString()), [r7, o4] = this._getTime(n13), [s6, a3] = this._getTime(i12.date), l6 = F3(o4, a3), p10 = e5.renderCoordsHelper, m4 = n3();
    p10.toRenderCoords(e5.camera.position, m4);
    const c7 = n3(), h2 = n3();
    null != this.viewpoint.camera && p10.toRenderCoords(this.viewpoint.camera.position, c7);
    const d5 = /* @__PURE__ */ new Date();
    return p(() => e5.camera, (e6) => {
      p10.toRenderCoords(e6.position, h2);
      const i13 = p2(m4, h2), n14 = p2(c7, h2);
      let a4 = 0;
      i13 + n14 !== 0 && (a4 = i13 / (i13 + n14));
      const u7 = r7 + (s6 - r7) * a4, y3 = G(o4, l6 * a4);
      t4.date = this._setTime(d5, u7, y3);
    });
  }
  static createFrom(e5, t4) {
    return new this().updateFrom(e5, t4);
  }
};
function B(e5) {
  if ("building-scene" === e5.type || "map-image" === e5.type)
    return e5.allSublayers.toArray();
}
function M(e5) {
  const t4 = B(e5);
  if (t4)
    return t4.filter((e6) => e6.visible).map((e6) => e6.id);
}
e([y({ type: String, json: { write: { isRequired: true } } })], q.prototype, "id", void 0), e([y({ type: c6, json: { default: () => new c6({ text: "" }), write: { isRequired: true } } })], q.prototype, "title", void 0), e([s2("title")], q.prototype, "castTitle", null), e([y({ type: c3, json: { write: { overridePolicy: (e5) => ({ enabled: !(!e5 || !e5.text) }) } } })], q.prototype, "description", void 0), e([s2("description")], q.prototype, "castDescription", null), e([y({ type: Boolean, nonNullable: true, json: { write: true, default: false } })], q.prototype, "hidden", void 0), e([y({ type: u4, json: { default: () => new u4({ url: "" }), write: { isRequired: true } } })], q.prototype, "thumbnail", void 0), e([s2("thumbnail")], q.prototype, "castThumbnail", null), e([y({ type: l3, nonNullable: true, json: { write: { isRequired: true } } })], q.prototype, "viewpoint", void 0), e([y({ type: F2, json: { read: { source: "baseMap" }, write: { target: "baseMap" } } })], q.prototype, "basemap", void 0), e([s2("basemap")], q.prototype, "castBasemap", null), e([y({ type: u5, json: { write: true } })], q.prototype, "ground", void 0), e([y({ type: A2, json: { write: { isRequired: true } } })], q.prototype, "visibleLayers", null), e([s2("visibleLayers")], q.prototype, "castVisibleLayers", null), e([y({ type: h, json: { write: true } })], q.prototype, "environment", void 0), q = e([a2("esri.webscene.Slide")], q);
var O = 86400;
var P2 = 43200;
function F3(e5, t4) {
  let i12 = t4 - e5;
  return i12 > P2 && (i12 -= O), i12 < -P2 && (i12 += O), i12;
}
function G(e5, t4) {
  return d3(e5 + t4, O);
}
var W = q;

// node_modules/@arcgis/core/webscene/Presentation.js
var n11 = V.ofType(W);
var m3 = class extends f {
  constructor(s6) {
    super(s6), this.slides = new n11();
  }
  destroy() {
    this.slides.forEach((s6) => s6.destroy()), this.slides.removeAll();
  }
  set slides(s6) {
    s6 && (s6 = s6.filter((s7) => !!s7.viewpoint)), this._set("slides", n4(s6, this._get("slides"), n11));
  }
  clone() {
    return new (0, this.constructor)({ slides: this.slides.clone() });
  }
};
e([y({ type: n11, nonNullable: true, json: { write: true } }), s2(t)], m3.prototype, "slides", null), m3 = e([a2("esri.webscene.Presentation")], m3);
var d4 = m3;

// node_modules/@arcgis/core/webscene/TransportationNetwork.js
var s5;
var p9 = s5 = class extends f {
  constructor(t4) {
    super(t4);
  }
  clone() {
    return new s5({ name: this.name, path: this.path, title: this.title });
  }
};
e([y({ type: String, json: { write: true } })], p9.prototype, "name", void 0), e([y({ type: String, json: { write: true } })], p9.prototype, "path", void 0), e([y({ type: String, json: { write: true } })], p9.prototype, "title", void 0), p9 = s5 = e([a2("esri.webscene.TransportationNetwork")], p9);
var i11 = p9;

// node_modules/@arcgis/core/webscene/Version.js
var e4 = class extends r4 {
  constructor(s6, e5) {
    super(s6, e5, "webscene");
  }
  get supportsGround() {
    return this.since(1, 8);
  }
  get supportsVisibleElevationLayersInSlides() {
    return this.lessThan(1, 8);
  }
};

// node_modules/@arcgis/core/webscene/support/schemaValidatorLoader.js
var n12 = null;
function u6() {
  return n12;
}

// node_modules/@arcgis/core/WebScene.js
var re;
var ie = new e4(1, 34);
var oe = () => {
  const e5 = 8, t4 = [], r7 = ie.major;
  for (let i12 = e5; i12 <= ie.minor; i12++)
    t4.push(`${r7}.${i12}`);
  return t4;
};
var se = "Web Scene";
var ae = class extends m.LoadableMixin(n2(S2(L))) {
  constructor(e5) {
    super(e5), this[re] = true, this._layersIdGCTimeoutId = void 0, this._updateFromPromise = null, this.applicationProperties = null, this.clippingArea = null, this.clippingEnabled = false, this.floorInfo = null, this.heightModelInfo = void 0, this.sourceVersion = null, this.transportationNetworks = null, this.presentation = new d4(), this.initialViewProperties = new l5(), this.portalItem = null, this.resourceInfo = null, this._debouncedSaveOperations = k(async (e6, t4, r7) => {
      switch (e6) {
        case A.SAVE:
          return this._saveImpl(t4);
        case A.SAVE_AS:
          return this._saveAsImpl(r7, t4);
      }
    }), this._resourceReferences = { portalItem: null, paths: [] }, this.authoringApp = null, this.authoringAppVersion = null, this._isAuthoringAppSetByUser = false, this._isAuthoringAppVersionSetByUser = false;
  }
  initialize() {
    if (this.when().catch((e5) => {
      n.getLogger(this).error("#load()", "Failed to load web scene", e5);
    }), this.resourceInfo) {
      let t4;
      try {
        t4 = this._validateJSON(this.resourceInfo);
      } catch (e5) {
        return void this.addResolvingPromise(Promise.reject(e5));
      }
      this.read(t4), this.addResolvingPromise(this._validateSpatialReference()), this.addResolvingPromise(this._validateHeightModelInfo());
    }
    this.addHandles(v(() => this.allLayers, "change", () => this._scheduleLayersIdGC()));
  }
  destroy() {
    this._unscheduleLayersIdGC(), this.presentation && this.presentation.destroy(), this.portalItem = u(this.portalItem);
  }
  writeClippingArea(e5, t4) {
    t4.clippingArea || (t4.clippingArea = {}), t4.clippingArea.geometry = e5.toJSON();
  }
  readClippingEnabled(e5, t4) {
    return !!t4.clippingArea && !!t4.clippingArea.clip;
  }
  writeClippingEnabled(e5, t4) {
    this.clippingArea && (t4.clippingArea || (t4.clippingArea = {}), t4.clippingArea.clip = e5);
  }
  writeLayers(e5, t4, r7, i12) {
    t4[r7] = this._layersToJSON(e5, "operational-layers", i12);
  }
  readSourceVersion(e5, t4) {
    const [r7, i12] = t4.version.split(".");
    return new e4(parseInt(r7, 10), parseInt(i12, 10));
  }
  writeSourceVersion(e5, t4, r7) {
    t4[r7] = `${ie.major}.${ie.minor}`;
  }
  writeTables(e5, t4, r7, i12) {
    const o4 = this._layersToJSON(e5, "tables", i12);
    o4.length && (t4[r7] = o4);
  }
  get thumbnailUrl() {
    var _a;
    return ((_a = this.portalItem) == null ? void 0 : _a.thumbnailUrl) ?? null;
  }
  set thumbnailUrl(e5) {
    e5 ? this._override("thumbnailUrl", e5) : (this._clearOverride("thumbnailUrl"), this.clear("thumbnailUrl", "user"));
  }
  set authoringApp(e5) {
    this._isAuthoringAppSetByUser = true, this._set("authoringApp", e5);
  }
  writeAuthoringApp(e5, t4) {
    e5 && this._isAuthoringAppSetByUser ? t4.authoringApp = e5 : t4.authoringApp = "ArcGIS API for JavaScript";
  }
  set authoringAppVersion(e5) {
    this._isAuthoringAppVersionSetByUser = true, this._set("authoringAppVersion", e5);
  }
  writeAuthoringAppVersion(e5, r7) {
    e5 && this._isAuthoringAppVersionSetByUser ? r7.authoringAppVersion = e5 : r7.authoringAppVersion = r2;
  }
  writeGround(e5, t4, r7, i12) {
    t4[r7] = e5 ? e5.write({}, i12) : { transparency: 0, layers: [] };
  }
  readInitialViewProperties(e5, t4) {
    var _a, _b;
    const r7 = {};
    return ((_a = t4.initialState) == null ? void 0 : _a.environment) && (r7.environment = b5.fromJSON(t4.initialState.environment)), r7.spatialReference = t4.spatialReference ? f2.fromJSON(t4.spatialReference) : f2.WebMercator, r7.viewingMode = t4.viewingMode ?? "global", ((_b = t4.initialState) == null ? void 0 : _b.viewpoint) && (r7.viewpoint = l3.fromJSON(t4.initialState.viewpoint)), new l5(r7);
  }
  get spatialReference() {
    var _a;
    return ((_a = this.initialViewProperties) == null ? void 0 : _a.spatialReference) ?? f2.WebMercator;
  }
  get viewingMode() {
    var _a;
    return ((_a = this.initialViewProperties) == null ? void 0 : _a.viewingMode) ?? "global";
  }
  load(e5) {
    const t4 = this.ground;
    return this.addResolvingPromise(this._loadFromSource().then(() => {
      t4 && t4 !== this.ground && t4.destroy();
    })), Promise.resolve(this);
  }
  loadAll() {
    return t2(this, (e5) => {
      const t4 = this.presentation && this.presentation.slides;
      e5(this.ground, this.basemap, this.layers, t4 && t4.map((e6) => e6.basemap), this.tables);
    });
  }
  read(e5, t4) {
    var _a;
    t4 = { ...t4, origin: "web-scene" };
    const r7 = this._isAuthoringAppVersionSetByUser, i12 = this._isAuthoringAppSetByUser;
    if (d2(this, e5, (t5) => super.read(e5, t5), t4), i12 || (this._isAuthoringAppSetByUser = false), r7 || (this._isAuthoringAppVersionSetByUser = false), e5.baseMap && Array.isArray(e5.baseMap.elevationLayers) && ((_a = this.sourceVersion) == null ? void 0 : _a.supportsVisibleElevationLayersInSlides)) {
      const t5 = e5.baseMap.elevationLayers.map((e6) => ({ id: e6.id })), r8 = this.presentation.slides, i13 = (e6, t6) => e6.visibleLayers.some((e7) => e7.id === t6), o4 = t5.filter((e6) => !r8.some((t6) => i13(t6, e6.id)));
      r8.forEach((e6) => {
        e6.visibleLayers.addMany(o4);
      });
    }
  }
  _writeBasemapElevationLayers(e5) {
    var _a;
    const t4 = (_a = e5.ground) == null ? void 0 : _a.layers;
    !e5.baseMap && (t4 == null ? void 0 : t4.length) && (e5.baseMap = { title: "Basemap", baseMapLayers: [] }), e5.baseMap && (e5.baseMap.elevationLayers = a(t4));
  }
  _layersToJSON(e5, t4, r7) {
    const i12 = { ...r7, layerContainerType: t4 };
    return e5.map((e6) => this._verifyWritableLayer(e6, r7) ? e6.write({}, i12) : null).filter((e6) => !!e6).toArray();
  }
  _verifyWritableLayer(e5, t4) {
    return !!e5.persistenceEnabled && ("write" in e5 || ((t4 == null ? void 0 : t4.messages) && t4.messages.push(new s("layer:unsupported", `Layers (${e5.title}, ${e5.id}) of type '${e5.declaredClass}' cannot be persisted in web scenes`, { layer: e5 })), false));
  }
  write(e5, t4) {
    var _a;
    if ("loaded" !== this.loadStatus) {
      const e6 = new s("webscene:not-loaded", "Web scene must be loaded before it can be serialized");
      throw n.getLogger(this).error("#toJSON()", "Web scene must be loaded before it can be serialized", this.loadError || this.loadStatus), e6;
    }
    this._runLayersIdGC();
    const r7 = !(t4 == null ? void 0 : t4.messages);
    t4 = { messages: [], ...t4, origin: "web-scene" };
    const i12 = super.write(e5, t4);
    if (r7) {
      const e6 = ((_a = t4.messages) == null ? void 0 : _a.filter((e7) => "web-document-write:property-required" === e7.name)) ?? [];
      if (e6.length) {
        const t5 = new s("web-document:property-required", "One or more properties that are required in the webscene JSON are missing, see details for the specific errors", { errors: e6 });
        throw n.getLogger(this).error("#toJSON()", "One or more properties that are required in the webscene JSON are missing", e6), t5;
      }
    }
    return this._writeBasemapElevationLayers(i12), i12;
  }
  async save(e5) {
    return this._debouncedSaveOperations(A.SAVE, e5);
  }
  async _saveImpl(e5) {
    var _a;
    if (!this.portalItem)
      throw new s("webscene:portal-item-not-set", "Portal item to save to has not been set on the WebScene");
    if (i2(this.portalItem), ((_a = this.portalItem) == null ? void 0 : _a.type) !== se)
      throw new s("webscene:portal-item-wrong-type", `Portal item needs to have type "${se}"`);
    const t4 = this._updateFromPromise;
    await this._ensureLoadBeforeSave();
    const r7 = this._enableVerifyItemRelativeUrls(o2(this.portalItem, "web-scene", true)), i12 = this.write({}, r7);
    return await Promise.all(r7.resources.pendingOperations), await this._verifySave(i12, r7, e5), this._updateTypeKeywords(this.portalItem), await n6(this.portalItem, i12, this._resourceReferences, r7), i(r7), t4 && await t4, await this._saveThumbnail(), this.portalItem;
  }
  async saveAs(e5, t4) {
    return this._debouncedSaveOperations(A.SAVE_AS, t4, e5);
  }
  async _saveAsImpl(e5, t4) {
    let r7 = S.from(e5);
    if (!r7)
      throw new s("webscene:portal-item-required", "saveAs requires a portal item to save to");
    i2(r7), r7.id && (r7 = r7.clone(), r7.id = null);
    const i12 = r7.portal || Q.getDefault();
    await this._ensureLoadBeforeSave(), r7.type = se, r7.portal = i12;
    const o4 = this._enableVerifyItemRelativeUrls(o2(r7, "web-scene", true)), a3 = this.write({}, o4);
    await Promise.all(o4.resources.pendingOperations), await this._verifySaveAs(a3, o4, t4);
    const n13 = this.thumbnailUrl, l6 = !this._isOverridden("thumbnailUrl");
    if (this._updateTypeKeywords(r7), await i12.signIn(), !i12.user)
      throw new s("webscene:user-not-signed-in", "saveAs requires a user to be signed in to the portal");
    return await i12.user.addItem({ item: r7, folder: t4 == null ? void 0 : t4.folder, data: a3 }), await p3(this._resourceReferences, o4), this.portalItem = r7, m2.prototype.read.call(this, { version: a3.version, authoringApp: a3.authoringApp, authoringAppVersion: a3.authoringAppVersion }, { name: "web-scene", ignoreDefaults: true, url: r7.itemUrl ? I(r7.itemUrl) : void 0 }), i(o4), n13 && (this.thumbnailUrl = l6 ? kt(n13, "w", "8192") : n13), o4.portalItem = r7, await this._saveThumbnail(), r7;
  }
  async _saveThumbnail() {
    var _a;
    this._isOverridden("thumbnailUrl") && (await ((_a = this.portalItem) == null ? void 0 : _a.updateThumbnail({ thumbnail: this.thumbnailUrl })), this._clearOverride("thumbnailUrl"), this.clear("thumbnailUrl", "user"));
  }
  async _verifySave(e5, t4, r7, i12 = false) {
    if (!P(this.spatialReference))
      throw new s("webscene:unsupported-spatial-reference", "Webscenes using spatial reference systems from Mars or Moon can not be saved currently.");
    const { ignoreUnsupported: o4, requiredPropertyChecksDisabled: a3, strictSchemaValidationEnabled: n13 } = r7 || {};
    t3(t4, { errorName: "webscene:save" }, { ignoreUnsupported: o4, supplementalUnsupportedErrors: ["scenemodification:unsupported"], requiredPropertyChecksDisabled: a3 });
    const l6 = u6();
    if (n13 && l6) {
      const t5 = (await l6()).validate(e5);
      if (!t5.length)
        return;
      const r8 = `webscene did not validate:
${t5.join("\n")}`;
      n.getLogger(this).error(`${i12 ? "saveAs" : "save"}(): ${r8}`);
      const o5 = t5.map((e6) => new s("webscene:schema-validation", e6));
      throw s3(o5);
    }
  }
  _verifySaveAs(e5, t4, r7) {
    return this.canNotSaveAs(t4) ? Promise.reject(n9()) : this._verifySave(e5, t4, r7, true);
  }
  verifySaveAs(e5) {
    const t4 = this._enableVerifyItemRelativeUrls({ origin: "web-scene", messages: [] }), r7 = this.write({}, t4);
    return this._verifySaveAs(r7, t4, e5);
  }
  canNotSaveAs(e5) {
    var _a, _b;
    return e5 || (e5 = this._enableVerifyItemRelativeUrls({ origin: "web-scene", messages: [] }), this.write({}, e5)), (((_b = (_a = e5.verifyItemRelativeUrls) == null ? void 0 : _a.writtenUrls) == null ? void 0 : _b.length) ?? 0) > 0;
  }
  async updateFrom(e5, t4 = {}) {
    const r7 = this._updateFrom(e5, t4);
    this._updateFromPromise = r7, await r7;
    this._updateFromPromise === r7 && (this._updateFromPromise = null);
  }
  async _updateFrom(e5, t4 = {}) {
    if (await e5.whenReady(), !t4.environmentExcluded && e5.environment && (this.initialViewProperties.environment = b5.prototype.clone.apply(e5.environment)), !t4.viewpointExcluded && e5.viewpoint && (this.initialViewProperties.viewpoint = e5.viewpoint.clone()), this.initialViewProperties.spatialReference = e5.spatialReference.clone(), this.initialViewProperties.viewingMode = e5.viewingMode, null != e5.clippingArea ? e5.clippingArea !== this.clippingArea && (this.clippingArea = e5.clippingArea.clone(), this.clippingEnabled = true) : this.clippingEnabled = false, e5.heightModelInfo && (this.heightModelInfo = e5.heightModelInfo.clone()), e5.map === this)
      for (const r7 of e5.allLayerViews) {
        const e6 = "visible";
        e6 in r7 && e6 in r7.layer && r7._isOverridden(e6) && (r7.layer[e6] = r7[e6]);
      }
    (false === t4.thumbnailExcluded || null == t4.thumbnailExcluded && !t4.viewpointExcluded) && await this._updateFromThumbnail(e5, t4.thumbnailSize ?? void 0);
  }
  async _updateFromThumbnail(e5, t4) {
    const r7 = i6(e5, t4), i12 = await e5.takeScreenshot({ format: "jpg", width: r7.width, height: r7.height, disableDecorations: true });
    this.thumbnailUrl = i12.dataUrl;
  }
  _loadFromSource() {
    var _a;
    return this.resourceInfo ? this._loadFromJSON(this.resourceInfo, { origin: "web-scene" }) : ((_a = this.portalItem) == null ? void 0 : _a.id) ? this._loadFromItem(this.portalItem) : this._loadObjectsWithLayers();
  }
  _readAndLoadFromJSON(e5, t4) {
    const r7 = this._validateJSON(e5);
    return this.read(r7, t4), this._loadFromJSON(r7, t4);
  }
  _extractOperationalLayers(e5) {
    var _a;
    const t4 = [];
    if (!((_a = this.sourceVersion) == null ? void 0 : _a.supportsGround) && e5.baseMap && Array.isArray(e5.baseMap.elevationLayers))
      for (const o4 of e5.baseMap.elevationLayers)
        t4.push(o4);
    const r7 = [], i12 = (e6) => {
      var _a2;
      return e6.layers && (e6.layers = e6.layers.filter(i12)), "ArcGISTiledElevationServiceLayer" !== e6.layerType || (((_a2 = this.sourceVersion) == null ? void 0 : _a2.supportsGround) || r7.push(e6), false);
    };
    return { operationalLayers: e5.operationalLayers ? e5.operationalLayers.filter(i12) : [], operationalElevationLayers: r7, basemapElevationLayers: t4 };
  }
  async _loadFromJSON(e5, t4) {
    var _a;
    const r7 = new V();
    await this._validateSpatialReference(), await this._validateHeightModelInfo();
    const { populateOperationalLayers: i12 } = await import("./layersCreator-SR6BJJA3.js"), { operationalLayers: s6, operationalElevationLayers: a3, basemapElevationLayers: n13 } = this._extractOperationalLayers(e5), l6 = [], p10 = { context: { ...t4, layerContainerType: "operational-layers" } };
    if (this.portalItem && (p10.context.portal = this.portalItem.portal || Q.getDefault()), n13.length > 0) {
      const e6 = { ...p10, context: { ...p10.context, layerContainerType: "ground" } };
      e6.defaultLayerType = "ArcGISTiledElevationServiceLayer", l6.push(i12(this.ground.layers, n13, e6));
    }
    if (a3.length > 0) {
      const e6 = { ...p10, context: { ...p10.context, layerContainerType: "ground" } };
      e6.defaultLayerType = "ArcGISTiledElevationServiceLayer", l6.push(i12(r7, a3, e6));
    }
    s6 && s6.length > 0 && l6.push(i12(this.layers, s6, p10)), ((_a = e5.tables) == null ? void 0 : _a.length) && l6.push(i12(this.tables, e5.tables, { ...p10, context: { ...p10.context, layerContainerType: "tables" }, defaultLayerType: "ArcGISFeatureLayer" })), await Promise.allSettled(l6), await this._loadObjectsWithLayers(), this.ground.layers.addMany(r7);
  }
  async _ensureLoadBeforeSave() {
    await this.load(), await this._loadObjectsWithLayers();
    const e5 = [], t4 = [...this.allLayers.items];
    for (const { basemap: r7 } of this.presentation.slides.items)
      r7 && (t4.push(...r7.baseLayers.items), t4.push(...r7.referenceLayers.items));
    for (const r7 of t4)
      if ("beforeSave" in r7 && "function" == typeof r7.beforeSave) {
        const t5 = r7.beforeSave();
        t5 && e5.push(t5);
      }
    await Promise.allSettled(e5);
  }
  async _loadObjectsWithLayers() {
    const e5 = [];
    this.ground && e5.push(this.ground.load()), this.basemap && e5.push(this.basemap.load()), this.presentation.slides.forEach((t4) => {
      t4.basemap && e5.push(t4.basemap.load());
    }), await Promise.allSettled(e5);
  }
  async _loadFromItem(e5) {
    if (await e5.load().catch((e6) => {
      throw new s("webscene:load-portal-item", "Failed to load portal item", { error: e6 });
    }), "Web Scene" !== e5.type)
      throw new s("webscene:invalid-portal-item", "Invalid portal item type '${type}', expected 'Web Scene'", { type: e5.type });
    const t4 = await e5.fetchData();
    this.resourceInfo = t4;
    const r7 = { origin: "web-scene", url: I(e5.itemUrl), portal: e5.portal || Q.getDefault(), portalItem: e5, readResourcePaths: [] };
    await this._readAndLoadFromJSON(t4, r7), this._resourceReferences = { portalItem: e5, paths: r7.readResourcePaths ?? [] };
  }
  _validateSpatialReference() {
    const e5 = this.initialViewProperties, t4 = this._sceneSpatialReference;
    let r7;
    if ("local" !== e5.viewingMode) {
      if (!r5(t4, l2.Global))
        return Promise.reject(new s("webscene:unsupported-spatial-reference", "Unsupported spatial reference (${spatialReference.wkid}) in global mode, only Web Mercator, WGS84 GCS or CGCS2000 are supported", { spatialReference: t4, viewingMode: e5.viewingMode }));
      r7 = (e6) => !e6 || F(e6, t4);
    } else {
      if (!r5(t4, l2.Local))
        return Promise.reject(new s("webscene:unsupported-spatial-reference", "Unsupported spatial reference (${spatialReference.wkid}) in local mode, only projected coordinate systems are supported", { spatialReference: t4, viewingMode: e5.viewingMode }));
      r7 = (e6) => !e6 || e6.equals(t4);
    }
    const i12 = (e6) => {
      var _a, _b;
      return ((_a = e6 == null ? void 0 : e6.camera) == null ? void 0 : _a.position.spatialReference) ?? ((_b = e6 == null ? void 0 : e6.targetGeometry) == null ? void 0 : _b.spatialReference);
    }, o4 = e5.viewpoint, a3 = i12(o4);
    if (a3 && !r7(a3))
      return Promise.reject(new s("webscene:incompatible-camera-spatial-reference", "Camera spatial reference (${cameraSpatialReference.wkid}) is incompatible with the scene spatial reference (${sceneSpatialReference.wkid})", { cameraSpatialReference: a3, sceneSpatialReference: t4, viewingMode: e5.viewingMode }));
    const n13 = this.presentation.slides.find((e6) => !r7(i12(e6.viewpoint)));
    if (n13) {
      const r8 = i12(n13.viewpoint);
      return Promise.reject(new s("webscene:incompatible-slide-spatial-reference", "Slide spatial reference (${slideSpatialReference.wkid}) is incompatible with the scene spatial reference (${sceneSpatialReference.wkid})", { slideSpatialReference: r8, sceneSpatialReference: t4, viewingMode: e5.viewingMode }));
    }
    return Promise.resolve();
  }
  _validateHeightModelInfo() {
    const e5 = this._sceneSpatialReference, t4 = i3(this.heightModelInfo, e5);
    return t4 ? Promise.reject(t4) : Promise.resolve();
  }
  _validateJSON(e5) {
    const t4 = e4.parse(e5.version || "", "webscene");
    return ie.validate(t4), e5.version = `${t4.major}.${t4.minor}`, 1 === t4.major && t4.minor <= 2 && (e5.spatialReference = f2.WebMercator.toJSON()), e5;
  }
  _updateTypeKeywords(e5) {
    u3(e5, f3.LOCAL_SCENE, "local" === this.initialViewProperties.viewingMode), u3(e5, f3.DEVELOPER_BASEMAP, w4(this.basemap) || this.presentation.slides.some(({ basemap: e6 }) => !!e6 && w4(e6))), e5.typeKeywords && (e5.typeKeywords = e5.typeKeywords.filter((e6, t4, r7) => r7.indexOf(e6) === t4));
  }
  get _sceneSpatialReference() {
    return this.initialViewProperties.spatialReference || f2.WebMercator;
  }
  get _verifyItemRelativeRootPath() {
    var _a;
    return ((_a = this.portalItem) == null ? void 0 : _a.itemUrl) ? I(this.portalItem.itemUrl).path : null;
  }
  _enableVerifyItemRelativeUrls(e5) {
    const t4 = this._verifyItemRelativeRootPath;
    return t4 && (e5.verifyItemRelativeUrls = { rootPath: t4, writtenUrls: [] }), e5;
  }
  _unscheduleLayersIdGC() {
    this._layersIdGCTimeoutId && (clearTimeout(this._layersIdGCTimeoutId), this._layersIdGCTimeoutId = 0);
  }
  _scheduleLayersIdGC() {
    this._unscheduleLayersIdGC(), this._layersIdGCTimeoutId = setTimeout(() => {
      this._layersIdGCTimeoutId = 0, this._runLayersIdGC();
    }, 3e3);
  }
  _runLayersIdGC() {
    var _a, _b;
    this._unscheduleLayersIdGC();
    const e5 = (_b = (_a = this.applicationProperties) == null ? void 0 : _a.viewing) == null ? void 0 : _b.search, t4 = (e6) => this.allLayers.some((t5) => t5.id === e6 && t5.persistenceEnabled);
    e5 && e5.layers && (e5.layers = e5.layers.filter((e6) => t4(e6.id)));
    const r7 = this.presentation && this.presentation.slides;
    r7 && r7.forEach((e6) => {
      e6.visibleLayers && (e6.visibleLayers = e6.visibleLayers.filter((e7) => t4(e7.id)));
    });
  }
  static fromJSON(e5) {
    if (!e5)
      throw new s("webscene:empty-resource", "Expected a JSON resource but got nothing");
    return new this({ resourceInfo: e5 });
  }
};
re = e2, ae.version = `${ie.major}.${ie.minor}`, e([y({ type: c, json: { write: true } })], ae.prototype, "applicationProperties", void 0), e([y({ type: w3, json: { read: { source: "clippingArea.geometry", reader: y2 }, write: { target: "clippingArea.geometry" } } })], ae.prototype, "clippingArea", void 0), e([r("clippingArea")], ae.prototype, "writeClippingArea", null), e([y({ type: Boolean, json: { write: { target: "clippingArea.clip" } } })], ae.prototype, "clippingEnabled", void 0), e([o("clippingEnabled", ["clippingArea"])], ae.prototype, "readClippingEnabled", null), e([r("clippingEnabled")], ae.prototype, "writeClippingEnabled", null), e([y({ type: l4, json: { read: { source: "mapFloorInfo" }, write: { target: "mapFloorInfo" } } })], ae.prototype, "floorInfo", void 0), e([y({ type: v2, json: { write: true } })], ae.prototype, "heightModelInfo", void 0), e([y({ json: { write: { target: "operationalLayers", ignoreOrigin: true } } })], ae.prototype, "layers", void 0), e([r("layers")], ae.prototype, "writeLayers", null), e([y({ readOnly: true, type: e4, json: { type: oe(), write: { ignoreOrigin: true, target: "version", isRequired: true, overridePolicy: () => ({ enabled: true, allowNull: true, ignoreOrigin: true }) } } })], ae.prototype, "sourceVersion", void 0), e([o("sourceVersion", ["version"])], ae.prototype, "readSourceVersion", null), e([r("sourceVersion")], ae.prototype, "writeSourceVersion", null), e([y({ json: { read: false, write: { enabled: true, ignoreOrigin: true } } })], ae.prototype, "tables", void 0), e([r("tables")], ae.prototype, "writeTables", null), e([y()], ae.prototype, "thumbnailUrl", null), e([y({ type: String, json: { write: { writerEnsuresNonNull: true, ignoreOrigin: true } } })], ae.prototype, "authoringApp", null), e([r("authoringApp")], ae.prototype, "writeAuthoringApp", null), e([y({ type: String, json: { write: { writerEnsuresNonNull: true, ignoreOrigin: true } } })], ae.prototype, "authoringAppVersion", null), e([r("authoringAppVersion")], ae.prototype, "writeAuthoringAppVersion", null), e([y({ json: { write: { isRequired: true, allowNull: true, ignoreOrigin: true, enabled: true } } })], ae.prototype, "ground", void 0), e([r("ground")], ae.prototype, "writeGround", null), e([y({ type: V.ofType(i11), json: { write: true } })], ae.prototype, "transportationNetworks", void 0), e([y({ type: d4, nonNullable: true, json: { write: { ignoreOrigin: true, writer: (e5, t4, r7, i12) => {
  if (e5.slides && e5.slides.length > 0) {
    const r8 = { ...i12, isPresentation: true };
    t4.presentation = e5.write({}, r8);
  }
} } } })], ae.prototype, "presentation", void 0), e([y({ type: l5, nonNullable: true, json: { write: { target: "initialState", isRequired: true, ignoreOrigin: true }, default: () => new l5({ viewingMode: "global", spatialReference: f2.WebMercator }) } })], ae.prototype, "initialViewProperties", void 0), e([o("initialViewProperties", ["initialState.environment", "initialState.viewpoint", "spatialReference", "viewingMode"])], ae.prototype, "readInitialViewProperties", null), e([y({ type: f2, json: { read: false, write: { isRequired: true, ignoreOrigin: true } } })], ae.prototype, "spatialReference", null), e([y({ type: ["local", "global"], json: { read: false, write: { isRequired: true, ignoreOrigin: true } } })], ae.prototype, "viewingMode", null), e([y({ type: S })], ae.prototype, "portalItem", void 0), e([y()], ae.prototype, "resourceInfo", void 0), ae = e([a2("esri.WebScene")], ae);
var ne = ae;
export {
  ne as default
};
//# sourceMappingURL=WebScene-T55Z4L3A.js.map
