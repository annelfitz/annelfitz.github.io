import {
  m as m2
} from "./chunk-UXMZQA2H.js";
import "./chunk-V2LOXBCS.js";
import {
  u
} from "./chunk-NGAYW4TW.js";
import {
  t as t2
} from "./chunk-MASBINVZ.js";
import "./chunk-AD6XW3W5.js";
import {
  $
} from "./chunk-ES7G4AF5.js";
import "./chunk-SGCIDT4C.js";
import "./chunk-QXRPUAVL.js";
import "./chunk-M5UX4IRZ.js";
import "./chunk-2WUPZJUL.js";
import "./chunk-KN52PCW4.js";
import "./chunk-SFKZ25SS.js";
import "./chunk-NCZU5DB4.js";
import "./chunk-SMDSNUU2.js";
import "./chunk-XTY645DH.js";
import "./chunk-UIOX7MPV.js";
import "./chunk-HRDKP7QO.js";
import "./chunk-4UOHLZKX.js";
import "./chunk-VJ2I4VSQ.js";
import "./chunk-MCZ4QOSQ.js";
import "./chunk-6XTKBOD7.js";
import "./chunk-IUY6HBLC.js";
import "./chunk-BHOYA5LV.js";
import "./chunk-6RR3WN7W.js";
import "./chunk-TXCVD3YI.js";
import {
  O,
  c,
  f,
  g,
  j,
  m
} from "./chunk-B3DOIFRS.js";
import {
  O as O2
} from "./chunk-CEUXXR2I.js";
import "./chunk-SCRCLNT5.js";
import "./chunk-PGADGS3I.js";
import "./chunk-7FQYGAVT.js";
import "./chunk-QRQWG4D3.js";
import "./chunk-6ZDDHEYR.js";
import "./chunk-YQQSFFN3.js";
import "./chunk-32X2FZ3S.js";
import "./chunk-4IJED6JM.js";
import "./chunk-LGIO6OCK.js";
import "./chunk-C5EJV3NW.js";
import {
  t
} from "./chunk-XXIDOBRO.js";
import "./chunk-JL4LXZGM.js";
import "./chunk-O556EBAK.js";
import "./chunk-IJD65EMQ.js";
import "./chunk-4YGBWYMD.js";
import "./chunk-ZPU7GNG4.js";
import "./chunk-TNR6E67I.js";
import "./chunk-7O3VD45U.js";
import "./chunk-QREUCRQ4.js";
import "./chunk-YK3UMVCY.js";
import "./chunk-IQFWVTUJ.js";
import "./chunk-GB4RVOXH.js";
import "./chunk-JTUYA5FE.js";
import "./chunk-UNTQATE2.js";
import "./chunk-5YY6NZNY.js";
import "./chunk-DCBZOZ54.js";
import "./chunk-5IT6RVBX.js";
import "./chunk-N4HNOQVJ.js";
import "./chunk-MTQHYT7Y.js";
import "./chunk-JCP47SOM.js";
import "./chunk-CXCB57TE.js";
import "./chunk-IWO6JXL2.js";
import "./chunk-AVR3LWTZ.js";
import "./chunk-YUWVLORR.js";
import "./chunk-FFG7BDAP.js";
import "./chunk-I4SHZ6P5.js";
import "./chunk-DGRFM5OL.js";
import "./chunk-AOAT6HYL.js";
import "./chunk-JBU54P54.js";
import "./chunk-5LIYYE75.js";
import "./chunk-TLTAGTBA.js";
import "./chunk-2QPP5AGU.js";
import "./chunk-2C26DRKK.js";
import "./chunk-M4RFJU4F.js";
import "./chunk-WKVHVZW2.js";
import "./chunk-VIKID44H.js";
import "./chunk-RLZYC2LS.js";
import "./chunk-3AIILHI5.js";
import "./chunk-JKLFCJPR.js";
import "./chunk-BSPKLAHD.js";
import "./chunk-VS6AHHIY.js";
import "./chunk-BFOJPIF7.js";
import "./chunk-3JC3OUNW.js";
import "./chunk-RO3CTAP7.js";
import "./chunk-GKMVTGGM.js";
import "./chunk-XGTCDM4C.js";
import "./chunk-QNG4TY7L.js";
import "./chunk-VEYMN5N3.js";
import "./chunk-W5ALAOW2.js";
import "./chunk-FHDHOWK5.js";
import "./chunk-Y546C2O5.js";
import "./chunk-BDRVHR2K.js";
import "./chunk-ZLQTPFTL.js";
import "./chunk-HZSGATFT.js";
import "./chunk-AKEHDP75.js";
import "./chunk-5MMGIT64.js";
import "./chunk-ERD6I7QP.js";
import "./chunk-Z3NX5DTX.js";
import "./chunk-J4RP32NG.js";
import "./chunk-6NLHKXEW.js";
import "./chunk-G7YFDDME.js";
import "./chunk-PCKG3UTS.js";
import "./chunk-3VMVD66K.js";
import "./chunk-QYC3GV65.js";
import "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import "./chunk-I2X6UR6L.js";
import {
  l
} from "./chunk-CYVKDANA.js";
import "./chunk-5JYVZQZR.js";
import "./chunk-LSM34QAB.js";
import "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-545NO6M2.js";
import "./chunk-5LSHHVQ5.js";
import "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import {
  P,
  d
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  e as e2
} from "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import "./chunk-7RBRCL6S.js";
import {
  k
} from "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/views/2d/layers/RouteLayerView2D.js
var j2 = ["route-info", "direction-line", "direction-point", "polygon-barrier", "polyline-barrier", "point-barrier", "stop"];
var M = { graphic: null, property: null, oldValue: null, newValue: null };
function V2(t3) {
  return t3 instanceof m || t3 instanceof c || t3 instanceof O || t3 instanceof f || t3 instanceof j || t3 instanceof g || t3 instanceof O2;
}
function G(t3) {
  return V.isCollection(t3) && t3.length && V2(t3.at(0));
}
function I(t3) {
  return Array.isArray(t3) && t3.length > 0 && V2(t3[0]);
}
var v = class extends m2(u) {
  constructor() {
    super(...arguments), this._graphics = new V(), this._highlightIds = /* @__PURE__ */ new Map(), this._networkFeatureMap = /* @__PURE__ */ new Map(), this._networkGraphicMap = /* @__PURE__ */ new Map();
  }
  get _routeItems() {
    return new l({ getCollections: () => null == this.layer || this.destroyed ? [] : [null != this.layer.routeInfo ? new V([this.layer.routeInfo]) : null, this.layer.directionLines, this.layer.directionPoints, this.layer.polygonBarriers, this.layer.polylineBarriers, this.layer.pointBarriers, this.layer.stops] });
  }
  initialize() {
    this._updatingHandles.addOnCollectionChange(() => this._routeItems, (t3) => this._routeItemsChanged(t3), P);
  }
  destroy() {
    var _a;
    this._networkFeatureMap.clear(), this._networkGraphicMap.clear(), this._graphics.removeAll(), (_a = this._get("_routeItems")) == null ? void 0 : _a.destroy();
  }
  attach() {
    this._createGraphicsView();
  }
  detach() {
    this._destroyGraphicsView();
  }
  async fetchPopupFeaturesAtLocation(t3, e3) {
    return this._graphicsView.hitTest(t3).filter(({ popupTemplate: t4 }) => !!t4);
  }
  highlight(t3) {
    let r;
    r = V2(t3) ? [this._getNetworkFeatureUid(t3)] : I(t3) ? t3.map((t4) => this._getNetworkFeatureUid(t4)) : G(t3) ? t3.map((t4) => this._getNetworkFeatureUid(t4)).toArray() : [t3.uid];
    const i = r.filter(k);
    return i.length ? (this._addHighlight(i), e2(() => this._removeHighlight(i))) : e2();
  }
  async hitTest(t3, r) {
    if (this.suspended)
      return null;
    const i = this._graphicsView.hitTest(t3).filter(k).map((t4) => this._networkGraphicMap.get(t4));
    if (!i.length)
      return null;
    const { layer: s } = this;
    return i.reverse().map((e3) => ({ type: "route", layer: s, mapPoint: t3, networkFeature: e3 }));
  }
  isUpdating() {
    return this._graphicsView.updating;
  }
  moveEnd() {
  }
  update(t3) {
    this._graphicsView.processUpdate(t3);
  }
  viewChange() {
    this._graphicsView.viewChange();
  }
  _addHighlight(t3) {
    for (const e3 of t3)
      if (this._highlightIds.has(e3)) {
        const t4 = this._highlightIds.get(e3);
        this._highlightIds.set(e3, t4 + 1);
      } else
        this._highlightIds.set(e3, 1);
    this._updateHighlight();
  }
  _createGraphic(t3) {
    const e3 = t3.toGraphic();
    return e3.layer = this.layer, e3.sourceLayer = this.layer, e3;
  }
  _createGraphicsView() {
    const t3 = this.view, e3 = () => this.requestUpdate(), r = new t2(t3.featuresTilingScheme);
    this._graphicsView = new $({ container: r, graphics: this._graphics, requestUpdateCallback: e3, view: t3 }), this.container.addChild(r), this._updateHighlight();
  }
  _destroyGraphicsView() {
    this.container.removeChild(this._graphicsView.container), this._graphicsView.destroy();
  }
  _getDrawOrder(t3) {
    const e3 = this._networkGraphicMap.get(t3);
    return j2.indexOf(e3.type);
  }
  _getNetworkFeatureUid(t3) {
    return this._networkFeatureMap.has(t3) ? this._networkFeatureMap.get(t3).uid : null;
  }
  _removeHighlight(t3) {
    for (const e3 of t3)
      if (this._highlightIds.has(e3)) {
        const t4 = this._highlightIds.get(e3) - 1;
        0 === t4 ? this._highlightIds.delete(e3) : this._highlightIds.set(e3, t4);
      }
    this._updateHighlight();
  }
  _routeItemsChanged(t3) {
    if (t3.removed.length) {
      this._graphics.removeMany(t3.removed.map((t4) => {
        const e3 = this._networkFeatureMap.get(t4);
        return this._networkFeatureMap.delete(t4), this._networkGraphicMap.delete(e3), e3;
      }));
      for (const e3 of t3.removed)
        this.removeHandles(e3);
    }
    if (t3.added.length) {
      this._graphics.addMany(t3.added.map((t4) => {
        const e3 = this._createGraphic(t4);
        return null == e3.symbol ? null : (this._networkFeatureMap.set(t4, e3), this._networkGraphicMap.set(e3, t4), e3);
      }).filter(k));
      for (const e3 of t3.added)
        this.addHandles([d(() => e3.geometry, (t4, r) => {
          this._updateGraphic(e3, "geometry", t4, r);
        }), d(() => e3.symbol, (t4, r) => {
          this._updateGraphic(e3, "symbol", t4, r);
        })], e3);
      this._graphics.sort((t4, e3) => this._getDrawOrder(t4) - this._getDrawOrder(e3));
    }
  }
  _updateGraphic(t3, e3, r, i) {
    if (!this._networkFeatureMap.has(t3)) {
      const e4 = this._createGraphic(t3);
      return this._networkFeatureMap.set(t3, e4), this._networkGraphicMap.set(e4, t3), void this._graphics.add(e4);
    }
    const s = this._networkFeatureMap.get(t3);
    s[e3] = r, M.graphic = s, M.property = e3, M.oldValue = i, M.newValue = r, this._graphicsView.graphicUpdateHandler(M);
  }
  _updateHighlight() {
    const t3 = Array.from(this._highlightIds.keys()), e3 = t("highlight");
    this._graphicsView.setHighlight(t3.map((t4) => ({ objectId: t4, highlightFlags: e3 })));
  }
};
e([y()], v.prototype, "_graphics", void 0), e([y()], v.prototype, "_routeItems", null), v = e([a("esri.views.2d.layers.RouteLayerView2D")], v);
var F = v;
export {
  F as default
};
//# sourceMappingURL=RouteLayerView2D-HYZO3FNN.js.map
