{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/AtmosphereCompositing.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{ScreenSpacePass as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{NoParameters as r,glsl as o}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as t}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as s}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";class a extends r{}function n(r){const a=new t;a.include(e),a.fragment.uniforms.add(new s(\"colorTexture\",(e=>e.color)),new s(\"depthTexture\",(e=>e.depth)));const n=r.haze;return a.fragment.code.add(o`\n    void main() {\n      ${n?o`vec4`:o`float`} depthSample = texture(depthTexture, uv) ${n?\"\":o`.r`};\n      if (depthSample ${n?o`== vec4(0)`:o`!= 1.0`} ) {\n          fragColor = vec4(0);\n          return;\n      }\n      fragColor = texture(colorTexture, uv);\n    }\n    `),a}const d=Object.freeze(Object.defineProperty({__proto__:null,AtmosphereCompositingPassParameters:a,build:n},Symbol.toStringTag,{value:\"Module\"}));export{a as A,d as a,n as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;AAIiZ,IAAM,IAAN,cAAgB,EAAC;AAAC;AAAC,SAASA,GAAE,GAAE;AAAC,QAAMC,KAAE,IAAIC;AAAE,EAAAD,GAAE,QAAQC,EAAC,GAAED,GAAE,SAAS,SAAS,IAAI,IAAI,EAAE,gBAAgB,OAAG,EAAE,KAAM,GAAE,IAAI,EAAE,gBAAgB,OAAG,EAAE,KAAM,CAAC;AAAE,QAAMD,KAAE,EAAE;AAAK,SAAOC,GAAE,SAAS,KAAK,IAAI;AAAA;AAAA,QAE9kBD,KAAE,UAAQ,QAAQ,4CAA4CA,KAAE,KAAG,KAAK;AAAA,wBACxDA,KAAE,gBAAc,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAM5C,GAAEC;AAAC;AAAC,IAAM,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,qCAAoC,GAAE,OAAMD,GAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["n", "a", "o"]
}
