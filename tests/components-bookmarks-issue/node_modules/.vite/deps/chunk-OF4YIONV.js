import {
  w
} from "./chunk-VTH4DAHQ.js";

// node_modules/@arcgis/core/layers/support/versionUtils.js
var t = [];
function e(e2, r) {
  if (w(e2.url ?? ""))
    return true;
  const { wkid: o } = r;
  for (const d of t) {
    if ((e2.version ?? 0) >= d[0])
      return true;
    if ("function" == typeof d[1] && (d[1] = d[1]()), d[1].has(o))
      return false;
  }
  return true;
}
t.push([10.91, () => {
  const d = /* @__PURE__ */ new Set([9709, 9716, 9741, 9761, 9766]);
  for (let t2 = 9712; t2 <= 9713; t2++)
    d.add(t2);
  for (let t2 = 9748; t2 <= 9749; t2++)
    d.add(t2);
  for (let t2 = 20904; t2 <= 20932; t2++)
    d.add(t2);
  for (let t2 = 21004; t2 <= 21032; t2++)
    d.add(t2);
  for (let t2 = 21207; t2 <= 21264; t2++)
    d.add(t2);
  for (let t2 = 21307; t2 <= 21364; t2++)
    d.add(t2);
  for (let t2 = 23301; t2 <= 23333; t2++)
    d.add(t2);
  for (let t2 = 102759; t2 <= 102760; t2++)
    d.add(t2);
  for (let t2 = 102934; t2 <= 102955; t2++)
    d.add(t2);
  return d;
}]), t.push([10.9, () => {
  const d = /* @__PURE__ */ new Set([9300, 9354, 9364, 9367, 9373, 9377, 9387, 9456, 9473, 9498, 9678, 9680, 29874, 103599, 103872, 104028]);
  for (let t2 = 9356; t2 <= 9360; t2++)
    d.add(t2);
  for (let t2 = 9404; t2 <= 9407; t2++)
    d.add(t2);
  for (let t2 = 9476; t2 <= 9482; t2++)
    d.add(t2);
  for (let t2 = 9487; t2 <= 9494; t2++)
    d.add(t2);
  for (let t2 = 9697; t2 <= 9699; t2++)
    d.add(t2);
  return d;
}]), t.push([10.81, () => {
  const d = /* @__PURE__ */ new Set([9265, 9333, 103598, 103699]);
  for (let t2 = 9248; t2 <= 9254; t2++)
    d.add(t2);
  for (let t2 = 9271; t2 <= 9273; t2++)
    d.add(t2);
  for (let t2 = 9284; t2 <= 9285; t2++)
    d.add(t2);
  for (let t2 = 21453; t2 <= 21463; t2++)
    d.add(t2);
  return d;
}]), t.push([10.8, () => {
  const d = /* @__PURE__ */ new Set([8088, 8395, 8428, 8433, 8531, 8687, 8692, 8694, 8699, 8900, 9003, 9006, 9009, 9012, 9017, 9191]);
  for (let t2 = 8035; t2 <= 8036; t2++)
    d.add(t2);
  for (let t2 = 8455; t2 <= 8456; t2++)
    d.add(t2);
  for (let t2 = 8518; t2 <= 8529; t2++)
    d.add(t2);
  for (let t2 = 8533; t2 <= 8536; t2++)
    d.add(t2);
  for (let t2 = 8538; t2 <= 8540; t2++)
    d.add(t2);
  for (let t2 = 8677; t2 <= 8679; t2++)
    d.add(t2);
  for (let t2 = 8902; t2 <= 8903; t2++)
    d.add(t2);
  for (let t2 = 8907; t2 <= 8910; t2++)
    d.add(t2);
  for (let t2 = 8949; t2 <= 8951; t2++)
    d.add(t2);
  for (let t2 = 8972; t2 <= 8987; t2++)
    d.add(t2);
  for (let t2 = 9039; t2 <= 9040; t2++)
    d.add(t2);
  for (let t2 = 9068; t2 <= 9069; t2++)
    d.add(t2);
  for (let t2 = 9140; t2 <= 9141; t2++)
    d.add(t2);
  for (let t2 = 9148; t2 <= 9150; t2++)
    d.add(t2);
  for (let t2 = 9153; t2 <= 9159; t2++)
    d.add(t2);
  for (let t2 = 9205; t2 <= 9218; t2++)
    d.add(t2);
  for (let t2 = 9221; t2 <= 9222; t2++)
    d.add(t2);
  for (let t2 = 54098; t2 <= 54101; t2++)
    d.add(t2);
  return d;
}]), t.push([10.71, () => {
  const d = /* @__PURE__ */ new Set([6316]);
  for (let t2 = 8351; t2 <= 8353; t2++)
    d.add(t2);
  for (let t2 = 9294; t2 <= 9297; t2++)
    d.add(t2);
  for (let t2 = 22619; t2 <= 22621; t2++)
    d.add(t2);
  for (let t2 = 103586; t2 <= 103594; t2++)
    d.add(t2);
  return d;
}]), t.push([10.7, () => {
  const d = /* @__PURE__ */ new Set([8387, 8391, 8427, 8545, 8682, 8685, 8818, 31370, 104022, 104024, 104975]);
  for (let t2 = 8065; t2 <= 8068; t2++)
    d.add(t2);
  for (let t2 = 8082; t2 <= 8083; t2++)
    d.add(t2);
  for (let t2 = 8379; t2 <= 8385; t2++)
    d.add(t2);
  for (let t2 = 8836; t2 <= 8840; t2++)
    d.add(t2);
  for (let t2 = 8857; t2 <= 8860; t2++)
    d.add(t2);
  for (let t2 = 53035; t2 <= 53037; t2++)
    d.add(t2);
  for (let t2 = 54090; t2 <= 54091; t2++)
    d.add(t2);
  for (let t2 = 102498; t2 <= 102499; t2++)
    d.add(t2);
  return d;
}]), t.push([10.61, () => /* @__PURE__ */ new Set([102497])]), t.push([10.6, () => {
  const d = /* @__PURE__ */ new Set([7803, 7805, 7887, 8086, 8232, 8237, 8240, 8246, 8249, 8252, 8255, 9019, 9391]);
  for (let t2 = 7755; t2 <= 7787; t2++)
    d.add(t2);
  for (let t2 = 7791; t2 <= 7795; t2++)
    d.add(t2);
  for (let t2 = 7799; t2 <= 7801; t2++)
    d.add(t2);
  for (let t2 = 7825; t2 <= 7831; t2++)
    d.add(t2);
  for (let t2 = 7877; t2 <= 7878; t2++)
    d.add(t2);
  for (let t2 = 7882; t2 <= 7883; t2++)
    d.add(t2);
  for (let t2 = 7991; t2 <= 7992; t2++)
    d.add(t2);
  for (let t2 = 8042; t2 <= 8043; t2++)
    d.add(t2);
  for (let t2 = 8058; t2 <= 8059; t2++)
    d.add(t2);
  for (let t2 = 8311; t2 <= 8348; t2++)
    d.add(t2);
  for (let t2 = 9060; t2 <= 9067; t2++)
    d.add(t2);
  for (let t2 = 102562; t2 <= 102568; t2++)
    d.add(t2);
  for (let t2 = 102799; t2 <= 102900; t2++)
    d.add(t2);
  return d;
}]);

export {
  e
};
//# sourceMappingURL=chunk-OF4YIONV.js.map
