{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/components/src/components/handle/resources.ts", "../../@esri/calcite-components/dist/components/src/components/handle/handle.scss?tag=calcite-handle&encapsulation=shadow", "../../@esri/calcite-components/dist/components/src/components/handle/handle.tsx"],
  "sourcesContent": ["export const CSS = {\n  handle: \"handle\",\n  handleSelected: \"handle--selected\",\n};\n\nexport const ICONS = {\n  drag: \"drag\",\n};\n\nexport const SUBSTITUTIONS = {\n  itemLabel: \"{itemLabel}\",\n  position: \"{position}\",\n  total: \"{total}\",\n};\n", ":host {\n  @apply flex;\n}\n\n.handle {\n  @apply focus-base\n    flex\n    items-center\n    justify-center\n    self-stretch\n    border-none\n    bg-transparent;\n  color: theme(\"borderColor.color.input\");\n  padding-block: theme(\"spacing.3\");\n  padding-inline: theme(\"spacing.1\");\n  line-height: 0;\n\n  calcite-icon {\n    color: inherit;\n  }\n}\n\n:host(:not([disabled])) .handle {\n  @apply cursor-move;\n  &:hover {\n    @apply bg-foreground-2 text-color-1;\n  }\n  &:focus {\n    @apply text-color-1 focus-inset;\n  }\n  &--selected {\n    @apply bg-foreground-3 text-color-1;\n  }\n}\n\n@include disabled();\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { HandleMessages } from \"./assets/handle/t9n\";\nimport { HandleChange, HandleNudge } from \"./interfaces\";\nimport { CSS, ICONS, SUBSTITUTIONS } from \"./resources\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\n\n@Component({\n  tag: \"calcite-handle\",\n  styleUrl: \"handle.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Handle implements LoadableComponent, T9nComponent, InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"messages\")\n  @Watch(\"label\")\n  @Watch(\"selected\")\n  @Watch(\"setPosition\")\n  @Watch(\"setSize\")\n  handleAriaTextChange(): void {\n    const message = this.getAriaText(\"live\");\n\n    if (message) {\n      this.calciteInternalAssistiveTextChange.emit({\n        message,\n      });\n    }\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Value for the button title attribute.\n   */\n  @Prop({ reflect: true }) dragHandle: string;\n\n  /**\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   */\n  @Prop() messages: HandleMessages;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setPosition: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setSize: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, disables unselecting the component when blurred.\n   *\n   * @internal\n   */\n  @Prop() blurUnselectDisabled = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  @Prop() messageOverrides: Partial<HandleMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectMessages(this);\n    connectLocalized(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectMessages(this);\n    disconnectLocalized(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteHandleElement;\n\n  handleButton: HTMLElement;\n\n  @State() effectiveLocale: string;\n\n  @State() defaultMessages: HandleMessages;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires whenever the component is selected or unselected.\n   *\n   */\n  @Event({ cancelable: false }) calciteHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the handle is selected and the up or down arrow key is pressed.\n   */\n  @Event({ cancelable: false }) calciteHandleNudge: EventEmitter<HandleNudge>;\n\n  /**\n   * Fires when the assistive text has changed.\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAssistiveTextChange: EventEmitter<HandleChange>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.handleButton?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private getTooltip(): string {\n    const { label, messages } = this;\n\n    if (!messages) {\n      return \"\";\n    }\n\n    if (!label) {\n      return messages.dragHandleUntitled;\n    }\n\n    return messages.dragHandle.replace(SUBSTITUTIONS.itemLabel, label);\n  }\n\n  getAriaText(type: \"label\" | \"live\"): string {\n    const { setPosition, setSize, label, messages, selected } = this;\n\n    if (!messages || !label || typeof setSize !== \"number\" || typeof setPosition !== \"number\") {\n      return null;\n    }\n\n    const text =\n      type === \"label\"\n        ? selected\n          ? messages.dragHandleChange\n          : messages.dragHandleIdle\n        : selected\n          ? messages.dragHandleActive\n          : messages.dragHandleCommit;\n\n    const replacePosition = text.replace(SUBSTITUTIONS.position, setPosition.toString());\n    const replaceLabel = replacePosition.replace(SUBSTITUTIONS.itemLabel, label);\n    return replaceLabel.replace(SUBSTITUTIONS.total, setSize.toString());\n  }\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.selected = !this.selected;\n        this.calciteHandleChange.emit();\n        event.preventDefault();\n        break;\n      case \"ArrowUp\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"up\" });\n        break;\n      case \"ArrowDown\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"down\" });\n        break;\n    }\n  };\n\n  handleBlur = (): void => {\n    if (this.blurUnselectDisabled || this.disabled) {\n      return;\n    }\n\n    if (this.selected) {\n      this.selected = false;\n      this.calciteHandleChange.emit();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      // Needs to be a span because of https://github.com/SortableJS/Sortable/issues/1486\n      <span\n        aria-disabled={this.disabled ? toAriaBoolean(this.disabled) : null}\n        aria-label={this.disabled ? null : this.getAriaText(\"label\")}\n        aria-pressed={this.disabled ? null : toAriaBoolean(this.selected)}\n        class={{ [CSS.handle]: true, [CSS.handleSelected]: !this.disabled && this.selected }}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n        role=\"button\"\n        tabIndex={this.disabled ? null : 0}\n        title={this.getTooltip()}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el): void => {\n          this.handleButton = el;\n        }}\n      >\n        <calcite-icon icon={ICONS.drag} scale=\"s\" />\n      </span>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["Handle"]
}
