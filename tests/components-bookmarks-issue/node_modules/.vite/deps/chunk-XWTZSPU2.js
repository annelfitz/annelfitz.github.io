import {
  I,
  p as p2,
  q,
  u
} from "./chunk-YSRCOU2A.js";
import {
  p
} from "./chunk-EZMIPVQL.js";
import {
  P,
  d
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import {
  t
} from "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-JGDJR5EV.js";

// node_modules/@arcgis/core/views/interactive/snapping/allLayerSnapping.js
function a(a3, s2) {
  const p4 = new u({ enabled: true, selfEnabled: false, featureEnabled: true, distance: (s2 == null ? void 0 : s2.distance) ?? p.distance, touchSensitivityMultiplier: (s2 == null ? void 0 : s2.touchSensitivityMultiplier) ?? p.touchSensitivityMultiplier });
  return { ...d(() => {
    var _a, _b;
    return ((_b = (_a = a3.map) == null ? void 0 : _a.allLayers) == null ? void 0 : _b.toArray()) ?? [];
  }, (t2) => {
    p4.featureSources = new V(t2.map((e2) => new p2({ layer: e2 })));
  }, P), options: p4 };
}

// node_modules/@arcgis/core/views/interactive/snapping/SnappingManagerPool.js
var i = /* @__PURE__ */ new Map();
function a2(n) {
  if (!i.has(n)) {
    const e2 = a(n, { distance: 10 }), o2 = s(n, e2.options);
    i.set(n, { referenceCount: 0, snappingManager: o2, remove: () => {
      e2.remove(), o2.destroy();
    } });
  }
  const o = i.get(n);
  o.referenceCount++;
  const t2 = e(() => p3(n, o));
  return { snappingManager: o.snappingManager, ...t2 };
}
function p3(e2, r) {
  r.referenceCount--, r.referenceCount > 0 || t(() => {
    0 === r.referenceCount && (r.remove(), i.delete(e2));
  });
}
function s(e2, n) {
  return new q({ view: e2, options: n, snappingEnginesFactory: (n2, r) => [new I({ view: e2, spatialReference: e2.spatialReference, options: r })] });
}

export {
  a2 as a
};
//# sourceMappingURL=chunk-XWTZSPU2.js.map
