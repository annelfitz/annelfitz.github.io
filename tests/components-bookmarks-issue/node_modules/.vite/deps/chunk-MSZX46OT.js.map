{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/Blur.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{ScreenSpacePass as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{glsl as o}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as r}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as t}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";function s(){const s=new r;return s.include(e),s.fragment.uniforms.add(new t(\"blendWeightsTexture\",(e=>e.inputTexture)),new t(\"colorTexture\",(e=>e.color))),s.fragment.code.add(o`void main() {\nvec2 resolution = 1.0 / vec2(textureSize(colorTexture, 0));\nvec4 offsets = vec4(uv.x + resolution.x, uv.y, uv.x, uv.y - resolution.y);\nvec4 a;\na.rb = texture(blendWeightsTexture, uv).rb;\na.g = texture(blendWeightsTexture, offsets.zw).g;\na.a = texture(blendWeightsTexture, offsets.xy).a;\nif ( dot(a, vec4(1.0)) < 1e-5 ) {\nfragColor = texture( colorTexture, uv, 0.0 );\n} else {\nvec2 offset;\noffset.x = a.a > a.b ? a.a : -a.b;\noffset.y = a.g > a.r ? -a.g : a.r;\nif ( abs( offset.x ) > abs( offset.y )) {\noffset.y = 0.0;\n} else {\noffset.x = 0.0;\n}\nvec4 C = texture( colorTexture, uv, 0.0 );\nvec4 Cop = texture( colorTexture, uv + sign( offset ) * resolution.xy, 0.0 );\nfloat s = abs( offset.x ) > abs( offset.y ) ? abs( offset.x ) : abs( offset.y );\nfragColor = mix(C, Cop, s);\n}\n}`),s}const f=Object.freeze(Object.defineProperty({__proto__:null,build:s},Symbol.toStringTag,{value:\"Module\"}));export{f as B,s as b};\n"],
  "mappings": ";;;;;;;;;;;;;;AAI+X,SAASA,KAAG;AAAC,QAAMA,KAAE,IAAIC;AAAE,SAAOD,GAAE,QAAQC,EAAC,GAAED,GAAE,SAAS,SAAS,IAAI,IAAI,EAAE,uBAAuB,OAAG,EAAE,YAAa,GAAE,IAAI,EAAE,gBAAgB,OAAG,EAAE,KAAM,CAAC,GAAEA,GAAE,SAAS,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuB7iB,GAAEA;AAAC;AAAC,IAAM,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAMA,GAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["s", "o"]
}
