{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/components/src/components/tab-nav/resources.ts", "../../@esri/calcite-components/dist/components/src/components/tab-nav/tab-nav.scss?tag=calcite-tab-nav&encapsulation=shadow", "../../@esri/calcite-components/dist/components/src/components/tab-nav/tab-nav.tsx"],
  "sourcesContent": ["export const CSS = {\n  container: \"tab-nav\",\n};\n", ":host {\n  @apply relative flex;\n}\n\n.scale-s {\n  min-block-size: theme(\"spacing.6\");\n}\n\n.scale-m {\n  min-block-size: theme(\"spacing.8\");\n}\n\n.scale-l {\n  min-block-size: theme(\"spacing.11\");\n}\n\n:host([layout=\"center\"]:not([bordered])) {\n  // `tab-nav` in all scales in layout=\"center\" has a padding of 20px on both ends\n  padding-inline: theme(\"margin.5\");\n\n  //override margin-inline-end for the last child for tab-nav to implement the 20px padding on both ends instead\n  .tab-nav {\n    ::slotted(calcite-tab-title:last-child) {\n      margin-inline-end: theme(\"margin.0\");\n    }\n  }\n}\n\n:host(:not([bordered])) {\n  .scale-l {\n    ::slotted(calcite-tab-title) {\n      margin-inline-end: theme(\"margin.6\");\n    }\n  }\n  .scale-m {\n    ::slotted(calcite-tab-title) {\n      margin-inline-end: theme(\"margin.5\");\n    }\n  }\n  .scale-s {\n    ::slotted(calcite-tab-title) {\n      margin-inline-end: theme(\"margin.4\");\n    }\n  }\n}\n\n.tab-nav {\n  @apply flex\n    w-full\n    justify-start\n    overflow-auto;\n}\n\n// prevent indicator overflow in horizontal scrolling situations\n.tab-nav-active-indicator-container {\n  @apply absolute\n    inset-x-0\n    bottom-0\n    h-0.5\n    w-full\n    overflow-hidden;\n}\n\n.tab-nav-active-indicator {\n  @apply bg-brand\n    absolute\n    bottom-0\n    block\n    h-0.5\n    transition-all\n    ease-out;\n}\n\n:host([layout=\"center\"]) .tab-nav {\n  @apply justify-evenly;\n}\n\n:host .position-bottom .tab-nav-active-indicator {\n  inset-block-end: unset;\n  @apply top-0;\n}\n\n:host .position-bottom .tab-nav-active-indicator-container {\n  inset-block-end: unset;\n  @apply top-0;\n}\n\n:host([bordered]) .tab-nav-active-indicator-container {\n  inset-block-end: unset; // display active blue line above instead of below\n}\n\n:host([bordered]) .position-bottom .tab-nav-active-indicator-container {\n  inset-block-end: 0; // display active blue line below instead of above\n  inset-block-start: unset;\n}\n\n@media (forced-colors: active) {\n  .tab-nav-active-indicator {\n    background-color: highlight;\n  }\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  filterDirectChildren,\n  focusElementInGroup,\n  FocusElementInGroupDestination,\n  getElementDir,\n} from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { TabChangeEventDetail, TabCloseEventDetail } from \"../tab/interfaces\";\nimport { TabID, TabLayout, TabPosition } from \"../tabs/interfaces\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-tab-title`s.\n */\n@Component({\n  tag: \"calcite-tab-nav\",\n  styleUrl: \"tab-nav.scss\",\n  shadow: true,\n})\nexport class TabNav {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies the name when saving selected `calcite-tab` data to `localStorage`.\n   */\n  @Prop({ reflect: true }) storageId: string;\n\n  /**\n   * Specifies text to update multiple components to keep in sync if one changes.\n   */\n  @Prop({ reflect: true }) syncId: string;\n\n  /**\n   * Specifies the component's selected `calcite-tab-title`.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedTitle: HTMLCalciteTabTitleElement = null;\n\n  /**\n   * Specifies the size of the component inherited from the parent `calcite-tabs`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) layout: TabLayout = \"inline\";\n\n  /**\n   * Specifies the position of `calcite-tab-nav` and `calcite-tab-title` components in relation to, and is inherited from the parent `calcite-tabs`, defaults to `top`.\n   *\n   *  @internal\n   */\n  @Prop() position: TabPosition = \"bottom\";\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) bordered = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true }) indicatorOffset: number;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true }) indicatorWidth: number;\n\n  @Watch(\"selectedTabId\")\n  async selectedTabIdChanged(): Promise<void> {\n    if (\n      localStorage &&\n      this.storageId &&\n      this.selectedTabId !== undefined &&\n      this.selectedTabId !== null\n    ) {\n      localStorage.setItem(`calcite-tab-nav-${this.storageId}`, JSON.stringify(this.selectedTabId));\n    }\n\n    this.calciteInternalTabChange.emit({\n      tab: this.selectedTabId,\n    });\n\n    this.selectedTitle = await this.getTabTitleById(this.selectedTabId);\n  }\n\n  @Watch(\"selectedTitle\")\n  selectedTitleChanged(): void {\n    this.updateOffsetPosition();\n    this.updateActiveWidth();\n    // reset the animation time on tab selection\n    this.activeIndicatorEl.style.transitionDuration = `${this.animationActiveDuration}s`;\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.parentTabsEl = this.el.closest(\"calcite-tabs\");\n    this.resizeObserver?.observe(this.el);\n  }\n\n  componentWillLoad(): void {\n    const storageKey = `calcite-tab-nav-${this.storageId}`;\n    if (localStorage && this.storageId && localStorage.getItem(storageKey)) {\n      const storedTab = JSON.parse(localStorage.getItem(storageKey));\n      this.selectedTabId = storedTab;\n    }\n  }\n\n  componentWillRender(): void {\n    const { parentTabsEl } = this;\n\n    this.layout = parentTabsEl?.layout;\n    this.bordered = parentTabsEl?.bordered;\n    // fix issue with active tab-title not lining up with blue indicator\n    if (this.selectedTitle) {\n      this.updateOffsetPosition();\n    }\n  }\n\n  componentDidRender(): void {\n    // if every tab title is active select the first tab.\n    if (\n      this.tabTitles.length &&\n      this.tabTitles.every((title) => !title.selected) &&\n      !this.selectedTabId\n    ) {\n      this.tabTitles[0].getTabIdentifier().then((tab) => {\n        this.calciteInternalTabChange.emit({\n          tab,\n        });\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.resizeObserver?.disconnect();\n  }\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const width = `${this.indicatorWidth}px`;\n    const offset = `${this.indicatorOffset}px`;\n    const indicatorStyle = dir !== \"rtl\" ? { width, left: offset } : { width, right: offset };\n    return (\n      <Host role=\"tablist\">\n        <div\n          class={{\n            [CSS.container]: true,\n            [`scale-${this.scale}`]: true,\n            [`position-${this.position}`]: true,\n          }}\n          onScroll={this.handleContainerScroll}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(el: HTMLDivElement) => (this.tabNavEl = el)}\n        >\n          <slot />\n          <div\n            class=\"tab-nav-active-indicator-container\"\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(el) => (this.activeIndicatorContainerEl = el)}\n          >\n            <div\n              class=\"tab-nav-active-indicator\"\n              style={indicatorStyle}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={(el) => (this.activeIndicatorEl = el as HTMLElement)}\n            />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTabsFocusPrevious\")\n  focusPreviousTabHandler(event: CustomEvent): void {\n    this.handleTabFocus(event, event.target as HTMLCalciteTabTitleElement, \"previous\");\n  }\n\n  @Listen(\"calciteInternalTabsFocusNext\")\n  focusNextTabHandler(event: CustomEvent): void {\n    this.handleTabFocus(event, event.target as HTMLCalciteTabTitleElement, \"next\");\n  }\n\n  @Listen(\"calciteInternalTabsFocusFirst\")\n  focusFirstTabHandler(event: CustomEvent): void {\n    this.handleTabFocus(event, event.target as HTMLCalciteTabTitleElement, \"first\");\n  }\n\n  @Listen(\"calciteInternalTabsFocusLast\")\n  focusLastTabHandler(event: CustomEvent): void {\n    this.handleTabFocus(event, event.target as HTMLCalciteTabTitleElement, \"last\");\n  }\n\n  @Listen(\"calciteInternalTabsActivate\")\n  internalActivateTabHandler(event: CustomEvent<TabChangeEventDetail>): void {\n    this.selectedTabId = event.detail.tab\n      ? event.detail.tab\n      : this.getIndexOfTabTitle(event.target as HTMLCalciteTabTitleElement);\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteTabsActivate\")\n  activateTabHandler(event: CustomEvent<void>): void {\n    this.calciteTabChange.emit();\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalTabsClose\")\n  internalCloseTabHandler(event: CustomEvent<TabCloseEventDetail>): void {\n    const closedTabTitleEl = event.target as HTMLCalciteTabTitleElement;\n    this.handleTabTitleClose(closedTabTitleEl);\n    event.stopPropagation();\n  }\n\n  /**\n   * Check for active tabs on register and update selected\n   *\n   * @param event\n   */\n  @Listen(\"calciteInternalTabTitleRegister\")\n  updateTabTitles(event: CustomEvent<TabID>): void {\n    if ((event.target as HTMLCalciteTabTitleElement).selected) {\n      this.selectedTabId = event.detail;\n    }\n  }\n\n  @Listen(\"calciteInternalTabChange\", { target: \"body\" })\n  globalInternalTabChangeHandler(event: CustomEvent<TabChangeEventDetail>): void {\n    if (\n      this.syncId &&\n      event.target !== this.el &&\n      (event.target as HTMLCalciteTabNavElement).syncId === this.syncId &&\n      this.selectedTabId !== event.detail.tab\n    ) {\n      this.selectedTabId = event.detail.tab;\n    }\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalTabIconChanged\")\n  iconStartChangeHandler(): void {\n    this.updateActiveWidth();\n    this.updateOffsetPosition();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emits when the selected `calcite-tab` changes.\n   */\n  @Event({ cancelable: false }) calciteTabChange: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTabChange: EventEmitter<TabChangeEventDetail>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabNavElement;\n\n  @State() selectedTabId: TabID;\n\n  parentTabsEl: HTMLCalciteTabsElement;\n\n  tabNavEl: HTMLDivElement;\n\n  activeIndicatorEl: HTMLElement;\n\n  activeIndicatorContainerEl: HTMLDivElement;\n\n  animationActiveDuration = 0.3;\n\n  resizeObserver = createObserver(\"resize\", () => {\n    if (!this.activeIndicatorEl) {\n      return;\n    }\n\n    // remove active indicator transition duration during resize to prevent wobble\n    this.activeIndicatorEl.style.transitionDuration = \"0s\";\n    this.updateActiveWidth();\n    this.updateOffsetPosition();\n  });\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  handleTabFocus = (\n    event: CustomEvent,\n    el: HTMLCalciteTabTitleElement,\n    destination: FocusElementInGroupDestination,\n  ): void => {\n    focusElementInGroup(this.enabledTabTitles, el, destination);\n\n    event.stopPropagation();\n  };\n\n  handleContainerScroll = (): void => {\n    // remove active indicator transition duration while container is scrolling to prevent wobble\n    this.activeIndicatorEl.style.transitionDuration = \"0s\";\n    this.updateOffsetPosition();\n  };\n\n  updateOffsetPosition(): void {\n    const dir = getElementDir(this.el);\n    const navWidth = this.activeIndicatorContainerEl?.offsetWidth;\n    const tabLeft = this.selectedTitle?.offsetLeft;\n    const tabWidth = this.selectedTitle?.offsetWidth;\n    const offsetRight = navWidth - (tabLeft + tabWidth);\n    this.indicatorOffset =\n      dir !== \"rtl\" ? tabLeft - this.tabNavEl?.scrollLeft : offsetRight + this.tabNavEl?.scrollLeft;\n  }\n\n  updateActiveWidth(): void {\n    this.indicatorWidth = this.selectedTitle?.offsetWidth;\n  }\n\n  getIndexOfTabTitle(el: HTMLCalciteTabTitleElement, tabTitles = this.tabTitles): number {\n    // In most cases, since these indexes correlate with tab contents, we want to consider all tab titles.\n    // However, when doing relative index operations, it makes sense to pass in this.enabledTabTitles as the 2nd arg.\n    return tabTitles.indexOf(el);\n  }\n\n  async getTabTitleById(id: TabID): Promise<HTMLCalciteTabTitleElement | null> {\n    return Promise.all(this.tabTitles.map((el) => el.getTabIdentifier())).then((ids) => {\n      return this.tabTitles[ids.indexOf(id)];\n    });\n  }\n\n  get tabTitles(): HTMLCalciteTabTitleElement[] {\n    return filterDirectChildren<HTMLCalciteTabTitleElement>(this.el, \"calcite-tab-title\");\n  }\n\n  get enabledTabTitles(): HTMLCalciteTabTitleElement[] {\n    return filterDirectChildren<HTMLCalciteTabTitleElement>(\n      this.el,\n      \"calcite-tab-title:not([disabled])\",\n    ).filter((tabTitle) => !tabTitle.closed);\n  }\n\n  private handleTabTitleClose(closedTabTitleEl: HTMLCalciteTabTitleElement): void {\n    const { tabTitles } = this;\n    const selectionModified = closedTabTitleEl.selected;\n\n    const visibleTabTitlesIndices = tabTitles.reduce(\n      (tabTitleIndices: number[], tabTitle, index) =>\n        !tabTitle.closed ? [...tabTitleIndices, index] : tabTitleIndices,\n      [],\n    );\n    const totalVisibleTabTitles = visibleTabTitlesIndices.length;\n\n    if (totalVisibleTabTitles === 1 && tabTitles[visibleTabTitlesIndices[0]].closable) {\n      tabTitles[visibleTabTitlesIndices[0]].closable = false;\n      this.selectedTabId = visibleTabTitlesIndices[0];\n\n      if (selectionModified) {\n        tabTitles[visibleTabTitlesIndices[0]].activateTab();\n      }\n    } else if (totalVisibleTabTitles > 1) {\n      const closedTabTitleIndex = tabTitles.findIndex((el) => el === closedTabTitleEl);\n      const nextTabTitleIndex = visibleTabTitlesIndices.find(\n        (value) => value > closedTabTitleIndex,\n      );\n\n      if (this.selectedTabId === closedTabTitleIndex) {\n        this.selectedTabId = nextTabTitleIndex ? nextTabTitleIndex : totalVisibleTabTitles - 1;\n        tabTitles[this.selectedTabId].activateTab();\n      }\n    }\n\n    requestAnimationFrame(() => {\n      this.updateOffsetPosition();\n      this.updateActiveWidth();\n      tabTitles[this.selectedTabId].focus();\n    });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAO,IAAM,MAAM;EACjB,WAAW;;ACDb,IAAM,YAAY;ICiCL,SAAM,mBAAA,MAAAA,gBAAA,EAAA;;;;;;;AAwRjB,SAAA,0BAA0B;AAE1B,SAAA,iBAAiB,eAAe,UAAU,MAAA;AACxC,UAAI,CAAC,KAAK,mBAAmB;AAC3B;;AAIF,WAAK,kBAAkB,MAAM,qBAAqB;AAClD,WAAK,kBAAiB;AACtB,WAAK,qBAAoB;KAC1B;AAQD,SAAA,iBAAiB,CACf,OACA,IACA,gBAA2C;AAE3C,0BAAoB,KAAK,kBAAkB,IAAI,WAAW;AAE1D,YAAM,gBAAe;;AAGvB,SAAA,wBAAwB,MAAA;AAEtB,WAAK,kBAAkB,MAAM,qBAAqB;AAClD,WAAK,qBAAoB;;;;yBAlS0C;iBAO9C;kBAKqC;oBAO5B;oBAKmB;;;;;EAanD,MAAM,uBAAoB;AACxB,QACE,gBACA,KAAK,aACL,KAAK,kBAAkB,UACvB,KAAK,kBAAkB,MACvB;AACA,mBAAa,QAAQ,mBAAmB,KAAK,SAAS,IAAI,KAAK,UAAU,KAAK,aAAa,CAAC;;AAG9F,SAAK,yBAAyB,KAAK;MACjC,KAAK,KAAK;KACX;AAED,SAAK,gBAAgB,MAAM,KAAK,gBAAgB,KAAK,aAAa;;EAIpE,uBAAoB;AAClB,SAAK,qBAAoB;AACzB,SAAK,kBAAiB;AAEtB,SAAK,kBAAkB,MAAM,qBAAqB,GAAG,KAAK,uBAAuB;;;;;;;EASnF,oBAAiB;;AACf,SAAK,eAAe,KAAK,GAAG,QAAQ,cAAc;AAClD,eAAK,mBAAL,mBAAqB,QAAQ,KAAK;;EAGpC,oBAAiB;AACf,UAAM,aAAa,mBAAmB,KAAK,SAAS;AACpD,QAAI,gBAAgB,KAAK,aAAa,aAAa,QAAQ,UAAU,GAAG;AACtE,YAAM,YAAY,KAAK,MAAM,aAAa,QAAQ,UAAU,CAAC;AAC7D,WAAK,gBAAgB;;;EAIzB,sBAAmB;AACjB,UAAM,EAAE,aAAY,IAAK;AAEzB,SAAK,SAAS,6CAAc;AAC5B,SAAK,WAAW,6CAAc;AAE9B,QAAI,KAAK,eAAe;AACtB,WAAK,qBAAoB;;;EAI7B,qBAAkB;AAEhB,QACE,KAAK,UAAU,UACf,KAAK,UAAU,MAAM,CAAC,UAAU,CAAC,MAAM,QAAQ,KAC/C,CAAC,KAAK,eACN;AACA,WAAK,UAAU,CAAC,EAAE,iBAAgB,EAAG,KAAK,CAAC,QAAG;AAC5C,aAAK,yBAAyB,KAAK;UACjC;SACD;OACF;;;EAIL,uBAAoB;;AAClB,eAAK,mBAAL,mBAAqB;;EAGvB,SAAM;AACJ,UAAM,MAAM,cAAc,KAAK,EAAE;AACjC,UAAM,QAAQ,GAAG,KAAK,cAAc;AACpC,UAAM,SAAS,GAAG,KAAK,eAAe;AACtC,UAAM,iBAAiB,QAAQ,QAAQ,EAAE,OAAO,MAAM,OAAM,IAAK,EAAE,OAAO,OAAO,OAAM;AACvF,WACE,EAAC,MAAI,EAAC,MAAK,UAAS,GAClB,EAAA,OAAA;MACE,OAAO;QACL,CAAC,IAAI,SAAS,GAAG;QACjB,CAAC,SAAS,KAAK,KAAK,EAAE,GAAG;QACzB,CAAC,YAAY,KAAK,QAAQ,EAAE,GAAG;;MAEjC,UAAU,KAAK;;MAEf,KAAK,CAAC,OAAwB,KAAK,WAAW;IAAG,GAEjD,EAAA,QAAA,IAAA,GACA,EAAA,OAAA;MACE,OAAM;;MAEN,KAAK,CAAC,OAAQ,KAAK,6BAA6B;IAAG,GAEnD,EAAA,OAAA;MACE,OAAM;MACN,OAAO;;MAEP,KAAK,CAAC,OAAQ,KAAK,oBAAoB;IAAkB,CAAA,CACzD,CACE,CACF;;;;;;;EAYZ,wBAAwB,OAAkB;AACxC,SAAK,eAAe,OAAO,MAAM,QAAsC,UAAU;;EAInF,oBAAoB,OAAkB;AACpC,SAAK,eAAe,OAAO,MAAM,QAAsC,MAAM;;EAI/E,qBAAqB,OAAkB;AACrC,SAAK,eAAe,OAAO,MAAM,QAAsC,OAAO;;EAIhF,oBAAoB,OAAkB;AACpC,SAAK,eAAe,OAAO,MAAM,QAAsC,MAAM;;EAI/E,2BAA2B,OAAwC;AACjE,SAAK,gBAAgB,MAAM,OAAO,MAC9B,MAAM,OAAO,MACb,KAAK,mBAAmB,MAAM,MAAoC;AACtE,UAAM,gBAAe;;EAIvB,mBAAmB,OAAwB;AACzC,SAAK,iBAAiB,KAAI;AAC1B,UAAM,gBAAe;;EAIvB,wBAAwB,OAAuC;AAC7D,UAAM,mBAAmB,MAAM;AAC/B,SAAK,oBAAoB,gBAAgB;AACzC,UAAM,gBAAe;;;;;;;EASvB,gBAAgB,OAAyB;AACvC,QAAK,MAAM,OAAsC,UAAU;AACzD,WAAK,gBAAgB,MAAM;;;EAK/B,+BAA+B,OAAwC;AACrE,QACE,KAAK,UACL,MAAM,WAAW,KAAK,MACrB,MAAM,OAAoC,WAAW,KAAK,UAC3D,KAAK,kBAAkB,MAAM,OAAO,KACpC;AACA,WAAK,gBAAgB,MAAM,OAAO;;AAEpC,UAAM,gBAAe;;EAIvB,yBAAsB;AACpB,SAAK,kBAAiB;AACtB,SAAK,qBAAoB;;EAwE3B,uBAAoB;;AAClB,UAAM,MAAM,cAAc,KAAK,EAAE;AACjC,UAAM,YAAW,UAAK,+BAAL,mBAAiC;AAClD,UAAM,WAAU,UAAK,kBAAL,mBAAoB;AACpC,UAAM,YAAW,UAAK,kBAAL,mBAAoB;AACrC,UAAM,cAAc,YAAY,UAAU;AAC1C,SAAK,kBACH,QAAQ,QAAQ,YAAU,UAAK,aAAL,mBAAe,cAAa,gBAAc,UAAK,aAAL,mBAAe;;EAGvF,oBAAiB;;AACf,SAAK,kBAAiB,UAAK,kBAAL,mBAAoB;;EAG5C,mBAAmB,IAAgC,YAAY,KAAK,WAAS;AAG3E,WAAO,UAAU,QAAQ,EAAE;;EAG7B,MAAM,gBAAgB,IAAS;AAC7B,WAAO,QAAQ,IAAI,KAAK,UAAU,IAAI,CAAC,OAAO,GAAG,iBAAgB,CAAE,CAAC,EAAE,KAAK,CAAC,QAAG;AAC7E,aAAO,KAAK,UAAU,IAAI,QAAQ,EAAE,CAAC;KACtC;;EAGH,IAAI,YAAS;AACX,WAAO,qBAAiD,KAAK,IAAI,mBAAmB;;EAGtF,IAAI,mBAAgB;AAClB,WAAO,qBACL,KAAK,IACL,mCAAmC,EACnC,OAAO,CAAC,aAAa,CAAC,SAAS,MAAM;;EAGjC,oBAAoB,kBAA4C;AACtE,UAAM,EAAE,UAAS,IAAK;AACtB,UAAM,oBAAoB,iBAAiB;AAE3C,UAAM,0BAA0B,UAAU,OACxC,CAAC,iBAA2B,UAAU,UACpC,CAAC,SAAS,SAAS,CAAC,GAAG,iBAAiB,KAAK,IAAI,iBACnD,CAAA,CAAE;AAEJ,UAAM,wBAAwB,wBAAwB;AAEtD,QAAI,0BAA0B,KAAK,UAAU,wBAAwB,CAAC,CAAC,EAAE,UAAU;AACjF,gBAAU,wBAAwB,CAAC,CAAC,EAAE,WAAW;AACjD,WAAK,gBAAgB,wBAAwB,CAAC;AAE9C,UAAI,mBAAmB;AACrB,kBAAU,wBAAwB,CAAC,CAAC,EAAE,YAAW;;eAE1C,wBAAwB,GAAG;AACpC,YAAM,sBAAsB,UAAU,UAAU,CAAC,OAAO,OAAO,gBAAgB;AAC/E,YAAM,oBAAoB,wBAAwB,KAChD,CAAC,UAAU,QAAQ,mBAAmB;AAGxC,UAAI,KAAK,kBAAkB,qBAAqB;AAC9C,aAAK,gBAAgB,oBAAoB,oBAAoB,wBAAwB;AACrF,kBAAU,KAAK,aAAa,EAAE,YAAW;;;AAI7C,0BAAsB,MAAA;AACpB,WAAK,qBAAoB;AACzB,WAAK,kBAAiB;AACtB,gBAAU,KAAK,aAAa,EAAE,MAAK;KACpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "names": ["TabNav"]
}
