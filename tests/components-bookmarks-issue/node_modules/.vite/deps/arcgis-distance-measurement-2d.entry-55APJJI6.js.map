{
  "version": 3,
  "sources": ["../../@arcgis/map-components/dist/esm/arcgis-distance-measurement-2d.entry.js"],
  "sourcesContent": ["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.0-next.13\n */\nimport { r as registerInstance, c as createEvent, h, g as getElement } from './index-2198b48c.js';\nimport { s as newWidgetsDistanceMeasurement2D, i as importCoreReactiveUtils } from './index-08887307.js';\nimport { r as referenceElementHelper, c as checkForView } from './component-utils-97b1c3e3.js';\nimport { o as onDisconnectedHelper } from './disconnected-45c113cb.js';\n\nconst distanceMeasurement2dCss = \"\";\n\nconst ArcgisDistanceMeasurement2d = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.arcgisDistanceMeasurement2dReady = createEvent(this, \"arcgisDistanceMeasurement2dReady\", 7);\n        this._watchHandles = [];\n        this.referenceElement = undefined;\n        this.icon = undefined;\n        this.unit = undefined;\n        this.unitOptions = undefined;\n        this.position = \"bottom-left\";\n        this.view = undefined;\n        this.widget = undefined;\n    }\n    referenceElementWatcher(value) {\n        void referenceElementHelper(this, value);\n    }\n    iconWatcher(value) {\n        if (this.widget) {\n            this.widget.icon = value;\n        }\n    }\n    unitWatcher(value) {\n        if (this.widget) {\n            this.widget.unit = value;\n        }\n    }\n    unitOptionsWatcher(value) {\n        if (this.widget) {\n            this.widget.unitOptions = value;\n        }\n    }\n    positionWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.view.ui.move(this.childElem, value);\n        }\n    }\n    viewWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.widget.view = value;\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    async componentDidLoad() {\n        const params = this._createParams();\n        const widget = await newWidgetsDistanceMeasurement2D(params);\n        this.widget = widget;\n        await this._addWatchers();\n        this._addContainer();\n        this.arcgisDistanceMeasurement2dReady.emit();\n        checkForView(this);\n    }\n    disconnectedCallback() {\n        onDisconnectedHelper(this);\n    }\n    render() {\n        return h(\"div\", { ref: (el) => (this.childElem = el) });\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    _addContainer() {\n        this.widget.container = this.childElem;\n    }\n    async _addWatchers() {\n        const { whenOnce } = await importCoreReactiveUtils();\n        await whenOnce(() => this.widget.unitOptions);\n        this.unitOptions = this.widget.unitOptions;\n    }\n    _createParams() {\n        const params = {};\n        if (this.icon) {\n            params.icon = this.icon;\n        }\n        if (this.view) {\n            params.view = this.view;\n        }\n        if (this.unit) {\n            params.unit = this.unit;\n        }\n        if (this.unitOptions) {\n            params.unitOptions = this.unitOptions;\n        }\n        return params;\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"referenceElement\": [\"referenceElementWatcher\"],\n        \"icon\": [\"iconWatcher\"],\n        \"unit\": [\"unitWatcher\"],\n        \"unitOptions\": [\"unitOptionsWatcher\"],\n        \"position\": [\"positionWatcher\"],\n        \"view\": [\"viewWatcher\"]\n    }; }\n};\nArcgisDistanceMeasurement2d.style = distanceMeasurement2dCss;\n\nexport { ArcgisDistanceMeasurement2d as arcgis_distance_measurement_2d };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAUA,IAAM,2BAA2B;AAEjC,IAAM,8BAA8B,MAAM;AAAA,EACtC,YAAY,SAAS;AACjB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,mCAAmC,YAAY,MAAM,oCAAoC,CAAC;AAC/F,SAAK,gBAAgB,CAAC;AACtB,SAAK,mBAAmB;AACxB,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,cAAc;AACnB,SAAK,WAAW;AAChB,SAAK,OAAO;AACZ,SAAK,SAAS;AAAA,EAClB;AAAA,EACA,wBAAwB,OAAO;AAC3B,SAAK,uBAAuB,MAAM,KAAK;AAAA,EAC3C;AAAA,EACA,YAAY,OAAO;AACf,QAAI,KAAK,QAAQ;AACb,WAAK,OAAO,OAAO;AAAA,IACvB;AAAA,EACJ;AAAA,EACA,YAAY,OAAO;AACf,QAAI,KAAK,QAAQ;AACb,WAAK,OAAO,OAAO;AAAA,IACvB;AAAA,EACJ;AAAA,EACA,mBAAmB,OAAO;AACtB,QAAI,KAAK,QAAQ;AACb,WAAK,OAAO,cAAc;AAAA,IAC9B;AAAA,EACJ;AAAA,EACA,gBAAgB,OAAO;AACnB,QAAI,UAAU,UAAa,KAAK,QAAQ;AACpC,WAAK,KAAK,GAAG,KAAK,KAAK,WAAW,KAAK;AAAA,IAC3C;AAAA,EACJ;AAAA,EACA,YAAY,OAAO;AACf,QAAI,UAAU,UAAa,KAAK,QAAQ;AACpC,WAAK,OAAO,OAAO;AAAA,IACvB;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,mBAAmB;AACrB,UAAM,SAAS,KAAK,cAAc;AAClC,UAAM,SAAS,MAAM,gCAAgC,MAAM;AAC3D,SAAK,SAAS;AACd,UAAM,KAAK,aAAa;AACxB,SAAK,cAAc;AACnB,SAAK,iCAAiC,KAAK;AAC3C,iBAAa,IAAI;AAAA,EACrB;AAAA,EACA,uBAAuB;AACnB,yBAAqB,IAAI;AAAA,EAC7B;AAAA,EACA,SAAS;AACL,WAAO,EAAE,OAAO,EAAE,KAAK,CAAC,OAAQ,KAAK,YAAY,GAAI,CAAC;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,gBAAgB;AACZ,SAAK,OAAO,YAAY,KAAK;AAAA,EACjC;AAAA,EACA,MAAM,eAAe;AACjB,UAAM,EAAE,SAAS,IAAI,MAAM,wBAAwB;AACnD,UAAM,SAAS,MAAM,KAAK,OAAO,WAAW;AAC5C,SAAK,cAAc,KAAK,OAAO;AAAA,EACnC;AAAA,EACA,gBAAgB;AACZ,UAAM,SAAS,CAAC;AAChB,QAAI,KAAK,MAAM;AACX,aAAO,OAAO,KAAK;AAAA,IACvB;AACA,QAAI,KAAK,MAAM;AACX,aAAO,OAAO,KAAK;AAAA,IACvB;AACA,QAAI,KAAK,MAAM;AACX,aAAO,OAAO,KAAK;AAAA,IACvB;AACA,QAAI,KAAK,aAAa;AAClB,aAAO,cAAc,KAAK;AAAA,IAC9B;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,KAAK;AAAE,WAAO,WAAW,IAAI;AAAA,EAAG;AAAA,EACpC,WAAW,WAAW;AAAE,WAAO;AAAA,MAC3B,oBAAoB,CAAC,yBAAyB;AAAA,MAC9C,QAAQ,CAAC,aAAa;AAAA,MACtB,QAAQ,CAAC,aAAa;AAAA,MACtB,eAAe,CAAC,oBAAoB;AAAA,MACpC,YAAY,CAAC,iBAAiB;AAAA,MAC9B,QAAQ,CAAC,aAAa;AAAA,IAC1B;AAAA,EAAG;AACP;AACA,4BAA4B,QAAQ;",
  "names": []
}
