import {
  c
} from "./chunk-BIO7MOBF.js";
import "./chunk-B5IJN7OM.js";
import "./chunk-F7X3QPMY.js";
import "./chunk-BMTOVJNA.js";
import "./chunk-CMLG62TA.js";
import {
  n
} from "./chunk-SPU25K6A.js";
import "./chunk-P257AUOX.js";
import {
  S,
  U
} from "./chunk-O7SVQZNW.js";
import {
  r
} from "./chunk-67GTVIII.js";
import {
  i
} from "./chunk-SWNHB34O.js";
import {
  u
} from "./chunk-NGAYW4TW.js";
import "./chunk-I7LDU4W6.js";
import "./chunk-SCRCLNT5.js";
import "./chunk-7VV4JAZJ.js";
import "./chunk-I4SHZ6P5.js";
import "./chunk-QYDOVVH7.js";
import "./chunk-YSXT2SWC.js";
import "./chunk-YH3SFFF7.js";
import "./chunk-JBU54P54.js";
import "./chunk-RLZYC2LS.js";
import "./chunk-J6T3FJLS.js";
import "./chunk-WZJNHZ6H.js";
import "./chunk-YBPOKK6D.js";
import "./chunk-ZLQTPFTL.js";
import "./chunk-AKEHDP75.js";
import "./chunk-5MMGIT64.js";
import "./chunk-G7YFDDME.js";
import "./chunk-PCKG3UTS.js";
import "./chunk-3VMVD66K.js";
import "./chunk-QYC3GV65.js";
import "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import "./chunk-I2X6UR6L.js";
import "./chunk-2SYXH2R7.js";
import "./chunk-7JNXJYRU.js";
import "./chunk-QX66UTIR.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import "./chunk-VTH4DAHQ.js";
import "./chunk-HLDUDRTD.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import {
  F
} from "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import "./chunk-Z4Y53NDM.js";
import "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  s
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/views/3d/layers/TileLayerView3D.js
var m = class extends i(c(n(u))) {
  constructor() {
    super(...arguments), this.type = "tile-3d", this._popupHighlightHelper = null;
  }
  get imageFormatIsOpaque() {
    return "jpg" === this.layer.tileInfo.format;
  }
  get hasMixedImageFormats() {
    return "mixed" === this.layer.tileInfo.format;
  }
  get tileInfo() {
    return this.layer.tileInfo;
  }
  initialize() {
    var _a, _b;
    if ("web-tile" === this.layer.type) {
      const e2 = (_a = this.layer.fullExtent) == null ? void 0 : _a.spatialReference, r2 = (_b = this.layer.tileInfo) == null ? void 0 : _b.spatialReference;
      if (null == e2 || null == r2 || !F(e2, r2)) {
        const e3 = "defaults" === this.layer.originOf("fullExtent") || null == this.layer.fullExtent ? "SceneView requires fullExtent to be specified by the user on WebTileLayer" : "SceneView requires fullExtent to be specified in the same spatial reference as tileInfo on WebTileLayer";
        this.addResolvingPromise(Promise.reject(new s("layerview:incompatible-fullextent", e3)));
      }
    }
    S(this, this.layer) && (this._popupHighlightHelper = new U({ createFetchPopupFeaturesQueryGeometry: (e2, t) => r(e2, t, this.view), layerView: this, updatingHandles: this._updatingHandles })), this._addTilingSchemeMatchPromise();
  }
  destroy() {
    var _a;
    (_a = this._popupHighlightHelper) == null ? void 0 : _a.destroy();
  }
  async fetchPopupFeaturesAtLocation(e2, t) {
    return this._popupHighlightHelper ? this._popupHighlightHelper.fetchPopupFeaturesAtLocation(e2, t) : [];
  }
  async doRefresh() {
    this.suspended || this.emit("data-changed");
  }
};
e([y()], m.prototype, "imageFormatIsOpaque", null), e([y()], m.prototype, "hasMixedImageFormats", null), e([y()], m.prototype, "layer", void 0), e([y()], m.prototype, "tileInfo", null), m = e([a("esri.views.3d.layers.TileLayerView3D")], m);
var c2 = m;
export {
  c2 as default
};
//# sourceMappingURL=TileLayerView3D-HDB2USRU.js.map
