{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/components/src/components/input-number/resources.ts", "../../@esri/calcite-components/dist/components/src/components/input-number/input-number.scss?tag=calcite-input-number&encapsulation=shadow", "../../@esri/calcite-components/dist/components/src/components/input-number/input-number.tsx"],
  "sourcesContent": ["export const CSS = {\n  loader: \"loader\",\n  clearButton: \"clear-button\",\n  editingEnabled: \"editing-enabled\",\n  inlineChild: \"inline-child\",\n  inputIcon: \"icon\",\n  prefix: \"prefix\",\n  suffix: \"suffix\",\n  numberButtonWrapper: \"number-button-wrapper\",\n  buttonItemHorizontal: \"number-button-item--horizontal\",\n  wrapper: \"element-wrapper\",\n  inputWrapper: \"wrapper\",\n  actionWrapper: \"action-wrapper\",\n  resizeIconWrapper: \"resize-icon-wrapper\",\n  numberButtonItem: \"number-button-item\",\n};\n\nexport const SLOTS = {\n  action: \"action\",\n};\n", ":host {\n  @apply block;\n}\n\n// scales\n:host([scale=\"s\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n2h h-6 px-2;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-6;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.6\");\n    min-inline-size: theme(\"spacing.6\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n1h h-8 px-3;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-8;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.8\");\n    min-inline-size: theme(\"spacing.8\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-0h h-11 px-4;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-11;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.11\");\n    min-inline-size: theme(\"spacing.11\");\n  }\n}\n\n@include disabled();\n\ninput {\n  transition:\n    var(--calcite-animation-timing),\n    block-size 0,\n    outline-offset 0s;\n  -webkit-appearance: none;\n  @apply bg-foreground-1\n    box-border\n    flex\n    flex-1\n    font-inherit\n    font-normal\n    m-0\n    max-h-full\n    max-w-full\n    relative\n    rounded-none\n    text-color-1\n    text-ellipsis\n    w-full;\n\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\n\n// states\ninput {\n  @apply text-color-1\n    border-color-input\n    border\n    border-solid;\n  &::placeholder,\n  &:-ms-input-placeholder,\n  &::-ms-input-placeholder {\n    @apply text-color-3 font-normal;\n  }\n}\ninput:focus {\n  @apply border-color-brand text-color-1;\n}\ninput[readonly] {\n  @apply bg-background font-medium;\n}\ninput[readonly]:focus {\n  @apply text-color-1;\n}\ncalcite-icon {\n  @apply text-color-3;\n}\n\n//focus\ninput {\n  @apply focus-base;\n}\n\ninput:focus {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) {\n  & input {\n    @apply border-color-danger;\n  }\n  & input:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n// ICONS\n\n// position icons\n\n:host([scale=\"s\"]) .icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n:host([scale=\"m\"]) .icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host([scale=\"l\"]) .icon {\n  inset-inline-start: theme(\"spacing.4\");\n}\n\n// position placeholder/value text in relation to icons\n\n:host([icon][scale=\"s\"]) input {\n  padding-inline-start: theme(\"padding.8\");\n}\n\n:host([icon][scale=\"m\"]) input {\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host([icon][scale=\"l\"]) input {\n  padding-inline-start: theme(\"padding.14\");\n}\n\n// positioning wrapper for icon and loader\n\n.element-wrapper {\n  @apply relative\n    order-3\n    inline-flex\n    flex-1\n    items-center;\n}\n\n.icon {\n  @apply transition-default\n    pointer-events-none\n    absolute\n    block\n\n    z-default; // needed for firefox to display the icon properly\n}\n\n.clear-button {\n  pointer-events: initial;\n  @apply focus-base\n    border-color-input\n    bg-foreground-1\n    order-4\n    m-0\n    box-border\n    flex\n    min-h-full\n    cursor-pointer\n    items-center\n    justify-center\n    self-stretch\n    border\n    border-solid;\n\n  border-inline-start-width: theme(\"borderWidth.0\");\n\n  &:hover {\n    @apply bg-foreground-2 transition-default;\n    calcite-icon {\n      @apply text-color-1 transition-default;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:disabled {\n    @apply opacity-disabled;\n  }\n}\n\n// loading\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  @apply pointer-events-none\n    absolute\n    block;\n}\n\n// slotted action\n.action-wrapper {\n  @apply order-7 flex;\n}\n\n// prefix and suffix\n.prefix,\n.suffix {\n  @apply border-color-input\n    bg-background\n    text-color-2\n    box-border\n    flex\n    h-auto\n    min-h-full\n    select-none\n    content-center\n    items-center\n    break-words\n    border\n    border-solid\n    font-medium\n    leading-none;\n}\n\n.prefix {\n  @apply order-2;\n  border-inline-end-width: theme(\"borderWidth.0\");\n}\n.suffix {\n  @apply order-5;\n  border-inline-start-width: theme(\"borderWidth.0\");\n}\n\n// alignment type\n:host([alignment=\"start\"]) {\n  & input {\n    text-align: start;\n  }\n}\n\n:host([alignment=\"end\"]) {\n  & input {\n    text-align: end;\n  }\n}\n\n.number-button-wrapper {\n  @apply transition-default\n    pointer-events-none\n    order-6\n    box-border\n    flex\n    flex-col;\n}\n\n:host([number-button-type=\"vertical\"]) .wrapper {\n  flex-direction: row;\n  display: flex;\n}\n\n:host([number-button-type=\"vertical\"]) {\n  & input {\n    @apply order-2;\n  }\n}\n\n:host([number-button-type=\"horizontal\"]) .calcite--rtl {\n  & .number-button-item[data-adjustment=\"down\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n  & .number-button-item[data-adjustment=\"up\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n}\n\n.number-button-item.number-button-item--horizontal {\n  &[data-adjustment=\"down\"],\n  &[data-adjustment=\"up\"] {\n    @apply order-1\n      max-h-full\n      min-h-full\n      self-stretch;\n    & calcite-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"down\"] {\n  @apply border-color-input\n    border\n    border-solid;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"up\"] {\n  @apply order-5;\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"up\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"] {\n  @apply border-t-0;\n}\n\n.number-button-item {\n  max-block-size: 50%;\n  min-block-size: 50%;\n  pointer-events: initial;\n  @apply border-color-input\n    bg-foreground-1\n    transition-default\n    m-0\n    box-border\n    flex\n    cursor-pointer\n    items-center\n    self-center\n    border\n    border-solid\n    py-0\n    px-2;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  & calcite-icon {\n    @apply transition-default pointer-events-none;\n  }\n  &:focus {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n  }\n  &:disabled {\n    @apply pointer-events-none;\n  }\n}\n\n.wrapper {\n  @apply relative\n    flex\n    flex-row\n    items-center;\n}\n\n:host(.no-bottom-border) input {\n  @apply border-b-0;\n}\n\n:host(.border-top-color-one) input {\n  @apply border-t-color-1;\n}\n\n// input needed for higher specificity of these overrides\ninput {\n  &.inline-child {\n    @apply transition-default bg-transparent;\n    .editing-enabled {\n      background-color: inherit;\n    }\n  }\n\n  &.inline-child:not(.editing-enabled) {\n    @apply border-color-transparent\n    flex\n    cursor-pointer text-ellipsis;\n    padding-inline-start: 0;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getSlotted,\n  isPrimaryPointerButton,\n  setRequestedIcon,\n} from \"../../utils/dom\";\nimport { Alignment, Scale, Status } from \"../interfaces\";\n\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  internalHiddenInputInputEvent,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  addLocalizedTrailingDecimalZeros,\n  BigDecimal,\n  isValidNumber,\n  parseNumberString,\n  sanitizeNumberString,\n} from \"../../utils/number\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { InputPlacement, NumberNudgeDirection, SetValueOrigin } from \"../input/interfaces\";\nimport { InputNumberMessages } from \"./assets/input-number/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport {\n  NumericInputComponent,\n  syncHiddenFormInput,\n  TextualInputComponent,\n} from \"../input/common/input\";\n\n/**\n * @slot action - A slot for positioning a button next to the component.\n */\n@Component({\n  tag: \"calcite-input-number\",\n  styleUrl: \"input-number.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class InputNumber\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    LocalizedComponent,\n    NumericInputComponent,\n    T9nComponent,\n    TextualInputComponent,\n    LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component's value. */\n  @Prop({ reflect: true }) alignment: Extract<\"start\" | \"end\", Alignment> = \"start\";\n\n  /**\n   * When `true`, the component is focused on page load. Only one element can contain `autofocus`. If multiple elements have `autofocus`, the first element will receive focus.\n   *\n   * @mdn [autofocus](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autofocus)\n   */\n  @Prop({ reflect: true }) autofocus = false;\n\n  /**\n   * When `true`, a clear button is displayed when the component has a value.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(): void {\n    this.setDisabledAction();\n  }\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * Specifies an icon to display.\n   *\n   * @futureBreaking Remove boolean type as it is not supported.\n   */\n  @Prop({ reflect: true }) icon: string | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** When `true`, restricts the component to integer numbers only and disables exponential notation. */\n  @Prop() integer = false;\n\n  /** Accessible name for the component's button or hyperlink. */\n  @Prop() label: string;\n\n  /** When `true`, the component is in the loading state and `calcite-progress` is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * Toggles locale formatting for numbers.\n   *\n   * @internal\n   */\n  @Prop() localeFormat = false;\n\n  /**\n   * Specifies the maximum value.\n   *\n   * @mdn [max](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max)\n   */\n  @Prop({ reflect: true }) max: number;\n\n  /** watcher to update number-to-string for max */\n  @Watch(\"max\")\n  maxWatcher(): void {\n    this.maxString = this.max?.toString() || null;\n  }\n\n  /**\n   * Specifies the minimum value.\n   *\n   * @mdn [min](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min)\n   */\n  @Prop({ reflect: true }) min: number;\n\n  /** watcher to update number-to-string for min */\n  @Watch(\"min\")\n  minWatcher(): void {\n    this.minString = this.min?.toString() || null;\n  }\n\n  /**\n   * Specifies the maximum length of text for the component's value.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\n   *\n   * @deprecated This property has no effect on the component.\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Specifies the minimum length of text for the component's value.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\n   *\n   * @deprecated This property has no effect on the component.\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: string | boolean;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the placement of the buttons. */\n  @Prop({ reflect: true }) numberButtonType: InputPlacement = \"vertical\";\n\n  /**\n   * Specifies placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /** Adds text to the start of the component. */\n  @Prop() prefixText: string;\n\n  /**\n   * When `true`, the component's value can be read, but cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the granularity that the component's value must adhere to.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)\n   */\n  @Prop({ reflect: true }) step: number | \"any\";\n\n  /**\n   * Specifies the type of content to autocomplete, for use in forms.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n   */\n  @Prop() autocomplete: string;\n\n  /**\n   * Specifies the type of content to help devices display an appropriate virtual keyboard.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode)\n   */\n  @Prop() inputMode = \"decimal\";\n\n  /**\n   * Specifies the action label or icon for the Enter key on virtual keyboards.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/enterkeyhint)\n   */\n  @Prop() enterKeyHint: string;\n\n  /** Adds text to the end of the component.  */\n  @Prop() suffixText: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputNumberMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputNumberMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string, previousValue: string): void {\n    if (!this.userChangedValue) {\n      if (newValue === \"Infinity\" || newValue === \"-Infinity\") {\n        this.displayedValue = newValue;\n        this.previousEmittedNumberValue = newValue;\n        return;\n      }\n\n      this.setNumberValue({\n        origin: \"direct\",\n        previousValue,\n        value:\n          newValue == null || newValue == \"\"\n            ? \"\"\n            : isValidNumber(newValue)\n              ? newValue\n              : this.previousValue || \"\",\n      });\n      this.warnAboutInvalidNumberValue(newValue);\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"icon\")\n  updateRequestedIcon(): void {\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"number\");\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputNumberElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: InputNumber[\"value\"];\n\n  inlineEditableEl: HTMLCalciteInlineEditableElement;\n\n  /** number text input element for locale */\n  private childNumberEl?: HTMLInputElement;\n\n  get isClearable(): boolean {\n    return this.clearable && this.value.length > 0;\n  }\n\n  private minString?: string;\n\n  private maxString?: string;\n\n  private previousEmittedNumberValue: string;\n\n  private previousValue: string;\n\n  private previousValueOrigin: SetValueOrigin = \"initial\";\n\n  /** the computed icon to render */\n  private requestedIcon?: string;\n\n  private nudgeNumberValueIntervalId: number;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  State\n  //\n  //--------------------------------------------------------------------------\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleWatcher(locale: string): void {\n    updateMessages(this, this.effectiveLocale);\n    numberStringFormatter.numberFormatOptions = {\n      locale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: false,\n    };\n  }\n\n  @State() defaultMessages: InputNumberMessages;\n\n  @State() displayedValue: string;\n\n  @State() slottedActionElDisabledInternally = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n    if (this.inlineEditableEl) {\n      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n    }\n    connectLabel(this);\n    connectForm(this);\n\n    this.setPreviousEmittedNumberValue(this.value);\n    this.setPreviousNumberValue(this.value);\n\n    this.warnAboutInvalidNumberValue(this.value);\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      this.displayedValue = this.value;\n      this.previousEmittedNumberValue = this.value;\n    } else {\n      this.setNumberValue({\n        origin: \"connected\",\n        value: isValidNumber(this.value) ? this.value : \"\",\n      });\n    }\n\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.setDisabledAction();\n    this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n\n    this.mutationObserver?.disconnect();\n    this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.maxString = this.max?.toString();\n    this.minString = this.min?.toString();\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"number\");\n    await setUpMessages(this);\n  }\n\n  componentShouldUpdate(newValue: string, oldValue: string, property: string): boolean {\n    if (property === \"value\" && newValue && !isValidNumber(newValue)) {\n      this.setNumberValue({\n        origin: \"reset\",\n        value: oldValue,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputNumberFocus: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputNumberBlur: EventEmitter<void>;\n\n  /**\n   * Fires each time a new value is typed.\n   */\n  @Event({ cancelable: true }) calciteInputNumberInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new value is typed and committed.\n   */\n  @Event({ cancelable: false }) calciteInputNumberChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.childNumberEl?.focus();\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    this.childNumberEl?.select();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly || this.disabled) {\n      return;\n    }\n    if (this.isClearable && event.key === \"Escape\") {\n      this.clearInputValue(event);\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\" && !event.defaultPrevented) {\n      if (submitForm(this)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  incrementOrDecrementNumberValue(\n    direction: NumberNudgeDirection,\n    inputMax: number | null,\n    inputMin: number | null,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void {\n    const { value } = this;\n\n    if (value === \"Infinity\" || value === \"-Infinity\") {\n      return;\n    }\n\n    const adjustment = direction === \"up\" ? 1 : -1;\n    const stepHandleInteger =\n      this.integer && this.step !== \"any\" ? Math.round(this.step) : this.step;\n    const inputStep = stepHandleInteger === \"any\" ? 1 : Math.abs(stepHandleInteger || 1);\n    const inputVal = new BigDecimal(value !== \"\" ? value : \"0\");\n    const nudgedValue = inputVal.add(`${inputStep * adjustment}`);\n\n    const nudgedValueBelowInputMin = () =>\n      typeof inputMin === \"number\" &&\n      !isNaN(inputMin) &&\n      nudgedValue.subtract(`${inputMin}`).isNegative;\n\n    const nudgedValueAboveInputMax = () =>\n      typeof inputMax === \"number\" &&\n      !isNaN(inputMax) &&\n      !nudgedValue.subtract(`${inputMax}`).isNegative;\n\n    const finalValue = nudgedValueBelowInputMin()\n      ? `${inputMin}`\n      : nudgedValueAboveInputMax()\n        ? `${inputMax}`\n        : nudgedValue.toString();\n\n    this.setNumberValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: finalValue,\n    });\n  }\n\n  private clearInputValue = (nativeEvent: KeyboardEvent | MouseEvent): void => {\n    this.setNumberValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: \"\",\n    });\n  };\n\n  private emitChangeIfUserModified = (): void => {\n    if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedNumberValue) {\n      this.calciteInputNumberChange.emit();\n      this.setPreviousEmittedNumberValue(this.value);\n    }\n  };\n\n  private inputNumberBlurHandler = () => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n    this.calciteInternalInputNumberBlur.emit();\n    this.emitChangeIfUserModified();\n  };\n\n  private clickHandler = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    const slottedActionEl = getSlotted(this.el, \"action\");\n    if (event.target !== slottedActionEl) {\n      this.setFocus();\n    }\n  };\n\n  private inputNumberFocusHandler = (): void => {\n    this.calciteInternalInputNumberFocus.emit();\n  };\n\n  private inputNumberInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      return;\n    }\n\n    const value = (nativeEvent.target as HTMLInputElement).value;\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    const delocalizedValue = numberStringFormatter.delocalize(value);\n    if (nativeEvent.inputType === \"insertFromPaste\") {\n      if (\n        !isValidNumber(delocalizedValue) ||\n        (this.integer && (delocalizedValue.includes(\"e\") || delocalizedValue.includes(\".\")))\n      ) {\n        nativeEvent.preventDefault();\n      }\n      this.setNumberValue({\n        nativeEvent,\n        origin: \"user\",\n        value: parseNumberString(delocalizedValue),\n      });\n      this.childNumberEl.value = this.displayedValue;\n    } else {\n      this.setNumberValue({\n        nativeEvent,\n        origin: \"user\",\n        value: delocalizedValue,\n      });\n    }\n  };\n\n  private inputNumberKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      event.preventDefault();\n      if (event.key === \"Backspace\" || event.key === \"Delete\") {\n        this.clearInputValue(event);\n      }\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      /* prevent default behavior of moving cursor to the beginning of the input when holding down ArrowUp */\n      event.preventDefault();\n      this.nudgeNumberValue(\"up\", event);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      this.nudgeNumberValue(\"down\", event);\n      return;\n    }\n    const supportedKeys = [\n      ...numberKeys,\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Backspace\",\n      \"Delete\",\n      \"Enter\",\n      \"Escape\",\n      \"Tab\",\n    ];\n    if (event.altKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    const isShiftTabEvent = event.shiftKey && event.key === \"Tab\";\n    if (supportedKeys.includes(event.key) || isShiftTabEvent) {\n      if (event.key === \"Enter\") {\n        this.emitChangeIfUserModified();\n      }\n      return;\n    }\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    if (event.key === numberStringFormatter.decimal && !this.integer) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.indexOf(numberStringFormatter.decimal) === -1) {\n        return;\n      }\n    }\n    if (/[eE]/.test(event.key) && !this.integer) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && !/[eE]/.test(this.childNumberEl.value)) {\n        return;\n      }\n    }\n\n    if (event.key === \"-\") {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.split(\"-\").length <= 2) {\n        return;\n      }\n    }\n    event.preventDefault();\n  };\n\n  private nudgeNumberValue = (\n    direction: NumberNudgeDirection,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void => {\n    if (nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) {\n      return;\n    }\n\n    const inputMax = this.maxString ? parseFloat(this.maxString) : null;\n    const inputMin = this.minString ? parseFloat(this.minString) : null;\n    const valueNudgeDelayInMs = 150;\n\n    this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n\n    if (this.nudgeNumberValueIntervalId) {\n      window.clearInterval(this.nudgeNumberValueIntervalId);\n    }\n    let firstValueNudge = true;\n    this.nudgeNumberValueIntervalId = window.setInterval(() => {\n      if (firstValueNudge) {\n        firstValueNudge = false;\n        return;\n      }\n\n      this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n    }, valueNudgeDelayInMs);\n  };\n\n  private nudgeButtonPointerUpHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private nudgeButtonPointerOutHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private nudgeButtonPointerDownHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    event.preventDefault();\n    const direction = (event.target as HTMLDivElement).dataset.adjustment as NumberNudgeDirection;\n    if (!this.disabled) {\n      this.nudgeNumberValue(direction, event);\n    }\n  };\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(\"number\", this, input);\n  }\n\n  private onHiddenFormInputInput = (event: Event): void => {\n    if ((event.target as HTMLInputElement).name === this.name) {\n      this.setNumberValue({\n        value: (event.target as HTMLInputElement).value,\n        origin: \"direct\",\n      });\n    }\n    this.setFocus();\n    event.stopPropagation();\n  };\n\n  private setChildNumberElRef = (el: HTMLInputElement) => {\n    this.childNumberEl = el;\n  };\n\n  private setDisabledAction(): void {\n    const slottedActionEl = getSlotted(this.el, \"action\");\n\n    if (!slottedActionEl) {\n      return;\n    }\n\n    if (this.disabled) {\n      if (slottedActionEl.getAttribute(\"disabled\") == null) {\n        this.slottedActionElDisabledInternally = true;\n      }\n      slottedActionEl.setAttribute(\"disabled\", \"\");\n    } else if (this.slottedActionElDisabledInternally) {\n      slottedActionEl.removeAttribute(\"disabled\");\n      this.slottedActionElDisabledInternally = false;\n    }\n  }\n\n  private setInputNumberValue = (newInputValue: string): void => {\n    if (!this.childNumberEl) {\n      return;\n    }\n    this.childNumberEl.value = newInputValue;\n  };\n\n  private setPreviousEmittedNumberValue = (value: string): void => {\n    this.previousEmittedNumberValue = this.normalizeValue(value);\n  };\n\n  private normalizeValue(value: string): string {\n    return isValidNumber(value) ? value : \"\";\n  }\n\n  private setPreviousNumberValue = (value: string): void => {\n    this.previousValue = this.normalizeValue(value);\n  };\n\n  private setNumberValue = ({\n    committing = false,\n    nativeEvent,\n    origin,\n    previousValue,\n    value,\n  }: {\n    committing?: boolean;\n    nativeEvent?: MouseEvent | KeyboardEvent | InputEvent;\n    origin: SetValueOrigin;\n    previousValue?: string;\n    value: string;\n  }): void => {\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    const isValueDeleted =\n      this.previousValue?.length > value.length || this.value?.length > value.length;\n\n    const valueHandleInteger = this.integer ? value.replace(/[e.]/g, \"\") : value;\n\n    const hasTrailingDecimalSeparator =\n      valueHandleInteger.charAt(valueHandleInteger.length - 1) === \".\";\n\n    const sanitizedValue =\n      hasTrailingDecimalSeparator && isValueDeleted\n        ? valueHandleInteger\n        : sanitizeNumberString(valueHandleInteger);\n\n    const newValue =\n      value && !sanitizedValue\n        ? isValidNumber(this.previousValue)\n          ? this.previousValue\n          : \"\"\n        : sanitizedValue;\n\n    let newLocalizedValue = numberStringFormatter.localize(newValue);\n\n    if (origin !== \"connected\" && !hasTrailingDecimalSeparator) {\n      newLocalizedValue = addLocalizedTrailingDecimalZeros(\n        newLocalizedValue,\n        newValue,\n        numberStringFormatter,\n      );\n    }\n\n    // adds localized trailing decimal separator\n    this.displayedValue =\n      hasTrailingDecimalSeparator && isValueDeleted\n        ? `${newLocalizedValue}${numberStringFormatter.decimal}`\n        : newLocalizedValue;\n\n    this.setPreviousNumberValue(previousValue ?? this.value);\n    this.previousValueOrigin = origin;\n    this.userChangedValue = origin === \"user\" && this.value !== newValue;\n    // don't sanitize the start of negative/decimal numbers, but\n    // don't set value to an invalid number\n    this.value = [\"-\", \".\"].includes(newValue) ? \"\" : newValue;\n\n    if (origin === \"direct\") {\n      this.setInputNumberValue(newLocalizedValue);\n      this.setPreviousEmittedNumberValue(newLocalizedValue);\n    }\n\n    if (nativeEvent) {\n      const calciteInputNumberInputEvent = this.calciteInputNumberInput.emit();\n      if (calciteInputNumberInputEvent.defaultPrevented) {\n        this.value = this.previousValue;\n        this.displayedValue = numberStringFormatter.localize(this.previousValue);\n      } else if (committing) {\n        this.emitChangeIfUserModified();\n      }\n    }\n  };\n\n  private inputNumberKeyUpHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private warnAboutInvalidNumberValue(value: string): void {\n    if (value && !isValidNumber(value)) {\n      console.warn(`The specified value \"${value}\" cannot be parsed, or is out of range.`);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const loader = (\n      <div class={CSS.loader}>\n        <calcite-progress label={this.messages.loading} type=\"indeterminate\" />\n      </div>\n    );\n\n    const inputClearButton = (\n      <button\n        aria-label={this.messages.clear}\n        class={CSS.clearButton}\n        disabled={this.disabled || this.readOnly}\n        onClick={this.clearInputValue}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n    const iconEl = (\n      <calcite-icon\n        class={CSS.inputIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.requestedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const isHorizontalNumberButton = this.numberButtonType === \"horizontal\";\n\n    const numberButtonsHorizontalUp = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"up\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.nudgeButtonPointerDownHandler}\n        onPointerOut={this.nudgeButtonPointerOutHandler}\n        onPointerUp={this.nudgeButtonPointerUpHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-up\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsHorizontalDown = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"down\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.nudgeButtonPointerDownHandler}\n        onPointerOut={this.nudgeButtonPointerOutHandler}\n        onPointerUp={this.nudgeButtonPointerUpHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsVertical = (\n      <div class={CSS.numberButtonWrapper}>\n        {numberButtonsHorizontalUp}\n        {numberButtonsHorizontalDown}\n      </div>\n    );\n\n    const prefixText = <div class={CSS.prefix}>{this.prefixText}</div>;\n\n    const suffixText = <div class={CSS.suffix}>{this.suffixText}</div>;\n\n    const childEl = (\n      <input\n        aria-label={getLabelText(this)}\n        autocomplete={this.autocomplete}\n        autofocus={this.autofocus ? true : null}\n        defaultValue={this.defaultValue}\n        disabled={this.disabled ? true : null}\n        enterKeyHint={this.enterKeyHint}\n        inputMode={this.inputMode}\n        key=\"localized-input\"\n        maxLength={this.maxLength}\n        minLength={this.minLength}\n        name={undefined}\n        onBlur={this.inputNumberBlurHandler}\n        onFocus={this.inputNumberFocusHandler}\n        onInput={this.inputNumberInputHandler}\n        onKeyDown={this.inputNumberKeyDownHandler}\n        onKeyUp={this.inputNumberKeyUpHandler}\n        placeholder={this.placeholder || \"\"}\n        readOnly={this.readOnly}\n        type=\"text\"\n        value={this.displayedValue}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.setChildNumberElRef}\n      />\n    );\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div class={{ [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}>\n            {this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalDown\n              : null}\n            {this.prefixText ? prefixText : null}\n            <div class={CSS.wrapper}>\n              {childEl}\n              {this.isClearable ? inputClearButton : null}\n              {this.requestedIcon ? iconEl : null}\n              {this.loading ? loader : null}\n            </div>\n            <div class={CSS.actionWrapper}>\n              <slot name={SLOTS.action} />\n            </div>\n            {this.numberButtonType === \"vertical\" && !this.readOnly ? numberButtonsVertical : null}\n            {this.suffixText ? suffixText : null}\n            {this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalUp\n              : null}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["InputNumber"]
}
