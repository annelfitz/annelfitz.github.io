import {
  d,
  n as n2
} from "./chunk-C24MEKSO.js";
import {
  u
} from "./chunk-WDPG5BMO.js";
import {
  o
} from "./chunk-TGXFDJCS.js";
import {
  n
} from "./chunk-RUN6MNXL.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a2
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  a
} from "./chunk-7RBRCL6S.js";

// node_modules/@arcgis/core/symbols/FillSymbol.js
var l = class extends n2 {
  constructor(e2) {
    super(e2), this.outline = null, this.type = null;
  }
  hash() {
    return `${this.type}.${this.outline && this.outline.hash()}`;
  }
};
e([y({ types: { key: "type", base: null, defaultKeyValue: "simple-line", typeMap: { "simple-line": d } }, json: { default: null, write: true } })], l.prototype, "outline", void 0), e([y({ type: ["simple-fill", "picture-fill"], readOnly: true })], l.prototype, "type", void 0), l = e([a2("esri.symbols.FillSymbol")], l);
var i = l;

// node_modules/@arcgis/core/symbols/SimpleFillSymbol.js
var p;
var c = new n({ esriSFSSolid: "solid", esriSFSNull: "none", esriSFSHorizontal: "horizontal", esriSFSVertical: "vertical", esriSFSForwardDiagonal: "forward-diagonal", esriSFSBackwardDiagonal: "backward-diagonal", esriSFSCross: "cross", esriSFSDiagonalCross: "diagonal-cross" });
var m = p = class extends i {
  constructor(...o2) {
    super(...o2), this.color = new u([0, 0, 0, 0.25]), this.outline = new d(), this.type = "simple-fill", this.style = "solid";
  }
  normalizeCtorArgs(o2, r, s) {
    if (o2 && "string" != typeof o2)
      return o2;
    const e2 = {};
    return o2 && (e2.style = o2), r && (e2.outline = r), s && (e2.color = s), e2;
  }
  clone() {
    return new p({ color: a(this.color), outline: this.outline && this.outline.clone(), style: this.style });
  }
  hash() {
    return `${super.hash()}${this.style}.${this.color && this.color.hash()}`;
  }
};
e([y()], m.prototype, "color", void 0), e([y()], m.prototype, "outline", void 0), e([o({ esriSFS: "simple-fill" }, { readOnly: true })], m.prototype, "type", void 0), e([y({ type: c.apiValues, json: { read: c.read, write: c.write } })], m.prototype, "style", void 0), m = p = e([a2("esri.symbols.SimpleFillSymbol")], m);
var S = m;

export {
  i,
  S
};
//# sourceMappingURL=chunk-G5EVVNIJ.js.map
