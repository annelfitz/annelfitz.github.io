{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/esm/src/components/tree/utils.ts", "../../@esri/calcite-components/dist/esm/src/components/tree/tree.scss?tag=calcite-tree&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/tree/tree.tsx", "../../@esri/calcite-components/dist/esm/src/components/tree-item/resources.ts", "../../@esri/calcite-components/dist/esm/src/components/tree-item/tree-item.scss?tag=calcite-tree-item&encapsulation=shadow", "../../@esri/calcite-components/dist/esm/src/components/tree-item/tree-item.tsx"],
  "sourcesContent": ["export function isTreeItem(element: Element): element is HTMLCalciteTreeItemElement {\n  return element?.tagName === \"CALCITE-TREE-ITEM\";\n}\n\nexport function getTraversableItems(root: HTMLCalciteTreeElement): HTMLCalciteTreeItemElement[] {\n  return Array.from(root.querySelectorAll<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\")).filter(\n    (item): boolean => {\n      let currentItem: HTMLElement = item;\n\n      while (currentItem !== root && currentItem !== undefined) {\n        const parent = currentItem.parentElement;\n        const traversable = !isTreeItem(parent) || !parent.hasChildren || parent.expanded;\n\n        if (!traversable) {\n          return false;\n        }\n\n        currentItem = currentItem.parentElement;\n      }\n\n      return true;\n    },\n  );\n}\n", ":host {\n  @apply block;\n}\n\n:host(:focus) {\n  @apply outline-none;\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { focusElement, nodeListToArray } from \"../../utils/dom\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport { TreeItemSelectDetail } from \"../tree-item/interfaces\";\nimport { getTraversableItems, isTreeItem } from \"./utils\";\n\n/**\n * @slot - A slot for `calcite-tree-item` elements.\n */\n@Component({\n  tag: \"calcite-tree\",\n  styleUrl: \"tree.scss\",\n  shadow: true,\n})\nexport class Tree {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, displays indentation guide lines. */\n  @Prop({ mutable: true, reflect: true }) lines = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) child: boolean;\n\n  /** Specifies the size of the component. */\n  @Prop({ mutable: true, reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"ancestors\"` displays with a checkbox and allows any number of selections from corresponding parent and child selections,\n   *\n   * `\"children\"` allows any number of selections from one parent from corresponding parent and child selections,\n   *\n   * `\"multichildren\"` allows any number of selections from corresponding parent and child selections,\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"none\"` allows no selections,\n   *\n   * `\"single\"` allows one selection, and\n   *\n   * `\"single-persist\"` allows and requires one selection.\n   *\n   * @default \"single\"\n   */\n  @Prop({ mutable: true, reflect: true }) selectionMode: SelectionMode = \"single\";\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteTreeItemElement[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillRender(): void {\n    const parent: HTMLCalciteTreeElement = this.el.parentElement?.closest(\"calcite-tree\");\n    this.lines = parent ? parent.lines : this.lines;\n    this.scale = parent ? parent.scale : this.scale;\n    this.selectionMode = parent ? parent.selectionMode : this.selectionMode;\n    this.child = !!parent;\n  }\n\n  render(): VNode {\n    return (\n      <Host\n        aria-multiselectable={\n          this.child\n            ? undefined\n            : (\n                this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\"\n              ).toString()\n        }\n        onKeyDown={this.keyDownHandler}\n        role={!this.child ? \"tree\" : undefined}\n        tabIndex={this.getRootTabIndex()}\n      >\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"focus\") onFocus(): void {\n    if (!this.child) {\n      const focusTarget =\n        this.el.querySelector<HTMLCalciteTreeItemElement>(\n          \"calcite-tree-item[selected]:not([disabled])\",\n        ) || this.el.querySelector<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\");\n\n      focusElement(focusTarget);\n    }\n  }\n\n  @Listen(\"focusin\") onFocusIn(event: FocusEvent): void {\n    const focusedFromRootOrOutsideTree =\n      event.relatedTarget === this.el || !this.el.contains(event.relatedTarget as HTMLElement);\n\n    if (focusedFromRootOrOutsideTree) {\n      // gives user the ability to tab into external elements (modifying tabindex property will not work in firefox)\n      this.el.removeAttribute(\"tabindex\");\n    }\n  }\n\n  @Listen(\"focusout\") onFocusOut(event: FocusEvent): void {\n    const willFocusOutsideTree = !this.el.contains(event.relatedTarget as HTMLElement);\n\n    if (willFocusOutsideTree) {\n      this.el.tabIndex = this.getRootTabIndex();\n    }\n  }\n\n  @Listen(\"calciteInternalTreeItemSelect\")\n  onInternalTreeItemSelect(event: CustomEvent<TreeItemSelectDetail>): void {\n    if (this.child) {\n      return;\n    }\n\n    const target = event.target as HTMLCalciteTreeItemElement;\n    const childItems = nodeListToArray(\n      target.querySelectorAll(\"calcite-tree-item\"),\n    ) as HTMLCalciteTreeItemElement[];\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.selectionMode === \"ancestors\") {\n      this.updateAncestorTree(event);\n      return;\n    }\n\n    const isNoneSelectionMode = this.selectionMode === \"none\";\n\n    const shouldSelect =\n      this.selectionMode !== null &&\n      (!target.hasChildren ||\n        (target.hasChildren &&\n          (this.selectionMode === \"children\" || this.selectionMode === \"multichildren\")));\n\n    const shouldDeselectAllChildren = this.selectionMode === \"multichildren\" && target.hasChildren;\n\n    const shouldModifyToCurrentSelection =\n      !isNoneSelectionMode &&\n      event.detail.modifyCurrentSelection &&\n      (this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\");\n\n    const shouldClearCurrentSelection =\n      !shouldModifyToCurrentSelection &&\n      (((this.selectionMode === \"single\" || this.selectionMode === \"multiple\") &&\n        childItems.length <= 0) ||\n        this.selectionMode === \"children\" ||\n        this.selectionMode === \"multichildren\");\n\n    const shouldUpdateExpand =\n      [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode) &&\n      target.hasChildren;\n\n    const targetItems: HTMLCalciteTreeItemElement[] = [];\n\n    if (shouldSelect) {\n      targetItems.push(target);\n    }\n\n    if (shouldClearCurrentSelection) {\n      const selectedItems = nodeListToArray(\n        this.el.querySelectorAll(\"calcite-tree-item[selected]\"),\n      ) as HTMLCalciteTreeItemElement[];\n\n      selectedItems.forEach((treeItem) => {\n        if (!targetItems.includes(treeItem)) {\n          treeItem.selected = false;\n        }\n      });\n    }\n\n    if (\n      shouldUpdateExpand &&\n      [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode)\n    ) {\n      target.expanded = !target.expanded;\n    }\n\n    if (shouldDeselectAllChildren) {\n      childItems.forEach((item) => {\n        item.selected = false;\n        if (item.hasChildren) {\n          item.expanded = false;\n        }\n      });\n    }\n\n    if (shouldModifyToCurrentSelection) {\n      window.getSelection().removeAllRanges();\n    }\n\n    if (shouldModifyToCurrentSelection && target.selected) {\n      targetItems.forEach((treeItem) => {\n        if (!treeItem.disabled) {\n          treeItem.selected = false;\n        }\n      });\n    } else if (!isNoneSelectionMode) {\n      targetItems.forEach((treeItem) => {\n        if (!treeItem.disabled) {\n          treeItem.selected = true;\n        }\n      });\n    }\n\n    this.selectedItems = isNoneSelectionMode\n      ? []\n      : (nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter(\n          (i) => i.selected,\n        ) as HTMLCalciteTreeItemElement[]);\n\n    this.calciteTreeSelect.emit();\n\n    event.stopPropagation();\n  }\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.child) {\n      return;\n    }\n\n    const root = this.el;\n    const target = event.target as HTMLCalciteTreeItemElement;\n\n    const supportedKeys = [\"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"ArrowUp\", \"Home\", \"End\", \"Tab\"];\n\n    if (!(isTreeItem(target) && this.el.contains(target)) || !supportedKeys.includes(event.key)) {\n      return;\n    }\n\n    const traversableItems = getTraversableItems(root);\n\n    if (event.key === \"Tab\") {\n      // root tabindex will be restored when blurred/focused\n      traversableItems.forEach((item) => (item.tabIndex = -1));\n      return;\n    }\n\n    if (event.key === \"ArrowDown\") {\n      const currentItemIndex = traversableItems.indexOf(target);\n      const nextItem = traversableItems[currentItemIndex + 1];\n      nextItem?.focus();\n      event.preventDefault();\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      const currentItemIndex = traversableItems.indexOf(target);\n      const previousItem = traversableItems[currentItemIndex - 1];\n      previousItem?.focus();\n      event.preventDefault();\n      return;\n    }\n\n    if (event.key === \"ArrowLeft\") {\n      if (target.hasChildren && target.expanded) {\n        target.expanded = false;\n        event.preventDefault();\n        return;\n      }\n\n      const rootToItemPath = traversableItems.slice(0, traversableItems.indexOf(target)).reverse();\n      const parentItem = rootToItemPath.find((item) => item.depth === target.depth - 1);\n\n      parentItem?.focus();\n      event.preventDefault();\n\n      return;\n    }\n\n    if (event.key === \"ArrowRight\") {\n      if (!target.disabled && target.hasChildren) {\n        if (!target.expanded) {\n          target.expanded = true;\n          event.preventDefault();\n        } else {\n          const currentItemIndex = traversableItems.indexOf(target);\n          const nextItem = traversableItems[currentItemIndex + 1];\n          nextItem?.focus();\n          event.preventDefault();\n        }\n      }\n\n      return;\n    }\n\n    if (event.key === \"Home\") {\n      const firstNode = traversableItems.shift();\n      if (firstNode) {\n        firstNode.focus();\n        event.preventDefault();\n      }\n      return;\n    }\n\n    if (event.key === \"End\") {\n      const lastNode = traversableItems.pop();\n      if (lastNode) {\n        lastNode.focus();\n        event.preventDefault();\n      }\n      return;\n    }\n  };\n\n  private updateAncestorTree(event: CustomEvent<TreeItemSelectDetail>): void {\n    const item = event.target as HTMLCalciteTreeItemElement;\n    const updateItem = event.detail.updateItem;\n\n    if (item.disabled || (item.indeterminate && !updateItem)) {\n      return;\n    }\n\n    const ancestors: HTMLCalciteTreeItemElement[] = [];\n    let parent = item.parentElement.closest<HTMLCalciteTreeItemElement>(\"calcite-tree-item\");\n    while (parent) {\n      ancestors.push(parent);\n      parent = parent.parentElement.closest<HTMLCalciteTreeItemElement>(\"calcite-tree-item\");\n    }\n\n    const childItems = Array.from(\n      item.querySelectorAll<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\"),\n    );\n    const childItemsWithNoChildren = childItems.filter((child) => !child.hasChildren);\n    const childItemsWithChildren = childItems.filter((child) => child.hasChildren);\n\n    let futureSelected;\n    if (updateItem) {\n      futureSelected = item.hasChildren ? !(item.selected || item.indeterminate) : !item.selected;\n    } else {\n      futureSelected = item.selected;\n    }\n\n    childItemsWithNoChildren.forEach((el) => {\n      el.selected = futureSelected;\n      el.indeterminate = false;\n    });\n\n    function updateItemState(\n      childItems: HTMLCalciteTreeItemElement[],\n      item: HTMLCalciteTreeItemElement,\n    ): void {\n      const selected = childItems.filter((child) => child.selected);\n      const unselected = childItems.filter((child) => !child.selected);\n\n      item.selected = selected.length === childItems.length;\n      item.indeterminate = selected.length > 0 && unselected.length > 0;\n    }\n\n    childItemsWithChildren.reverse().forEach((el) => {\n      const directChildItems = Array.from(\n        el.querySelectorAll<HTMLCalciteTreeItemElement>(\n          \":scope > calcite-tree > calcite-tree-item\",\n        ),\n      );\n\n      updateItemState(directChildItems, el);\n    });\n\n    if (updateItem) {\n      if (item.hasChildren) {\n        updateItemState(childItems, item);\n      } else {\n        item.selected = futureSelected;\n        item.indeterminate = false;\n      }\n    }\n\n    ancestors.forEach((ancestor) => {\n      const descendants = nodeListToArray(ancestor.querySelectorAll(\"calcite-tree-item\"));\n      const activeDescendants = descendants.filter((el) => el.selected);\n      if (activeDescendants.length === 0) {\n        ancestor.selected = false;\n        ancestor.indeterminate = false;\n        return;\n      }\n\n      const indeterminate = activeDescendants.length < descendants.length;\n      ancestor.indeterminate = indeterminate;\n      ancestor.selected = !indeterminate;\n    });\n\n    this.selectedItems = (\n      nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")) as HTMLCalciteTreeItemElement[]\n    ).filter((i) => i.selected);\n\n    if (updateItem) {\n      this.calciteTreeSelect.emit();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the user selects/deselects `calcite-tree-items`.\n   */\n  @Event({ cancelable: false }) calciteTreeSelect: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTreeElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  getRootTabIndex(): number {\n    return !this.child ? 0 : -1;\n  }\n}\n", "export const CSS = {\n  actionsEnd: \"actions-end\",\n  checkboxLabel: \"checkbox-label\",\n  checkbox: \"checkbox\",\n  chevron: \"chevron\",\n  nodeContainer: \"node-container\",\n  childrenContainer: \"children-container\",\n  bulletPointIcon: \"bullet-point\",\n  checkmarkIcon: \"checkmark\",\n  itemExpanded: \"item--expanded\",\n  iconStart: \"icon-start\",\n  nodeAndActionsContainer: \"node-actions-container\",\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  children: \"children\",\n};\n\nexport const ICONS = {\n  bulletPoint: \"bullet-point\",\n  checkmark: \"check\",\n  chevronRight: \"chevron-right\",\n  blank: \"blank\",\n};\n", ":host {\n  @apply text-color-3\n    block\n    max-w-full\n    cursor-pointer;\n}\n\n.node-actions-container {\n  @apply flex;\n}\n\n@include calciteHydratedHidden();\n@include disabled();\n\n:host([scale=\"s\"]) {\n  @apply text-n2h;\n\n  .node-actions-container {\n    @apply min-h-[1.5rem];\n    .node-container {\n      .checkbox,\n      .chevron,\n      .checkmark,\n      .bullet-point {\n        margin-inline: theme(\"margin.1\");\n      }\n      .icon-start {\n        margin-inline: theme(\"margin.3\");\n      }\n    }\n  }\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n1h;\n\n  .node-actions-container {\n    @apply min-h-[2rem];\n    .node-container {\n      .checkbox,\n      .chevron,\n      .checkmark,\n      .bullet-point {\n        margin-inline: theme(\"margin.2\");\n      }\n      .icon-start {\n        margin-inline: theme(\"margin.3\");\n      }\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  @apply text-0h;\n\n  .node-actions-container {\n    @apply min-h-[2.75rem];\n    .node-container {\n      .checkbox,\n      .chevron,\n      .checkmark,\n      .bullet-point {\n        margin-inline: theme(\"margin.3\");\n      }\n      .icon-start {\n        margin-inline: theme(\"margin.3\");\n      }\n    }\n  }\n}\n\n:host([lines]) {\n  .children-container:after {\n    @apply transition-default\n        absolute\n        top-0\n        w-px\n        transition-colors\n        z-default;\n    // ensure lines don't overlap focus outline\n    block-size: 96%;\n    content: \"\";\n    background-color: var(--calcite-color-border-2);\n  }\n}\n\n:host(:not([lines])) .node-container:after {\n  @apply hidden;\n}\n\n::slotted(*) {\n  @apply min-w-0 max-w-full break-words;\n  color: inherit;\n  text-decoration: none !important;\n\n  &:hover {\n    text-decoration: none !important;\n  }\n}\n\n::slotted(a) {\n  @apply w-full no-underline;\n}\n\n// focus styles\n:host {\n  @apply outline-none;\n\n  .node-container {\n    @apply focus-base;\n  }\n  &:focus,\n  &:active {\n    .node-container {\n      @apply focus-inset;\n    }\n  }\n}\n\n:host(:focus:not([disabled])) {\n  .node-container {\n    @apply focus-inset outline-none;\n  }\n}\n\n.actions-end {\n  @apply flex self-stretch flex-row items-center;\n}\n\n.checkbox {\n  line-height: 0;\n}\n\n.checkbox-label {\n  @apply pointer-events-none flex items-center;\n}\n\n.checkbox:focus {\n  @apply outline-none;\n}\n\n.children-container {\n  @apply relative h-0 overflow-hidden opacity-0 origin-top;\n  margin-inline-start: theme(\"margin.5\");\n  transform: scaleY(0);\n  transition:\n    var(--calcite-animation-timing) $easing-function,\n    opacity var(--calcite-animation-timing) $easing-function,\n    all var(--calcite-animation-timing) ease-in-out; // note that we're transitioning transform, not height!\n\n  .item--expanded > & {\n    @apply overflow-visible opacity-100;\n    transform: none;\n    block-size: auto;\n  }\n}\n\n.node-container {\n  @apply relative flex grow items-center min-w-0;\n\n  .checkmark,\n  .bullet-point {\n    @apply transition-default opacity-0;\n    color: var(--calcite-color-border-1);\n  }\n}\n\n.node-container:hover,\n:host([selected]) .node-container:hover,\n:host(:focus:not([disabled])) .node-container {\n  .checkmark,\n  .bullet-point {\n    @apply opacity-100;\n  }\n}\n\n:host([selected]) .node-container,\n:host([selected]) .node-container:hover {\n  @apply font-medium text-color-1;\n\n  .bullet-point,\n  .checkmark {\n    @apply opacity-100;\n    color: theme(\"colors.brand\");\n  }\n}\n\n:host([selection-mode=\"none\"]:not([has-children])) {\n  &:host([scale=\"s\"]) .node-container {\n    padding-inline-start: theme(\"padding.2\");\n  }\n  &:host([scale=\"m\"]) .node-container {\n    padding-inline-start: theme(\"padding.4\");\n  }\n  &:host([scale=\"l\"]) .node-container {\n    padding-inline-start: theme(\"padding.6\");\n  }\n}\n\n// ancestors selection-mode, dropdown without children\n:host(:not([has-children])) {\n  &:host([scale=\"s\"]) .node-container[data-selection-mode=\"ancestors\"] .checkbox {\n    padding-inline-start: theme(\"padding.5\");\n  }\n  &:host([scale=\"m\"]) .node-container[data-selection-mode=\"ancestors\"] .checkbox {\n    padding-inline-start: theme(\"padding.6\");\n  }\n  &:host([scale=\"l\"]) .node-container[data-selection-mode=\"ancestors\"] .checkbox {\n    padding-inline-start: 1.75rem;\n  }\n}\n// ancestors selection-mode, dropdown with children\n:host([has-children]) .node-container[data-selection-mode=\"ancestors\"] {\n  .checkbox {\n    margin-inline-start: 0;\n  }\n}\n\n// dropdown with children\n:host([has-children]) .node-container {\n  .bullet-point,\n  .checkmark {\n    @apply hidden;\n  }\n}\n\n.chevron {\n  @apply transition-default\n    text-color-3\n    relative\n    self-center;\n  flex: 0 0 auto;\n  transform: rotate(0deg);\n\n  .calcite--rtl & {\n    transform: rotate(180deg);\n  }\n\n  .item--expanded .node-container > & {\n    transform: rotate(90deg);\n  }\n}\n\n:host([selected]) {\n  .checkmark,\n  .bullet-point {\n    color: var(--calcite-color-brand);\n  }\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  filterDirectChildren,\n  getElementDir,\n  getSlotted,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { FlipContext, Scale, SelectionMode } from \"../interfaces\";\nimport { TreeItemSelectDetail } from \"./interfaces\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\nimport { getIconScale } from \"../../utils/component\";\n\n/**\n * @slot - A slot for adding text.\n * @slot children - A slot for adding nested `calcite-tree` elements.\n * @slot actions-end - A slot for adding actions to the end of the component. It is recommended to use two or fewer actions.\n */\n@Component({\n  tag: \"calcite-tree-item\",\n  styleUrl: \"tree-item.scss\",\n  shadow: true,\n})\nexport class TreeItem implements ConditionalSlotComponent, InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, the component is expanded. */\n  @Prop({ mutable: true, reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(newValue: boolean): void {\n    this.updateParentIsExpanded(this.el, newValue);\n  }\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: string;\n\n  /** When `true`, the component is selected. */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(value: boolean): void {\n    if (this.selectionMode === \"ancestors\" && !this.userChangedValue) {\n      if (value) {\n        this.indeterminate = false;\n      }\n      this.calciteInternalTreeItemSelect.emit({\n        modifyCurrentSelection: true,\n        updateItem: false,\n      });\n    }\n  }\n\n  /**\n   * @internal\n   */\n  @Prop() parentExpanded = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) depth = -1;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) hasChildren: boolean = null;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) lines: boolean;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) scale: Scale;\n\n  /**\n   * In ancestor selection mode, show as indeterminate when only some children are selected.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) indeterminate = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) selectionMode: SelectionMode;\n\n  @Watch(\"selectionMode\")\n  getSelectionMode(): void {\n    this.isSelectionMultiLike =\n      this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\";\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.parentTreeItem = this.el.parentElement?.closest(\"calcite-tree-item\");\n    if (this.parentTreeItem) {\n      const { expanded } = this.parentTreeItem;\n      this.updateParentIsExpanded(this.parentTreeItem, expanded);\n    }\n    connectConditionalSlotComponent(this);\n    connectInteractive(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n    disconnectInteractive(this);\n  }\n\n  componentWillRender(): void {\n    this.hasChildren = !!this.el.querySelector(\"calcite-tree\");\n    this.depth = 0;\n    let parentTree = this.el.closest(\"calcite-tree\");\n\n    if (!parentTree) {\n      return;\n    }\n\n    this.selectionMode = parentTree.selectionMode;\n    this.scale = parentTree.scale || \"m\";\n    this.lines = parentTree.lines;\n\n    let nextParentTree;\n    while (parentTree) {\n      nextParentTree = parentTree.parentElement?.closest(\"calcite-tree\");\n      if (nextParentTree === parentTree) {\n        break;\n      } else {\n        parentTree = nextParentTree;\n        this.depth = this.depth + 1;\n      }\n    }\n  }\n\n  componentWillLoad(): void {\n    requestAnimationFrame(() => (this.updateAfterInitialRender = true));\n  }\n\n  componentDidLoad(): void {\n    this.updateAncestorTree();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTreeItemElement;\n\n  private isSelectionMultiLike: boolean;\n\n  render(): VNode {\n    const rtl = getElementDir(this.el) === \"rtl\";\n    const showBulletPoint = this.selectionMode === \"single\" || this.selectionMode === \"children\";\n    const showCheckmark =\n      this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\";\n    const showBlank = this.selectionMode === \"none\" && !this.hasChildren;\n\n    const chevron = this.hasChildren ? (\n      <calcite-icon\n        class={{\n          [CSS.chevron]: true,\n          [CSS_UTILITY.rtl]: rtl,\n        }}\n        data-test-id=\"icon\"\n        icon={ICONS.chevronRight}\n        onClick={this.iconClickHandler}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const defaultSlotNode: VNode = <slot key=\"default-slot\" />;\n\n    const checkbox =\n      this.selectionMode === \"ancestors\" ? (\n        <label class={CSS.checkboxLabel} key=\"checkbox-label\">\n          <calcite-checkbox\n            checked={this.selected}\n            class={CSS.checkbox}\n            data-test-id=\"checkbox\"\n            indeterminate={this.hasChildren && this.indeterminate}\n            scale={this.scale}\n            tabIndex={-1}\n          />\n          {defaultSlotNode}\n        </label>\n      ) : null;\n    const selectedIcon = showBulletPoint\n      ? ICONS.bulletPoint\n      : showCheckmark\n        ? ICONS.checkmark\n        : showBlank\n          ? ICONS.blank\n          : null;\n    const itemIndicator = selectedIcon ? (\n      <calcite-icon\n        class={{\n          [CSS.bulletPointIcon]: selectedIcon === ICONS.bulletPoint,\n          [CSS.checkmarkIcon]: selectedIcon === ICONS.checkmark,\n          [CSS_UTILITY.rtl]: rtl,\n        }}\n        icon={selectedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n\n    const hidden = !(this.parentExpanded || this.depth === 1);\n    const isExpanded = this.updateAfterInitialRender && this.expanded;\n    const { hasEndActions } = this;\n    const slotNode = (\n      <slot\n        key=\"actionsEndSlot\"\n        name={SLOTS.actionsEnd}\n        onSlotchange={this.actionsEndSlotChangeHandler}\n      />\n    );\n\n    const iconStartEl = (\n      <calcite-icon\n        class={CSS.iconStart}\n        flipRtl={this.iconFlipRtl === \"start\" || this.iconFlipRtl === \"both\"}\n        icon={this.iconStart}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    return (\n      <Host\n        aria-expanded={this.hasChildren ? toAriaBoolean(isExpanded) : undefined}\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-selected={this.selected ? \"true\" : showCheckmark ? \"false\" : undefined}\n        calcite-hydrated-hidden={hidden}\n        role=\"treeitem\"\n        tabIndex={this.disabled ? -1 : 0}\n      >\n        <InteractiveContainer disabled={this.disabled}>\n          <div class={{ [CSS.itemExpanded]: isExpanded }}>\n            <div class={CSS.nodeAndActionsContainer}>\n              <div\n                class={{\n                  [CSS.nodeContainer]: true,\n                  [CSS_UTILITY.rtl]: rtl,\n                }}\n                data-selection-mode={this.selectionMode}\n                // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                ref={(el) => (this.defaultSlotWrapper = el as HTMLElement)}\n              >\n                {chevron}\n                {itemIndicator}\n                {this.iconStart ? iconStartEl : null}\n                {checkbox ? checkbox : defaultSlotNode}\n              </div>\n              <div\n                class={CSS.actionsEnd}\n                hidden={!hasEndActions}\n                ref={(el) => (this.actionSlotWrapper = el as HTMLElement)}\n              >\n                {slotNode}\n              </div>\n            </div>\n\n            <div\n              class={{\n                [CSS.childrenContainer]: true,\n                [CSS_UTILITY.rtl]: rtl,\n              }}\n              data-test-id=\"calcite-tree-children\"\n              onClick={this.childrenClickHandler}\n              role={this.hasChildren ? \"group\" : undefined}\n            >\n              <slot name={SLOTS.children} />\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"click\")\n  onClick(event: Event): void {\n    if (this.disabled || this.isActionEndEvent(event)) {\n      return;\n    }\n\n    // Solve for if the item is clicked somewhere outside the slotted anchor.\n    // Anchor is triggered anywhere you click\n    const [link] = filterDirectChildren<HTMLAnchorElement>(this.el, \"a\");\n    if (link && (event.composedPath()[0] as any).tagName.toLowerCase() !== \"a\") {\n      const target = link.target === \"\" ? \"_self\" : link.target;\n      window.open(link.href, target);\n    }\n    this.calciteInternalTreeItemSelect.emit({\n      modifyCurrentSelection: this.selectionMode === \"ancestors\" || this.isSelectionMultiLike,\n      updateItem: true,\n    });\n    this.userChangedValue = true;\n  }\n\n  private iconClickHandler = (event: MouseEvent): void => {\n    event.stopPropagation();\n    this.expanded = !this.expanded;\n  };\n\n  private childrenClickHandler = (event: MouseEvent): void => event.stopPropagation();\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (this.isActionEndEvent(event) || event.defaultPrevented) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.userChangedValue = true;\n        this.calciteInternalTreeItemSelect.emit({\n          modifyCurrentSelection: this.isSelectionMultiLike,\n          updateItem: true,\n        });\n        event.preventDefault();\n        break;\n      case \"Enter\":\n        // activates a node, i.e., performs its default action. For parent nodes, one possible default action is to open or close the node. In single-select trees where selection does not follow focus (see note below), the default action is typically to select the focused node.\n        const link = Array.from(this.el.children).find((el) =>\n          el.matches(\"a\"),\n        ) as HTMLAnchorElement;\n\n        this.userChangedValue = true;\n\n        if (link) {\n          link.click();\n          this.selected = true;\n        } else {\n          this.calciteInternalTreeItemSelect.emit({\n            modifyCurrentSelection: this.isSelectionMultiLike,\n            updateItem: true,\n          });\n        }\n        event.preventDefault();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTreeItemSelect: EventEmitter<TreeItemSelectDetail>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @State() hasEndActions = false;\n\n  /**\n   * Used to make sure initially expanded tree-item can properly\n   * transition and emit events from closed state when rendered.\n   *\n   * @private\n   */\n  @State() updateAfterInitialRender = false;\n\n  actionSlotWrapper!: HTMLElement;\n\n  childrenSlotWrapper!: HTMLElement;\n\n  defaultSlotWrapper!: HTMLElement;\n\n  private parentTreeItem?: HTMLCalciteTreeItemElement;\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private isActionEndEvent(event: Event): boolean {\n    const composedPath = event.composedPath();\n    return composedPath.includes(this.actionSlotWrapper);\n  }\n\n  private updateParentIsExpanded = (el: HTMLCalciteTreeItemElement, expanded: boolean): void => {\n    const items = getSlotted<HTMLCalciteTreeItemElement>(el, SLOTS.children, {\n      all: true,\n      selector: \"calcite-tree-item\",\n    });\n    items.forEach((item) => (item.parentExpanded = expanded));\n  };\n\n  /**\n   * This is meant to be called in `componentDidLoad` in order to take advantage of the hierarchical component lifecycle\n   * and help check for item selection as items are initialized\n   *\n   * @private\n   */\n  private updateAncestorTree(): void {\n    const parentItem = this.parentTreeItem;\n    if (this.selectionMode !== \"ancestors\" || !parentItem) {\n      return;\n    }\n\n    if (this.selected) {\n      const parentTree = this.el.parentElement;\n      const siblings = Array.from(parentTree?.children);\n      const selectedSiblings = siblings.filter(\n        (child: HTMLCalciteTreeItemElement) => child.selected,\n      );\n\n      if (siblings.length === selectedSiblings.length) {\n        parentItem.selected = true;\n        parentItem.indeterminate = false;\n      } else if (selectedSiblings.length > 0) {\n        parentItem.indeterminate = true;\n      }\n\n      const childItems = Array.from(\n        this.el.querySelectorAll<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\"),\n      );\n\n      childItems.forEach((item: HTMLCalciteTreeItemElement) => {\n        item.selected = true;\n        item.indeterminate = false;\n      });\n    } else if (this.indeterminate) {\n      const parentItem = this.parentTreeItem;\n      parentItem.indeterminate = true;\n    }\n  }\n\n  private actionsEndSlotChangeHandler = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n}\n"],
  "mappings": "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",
  "names": ["childItems", "item", "parentItem"]
}
