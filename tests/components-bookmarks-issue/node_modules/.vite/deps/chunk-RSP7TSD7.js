import {
  h
} from "./chunk-MUMDKJ7Y.js";
import {
  t
} from "./chunk-LOGKJYZD.js";
import {
  f as f2
} from "./chunk-L7WI7KB2.js";
import {
  f,
  y
} from "./chunk-J2EGIWT6.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeWorkerHandle.js
var a = class extends h {
  constructor(e) {
    super("EdgeProcessingWorker", "extract", { extract: (e2) => [e2.dataBuffer], extractComponentsEdgeLocations: (e2) => [e2.dataBuffer], extractEdgeLocations: (e2) => [e2.dataBuffer] }, e);
  }
  async process(e, t2, r) {
    if (r)
      return f2(e);
    return i(await this.invoke(new o(e), t2));
  }
  async extractEdgeLocations(e, t2) {
    const r = await this.invokeMethod("extractEdgeLocations", new o(e), t2);
    return t(r);
  }
  async extractComponentsEdgeLocations(e, t2) {
    const r = await this.invokeMethod("extractComponentsEdgeLocations", new o(e), t2);
    return t(r);
  }
};
function i(e) {
  return { regular: { instancesData: t(e.regular.instancesData), lodInfo: { lengths: new Float32Array(e.regular.lodInfo.lengths) } }, silhouette: { instancesData: t(e.silhouette.instancesData), lodInfo: { lengths: new Float32Array(e.silhouette.lodInfo.lengths) } }, averageEdgeLength: e.averageEdgeLength };
}
var o = class {
  constructor(r) {
    this.dataBuffer = r.data.buffer, this.writerSettings = r.writerSettings, this.skipDeduplicate = r.skipDeduplicate, this.indices = y(r.indices) ? r.indices : r.indices.buffer, this.indicesType = y(r.indices) ? "Array" : f(r.indices) ? "Uint32Array" : "Uint16Array", this.indicesLength = r.indicesLength;
  }
};

export {
  a
};
//# sourceMappingURL=chunk-RSP7TSD7.js.map
