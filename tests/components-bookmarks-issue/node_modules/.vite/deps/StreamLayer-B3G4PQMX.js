import {
  c as c2
} from "./chunk-LQR76D5M.js";
import "./chunk-2CWW7O7M.js";
import "./chunk-FLBJ53KN.js";
import {
  l
} from "./chunk-AHEDDTVZ.js";
import {
  p as p3
} from "./chunk-UVXSAP7V.js";
import "./chunk-IZ3VJLQ6.js";
import "./chunk-DRC4XSYG.js";
import {
  s as s2
} from "./chunk-IHQNQQJC.js";
import {
  i as i2
} from "./chunk-4IKPTZ53.js";
import {
  C
} from "./chunk-DXMBDX2I.js";
import {
  m as m2,
  o as o4,
  u as u2
} from "./chunk-TUVEYM7U.js";
import "./chunk-5S637BGW.js";
import "./chunk-BFOJPIF7.js";
import {
  f as f4
} from "./chunk-7UUNSIMA.js";
import "./chunk-GMRQGGML.js";
import "./chunk-BYK4ZOU2.js";
import {
  p as p2
} from "./chunk-OHYLFFUW.js";
import {
  e as e2
} from "./chunk-XW3FDKYP.js";
import "./chunk-Y7RXGLGH.js";
import "./chunk-3JC3OUNW.js";
import "./chunk-RO3CTAP7.js";
import "./chunk-GKMVTGGM.js";
import "./chunk-XGTCDM4C.js";
import "./chunk-QNG4TY7L.js";
import "./chunk-RW5QMWE6.js";
import "./chunk-LGMX4E7L.js";
import {
  D
} from "./chunk-2NPNEA6N.js";
import "./chunk-U34ZXOJT.js";
import "./chunk-OKRW5W44.js";
import "./chunk-RGAA5Z76.js";
import "./chunk-Q6RZBEZ6.js";
import "./chunk-PC66NY33.js";
import "./chunk-YY2VB3AE.js";
import "./chunk-VEYMN5N3.js";
import "./chunk-H6NTWZSO.js";
import "./chunk-BMT3OVAP.js";
import {
  b as b2
} from "./chunk-W5ALAOW2.js";
import "./chunk-FHDHOWK5.js";
import "./chunk-Y546C2O5.js";
import "./chunk-IYKBAIQE.js";
import "./chunk-BDRVHR2K.js";
import "./chunk-DVIGFJWY.js";
import "./chunk-AKEHDP75.js";
import "./chunk-5MMGIT64.js";
import "./chunk-AKQ765JR.js";
import "./chunk-ERD6I7QP.js";
import {
  y as y2
} from "./chunk-Z3NX5DTX.js";
import "./chunk-J4RP32NG.js";
import "./chunk-6NLHKXEW.js";
import "./chunk-LMO6NZJA.js";
import "./chunk-A5QTLE4Y.js";
import "./chunk-SCHTG6ZQ.js";
import "./chunk-QYC3GV65.js";
import {
  P
} from "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import {
  A
} from "./chunk-7EQJLP2H.js";
import {
  j
} from "./chunk-4ZLXDMI5.js";
import {
  f as f3
} from "./chunk-EMYOYGGK.js";
import {
  n as n2
} from "./chunk-6PMFOUWZ.js";
import "./chunk-3KPZ3BQR.js";
import "./chunk-5JYVZQZR.js";
import {
  t as t2
} from "./chunk-UUG4W2PI.js";
import {
  u
} from "./chunk-WW22JHXA.js";
import {
  S
} from "./chunk-ZAM62XN5.js";
import {
  S as S2,
  T as T2,
  c,
  d,
  m,
  p,
  y as y3
} from "./chunk-RKVEKQ5O.js";
import "./chunk-P7J4JFEH.js";
import {
  b
} from "./chunk-G7FOE26O.js";
import {
  h
} from "./chunk-USOPZ2Q6.js";
import "./chunk-S5I4QKJD.js";
import "./chunk-LSM34QAB.js";
import "./chunk-HWHMO3CO.js";
import "./chunk-NCRCDVOW.js";
import "./chunk-QX66UTIR.js";
import "./chunk-JW7VBMHD.js";
import "./chunk-GLLRUDMY.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import {
  i
} from "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import {
  g,
  p as p4
} from "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import {
  o as o3
} from "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-AKLOTDO2.js";
import "./chunk-6AQIVLDN.js";
import "./chunk-I5RCKVDX.js";
import "./chunk-6CWL7BCV.js";
import {
  t
} from "./chunk-DVI5RM3W.js";
import "./chunk-LBXFRGMS.js";
import "./chunk-VTH4DAHQ.js";
import "./chunk-HLDUDRTD.js";
import "./chunk-SLQA5YBV.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import "./chunk-2ICUS4HL.js";
import "./chunk-ZXJ6I4RF.js";
import "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import "./chunk-JZBR4X6W.js";
import "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-5LSHHVQ5.js";
import {
  w
} from "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import {
  f as f2
} from "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import {
  o as o2
} from "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-BIAXSBMP.js";
import {
  U
} from "./chunk-SAYWXQVM.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import "./chunk-Z4Y53NDM.js";
import "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  T,
  a3
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import {
  a as a2,
  k,
  o
} from "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import {
  a,
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";
import "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/layers/support/PurgeOptions.js
var t3;
var i3 = t3 = class extends f {
  constructor() {
    super(...arguments), this.age = null, this.ageReceived = null, this.displayCount = null, this.maxObservations = 1;
  }
  clone() {
    return new t3({ age: this.age, ageReceived: this.ageReceived, displayCount: this.displayCount, maxObservations: this.maxObservations });
  }
};
e([y({ type: Number, json: { write: true } })], i3.prototype, "age", void 0), e([y({ type: Number, json: { write: true } })], i3.prototype, "ageReceived", void 0), e([y({ type: Number, json: { write: true } })], i3.prototype, "displayCount", void 0), e([y({ type: Number, json: { write: true } })], i3.prototype, "maxObservations", void 0), i3 = t3 = e([a3("esri.layers.support.PurgeOptions")], i3);
var p5 = i3;

// node_modules/@arcgis/core/layers/StreamLayer.js
var Y = s2();
function Z(e3, t4) {
  return new s("layer:unsupported", `Layer (${e3.title}, ${e3.id}) of type '${e3.declaredClass}' ${t4}`, { layer: e3 });
}
var ee = class extends c2(p3(n2(f4(t2(f3(l(u(j(S(e2(i(b)))))))))))) {
  constructor(...e3) {
    super(...e3), this.copyright = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.geometryDefinition = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.maxReconnectionAttempts = 0, this.maxReconnectionInterval = 20, this.maxScale = 0, this.minScale = 0, this.objectIdField = null, this.operationalLayerType = "ArcGISStreamLayer", this.outFields = ["*"], this.popupEnabled = true, this.popupTemplate = null, this.purgeOptions = new p5(), this.refreshInterval = 0, this.screenSizePerspectiveEnabled = true, this.sourceJSON = null, this.spatialReference = f2.WGS84, this.type = "stream", this.url = null, this.updateInterval = 300, this.useViewTime = true, this.webSocketUrl = null, this._debouncedSaveOperations = k(async (e4, t4, r) => {
      const { save: i4, saveAs: o5 } = await import("./streamLayerUtils-2DHURH4Z.js");
      switch (e4) {
        case A.SAVE:
          return i4(this, t4);
        case A.SAVE_AS:
          return o5(this, r, t4);
      }
    });
  }
  normalizeCtorArgs(e3, t4) {
    return "string" == typeof e3 ? { url: e3, ...t4 } : e3;
  }
  load(e3) {
    if (!("WebSocket" in globalThis))
      return this.addResolvingPromise(Promise.reject(new s("stream-layer:websocket-unsupported", "WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))), Promise.resolve(this);
    const t4 = null != e3 ? e3.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Stream Service", "Feed"] }, e3).catch(a2).then(() => this._fetchService(t4))), Promise.resolve(this);
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set featureReduction(e3) {
    const t4 = this._normalizeFeatureReduction(e3);
    this._set("featureReduction", t4);
  }
  set renderer(e3) {
    p4(e3, this.fieldsIndex), this._set("renderer", e3);
  }
  readRenderer(e3, t4, i4) {
    var _a;
    t4 = t4.layerDefinition || t4;
    const o5 = (_a = t4.drawingInfo) == null ? void 0 : _a.renderer;
    if (o5) {
      const e4 = o4(o5, t4, i4) || void 0;
      return e4 || n.getLogger(this).error("Failed to create renderer", { rendererDefinition: t4.drawingInfo.renderer, layer: this, context: i4 }), e4;
    }
    return D(t4, i4);
  }
  async connect(e3) {
    const [{ createConnection: t4 }] = await Promise.all([import("./createConnection-EUKLLQW2.js"), this.load()]), r = this.geometryType ? o3.toJSON(this.geometryType) : null, { customParameters: i4 = null, definitionExpression: o5 = null, geometryDefinition: s3 = null, maxReconnectionAttempts: n3 = 0, maxReconnectionInterval: a4 = 20, spatialReference: l2 = this.spatialReference } = e3 || this.createConnectionParameters(), d2 = t4(this.parsedUrl, this.spatialReference, l2, r, o5, s3, n3, a4, i4 ?? void 0), m3 = o([this.on("send-message-to-socket", (e4) => d2.sendMessageToSocket(e4)), this.on("send-message-to-client", (e4) => d2.sendMessageToClient(e4))]);
    return d2.once("destroy", m3.remove), d2;
  }
  createConnectionParameters() {
    return { spatialReference: this.spatialReference, customParameters: this.customParameters, definitionExpression: this.definitionExpression, geometryDefinition: this.geometryDefinition, maxReconnectionAttempts: this.maxReconnectionAttempts, maxReconnectionInterval: this.maxReconnectionInterval };
  }
  createPopupTemplate(e3) {
    return p2(this, e3);
  }
  createQuery() {
    const e3 = new b2();
    return e3.returnGeometry = true, e3.outFields = ["*"], e3.where = this.definitionExpression || "1=1", e3;
  }
  getFieldDomain(e3, t4) {
    if (!this.fields)
      return null;
    let r = null;
    return this.fields.some((t5) => (t5.name === e3 && (r = t5.domain), !!r)), r;
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  serviceSupportsSpatialReference(e3) {
    return true;
  }
  sendMessageToSocket(e3) {
    this.emit("send-message-to-socket", e3);
  }
  sendMessageToClient(e3) {
    this.emit("send-message-to-client", e3);
  }
  async save(e3) {
    return this._debouncedSaveOperations(A.SAVE, e3);
  }
  async saveAs(e3, t4) {
    return this._debouncedSaveOperations(A.SAVE_AS, t4, e3);
  }
  write(e3, t4) {
    const r = t4 == null ? void 0 : t4.messages;
    return this.webSocketUrl ? (r == null ? void 0 : r.push(Z(this, "using a custom websocket connection cannot be written to web scenes and web maps")), null) : this.parsedUrl ? super.write(e3, t4) : (r == null ? void 0 : r.push(Z(this, "using a client-side only connection without a url cannot be written to web scenes and web maps")), null);
  }
  async _fetchService(e3) {
    var _a, _b, _c;
    if (!!!this.webSocketUrl && this.parsedUrl) {
      if (!this.sourceJSON) {
        const { data: t4 } = await U(this.parsedUrl.path, { query: { f: "json", ...this.customParameters, ...this.parsedUrl.query }, responseType: "json", signal: e3 });
        this.sourceJSON = t4;
      }
    } else {
      if (!((_a = this.timeInfo) == null ? void 0 : _a.trackIdField))
        throw new s("stream-layer:missing-metadata", "The stream layer trackIdField must be specified.");
      if (!this.objectIdField) {
        const e4 = (_b = this.fields.find((e5) => "oid" === e5.type)) == null ? void 0 : _b.name;
        if (!e4)
          throw new s("stream-layer:missing-metadata", "The stream layer objectIdField must be specified.");
        this.objectIdField = e4;
      }
      if (!this.fields)
        throw new s("stream-layer:missing-metadata", "The stream layer fields must be specified.");
      if (this.fields.some((e4) => e4.name === this.objectIdField) || this.fields.push(new y2({ name: this.objectIdField, alias: this.objectIdField, type: "oid" })), !this.geometryType)
        throw new s("stream-layer:missing-metadata", "The stream layer geometryType must be specified.");
      this.webSocketUrl && (this.url = this.webSocketUrl);
    }
    return this.read(this.sourceJSON, { origin: "service", portalItem: this.portalItem, portal: (_c = this.portalItem) == null ? void 0 : _c.portal, url: this.parsedUrl }), p4(this.renderer, this.fieldsIndex), g(this.timeInfo, this.fieldsIndex), this.objectIdField || (this.objectIdField = "__esri_stream_id__"), t(this, { origin: "service" });
  }
};
e([y({ type: String })], ee.prototype, "copyright", void 0), e([y({ readOnly: true })], ee.prototype, "defaultPopupTemplate", null), e([y({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], ee.prototype, "definitionExpression", void 0), e([y({ type: String })], ee.prototype, "displayField", void 0), e([y({ type: h })], ee.prototype, "elevationInfo", void 0), e([y({ json: { origins: { "web-map": { read: false, write: false }, "portal-item": { read: false, write: false }, "web-scene": { read: false, write: false } } } })], ee.prototype, "featureReduction", null), e([y(Y.fields)], ee.prototype, "fields", void 0), e([y(Y.fieldsIndex)], ee.prototype, "fieldsIndex", void 0), e([y({ type: w, json: { name: "layerDefinition.definitionGeometry", write: true } })], ee.prototype, "geometryDefinition", void 0), e([y({ type: o3.apiValues, json: { read: { reader: o3.read } } })], ee.prototype, "geometryType", void 0), e([y(m)], ee.prototype, "labelsVisible", void 0), e([y({ type: [C], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: i2 }, write: true } })], ee.prototype, "labelingInfo", void 0), e([y(c)], ee.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide"], json: { origins: { "portal-item": { read: false, write: false } } } })], ee.prototype, "listMode", void 0), e([y({ type: T })], ee.prototype, "maxReconnectionAttempts", void 0), e([y({ type: T })], ee.prototype, "maxReconnectionInterval", void 0), e([y(S2)], ee.prototype, "maxScale", void 0), e([y(T2)], ee.prototype, "minScale", void 0), e([y({ type: String })], ee.prototype, "objectIdField", void 0), e([y({ value: "ArcGISStreamLayer", type: ["ArcGISStreamLayer"] })], ee.prototype, "operationalLayerType", void 0), e([y({ readOnly: true })], ee.prototype, "outFields", void 0), e([y(y3)], ee.prototype, "popupEnabled", void 0), e([y({ type: P, json: { name: "popupInfo", write: true } })], ee.prototype, "popupTemplate", void 0), e([y({ type: p5 })], ee.prototype, "purgeOptions", void 0), e([y({ json: { read: false, write: false } })], ee.prototype, "refreshInterval", void 0), e([y({ types: m2, json: { origins: { service: { write: { target: "drawingInfo.renderer", enabled: false } }, "web-scene": { name: "layerDefinition.drawingInfo.renderer", types: u2, write: true } }, write: { target: "layerDefinition.drawingInfo.renderer" } } })], ee.prototype, "renderer", null), e([o2("service", "renderer", ["drawingInfo.renderer", "defaultSymbol"]), o2("renderer", ["layerDefinition.drawingInfo.renderer", "layerDefinition.defaultSymbol"])], ee.prototype, "readRenderer", null), e([y((() => {
  const e3 = a(p);
  return e3.json.origins["portal-item"] = { read: false, write: false }, e3;
})())], ee.prototype, "screenSizePerspectiveEnabled", void 0), e([y()], ee.prototype, "sourceJSON", void 0), e([y({ type: f2, json: { origins: { service: { read: { source: "spatialReference" } } } } })], ee.prototype, "spatialReference", void 0), e([y({ json: { read: false } })], ee.prototype, "type", void 0), e([y(d)], ee.prototype, "url", void 0), e([y({ type: Number })], ee.prototype, "updateInterval", void 0), e([y({ json: { read: false, write: false } })], ee.prototype, "useViewTime", void 0), e([y({ type: String })], ee.prototype, "webSocketUrl", void 0), ee = e([a3("esri.layers.StreamLayer")], ee);
var te = ee;
export {
  te as default
};
//# sourceMappingURL=StreamLayer-B3G4PQMX.js.map
