{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{glsl as o}from\"../shaderModules/interfaces.js\";function e(e){e.vertex.code.add(o`vec4 offsetBackfacingClipPosition(vec4 posClip, vec3 posWorld, vec3 normalWorld, vec3 camPosWorld) {\nvec3 camToVert = posWorld - camPosWorld;\nbool isBackface = dot(camToVert, normalWorld) > 0.0;\nif (isBackface) {\nposClip.z += 0.0000003 * posClip.w;\n}\nreturn posClip;\n}`)}export{e as Offset};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{DecodeSymbolColor as o}from\"../../../collections/Component/Material/shader/DecodeSymbolColor.glsl.js\";import{IntegerPassUniform as r}from\"../../shaderModules/IntegerPassUniform.js\";import{glsl as e}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as l}from\"../../../lib/VertexAttribute.js\";import{colorMixModes as d}from\"../../../materials/internal/MaterialUtil.js\";function i(i,t){t.hasSymbolColors?(i.include(o),i.attributes.add(l.SYMBOLCOLOR,\"vec4\"),i.varyings.add(\"colorMixMode\",\"mediump float\"),i.vertex.code.add(e`int symbolColorMixMode;\nvec4 getSymbolColor() {\nreturn decodeSymbolColor(symbolColor, symbolColorMixMode) * 0.003921568627451;\n}\nvoid forwardColorMixMode() {\ncolorMixMode = float(symbolColorMixMode) + 0.5;\n}`)):(i.fragment.uniforms.add(new r(\"colorMixMode\",(o=>d[o.colorMixMode]))),i.vertex.code.add(e`vec4 getSymbolColor() { return vec4(1.0); }\nvoid forwardColorMixMode() {}`))}export{i as SymbolColor};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{addNearFar as o}from\"../ForwardLinearDepth.glsl.js\";import{ShaderOutput as e}from\"../ShaderOutput.js\";import{SliceDraw as r}from\"../Slice.glsl.js\";import{Transform as t}from\"../Transform.glsl.js\";import{NormalAttribute as i,NormalType as a}from\"../attributes/NormalAttribute.glsl.js\";import{ObjectAndLayerIdColor as s}from\"../attributes/ObjectAndLayerIdColor.glsl.js\";import{TextureCoordinateAttribute as l}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{VertexNormal as d}from\"../attributes/VertexNormal.glsl.js\";import{OutputDepth as n}from\"../output/OutputDepth.glsl.js\";import{OutputHighlight as c}from\"../output/OutputHighlight.glsl.js\";import{VisualVariables as u}from\"../shading/VisualVariables.glsl.js\";import{DiscardOrAdjustAlphaPass as p}from\"../util/AlphaDiscard.glsl.js\";import{addProjViewLocalOrigin as m}from\"../util/View.glsl.js\";import{glsl as v}from\"../../shaderModules/interfaces.js\";import{Texture2DPassUniform as f}from\"../../shaderModules/Texture2DPassUniform.js\";import{AlphaDiscardMode as g}from\"../../../lib/basicInterfaces.js\";function h(h,x){const{vertex:j,fragment:O}=h,w=x.hasColorTexture&&x.alphaDiscardMode!==g.Opaque;switch(x.output){case e.LinearDepth:case e.Shadow:case e.ShadowHighlight:case e.ShadowExcludeHighlight:case e.ObjectAndLayerIdColor:m(j,x),h.include(t,x),h.include(l,x),h.include(u,x),h.include(n,x),h.include(r,x),h.include(s,x),o(h),h.varyings.add(\"depth\",\"float\"),w&&O.uniforms.add(new f(\"tex\",(o=>o.texture))),j.code.add(v`void main(void) {\nvpos = getVertexInLocalOriginSpace();\nvpos = subtractOrigin(vpos);\nvpos = addVerticalOffset(vpos, localOrigin);\ngl_Position = transformPositionWithDepth(proj, view, vpos, nearFar, depth);\nforwardTextureCoordinates();\nforwardObjectAndLayerIdColor();\n}`),h.include(p,x),O.code.add(v`\n          void main(void) {\n            discardBySlice(vpos);\n            ${w?v`\n                    vec4 texColor = texture(tex, ${x.hasColorTextureTransform?v`colorUV`:v`vuv0`});\n                    discardOrAdjustAlpha(texColor);`:\"\"}\n            ${x.output===e.ObjectAndLayerIdColor?v`outputObjectAndLayerIdColor();`:v`outputDepth(depth);`}\n          }\n        `);break;case e.Normal:{m(j,x),h.include(t,x),h.include(i,x),h.include(d,x),h.include(l,x),h.include(u,x),w&&O.uniforms.add(new f(\"tex\",(o=>o.texture))),x.normalType===a.ScreenDerivative&&h.varyings.add(\"vPositionView\",\"vec3\");const o=x.normalType===a.Attribute||x.normalType===a.Compressed;j.code.add(v`\n          void main(void) {\n            vpos = getVertexInLocalOriginSpace();\n\n            ${o?v`vNormalWorld = dpNormalView(vvLocalNormal(normalModel()));`:v`\n                  // Get vertex position in camera space for screen-space derivative normals\n                  vPositionView = (view * vec4(vpos, 1.0)).xyz;\n                `}\n            vpos = subtractOrigin(vpos);\n            vpos = addVerticalOffset(vpos, localOrigin);\n            gl_Position = transformPosition(proj, view, vpos);\n            forwardTextureCoordinates();\n          }\n        `),h.include(r,x),h.include(p,x),O.code.add(v`\n          void main() {\n            discardBySlice(vpos);\n            ${w?v`\n                    vec4 texColor = texture(tex, ${x.hasColorTextureTransform?v`colorUV`:v`vuv0`});\n                    discardOrAdjustAlpha(texColor);`:\"\"}\n\n            ${x.normalType===a.ScreenDerivative?v`vec3 normal = screenDerivativeNormal(vPositionView);`:v`\n                  vec3 normal = normalize(vNormalWorld);\n                  if (gl_FrontFacing == false){\n                    normal = -normal;\n                  }`}\n            fragColor = vec4(0.5 + 0.5 * normal, 1.0);\n          }\n        `);break}case e.Highlight:m(j,x),h.include(t,x),h.include(l,x),h.include(u,x),w&&O.uniforms.add(new f(\"tex\",(o=>o.texture))),j.code.add(v`void main(void) {\nvpos = getVertexInLocalOriginSpace();\nvpos = subtractOrigin(vpos);\nvpos = addVerticalOffset(vpos, localOrigin);\ngl_Position = transformPosition(proj, view, vpos);\nforwardTextureCoordinates();\n}`),h.include(r,x),h.include(p,x),h.include(c,x),O.code.add(v`\n          void main() {\n            discardBySlice(vpos);\n            ${w?v`\n                    vec4 texColor = texture(tex, ${x.hasColorTextureTransform?v`colorUV`:v`vuv0`});\n                    discardOrAdjustAlpha(texColor);`:\"\"}\n            outputHighlight();\n          }\n        `)}}export{h as DefaultMaterialAuxiliaryPasses};\n"],
  "mappings": "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",
  "names": ["e", "i", "t", "e", "o", "h", "o", "l", "d", "s", "a"]
}
