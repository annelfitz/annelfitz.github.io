import {
  connectInteractive,
  disconnectInteractive,
  updateHostInteraction
} from "./chunk-66JQNCB7.js";
import "./chunk-OUKAB5XV.js";
import {
  connectMessages,
  disconnectMessages,
  setUpMessages,
  updateMessages
} from "./chunk-IF3MPWQI.js";
import {
  connectLocalized,
  disconnectLocalized
} from "./chunk-AXCPOXSP.js";
import "./chunk-CTALGNVI.js";
import "./chunk-7QCRXUYY.js";
import {
  componentFocusable,
  setComponentLoaded,
  setUpLoadableComponent
} from "./chunk-HYC423SM.js";
import {
  toAriaBoolean
} from "./chunk-BUS2XAMG.js";
import "./chunk-L553G5FP.js";
import "./chunk-PJLSVRBA.js";
import {
  createEvent,
  getElement,
  h,
  registerInstance
} from "./chunk-FNA2PYJM.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@esri/calcite-components/dist/esm/calcite-handle.entry.js
var CSS = {
  handle: "handle",
  handleSelected: "handle--selected"
};
var ICONS = {
  drag: "drag"
};
var SUBSTITUTIONS = {
  itemLabel: "{itemLabel}",
  position: "{position}",
  total: "{total}"
};
var handleCss = ":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:flex}.handle{display:flex;align-items:center;justify-content:center;align-self:stretch;border-style:none;background-color:transparent;outline-color:transparent;color:var(--calcite-color-border-input);padding-block:0.75rem;padding-inline:0.25rem;line-height:0}.handle calcite-icon{color:inherit}:host(:not([disabled])) .handle{cursor:move}:host(:not([disabled])) .handle:hover{background-color:var(--calcite-color-foreground-2);color:var(--calcite-color-text-1)}:host(:not([disabled])) .handle:focus{color:var(--calcite-color-text-1);outline:2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand-hover, var(--calcite-color-brand)));outline-offset:calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          )}:host(:not([disabled])) .handle--selected{background-color:var(--calcite-color-foreground-3);color:var(--calcite-color-text-1)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([hidden]){display:none}[hidden]{display:none}";
var Handle = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteHandleChange = createEvent(this, "calciteHandleChange", 6);
    this.calciteHandleNudge = createEvent(this, "calciteHandleNudge", 6);
    this.calciteInternalAssistiveTextChange = createEvent(this, "calciteInternalAssistiveTextChange", 6);
    this.handleKeyDown = (event) => {
      if (this.disabled) {
        return;
      }
      switch (event.key) {
        case " ":
          this.selected = !this.selected;
          this.calciteHandleChange.emit();
          event.preventDefault();
          break;
        case "ArrowUp":
          if (!this.selected) {
            return;
          }
          event.preventDefault();
          this.calciteHandleNudge.emit({ direction: "up" });
          break;
        case "ArrowDown":
          if (!this.selected) {
            return;
          }
          event.preventDefault();
          this.calciteHandleNudge.emit({ direction: "down" });
          break;
      }
    };
    this.handleBlur = () => {
      if (this.blurUnselectDisabled || this.disabled) {
        return;
      }
      if (this.selected) {
        this.selected = false;
        this.calciteHandleChange.emit();
      }
    };
    this.selected = false;
    this.disabled = false;
    this.dragHandle = void 0;
    this.messages = void 0;
    this.setPosition = void 0;
    this.setSize = void 0;
    this.label = void 0;
    this.blurUnselectDisabled = false;
    this.messageOverrides = void 0;
    this.effectiveLocale = void 0;
    this.defaultMessages = void 0;
  }
  handleAriaTextChange() {
    const message = this.getAriaText("live");
    if (message) {
      this.calciteInternalAssistiveTextChange.emit({
        message
      });
    }
  }
  onMessagesChange() {
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    connectInteractive(this);
    connectMessages(this);
    connectLocalized(this);
  }
  async componentWillLoad() {
    setUpLoadableComponent(this);
    await setUpMessages(this);
  }
  componentDidLoad() {
    setComponentLoaded(this);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  disconnectedCallback() {
    disconnectInteractive(this);
    disconnectMessages(this);
    disconnectLocalized(this);
  }
  effectiveLocaleChange() {
    updateMessages(this, this.effectiveLocale);
  }
  // --------------------------------------------------------------------------
  //
  //  Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    var _a;
    await componentFocusable(this);
    (_a = this.handleButton) == null ? void 0 : _a.focus();
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  getTooltip() {
    const { label, messages } = this;
    if (!messages) {
      return "";
    }
    if (!label) {
      return messages.dragHandleUntitled;
    }
    return messages.dragHandle.replace(SUBSTITUTIONS.itemLabel, label);
  }
  getAriaText(type) {
    const { setPosition, setSize, label, messages, selected } = this;
    if (!messages || !label || typeof setSize !== "number" || typeof setPosition !== "number") {
      return null;
    }
    const text = type === "label" ? selected ? messages.dragHandleChange : messages.dragHandleIdle : selected ? messages.dragHandleActive : messages.dragHandleCommit;
    const replacePosition = text.replace(SUBSTITUTIONS.position, setPosition.toString());
    const replaceLabel = replacePosition.replace(SUBSTITUTIONS.itemLabel, label);
    return replaceLabel.replace(SUBSTITUTIONS.total, setSize.toString());
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    return (
      // Needs to be a span because of https://github.com/SortableJS/Sortable/issues/1486
      h("span", {
        "aria-disabled": this.disabled ? toAriaBoolean(this.disabled) : null,
        "aria-label": this.disabled ? null : this.getAriaText("label"),
        "aria-pressed": this.disabled ? null : toAriaBoolean(this.selected),
        class: { [CSS.handle]: true, [CSS.handleSelected]: !this.disabled && this.selected },
        onBlur: this.handleBlur,
        onKeyDown: this.handleKeyDown,
        role: "button",
        tabIndex: this.disabled ? null : 0,
        title: this.getTooltip(),
        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
        ref: (el) => {
          this.handleButton = el;
        }
      }, h("calcite-icon", { icon: ICONS.drag, scale: "s" }))
    );
  }
  static get assetsDirs() {
    return ["assets"];
  }
  get el() {
    return getElement(this);
  }
  static get watchers() {
    return {
      "messages": ["handleAriaTextChange"],
      "label": ["handleAriaTextChange"],
      "selected": ["handleAriaTextChange"],
      "setPosition": ["handleAriaTextChange"],
      "setSize": ["handleAriaTextChange"],
      "messageOverrides": ["onMessagesChange"],
      "effectiveLocale": ["effectiveLocaleChange"]
    };
  }
};
Handle.style = handleCss;
export {
  Handle as calcite_handle
};
/*! Bundled license information:

@esri/calcite-components/dist/esm/calcite-handle.entry.js:
  (*!
   * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
   * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
   * v2.6.0
   *)
*/
//# sourceMappingURL=calcite-handle.entry-DYVY7XTT.js.map
