import {
  a,
  i
} from "./chunk-VIH3KDZO.js";
import {
  i as i2
} from "./chunk-LA365FE7.js";
import {
  x2 as x
} from "./chunk-M5ZB5S5C.js";
import {
  r
} from "./chunk-NDIXNREV.js";
import {
  n2 as n
} from "./chunk-7RBRCL6S.js";

// node_modules/@arcgis/core/geometry/support/meshVertexSpaceUtils.js
function c() {
  return n.getLogger("esri.geometry.Mesh");
}
function a2(e) {
  const { vertexSpace: r2 } = e;
  if (null != r2.origin)
    return e.clone();
  const { anchor: n2 } = e, i3 = n2.clone(), c2 = new i({ origin: [i3.x, i3.y, i3.z] }), a3 = e.cloneWithVertexSpace(c2), { position: s } = a3.vertexAttributes;
  return a3.vertexAttributes.position = i2(new Float64Array(s.length), s, [-i3.x, -i3.y, -(i3.z ?? 0)]), a3.vertexAttributesChanged(), a3;
}
function g(e) {
  return null != e.origin;
}
function p(e) {
  return g(e.vertexSpace);
}
function u(e, r2) {
  if (!g(e))
    return null;
  const [o, i3, t] = e.origin;
  return new x({ x: o, y: i3, z: t, spatialReference: r2 });
}
function f(r2, n2) {
  const { x: t, y: a3, z: s, spatialReference: g2 } = r2, p2 = [t, a3, s ?? 0];
  if (void 0 !== (n2 == null ? void 0 : n2.geographic)) {
    if (r(c(), "option: geographic", { replacement: "use vertexSpace option instead", version: "4.29", warnOnce: true }), !(n2 == null ? void 0 : n2.vertexSpace))
      return (n2 == null ? void 0 : n2.geographic) ? new a({ origin: p2 }) : new i({ origin: p2 });
    c().warn("Deprecated geographic flag ignored since vertexSpace option is provided.");
  }
  if (!(n2 == null ? void 0 : n2.vertexSpace))
    return g2.isGeographic || g2.isWebMercator ? new a({ origin: p2 }) : new i({ origin: p2 });
  switch (n2.vertexSpace) {
    case "local":
      return new a({ origin: p2 });
    case "georeferenced":
      return new i({ origin: p2 });
    case "georeferenced-absolute":
      return new i();
  }
}
function l(e) {
  return e.isGeographic || e.isWebMercator ? "local" : "georeferenced";
}
function h(e, r2) {
  return "local" === e ? new a({ origin: r2 }) : new i({ origin: r2 });
}

export {
  a2 as a,
  g,
  p,
  u,
  f,
  l,
  h
};
//# sourceMappingURL=chunk-QJRGTKPN.js.map
