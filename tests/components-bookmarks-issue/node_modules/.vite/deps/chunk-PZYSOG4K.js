import {
  L as L2
} from "./chunk-QHWIMHBR.js";
import {
  l as l8
} from "./chunk-OOS2G3OW.js";
import {
  c as c7,
  i as i8
} from "./chunk-XKMZJHKM.js";
import {
  i as i9,
  n as n12
} from "./chunk-PTIWH4S7.js";
import {
  o as o9
} from "./chunk-L3GUCBXG.js";
import {
  d as d4
} from "./chunk-NLXTDFZC.js";
import {
  g as g6
} from "./chunk-O3PC6BW5.js";
import {
  p as p2
} from "./chunk-BU5WMCML.js";
import {
  g as g5,
  l as l7
} from "./chunk-P257AUOX.js";
import {
  _ as _2,
  i as i7
} from "./chunk-K3DEHPDR.js";
import {
  Z,
  _ as _3,
  ft,
  lt,
  ot,
  ut,
  yt
} from "./chunk-FZI7RNDL.js";
import {
  l as l6
} from "./chunk-BSYULFZQ.js";
import {
  e as e8
} from "./chunk-YGP7UFWC.js";
import {
  e as e9
} from "./chunk-MCZ4QOSQ.js";
import {
  t as t5
} from "./chunk-CDYT7KXF.js";
import {
  e as e7
} from "./chunk-EAAEPSBY.js";
import {
  t as t4
} from "./chunk-6RR3WN7W.js";
import {
  c as c6,
  l as l5,
  n as n11
} from "./chunk-M5DWZKDJ.js";
import {
  n as n10
} from "./chunk-QREUCRQ4.js";
import {
  f as f4,
  i as i6,
  s as s5,
  u as u5
} from "./chunk-YK3UMVCY.js";
import {
  t as t3
} from "./chunk-GB4RVOXH.js";
import {
  s as s4
} from "./chunk-5IT6RVBX.js";
import {
  h as h3
} from "./chunk-I4SHZ6P5.js";
import {
  S as S3,
  r as r6
} from "./chunk-3AIILHI5.js";
import {
  l as l4
} from "./chunk-WZJNHZ6H.js";
import {
  v as v4
} from "./chunk-YBPOKK6D.js";
import {
  b as b3
} from "./chunk-W5ALAOW2.js";
import {
  n as n9
} from "./chunk-ZLQTPFTL.js";
import {
  M,
  h as h2,
  i as i5,
  o as o8,
  r as r5
} from "./chunk-HZSGATFT.js";
import {
  P as P2
} from "./chunk-G7YFDDME.js";
import {
  n as n8
} from "./chunk-NVYR73RE.js";
import {
  l as l3
} from "./chunk-CYVKDANA.js";
import {
  i as i2
} from "./chunk-R4CJB3GP.js";
import {
  u as u4
} from "./chunk-WDPG5BMO.js";
import {
  c as c4
} from "./chunk-BOAEEYBE.js";
import {
  c as c5
} from "./chunk-I5RCKVDX.js";
import {
  c as c3,
  l as l2
} from "./chunk-HLDUDRTD.js";
import {
  m as m3
} from "./chunk-ONK5AE7R.js";
import {
  B,
  F,
  b as b2,
  k as k2
} from "./chunk-2ICUS4HL.js";
import {
  e as e6
} from "./chunk-OCF7OAES.js";
import {
  g as g4
} from "./chunk-JZBR4X6W.js";
import {
  u as u3
} from "./chunk-4KLYOMH2.js";
import {
  n as n7
} from "./chunk-CXNX736Z.js";
import {
  D,
  e as e4,
  e2 as e5,
  i as i3,
  n as n4,
  o as o7
} from "./chunk-RGCWZ2KZ.js";
import {
  n as n6
} from "./chunk-5VMSFOCB.js";
import {
  i as i4
} from "./chunk-LGQXPGTM.js";
import {
  v as v3
} from "./chunk-2SDMYJDE.js";
import {
  h
} from "./chunk-6Z6C6JVV.js";
import {
  o as o6,
  r as r4
} from "./chunk-QLL2YG25.js";
import {
  m as m2,
  n as n5
} from "./chunk-Z2PDA67N.js";
import {
  t as t2,
  w as w2
} from "./chunk-IZKCZQUY.js";
import {
  d as d3,
  g as g3,
  x2 as x
} from "./chunk-M5ZB5S5C.js";
import {
  f as f3
} from "./chunk-MBGZKT2Z.js";
import {
  G
} from "./chunk-UWQ3OYA5.js";
import {
  s as s3
} from "./chunk-IOB3DJMR.js";
import {
  c as c2,
  f as f2
} from "./chunk-7MT4ACA4.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import {
  A as A3,
  C,
  P,
  d as d2,
  p,
  v as v2,
  w
} from "./chunk-Z4Y53NDM.js";
import {
  V
} from "./chunk-PVUNFEWX.js";
import {
  o as o5
} from "./chunk-TXBMNSNF.js";
import {
  _,
  d
} from "./chunk-BVQWKK2V.js";
import {
  A as A2,
  S as S2,
  i2 as i,
  o2 as o,
  o3 as o2,
  r,
  r2,
  t3 as t,
  v,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a,
  n as n3,
  r2 as r3
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  A,
  E,
  L,
  S,
  b,
  c2 as c,
  e as e3,
  g as g2,
  m,
  o2 as o3,
  o3 as o4,
  s as s2,
  u2
} from "./chunk-JGDJR5EV.js";
import {
  e as e2,
  l,
  u
} from "./chunk-QHK5ZYFW.js";
import {
  n as n2
} from "./chunk-L65HKN25.js";
import {
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";
import {
  g,
  has,
  k
} from "./chunk-J2EGIWT6.js";

// node_modules/@arcgis/core/views/BreakpointsOwner.js
var l9 = { widthBreakpoint: { getValue(e13) {
  const i17 = e13.viewSize[0], s14 = e13.breakpoints, a12 = this.values;
  return i17 <= s14.xsmall ? a12.xsmall : i17 <= s14.small ? a12.small : i17 <= s14.medium ? a12.medium : i17 <= s14.large ? a12.large : a12.xlarge;
}, values: { xsmall: "xsmall", small: "small", medium: "medium", large: "large", xlarge: "xlarge" }, valueToClassName: { xsmall: "esri-view-width-xsmall esri-view-width-less-than-small esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge", small: "esri-view-width-small esri-view-width-greater-than-xsmall esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge", medium: "esri-view-width-medium esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-less-than-large esri-view-width-less-than-xlarge", large: "esri-view-width-large esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-less-than-xlarge", xlarge: "esri-view-width-xlarge esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-greater-than-large" } }, heightBreakpoint: { getValue(e13) {
  const i17 = e13.viewSize[1], s14 = e13.breakpoints, a12 = this.values;
  return i17 <= s14.xsmall ? a12.xsmall : i17 <= s14.small ? a12.small : i17 <= s14.medium ? a12.medium : i17 <= s14.large ? a12.large : a12.xlarge;
}, values: { xsmall: "xsmall", small: "small", medium: "medium", large: "large", xlarge: "xlarge" }, valueToClassName: { xsmall: "esri-view-height-xsmall esri-view-height-less-than-small esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge", small: "esri-view-height-small esri-view-height-greater-than-xsmall esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge", medium: "esri-view-height-medium esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-less-than-large esri-view-height-less-than-xlarge", large: "esri-view-height-large esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-less-than-xlarge", xlarge: "esri-view-height-xlarge esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-greater-than-large" } }, orientation: { getValue(e13) {
  const i17 = e13.viewSize, s14 = i17[0], a12 = i17[1], t13 = this.values;
  return a12 >= s14 ? t13.portrait : t13.landscape;
}, values: { portrait: "portrait", landscape: "landscape" }, valueToClassName: { portrait: "esri-view-orientation-portrait", landscape: "esri-view-orientation-landscape" } } };
var h4 = { xsmall: 544, small: 768, medium: 992, large: 1200 };
function n13(e13) {
  const i17 = e13;
  return i17 && i17.xsmall < i17.small && i17.small < i17.medium && i17.medium < i17.large;
}
function m4(e13, i17) {
  return i17 ? l9[e13].valueToClassName[i17].split(" ") : [];
}
var o10 = (o18) => {
  let g11 = class extends o18 {
    constructor(...e13) {
      super(...e13), this.orientation = null, this.widthBreakpoint = null, this.heightBreakpoint = null, this.breakpoints = h4;
    }
    initialize() {
      this.addHandles(d2(() => [this.breakpoints, this.size], () => this._updateClassNames(), P));
    }
    destroy() {
      this.destroyed || this._removeActiveClassNames();
    }
    set breakpoints(e13) {
      if (e13 === this._get("breakpoints"))
        return;
      if (!n13(e13)) {
        const i17 = JSON.stringify(h4, null, 2);
        console.warn("provided breakpoints are not valid, using defaults:" + i17), e13 = h4;
      }
      this._set("breakpoints", { ...e13 });
    }
    _updateClassNames() {
      if (!this.container)
        return;
      const e13 = t.acquire(), s14 = t.acquire();
      let a12, t13 = false;
      for (a12 in l9) {
        const i17 = this[a12], r14 = l9[a12].getValue({ viewSize: this.size, breakpoints: this.breakpoints });
        i17 !== r14 && (t13 = true, this[a12] = r14, m4(a12, i17).forEach((e14) => s14.push(e14)), m4(a12, r14).forEach((i18) => e13.push(i18)));
      }
      t13 && (this._applyClassNameChanges(e13, s14), t.release(e13), t.release(s14));
    }
    _applyClassNameChanges(e13, i17) {
      const s14 = this.container;
      s14 && (i17.forEach((e14) => s14.classList.remove(e14)), e13.forEach((e14) => s14.classList.add(e14)));
    }
    _removeActiveClassNames() {
      const e13 = this.container;
      if (!e13)
        return;
      let i17;
      for (i17 in l9)
        m4(i17, this[i17]).forEach((i18) => e13.classList.remove(i18));
    }
  };
  return e([y()], g11.prototype, "breakpoints", null), e([y()], g11.prototype, "orientation", void 0), e([y()], g11.prototype, "widthBreakpoint", void 0), e([y()], g11.prototype, "heightBreakpoint", void 0), g11 = e([a("esri.views.BreakpointsOwner")], g11), g11;
};

// node_modules/@arcgis/core/views/overlay/ViewOverlay.js
var a2 = class extends S2 {
  constructor() {
    super(...arguments), this.items = new V(), this._watchUpdatingTracking = new h3(), this._callbacks = /* @__PURE__ */ new Map(), this._projector = i4(), this._hiddenProjector = i4();
  }
  get needsRender() {
    return this.items.length > 0;
  }
  get updating() {
    var _a;
    return ((_a = this._watchUpdatingTracking) == null ? void 0 : _a.updating) ?? false;
  }
  initialize() {
    const t13 = document.createElement("div");
    t13.className = "esri-overlay-surface", this._set("surface", t13), this._hiddenSurface = document.createElement("div"), this._hiddenSurface.setAttribute("style", "visibility: hidden;"), t13.appendChild(this._hiddenSurface), this._watchUpdatingTracking.addOnCollectionChange(() => this.items, (t14) => {
      for (const e13 of t14.added) {
        const t15 = () => e13.render();
        this._callbacks.set(e13, t15), this._projector.append(this.surface, t15);
      }
      for (const e13 of t14.removed) {
        const t15 = this._projector.detach(this._callbacks.get(e13));
        this.surface.removeChild(t15.domNode), this._callbacks.delete(e13);
      }
    });
  }
  addItem(t13) {
    this.items.add(t13);
  }
  removeItem(t13) {
    this.items.remove(t13);
  }
  destroy() {
    this.items.removeAll(), this._callbacks.forEach((t13) => this._projector.detach(t13)), this._callbacks = null, this._projector = null, this._watchUpdatingTracking.destroy();
  }
  render() {
    this._projector.renderNow();
  }
  computeBoundingRect(t13) {
    const e13 = this._hiddenSurface, o18 = this._hiddenProjector;
    let r14;
    const s14 = () => (r14 = t13.render(), r14);
    o18.append(e13, s14), o18.renderNow();
    const i17 = { left: 0, top: 0, right: 0, bottom: 0 };
    if (r14 == null ? void 0 : r14.domNode) {
      const t14 = r14.domNode.getBoundingClientRect();
      i17.left = t14.left, i17.top = t14.top, i17.right = t14.right, i17.bottom = t14.bottom;
    }
    for (o18.detach(s14); e13.firstChild; )
      e13.removeChild(e13.firstChild);
    return i17;
  }
  overlaps(t13, e13) {
    const o18 = this.computeBoundingRect(t13), r14 = this.computeBoundingRect(e13);
    return Math.max(o18.left, r14.left) <= Math.min(o18.right, r14.right) && Math.max(o18.top, r14.top) <= Math.min(o18.bottom, r14.bottom);
  }
  get hasVisibleItems() {
    return this.items.some((t13) => t13.visible);
  }
  async prepare() {
    await document.fonts.load(this._fontString()).catch(() => {
    });
  }
  renderCanvas(t13, e13) {
    const o18 = !!(e13 == null ? void 0 : e13.disableDecorations);
    if (!this.items.some((t14) => t14.visible && !(o18 && t14.isDecoration)))
      return;
    const r14 = t13.getContext("2d");
    r14.save(), r14.font = this._fontString(), this.items.forEach((t14) => {
      o18 && t14.isDecoration || (r14.save(), t14.renderCanvas(r14), r14.restore());
    }), r14.restore();
  }
  _fontString() {
    return `10px ${getComputedStyle(this.surface).fontFamily}`;
  }
};
e([y({ readOnly: true })], a2.prototype, "surface", void 0), e([y({ readOnly: true })], a2.prototype, "items", void 0), e([y({ readOnly: true })], a2.prototype, "needsRender", null), e([y({ readOnly: true })], a2.prototype, "_watchUpdatingTracking", void 0), e([y({ readOnly: true })], a2.prototype, "updating", null), a2 = e([a("esri.views.overlay.ViewOverlay")], a2);
var c8 = a2;

// node_modules/@arcgis/core/views/DOMContainer.js
var y2 = [0, 0];
function v5(e13) {
  const t13 = (e13.ownerDocument || window.document).defaultView, s14 = e13.getBoundingClientRect();
  return y2[0] = s14.left + ((t13 == null ? void 0 : t13.pageXOffset) ?? 0), y2[1] = s14.top + ((t13 == null ? void 0 : t13.pageYOffset) ?? 0), y2;
}
function _4(e13) {
  e13 && (n4(e13), e13.parentNode && e13.parentNode.removeChild(e13));
}
function C2(e13) {
  const t13 = document.createElement("div");
  return e13.appendChild(t13), t13;
}
var w3 = 16;
var H = 750;
var O = 512;
var j = 2;
var b4 = (i17) => {
  let y7 = class extends i17 {
    constructor(...e13) {
      super(...e13), this._freqInfo = { freq: w3, time: H }, this._overlayRenderTaskHandle = null, this.height = 0, this.messagesCommon = null, this.overlay = null, this.position = null, this.resizing = false, this.root = null, this.surface = null, this.suspended = true, this.ui = null, this.userContent = null, this.width = 0, this.widthBreakpoint = null, this.addHandles([d2(() => this.cursor, (e14) => {
        const { surface: t13 } = this;
        t13 && t13.setAttribute("data-cursor", e14);
      }), d2(() => this.navigating, (e14) => {
        const { surface: t13 } = this;
        t13 && t13.setAttribute("data-navigating", e14.toString());
      })]);
    }
    initialize() {
      const e13 = has("mac"), t13 = async () => {
        e13 && (await w(() => this.ready), this.messagesCommon = await h("esri/t9n/common").catch(() => {
        }));
      };
      t13(), this.addHandles([d2(() => this.ui, (e14, t14) => this._handleUIChange(e14, t14), P), this.on("focus", () => this.notifyChange("focused")), this.on("blur", () => this.notifyChange("focused")), f2(t13), d2(() => [this.surface, this.messagesCommon], () => {
        var _a, _b, _c;
        e13 && ((_c = this.surface) == null ? void 0 : _c.setAttribute("aria-label", ((_b = (_a = this.messagesCommon) == null ? void 0 : _a.ariaLabels) == null ? void 0 : _b.navigationMacVoiceOver) ?? ""));
      })]);
    }
    destroy() {
      this.destroyed || (this.ui = u(this.ui), this.container = null);
    }
    get container() {
      return this._get("container") ?? null;
    }
    set container(e13) {
      const i18 = this._get("container"), o18 = e4(e13);
      if (o18 || "string" != typeof e13 || n.getLogger(this).error("#container", `element with id '${e13}' not found`), i18 === o18)
        return;
      if (this._stopMeasuring(), i18 && (i18.classList.remove("esri-view"), this._overlayRenderTaskHandle && (this._overlayRenderTaskHandle.remove(), this._overlayRenderTaskHandle = null), this.overlay && (this.overlay.destroy(), this._set("overlay", null)), this.root && (_4(this.root), this._set("root", null)), this.userContent && (i3(this.userContent, i18), _4(this.userContent), this._set("userContent", null))), !o18)
        return this._set("width", 0), this._set("height", 0), this._set("position", null), this._set("suspended", true), this._set("surface", null), void this._set("container", null);
      o18.classList.add("esri-view");
      const n23 = document.createElement("div");
      n23.className = "esri-view-user-storage", i3(o18, n23), o18.appendChild(n23), this._set("userContent", n23);
      const d9 = document.createElement("div");
      d9.className = "esri-view-root", o18.insertBefore(d9, o18.firstChild), this._set("root", d9);
      const l13 = document.createElement("div");
      l13.className = "esri-view-surface", l13.setAttribute("role", "application"), l13.tabIndex = 0, d9.appendChild(l13), this._set("surface", l13);
      const c15 = new c8();
      d9.appendChild(c15.surface), this._set("overlay", c15), this.addHandles(d2(() => c15.needsRender, (e14) => {
        e14 && !this._overlayRenderTaskHandle ? this._overlayRenderTaskHandle = A2({ render: () => {
          var _a;
          return (_a = this.overlay) == null ? void 0 : _a.render();
        } }) : this._overlayRenderTaskHandle = l(this._overlayRenderTaskHandle);
      })), this.forceDOMReadyCycle(), this._set("container", o18), this._startMeasuring();
    }
    get focused() {
      const e13 = document.activeElement === this.surface;
      return document.hasFocus() && e13;
    }
    get size() {
      return [this.width, this.height];
    }
    blur() {
      var _a;
      (_a = this.surface) == null ? void 0 : _a.blur();
    }
    focus() {
      var _a;
      (_a = this.surface) == null ? void 0 : _a.focus();
    }
    pageToContainer(e13, t13, s14) {
      const i18 = this.position;
      return e13 -= i18 ? i18[0] : 0, t13 -= i18 ? i18[1] : 0, s14 ? (s14[0] = e13, s14[1] = t13) : s14 = [e13, t13], s14;
    }
    containerToPage(e13, t13, s14) {
      const i18 = this.position;
      return e13 += i18 ? i18[0] : 0, t13 += i18 ? i18[1] : 0, s14 ? (s14[0] = e13, s14[1] = t13) : s14 = [e13, t13], s14;
    }
    _handleUIChange(e13, t13) {
      this.removeHandles("ui"), t13 && t13 !== e13 && t13.destroy(), e13 && (e13.view = this, this.addHandles(d2(() => this.root, (t14) => {
        e13.container = t14 ? C2(t14) : null;
      }, P), "ui")), this._set("ui", e13);
    }
    _stopMeasuring() {
      this.removeHandles("measuring"), this._get("resizing") && this._set("resizing", false);
    }
    _startMeasuring() {
      const e13 = this._freqInfo;
      e13.freq = w3, e13.time = H, this.addHandles([o4(window, "resize", () => {
        e13.freq = w3, e13.time = H;
      }), A2({ prepare: (e14) => {
        const t13 = this._measure(), s14 = this._freqInfo;
        if (s14.time += e14.deltaTime, t13 && (s14.freq = w3, this._get("resizing") || this._set("resizing", true)), s14.time < s14.freq)
          return;
        s14.time = 0;
        const i18 = this._position();
        s14.freq = i18 || t13 ? w3 : Math.min(H, s14.freq * j), !t13 && s14.freq >= O && this._get("resizing") && this._set("resizing", false);
      } })], "measuring"), this._measure(), this._position();
    }
    _measure() {
      const e13 = this.container, t13 = e13 ? e13.clientWidth : 0, s14 = e13 ? e13.clientHeight : 0;
      if (0 === t13 || 0 === s14)
        return this.suspended || this._set("suspended", true), false;
      const i18 = this.width, o18 = this.height;
      return t13 === i18 && s14 === o18 ? (this.suspended && this._set("suspended", false), false) : (this._set("width", t13), this._set("height", s14), this.suspended && this._set("suspended", false), this.emit("resize", { oldWidth: i18, oldHeight: o18, width: t13, height: s14 }), true);
    }
    _position() {
      const e13 = this.container, t13 = this.position, s14 = e13 && v5(e13);
      return !!s14 && ((!t13 || s14[0] !== t13[0] || s14[1] !== t13[1]) && (this._set("position", [s14[0], s14[1]]), true));
    }
    forceDOMReadyCycle() {
    }
  };
  return e([y()], y7.prototype, "container", null), e([y({ readOnly: true })], y7.prototype, "focused", null), e([y({ readOnly: true })], y7.prototype, "height", void 0), e([y()], y7.prototype, "messagesCommon", void 0), e([y({ type: c8 })], y7.prototype, "overlay", void 0), e([y({ readOnly: true })], y7.prototype, "position", void 0), e([y({ readOnly: true })], y7.prototype, "resizing", void 0), e([y({ readOnly: true })], y7.prototype, "root", void 0), e([y({ value: null, readOnly: true })], y7.prototype, "size", null), e([y({ readOnly: true })], y7.prototype, "surface", void 0), e([y({ readOnly: true })], y7.prototype, "suspended", void 0), e([y()], y7.prototype, "ui", void 0), e([y({ readOnly: true })], y7.prototype, "userContent", void 0), e([y({ readOnly: true })], y7.prototype, "width", void 0), e([y()], y7.prototype, "widthBreakpoint", void 0), y7 = e([a("esri.views.DOMContainer")], y7), y7;
};

// node_modules/@arcgis/core/views/PopupView.js
function m5(e13) {
  return null != e13 && "open" in e13 && "declaredClass" in e13;
}
function f5(e13) {
  return null != e13 && "declaredClass" in e13 && "dockOptions" in e13;
}
var y3 = (n23) => {
  let y7 = class extends n23 {
    constructor() {
      super(...arguments), this._popupSetupTask = null, this.popup = {}, this.popupEnabled = true;
    }
    initialize() {
      this.addHandles([d2(() => [this.ui, this.popup], ([e13, p13], t13) => {
        const o18 = "popup", i17 = "manual";
        if (t13) {
          const [e14, p14] = t13;
          e14 && m5(p14) && (p14.view = null, f5(p14) && e14.remove(p14, o18));
        }
        e13 && m5(p13) && (p13.view = this, f5(p13) && e13.add(p13, { key: o18, position: i17, internal: true }));
      }, P), this.on("click", (e13) => {
        this.popup && this.popupEnabled && ("mouse" !== e13.pointerType || 0 === e13.button) && (m5(this.popup) ? this.popup.viewModel.handleViewClick(e13) : e13.async(async () => {
          await this.setupPopup(), m5(this.popup) && !this.destroyed && this.ready && this.popupEnabled && this.popup.viewModel.handleViewClick(e13);
        }));
      }, _2.WIDGET)]), w(() => this.ready && this.popupEnabled && !this.updating).then(() => {
        import("./Popup-IVY37X4G.js");
      });
    }
    destroy() {
      this.destroyed || this.closePopup();
    }
    async openPopup(e13) {
      if (m5(this.popup))
        return this.popup.open(e13);
      try {
        if (await this.setupPopup(), !this.popup)
          return void n.getLogger(this).error(new s("view:null-popup", "Popup is null and can't be opened"));
        this.popup.open(e13);
      } catch {
      }
    }
    closePopup() {
      var _a;
      (_a = this._popupSetupTask) == null ? void 0 : _a.abort(), m5(this.popup) && this.popup.close();
    }
    async fetchPopupFeatures(e13, p13) {
      return await this.when(), this._popupHitsToFeatures(await this._getPopupHits(e13, p13), p13);
    }
    async setupPopup() {
      var _a;
      if ((_a = this._popupSetupTask) == null ? void 0 : _a.abort(), this.popup && !m5(this.popup))
        return this._popupSetupTask = d(async (e13) => {
          const { default: p13 } = await import("./Popup-IVY37X4G.js");
          if (s2(e13), !this.popup || m5(this.popup))
            return;
          const t13 = this.popup;
          delete t13.open, delete t13.close, this.popup = new p13(t13);
        }), this._popupSetupTask.promise;
    }
    async _popupHitsToFeatures({ location: e13, hits: p13 }, t13) {
      const o18 = [], i17 = [];
      let s14 = false;
      const n24 = E(t13, has("popup-view-fetch-timeout") ?? P3), u10 = (e14) => {
        const p14 = new g7(e14);
        return i17.push(p14), o18.push(p14.promise), p14;
      }, c15 = (e14) => {
        const p14 = i17.at(-1);
        return p14 && p14.layerView === e14 && !s14 ? p14 : u10(e14);
      };
      for (const r14 of p13)
        if ("graphic" in r14) {
          c15(r14.layerView).graphics.push(r14.graphic), s14 = false;
        } else
          o18.push(r14.layerView.fetchPopupFeaturesAtLocation(r14.mapPoint, n24)), s14 = true;
      i17.map((e14) => e14.resolve(n24));
      const l13 = g2(o18).then((e14) => e14.filter((e15) => !!e15).flat());
      return { pendingFeatures: o18, allGraphicsPromise: l13, location: e13 };
    }
    async _getPopupHits(e13, p13) {
      const { hits: t13, location: o18 } = await this.popupHitTest(e13);
      s2(p13);
      const i17 = [];
      for (const s14 of t13)
        if ("graphic" in s14) {
          if (this._isValidPopupGraphic(s14.graphic, p13)) {
            const e14 = this._isValidPopupGraphicsLayerView(s14.layerView) ? s14.layerView : void 0;
            i17.push({ graphic: s14.graphic, layerView: e14 });
          }
        } else
          this._isValidPopupLocationLayerView(s14.layerView) && i17.push({ mapPoint: s14.mapPoint, layerView: s14.layerView });
      return { hits: i17, location: o18 };
    }
    _isValidPopupGraphic(e13, p13) {
      return e13 && !!e13.getEffectivePopupTemplate(null != p13 && p13.defaultPopupTemplateEnabled);
    }
    _isValidPopupGraphicsLayerView(e13) {
      return !e13 || (!("layer" in e13) || !e13.suspended) && "fetchPopupFeaturesFromGraphics" in e13;
    }
    _isValidPopupLocationLayerView(e13) {
      return (!("layer" in e13) || !e13.suspended) && "fetchPopupFeaturesAtLocation" in e13;
    }
  };
  return e([y({ cast(e13) {
    return !e13 || m5(e13) || "object" == typeof e13 && (e13.open = (e14) => (r(n.getLogger(this), "view.popup is no longer created by default. view.popup.open() will stop working when the popup isn't created", { replacement: "Use view.openPopup() instead.", version: "4.27" }), this.openPopup(e14)), e13.close = () => (r(n.getLogger(this), "view.popup is no longer created by default. view.popup.close() will stop working when the popup isn't created", { replacement: "Use view.closePopup() instead.", version: "4.27" }), this.closePopup())), e13;
  } })], y7.prototype, "popup", void 0), e([y()], y7.prototype, "popupEnabled", void 0), y7 = e([a("esri.views.PopupView")], y7), y7;
};
var g7 = class {
  constructor(e13) {
    this.layerView = e13, this._resolver = L(), this.graphics = [];
  }
  get promise() {
    return this._resolver.promise;
  }
  resolve(e13) {
    const { layerView: p13, graphics: t13, _resolver: o18 } = this;
    if (!p13)
      return o18.resolve(t13), o18.promise;
    let i17;
    return p13.fetchPopupFeaturesFromGraphics(t13, e13).catch((e14) => (i17 = e14, null)).then((e14) => {
      e14 ? o18.resolve(e14) : o18.reject(i17);
    }), o18.promise;
  }
};
var P3 = 5e3;

// node_modules/@arcgis/core/support/AnalysesCollection.js
var t6 = class extends n11 {
  constructor(e13) {
    super(e13), this.addHandles(this.on("before-add", (e14) => {
      null != e14.item && e14.item.parent === this.owner && (n.getLogger(this).warn("Analysis inside the collection must be unique. Not adding this element again."), e14.preventDefault());
    }));
  }
  _own(e13) {
    e13.parent = this.owner;
  }
  _release(e13) {
    e13.parent = null;
  }
};
t6 = e([a("esri.support.AnalysesCollection")], t6);

// node_modules/@arcgis/core/views/BasemapView.js
var n14 = class extends S2 {
  constructor(e13) {
    super(e13), this.view = null, this.baseLayerViews = new V(), this.referenceLayerViews = new V(), this._loadingHandle = d2(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.basemap;
    }, (e14) => {
      e14 && e14.load().catch(() => {
      });
    }, P);
  }
  destroy() {
    this._set("view", null), this._loadingHandle && (this._loadingHandle.remove(), this._loadingHandle = null);
    for (const e13 of this.baseLayerViews)
      e13.destroy();
    this.baseLayerViews.length = 0;
    for (const e13 of this.referenceLayerViews)
      e13.destroy();
    this.referenceLayerViews.length = 0;
  }
  get suspended() {
    return !this.view || this.view.suspended;
  }
  get updating() {
    var _a, _b;
    if (this.view && this.view.suspended)
      return false;
    const e13 = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.basemap;
    return !!e13 && (!!e13.loaded && (this.baseLayerViews.some((e14) => e14.updating) || this.referenceLayerViews.some((e14) => e14.updating)));
  }
};
e([y({ constructOnly: true })], n14.prototype, "view", void 0), e([y({ readOnly: true })], n14.prototype, "baseLayerViews", void 0), e([y({ readOnly: true })], n14.prototype, "referenceLayerViews", void 0), e([y({ readOnly: true })], n14.prototype, "suspended", null), e([y({ type: Boolean, readOnly: true })], n14.prototype, "updating", null), n14 = e([a("esri.views.BasemapView")], n14);

// node_modules/@arcgis/core/views/LayerViewManager.js
function v6(e13) {
  return "tryRecycleWith" in e13;
}
var V2 = class {
  constructor(e13, r14, t13) {
    this.layer = e13, this.view = r14, this.layerViewImporter = t13, this._controller = new AbortController(), this._deferred = L(), this._started = false, this.done = false, this.promise = this._deferred.promise, m(this._controller.signal, () => {
      const r15 = new s("cancelled:layerview-create", "layerview creation cancelled", { layer: e13 });
      this._deferred.reject(r15);
    });
  }
  tryRecycle(e13) {
    if (!this.done || !this.layerView || !v6(this.layerView))
      return null;
    const r14 = this.layer.type, i17 = this._controller.signal;
    for (let t13 = 0; t13 < e13.length; t13++) {
      const s14 = e13[t13];
      if (s14.type !== r14)
        continue;
      const a12 = this.layerView.tryRecycleWith(s14, { signal: i17 });
      if (a12) {
        e13.splice(t13, 1), this.layer = s14;
        const r15 = this.layerView, i18 = r15.view;
        return this.promise = Promise.race([a12.then(() => (s2(this._controller.signal), s14.emit("layerview-destroy", { view: i18, layerView: r15 }), i18.emit("layerview-destroy", { view: i18, layerView: r15 }), s14.emit("layerview-create", { view: i18, layerView: r15 }), i18.emit("layerview-create", { view: i18, layerView: r15 }), r15)), new Promise((e14, r16) => m(this._controller.signal, () => r16(u2())))]), this.promise;
      }
    }
    return null;
  }
  destroy() {
    this._controller.abort();
    const { layerView: e13 } = this;
    if (e13) {
      const { layer: r14, view: i17 } = this;
      r14.emit("layerview-destroy", { view: i17, layerView: e13 }), i17.emit("layerview-destroy", { layer: r14, layerView: e13 });
    }
    this.done = true, this.layer = null, this.layerView = null, this.view = null, this.layerViewImporter = null, this._map = null;
  }
  async start() {
    var _a, _b;
    if (this._started)
      return;
    this._started = true;
    const { _controller: { signal: e13 }, layer: r14, view: t13 } = this;
    this._map = t13.map;
    try {
      let o18, l13;
      if (await r14.load({ signal: e13 }), r14.prefetchResources && await r14.prefetchResources({ signal: e13 }), I(r14))
        o18 = await r14.createLayerView(t13, { signal: e13 });
      else {
        if (!this.layerViewImporter.hasLayerViewModule(r14))
          throw new s("layer:view-not-supported", "No layerview implementation was found");
        const s14 = await this.layerViewImporter.importLayerView(r14);
        s2(e13), o18 = "default" in s14 ? new s14.default({ layer: r14, view: t13 }) : new s14({ layer: r14, view: t13 });
      }
      const n23 = () => {
        l13 = l(l13), o18.destroyed || o18.destroy(), o18.layer = null, o18.parent = null, o18.view = null, this.done = true;
      };
      l13 = m(e13, n23), s2(e13);
      try {
        await o18.when();
      } catch (s14) {
        throw n23(), s14;
      }
      const c15 = (_b = (_a = this._map) == null ? void 0 : _a.allLayers) == null ? void 0 : _b.includes(r14);
      if (!c15)
        return n23(), void this._deferred.reject(new s("view:no-layerview-for-layer", "The layer has been removed from the map", { layer: r14 }));
      this.layerView = o18, r14.emit("layerview-create", { view: t13, layerView: o18 }), t13.emit("layerview-create", { layer: r14, layerView: o18 }), this.done = true, this._deferred.resolve(o18);
    } catch (s14) {
      r14.emit("layerview-create-error", { view: t13, error: s14 }), t13.emit("layerview-create-error", { layer: r14, error: s14 }), this.done = true, this._deferred.reject(new s("layerview:create-error", "layerview creation failed", { layer: r14, error: s14 }));
    }
  }
};
var L3 = class extends S2 {
  constructor(e13) {
    super(e13), this._layerLayerViewInfoMap = /* @__PURE__ */ new Map(), this._recyclingInfoMap = /* @__PURE__ */ new Map(), this._watchUpdatingTracking = new h3(), this.supportsGround = true, this._preloadLayerViewModules = () => {
      var _a;
      const e14 = (_a = this.view.map) == null ? void 0 : _a.allLayers;
      if (e14)
        for (const r14 of e14)
          this.layerViewImporter.hasLayerViewModule(r14) && this.layerViewImporter.importLayerView(r14);
    }, this._reschedule = () => this.destroyed ? Promise.reject() : (null == this._workPromise && (this._workPromise = L(), this._workPromise.promise.catch(() => {
    })), this.removeHandles("reschedule"), this.addHandles(v(this._doWork), "reschedule"), this._workPromise.promise), this._doWork = () => {
      var _a, _b, _c;
      if (this.destroyed)
        return;
      const e14 = this.view.map;
      if (this._map !== e14 && (this.clear(), this._map = e14), null == this._workPromise)
        return void this.notifyChange("updating");
      this.removeHandles("reschedule"), this.removeHandles("collection-change");
      const r14 = /* @__PURE__ */ new Set(), i17 = [], t13 = this.view.ready, s14 = (e15) => {
        if (null != e15) {
          for (const a13 of e15)
            if (a13) {
              r14.add(a13);
              const e16 = this._layerLayerViewInfoMap.get(a13);
              e16 && t13 ? e16.start() : e16 || this._recyclingInfoMap.has(a13) || i17.push(a13), "layers" in a13 && a13.layers && s14(a13.layers);
            }
        }
      };
      for (const o18 of this._rootCollectionNames)
        s14(o2(this, o18));
      for (const [o18, l13] of this._layerLayerViewInfoMap)
        if (!r14.has(o18)) {
          this._layerLayerViewInfoMap.delete(l13.layer);
          const e15 = l13.tryRecycle(i17);
          e15 ? (this.notifyChange("updating"), this._recyclingInfoMap.set(l13.layer, l13), e15.then(() => {
            this.notifyChange("updating"), this._recyclingInfoMap.delete(l13.layer), this._layerLayerViewInfoMap.set(l13.layer, l13), this._reschedule();
          }).catch(() => {
            this.notifyChange("updating"), this._recyclingInfoMap.delete(l13.layer), l13.destroy(), this._reschedule();
          })) : l13.destroy();
        }
      for (const [o18, l13] of this._recyclingInfoMap)
        r14.has(o18) || (this.notifyChange("updating"), this._recyclingInfoMap.delete(l13.layer), l13.destroy());
      for (const o18 of i17)
        this._createLayerView(o18);
      this._refreshCollections();
      const a12 = [(_a = e14 == null ? void 0 : e14.ground) == null ? void 0 : _a.layers, (_b = e14 == null ? void 0 : e14.basemap) == null ? void 0 : _b.baseLayers, (_c = e14 == null ? void 0 : e14.basemap) == null ? void 0 : _c.referenceLayers, e14 == null ? void 0 : e14.layers].filter((e15) => !!e15);
      r14.forEach((e15) => "layers" in e15 && a12.push(e15.layers)), this.addHandles(a12.map((e15) => this._watchUpdatingTracking.addOnCollectionChange(() => e15, this._reschedule)), "collection-change"), this._workPromise.resolve(), this._workPromise = null;
    };
  }
  initialize() {
    this.addHandles([v2(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.allLayers;
    }, "change", this._preloadLayerViewModules, { onListenerAdd: this._preloadLayerViewModules }), d2(() => {
      const e13 = this.view, r14 = e13 == null ? void 0 : e13.map;
      return [r14 == null ? void 0 : r14.basemap, r14 == null ? void 0 : r14.ground, r14 == null ? void 0 : r14.layers, e13 == null ? void 0 : e13.ready];
    }, () => this._reschedule(), A3)]), this._preloadLayerViewModules(), this._reschedule();
  }
  destroy() {
    this.clear(), n8(this._recyclingInfoMap), n8(this._layerLayerViewInfoMap), this._watchUpdatingTracking.destroy(), this._map = null, null != this._workPromise && (this._workPromise.reject(u2()), this._workPromise = null);
  }
  get _layersToLayerViews() {
    const e13 = [["view.map.basemap.baseLayers", "view.basemapView.baseLayerViews"], ["view.map.layers", "view.layerViews"], ["view.map.basemap.referenceLayers", "view.basemapView.referenceLayerViews"]];
    return this.supportsGround && e13.push(["view.map.ground.layers", "view.groundView.layerViews"]), new Map(e13);
  }
  get _rootCollectionNames() {
    return Array.from(this._layersToLayerViews.keys());
  }
  get updating() {
    return null != this._workPromise || this._watchUpdatingTracking.updating || n3(this._layerLayerViewInfoMap, (e13) => !e13.done) || this._recyclingInfoMap.size > 0;
  }
  get updatingRemaining() {
    let e13 = 0;
    for (const r14 of this._layerLayerViewInfoMap.values())
      r14.done || ++e13;
    return e13;
  }
  clear() {
    this.destroyed || (n8(this._layerLayerViewInfoMap), this._refreshCollections());
  }
  async whenLayerView(e13) {
    if (await this._reschedule(), !this._layerLayerViewInfoMap.has(e13)) {
      if (this._recyclingInfoMap.has(e13))
        return this._recyclingInfoMap.get(e13).promise;
      throw new s("view:no-layerview-for-layer", "No layerview has been found for the layer", { layer: e13 });
    }
    return this._layerLayerViewInfoMap.get(e13).promise;
  }
  _refreshCollections() {
    for (const [e13, r14] of this._layersToLayerViews)
      this._populateLayerViewsOwners(o2(this, e13), o2(this, r14), this.view);
    this.notifyChange("updating"), this.notifyChange("updatingRemaining");
  }
  _populateLayerViewsOwners(e13, r14, i17) {
    if (!e13 || !r14)
      return void (r14 && r14.removeAll());
    let t13 = 0;
    for (const s14 of e13) {
      const e14 = this._layerLayerViewInfoMap.get(s14);
      if (!(e14 == null ? void 0 : e14.layerView))
        continue;
      const a12 = e14.layerView;
      a12.layer = s14, a12.parent = i17, r14.at(t13) !== a12 && r14.splice(t13, 0, a12), s14.layers && this._populateLayerViewsOwners(s14.layers, a12.layerViews, a12), t13 += 1;
    }
    t13 < r14.length && r14.splice(t13, r14.length);
  }
  _createLayerView(e13) {
    e13.load().catch(() => {
    }), this.layerViewImporter.hasLayerViewModule(e13) && this.layerViewImporter.importLayerView(e13);
    const r14 = new V2(e13, this.view, this.layerViewImporter);
    r14.promise.then(() => this._refreshCollections(), (r15) => {
      r15 && (b(r15) || "cancelled:layerview-create" === r15.name) || n.getLogger(this).error(`Failed to create layerview for layer title:'${e13.title ?? "no title"}', id:'${e13.id ?? "no id"}' of type '${e13.type}'.`, { layer: e13, error: r15 }), this._refreshCollections();
    }), this._layerLayerViewInfoMap.set(e13, r14), this.view.ready && r14.start(), this.notifyChange("updating"), this.notifyChange("updatingRemaining");
  }
};
e([y()], L3.prototype, "_workPromise", void 0), e([y({ readOnly: true })], L3.prototype, "_watchUpdatingTracking", void 0), e([y({ readOnly: true })], L3.prototype, "_layersToLayerViews", null), e([y({ readOnly: true })], L3.prototype, "_rootCollectionNames", null), e([y()], L3.prototype, "layerViewImporter", void 0), e([y()], L3.prototype, "supportsGround", void 0), e([y({ readOnly: true })], L3.prototype, "updating", null), e([y({ readOnly: true })], L3.prototype, "updatingRemaining", null), e([y({ constructOnly: true })], L3.prototype, "view", void 0), L3 = e([a("esri.views.LayerViewManager")], L3);
var M2 = L3;
function I(e13) {
  return "createLayerView" in e13 && null != e13.createLayerView;
}

// node_modules/@arcgis/core/views/Magnifier.js
var i10 = class extends S2 {
  constructor(o18) {
    super(o18), this.factor = 1.5, this.offset = c4(0, 0), this.position = null, this.size = 120, this.maskUrl = null, this.maskEnabled = true, this.overlayUrl = null, this.overlayEnabled = true, this.visible = true;
  }
  get version() {
    return this.commitProperty("factor"), this.commitProperty("offset"), this.commitProperty("position"), this.commitProperty("visible"), this.commitProperty("size"), this.commitProperty("maskUrl"), this.commitProperty("maskEnabled"), this.commitProperty("overlayUrl"), this.commitProperty("overlayEnabled"), (this._get("version") || 0) + 1;
  }
};
e([y({ type: Number })], i10.prototype, "factor", void 0), e([y({ nonNullable: true })], i10.prototype, "offset", void 0), e([y()], i10.prototype, "position", void 0), e([y({ type: Number, range: { min: 0 } })], i10.prototype, "size", void 0), e([y()], i10.prototype, "maskUrl", void 0), e([y()], i10.prototype, "maskEnabled", void 0), e([y()], i10.prototype, "overlayUrl", void 0), e([y()], i10.prototype, "overlayEnabled", void 0), e([y({ readOnly: true })], i10.prototype, "version", null), e([y({ type: Boolean })], i10.prototype, "visible", void 0), i10 = e([a("esri.views.Magnifier")], i10);
var p3 = i10;

// node_modules/@arcgis/core/views/SelectionManager.js
var _5 = class extends o5.EventedAccessor {
  constructor(e13) {
    super(e13), this._selectionMap = new s4(), this._trashCan = [], this._layerEditHandles = new V(), this._vizTaskId = 0, this.showHighlight = true;
  }
  initialize() {
    this.addHandles([d2(() => [this.view, this.showHighlight], () => this._refreshVisualization()), v2(() => this.sources, "change", (e14) => {
      const t13 = this._selectionMap;
      for (const s14 of e14.removed)
        t13.delete(s14);
      this._refreshListeners(), this._refreshVisualization();
    }, { onListenerAdd: () => this._refreshListeners() })]);
    const e13 = new V();
    this.view.when().then(() => {
      this.view.map.allLayers.flatten((e14) => "sublayers" in e14 && e14.sublayers ? e14.sublayers : null).forEach((t13) => {
        (y4(t13) && !c3(t13) || l2(t13)) && e13.add(t13);
      }), this._set("sources", e13);
    });
  }
  destroy() {
    this._layerEditHandles.drain(l);
  }
  get selections() {
    return Array.from(this._selectionMap.entries()).map((e13) => {
      const [t13, s14] = e13;
      return { layer: t13, selection: [...s14.selection] };
    });
  }
  get count() {
    let e13 = 0;
    for (const t13 of this._selectionMap.values())
      e13 += t13.selection.length;
    return e13;
  }
  get hasSelection() {
    return this.count > 0;
  }
  get sources() {
    return this._get("sources");
  }
  set sources(e13) {
    this._set("sources", e13);
  }
  async getSelectedFeatures(e13, t13 = {}, s14 = "layerView") {
    const { view: o18, selections: i17 } = this, n23 = (void 0 !== e13 ? i17.filter((t14) => e13.includes(t14.layer)) : i17).filter((e14) => e14.selection.length > 0).map(async (e14) => {
      const { layer: i18, selection: n24 } = e14, r14 = l2(i18) ? i18.parent : i18;
      if (null == r14 || !v7(r14))
        return null;
      if ("layer" === s14)
        return S4(r14, n24, t13);
      const l13 = await o18.whenLayerView(r14);
      return S4(l13, n24, t13);
    });
    return (await Promise.all(n23)).filter((e14) => null !== e14);
  }
  updateSelection(e13) {
    const s14 = /* @__PURE__ */ new Map();
    for (const [t13, n23] of this._selectionMap)
      s14.set(t13, [...n23.selection]);
    let o18 = false;
    const i17 = e13.current.concat(e13.added);
    for (const t13 of i17) {
      const e14 = t13.sourceLayer, i18 = t13.getObjectId();
      if (this.sources.includes(e14) && (y4(e14) || l2(e14)) && null !== i18) {
        const t14 = r3(s14, e14, () => []);
        t14.includes(i18) || (t14.push(i18), o18 = true);
      }
    }
    for (const t13 of e13.removed) {
      const e14 = t13.sourceLayer, i18 = t13.getObjectId();
      if (this.sources.includes(e14) && (y4(e14) || l2(e14)) && null !== i18) {
        const t14 = s14.get(e14), n23 = t14 == null ? void 0 : t14.indexOf(i18);
        void 0 !== n23 && n23 >= 0 && (t14 == null ? void 0 : t14.splice(n23, 1), o18 = true);
      }
    }
    if (o18) {
      const { _selectionMap: e14, _trashCan: o19 } = this, i18 = [];
      for (const [n23, r14] of s14) {
        const s15 = e14.get(n23);
        void 0 !== s15 && o19.push(s15), e14.set(n23, { selection: r14 }), i18.push({ layer: n23, selection: r14, ...g(void 0 !== s15 ? s15.selection : [], r14) });
      }
      this._onSelectionChange(i18);
    }
  }
  setSelection(e13, t13) {
    this._setSelection(e13, t13);
  }
  getSelection(e13) {
    const t13 = this._selectionMap.get(e13);
    return t13 == null ? void 0 : t13.selection;
  }
  appendToSelection(e13, t13) {
    const s14 = this._selectionMap.get(e13), o18 = void 0 !== s14 ? [...s14.selection] : [];
    for (const i17 of t13)
      o18.includes(i17) || o18.push(i17);
    this._setSelection(e13, o18);
  }
  removeFromSelection(e13, t13) {
    const s14 = this._selectionMap.get(e13);
    if (!s14)
      return;
    const o18 = [];
    for (const i17 of s14.selection)
      t13.includes(i17) || o18.push(i17);
    this._setSelection(e13, o18);
  }
  toggleInSelection(e13, t13) {
    const s14 = this._selectionMap.get(e13);
    if (!s14 || 0 === s14.selection.length)
      return void this._setSelection(e13, t13);
    const o18 = new Set(s14.selection), i17 = new Set(t13), n23 = i(o18, i17);
    this._setSelection(e13, Array.from(n23));
  }
  clear() {
    const e13 = this._selectionMap.values();
    this._trashCan.push(...e13);
    const t13 = [];
    for (const [s14, o18] of this._selectionMap.entries())
      t13.push({ layer: s14, added: [], removed: [...o18.selection], selection: [] });
    this._selectionMap.clear(), this._onSelectionChange(t13);
  }
  _onSelectionChange(e13) {
    this._refreshVisualization(), this.emit("selection-change", { view: this.view, changes: e13 });
  }
  _refreshVisualization() {
    var _a;
    if (null == this.view || null == this.sources)
      return;
    for (this._vizTaskId++; this._trashCan.length > 0; ) {
      const e14 = this._trashCan.pop();
      (_a = e14 == null ? void 0 : e14.highlightHandle) == null ? void 0 : _a.remove();
    }
    const { sources: e13, view: t13, _selectionMap: s14, showHighlight: o18 } = this, i17 = this._vizTaskId;
    for (const n23 of e13) {
      const e14 = s14.get(n23), r14 = l2(n23) ? n23.parent : n23;
      null != r14 && v7(r14) && t13.whenLayerView(r14).then((t14) => {
        var _a2;
        (_a2 = e14 == null ? void 0 : e14.highlightHandle) == null ? void 0 : _a2.remove(), void 0 !== e14 && o18 && i17 === this._vizTaskId && "highlight" in t14 && "function" == typeof t14.highlight && e14.selection.length > 0 && (e14.highlightHandle = t14.highlight(e14.selection, "selection"));
      });
    }
  }
  _refreshListeners() {
    this._layerEditHandles.drain(l);
    for (const e13 of this.sources) {
      const t13 = l2(e13) ? e13.parent : e13;
      if (null != t13 && y4(t13)) {
        const s14 = t13.on("edits", (t14) => {
          this._handleEditChanges(t14, e13);
        });
        this._layerEditHandles.push(s14);
      }
    }
  }
  _handleEditChanges(e13, t13) {
    if (void 0 !== e13.deletedFeatures && e13.deletedFeatures.length > 0 && this._selectionMap.has(t13)) {
      const o18 = e13.deletedFeatures.filter((e14) => null == e14.error).map((e14) => e14.objectId).filter(k);
      this.removeFromSelection(t13, o18);
    }
  }
  _setSelection(e13, s14) {
    if (!this.sources.includes(e13))
      throw new Error(`Cannot set selection on layer ${e13.title} because it is not in 'sources'`);
    const o18 = this._selectionMap.get(e13);
    if (void 0 === o18 || !w4(o18, { selection: s14 })) {
      void 0 !== o18 && this._trashCan.push(o18), this._selectionMap.set(e13, { selection: [...s14] });
      const i17 = { layer: e13, selection: [...s14], ...g(void 0 !== o18 ? o18.selection : [], s14) };
      this._onSelectionChange([i17]);
    }
  }
};
e([y({ readOnly: true, nonNullable: true })], _5.prototype, "selections", null), e([y({ readOnly: true, nonNullable: true })], _5.prototype, "count", null), e([y({ constructOnly: true, nonNullable: true })], _5.prototype, "view", void 0), e([y({ readOnly: true, nonNullable: true })], _5.prototype, "hasSelection", null), e([y()], _5.prototype, "showHighlight", void 0), e([y()], _5.prototype, "sources", null), _5 = e([a("esri.views.SelectionManager")], _5);
var y4 = (e13) => void 0 !== e13.createQuery && void 0 !== e13.on;
var m6 = (e13) => void 0 !== e13.layer;
var v7 = (e13) => void 0 !== (e13 == null ? void 0 : e13.when);
var w4 = (e13, t13) => {
  if (null == e13 && null == t13)
    return true;
  if (null != e13 && null == t13 || null == e13 && null != t13)
    return false;
  if (null != e13 && null != t13 && null != e13.selection && null != t13.selection) {
    const s14 = [...e13.selection], o18 = [...t13.selection];
    if (s14.length !== o18.length)
      return false;
    s14.sort(), o18.sort();
    for (let e14 = 0; e14 < s14.length; e14++)
      if (s14[e14] !== o18[e14])
        return false;
  }
  return true;
};
var S4 = async (e13, t13, s14 = {}) => {
  let o18;
  if (m6(e13)) {
    const i17 = e13;
    o18 = void 0 === i17 ? null : await i17.queryFeatures(new b3({ ...s14, objectIds: t13 })).then((t14) => ({ data: t14, layer: e13.layer }));
  } else {
    const i17 = e13;
    o18 = void 0 === i17 ? null : await i17.queryFeatures(new b3({ ...s14, objectIds: t13 })).then((e14) => ({ data: e14, layer: i17 }));
  }
  return o18;
};
var M3 = _5;

// node_modules/@arcgis/core/views/Theme.js
var p4 = class extends i2(S2) {
  constructor(o18) {
    super(o18), this.accentColor = new u4([255, 127, 0]), this.textColor = new u4([255, 255, 255]);
  }
};
e([y({ type: u4, nonNullable: true })], p4.prototype, "accentColor", void 0), e([y({ type: u4, nonNullable: true })], p4.prototype, "textColor", void 0), p4 = e([a("esri.views.Theme")], p4);
var l10 = p4;

// node_modules/@arcgis/core/views/interactive/interactiveToolUtils.js
function o11(t13) {
  return [t13.on("before-add", (o18) => {
    const i17 = o18.item;
    if (null == i17 || t13.includes(i17))
      return n.getLogger("esri.views.interactive.interactiveToolUtils").warn("Tool is either already in the list of tools or tool is `null`. Not adding tool."), void o18.preventDefault();
    i17.onAdd();
  }), t13.on("after-remove", (e13) => {
    const t14 = e13.item;
    t14.active && (t14.view.activeTool = null), t14.destroy();
  })];
}
function i11(e13) {
  return e13.visible && null != e13.getEditableFlag && e13.getEditableFlag(o9.USER) && e13.getEditableFlag(o9.MANAGER);
}

// node_modules/@arcgis/core/views/interactive/ToolViewManagerManipulatorState.js
var n15 = class {
  constructor() {
    this._pointerLocations = /* @__PURE__ */ new Map(), this._hoveredManipulators = /* @__PURE__ */ new Map(), this._grabbedManipulators = /* @__PURE__ */ new Map(), this._draggedManipulators = /* @__PURE__ */ new Map(), this._stopDrag = false, this._revertToNullActiveTool = false, this._cursor = null;
  }
  get cursor() {
    return this._cursor;
  }
  hasFocusedManipulators() {
    return this._grabbedManipulators.size > 0 || this._draggedManipulators.size > 0;
  }
  handleInputEvent(t13, e13) {
    const a12 = () => t13.stopPropagation();
    switch (t13.type) {
      case "pointer-move":
        p5(t13.pointerType) && this._pointerLocations.set(t13.pointerId, { x: t13.x, y: t13.y, pointerType: t13.pointerType });
        break;
      case "drag":
        this._grabbedManipulators.size > 0 && (this._stopDrag = true), this._stopDrag && (a12(), "end" === t13.action && (this._stopDrag = false));
        break;
      case "pointer-down": {
        if (!u6(t13))
          break;
        const o18 = n12(t13), i17 = l11(o18, t13.pointerType, e13.forEachTool);
        if (null == i17)
          break;
        const n23 = i17.manipulator, s14 = i17.tool;
        null == n23 || null == s14 || !n23.interactive || n23.grabbable && n23.grabbableForEvent(t13) || !n23.grabbing || n23.dragging || this._releaseManipulatorBeforeDragging(n23, t13, e13), null != n23 && null != s14 && n23.interactive && n23.grabbable && n23.grabbableForEvent(t13) && !n23.grabbing && (this._grabbedManipulators.set(t13.pointerId, { manipulator: n23, tool: s14, start: o18, pointerType: t13.pointerType }), 1 === this._grabbedManipulators.size && null == e13.activeTool && (this._revertToNullActiveTool = true, e13.setActiveTool(i17.tool)), n23.grabbing = true, n23.events.emit("grab-changed", { action: "start", pointerType: t13.pointerType, screenPoint: o18 }), a12());
        break;
      }
      case "pointer-up":
        this._draggedManipulators.has(t13.pointerId) || this._handlePointerEnd(t13, e13);
        break;
      case "pointer-drag": {
        if (!u6(t13))
          break;
        const i17 = this._grabbedManipulators.get(t13.pointerId), n23 = i17 == null ? void 0 : i17.manipulator, s14 = i17 == null ? void 0 : i17.tool;
        if (null == n23 || null == s14)
          break;
        const l13 = n12(t13);
        l13.x = e6(l13.x, 0, e13.view.width), l13.y = e6(l13.y, 0, e13.view.height);
        const p13 = i17.start, c15 = this._draggedManipulators.get(t13.pointerId);
        switch (t13.action) {
          case "start":
          case "update":
            "update" !== t13.action && 1 !== this._grabbedManipulators.size || (n23.dragging = true, c15 ? n23.events.emit("drag", { action: "update", start: p13, screenPoint: l13 }) : n23.events.emit("drag", { action: "start", start: p13, screenPoint: l13, pointerType: t13.pointerType }), this._draggedManipulators.set(t13.pointerId, { tool: s14, manipulator: n23, start: p13 }));
            break;
          case "end":
            n23.dragging = false, c15 && n23.events.emit("drag", { action: "end", start: p13, screenPoint: l13 }), this._draggedManipulators.delete(t13.pointerId), this._handlePointerEnd(t13, e13);
        }
        a12();
        break;
      }
      case "immediate-click": {
        const o18 = n12(t13), i17 = l11(o18, t13.pointerType, e13.forEachTool);
        if (c9(t13) || e13.forEachTool((t14) => {
          if ((null == i17 || i17.tool !== t14 || t14.automaticManipulatorSelection) && t14.manipulators) {
            let e14 = false;
            t14.manipulators.forEach(({ manipulator: t15 }) => {
              t15.selected && (t15.selected = false, e14 = true);
            }), e14 && t14.onManipulatorSelectionChanged && t14.onManipulatorSelectionChanged();
          }
        }), null == i17)
          break;
        const { manipulator: n23, tool: s14 } = i17;
        if (!n23.interactive)
          break;
        n23.selectable && s14.automaticManipulatorSelection && (n23.selected = !n23.selected, s14.onManipulatorSelectionChanged && s14.onManipulatorSelectionChanged());
        const p13 = t13.native.shiftKey;
        n23.events.emit("immediate-click", { screenPoint: o18, button: t13.button, pointerType: t13.pointerType, shiftKey: p13, stopPropagation: a12 }), d5(n23, a12);
        break;
      }
      case "click": {
        const o18 = n12(t13), i17 = l11(o18, t13.pointerType, e13.forEachTool), n23 = i17 == null ? void 0 : i17.manipulator;
        if (null == n23 || !n23.interactive)
          break;
        const s14 = t13.native.shiftKey;
        n23.events.emit(t13.type, { screenPoint: o18, button: t13.button, pointerType: t13.pointerType, shiftKey: s14 }), a12();
        break;
      }
      case "double-click": {
        const o18 = n12(t13), i17 = l11(o18, t13.pointerType, e13.forEachTool), n23 = null != i17 ? i17.manipulator : null;
        if (null == n23 || !n23.interactive)
          break;
        const s14 = t13.native.shiftKey;
        n23.events.emit("double-click", { screenPoint: o18, button: t13.button, pointerType: t13.pointerType, shiftKey: s14, stopPropagation: a12 }), d5(n23, a12);
        break;
      }
      case "immediate-double-click": {
        const o18 = n12(t13), i17 = l11(o18, t13.pointerType, e13.forEachTool), n23 = null != i17 ? i17.manipulator : null;
        if (null == n23 || !n23.interactive)
          break;
        const s14 = t13.native.shiftKey;
        n23.events.emit("immediate-double-click", { screenPoint: o18, button: t13.button, pointerType: t13.pointerType, shiftKey: s14, stopPropagation: a12 }), d5(n23, a12);
        break;
      }
    }
    this._onFocusChange(e13.forEachTool);
  }
  _releaseManipulatorBeforeDragging(t13, e13, o18) {
    t13.grabbing = false, t13.events.emit("grab-changed", { action: "end", pointerType: e13.pointerType, screenPoint: n12(e13) }), this._grabbedManipulators.forEach(({ manipulator: e14 }, o19) => {
      e14 === t13 && this._grabbedManipulators.delete(o19);
    }), this._afterManipulatorRelease(o18.setActiveTool);
  }
  _handlePointerEnd(t13, e13) {
    var _a;
    const o18 = (_a = this._grabbedManipulators.get(t13.pointerId)) == null ? void 0 : _a.manipulator;
    null != o18 && o18.grabbing && (o18.grabbing = false, o18.events.emit("grab-changed", { action: "end", pointerType: t13.pointerType, screenPoint: n12(t13) }), this._grabbedManipulators.delete(t13.pointerId), this._afterManipulatorRelease(e13.setActiveTool));
  }
  _onFocusChange(t13) {
    this._updateCursor(), this._updateFocusedManipulatorTools(t13);
  }
  _updateCursor() {
    this._grabbedManipulators.size > 0 ? this._cursor = s6(this._grabbedManipulators) || "grabbing" : this._hoveredManipulators.size > 0 ? this._cursor = s6(this._hoveredManipulators) || "pointer" : this._cursor = null;
  }
  _updateFocusedManipulatorTools(e13) {
    const o18 = /* @__PURE__ */ new Set(), a12 = /* @__PURE__ */ new Set();
    this._grabbedManipulators.forEach(({ tool: t13 }) => {
      o18.add(t13);
    }), this._hoveredManipulators.forEach(({ tool: t13 }) => {
      a12.add(t13);
    }), e13((e14) => {
      e14.hasGrabbedManipulators = o18.has(e14), e14.hasHoveredManipulators = a12.has(e14);
      const i17 = this._grabbedManipulators.values(), r14 = o(i17, ({ tool: t13 }) => t13 === e14);
      e14.firstGrabbedManipulator = null != r14 ? r14.manipulator : null;
    });
  }
  clearPointers(t13, { forEachTool: e13, setActiveTool: o18 }, a12 = true, i17) {
    const r14 = (e14, o19) => e14 === t13 && (null == i17 || i17 === o19);
    this._grabbedManipulators.forEach(({ tool: t14, manipulator: e14, pointerType: o19 }, a13) => {
      r14(t14, e14) && (this._grabbedManipulators.delete(a13), e14.grabbing = false, e14.events.emit("grab-changed", { action: "end", screenPoint: null, pointerType: o19 }));
    }), this._draggedManipulators.forEach(({ tool: t14, manipulator: e14 }, o19) => {
      r14(t14, e14) && (this._draggedManipulators.delete(o19), e14.dragging = false, e14.events.emit("drag", { action: "cancel" }));
    }), a12 && this._hoveredManipulators.forEach(({ tool: t14, manipulator: e14 }, o19) => {
      r14(t14, e14) && (this._hoveredManipulators.delete(o19), e14.hovering = false);
    }), this._afterManipulatorRelease(o18), this._onFocusChange(e13);
  }
  updateHoveredStateFromKnownPointers(t13) {
    this._pointerLocations.forEach((e13, o18) => {
      this._updateHoveredStateForPointerAtScreenPosition(c4(e13.x, e13.y), o18, e13.pointerType, t13);
    });
  }
  handleHoverEvent(t13, e13) {
    "pointer-up" !== t13.type && "immediate-click" !== t13.type && "pointer-move" !== t13.type || !p5(t13.pointerType) || this._updateHoveredStateForPointerAtScreenPosition(n12(t13), t13.pointerId, t13.pointerType, e13);
  }
  _updateHoveredStateForPointerAtScreenPosition(t13, e13, o18, a12) {
    var _a;
    let i17 = l11(t13, o18, a12);
    const r14 = (_a = this._hoveredManipulators.get(e13)) == null ? void 0 : _a.manipulator;
    null == i17 || i17.manipulator.interactive || (i17 = null), null != i17 && r14 === i17.manipulator || (null != r14 && (r14.hovering = false), null != i17 ? (i17.manipulator.hovering = true, this._hoveredManipulators.set(e13, i17)) : this._hoveredManipulators.delete(e13), this._onFocusChange(a12));
  }
  _afterManipulatorRelease(t13) {
    0 === this._grabbedManipulators.size && this._revertToNullActiveTool && (t13(null), this._revertToNullActiveTool = false);
  }
};
function s6(t13) {
  let o18 = null;
  return n3(t13, ({ manipulator: t14 }) => !(null == t14 || !t14.interactive) && (t14.grabbing && t14.grabCursor ? (o18 = t14.grabCursor, true) : !!t14.cursor && (o18 = t14.cursor, true))), o18;
}
function l11(t13, e13, o18) {
  let a12 = null;
  return o18((o19) => {
    if (null == o19.manipulators || !i11(o19))
      return false;
    const r14 = o19.manipulators.intersect(t13, e13);
    return null != r14 && (a12 = { tool: o19, manipulator: r14 }, true);
  }), a12;
}
function p5(t13) {
  return "mouse" === t13;
}
function u6(t13) {
  return "mouse" !== t13.pointerType || 0 === t13.button;
}
function c9(t13) {
  return !!t13.native.shiftKey;
}
function d5(t13, e13) {
  (t13 == null ? void 0 : t13.consumesClicks) && e13();
}

// node_modules/@arcgis/core/views/ToolViewManager.js
var _6 = "attached";
var g8 = "tools";
var T = 1e3;
var f6 = class extends S2 {
  constructor(t13) {
    super(t13), this._updatingHandles = new h3(), this._clock = o3, this._manipulatorState = new n15(), this.tools = new V(), this.cursor = null, this._interacting = false, this._interactingTimeout = T, this._interactingTimeoutHandle = null, this._forEachTool = (t14) => {
      for (const e13 of this.tools.items)
        if (t14(e13))
          return;
    };
  }
  initialize() {
    this.addHandles([this.view.on(i8, (t13) => {
      this._handleInputEvent(t13);
    }, _2.TOOL), ...o11(this.tools), this.tools.on("before-add", ({ item: t13 }) => {
      this._updateToolEditableFlag(t13);
    }), this.tools.on("before-remove", ({ item: t13 }) => {
      this._manipulatorState.clearPointers(t13, this._manipulatorStateEventArgs), this._updateCursor();
    }), this.tools.on("change", () => {
      this._refreshToolWatchers();
    })]);
  }
  destroy() {
    this.activeTool = null, this.tools.drain((t13) => t13.destroy()), this._clearInteractingTimeout(), this._interacting = false, this._updatingHandles.destroy();
  }
  get _manipulatorStateEventArgs() {
    return { forEachTool: this._forEachTool, activeTool: this.activeTool, setActiveTool: (t13) => {
      this.activeTool = t13;
    }, view: this.view };
  }
  set activeTool(t13) {
    if (null != t13 && !this.view.ready)
      return void n.getLogger(this).error("Cannot set active tool while view is not ready.");
    if (t13 === this.activeTool)
      return;
    const e13 = this.activeTool;
    this._set("activeTool", t13), null != e13 && e13.deactivate(), null != t13 && t13.activate(), this._removeIncompleteTools(t13);
    for (const o18 of this.tools) {
      this._updateToolEditableFlag(o18);
      const t14 = i11(o18);
      null != this.activeTool && t14 || this._manipulatorState.clearPointers(o18, this._manipulatorStateEventArgs, !t14);
    }
    this._updateCursor();
  }
  get updating() {
    return this._updatingHandles.updating || this.tools.some((t13) => t13.updating);
  }
  get interacting() {
    return this._interacting;
  }
  _clearInteractingTimeout() {
    this._interactingTimeoutHandle = l(this._interactingTimeoutHandle);
  }
  _startInteractingTimeout() {
    this._clearInteractingTimeout(), this._interactingTimeoutHandle = this._clock.setTimeout(() => this._interacting = false, this._interactingTimeout);
  }
  attach() {
    var _a;
    "3d" === this.view.type ? this.addHandles([d2(() => {
      const { state: t13 } = this.view;
      return "camera" in t13 && t13.camera;
    }, () => this._forEachManipulator((t13) => t13.onViewChange())), (_a = this.view.elevationProvider) == null ? void 0 : _a.on("elevation-change", (t13) => this._forEachManipulator((e13) => e13.onElevationChange(t13)))], _6) : this.addHandles(d2(() => this.view.extent, () => this._forEachManipulator((t13) => t13.onViewChange())));
  }
  detach() {
    this.activeTool = null, this.tools.removeAll(), this.removeHandles(_6), this._clearInteractingTimeout(), this._interacting = false;
  }
  _forEachManipulator(t13) {
    this._forEachTool((e13) => {
      e13.manipulators && e13.manipulators.forEach(({ manipulator: o18 }) => t13(o18, e13));
    });
  }
  _handleInputEvent(t13) {
    let e13 = false;
    const o18 = { ...t13, stopPropagation: () => {
      e13 = true, t13.stopPropagation();
    } };
    null != this.activeTool ? this.activeTool.handleInputEvent && this.activeTool.handleInputEvent(o18) : this._forEachTool((t14) => {
      !e13 && t14.visible && t14.handleInputEvent(o18);
    }), !e13 && "key-down" === t13.type && "Escape" === t13.key && this.activeTool && (t13.stopPropagation(), this.activeTool = null), this._manipulatorState.handleInputEvent(o18, this._manipulatorStateEventArgs), e13 || null == this.activeTool || this.activeTool.handleInputEventAfter(o18), this._manipulatorState.handleHoverEvent(o18, this._forEachTool), this._updateCursor(), "pointer-move" === t13.type && (this._manipulatorState.hasFocusedManipulators() || this.activeTool) && (this._interacting = true, this._startInteractingTimeout());
  }
  _refreshToolWatchers() {
    this.removeHandles(g8), this._forEachTool((t13) => {
      if (t13 instanceof S2) {
        const e13 = d2(() => [t13.cursor, t13.visible, t13.editable], () => {
          i11(t13) || this._manipulatorState.clearPointers(t13, this._manipulatorStateEventArgs), this._updateCursor();
        });
        this.addHandles(e13, g8);
      }
      t13.manipulators && this.addHandles([t13.manipulators.on("after-remove", (e13) => {
        this._manipulatorState.clearPointers(t13, this._manipulatorStateEventArgs, true, e13.item.manipulator);
      }), t13.manipulators.on("change", () => {
        this._manipulatorState.updateHoveredStateFromKnownPointers(this._forEachTool), this._updateCursor();
      })], g8);
    }), this._manipulatorState.updateHoveredStateFromKnownPointers(this._forEachTool), this._updateCursor();
  }
  _updateToolEditableFlag(t13) {
    var _a;
    (_a = t13.setEditableFlag) == null ? void 0 : _a.call(t13, o9.MANAGER, null == this.activeTool || t13 === this.activeTool);
  }
  _updateCursor() {
    let t13 = this._manipulatorState.cursor;
    null == t13 && this._forEachTool((e13) => !(null == e13.cursor || !e13.visible) && (t13 = e13.cursor, true)), this._get("cursor") !== t13 && this._set("cursor", t13);
  }
  _removeIncompleteTools(t13) {
    this.tools.filter((e13) => (null == t13 || e13 !== t13) && !e13.created && e13.removeIncompleteOnCancel).forEach((t14) => {
      this.tools.remove(t14);
    });
  }
  get test() {
    const t13 = this;
    return { setClock: (t14) => this._clock = t14, set interactingTimeoutEnabled(e13) {
      t13._interactingTimeout = e13 ? T : 0;
    }, get interactingTimeoutEnabled() {
      return 0 !== t13._interactingTimeout;
    } };
  }
};
e([y({ constructOnly: true, nonNullable: true })], f6.prototype, "view", void 0), e([y({ value: null })], f6.prototype, "activeTool", null), e([y({ readOnly: true, type: V })], f6.prototype, "tools", void 0), e([y({ readOnly: true })], f6.prototype, "cursor", void 0), e([y({ readOnly: true })], f6.prototype, "updating", null), e([y()], f6.prototype, "_interacting", void 0), e([y({ readOnly: true })], f6.prototype, "interacting", null), f6 = e([a("esri.views.ToolViewManager")], f6);

// node_modules/@arcgis/core/views/input/gamepad/GamepadInputDevice.js
var n16 = class extends S2 {
  constructor(e13) {
    super(), this.nativeIndex = null, this._detectedDeviceType = "unknown", "standard" === e13.mapping ? this._detectedDeviceType = "standard" : o12.test(e13.id) ? this._detectedDeviceType = "spacemouse" : this._detectedDeviceType = "unknown", this.nativeIndex = e13.index;
  }
  get native() {
    const e13 = navigator.getGamepads ? navigator.getGamepads() : [];
    return null != this.nativeIndex && this.nativeIndex < e13.length ? e13[this.nativeIndex] : null;
  }
  get deviceType() {
    return this._detectedDeviceType;
  }
  get axisThreshold() {
    return i12[this.deviceType];
  }
};
e([y({ nonNullable: true, readOnly: true })], n16.prototype, "nativeIndex", void 0), e([y({ type: String, readOnly: true })], n16.prototype, "deviceType", null), e([y({ type: Number, readOnly: true })], n16.prototype, "axisThreshold", null), n16 = e([a("esri.views.input.gamepad.GamepadInputDevice")], n16);
var o12 = new RegExp("^(3dconnexion|space(mouse|navigator|pilot|explorer))", "i");
var i12 = { standard: 0.15, spacemouse: 0.025, unknown: 0 };
var a3 = n16;

// node_modules/@arcgis/core/views/input/gamepad/GamepadSettings.js
var p6 = class extends S2 {
  constructor(...o18) {
    super(...o18), this.devices = new V(), this.enabledFocusMode = "document";
  }
};
e([y({ type: V.ofType(a3), readOnly: true })], p6.prototype, "devices", void 0), e([y({ type: ["document", "view", "none"] })], p6.prototype, "enabledFocusMode", void 0), p6 = e([a("esri.views.input.gamepad.GamepadSettings")], p6);
var i13 = p6;

// node_modules/@arcgis/core/views/input/Input.js
var p7 = class extends S2 {
  constructor() {
    super(...arguments), this.gamepad = new i13();
  }
};
e([y({ readOnly: true })], p7.prototype, "gamepad", void 0), p7 = e([a("esri.views.input.Input")], p7);
var a4 = p7;

// node_modules/@arcgis/core/views/navigation/gamepad/GamepadSettings.js
var s7 = class extends S2 {
  constructor(o18) {
    super(o18), this.enabled = true, this.device = null, this.mode = "pan", this.tiltDirection = "forward-down", this.velocityFactor = 1;
  }
};
e([y({ type: Boolean, nonNullable: true })], s7.prototype, "enabled", void 0), e([y({ type: a3 })], s7.prototype, "device", void 0), e([y({ type: ["pan", "zoom"], nonNullable: true })], s7.prototype, "mode", void 0), e([y({ type: ["forward-down", "forward-up"], nonNullable: true })], s7.prototype, "tiltDirection", void 0), e([y({ type: Number, nonNullable: true })], s7.prototype, "velocityFactor", void 0), s7 = e([a("esri.views.navigation.gamepad.GamepadSettings")], s7);
var i14 = s7;

// node_modules/@arcgis/core/views/navigation/Navigation.js
var a5 = class extends S2 {
  constructor(o18) {
    super(o18), this.browserTouchPanEnabled = true, this.gamepad = new i14(), this.momentumEnabled = true, this.mouseWheelZoomEnabled = true;
  }
};
e([y({ type: Boolean })], a5.prototype, "browserTouchPanEnabled", void 0), e([y({ type: i14, nonNullable: true })], a5.prototype, "gamepad", void 0), e([y({ type: Boolean })], a5.prototype, "momentumEnabled", void 0), e([y({ type: Boolean })], a5.prototype, "mouseWheelZoomEnabled", void 0), a5 = e([a("esri.views.navigation.Navigation")], a5);
var p8 = a5;

// node_modules/@arcgis/core/views/support/projectionUtils.js
var n17;
var s8 = null;
async function c10(r14) {
  s8 || (s8 = import("./geometryServiceUtils-GBJDXKQL.js").then((e13) => n17 = e13)), await s8, s2(r14);
}
async function p9(e13, s14, a12, m10) {
  if (!e13)
    return null;
  const l13 = e13.spatialReference;
  return b2() || F(l13, s14) ? B(e13, s14) : n17 ? n17.projectGeometry(e13, s14, a12, m10) : (await Promise.race([c10(m10), k2(m10)]), p9(e13, s14, a12, m10));
}

// node_modules/@arcgis/core/views/support/DefaultsFromMap.js
var d6 = class extends S2 {
  constructor(e13) {
    super(e13), this.required = { tileInfo: false, heightModelInfo: false, extent: false }, this.defaultSpatialReference = null, this.userSpatialReference = null, this.sourcePreloadCount = 10, this.priorityCollection = null, this.requiresExtentInSpatialReference = true, this.suspended = false, this._projectExtentTask = { task: null, input: null, output: null, spatialReference: null };
  }
  destroy() {
    this._projectExtentTask.task && (this._projectExtentTask.task = e2(this._projectExtentTask.task)), this._set("map", null);
  }
  get ready() {
    return !this._spatialReferenceTask.updating && !this._tileInfoTask.updating && !this._extentTask.updating;
  }
  get heightModelInfoReady() {
    return !this._heightModelInfoTask.updating;
  }
  get spatialReference() {
    return null != this.userSpatialReference ? this.userSpatialReference : this._spatialReferenceTask.spatialReference;
  }
  get extent() {
    return this._extentTask.extent;
  }
  get heightModelInfo() {
    return this._heightModelInfoTask.heightModelInfo;
  }
  get vcsWkid() {
    return this._heightModelInfoTask.vcsWkid;
  }
  get latestVcsWkid() {
    return this._heightModelInfoTask.latestVcsWkid;
  }
  get viewingMode() {
    return null == this.userSpatialReference || this.userSpatialReference.equals(this._spatialReferenceTask.spatialReference) ? this._spatialReferenceTask.viewingMode : null;
  }
  get tileInfo() {
    return this._tileInfoTask.tileInfo;
  }
  get mapCollections() {
    var _a, _b, _c, _d;
    const e13 = (_a = this.map) == null ? void 0 : _a.call(this), t13 = [];
    return null != this.priorityCollection && t13.push(this.priorityCollection), t13.push({ parent: e13 == null ? void 0 : e13.basemap, layers: (_b = e13 == null ? void 0 : e13.basemap) == null ? void 0 : _b.baseLayers }, { layers: e13 == null ? void 0 : e13.layers }, { parent: e13 == null ? void 0 : e13.ground, layers: (_c = e13 == null ? void 0 : e13.ground) == null ? void 0 : _c.layers }, { parent: e13 == null ? void 0 : e13.basemap, layers: (_d = e13 == null ? void 0 : e13.basemap) == null ? void 0 : _d.referenceLayers }), t13;
  }
  get _allLayers() {
    return this._collectLayers(this.mapCollections);
  }
  get _spatialReferenceTask() {
    if (this.suspended)
      return this._get("_spatialReferenceTask") ?? { updating: false };
    const { layers: e13, updating: t13 } = this._allLayers;
    let n23 = null;
    for (const s14 of e13) {
      const e14 = this._getSupportedSpatialReferences(s14);
      if (e14.length > 0) {
        const t14 = this._narrowDownSpatialReferenceCandidates(n23, e14);
        null != t14 && (n23 = t14);
      }
      if (null != n23 && 1 === n23.length)
        break;
    }
    if (t13 && (null == n23 || 1 !== n23.length))
      return { updating: true };
    const a12 = this._pickSpatialReferenceCandidate(n23);
    return { spatialReference: null != a12 ? a12.spatialReference : null, viewingMode: null != a12 ? a12.viewingMode : null, updating: false };
  }
  get _tileInfoTask() {
    var _a, _b, _c, _d, _e, _f, _g;
    if (!this.required.tileInfo)
      return this._get("_tileInfoTask") ?? { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const { layers: e13, updating: t13 } = this._collectLayers([{ parent: (_b = (_a = this.map) == null ? void 0 : _a.call(this)) == null ? void 0 : _b.basemap, layers: (_e = (_d = (_c = this.map) == null ? void 0 : _c.call(this)) == null ? void 0 : _d.basemap) == null ? void 0 : _e.baseLayers }, { layers: (_g = (_f = this.map) == null ? void 0 : _f.call(this)) == null ? void 0 : _g.layers }]);
    if (e13 && e13.length > 0 && "tileInfo" in e13[0]) {
      const t14 = e13[0].tileInfo;
      return { tileInfo: t14 && t14.spatialReference.equals(this.spatialReference) ? t14 : null, updating: false };
    }
    return { updating: t13 };
  }
  get _heightModelInfoTask() {
    var _a, _b, _c;
    if (!this.required.heightModelInfo || this.suspended && ((_a = this._get("_heightModelInfoTask")) == null ? void 0 : _a.heightModelInfo))
      return this._get("_heightModelInfoTask") ?? { updating: false };
    const { layers: e13, updating: t13 } = this._allLayers;
    for (const n23 of e13)
      if (g5(n23)) {
        const e14 = l7(n23);
        if (e14)
          return { heightModelInfo: e14, vcsWkid: (_b = n23.spatialReference) == null ? void 0 : _b.vcsWkid, latestVcsWkid: (_c = n23.spatialReference) == null ? void 0 : _c.latestVcsWkid, updating: false };
      }
    return { updating: t13 };
  }
  get _extentCandidatesTask() {
    if (this.suspended || !this.required.extent)
      return this._get("_extentCandidatesTask") ?? { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const e13 = this._allLayers, t13 = e13.updating, n23 = [];
    for (const a12 of e13.layers) {
      const e14 = "fullExtents" in a12 && a12.fullExtents || (null != a12.fullExtent ? [a12.fullExtent] : []), t14 = this.requiresExtentInSpatialReference ? null : e14[0], s14 = e14.find((e15) => e15.spatialReference.equals(this.spatialReference)) ?? t14;
      if (s14)
        return { candidates: [{ extent: s14, layer: a12 }], updating: false };
      if (this._getSupportedSpatialReferences(a12).length > 0)
        for (const i17 of e14)
          n23.push({ extent: i17, layer: a12 });
    }
    return { candidates: n23, updating: t13 };
  }
  get _extentTask() {
    const { candidates: e13, updating: t13 } = this._extentCandidatesTask;
    if (t13)
      return { updating: t13 };
    if (null == e13 || 0 === e13.length)
      return { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const i17 = this._pickExtentCandidate(e13), r14 = this.spatialReference;
    return i17.extent.equals(this._projectExtentTask.input) && r14.equals(this._projectExtentTask.spatialReference) ? { extent: this._projectExtentTask.output, updating: null != this._projectExtentTask.task && !this._projectExtentTask.task.finished } : (null != this._projectExtentTask.task && (this._projectExtentTask.task = e2(this._projectExtentTask.task)), this._projectExtentTask = { input: i17.extent.clone(), output: null, spatialReference: r14.clone(), task: d(async (e14) => {
      try {
        const t14 = await p9(i17.extent, r14, "portalItem" in i17.layer ? i17.layer.portalItem : void 0, e14);
        this._projectExtentTask = { ...this._projectExtentTask, task: null, output: t14 };
      } catch (t14) {
        if (c(e14))
          return;
        this._projectExtentTask = { ...this._projectExtentTask, task: null };
      }
    }) }, { updating: true });
  }
  _narrowDownSpatialReferenceCandidates(e13, t13) {
    if (null == e13)
      return t13;
    const n23 = [], a12 = (e14, t14) => null != e14 ? null != t14 ? e14 === t14 && e14 : e14 : t14;
    for (const s14 of e13)
      for (const e14 of t13) {
        if (!s14.spatialReference.equals(e14.spatialReference))
          continue;
        const t14 = a12(s14.viewingMode, e14.viewingMode);
        if (false !== t14) {
          n23.push({ spatialReference: s14.spatialReference, viewingMode: t14 });
          break;
        }
      }
    return n23.length > 0 ? n23 : null;
  }
  _pickSpatialReferenceCandidate(e13) {
    const t13 = this.defaultSpatialReference;
    return null == e13 || e13.length < 1 ? null != t13 ? { spatialReference: t13, viewingMode: null } : null : (null != t13 && e13.length > 1 && e13.some(({ spatialReference: e14 }) => e14.equals(t13)) && (e13 = e13.filter(({ spatialReference: e14 }) => e14.equals(t13))), e13.length > 1 && e13.some(({ viewingMode: e14 }) => e14 !== l4.Local) && (e13 = e13.filter(({ viewingMode: e14 }) => e14 !== l4.Local)), e13[0]);
  }
  _getSupportedSpatialReferences(e13) {
    const t13 = "supportedSpatialReferences" in e13 && e13.supportedSpatialReferences || (e13.spatialReference ? [e13.spatialReference] : []);
    if (0 === t13.length)
      return [];
    const n23 = [];
    for (const a12 of t13) {
      const t14 = this.getSpatialReferenceSupport({ spatialReference: a12, layer: e13 });
      if (null != t14) {
        const e14 = null != t14.constraints ? t14.constraints : [{ spatialReference: a12, viewingMode: null }];
        for (const { spatialReference: t15, viewingMode: a13 } of e14)
          this.requiresExtentInSpatialReference && null != this.userSpatialReference && !t15.equals(this.userSpatialReference) || n23.push({ spatialReference: t15, viewingMode: a13 });
      }
    }
    return n23;
  }
  _pickExtentCandidate(e13) {
    const t13 = this.spatialReference;
    return e13.find(({ extent: e14 }) => t13.equals(e14.spatialReference)) || e13[0];
  }
  _collectLayers(e13) {
    var _a;
    if ("loaded" !== this._loadMaybe((_a = this.map) == null ? void 0 : _a.call(this)))
      return { layers: [], updating: true };
    const t13 = new f7();
    for (const n23 of e13)
      if (this._collectCollection(n23, t13), t13.preloading === this.sourcePreloadCount)
        break;
    return { layers: t13.layers, updating: t13.updating };
  }
  _collectCollection(e13, t13) {
    if (e13.layers) {
      switch (this._loadMaybe(e13.parent)) {
        case "loading":
          return t13.updating = true, void ++t13.preloading;
        case "failed":
          return;
      }
      for (const n23 of e13.layers) {
        switch (this._loadMaybe(n23)) {
          case "failed":
            continue;
          case "loading":
            t13.updating = true, ++t13.preloading;
            break;
          case "loaded":
            t13.updating || t13.layers.push(n23), "layers" in n23 && this._collectCollection({ layers: n23.layers }, t13);
        }
        if (t13.preloading === this.sourcePreloadCount)
          break;
      }
    }
  }
  _loadMaybe(e13) {
    return e13 && "loadStatus" in e13 && null != e13.loadStatus ? "not-loaded" === e13.loadStatus ? (e13.load().catch((e14) => {
      b(e14) || console.log(e14);
    }), "loading") : e13.loadStatus : "loaded";
  }
};
e([y()], d6.prototype, "required", void 0), e([y({ constructOnly: true })], d6.prototype, "map", void 0), e([y({ constructOnly: true })], d6.prototype, "getSpatialReferenceSupport", void 0), e([y()], d6.prototype, "defaultSpatialReference", void 0), e([y()], d6.prototype, "userSpatialReference", void 0), e([y()], d6.prototype, "sourcePreloadCount", void 0), e([y()], d6.prototype, "priorityCollection", void 0), e([y()], d6.prototype, "requiresExtentInSpatialReference", void 0), e([y()], d6.prototype, "suspended", void 0), e([y({ readOnly: true })], d6.prototype, "ready", null), e([y({ readOnly: true })], d6.prototype, "heightModelInfoReady", null), e([y({ readOnly: true })], d6.prototype, "spatialReference", null), e([y({ readOnly: true })], d6.prototype, "extent", null), e([y({ readOnly: true })], d6.prototype, "heightModelInfo", null), e([y({ readOnly: true })], d6.prototype, "vcsWkid", null), e([y({ readOnly: true })], d6.prototype, "latestVcsWkid", null), e([y({ readOnly: true })], d6.prototype, "viewingMode", null), e([y({ readOnly: true })], d6.prototype, "tileInfo", null), e([y({ readOnly: true })], d6.prototype, "mapCollections", null), e([y({ readOnly: true })], d6.prototype, "_allLayers", null), e([y({ readOnly: true })], d6.prototype, "_spatialReferenceTask", null), e([y({ readOnly: true })], d6.prototype, "_tileInfoTask", null), e([y({ readOnly: true })], d6.prototype, "_heightModelInfoTask", null), e([y({ readOnly: true })], d6.prototype, "_extentCandidatesTask", null), e([y()], d6.prototype, "_extentTask", null), e([y()], d6.prototype, "_projectExtentTask", void 0), d6 = e([a("esri.views.support.DefaultsFromMap")], d6);
var f7 = class {
  constructor() {
    this.layers = new Array(), this.preloading = -1, this.updating = false;
  }
};

// node_modules/@arcgis/core/views/View.js
var W;
var G2 = W = class extends o5.EventedMixin(n5(S2)) {
  constructor(e13) {
    super(e13), this._userSpatialReference = null, this._cursor = null, this.handles = new r2(), this.updatingHandles = new h3(), this.allLayerViews = new l3({ getCollections: () => {
      var _a, _b, _c;
      return [(_a = this.basemapView) == null ? void 0 : _a.baseLayerViews, (_b = this.groundView) == null ? void 0 : _b.layerViews, this.layerViews, (_c = this.basemapView) == null ? void 0 : _c.referenceLayerViews];
    }, getChildrenFunction: B2 }), this.groundView = null, this.basemapView = null, this.fatalError = null, this.graphics = new c6(), this.analyses = new t6(), this.typeSpecificPreconditionsReady = true, this.layerViews = new V(), this.magnifier = new p3(), this.padding = { left: 0, top: 0, right: 0, bottom: 0 }, this.ready = false, this.spatialReferenceWarningDelay = 1e3, this.supportsGround = true, this.timeExtent = null, this.type = null, this.scale = null, this.updating = false, this.initialExtentRequired = true, this.input = new a4(), this.navigation = new p8(), this.layerViewManager = null, this.analysisViewManager = null, this.isHeightModelInfoRequired = false, this.width = null, this.height = null, this.resizing = false, this.suspended = false, this.viewEvents = new c7(this), this.persistableViewModels = new V(), this._isValid = false, this._readyCycleForced = false, this._lockedSpatialReference = null, this._userTimeZone = null, this._lockedTimeZone = null, this.theme = null, this.handles.add(d2(() => this.preconditionsReady, (e14) => {
      var _a, _b;
      const t13 = this.ready;
      if (e14 ? (this._lockedSpatialReference = this.spatialReference, this._lockedTimeZone = this.timeZone, W.views.add(this)) : (this._lockedSpatialReference = null, W.views.remove(this)), this.notifyChange("spatialReference"), !e14 && t13)
        (_a = this.toolViewManager) == null ? void 0 : _a.detach(), null != this.analysisViewManager && this.analysisViewManager.detach(), (_b = this.layerViewManager) == null ? void 0 : _b.clear(), this._teardown();
      else if (e14 && !t13) {
        try {
          this._startup();
        } catch (i17) {
          return void queueMicrotask(() => {
            console.error("View._startup failed", i17), this.fatalError = new s("startup-error", null, i17);
          });
        }
        null != this.analysisViewManager && this.analysisViewManager.attach(), this.toolViewManager.attach();
      }
    }, C));
  }
  initialize() {
    this.addResolvingPromise(Promise.all([this.loadAsyncDependencies(), this.validate()]).then(() => (this._isValid = true, w(() => this.ready)))), this.basemapView = new n14({ view: this }), this.layerViewManager = new M2({ view: this, layerViewImporter: { importLayerView: (e13) => this.importLayerView(e13), hasLayerViewModule: (e13) => this.hasLayerViewModule(e13) }, supportsGround: this.supportsGround }), this.toolViewManager = new f6({ view: this }), this._setupSpatialReferenceLogger(), this.selectionManager = new M3({ view: this }), this.addHandles([d2(() => this.initialExtentRequired, (e13) => this.defaultsFromMap.required = { ...this.defaultsFromMap.required, extent: e13 }, A3), d2(() => this.ready, (e13) => {
      this.defaultsFromMap && (this.defaultsFromMap.suspended = e13, this.defaultsFromMap.userSpatialReference = e13 ? this.spatialReference : this._userSpatialReference);
    }, C), d2(() => this._userSpatialReference, (e13) => {
      this.defaultsFromMap && (this.defaultsFromMap.userSpatialReference = e13);
    }, A3)]);
  }
  _setupSpatialReferenceLogger() {
    let e13 = null;
    this.addHandles([d2(() => {
      var _a;
      return (_a = this.defaultsFromMap) == null ? void 0 : _a.ready;
    }, (t13) => {
      var _a;
      const i17 = ((_a = this.map) == null ? void 0 : _a.allLayers.length) > 0;
      if (t13 && !this.spatialReference && i17) {
        if (null != e13)
          return;
        const t14 = e3(() => e13 = e2(e13));
        e13 = d(async (t15) => {
          try {
            await A(this.spatialReferenceWarningDelay, null, t15);
          } catch {
            return;
          } finally {
            e13 = null;
          }
          n.getLogger(this).warn("#spatialReference", "no spatial reference could be derived from the currently added map layers");
        }), this.addHandles(t14, "spatial-reference-logger-task");
      } else
        this.removeHandles("spatial-reference-logger-task");
    }, { sync: true })]);
  }
  destroy() {
    var _a, _b;
    this.destroyed || (W.views.remove(this), this.viewEvents.destroy(), this.allLayerViews.destroy(), this.navigation && (this.navigation.destroy(), this._set("navigation", null)), this.graphics = u(this.graphics), this.analyses = u(this.analyses), this.defaultsFromMap.destroy(), this._set("defaultsFromMap", null), u(this.analysisViewManager), this.toolViewManager = u(this.toolViewManager), this.layerViewManager = u(this.layerViewManager), this.selectionManager = u(this.selectionManager), this.basemapView = u(this.basemapView), (_a = this.groundView) == null ? void 0 : _a.destroy(), (_b = this.layerViews) == null ? void 0 : _b.forEach((e13) => e13.destroy()), this.layerViews.length = 0, this.invalidate(), this._emitter.clear(), this.handles.destroy(), this.map = u(this.map), this.updatingHandles.destroy());
  }
  _startup() {
    this._set("ready", true);
  }
  _teardown() {
    this._set("ready", false);
  }
  whenReady() {
    return Promise.resolve(this);
  }
  toMap() {
    return n.getLogger(this).error("#toMap()", "Not implemented on this instance of View"), null;
  }
  get activeTool() {
    var _a;
    return (_a = this.toolViewManager) == null ? void 0 : _a.activeTool;
  }
  set activeTool(e13) {
    this.toolViewManager && (this.toolViewManager.activeTool = e13);
  }
  get animation() {
    return this._get("animation");
  }
  set animation(e13) {
    this._set("animation", e13);
  }
  get center() {
    return null;
  }
  get _defaultsFromMapSettings() {
    return {};
  }
  get defaultsFromMap() {
    return new d6({ required: { tileInfo: false, heightModelInfo: false, extent: false }, map: () => this.map, getSpatialReferenceSupport: (e13) => this.getSpatialReferenceSupport(e13), ...this._defaultsFromMapSettings });
  }
  get extent() {
    return this._get("extent");
  }
  set extent(e13) {
    this._set("extent", e13);
  }
  get heightModelInfo() {
    return this.getDefaultHeightModelInfo();
  }
  get interacting() {
    return this.navigating;
  }
  get navigating() {
    return false;
  }
  get preconditionsReady() {
    var _a;
    return !(this.fatalError || !this._isValid || this._readyCycleForced || !this.map || m3.isLoadable(this.map) && !this.map.loaded || 0 === this.width || 0 === this.height || !this.spatialReference || !this._validateSpatialReference(this.spatialReference) || !this._lockedSpatialReference && !((_a = this.defaultsFromMap) == null ? void 0 : _a.ready) || !this.typeSpecificPreconditionsReady);
  }
  get resolution() {
    return 0;
  }
  set map(e13) {
    e13 !== this._get("map") && ((e13 == null ? void 0 : e13.destroyed) && (n.getLogger(this).warn("#map", "The provided map is already destroyed", { map: e13 }), e13 = null), m3.isLoadable(e13) && e13.load().catch(() => {
    }), this.constructed && !this.destroyed && (this.forceReadyCycle(), this._lockedSpatialReference = null), this._set("map", e13));
  }
  get spatialReference() {
    var _a, _b;
    const e13 = this._userSpatialReference || this._lockedSpatialReference || this.getDefaultSpatialReference() || null;
    if (e13 && ((_b = (_a = this.defaultsFromMap) == null ? void 0 : _a.required) == null ? void 0 : _b.heightModelInfo)) {
      const t13 = e13.clone();
      return t13.vcsWkid = this.defaultsFromMap.vcsWkid, t13.latestVcsWkid = this.defaultsFromMap.latestVcsWkid, t13;
    }
    return e13;
  }
  set spatialReference(e13) {
    const t13 = !G(e13, this._get("spatialReference"));
    this._set("_userSpatialReference", e13), t13 && (this._set("spatialReference", e13), this._spatialReferenceChanged(e13));
  }
  _spatialReferenceChanged(e13) {
  }
  get stationary() {
    return !this.animation && !this.navigating && !this.resizing;
  }
  get timeZone() {
    return this._userTimeZone ?? this._lockedTimeZone ?? this.getDefaultTimeZone() ?? o6;
  }
  set timeZone(e13) {
    const t13 = /* @__PURE__ */ new Set(["etc/utc", "etc/gmt", "gmt"]), i17 = new Set(Intl.supportedValuesOf("timeZone").map((e14) => e14.toLowerCase()));
    this._userTimeZone = e13, e13 === o6 || e13 === r4 || t13.has(e13.toLowerCase()) || i17.has(e13.toLowerCase()) || n.getLogger(this).warn("#timeZone", `the parsed value '${e13}' may not be a valid IANA time zone`);
  }
  get tools() {
    var _a;
    return (_a = this.toolViewManager) == null ? void 0 : _a.tools;
  }
  get initialExtent() {
    var _a;
    return (_a = this.defaultsFromMap) == null ? void 0 : _a.extent;
  }
  get cursor() {
    var _a;
    return ((_a = this.toolViewManager) == null ? void 0 : _a.cursor) ?? this._cursor ?? "default";
  }
  set cursor(e13) {
    this._cursor = e13, this.notifyChange("cursor");
  }
  get size() {
    return [this.width, this.height];
  }
  get effectiveTheme() {
    return this.theme ?? new l10();
  }
  whenLayerView(e13) {
    var _a;
    return ((_a = this.layerViewManager) == null ? void 0 : _a.whenLayerView(e13)) ?? Promise.reject();
  }
  getDefaultSpatialReference() {
    var _a;
    return (_a = this.defaultsFromMap) == null ? void 0 : _a.spatialReference;
  }
  getDefaultHeightModelInfo() {
    var _a;
    return (this.map && "heightModelInfo" in this.map ? this.map.heightModelInfo : void 0) ?? ((_a = this.defaultsFromMap) == null ? void 0 : _a.heightModelInfo) ?? null;
  }
  getDefaultTimeZone() {
    return null;
  }
  importLayerView(e13) {
    throw new s("importLayerView() not implemented");
  }
  hasLayerViewModule(e13) {
    return false;
  }
  async validate() {
  }
  async loadAsyncDependencies() {
  }
  invalidate() {
    this._isValid = false;
  }
  getSpatialReferenceSupport() {
    return { constraints: null };
  }
  _validateSpatialReference(e13) {
    return null != this.getSpatialReferenceSupport({ spatialReference: e13 });
  }
  when(e13, t13) {
    return this.isResolved() && !this.ready && n.getLogger(this).warn("#when()", "Calling view.when() while the view is no longer ready but was already resolved once will resolve immediately. Use reactiveUtils.whenOnce(() => view.ready).then(...) instead."), super.when(e13, t13);
  }
  forceReadyCycle() {
    this.ready && (p(() => this.destroyed || false === this.preconditionsReady, () => this._readyCycleForced = false, { once: true }), this._readyCycleForced = true);
  }
  addAndActivateTool(e13) {
    this.toolViewManager.tools.add(e13), this.activeTool = e13;
  }
  tryFatalErrorRecovery() {
    this.fatalError = null;
  }
};
G2.views = new V(), e([y()], G2.prototype, "_userSpatialReference", void 0), e([y()], G2.prototype, "activeTool", null), e([y({ readOnly: true })], G2.prototype, "allLayerViews", void 0), e([y()], G2.prototype, "groundView", void 0), e([y()], G2.prototype, "animation", null), e([y()], G2.prototype, "basemapView", void 0), e([y()], G2.prototype, "center", null), e([y({ readOnly: true })], G2.prototype, "_defaultsFromMapSettings", null), e([y()], G2.prototype, "defaultsFromMap", null), e([y()], G2.prototype, "fatalError", void 0), e([y({ type: w2 })], G2.prototype, "extent", null), e([y(l5(c6, "graphics"))], G2.prototype, "graphics", void 0), e([y(l5(t6, "analyses"))], G2.prototype, "analyses", void 0), e([y({ readOnly: true, type: v4 })], G2.prototype, "heightModelInfo", null), e([y({ readOnly: true })], G2.prototype, "interacting", null), e([y({ readOnly: true })], G2.prototype, "navigating", null), e([y({ readOnly: true, dependsOn: ["fatalError", "_isValid", "_readyCycleForced", "map", "map.loaded?", "width", "height", "spatialReference", "_lockedSpatialReference", "defaultsFromMap.ready", "typeSpecificPreconditionsReady"] })], G2.prototype, "preconditionsReady", null), e([y({ readOnly: true })], G2.prototype, "typeSpecificPreconditionsReady", void 0), e([y({ type: V, readOnly: true })], G2.prototype, "layerViews", void 0), e([y()], G2.prototype, "resolution", null), e([y({ type: p3 })], G2.prototype, "magnifier", void 0), e([y({ value: null, type: L2 })], G2.prototype, "map", null), e([y()], G2.prototype, "padding", void 0), e([y({ readOnly: true })], G2.prototype, "ready", void 0), e([y({ type: f3 })], G2.prototype, "spatialReference", null), e([y()], G2.prototype, "spatialReferenceWarningDelay", void 0), e([y()], G2.prototype, "stationary", null), e([y({ readOnly: true })], G2.prototype, "supportsGround", void 0), e([y({ type: c5 })], G2.prototype, "timeExtent", void 0), e([y({ type: String, nonNullable: true })], G2.prototype, "timeZone", null), e([y()], G2.prototype, "tools", null), e([y()], G2.prototype, "toolViewManager", void 0), e([y({ readOnly: true })], G2.prototype, "type", void 0), e([y({ type: Number })], G2.prototype, "scale", void 0), e([y({ readOnly: true })], G2.prototype, "updating", void 0), e([y({ readOnly: true })], G2.prototype, "initialExtentRequired", void 0), e([y({ readOnly: true })], G2.prototype, "initialExtent", null), e([y()], G2.prototype, "cursor", null), e([y({ readOnly: true })], G2.prototype, "input", void 0), e([y({ type: p8, nonNullable: true })], G2.prototype, "navigation", void 0), e([y()], G2.prototype, "layerViewManager", void 0), e([y()], G2.prototype, "analysisViewManager", void 0), e([y()], G2.prototype, "selectionManager", void 0), e([y()], G2.prototype, "width", void 0), e([y()], G2.prototype, "height", void 0), e([y({ readOnly: true })], G2.prototype, "resizing", void 0), e([y({ value: null, readOnly: true })], G2.prototype, "size", null), e([y({ readOnly: true })], G2.prototype, "suspended", void 0), e([y({ readOnly: true })], G2.prototype, "viewEvents", void 0), e([y({ readOnly: true })], G2.prototype, "persistableViewModels", void 0), e([y()], G2.prototype, "_isValid", void 0), e([y()], G2.prototype, "_readyCycleForced", void 0), e([y()], G2.prototype, "_lockedSpatialReference", void 0), e([y()], G2.prototype, "_userTimeZone", void 0), e([y()], G2.prototype, "_lockedTimeZone", void 0), e([y({ type: l10 })], G2.prototype, "theme", void 0), e([y({ readOnly: true, type: l10 })], G2.prototype, "effectiveTheme", null), G2 = W = e([a("esri.views.View")], G2);
var N = G2;
function B2(e13) {
  return e13.layerViews;
}

// node_modules/@arcgis/core/views/ViewAnimation.js
var p10 = class extends m2 {
  constructor(t13) {
    super(t13), this.state = "running", this.target = null, this._resolver = null;
  }
  initialize() {
    this._resolver = L(), this.addResolvingPromise(this._resolver.promise);
  }
  get done() {
    return "finished" === this.state || "stopped" === this.state;
  }
  stop() {
    var _a;
    "stopped" !== this.state && "finished" !== this.state && (this._set("state", "stopped"), (_a = this._resolver) == null ? void 0 : _a.reject(new s("ViewAnimation stopped")));
  }
  finish() {
    var _a;
    "stopped" !== this.state && "finished" !== this.state && (this._set("state", "finished"), (_a = this._resolver) == null ? void 0 : _a.resolve());
  }
  update(t13, s14) {
    s14 || (s14 = S(t13) ? "waiting-for-target" : "running"), this._set("target", t13), this._set("state", s14);
  }
};
e([y({ readOnly: true })], p10.prototype, "done", null), e([y({ readOnly: true, type: String })], p10.prototype, "state", void 0), e([y()], p10.prototype, "target", void 0), p10 = e([a("esri.views.ViewAnimation")], p10), function(t13) {
  t13.State = { RUNNING: "running", STOPPED: "stopped", FINISHED: "finished", WAITING_FOR_TARGET: "waiting-for-target" };
}(p10 || (p10 = {}));
var a6 = p10;

// node_modules/@arcgis/core/views/support/WebGLRequirements.js
function t7(t13) {
  const o18 = t4();
  return o18.available ? "3d" === t13 && o18.majorPerformanceCaveat ? new s("webgl:major-performance-caveat-detected", "Your WebGL implementation doesn't seem to support hardware accelerated rendering. Check your browser settings or if your GPU is in a blocklist.") : o18.supportsHighPrecisionFragment ? o18.supportsVertexShaderSamplers ? null : new s("webgl:vertex-shader-samplers-required", "WebGL support for vertex shader samplers is required but not supported.") : new s("webgl:high-precision-fragment-required", "WebGL support for high precision fragment shaders is required but not supported.") : new s("webgl:required", "WebGL2 is required but not supported.", new Error().stack);
}

// node_modules/@arcgis/core/views/ui/Component.js
function n18(t13) {
  return t13 && "nodeType" in t13;
}
function d7(t13) {
  return t13 && "function" == typeof t13.render;
}
var c11 = { component: "esri-component" };
var p11 = class extends S2 {
  constructor() {
    super(...arguments), this.widget = null;
  }
  destroy() {
    var _a;
    this.node = null, (_a = this.widget) == null ? void 0 : _a.destroy();
  }
  get id() {
    var _a, _b;
    return this._get("id") ?? ((_a = this.widget) == null ? void 0 : _a.id) ?? ((_b = this.node) == null ? void 0 : _b.id);
  }
  set id(t13) {
    this._set("id", t13);
  }
  set node(t13) {
    const o18 = this._get("node");
    t13 !== o18 && (t13 && t13.classList.add(c11.component), o18 && o18.classList.remove(c11.component), this._set("node", t13));
  }
  castNode(t13) {
    var _a;
    return (_a = this.widget) == null ? void 0 : _a.destroy(), t13 ? "string" == typeof t13 || n18(t13) ? (this._set("widget", null), e4(t13)) : (d7(t13) && !t13.domNode && (t13.domNode = document.createElement("div")), this._set("widget", t13), t13.domNode) : (this._set("widget", null), null);
  }
};
e([y()], p11.prototype, "id", null), e([y()], p11.prototype, "node", null), e([s3("node")], p11.prototype, "castNode", null), e([y({ readOnly: true })], p11.prototype, "widget", void 0), p11 = e([a("esri.views.ui.Component")], p11);
var m7 = p11;

// node_modules/@arcgis/core/views/ui/UI.js
var f8 = { left: 0, top: 0, bottom: 0, right: 0 };
var _7 = { bottom: 30, top: 15, right: 15, left: 15 };
var g9 = "esri-ui";
var y5 = { ui: g9, corner: `${g9}-corner`, innerContainer: `${g9}-inner-container`, manualContainer: `${g9}-manual-container`, cornerContainer: `${g9}-corner-container`, topLeft: `${g9}-top-left`, topRight: `${g9}-top-right`, bottomLeft: `${g9}-bottom-left`, bottomRight: `${g9}-bottom-right` };
function C3(t13) {
  return t13 && !t13._started && "function" == typeof t13.postMixInProperties && "function" == typeof t13.buildRendering && "function" == typeof t13.postCreate && "function" == typeof t13.startup;
}
function v8(t13) {
  return 0 === t13 ? "0" : `${t13}px`;
}
function b5(t13) {
  const o18 = "object" == typeof t13 && null !== t13 && Object.getPrototypeOf(t13);
  return (null === o18 || o18 === Object.prototype) && ("component" in t13 || "index" in t13 || "position" in t13) ? t13 : null;
}
function w5(t13, { top: o18, bottom: n23, left: i17, right: e13 }) {
  t13.style.top = o18, t13.style.bottom = n23, t13.style.left = i17, t13.style.right = e13;
}
var P4 = class extends o5.EventedAccessor {
  constructor(t13) {
    super(t13), this._cornerNameToContainerLookup = {}, this._positionNameToContainerLookup = {}, this._components = new Array(), this._componentMap = /* @__PURE__ */ new Map(), this._locale = c2(), this.view = null, this._applyViewPadding = () => {
      const t14 = this.container;
      t14 && w5(t14, this._toPixelPosition(this._getViewPadding()));
    }, this._applyUIPadding = () => {
      const t14 = this._innerContainer;
      t14 && w5(t14, this._toPixelPosition(this.padding));
    }, this._initContainers();
  }
  initialize() {
    this.addHandles([d2(() => {
      var _a;
      return [(_a = this.view) == null ? void 0 : _a.padding, this.container];
    }, this._applyViewPadding, P), d2(() => this.padding, this._applyUIPadding, P), d2(() => [this.container, this._locale], ([t13, o18]) => {
      t13 && t13.setAttribute("lang", o18);
    }, P), f2((t13) => {
      this._locale = t13;
    })]);
  }
  destroy() {
    this.container = null;
    for (const t13 of this._components)
      t13.destroy();
    this._components.length = 0, this._componentMap.clear();
  }
  set container(t13) {
    const o18 = this._get("container");
    t13 !== o18 && (t13 && (t13.classList.add(y5.ui), n7(t13), this._attachContainers(t13)), o18 && (o18.classList.remove(y5.ui), w5(o18, { top: "", bottom: "", left: "", right: "" }), n4(o18)), this._set("container", t13));
  }
  get height() {
    var _a;
    const t13 = ((_a = this.view) == null ? void 0 : _a.height) ?? 0;
    if (0 === t13)
      return t13;
    const o18 = this._getViewPadding(), { top: n23, bottom: i17 } = o18;
    return Math.max(t13 - n23 - i17, 0);
  }
  get padding() {
    return this._get("padding");
  }
  set padding(t13) {
    this._overrideIfSome("padding", t13);
  }
  castPadding(t13) {
    return "number" == typeof t13 ? { bottom: t13, top: t13, right: t13, left: t13 } : { ..._7, ...t13 };
  }
  get width() {
    var _a;
    const t13 = ((_a = this.view) == null ? void 0 : _a.width) ?? 0;
    if (0 === t13)
      return t13;
    const o18 = this._getViewPadding(), { left: n23, right: i17 } = o18;
    return Math.max(t13 - n23 - i17, 0);
  }
  add(t13, o18) {
    let n23, i17, e13;
    if (Array.isArray(t13))
      return void t13.forEach((t14) => this.add(t14, o18));
    const r14 = b5(t13);
    r14 && ({ index: n23, position: o18, component: t13, key: i17 } = r14), o18 && "object" == typeof o18 && ({ index: n23, key: i17, position: o18, internal: e13 } = o18), !t13 || o18 && !this._isValidPosition(o18) || this._add(t13, o18, n23, i17, e13);
  }
  remove(t13, o18) {
    var _a;
    if (!t13)
      return;
    if (Array.isArray(t13))
      return t13.map((t14) => this.remove(t14, o18));
    const n23 = this._find(t13);
    if (n23) {
      if (this._componentMap.has(n23) && ((_a = this._componentMap.get(n23)) == null ? void 0 : _a.key) !== o18)
        return;
      const t14 = this._components.indexOf(n23), i17 = n23.node.parentNode;
      return i17 == null ? void 0 : i17.removeChild(n23.node), this._componentMap.delete(n23), this._components.splice(t14, 1)[0];
    }
  }
  empty(t13, o18 = { removeInternal: false }) {
    if (Array.isArray(t13)) {
      for (const n24 of t13)
        this.empty(n24, o18);
      return;
    }
    const n23 = this._positionNameToContainerLookup[t13 ?? "manual"], i17 = Array.prototype.slice.call(n23.children).map((t14) => this._findByNode(t14)).filter((t14) => {
      var _a;
      if (null == t14)
        return false;
      return !(((_a = this._componentMap.get(t14)) == null ? void 0 : _a.internal) ?? false) || o18.removeInternal;
    });
    for (const e13 of i17)
      this.remove(e13);
  }
  move(t13, o18) {
    if (Array.isArray(t13) && t13.forEach((t14) => this.move(t14, o18)), !t13)
      return;
    let n23;
    const i17 = b5(t13) || b5(o18);
    if (i17 && (n23 = i17.index, o18 = i17.position, t13 = i17.component || t13), o18 && !this._isValidPosition(o18))
      return;
    const e13 = this.remove(t13);
    e13 && this.add(e13, { position: o18, index: n23 });
  }
  find(t13) {
    if (!t13)
      return null;
    const o18 = this._findById(t13);
    return o18 && (o18.widget || o18.node);
  }
  getComponents(t13, o18 = { includeInternal: false }) {
    return t13 ? Array.isArray(t13) ? t13.flatMap((t14) => this._getComponentsAtPosition(t14, o18)) : this._getComponentsAtPosition(t13, o18) : this._components.filter((t14) => {
      var _a;
      return o18.includeInternal || !((_a = this._componentMap.get(t14)) == null ? void 0 : _a.internal);
    }).map(({ widget: t14, node: o19 }) => t14 ?? o19);
  }
  getPosition(t13) {
    for (const o18 in this._positionNameToContainerLookup) {
      if (this._positionNameToContainerLookup[o18].contains(t13))
        return o18;
    }
    return null;
  }
  _add(t13, o18, n23, i17, e13) {
    t13 instanceof m7 || (t13 = new m7({ node: t13 })), this._place({ component: t13, position: o18, index: n23 }), this._components.push(t13), this._componentMap.set(t13, { key: i17, internal: e13 });
  }
  _find(t13) {
    return t13 ? t13 instanceof m7 ? this._findByComponent(t13) : "string" == typeof t13 ? this._findById(t13) : this._findByNode(t13.domNode || t13) : null;
  }
  _getViewPadding() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.padding) ?? f8;
  }
  _attachContainers(t13) {
    t13.appendChild(this._innerContainer), t13.appendChild(this._manualContainer);
  }
  _initContainers() {
    const t13 = document.createElement("div");
    t13.classList.add(y5.innerContainer, y5.cornerContainer);
    const o18 = document.createElement("div");
    o18.classList.add(y5.innerContainer, y5.manualContainer);
    const n23 = document.createElement("div");
    n23.classList.add(y5.topLeft, y5.corner), t13.appendChild(n23);
    const i17 = document.createElement("div");
    i17.classList.add(y5.topRight, y5.corner), t13.appendChild(i17);
    const e13 = document.createElement("div");
    e13.classList.add(y5.bottomLeft, y5.corner), t13.appendChild(e13);
    const r14 = document.createElement("div");
    r14.classList.add(y5.bottomRight, y5.corner), t13.appendChild(r14), this._innerContainer = t13, this._manualContainer = o18;
    const s14 = v3();
    this._cornerNameToContainerLookup = { "top-left": n23, "top-right": i17, "bottom-left": e13, "bottom-right": r14, "top-leading": s14 ? i17 : n23, "top-trailing": s14 ? n23 : i17, "bottom-leading": s14 ? r14 : e13, "bottom-trailing": s14 ? e13 : r14 }, this._positionNameToContainerLookup = { manual: o18, ...this._cornerNameToContainerLookup };
  }
  _isValidPosition(t13) {
    return !!this._positionNameToContainerLookup[t13];
  }
  _place(t13) {
    const o18 = t13.position ?? "manual", { component: n23, index: e13 } = t13, r14 = this._positionNameToContainerLookup[o18], s14 = null != e13 && e13 > -1;
    if (C3(n23.widget) && n23.widget.startup(), !s14)
      return void r14.appendChild(n23.node);
    const a12 = Array.from(r14.children);
    if (0 === e13)
      return void (r14.firstChild ? o7(n23.node, r14.firstChild) : r14.appendChild(n23.node));
    e13 >= a12.length ? r14.appendChild(n23.node) : o7(n23.node, a12[e13]);
  }
  _toPixelPosition(t13) {
    return { top: v8(t13.top), left: v8(t13.left), right: v8(t13.right), bottom: v8(t13.bottom) };
  }
  _findByComponent(t13) {
    return this._components.find((o18) => o18 === t13) ?? null;
  }
  _findById(t13) {
    return this._components.find(({ id: o18 }) => o18 === t13) ?? null;
  }
  _findByNode(t13) {
    return this._components.find(({ node: o18 }) => o18 === t13) ?? null;
  }
  _getComponentsAtPosition(t13, n23) {
    const i17 = this._positionNameToContainerLookup[t13];
    return Array.prototype.slice.call(i17.children).map((t14) => this._findByNode(t14)).filter(k).filter((t14) => {
      var _a;
      return n23.includeInternal || !((_a = this._componentMap.get(t14)) == null ? void 0 : _a.internal);
    }).map(({ widget: t14, node: o18 }) => t14 ?? o18);
  }
};
e([y()], P4.prototype, "_locale", void 0), e([y()], P4.prototype, "container", null), e([y()], P4.prototype, "height", null), e([y({ value: _7 })], P4.prototype, "padding", null), e([s3("padding")], P4.prototype, "castPadding", null), e([y()], P4.prototype, "view", void 0), e([y()], P4.prototype, "width", null), P4 = e([a("esri.views.ui.UI")], P4);
var L4 = P4;

// node_modules/@arcgis/core/widgets/Attribution/AttributionViewModel.js
function f9(t13, e13) {
  return t13 && "copyright" in t13 && (!e13 || "function" == typeof t13.originOf && "user" === t13.originOf("copyright"));
}
function y6(t13, e13) {
  return t13.length !== e13.length || t13.some((t14, i17) => t14.text !== e13[i17].text);
}
function b6(t13, e13, i17) {
  if (!i17 || !e13)
    return;
  t13.find((t14) => t14.layerView === e13 && t14.text === i17) || t13.push({ text: i17, layerView: e13 });
}
function g10(t13) {
  return "bing-maps" === t13.type;
}
var A4 = [];
var _8 = class extends S2 {
  constructor(t13) {
    super(t13), this._clear = () => {
      this._fetchedAttributionData.clear(), this._pendingAttributions.clear(), this.removeHandles("suspension"), this.notifyChange("state");
    }, this._pendingAttributions = /* @__PURE__ */ new Set(), this._fetchedAttributionData = /* @__PURE__ */ new Map(), this.items = new V(), this.view = null, this._allLayerViewsChange = (t14) => {
      var _a;
      this.removeHandles("suspension"), this.removeHandles("visible-geometry-changed");
      const e13 = (_a = this.view) == null ? void 0 : _a.allLayerViews;
      e13 && (this.addHandles(e13.map((t15) => d2(() => {
        var _a2;
        return [t15.suspended, (_a2 = t15.layer) == null ? void 0 : _a2.attributionVisible];
      }, () => this._updateAttributionItems())).toArray(), "suspension"), e13.forEach((t15) => {
        "esri.views.3d.layers.Tiles3DLayerView3D" === t15.declaredClass && this.addHandles(t15.on("visible-geometry-changed", () => this._updateAttributionItems()), "visible-geometry-changed");
      })), (t14 == null ? void 0 : t14.removed) && t14.removed.forEach((t15) => {
        this._pendingAttributions.delete(t15), this._fetchedAttributionData.delete(t15);
      }), this._updateAttributionItems();
    }, this.addHandles([v2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.allLayerViews;
    }, "change", (t14) => this._allLayerViewsChange(t14), { onListenerAdd: () => this._allLayerViewsChange(), onListenerRemove: this._clear }), p(() => {
      var _a;
      return true === ((_a = this.view) == null ? void 0 : _a.stationary);
    }, () => this._updateAttributionItems())]);
  }
  destroy() {
    this.view = null, this._fetchedAttributionData.clear(), this._pendingAttributions.clear(), this.items.removeAll();
  }
  get state() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.ready) ? this._pendingAttributions.size > 0 ? "loading" : "ready" : "disabled";
  }
  _updateAttributionItems() {
    const t13 = this.view, e13 = t13 == null ? void 0 : t13.allLayerViews;
    if (A4.length = 0, !t13 || !e13)
      return void this._clear();
    e13.forEach((e14) => {
      var _a, _b;
      if (e14.suspended || !((_a = e14.layer) == null ? void 0 : _a.attributionVisible))
        return;
      const i18 = e14.layer;
      if (f9(i18, "user"))
        return void b6(A4, e14, i18.copyright);
      if (i18.hasAttributionData) {
        if (this._fetchedAttributionData.has(e14)) {
          const r15 = this._fetchedAttributionData.get(e14);
          return void (r15 ? b6(A4, e14, this._getDynamicAttribution(r15, t13, i18)) : f9(i18) && b6(A4, e14, i18.copyright));
        }
        return void this._fetchAttributionData(e14);
      }
      const r14 = "portalItem" in i18 ? (_b = i18.portalItem) == null ? void 0 : _b.accessInformation : void 0;
      b6(A4, e14, r14 || i18.copyright);
    });
    const i17 = e13.find((t14) => {
      var _a;
      return "integrated-mesh-3dtiles" === ((_a = t14.layer) == null ? void 0 : _a.type);
    });
    if (this.view && i17) {
      const t14 = l8(this.view);
      if (t14) {
        const e14 = t14.getAttributionText();
        for (let t15 = 0; t15 < e14.length; ++t15)
          b6(A4, i17, e14[t15]);
      }
    }
    y6(this.items, A4) && (this.items.removeAll(), this.items.addMany(A4)), A4.length = 0, this.notifyChange("state");
  }
  async _fetchAttributionData(t13) {
    if (this._pendingAttributions.has(t13))
      return;
    this._pendingAttributions.add(t13);
    const e13 = await _(t13.layer.fetchAttributionData());
    if (this._pendingAttributions.has(t13)) {
      const i17 = e13.ok ? this._createContributionIndex(e13.value, g10(t13.layer)) : null;
      this._pendingAttributions.delete(t13), this._fetchedAttributionData.set(t13, i17);
    }
    this._updateAttributionItems();
  }
  _createContributionIndex(t13, e13) {
    const i17 = t13.contributors, r14 = {};
    if (!i17)
      return r14;
    for (let s14 = 0; s14 < i17.length; s14++) {
      const t14 = i17[s14], o18 = t14.coverageAreas;
      if (!o18)
        return;
      for (const i18 of o18) {
        const o19 = i18.bbox, n23 = i18.zoomMin - (e13 && i18.zoomMin ? 1 : 0), a12 = i18.zoomMax - (e13 && i18.zoomMax ? 1 : 0), c15 = new w2({ xmin: o19[1], ymin: o19[0], xmax: o19[3], ymax: o19[2], spatialReference: f3.WGS84 }), u10 = { extent: d3(c15), attribution: t14.attribution || "", score: null != i18.score ? i18.score : 100, id: s14 };
        for (let t15 = n23; t15 <= a12; t15++)
          r14[t15] ?? (r14[t15] = []), r14[t15].push(u10);
      }
    }
    return r14.maxKey = Math.max.apply(null, Object.keys(r14)), r14;
  }
  _getDynamicAttribution(t13, e13, i17) {
    var _a;
    const { extent: r14, scale: s14 } = e13;
    let o18 = ((_a = i17.tileInfo) == null ? void 0 : _a.scaleToZoom(s14)) ?? 0;
    if (o18 = Math.min(t13.maxKey ?? 0, Math.round(o18)), !r14 || null == o18 || o18 <= -1)
      return "";
    const n23 = t13[o18], a12 = g3(r14.center.clone().normalize(), e13.spatialReference), c15 = /* @__PURE__ */ new Set();
    return n23 ? n23.filter((t14) => {
      const e14 = t14.id, i18 = !c15.has(e14) && a12 && t14.extent && t2(t14.extent, a12);
      return i18 && c15.add(e14), i18;
    }).sort((t14, e14) => e14.score - t14.score || t14.objectId - e14.objectId).map((t14) => t14.attribution).join(", ") : "";
  }
};
e([y({ readOnly: true, type: V })], _8.prototype, "items", void 0), e([y({ readOnly: true })], _8.prototype, "state", null), e([y()], _8.prototype, "view", void 0), _8 = e([a("esri.widgets.Attribution.AttributionViewModel")], _8);
var v9 = _8;

// node_modules/@arcgis/core/widgets/Attribution.js
var c12 = "esri-attribution";
var a7 = { base: c12, poweredBy: `${c12}__powered-by`, sources: `${c12}__sources`, open: `${c12}--open`, sourcesOpen: `${c12}__sources--open`, link: `${c12}__link` };
var h5 = class extends D {
  constructor(e13, t13) {
    super(e13, t13), this._isOpen = false, this._attributionTextOverflowed = false, this._prevSourceNodeHeight = 0, this._resizeObserver = new ResizeObserver((e14) => e14.forEach(({ target: e15 }) => this._checkSourceTextOverflow(e15))), this.itemDelimiter = " | ", this.messages = null, this.viewModel = new v9();
  }
  initialize() {
    this.addHandles(v2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.items;
    }, "change", () => this.scheduleRender()));
  }
  destroy() {
    var _a;
    (_a = this._resizeObserver) == null ? void 0 : _a.disconnect();
  }
  get _isInteractive() {
    return this._isOpen || this._attributionTextOverflowed;
  }
  get attributionText() {
    return this.viewModel.items.reduce((e13, t13) => (e13.includes(t13.text) || e13.push(t13.text), e13), []).join(this.itemDelimiter);
  }
  get icon() {
    return "description";
  }
  set icon(e13) {
    this._overrideIfSome("icon", e13);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e13) {
    this._overrideIfSome("label", e13);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e13) {
    this.viewModel.view = e13;
  }
  render() {
    const e13 = { [a7.open]: this._isOpen };
    return n6("div", { bind: this, class: this.classes(a7.base, e7.widget, e13), dir: "ltr", onclick: this._toggleState, onkeydown: this._toggleState }, this._renderSourcesNode(), this._renderPoweredBy());
  }
  _renderPoweredBy() {
    return n6("div", { class: a7.poweredBy }, "Powered by", " ", n6("a", { class: a7.link, href: "https://www.esri.com/", rel: "noreferrer", target: "_blank" }, "Esri"));
  }
  _renderSourcesNode() {
    const e13 = this._isOpen, t13 = this._isInteractive, i17 = t13 ? 0 : void 0, { attributionText: r14 } = this, s14 = { [a7.sourcesOpen]: e13, [e7.interactive]: t13 };
    return n6("div", { afterCreate: this._afterSourcesNodeCreate, bind: this, class: this.classes(a7.sources, s14), innerHTML: r14, tabIndex: i17 });
  }
  _afterSourcesNodeCreate(e13) {
    this._prevSourceNodeHeight = e13.clientWidth, this._resizeObserver.observe(e13);
  }
  _checkSourceTextOverflow(e13) {
    let t13 = false;
    const { clientHeight: i17, clientWidth: r14, scrollWidth: s14 } = e13, o18 = s14 > r14, n23 = this._attributionTextOverflowed !== o18;
    if (this._attributionTextOverflowed = o18, n23 && (t13 = true), this._isOpen) {
      const e14 = i17 < this._prevSourceNodeHeight;
      this._prevSourceNodeHeight = i17, e14 && (this._isOpen = false, t13 = true);
    }
    t13 && this.scheduleRender();
  }
  _toggleState() {
    this._isInteractive && (this._isOpen = !this._isOpen);
  }
};
e([y()], h5.prototype, "_isOpen", void 0), e([y()], h5.prototype, "_isInteractive", null), e([y()], h5.prototype, "_attributionTextOverflowed", void 0), e([y()], h5.prototype, "_prevSourceNodeHeight", void 0), e([y({ readOnly: true, dependsOn: ["viewModel.items.length", "itemDelimiter"] })], h5.prototype, "attributionText", null), e([y()], h5.prototype, "icon", null), e([y()], h5.prototype, "itemDelimiter", void 0), e([y()], h5.prototype, "label", null), e([y(), e5("esri/widgets/Attribution/t9n/Attribution")], h5.prototype, "messages", void 0), e([y()], h5.prototype, "view", null), e([y({ type: v9 })], h5.prototype, "viewModel", void 0), e([t5()], h5.prototype, "_toggleState", null), h5 = e([a("esri.widgets.Attribution")], h5);
var u7 = h5;

// node_modules/@arcgis/core/views/ui/DefaultUI.js
function m8(t13) {
  return void 0 !== (t13 == null ? void 0 : t13.view);
}
var h6 = class extends L4 {
  constructor(t13) {
    super(t13), this._defaultPositionLookup = { attribution: "manual", compass: "top-left", "navigation-toggle": "top-left", zoom: "top-left" }, this.components = [], this._updateViewAwareWidgets = (t14) => {
      this.components.forEach((o18) => {
        const e13 = this._find(o18), i17 = e13 == null ? void 0 : e13.widget;
        m8(i17) && (i17.view = t14);
      });
    }, this._componentsWatcher = (t14, o18) => {
      this._removeComponents(o18), this._addComponents(t14), this._adjustPadding(t14);
    };
  }
  initialize() {
    this.addHandles([d2(() => this.components, this._componentsWatcher, P), d2(() => this.view, this._updateViewAwareWidgets, P)]);
  }
  _add(t13, o18, e13, i17, s14) {
    let r14 = t13;
    if ("string" == typeof t13 && this._defaultPositionLookup[t13]) {
      if (this._find(t13))
        return;
      r14 = this._createComponent(t13);
    }
    super._add(r14, o18, e13, i17, s14);
  }
  _removeComponents(t13) {
    t13.forEach((t14) => {
      const o18 = this._find(t14);
      o18 && (this.remove(o18), o18.destroy());
    });
  }
  _adjustPadding(t13) {
    if (!t13.includes("attribution") && !this._isOverridden("padding")) {
      const { top: t14 } = this.padding;
      this.padding = t14;
    }
  }
  _addComponents(t13) {
    this.constructed && t13.forEach((t14) => this.add(this._createComponent(t14), this._defaultPositionLookup[t14]));
  }
  _createComponent(t13) {
    const o18 = this._createWidget(t13);
    return new m7({ id: t13, node: o18 });
  }
  _createWidget(t13) {
    const { view: o18 } = this;
    switch (t13) {
      case "attribution":
        return new u7({ view: o18 });
      case "compass":
        return new d4({ view: o18 });
      case "navigation-toggle":
        return new g6({ view: o18 });
      case "zoom":
        return new p2({ view: o18 });
    }
  }
};
e([y()], h6.prototype, "components", void 0), h6 = e([a("esri.views.ui.DefaultUI")], h6);
var u8 = h6;

// node_modules/@arcgis/core/views/input/gamepad/GamepadState.js
function t8(t13) {
  const n23 = t13.native;
  return n23 ? { buttons: n23.buttons.map((t14) => t14.pressed ? t14.value || 1 : 0), axes: n23.axes.map((n24) => s9(n24, t13.axisThreshold)) } : { buttons: [], axes: [] };
}
function n19(t13, n23) {
  if (t13.axes.length !== n23.axes.length)
    return false;
  if (t13.buttons.length !== n23.buttons.length)
    return false;
  for (let e13 = 0; e13 < t13.axes.length; e13++)
    if (t13.axes[e13] !== n23.axes[e13])
      return false;
  for (let e13 = 0; e13 < t13.buttons.length; e13++)
    if (t13.buttons[e13] !== n23.buttons[e13])
      return false;
  return true;
}
function e10(t13) {
  for (let n23 = 0; n23 < t13.axes.length; n23++)
    if (0 !== t13.axes[n23])
      return false;
  for (let n23 = 0; n23 < t13.buttons.length; n23++)
    if (0 !== t13.buttons[n23])
      return false;
  return true;
}
function s9(t13, n23) {
  const e13 = Math.abs(t13);
  return e13 < n23 ? 0 : Math.sign(t13) * (e13 - n23) / (1 - n23);
}

// node_modules/@arcgis/core/views/input/gamepad/GamepadSource.js
var a8 = class {
  constructor(e13, t13) {
    this._element = e13, this._input = t13, this._hasEventListeners = false, this._onConnectGamepad = (e14) => {
      this._connectGamepad(e14.gamepad);
    }, this._onDisconnectGamepad = (e14) => {
      const t14 = e14.gamepad, s15 = t14.index, i18 = this._inputDevices[s15];
      i18 && (this._emitGamepadEvent(t14, t8(i18), false), this._inputDevices.splice(s15, 1), this._latestUpdate.splice(s15, 1), this._input.gamepad.devices.remove(i18), this.ensurePollingState());
    }, this._frameTask = null, this._latestUpdate = new Array(), this._inputDevices = new Array(), this._callback = null;
    const s14 = "getGamepads" in window.navigator, i17 = window.isSecureContext;
    this.supported = s14 && i17, this.supported && (d8((e14) => this._connectGamepad(e14)), window.addEventListener("gamepadconnected", this._onConnectGamepad), window.addEventListener("gamepaddisconnected", this._onDisconnectGamepad), this.ensurePollingState());
  }
  destroy() {
    this.hasEventListeners = false, this.supported && (window.removeEventListener("gamepadconnected", this._onConnectGamepad), window.removeEventListener("gamepaddisconnected", this._onDisconnectGamepad));
  }
  set hasEventListeners(e13) {
    this._hasEventListeners !== e13 && (this._hasEventListeners = e13, this.ensurePollingState());
  }
  get _eventsEnabled() {
    return this.supported && this._inputDevices.length > 0 && this._hasEventListeners;
  }
  set onEvent(e13) {
    this._callback = e13;
  }
  _connectGamepad(e13) {
    const n23 = new a3(e13);
    "unknown" !== n23.deviceType && (this._inputDevices[e13.index] = n23, this._input.gamepad.devices.add(n23)), this.ensurePollingState();
  }
  ensurePollingState() {
    this._eventsEnabled ? this._startPolling() : this._stopPolling();
  }
  _startPolling() {
    null == this._frameTask && (this._frameTask = A2({ update: () => this._readGamepadState() }));
  }
  _stopPolling() {
    null != this._frameTask && (this._frameTask.remove(), this._frameTask = null, this._latestUpdate = new Array());
  }
  _readGamepadState() {
    const e13 = document.hasFocus(), t13 = this._element.contains(document.activeElement), a12 = "document" === this._input.gamepad.enabledFocusMode && !e13 || "view" === this._input.gamepad.enabledFocusMode && !t13;
    d8((e14) => {
      const t14 = this._inputDevices[e14.index];
      if (!t14)
        return;
      const o18 = this._latestUpdate[e14.index], d9 = t8(t14), c15 = a12 || e10(d9);
      if (o18) {
        if (o18.timestamp === e14.timestamp)
          return;
        if (!o18.active && c15)
          return;
        if (n19(o18.state, d9))
          return;
      }
      this._emitGamepadEvent(e14, d9, !c15);
    });
  }
  _emitGamepadEvent(e13, t13, n23) {
    const s14 = this._latestUpdate[e13.index], i17 = s14 && s14.active;
    if (!i17 && !n23)
      return;
    const a12 = !i17 && n23 ? "start" : i17 && n23 ? "update" : "end";
    this._latestUpdate[e13.index] = { timestamp: e13.timestamp, state: t13, active: n23 }, this._callback && this._callback({ device: this._inputDevices[e13.index], state: t13, action: a12 });
  }
};
function o13(e13) {
  if (!e13)
    return false;
  if (!e13.connected)
    return false;
  for (let t13 = 0; t13 < e13.axes.length; t13++)
    if (isNaN(e13.axes[t13]))
      return false;
  return true;
}
function d8(e13) {
  const t13 = window.navigator.getGamepads();
  for (let n23 = 0; n23 < t13.length; n23++) {
    const s14 = t13[n23];
    o13(s14) && e13(s14);
  }
}

// node_modules/@arcgis/core/views/input/BrowserEventSource.js
var i15 = has("edge");
var o14 = has("chrome");
var a9 = has("ff");
var s10 = has("safari");
var r7 = "esri-view-surface";
var h7 = { touchNone: `${r7}--touch-none`, touchPan: `${r7}--touch-pan` };
var l12 = class _l {
  constructor(e13, n23) {
    this._input = n23, this._active = {}, this._callback = () => {
    }, this._activePointerCaptures = /* @__PURE__ */ new Set(), this._keyDownState = /* @__PURE__ */ new Set(), this._eventId = 1, this._browserTouchPanningEnabled = false, this._element = e13, e13.getAttribute("tabindex") || e13.setAttribute("tabindex", "0"), this._eventHandlers = { "key-down": this._handleKey, "key-up": this._handleKey, "pointer-down": this._handlePointer, "pointer-move": this._handlePointerPreventDefault, "pointer-up": this._handlePointerPreventDefault, "pointer-enter": this._handlePointer, "pointer-leave": this._handlePointer, "pointer-cancel": this._handlePointer, "mouse-wheel": this._handleMouseWheel, "pointer-capture-lost": this._handlePointerCaptureLost }, this._updateTouchAction(), this._element.addEventListener("keydown", this._preventAltKeyDefault), this._gamepadSource = new a8(e13, this._input), this._gamepadSource.onEvent = (e14) => this._callback("gamepad", e14);
  }
  destroy() {
    this._callback = () => {
    }, this.activeEvents = null, this._activePointerCaptures.forEach((e13) => {
      this._releasePointerCaptureSafe(e13);
    }), this._gamepadSource = u(this._gamepadSource), this._activePointerCaptures = null, this._removeTouchAction(), this._element.removeEventListener("keydown", this._preventAltKeyDefault);
  }
  get browserTouchPanningEnabled() {
    return this._browserTouchPanningEnabled;
  }
  set browserTouchPanningEnabled(e13) {
    this._browserTouchPanningEnabled = e13, this._updateTouchAction(), this._updateTouchEventHandling();
  }
  set onEventReceived(e13) {
    this._callback = e13;
  }
  set activeEvents(e13) {
    for (const t13 in this._active)
      if (!e13 || !e13.has(t13)) {
        const e14 = this._active[t13];
        this._element.removeEventListener(c13[t13], e14), delete this._active[t13];
      }
    e13 && e13.forEach((e14) => {
      if (!this._active[e14] && c13[e14]) {
        const t13 = (this._eventHandlers[e14] || this._handleDefault).bind(this, e14);
        this._element.addEventListener(c13[e14], t13), this._active[e14] = t13;
      }
    }), this._gamepadSource.hasEventListeners = (e13 == null ? void 0 : e13.has("gamepad")) ?? false;
  }
  setPointerCapture(e13, t13) {
    t13 ? this._setPointerCatpureSafe(e13.pointerId) : (this._releasePointerCaptureSafe(e13.pointerId), this._activePointerCaptures.delete(e13.pointerId));
  }
  _updateTouchAction() {
    this._element.classList.remove(this._browserTouchPanningEnabled ? h7.touchNone : h7.touchPan), this._element.classList.add(this._browserTouchPanningEnabled ? h7.touchPan : h7.touchNone);
  }
  _updateTouchEventHandling() {
    this._browserTouchPanningEnabled ? this._element.addEventListener("touchmove", this._preventMultiTouchPanning) : this._element.removeEventListener("touchmove", this._preventMultiTouchPanning);
  }
  _removeTouchAction() {
    this._element.classList.remove(h7.touchNone), this._element.classList.remove(h7.touchPan), this._element.removeEventListener("touchmove", this._preventMultiTouchPanning);
  }
  _setPointerCatpureSafe(e13) {
    try {
      this._element.setPointerCapture(e13), this._activePointerCaptures.add(e13);
    } catch {
    }
  }
  _releasePointerCaptureSafe(e13) {
    try {
      if (this._element.hasPointerCapture && !this._element.hasPointerCapture(e13))
        return;
      this._element.releasePointerCapture(e13);
    } catch (t13) {
    }
  }
  _updateNormalizedPointerLikeEvent(e13, t13) {
    const i17 = i9(this._element, e13);
    return _l.test.disableSubpixelCoordinates && (i17.x = Math.round(i17.x), i17.y = Math.round(i17.y)), t13.x = i17.x, t13.y = i17.y, t13;
  }
  _handleKey(e13, t13) {
    const { key: n23 } = t13;
    n23 && "key-up" === e13 && this._keyDownState.delete(n23);
    const i17 = { native: t13, key: n23, repeat: !!n23 && this._keyDownState.has(n23) };
    n23 && "key-down" === e13 && this._keyDownState.add(i17.key), this._callback(e13, i17);
  }
  _handlePointer(e13, t13) {
    const n23 = this._updateNormalizedPointerLikeEvent(t13, { native: t13, x: 0, y: 0, pointerType: t13.pointerType, button: t13.button, buttons: t13.buttons, eventId: this._eventId++ });
    this._callback(e13, n23);
  }
  _handlePointerPreventDefault(e13, t13) {
    const n23 = this._updateNormalizedPointerLikeEvent(t13, { native: t13, x: 0, y: 0, pointerType: t13.pointerType, button: t13.button, buttons: t13.buttons, eventId: this._eventId++ });
    t13.preventDefault(), this._callback(e13, n23);
  }
  _handleMouseWheel(e13, t13) {
    let n23 = t13.deltaY;
    switch (t13.deltaMode) {
      case 0:
        i15 && (n23 = n23 / document.documentElement.clientHeight * 600);
        break;
      case 1:
        n23 *= 30;
        break;
      case 2:
        n23 *= 900;
    }
    i15 ? n23 *= 0.7 : o14 || s10 ? n23 *= 0.6 : a9 && (n23 *= 1.375);
    const r14 = 100, h9 = Math.abs(n23);
    if (h9 > r14) {
      const e14 = 0.02;
      n23 = n23 / h9 * 200 / (1 + Math.exp(-e14 * (h9 - r14)));
    }
    const l13 = this._updateNormalizedPointerLikeEvent(t13, { native: t13, x: 0, y: 0, deltaY: n23 });
    this._callback(e13, l13);
  }
  _handlePointerCaptureLost(e13, t13) {
    this._activePointerCaptures.delete(t13.pointerId), this._handleDefault(e13, t13);
  }
  _handleDefault(e13, t13) {
    const n23 = { native: t13 };
    t13.preventDefault(), this._callback(e13, n23);
  }
  _preventAltKeyDefault(e13) {
    "Alt" === e13.key && e13.preventDefault();
  }
  _preventMultiTouchPanning(e13) {
    e13.touches.length > 1 && e13.preventDefault();
  }
};
l12.test = { disableSubpixelCoordinates: false };
var c13 = { "key-down": "keydown", "key-up": "keyup", "pointer-down": "pointerdown", "pointer-up": "pointerup", "pointer-move": "pointermove", "mouse-wheel": "wheel", "pointer-capture-got": "gotpointercapture", "pointer-capture-lost": "lostpointercapture", "context-menu": "contextmenu", "pointer-enter": "pointerenter", "pointer-leave": "pointerleave", "pointer-cancel": "pointercancel", focus: "focus", blur: "blur" };

// node_modules/@arcgis/core/views/input/handlers/PreventContextMenu.js
var e11 = class extends i7 {
  constructor() {
    super(true), this.registerIncoming("context-menu", (t13) => {
      t13.data.native.preventDefault();
    });
  }
};

// node_modules/@arcgis/core/views/input/recognizers/support.js
var t9 = { maximumClickDelay: 300, movementUntilMouseDrag: 1.5, movementUntilPenDrag: 6, movementUntilTouchDrag: 6, holdDelay: 500, maximumDoubleClickDelay: 250, maximumDoubleClickDistance: 10, maximumDoubleTouchDelay: 350, maximumDoubleTouchDistance: 35 };
function n20(e13, t13) {
  return Math.abs(t13.x - e13.x) + Math.abs(t13.y - e13.y);
}
function r8(e13, t13) {
  const n23 = t13.x - e13.x, r14 = t13.y - e13.y;
  return Math.sqrt(n23 * n23 + r14 * r14);
}
function o15(t13, n23) {
  if (n23 ? (n23.radius = 0, n23.center.x = 0, n23.center.y = 0) : n23 = { radius: 0, center: c4() }, 0 === t13.length)
    return n23;
  if (1 === t13.length)
    return n23.center.x = t13[0].x, n23.center.y = t13[0].y, n23;
  if (2 === t13.length) {
    const [e13, r15] = t13, [o19, u11] = [r15.x - e13.x, r15.y - e13.y];
    return n23.radius = Math.sqrt(o19 * o19 + u11 * u11) / 2, n23.center.x = (e13.x + r15.x) / 2, n23.center.y = (e13.y + r15.y) / 2, n23;
  }
  let r14 = 0, o18 = 0;
  for (let e13 = 0; e13 < t13.length; e13++)
    r14 += t13[e13].x, o18 += t13[e13].y;
  r14 /= t13.length, o18 /= t13.length;
  const u10 = t13.map((e13) => e13.x - r14), c15 = t13.map((e13) => e13.y - o18);
  let i17 = 0, a12 = 0, l13 = 0, m10 = 0, s14 = 0, x2 = 0, y7 = 0;
  for (let e13 = 0; e13 < u10.length; e13++) {
    const t14 = u10[e13], n24 = c15[e13], r15 = t14 * t14, o19 = n24 * n24;
    i17 += r15, a12 += o19, l13 += t14 * n24, m10 += r15 * t14, s14 += o19 * n24, x2 += t14 * o19, y7 += n24 * r15;
  }
  const h9 = 0.5 * (m10 + x2), D2 = 0.5 * (s14 + y7), g11 = i17 * a12 - l13 * l13, f10 = (h9 * a12 - D2 * l13) / g11, b7 = (i17 * D2 - l13 * h9) / g11, p13 = c4(f10 + r14, b7 + o18);
  return { radius: Math.sqrt(f10 * f10 + b7 * b7 + (i17 + a12) / t13.length), center: p13 };
}
function u9(e13) {
  const { native: t13 } = e13, { pointerId: n23, button: r14, pointerType: o18 } = t13;
  return "mouse" === o18 ? `${n23}:${r14}` : `${o18}`;
}

// node_modules/@arcgis/core/views/input/recognizers/Drag.js
var s11 = class extends i7 {
  constructor(t13) {
    super(false), this._navigationTouch = t13, this._startStateModifiers = /* @__PURE__ */ new Set(), this._activePointerMap = /* @__PURE__ */ new Map(), this._isDragging = false, this._isCurrentDragSuppressed = false, this._drag = this.registerOutgoing("drag"), this.registerIncoming("pointer-drag", this._handlePointerDrag.bind(this)), this.registerIncoming("pointer-up", this._handlePointerUpAndPointerLost.bind(this)), this.registerIncoming("pointer-capture-lost", this._handlePointerUpAndPointerLost.bind(this)), this.registerIncoming("pointer-cancel", this._handlePointerUpAndPointerLost.bind(this));
  }
  _createPayload(t13, e13, i17, n23) {
    return { action: t13, pointerType: this._pointerType, button: this._mouseButton, buttons: e13.buttons, timestamp: n23, pointers: o16(this._activePointerMap), pointer: e13, angle: i17.angle, radius: i17.radius, center: i17.center };
  }
  _addPointer(t13) {
    const e13 = t13.native.pointerId, i17 = a10(this._activePointerMap).angle, n23 = { event: t13, initialAngle: 0, lastAngle: 0 };
    this._activePointerMap.set(e13, n23);
    const s14 = h8(n23, r9(this._activePointerMap));
    n23.initialAngle = s14, n23.lastAngle = s14, this._updatePointerAngles(i17);
  }
  _updatePointer(t13) {
    if (t13 && null == t13.x && null == t13.y)
      return;
    const e13 = t13.native.pointerId, i17 = this._activePointerMap.get(e13);
    i17 ? i17.event = t13 : this._addPointer(t13);
  }
  _removePointer(t13) {
    const e13 = a10(this._activePointerMap).angle;
    this._activePointerMap.delete(t13), this._updatePointerAngles(e13);
  }
  _updatePointerAngles(t13) {
    const e13 = a10(this._activePointerMap);
    this._activePointerMap.forEach((i17) => {
      i17.initialAngle = h8(i17, e13) - t13, i17.lastAngle = h8(i17, e13) - t13;
    });
  }
  _emitEvent(t13, e13, i17) {
    const n23 = a10(this._activePointerMap);
    this._drag.emit(this._createPayload(t13, e13, n23, i17), void 0, this._startStateModifiers);
  }
  _handlePointerUpAndPointerLost(t13) {
    const i17 = t13.data.native.pointerId, n23 = n2(t13.timestamp);
    this._activePointerMap.get(i17) && (1 === this._activePointerMap.size ? (this._updatePointer(t13.data), !this._isCurrentDragSuppressed && this._emitEvent("end", t13.data, n23), this._isDragging = false, this._isCurrentDragSuppressed = false, this._removePointer(i17)) : (this._removePointer(i17), this._emitEvent("removed", t13.data, n2(t13.timestamp))));
  }
  _handlePointerDrag(t13) {
    const i17 = t13.data, n23 = i17.currentEvent, s14 = n2(t13.timestamp);
    switch (i17.action) {
      case "start":
      case "update":
        this._isDragging ? this._activePointerMap.has(n23.native.pointerId) ? (this._updatePointer(n23), !this._isCurrentDragSuppressed && this._emitEvent("update", n23, s14)) : (this._addPointer(n23), this._emitEvent("added", n23, s14), this._isCurrentDragSuppressed = this._isSuppressed) : (this._updatePointer(n23), this._pointerType = t13.data.startEvent.pointerType, this._mouseButton = t13.data.startEvent.button, this._startStateModifiers = t13.modifiers, this._isDragging = true, this._isCurrentDragSuppressed = this._isSuppressed, !this._isCurrentDragSuppressed && this._emitEvent("start", n23, s14));
    }
  }
  get _isSuppressed() {
    return !!this._navigationTouch && !this._navigationTouch.browserTouchPanEnabled && "touch" === this._pointerType && 1 === this._activePointerMap.size;
  }
};
function r9(e13) {
  const i17 = [];
  return e13.forEach((e14) => {
    i17.push(c4(e14.event.x, e14.event.y));
  }), o15(i17);
}
function a10(t13) {
  const e13 = r9(t13);
  let i17 = 0;
  return t13.forEach((t14) => {
    let n23 = h8(t14, e13), s14 = n23 - t14.lastAngle;
    for (; s14 > Math.PI; )
      s14 -= 2 * Math.PI;
    for (; s14 < -Math.PI; )
      s14 += 2 * Math.PI;
    n23 = t14.lastAngle + s14, t14.lastAngle = n23;
    const r14 = n23 - t14.initialAngle;
    i17 += r14;
  }), i17 /= t13.size || 1, { angle: i17, radius: e13.radius, center: e13.center };
}
function o16(t13) {
  const e13 = /* @__PURE__ */ new Map();
  return t13.forEach((t14, i17) => e13.set(i17, t14.event)), e13;
}
function h8(t13, e13) {
  const i17 = t13.event, n23 = i17.x - e13.center.x, s14 = i17.y - e13.center.y;
  return Math.atan2(s14, n23);
}
var p12;
!function(t13) {
  t13[t13.Left = 0] = "Left", t13[t13.Middle = 1] = "Middle", t13[t13.Right = 2] = "Right", t13[t13.Back = 3] = "Back", t13[t13.Forward = 4] = "Forward", t13[t13.Undefined = -1] = "Undefined";
}(p12 || (p12 = {}));

// node_modules/@arcgis/core/views/input/recognizers/ImmediateDoubleClick.js
var m9 = class extends i7 {
  constructor(e13 = t9.maximumDoubleClickDelay, o18 = t9.maximumDoubleClickDistance, a12 = t9.maximumDoubleTouchDelay, m10 = t9.maximumDoubleTouchDistance, n23 = o3) {
    super(false), this._maximumDoubleClickDelay = e13, this._maximumDoubleClickDistance = o18, this._maximumDoubleTouchDelay = a12, this._maximumDoubleTouchDistance = m10, this._clock = n23, this._pointerState = /* @__PURE__ */ new Map(), this._immediateDoubleClick = this.registerOutgoing("immediate-double-click"), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this)), this.registerIncoming("pointer-up", this._handlePointerUp.bind(this));
  }
  onUninstall() {
    this._pointerState.forEach((t13) => {
      t13.immediateDoubleClick && t13.immediateDoubleClick.timeoutHandle.remove();
    }), super.onUninstall();
  }
  _handlePointerDown(t13) {
    const e13 = t13.data, i17 = u9(e13);
    if (!this._pointerState.has(i17)) {
      const t14 = { downButton: e13.native.button, x: e13.x, y: e13.y, immediateDoubleClick: null };
      this._pointerState.set(i17, t14), this.startCapturingPointer(e13.native);
    }
  }
  _handlePointerUp(t13) {
    const e13 = t13.data, i17 = u9(e13), m10 = this._pointerState.get(i17);
    if (m10 && m10.downButton === e13.native.button) {
      const i18 = m10.immediateDoubleClick, o18 = "touch" === t13.data.native.pointerType ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
      i18 ? (i18.timeoutHandle.remove(), n20(i18, t13.data) > o18 ? this._startImmediateDoubleClick(t13, m10) : (this._immediateDoubleClick.emit(t13.data, void 0, i18.modifiers), this._removeState(e13))) : n20(m10, t13.data) > o18 ? this._removeState(e13) : this._startImmediateDoubleClick(t13, m10);
    }
  }
  _startImmediateDoubleClick(t13, e13) {
    const i17 = "touch" === t13.data.native.pointerType ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay;
    e13.immediateDoubleClick = { x: t13.data.x, y: t13.data.y, modifiers: t13.modifiers, timeoutHandle: this._clock.setTimeout(() => this._removeState(t13.data), i17) };
  }
  _removeState(t13) {
    const e13 = u9(t13);
    this._pointerState.delete(e13), this.stopCapturingPointer(t13.native), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/PointerClickHoldAndDrag.js
var r10 = class extends i7 {
  constructor(e13 = t9.maximumClickDelay, i17 = t9.movementUntilMouseDrag, o18 = t9.movementUntilPenDrag, r14 = t9.movementUntilTouchDrag, s14 = t9.holdDelay, a12 = o3) {
    super(false), this._maximumClickDelay = e13, this._movementUntilMouseDrag = i17, this._movementUntilPenDrag = o18, this._movementUntilTouchDrag = r14, this._holdDelay = s14, this._clock = a12, this._pointerState = /* @__PURE__ */ new Map(), this._pointerDrag = this.registerOutgoing("pointer-drag"), this._immediateClick = this.registerOutgoing("immediate-click"), this._pointerHold = this.registerOutgoing("hold"), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this)), this.registerIncoming("pointer-up", (t13) => {
      this._handlePointerLoss(t13, "pointer-up");
    }), this.registerIncoming("pointer-capture-lost", (t13) => {
      this._handlePointerLoss(t13, "pointer-capture-lost");
    }), this.registerIncoming("pointer-cancel", (t13) => {
      this._handlePointerLoss(t13, "pointer-cancel");
    }), this._moveHandle = this.registerIncoming("pointer-move", this._handlePointerMove.bind(this)), this._moveHandle.pause();
  }
  onUninstall() {
    this._pointerState.forEach((t13) => {
      t13.holdTimeout = l(t13.holdTimeout);
    }), super.onUninstall();
  }
  _handlePointerDown(t13) {
    const e13 = t13.data, i17 = e13.native.pointerId;
    let n23 = null;
    0 === this._pointerState.size && (n23 = this._clock.setTimeout(() => {
      const e14 = this._pointerState.get(i17);
      if (e14) {
        if (!e14.isDragging) {
          const i18 = e14.previousEvent;
          this._pointerHold.emit(i18, void 0, t13.modifiers), e14.holdEmitted = true;
        }
        e14.holdTimeout = null;
      }
    }, this._holdDelay));
    const o18 = { startEvent: e13, previousEvent: e13, startTimestamp: t13.timestamp, isDragging: false, downButton: e13.native.button, holdTimeout: n23, modifiers: /* @__PURE__ */ new Set() };
    this._pointerState.set(i17, o18), this.startCapturingPointer(e13.native), this._moveHandle.resume(), this._pointerState.size > 1 && this._startDragging(t13);
  }
  _handlePointerMove(t13) {
    const e13 = t13.data, i17 = e13.native.pointerId, n23 = this._pointerState.get(i17);
    if (n23) {
      if (n23.isDragging)
        this._pointerDrag.emit(s12("update", n23, e13), void 0, n23.modifiers);
      else {
        r8(e13, n23.startEvent) > this._getDragThreshold(e13.native.pointerType) && this._startDragging(t13);
      }
      n23.previousEvent = e13;
    }
  }
  _getDragThreshold(t13) {
    switch (t13) {
      case "touch":
        return this._movementUntilTouchDrag;
      case "pen":
        return this._movementUntilPenDrag;
      default:
        return this._movementUntilMouseDrag;
    }
  }
  _startDragging(t13) {
    const e13 = t13.data, i17 = e13.native.pointerId;
    this._pointerState.forEach((n23) => {
      null != n23.holdTimeout && (n23.holdTimeout.remove(), n23.holdTimeout = null), n23.isDragging || (n23.modifiers = t13.modifiers, n23.isDragging = true, i17 === n23.startEvent.native.pointerId ? this._pointerDrag.emit(s12("start", n23, e13)) : this._pointerDrag.emit(s12("start", n23, n23.previousEvent), t13.timestamp));
    });
  }
  _handlePointerLoss(t13, e13) {
    const i17 = t13.data, n23 = i17.native.pointerId, o18 = this._pointerState.get(n23);
    if (o18) {
      if (null != o18.holdTimeout && (o18.holdTimeout.remove(), o18.holdTimeout = null), o18.isDragging)
        this._pointerDrag.emit(s12("end", o18, "pointer-up" === e13 ? i17 : o18.previousEvent), void 0, o18.modifiers);
      else if ("pointer-up" === e13 && o18.downButton === i17.native.button) {
        t13.timestamp - o18.startTimestamp <= this._maximumClickDelay && !o18.holdEmitted && this._immediateClick.emit(i17);
      }
      this._pointerState.delete(n23), this.stopCapturingPointer(i17.native), 0 === this._pointerState.size && this._moveHandle.pause();
    }
  }
};
function s12(t13, e13, i17) {
  return { action: t13, startEvent: e13.startEvent, previousEvent: e13.previousEvent, currentEvent: i17 };
}

// node_modules/@arcgis/core/views/input/recognizers/SingleAndDoubleClick.js
var r11 = class extends i7 {
  constructor(t13 = t9.maximumDoubleClickDelay, i17 = t9.maximumDoubleClickDistance, o18 = t9.maximumDoubleTouchDelay, s14 = t9.maximumDoubleTouchDistance, l13 = o3) {
    super(false), this._maximumDoubleClickDelay = t13, this._maximumDoubleClickDistance = i17, this._maximumDoubleTouchDelay = o18, this._maximumDoubleTouchDistance = s14, this._clock = l13, this._pointerState = /* @__PURE__ */ new Map(), this._click = this.registerOutgoing("click"), this._doubleClick = this.registerOutgoing("double-click"), this.registerIncoming("immediate-click", this._handleImmediateClick.bind(this)), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this));
  }
  onUninstall() {
    this._pointerState.forEach((e13) => e13.doubleClickTimer = l(e13.doubleClickTimer));
  }
  get hasPendingInputs() {
    return n3(this._pointerState, (e13) => null != e13.doubleClickTimer);
  }
  _clearDoubleClickTimer(e13, t13) {
    const o18 = this._pointerState.get(e13);
    o18 && (o18.doubleClickTimer = l(o18.doubleClickTimer), t13 && this._click.emit(o18.event.data, void 0, o18.event.modifiers), this._pointerState.delete(e13), this.refreshHasPendingInputs());
  }
  _doubleClickTimeoutExceeded(e13) {
    const t13 = this._pointerState.get(e13);
    1 === t13.pointerDownCount && this._click.emit(t13.event.data, void 0, t13.event.modifiers), t13.doubleClickTimer = null, this._pointerState.delete(e13), this.refreshHasPendingInputs();
  }
  _handleImmediateClick(e13) {
    const t13 = e13.data, { pointerType: i17 } = t13.native, o18 = c14(t13);
    if (!this._pointerState.has(o18))
      return void this._startClick(e13);
    const n23 = this._pointerState.get(o18), { data: l13, modifiers: r14 } = n23.event, a12 = "touch" === i17 ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
    n20(l13, t13) > a12 ? (this._clearDoubleClickTimer(o18, true), this._startClick(e13)) : (this._clearDoubleClickTimer(o18, false), 2 === n23.pointerDownCount && this._doubleClick.emit(l13, void 0, r14));
  }
  _handlePointerDown(e13) {
    const t13 = u9(e13.data), i17 = this._pointerState.get(t13);
    i17 && (i17.pointerDownCount += 1);
  }
  _startClick(e13) {
    const { data: t13 } = e13, { native: { pointerType: i17 } } = t13, o18 = u9(t13), n23 = "touch" === i17 ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay, s14 = this._clock.setTimeout(() => this._doubleClickTimeoutExceeded(o18), n23), r14 = 1;
    this._pointerState.set(o18, { event: e13, doubleClickTimer: s14, pointerDownCount: r14 }), this.refreshHasPendingInputs();
  }
};
function c14(e13) {
  const { pointerId: t13, pointerType: i17, button: o18 } = e13.native;
  return "mouse" === i17 ? `${t13}:${o18}` : `${i17}`;
}

// node_modules/@arcgis/core/core/libs/gl-matrix-2/types/vec2.js
function n21(n23) {
  return n23 instanceof Float32Array && n23.length >= 2;
}
function r12(n23) {
  return Array.isArray(n23) && n23.length >= 2;
}
function t10(t13) {
  return n21(t13) || r12(t13);
}

// node_modules/@arcgis/core/views/2d/ViewState.js
var C4;
var L5 = [0, 0];
var O2 = C4 = class extends f {
  constructor(t13) {
    super(t13), this._viewpoint2D = { center: n9(), rotation: 0, scale: 0, spatialReference: void 0 }, this.center = [0, 0], this.extent = new w2(), this.id = 0, this.inverseTransform = e8(), this.resolution = 0, this.rotation = 0, this.scale = 0, this.transform = e8(), this.transformNoRotation = e8(), this.displayMat3 = e9(), this.displayViewMat3 = e9(), this.viewMat3 = e9(), this.viewMat2d = n10(), this.worldScreenWidth = 0, this.size = [0, 0];
  }
  set pixelRatio(t13) {
    this._set("pixelRatio", t13), this._update();
  }
  set size(t13) {
    this._set("size", t13), this._update();
  }
  set viewpoint(t13) {
    if (t13) {
      const e13 = this._viewpoint2D, i17 = t13.targetGeometry;
      e13.center[0] = i17.x, e13.center[1] = i17.y, e13.rotation = t13.rotation, e13.scale = t13.scale, e13.spatialReference = i17.spatialReference;
    }
    this._update();
  }
  copy(t13) {
    const e13 = this.size, i17 = this.viewpoint;
    return i17 && e13 ? (this.viewpoint = Z(i17, t13.viewpoint), this._set("size", r6(e13, t13.size))) : (this.viewpoint = t13.viewpoint.clone(), this._set("size", [t13.size[0], t13.size[1]])), this._set("pixelRatio", t13.pixelRatio), this;
  }
  clone() {
    return new C4({ size: this.size, viewpoint: this.viewpoint.clone(), pixelRatio: this.pixelRatio });
  }
  toMap(t13, e13, i17) {
    return t10(e13) ? S3(t13, e13, this.inverseTransform) : (L5[0] = e13, L5[1] = i17, S3(t13, L5, this.inverseTransform));
  }
  toScreen(t13, e13, i17) {
    return t10(e13) ? S3(t13, e13, this.transform) : (L5[0] = e13, L5[1] = i17, S3(t13, L5, this.transform));
  }
  toScreenNoRotation(t13, e13, i17) {
    return t10(e13) ? S3(t13, e13, this.transformNoRotation) : (L5[0] = e13, L5[1] = i17, S3(t13, L5, this.transformNoRotation));
  }
  toScreenClosest(t13, e13, i17) {
    t10(e13) ? (L5[0] = e13[0], L5[1] = e13[1]) : (L5[0] = e13, L5[1] = i17);
    const [s14] = L5, { center: o18, extent: r14, spatialReference: a12, transform: n23 } = this;
    return (s14 < r14.xmin || s14 > r14.xmax) && (L5[0] = P2(s14, o18[0], a12)), S3(t13, L5, n23);
  }
  getScreenTransform(t13, e13) {
    const { center: i17 } = this._viewpoint2D, s14 = this._get("pixelRatio") || 1, o18 = this._get("size");
    return ut(t13, i17, o18, e13, 0, s14), t13;
  }
  _update() {
    const { center: t13, spatialReference: i17, scale: s14, rotation: o18 } = this._viewpoint2D, c15 = this._get("pixelRatio") || 1, h9 = this._get("size"), u10 = new l6({ targetGeometry: new x(t13[0], t13[1], i17), scale: s14, rotation: o18 });
    if (this._set("viewpoint", u10), !h9 || !i17 || !s14)
      return;
    this.resolution = ot(u10), this.rotation = o18, this.scale = s14, this.spatialReference = i17, r6(this.center, t13);
    const j2 = 0 !== h9[0] ? 2 / h9[0] : 0, y7 = 0 !== h9[1] ? -2 / h9[1] : 0;
    r5(this.displayMat3, j2, 0, 0, 0, y7, 0, -1, 1, 1);
    const R = o8(this.viewMat3), _9 = t3(h9[0] / 2, h9[1] / 2), z = t3(-h9[0] / 2, -h9[1] / 2), b7 = u3(o18);
    M(R, R, _9), h2(R, R, b7), M(R, R, z), i5(this.displayViewMat3, this.displayMat3, R);
    const V3 = f4(this.viewMat2d, _9);
    return s5(V3, V3, b7), i6(V3, V3, z), _3(this.extent, u10, h9), lt(this.transform, u10, h9, c15), u5(this.inverseTransform, this.transform), ft(this.transformNoRotation, u10, h9, c15), this.worldScreenWidth = yt(this.spatialReference, this.resolution), this._set("id", this.id + 1), this;
  }
};
e([y({ readOnly: true })], O2.prototype, "id", void 0), e([y({ value: 1, json: { write: true } })], O2.prototype, "pixelRatio", null), e([y({ json: { write: true } })], O2.prototype, "size", null), e([y()], O2.prototype, "spatialReference", void 0), e([y({ type: l6, json: { write: true } })], O2.prototype, "viewpoint", null), O2 = C4 = e([a("esri.views.2d.ViewState")], O2);
var U = O2;

// node_modules/@arcgis/core/views/input/handlers/support.js
function t11(t13, r14) {
  switch (r14) {
    case "primary":
      return "touch" === t13.pointerType || 0 === t13.button;
    case "secondary":
      return "touch" !== t13.pointerType && 2 === t13.button;
    case "tertiary":
      return "touch" !== t13.pointerType && 1 === t13.button;
  }
}
function r13(t13, r14) {
  if ("touch" === t13.pointerType)
    return false;
  switch (r14) {
    case "primary":
      return 0 === t13.button;
    case "secondary":
      return 2 === t13.button;
    case "tertiary":
      return 1 === t13.button;
  }
}

// node_modules/@arcgis/core/views/input/DragEventSeparator.js
var t12 = class {
  constructor(t13) {
    this._callbacks = t13, this._currentCount = 0, this._callbacks.condition || (this._callbacks.condition = () => true);
  }
  handle(t13) {
    const s14 = t13.data, i17 = s14.pointers.size;
    switch (s14.action) {
      case "start":
        this._currentCount = i17, this._emitStart(t13);
        break;
      case "added":
        this._emitEnd(this._previousEvent), this._currentCount = i17, this._emitStart(t13);
        break;
      case "update":
        this._emitUpdate(t13);
        break;
      case "removed":
        this._startEvent && this._emitEnd(this._previousEvent), this._currentCount = i17, this._emitStart(t13);
        break;
      case "end":
        this._emitEnd(t13), this._currentCount = 0;
    }
    this._previousEvent = t13;
  }
  _emitStart(t13) {
    var _a, _b;
    this._startEvent = t13, ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t13)) && this._callbacks.start(this._currentCount, t13, this._startEvent);
  }
  _emitUpdate(t13) {
    var _a, _b;
    ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t13)) && this._callbacks.update(this._currentCount, t13, this._startEvent);
  }
  _emitEnd(t13) {
    var _a, _b;
    ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t13)) && this._callbacks.end(this._currentCount, t13, this._startEvent), this._startEvent = null;
  }
};

// node_modules/@arcgis/core/views/navigation/gamepadAndKeyboardUtils.js
function n22(t13) {
  let n23 = t13 * t13;
  return t13 < 0 && (n23 *= -1), n23;
}
function a11(t13) {
  return t13.translation[0] = 0, t13.translation[1] = 0, t13.translation[2] = 0, t13.heading = 0, t13.tilt = 0, t13;
}
function i16(a12, i17, o18) {
  const s14 = o18, e13 = a12.state, r14 = a12.device, l13 = "forward-down" === i17.tiltDirection ? 1 : -1, c15 = 1;
  return "standard" === r14.deviceType ? (s14.translation[0] = n22(e13.axes[0]), s14.translation[1] = n22(e13.axes[1]), s14.translation[2] = n22(e13.buttons[7]) - n22(e13.buttons[6]), s14.heading = n22(e13.axes[2]), s14.tilt = n22(e13.axes[3])) : "spacemouse" === r14.deviceType && (s14.translation[0] = 1.2 * n22(e13.axes[0]), s14.translation[1] = 1.2 * n22(e13.axes[1]), s14.translation[2] = 2 * -n22(e13.axes[2]), s14.heading = 1.2 * n22(e13.axes[5]), s14.tilt = 1.2 * n22(e13.axes[3])), s14.tilt *= l13, g4(s14.translation, s14.translation, c15), s14;
}
function o17(t13, n23) {
  const a12 = n23;
  return a12.translation[0] = t13[1] - t13[0], a12.translation[1] = t13[3] - t13[2], a12.translation[2] = t13[4] - t13[5], a12.heading = t13[7] - t13[6], a12.tilt = t13[8] - t13[9], a12.zoom = t13[10] - t13[11], a12;
}
function s13(t13) {
  return 0 === t13.translation[0] && 0 === t13.translation[1] && 0 === t13.translation[2] && 0 === t13.heading && 0 === t13.tilt && 0 === t13.zoom;
}

// node_modules/@arcgis/core/views/input/VisibilityChange.js
function e12(e13) {
  const i17 = () => e13("visible" === document.visibilityState);
  return document.addEventListener("visibilitychange", i17), { remove: () => document.addEventListener("visibilitychange", i17) };
}

export {
  o10 as o,
  b4 as b,
  y3 as y,
  t6 as t,
  N,
  a6 as a,
  U,
  t11 as t2,
  r13 as r,
  t12 as t3,
  a11 as a2,
  i16 as i,
  o17 as o2,
  s13 as s,
  e12 as e,
  l12 as l,
  e11 as e2,
  t9 as t4,
  n20 as n,
  u9 as u,
  s11 as s2,
  m9 as m,
  r10 as r2,
  r11 as r3,
  t7 as t5,
  u8 as u2
};
//# sourceMappingURL=chunk-PZYSOG4K.js.map
