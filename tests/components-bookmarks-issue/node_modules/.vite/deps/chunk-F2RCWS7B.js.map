{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/Fog.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{invertOrIdentity as e}from\"../core/libs/gl-matrix-2/math/mat4.js\";import{create as r}from\"../core/libs/gl-matrix-2/factories/mat4f64.js\";import{create as a}from\"../core/libs/gl-matrix-2/factories/vec3f64.js\";import{TextureCoordinateAttribute as o,TextureCoordinateAttributeType as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{ReadLinearDepth as i}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadDepth.glsl.js\";import{Gamma as s}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Gamma.glsl.js\";import{Float2PassUniform as n}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float3PassUniform as d}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{FloatPassUniform as m}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{NoParameters as c,glsl as l}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as f}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as g}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as p}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{VertexAttribute as v}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";class u extends c{constructor(){super(...arguments),this.fogColor=a(),this.fogStrength=4e-6,this.atmosphereC=1,this.fogAmount=0}}function h(){const r=new g;r.attributes.add(v.POSITION,\"vec2\"),r.include(o,{textureCoordinateType:t.Default}),r.varyings.add(\"worldRay\",\"vec3\"),r.varyings.add(\"eyeDir\",\"vec3\");const{vertex:a,fragment:c}=r;return a.uniforms.add(new f(\"inverseProjectionMatrix\",((e,r)=>r.camera.inverseProjectionMatrix)),new f(\"inverseViewMatrix\",((r,a)=>e(w,a.camera.viewMatrix)))),a.code.add(l`void main(void) {\nvec3 posViewNear = (inverseProjectionMatrix * vec4(position, -1, 1)).xyz;\neyeDir = posViewNear;\nworldRay = (inverseViewMatrix * vec4(posViewNear, 0)).xyz;\nforwardTextureCoordinates();\ngl_Position = vec4(position, 1, 1);\n}`),c.uniforms.add(new m(\"atmosphereC\",(e=>e.atmosphereC)),new d(\"cameraPosition\",((e,r)=>r.camera.eye)),new n(\"nearFar\",((e,r)=>r.camera.nearFar)),new p(\"depthTexture\",(e=>e.depthTexture)),new m(\"fogStrength\",(e=>e.fogStrength)),new m(\"fogAmount\",(e=>e.fogAmount)),new d(\"fogColor\",(e=>e.fogColor))),r.include(s),c.include(i),c.code.add(l`vec2 sphereIntersect(vec3 start, vec3 dir) {\nfloat a = dot(dir, dir);\nfloat b = 2.0 * dot(dir, start);\nfloat d = (b * b) - 4.0 * a * atmosphereC;\nif (d < 0.0) {\nreturn vec2(1e5, -1e5);\n}\nreturn vec2((-b - sqrt(d)) / (2.0 * a), (-b + sqrt(d)) / (2.0 * a));\n}`),c.code.add(l`vec4 applyFog(float dist, vec3 rayDir){\nif(dist == -1.0){\nvec2 rayAtmosphereIntersect = sphereIntersect(cameraPosition, rayDir);\ndist = 0.055 * rayAtmosphereIntersect.y;\n}\nfloat fogAmount = fogAmount * (1.0 - exp(-dist * fogStrength));\nreturn vec4(fogAmount * fogColor, fogAmount);\n}`),c.code.add(l`vec3 tonemapACES(vec3 x) {\nreturn clamp((x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14), 0.0, 1.0);\n}\nvoid main() {\nvec3 rayDir = normalize(worldRay);\nfloat terrainDepth = -1.0;\nfloat depthSample = texture(depthTexture, vuv0).r;\nfloat zNorm = 2.0 * depthSample - 1.0;\nfloat linDepth = 2.0 * nearFar[0] * nearFar[1] / (nearFar[1] + nearFar[0] - zNorm * (nearFar[1] - nearFar[0]));\nif(depthSample < 1.0 && depthSample > 0.0){\nvec3 cameraSpaceRay = normalize(eyeDir);\ncameraSpaceRay /= cameraSpaceRay.z;\ncameraSpaceRay *= linDepth;\nterrainDepth = max(0.0, length(cameraSpaceRay));\n}\nvec4 fog = applyFog(terrainDepth, rayDir);\nfragColor = delinearizeGamma(vec4(tonemapACES(fog.rgb), fog.a));\n}`),r}const w=r(),b=Object.freeze(Object.defineProperty({__proto__:null,FogPassParameters:u,build:h},Symbol.toStringTag,{value:\"Module\"}));export{u as F,b as a,h as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIo1C,IAAM,IAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS,EAAE,GAAE,KAAK,cAAY,MAAK,KAAK,cAAY,GAAE,KAAK,YAAU;AAAA,EAAC;AAAC;AAAC,SAAS,IAAG;AAAC,QAAM,IAAE,IAAIC;AAAE,IAAE,WAAW,IAAIC,GAAE,UAAS,MAAM,GAAE,EAAE,QAAQD,IAAE,EAAC,uBAAsB,EAAE,QAAO,CAAC,GAAE,EAAE,SAAS,IAAI,YAAW,MAAM,GAAE,EAAE,SAAS,IAAI,UAAS,MAAM;AAAE,QAAK,EAAC,QAAO,GAAE,UAAS,EAAC,IAAE;AAAE,SAAO,EAAE,SAAS,IAAI,IAAIC,GAAE,2BAA2B,CAACA,IAAEC,OAAIA,GAAE,OAAO,uBAAwB,GAAE,IAAID,GAAE,qBAAqB,CAACC,IAAEC,OAAI,EAAE,GAAEA,GAAE,OAAO,UAAU,CAAE,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM10D,GAAE,EAAE,SAAS,IAAI,IAAIH,GAAE,eAAe,CAAAC,OAAGA,GAAE,WAAY,GAAE,IAAIA,GAAE,kBAAkB,CAACA,IAAEC,OAAIA,GAAE,OAAO,GAAI,GAAE,IAAID,GAAE,WAAW,CAACA,IAAEC,OAAIA,GAAE,OAAO,OAAQ,GAAE,IAAI,EAAE,gBAAgB,CAAAD,OAAGA,GAAE,YAAa,GAAE,IAAID,GAAE,eAAe,CAAAC,OAAGA,GAAE,WAAY,GAAE,IAAID,GAAE,aAAa,CAAAC,OAAGA,GAAE,SAAU,GAAE,IAAIA,GAAE,YAAY,CAAAA,OAAGA,GAAE,QAAS,CAAC,GAAE,EAAE,QAAQA,EAAC,GAAE,EAAE,QAAQ,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQhV,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOb,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBb,GAAE;AAAC;AAAC,IAAM,IAAEA,GAAE;AAAV,IAAY,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,mBAAkB,GAAE,OAAM,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["n", "o", "e", "r", "a"]
}
