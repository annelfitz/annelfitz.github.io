{
  "version": 3,
  "sources": ["../../@arcgis/map-components/dist/esm/arcgis-attachments.entry.js"],
  "sourcesContent": ["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.0-next.13\n */\nimport { r as registerInstance, c as createEvent, h, g as getElement } from './index-2198b48c.js';\nimport { e as newWidgetsAttachments, i as importCoreReactiveUtils } from './index-08887307.js';\nimport { d as checkForExpand, a as addHandles } from './component-utils-97b1c3e3.js';\nimport { o as onDisconnectedHelper } from './disconnected-45c113cb.js';\n\nconst attachmentsCss = \"\";\n\nconst ArcgisAttachments = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.widgetReady = createEvent(this, \"widgetReady\", 7);\n        this._watchHandles = [];\n        this.referenceElement = undefined;\n        this.position = \"bottom-left\";\n        this.expandable = false;\n        this.capabilities = undefined;\n        this.displayType = undefined;\n        this.graphic = undefined;\n        this.submitting = undefined;\n        this.visibleElements = undefined;\n        this.widget = undefined;\n    }\n    capabilitiesWatcher(newValue) {\n        if (this.widget) {\n            this.widget.capabilities = newValue;\n        }\n    }\n    displayTypeWatcher(newValue) {\n        if (this.widget) {\n            this.widget.displayType = newValue;\n        }\n    }\n    graphicWatcher(newValue) {\n        if (this.widget) {\n            this.widget.graphic = newValue;\n        }\n    }\n    visibleElementsWatcher(newValue) {\n        if (this.widget) {\n            this.widget.visibleElements = newValue;\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    async componentDidLoad() {\n        const params = this._createParams();\n        const widget = await newWidgetsAttachments(params);\n        this.widget = widget;\n        await this._addWatchers();\n        this.widgetReady.emit({ widget: this.widget });\n        checkForExpand(this);\n    }\n    disconnectedCallback() {\n        onDisconnectedHelper(this);\n    }\n    render() {\n        if (this.expandable) {\n            return (h(\"arcgis-expand\", { position: this.position, ref: (el) => (this.expandElem = el) }, h(\"div\", { ref: (el) => (this.childElem = el) })));\n        }\n        return h(\"div\", { ref: (el) => (this.childElem = el) });\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    async _addWatchers() {\n        const { watch } = await importCoreReactiveUtils();\n        addHandles(this, watch(() => this.widget.submitting, (value) => (this.submitting = value), {\n            initial: true\n        }));\n    }\n    _createParams() {\n        const params = {\n            container: this.childElem\n        };\n        if (this.displayType) {\n            params.displayType = this.displayType;\n        }\n        if (this.graphic) {\n            params.graphic = this.graphic;\n        }\n        if (this.visibleElements) {\n            params.visibleElements = this.visibleElements;\n        }\n        return params;\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"capabilities\": [\"capabilitiesWatcher\"],\n        \"displayType\": [\"displayTypeWatcher\"],\n        \"graphic\": [\"graphicWatcher\"],\n        \"visibleElements\": [\"visibleElementsWatcher\"]\n    }; }\n};\nArcgisAttachments.style = attachmentsCss;\n\nexport { ArcgisAttachments as arcgis_attachments };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAUA,IAAM,iBAAiB;AAEvB,IAAM,oBAAoB,MAAM;AAAA,EAC5B,YAAY,SAAS;AACjB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,cAAc,YAAY,MAAM,eAAe,CAAC;AACrD,SAAK,gBAAgB,CAAC;AACtB,SAAK,mBAAmB;AACxB,SAAK,WAAW;AAChB,SAAK,aAAa;AAClB,SAAK,eAAe;AACpB,SAAK,cAAc;AACnB,SAAK,UAAU;AACf,SAAK,aAAa;AAClB,SAAK,kBAAkB;AACvB,SAAK,SAAS;AAAA,EAClB;AAAA,EACA,oBAAoB,UAAU;AAC1B,QAAI,KAAK,QAAQ;AACb,WAAK,OAAO,eAAe;AAAA,IAC/B;AAAA,EACJ;AAAA,EACA,mBAAmB,UAAU;AACzB,QAAI,KAAK,QAAQ;AACb,WAAK,OAAO,cAAc;AAAA,IAC9B;AAAA,EACJ;AAAA,EACA,eAAe,UAAU;AACrB,QAAI,KAAK,QAAQ;AACb,WAAK,OAAO,UAAU;AAAA,IAC1B;AAAA,EACJ;AAAA,EACA,uBAAuB,UAAU;AAC7B,QAAI,KAAK,QAAQ;AACb,WAAK,OAAO,kBAAkB;AAAA,IAClC;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,mBAAmB;AACrB,UAAM,SAAS,KAAK,cAAc;AAClC,UAAM,SAAS,MAAM,sBAAsB,MAAM;AACjD,SAAK,SAAS;AACd,UAAM,KAAK,aAAa;AACxB,SAAK,YAAY,KAAK,EAAE,QAAQ,KAAK,OAAO,CAAC;AAC7C,mBAAe,IAAI;AAAA,EACvB;AAAA,EACA,uBAAuB;AACnB,yBAAqB,IAAI;AAAA,EAC7B;AAAA,EACA,SAAS;AACL,QAAI,KAAK,YAAY;AACjB,aAAQ,EAAE,iBAAiB,EAAE,UAAU,KAAK,UAAU,KAAK,CAAC,OAAQ,KAAK,aAAa,GAAI,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,OAAQ,KAAK,YAAY,GAAI,CAAC,CAAC;AAAA,IACjJ;AACA,WAAO,EAAE,OAAO,EAAE,KAAK,CAAC,OAAQ,KAAK,YAAY,GAAI,CAAC;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,eAAe;AACjB,UAAM,EAAE,MAAM,IAAI,MAAM,wBAAwB;AAChD,eAAW,MAAM,MAAM,MAAM,KAAK,OAAO,YAAY,CAAC,UAAW,KAAK,aAAa,OAAQ;AAAA,MACvF,SAAS;AAAA,IACb,CAAC,CAAC;AAAA,EACN;AAAA,EACA,gBAAgB;AACZ,UAAM,SAAS;AAAA,MACX,WAAW,KAAK;AAAA,IACpB;AACA,QAAI,KAAK,aAAa;AAClB,aAAO,cAAc,KAAK;AAAA,IAC9B;AACA,QAAI,KAAK,SAAS;AACd,aAAO,UAAU,KAAK;AAAA,IAC1B;AACA,QAAI,KAAK,iBAAiB;AACtB,aAAO,kBAAkB,KAAK;AAAA,IAClC;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,KAAK;AAAE,WAAO,WAAW,IAAI;AAAA,EAAG;AAAA,EACpC,WAAW,WAAW;AAAE,WAAO;AAAA,MAC3B,gBAAgB,CAAC,qBAAqB;AAAA,MACtC,eAAe,CAAC,oBAAoB;AAAA,MACpC,WAAW,CAAC,gBAAgB;AAAA,MAC5B,mBAAmB,CAAC,wBAAwB;AAAA,IAChD;AAAA,EAAG;AACP;AACA,kBAAkB,QAAQ;",
  "names": []
}
