import {
  l,
  q,
  r as r4
} from "./chunk-3JWLLOPA.js";
import {
  i as i3
} from "./chunk-EL74TSJT.js";
import {
  A,
  C as C2
} from "./chunk-ZGQG4C5J.js";
import {
  F as F2
} from "./chunk-UVHAFHZU.js";
import {
  A as A2,
  L as L2,
  M,
  O as O2,
  S as S2,
  T as T2,
  U as U2,
  _,
  b as b3,
  c,
  d as d2,
  f as f2,
  j,
  k as k3,
  v as v2,
  x,
  y as y3
} from "./chunk-TCQ65UXM.js";
import {
  e as e5
} from "./chunk-D5LHX57G.js";
import {
  e as e4,
  n as n5
} from "./chunk-HLKM6YBE.js";
import {
  J
} from "./chunk-KDAM4HTO.js";
import {
  e as e3
} from "./chunk-EAAEPSBY.js";
import {
  h
} from "./chunk-I4SHZ6P5.js";
import {
  y as y2
} from "./chunk-4UEJR4VO.js";
import {
  n as n4
} from "./chunk-DIT542IP.js";
import {
  f
} from "./chunk-QYC3GV65.js";
import {
  C,
  F,
  I,
  I2,
  T,
  V,
  b as b2,
  ge,
  me,
  t,
  w as w2,
  ye,
  z
} from "./chunk-X7VSXJWW.js";
import {
  p
} from "./chunk-VTH4DAHQ.js";
import {
  O
} from "./chunk-HLDUDRTD.js";
import {
  m
} from "./chunk-ONK5AE7R.js";
import {
  D,
  e2,
  r as r3
} from "./chunk-RGCWZ2KZ.js";
import {
  n as n3
} from "./chunk-5VMSFOCB.js";
import {
  s
} from "./chunk-C62RZQQX.js";
import {
  i as i2,
  o as o3,
  r as r2
} from "./chunk-QLL2YG25.js";
import {
  n as n2
} from "./chunk-Z2PDA67N.js";
import {
  U
} from "./chunk-SAYWXQVM.js";
import {
  u2
} from "./chunk-SBL4URUW.js";
import {
  P,
  d,
  v,
  w
} from "./chunk-Z4Y53NDM.js";
import {
  o as o2
} from "./chunk-TXBMNSNF.js";
import {
  S,
  o,
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a,
  r2 as r
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  L,
  b,
  k as k2
} from "./chunk-JGDJR5EV.js";
import {
  u
} from "./chunk-QHK5ZYFW.js";
import {
  i,
  n2 as n
} from "./chunk-7RBRCL6S.js";
import {
  k
} from "./chunk-J2EGIWT6.js";

// node_modules/@arcgis/core/widgets/FeatureForm/css.js
var e6 = "esri-feature-form";
var t2 = `${e6}__group`;
var r5 = `${e6}__input`;
var i4 = `${e6}__related-records`;
var a2 = { base: e6, form: `${e6}__form`, formHeader: `${e6}__form-header`, label: `${e6}__label`, labelTextContent: `${e6}__label-text-content`, fieldInput: `${r5}`, inputRadio: `${r5}--radio`, inputRadioGroup: `${r5}--radio-group`, inputRadioLabel: `${r5}--radio-label`, inputDisabled: `${r5}--disabled`, inputSwitch: `${r5}--switch`, inputInvalid: `${r5}--invalid`, centeredButton: `${e6}__centered-button`, description: `${e6}__description-text`, listObserver: `${e6}__list-observer`, relatedRecordsHeader: `${i4}_header`, relatedRecordsLabel: `${i4}_label`, relatedRecordsList: `${i4}_list`, dateInputContainer: `${`${e6}__date`}-input-container`, group: t2, groupSequential: `${t2}--sequential`, groupActive: `${t2}--active` };

// node_modules/@arcgis/core/layers/support/ContingentValue.js
var t3 = class extends S {
  constructor(o4) {
    super(o4), this.maxValue = null, this.minValue = null, this.codedValue = null;
  }
};
e([y()], t3.prototype, "objectType", void 0), e([y()], t3.prototype, "maxValue", void 0), e([y()], t3.prototype, "minValue", void 0), e([y()], t3.prototype, "codedValue", void 0), t3 = e([a("esri.layers.support.ContingentValue")], t3);
var p2 = t3;

// node_modules/@arcgis/core/layers/support/Contingency.js
var e7 = class extends S {
  constructor(o4) {
    super(o4), this.isRetired = false;
  }
};
e([y()], e7.prototype, "id", void 0), e([y()], e7.prototype, "isRetired", void 0), e([y()], e7.prototype, "subtype", void 0), e([y()], e7.prototype, "values", void 0), e7 = e([a("esri.layers.support.Contingency")], e7);
var p3 = e7;

// node_modules/@arcgis/core/layers/support/ContingencyConstraintViolation.js
var e8 = class extends S {
  constructor(o4) {
    super(o4);
  }
};
e([y()], e8.prototype, "fieldGroup", void 0), e([y()], e8.prototype, "type", void 0), e8 = e([a("esri.layers.support.ContingencyConstraintViolation")], e8);
var p4 = e8;

// node_modules/@arcgis/core/layers/support/ContingentValuesResult.js
var t4 = class extends S {
  constructor(o4) {
    super(o4);
  }
};
e([y()], t4.prototype, "contingentValuesAllGroups", void 0), e([y()], t4.prototype, "contingentValuesByFieldGroup", void 0), t4 = e([a("esri.layers.support.ContingentValuesResult")], t4);
var p5 = t4;

// node_modules/@arcgis/core/layers/support/FieldGroup.js
var e9 = class extends S {
  constructor(o4) {
    super(o4), this.fields = null, this.isEditingRestrictive = false;
  }
};
e([y()], e9.prototype, "name", void 0), e([y()], e9.prototype, "fields", void 0), e([y()], e9.prototype, "isEditingRestrictive", void 0), e([y()], e9.prototype, "contingencies", void 0), e9 = e([a("esri.layers.support.FieldGroup")], e9);
var i5 = e9;

// node_modules/@arcgis/core/layers/support/LayerContingentValuesCache.js
var g;
var h2 = g = class extends u2(m) {
  constructor(e10) {
    super(e10), this.request = U, this.fieldGroups = null, this.fieldGroupDefinitions = null;
  }
  initialize() {
  }
  get subtypeFieldName() {
    const { layer: e10 } = this;
    return "subtype-group" === e10.type ? e10.subtypeField : e10.typeIdField;
  }
  static async createLoadedLayerContingentValuesCache(e10) {
    await e10.load();
    const t5 = e10.sourceJSON;
    if (void 0 === e10.layerId)
      return null;
    const n6 = t5.hasContingentValuesDefinition;
    if (n6)
      return new g({ layer: e10 }).load();
    if (void 0 === n6) {
      const t6 = p(e10.url);
      if (null == t6)
        return null;
      const n7 = t6.url.path;
      if ((await x2(n7)).supportsQueryDataElements) {
        const t7 = e10.layerId.toString(), i7 = await v3(n7, t7);
        if (i7) {
          const t8 = i7.map((t9) => ({ name: t9.name, isEditingRestrictive: t9.isEditingRestrictive, fields: t9.fieldNames.names.map((t10) => e10.fieldsIndex.normalizeFieldName(t10)) }));
          return new g({ layer: e10, fieldGroupDefinitions: t8 }).load();
        }
      }
    }
    return null;
  }
  async load(e10) {
    const t5 = this.layer.load(e10).then(() => this._initializeContingentValues(this.fieldGroupDefinitions, e10));
    return this.addResolvingPromise(t5), this;
  }
  validateContingencyConstraints(e10, t5) {
    const n6 = Object.keys(e10), i7 = [], s2 = [];
    for (const o4 of this.fieldGroups) {
      const r6 = o4.isEditingRestrictive ? "error" : "warning";
      if (t5 && !o4.fields.some((e11) => t5.includes(e11)))
        continue;
      if (!o4.fields.every((e11) => n6.includes(e11))) {
        s2.push(new p4({ fieldGroup: o4, type: r6 }));
        continue;
      }
      let a4 = false;
      const l4 = e10[this.subtypeFieldName], c4 = o4.contingencies.filter((e11) => !(!e11.isRetired && e11.subtype) || e11.subtype.code === l4);
      for (const t6 of c4) {
        let n7 = true;
        for (const i8 in t6.values) {
          const s3 = t6.values[i8];
          if ("any" !== s3.objectType) {
            if ("null" === s3.objectType) {
              if (null != e10[i8]) {
                n7 = false;
                break;
              }
            } else if ("code" === s3.objectType) {
              if (e10[i8] !== s3.codedValue.code) {
                n7 = false;
                break;
              }
            } else if ("range" === s3.objectType) {
              const t7 = e10[i8];
              if (t7 < s3.minValue || t7 > s3.maxValue) {
                n7 = false;
                break;
              }
            }
          }
        }
        if (n7) {
          a4 = true;
          break;
        }
      }
      a4 || i7.push(new p4({ fieldGroup: o4, type: r6 }));
    }
    return { invalid: i7, incomplete: s2 };
  }
  getContingentValues(e10, t5, n6 = false) {
    const i7 = e10[this.subtypeFieldName], s2 = null != i7, o4 = {};
    let r6 = [];
    const a4 = this.fieldGroups.filter((e11) => e11.fields.includes(t5));
    r6.push(new p2({ objectType: "any" }));
    for (const l4 of a4) {
      let a5 = [];
      const u5 = l4.contingencies.filter((e11) => !(e11.isRetired || e11.subtype && s2 && e11.subtype.code !== i7));
      let c4 = false;
      const p7 = {};
      for (const n7 of u5) {
        let i8, s3 = true;
        for (const o5 in n7.values) {
          const r7 = n7.values[o5];
          if (t5 !== o5) {
            if (void 0 !== e10[o5] && "any" !== r7.objectType) {
              if ("null" === r7.objectType)
                null !== e10[o5] && (s3 = false);
              else if ("code" === r7.objectType)
                e10[o5] !== r7.codedValue.code && (s3 = false);
              else if ("range" === r7.objectType) {
                const t6 = e10[o5];
                (t6 < r7.minValue || t6 > r7.maxValue) && (s3 = false);
              }
            }
          } else
            i8 = r7, c4 = c4 || "range" === r7.objectType;
        }
        if (i8 && s3) {
          if ("any" === i8.objectType) {
            a5.length = 0, a5.push(i8);
            break;
          }
          const e11 = V2(i8);
          p7[e11] || a5.push(i8), p7[e11] = true;
        }
      }
      c4 && (a5 = b4(a5)), o4[l4.name] = a5, r6 = n6 ? G(r6, a5) : [];
    }
    return 1 === a4.length && n6 && (r6 = []), new p5({ contingentValuesAllGroups: r6, contingentValuesByFieldGroup: o4 });
  }
  async _initializeContingentValues(e10, t5) {
    const n6 = e10 ?? await this._fetchFieldGroupDefs(t5);
    if (0 === n6.length)
      return void (this.fieldGroups = []);
    const i7 = await this._fetchContingentValues(n6, t5);
    this.fieldGroups = i7;
  }
  async _fetchFieldGroupDefs(e10) {
    if (void 0 === this.layer.layerId)
      return [];
    const t5 = this.layer.sourceJSON, n6 = this.layer.layerId.toString(), i7 = p(this.layer.url).url.path;
    if (t5.hasContingentValuesDefinition) {
      return (await w3(i7, n6, e10)).map((e11) => ({ name: e11.name, isEditingRestrictive: e11.restrictive, fields: e11.fields.map((e12) => this.layer.fieldsIndex.normalizeFieldName(e12)) }));
    }
    return void 0 !== t5.hasContingentValuesDefinition ? [] : x2(i7, e10).then(async (t6) => {
      if (t6.supportsQueryDataElements) {
        return (await v3(i7, n6, e10)).map((e11) => ({ name: e11.name, isEditingRestrictive: e11.isEditingRestrictive, fields: e11.fieldNames.names.map((e12) => this.layer.fieldsIndex.normalizeFieldName(e12)) }));
      }
      return [];
    });
  }
  async _fetchContingentValues(e10, t5) {
    if (void 0 === this.layer.layerId)
      return [];
    const n6 = this.layer.sourceJSON, i7 = this.layer.layerId.toString(), s2 = p(this.layer.url).url.path;
    if (n6.hasContingentValuesDefinition) {
      const n7 = await S3(s2, i7, t5);
      return this._constructFieldGroupsAGOL(e10, n7);
    }
    const o4 = await C3(s2, i7, t5);
    return this._constructFieldGroupsEnterprise(e10, o4);
  }
  _constructFieldGroupsAGOL(e10, t5) {
    return e10.map((e11) => {
      const n6 = t5.contingentValuesDefinition.fieldGroups.find((t6) => t6.name === e11.name);
      if (n6) {
        let i7 = [];
        return i7 = t5.contingentValuesDefinition.hasSubType ? this._parseAGOLFieldGroupSubtype(e11, t5, n6.subTypes) : this._parseAGOLFieldGroup(e11, t5, n6.contingentValues), new i5({ name: e11.name, isEditingRestrictive: e11.isEditingRestrictive, fields: e11.fields, contingencies: i7 });
      }
      return null;
    }).filter(k);
  }
  _parseAGOLFieldGroupSubtype(e10, t5, n6) {
    let i7 = [];
    return n6 == null ? void 0 : n6.forEach((n7) => {
      const s2 = this._getSubtypeAGOL(n7.name);
      i7 = i7.concat(this._parseAGOLFieldGroup(e10, t5, n7.contingentValues, s2));
    }), i7;
  }
  _parseAGOLFieldGroup(e10, t5, n6, i7 = null) {
    const s2 = [];
    for (const o4 of n6 ?? []) {
      const n7 = this._parseAGOLContingency(o4, e10, t5, i7);
      s2.push(n7);
    }
    return s2;
  }
  _parseAGOLContingency(e10, t5, n6, i7) {
    const s2 = e10.id, o4 = !!e10.retired && 1 === e10.retired, r6 = {};
    for (let a4 = 0, l4 = 0; a4 < t5.fields.length; a4++) {
      const s3 = t5.fields[a4], o5 = n6.typeCodes[e10.types[a4]];
      if ("Code" === o5) {
        let t6 = e10.values[l4];
        l4++;
        const o6 = this._getDomain(i7, s3), a5 = this.layer.getField(s3);
        if ("string" === (a5 == null ? void 0 : a5.type)) {
          const e11 = n6.stringDicts.find((e12) => e12.domain === (o6 == null ? void 0 : o6.name));
          e11 && (t6 = e11.entries[t6]);
        }
        const u5 = o6 == null ? void 0 : o6.codedValues.find((e11) => e11.code === t6), p7 = new p2({ codedValue: u5, objectType: "code" });
        r6[s3] = p7;
      } else if ("Range" === o5) {
        const t6 = e10.values[l4];
        l4++;
        const n7 = t6.range[0], i8 = t6.range[1], o6 = new p2({ minValue: n7, maxValue: i8, objectType: "range" });
        r6[s3] = o6;
      } else if ("Any" === o5) {
        const e11 = new p2({ objectType: "any" });
        r6[s3] = e11;
      } else {
        const e11 = new p2({ objectType: "null" });
        r6[s3] = e11;
      }
    }
    return new p3({ id: s2, isRetired: o4, subtype: i7, values: r6 });
  }
  _constructFieldGroupsEnterprise(e10, t5) {
    const i7 = t5.fieldGroups;
    return e10.map((e11) => {
      const n6 = i7.find((t6) => t6.name === e11.name);
      if (n6) {
        const i8 = n6.contingencies.map((n7) => {
          const i9 = n7.id, s2 = n7.isRetired || false, o4 = this._getSubtypeEnterprise(n7.subtypeCode), r6 = {};
          for (let a4 = 0; a4 < e11.fields.length; a4++) {
            const i10 = e11.fields[a4];
            let s3 = n7.values[a4];
            if ("number" == typeof s3 || "string" == typeof s3) {
              const e12 = this._getDomain(o4, i10), n8 = this.layer.getField(i10);
              if (ye(n8))
                s3 = t5.stringDictionary[s3];
              else if (ge(n8)) {
                const e13 = /* @__PURE__ */ new Date(`${s3}+00:00`);
                s3 = e13.getTime();
              }
              const a5 = e12 == null ? void 0 : e12.codedValues.find((e13) => e13.code === s3), l4 = new p2({ codedValue: a5, objectType: "code" });
              r6[i10] = l4;
            } else if ("object" == typeof s3) {
              const e12 = s3.minValue, t6 = s3.maxValue, n8 = new p2({ minValue: e12, maxValue: t6, objectType: "range" });
              r6[i10] = n8;
            } else if (s3) {
              const e12 = new p2({ objectType: "any" });
              r6[i10] = e12;
            } else {
              const e12 = new p2({ objectType: "null" });
              r6[i10] = e12;
            }
          }
          return new p3({ id: i9, isRetired: s2, subtype: o4, values: r6 });
        });
        return new i5({ name: e11.name, isEditingRestrictive: e11.isEditingRestrictive, fields: e11.fields, contingencies: i8 });
      }
      return null;
    }).filter(k);
  }
  _getSubtypeEnterprise(e10) {
    const t5 = this.layer.sourceJSON;
    let n6;
    if (t5.subtypes) {
      const i7 = t5.subtypes.find((t6) => t6.code === e10);
      n6 = n4.fromJSON(i7);
    }
    return n6 || null;
  }
  _getSubtypeAGOL(e10) {
    const t5 = this.layer.sourceJSON;
    let n6;
    if (t5.subtypes) {
      const i7 = t5.subtypes.find((t6) => t6.name === e10);
      n6 = n4.fromJSON(i7);
    }
    return n6 || null;
  }
  _getDomain(e10, t5) {
    const n6 = e10 ? F3(e10, t5) : this.layer.getFieldDomain(t5);
    return "inherited" === (n6 == null ? void 0 : n6.type) ? this.layer.getFieldDomain(t5) : n6;
  }
};
function V2(e10) {
  switch (e10.objectType) {
    case "any":
      return "@any@";
    case "null":
      return "@null@";
    case "code":
      return e10.codedValue.name + e10.codedValue.code.toString();
    case "range":
      return e10.minValue.toString() + "-" + e10.maxValue.toString();
  }
}
function b4(e10) {
  let t5, n6;
  e10.sort((e11, t6) => "null" === e11.objectType ? -1 : "null" === t6.objectType ? 1 : e11.minValue - t6.minValue);
  const i7 = [];
  for (const s2 of e10)
    "null" !== s2.objectType ? null != t5 && null != n6 ? n6 < s2.minValue ? (i7.push(new p2({ objectType: "range", minValue: t5, maxValue: n6 })), t5 = s2.minValue, n6 = s2.maxValue) : n6 < s2.maxValue && (n6 = s2.maxValue) : (t5 = s2.minValue, n6 = s2.maxValue) : i7.push(s2);
  return i7.push(new p2({ objectType: "range", minValue: t5, maxValue: n6 })), i7;
}
function j2(e10, t5) {
  const n6 = [];
  let i7, s2 = 0;
  for (const o4 of e10)
    for (; s2 < t5.length; s2++) {
      const e11 = t5[s2];
      if ("null" === o4.objectType && "null" === e11.objectType)
        n6.push(new p2({ objectType: "null" }));
      else {
        if ("null" === o4.objectType)
          break;
        if ("null" === e11.objectType)
          continue;
      }
      if (o4.maxValue < e11.minValue)
        break;
      if (o4.maxValue === e11.minValue) {
        n6.push(new p2({ objectType: "range", minValue: o4.maxValue, maxValue: e11.minValue }));
        break;
      }
      if (!(o4.minValue > e11.maxValue))
        if (o4.minValue !== e11.maxValue) {
          if (i7 = o4.minValue > e11.minValue ? o4.minValue : e11.minValue, o4.maxValue < e11.maxValue) {
            n6.push(new p2({ objectType: "range", minValue: i7, maxValue: o4.maxValue }));
            break;
          }
          n6.push(new p2({ objectType: "range", minValue: i7, maxValue: e11.maxValue }));
        } else
          n6.push(new p2({ objectType: "range", minValue: o4.minValue, maxValue: e11.maxValue }));
    }
  return n6;
}
function T3(e10, t5) {
  const n6 = [];
  for (const i7 of e10)
    t5.some((e11) => {
      if (i7.objectType === e11.objectType)
        switch (i7.objectType) {
          case "any":
          case "null":
            return true;
          case "code":
            return i7.codedValue.code === e11.codedValue.code && i7.codedValue.name === e11.codedValue.name;
        }
      return false;
    }) && n6.push(i7);
  return n6;
}
function G(e10, t5) {
  var _a, _b;
  if (0 === e10.length || 0 === t5.length)
    return [];
  if ("any" === e10[0].objectType)
    return t5;
  if ("any" === t5[0].objectType)
    return e10;
  const n6 = "range" === e10[0].objectType || "range" === ((_a = e10[1]) == null ? void 0 : _a.objectType), i7 = "range" === t5[0].objectType || "range" === ((_b = t5[1]) == null ? void 0 : _b.objectType);
  return n6 || i7 ? j2(e10, t5) : T3(e10, t5);
}
async function w3(e10, n6, i7) {
  return U(`${e10}/${n6}/fieldgroups`, { responseType: "json", query: { f: "json" }, ...i7 }).then((e11) => e11.data.fieldGroups ?? []);
}
async function v3(e10, n6, i7) {
  return U(`${e10}/queryDataElements`, { responseType: "json", query: { layers: JSON.stringify([n6]), f: "json" }, ...i7 }).then((e11) => {
    var _a;
    return ((_a = e11.data.layerDataElements) == null ? void 0 : _a[0].dataElement.fieldGroups) ?? [];
  });
}
async function x2(e10, n6) {
  return U(e10, { responseType: "json", query: { f: "json" }, ...n6 }).then((e11) => e11.data);
}
async function C3(e10, n6, i7) {
  return U(`${e10}/queryContingentValues`, { responseType: "json", query: { layers: JSON.stringify([n6]), f: "json" }, ...i7 }).then((e11) => {
    var _a;
    return (_a = e11.data.contingentValueSets) == null ? void 0 : _a[0];
  });
}
async function S3(e10, n6, i7) {
  return U(`${e10}/${n6}/contingentValues`, { responseType: "json", query: { f: "json" }, ...i7 }).then((e11) => e11.data);
}
function F3(e10, t5) {
  const n6 = e10.domains;
  if (n6) {
    const [e11, i7] = Object.entries(n6).find(([e12]) => e12.trim().toLowerCase() === t5.trim().toLowerCase()) || [];
    return i7 || null;
  }
  return null;
}
e([y({ constructOnly: true })], h2.prototype, "layer", void 0), e([y({ constructOnly: true })], h2.prototype, "request", void 0), e([y({ type: [i5] })], h2.prototype, "fieldGroups", void 0), e([y({ constructOnly: true })], h2.prototype, "fieldGroupDefinitions", void 0), e([y()], h2.prototype, "subtypeFieldName", null), h2 = g = e([a("esri.layers.support.LayerContingentValuesCache")], h2);
var O3 = h2;

// node_modules/@arcgis/core/widgets/FeatureForm/FormExpressionArcadeExecutor.js
var u3;
var c2 = Symbol("FormExpressionArcadeExecutor");
var p6 = class extends S {
  constructor(t5) {
    super(t5), this[u3] = true, this._lastEvaluatedValue = null, this._abortController = new AbortController(), this._stale = false, this._updatingTracking = new h(), this._executeAsyncDebounced = k2(async (t6, e10, r6) => {
      const s2 = await this.executor.executeAsync(t6, { ...e10, abortSignal: r6 });
      return r6.aborted ? this._lastEvaluatedValue : (this._lastEvaluatedValue = s2, this._stale = false, s2);
    });
  }
  get isAsync() {
    return this.executor.isAsync;
  }
  get fieldsUsed() {
    return this.executor.fieldsUsed;
  }
  get syntaxTree() {
    return this.executor.syntaxTree;
  }
  get updating() {
    return this._updatingTracking.updating;
  }
  get stale() {
    return this._stale;
  }
  get geometryUsed() {
    return this.executor.geometryUsed;
  }
  get variablesUsed() {
    return this.executor.variablesUsed;
  }
  get lastEvaluatedValue() {
    return this._lastEvaluatedValue;
  }
  abort() {
    this._abortController.abort();
  }
  execute(t5, e10) {
    this._abortController = new AbortController();
    const r6 = this.executor.execute(t5, { ...e10, abortSignal: this._abortController.signal });
    return this._lastEvaluatedValue = r6, r6;
  }
  async executeAsync(t5, e10) {
    return this._abortController = new AbortController(), this._updatingTracking.addPromise(this._executeAsyncDebounced(t5, e10 ?? {}, this._abortController.signal));
  }
  markStale() {
    this._stale = true;
  }
  reset() {
    this.abort(), this._lastEvaluatedValue = null, this._stale = false;
  }
};
u3 = c2, e([y()], p6.prototype, "_lastEvaluatedValue", void 0), e([y()], p6.prototype, "_stale", void 0), e([y()], p6.prototype, "_updatingTracking", void 0), e([y({ constructOnly: true })], p6.prototype, "executor", void 0), e([y()], p6.prototype, "isAsync", null), e([y()], p6.prototype, "fieldsUsed", null), e([y()], p6.prototype, "syntaxTree", null), e([y()], p6.prototype, "updating", null), e([y()], p6.prototype, "stale", null), e([y()], p6.prototype, "geometryUsed", null), e([y()], p6.prototype, "variablesUsed", null), e([y()], p6.prototype, "lastEvaluatedValue", null), p6 = e([a("esri.widgets.FeatureForm.FormExpressionArcadeExecutor")], p6);
var d3 = async (t5, s2) => {
  const o4 = C2("form-calculation"), a4 = await A(t5, o4, {});
  return (s2 == null ? void 0 : s2.fieldsIndex) && (a4.fieldsUsed = I2(s2.fieldsIndex, a4.fieldsUsed)), new p6({ executor: a4 });
};

// node_modules/@arcgis/core/widgets/FeatureForm/FormExpressionsManager.js
var i6 = "#JSAPI_FORM_EXPRESSIONS_MANAGER_GEOMETRY";
var l2 = class extends S {
  constructor(e10) {
    super(e10), this._fieldReferencesLookup = /* @__PURE__ */ new Map(), this._fieldsAffectedLookup = /* @__PURE__ */ new Map(), this.preserveFieldValuesWhenHidden = true, this._latestFieldValues = { ...e10.feature.attributes };
  }
  initialize() {
    this._dependencyGraph = this._buildDependencyGraph();
  }
  destroy() {
    this.resetExecutors();
  }
  get _asyncExecutors() {
    return this.executors.filter((e10) => e10.isAsync);
  }
  get _baseContext() {
    const { editType: e10, layer: t5, map: s2, originalFeature: r6, spatialReference: o4, timeZone: a4 } = this.arcadeContextInfo, n6 = "scene" === (t5 == null ? void 0 : t5.type) && null != t5.associatedLayer ? t5.associatedLayer : t5;
    return [{ $originalfeature: r6, $editcontext: { editType: e10 }, $layer: n6, $featureset: n6, $datastore: t5 == null ? void 0 : t5.url, $map: s2 }, { rawOutput: true, spatialReference: o4 ?? void 0, timeZone: a4 }];
  }
  set feature(e10) {
    this._latestFieldValues = { ...e10 == null ? void 0 : e10.attributes }, this._set("feature", e10);
  }
  evaluateAll() {
    return this._evaluate(this.executors);
  }
  evaluateAsyncExpressions() {
    return this._evaluate(this._asyncExecutors);
  }
  evaluateExpressions(e10) {
    return this._evaluate(e10);
  }
  evaluateInvalidated(e10) {
    const { _fieldReferencesLookup: t5, _latestFieldValues: s2, feature: r6 } = this, o4 = /* @__PURE__ */ new Set();
    for (const a4 of e10)
      if (s2[a4] = r6.getAttribute(a4), t5.has(a4))
        for (const e11 of t5.get(a4))
          o4.add(e11);
    return this._evaluate([...o4]);
  }
  async evaluateInvalidatedByGeometry() {
    if (this._fieldReferencesLookup.has(i6))
      return this._evaluate([...this._fieldReferencesLookup.get(i6)]);
  }
  resetExecutors() {
    for (const e10 of this.executors)
      e10.reset();
  }
  _buildDependencyGraph() {
    var _a;
    const { _fieldReferencesLookup: e10, _fieldsAffectedLookup: t5, executors: r6, preserveFieldValuesWhenHidden: o4 } = this, a4 = new Map(this.fieldInputs.map((e11) => [e11.name, e11])), n6 = false === o4, l4 = new Map(r6.map((e11) => [e11, new Array()]));
    for (const c4 of r6) {
      for (const r7 of c4.fieldsUsed) {
        r(e10, r7, () => /* @__PURE__ */ new Set()).add(c4);
        const o5 = a4.get(r7);
        [o5 == null ? void 0 : o5.valueExpressionExecutor, o5 == null ? void 0 : o5.editableExpressionExecutor, n6 ? (_a = o5 == null ? void 0 : o5.group) == null ? void 0 : _a.visibilityExpressionExecutor : null, n6 ? o5 == null ? void 0 : o5.visibilityExpressionExecutor : null].filter((e11) => null != e11 && e11 !== c4).forEach((e11) => {
          l4.get(e11).push(c4);
          r(t5, e11, () => /* @__PURE__ */ new Set()).add(o5);
        });
      }
      if (c4.geometryUsed) {
        r(e10, i6, () => /* @__PURE__ */ new Set()).add(c4);
      }
    }
    return l4;
  }
  async _evaluate(e10) {
    const t5 = /* @__PURE__ */ new Map(), { _dependencyGraph: s2, _fieldsAffectedLookup: o4, _latestFieldValues: a4 } = this;
    for (const r6 of e10)
      c3(r6, t5, s2);
    for (const [i7, { resolver: l4, dependencyPromises: c4 }] of t5) {
      Promise.all(c4).then(async () => {
        const [e11, t6] = this._makeContext(a4);
        return i7.executeAsync(e11, t6);
      }).then(() => {
        if (o4.has(i7))
          for (const e11 of o4.get(i7))
            this._latestFieldValues[e11.name] = e11.value;
        l4.resolve();
      }, (e11) => {
        !e11 || b(e11) || u4(e11) || i7.markStale(), l4.reject(e11);
      });
    }
    const n6 = (await Promise.allSettled(Array.from(t5.values(), ({ resolver: e11 }) => e11.promise))).filter((e11) => "rejected" === e11.status && !(b(e11.reason) || u4(e11.reason)));
    if (n6.length > 0)
      throw new AggregateError(n6, "One or more expression executions failed");
  }
  _makeContext(e10) {
    const [t5, s2] = this._baseContext, r6 = this.feature.clone();
    return r6.attributes = e10, [{ ...t5, $feature: r6 }, s2];
  }
  get test() {
    return { baseContext: this._baseContext };
  }
};
e([y()], l2.prototype, "_asyncExecutors", null), e([y()], l2.prototype, "_baseContext", null), e([y()], l2.prototype, "feature", null), e([y({ constructOnly: true })], l2.prototype, "preserveFieldValuesWhenHidden", void 0), e([y()], l2.prototype, "executors", void 0), e([y()], l2.prototype, "fieldInputs", void 0), e([y()], l2.prototype, "arcadeContextInfo", void 0), l2 = e([a("esri.widgets.FeatureForm.FormExpressionsManager")], l2);
var c3 = (e10, t5, s2) => {
  if (t5.has(e10))
    return;
  const r6 = L();
  t5.set(e10, { resolver: r6, dependencyPromises: [] }), e10.abort();
  const a4 = s2.get(e10);
  for (const o4 of a4)
    c3(o4, t5, s2), t5.get(o4).dependencyPromises.push(r6.promise);
};
var u4 = (e10) => e10 && "object" == typeof e10 && "message" in e10 && "Cancelled" === e10.message;

// node_modules/@arcgis/core/widgets/FeatureForm/GroupInput.js
var a3 = class extends r4 {
  constructor(e10) {
    super(e10), this._expressionTrackingHandles = /* @__PURE__ */ new Map(), this.type = "group";
  }
  initialize() {
    this.addHandles([d(() => [this.visible, this.inputs], ([e10]) => {
      const { inputs: t5 } = this, s2 = !!e10 && void 0;
      for (const i7 of t5)
        d2(i7) && (i7.required = s2);
    }, { initial: true, equals: (e10, t5) => t5[0] === e10[0] && t5[1] === e10[1] })]);
  }
  destroy() {
    for (const e10 of this._expressionTrackingHandles.values())
      e10.remove();
  }
  get initialState() {
    return this.element.initialState || "expanded";
  }
  get inputs() {
    return this._get("inputs");
  }
  set inputs(e10) {
    this.removeAllHandles(), e10 && this.addHandles(e10.map((e11) => d(() => e11.visible, () => this._dirtyEvaluatedVisibilityExpression()))), this._set("inputs", e10);
  }
  get label() {
    return this.element.label;
  }
  set label(e10) {
    const { element: t5 } = this;
    t5 && (t5.label = e10);
  }
  get open() {
    return "expanded" === this.initialState;
  }
  set open(e10) {
    this._override("open", e10);
  }
  get state() {
    return o(n.getLogger(this), "state", { replacement: "open", version: "4.28", warnOnce: true }), this.open ? "expanded" : "collapsed";
  }
  set state(e10) {
    o(n.getLogger(this), "state", { replacement: "open", version: "4.28", warnOnce: true }), this.open = "expanded" === e10;
  }
  get visible() {
    return false !== this.evaluatedVisibilityExpression && this.inputs && this.inputs.some((e10) => e10.visible);
  }
  _dirtyEvaluatedVisibilityExpression() {
    const { element: e10 } = this;
    e10.visibilityExpression && this.notifyChange("evaluatedVisibilityExpression");
  }
};
e([y()], a3.prototype, "initialState", null), e([y()], a3.prototype, "inputs", null), e([y()], a3.prototype, "label", null), e([y()], a3.prototype, "open", null), e([y()], a3.prototype, "type", void 0), e([y()], a3.prototype, "visible", null), a3 = e([a("esri.widgets.FeatureForm.GroupInput")], a3);
var l3 = a3;

// node_modules/@arcgis/core/widgets/FeatureForm/RelationshipInput.js
var h3 = 3;
var y4 = class extends l {
  constructor(e10) {
    super(e10), this._relationshipVM = null, this.group = null, this.type = "relationship", this.addHandles([d(() => ({ feature: this.feature, element: this.element, layer: this.layer }), (e11) => this._createRelationshipVM(e11), P), v(() => this.relatedLayer, "edits", () => {
      var _a;
      return (_a = this._relationshipVM) == null ? void 0 : _a.refresh();
    })]);
  }
  destroy() {
    var _a;
    (_a = this._relationshipVM) == null ? void 0 : _a.destroy();
  }
  get canAddRelatedFeature() {
    const { editable: e10, featureCount: t5, relationship: r6 } = this;
    if (!r6 || !this.loaded || !this.relatedLayerAllowsAdds)
      return false;
    const { cardinality: i7, role: l4 } = r6;
    return !("one-to-one" === i7 && t5 > 0) && ("many-to-many" !== i7 && (!("one-to-many" === i7 && "destination" === l4 && t5 > 0) && e10));
  }
  get displayCount() {
    return this.element.displayCount ?? h3;
  }
  get displayType() {
    return this.element.displayType;
  }
  get editable() {
    return !!this.relatedLayerAllowsEdits && (this.evaluatedEditableExpression ?? true);
  }
  get featureCount() {
    var _a;
    return ((_a = this._relationshipVM) == null ? void 0 : _a.featureCount) ?? 0;
  }
  get loaded() {
    var _a;
    return "loading" !== ((_a = this._relationshipVM) == null ? void 0 : _a.state);
  }
  get map() {
    return this._get("map");
  }
  set map(e10) {
    var _a;
    e10 && ((_a = this._relationshipVM) == null ? void 0 : _a.set("map", e10)), this._set("map", e10);
  }
  get orderByFields() {
    return this.element.orderByFields;
  }
  get originHasValidKey() {
    return !(!this.relationship || !this.feature.getAttribute(this.relationship.keyField));
  }
  get relationship() {
    var _a;
    return (_a = this._relationshipVM) == null ? void 0 : _a.relationship;
  }
  get relationshipId() {
    return this.element.relationshipId;
  }
  get relatedFeatureInfos() {
    var _a;
    const { _relationshipVM: e10, timeZone: t5 } = this;
    if (!((_a = e10 == null ? void 0 : e10.relatedFeatures) == null ? void 0 : _a.length) || !(e10 == null ? void 0 : e10.relatedLayer))
      return [];
    const { itemDescriptionFieldName: r6, relatedFeatures: i7, relatedLayer: l4 } = e10, s2 = l4 && "formTemplate" in l4 && l4.formTemplate ? l4.formTemplate.title : void 0;
    return i7.map((e11) => {
      let i8;
      if (r6) {
        const s3 = e11.getAttribute(r6), o4 = l4.fieldsIndex.get(r6);
        if (o4) {
          const e12 = A2({ values: [s3], fields: [o4], timeZone: t5 ?? void 0 })[r6];
          null != e12 && (i8 = e12.toString());
        }
      }
      return { feature: e11, description: i8, title: s2 ? _({ label: s2, attributes: e11.attributes, fieldsIndex: l4.fieldsIndex, timeZone: t5 }) : void 0 };
    }).toArray();
  }
  get relatedLayer() {
    var _a;
    return (_a = this._relationshipVM) == null ? void 0 : _a.relatedLayer;
  }
  get relatedLayerIsTable() {
    var _a;
    return !!((_a = this.relatedLayer) == null ? void 0 : _a.isTable);
  }
  get relatedLayerAllowsAdds() {
    var _a;
    const { relatedLayer: e10 } = this;
    if (!e10 || !this.relatedLayerAllowsEdits)
      return false;
    const t5 = O(e10);
    return !!((_a = t5 == null ? void 0 : t5.operations) == null ? void 0 : _a.supportsAdd);
  }
  get relatedLayerAllowsEdits() {
    var _a;
    const { relatedLayer: e10 } = this;
    if (!e10)
      return false;
    const t5 = O(e10);
    return !!((_a = t5 == null ? void 0 : t5.operations) == null ? void 0 : _a.supportsEditing);
  }
  get showAllEnabled() {
    return this._get("showAllEnabled");
  }
  set showAllEnabled(e10) {
    var _a;
    (_a = this._relationshipVM) == null ? void 0 : _a.set("showAllEnabled", e10), this._set("showAllEnabled", e10);
  }
  get showAllActionVisible() {
    return !this.showAllEnabled && this.featureCount > 0 && this.featureCount > this.displayCount;
  }
  get visible() {
    const { relationship: e10 } = this;
    if (!e10)
      return false;
    const { cardinality: t5 } = e10;
    return "many-to-many" !== t5 && (null != this.evaluatedVisibilityExpression ? this.evaluatedVisibilityExpression : null != this.element);
  }
  get updating() {
    var _a, _b;
    return "loading" === ((_a = this._relationshipVM) == null ? void 0 : _a.state) || "querying" === ((_b = this._relationshipVM) == null ? void 0 : _b.state);
  }
  incrementPage() {
    this._relationshipVM && this._relationshipVM.featurePage++;
  }
  getRelatedFeatureByObjectId(e10) {
    var _a;
    return (_a = this._relationshipVM) == null ? void 0 : _a.getRelatedFeatureByObjectId(e10);
  }
  _createRelationshipVM(e10) {
    var _a;
    const { feature: t5, element: r6, layer: i7 } = e10;
    if ((_a = this._relationshipVM) == null ? void 0 : _a.destroy(), !t5 || !r6 || !i7)
      return;
    const { displayCount: l4, map: s2, orderByFields: o4, relationshipId: p7, showAllEnabled: d4 } = this;
    J(i7) && (this._relationshipVM = new F2({ graphic: t5, displayCount: l4, layer: i7, map: s2, orderByFields: o4, relationshipId: p7, showAllEnabled: d4 }));
  }
};
e([y()], y4.prototype, "_relationshipVM", void 0), e([y()], y4.prototype, "canAddRelatedFeature", null), e([y()], y4.prototype, "displayCount", null), e([y()], y4.prototype, "displayType", null), e([y()], y4.prototype, "editable", null), e([y()], y4.prototype, "featureCount", null), e([y()], y4.prototype, "group", void 0), e([y()], y4.prototype, "loaded", null), e([y()], y4.prototype, "map", null), e([y()], y4.prototype, "orderByFields", null), e([y()], y4.prototype, "originHasValidKey", null), e([y()], y4.prototype, "relationship", null), e([y()], y4.prototype, "relationshipId", null), e([y()], y4.prototype, "relatedFeatureInfos", null), e([y()], y4.prototype, "relatedLayer", null), e([y()], y4.prototype, "relatedLayerIsTable", null), e([y()], y4.prototype, "relatedLayerAllowsAdds", null), e([y()], y4.prototype, "relatedLayerAllowsEdits", null), e([y()], y4.prototype, "showAllEnabled", null), e([y()], y4.prototype, "showAllActionVisible", null), e([y({ readOnly: true })], y4.prototype, "type", void 0), e([y()], y4.prototype, "visible", null), e([y()], y4.prototype, "updating", null), y4 = e([a("esri.widgets.FeatureForm.RelationshipInput")], y4);
var m2 = y4;

// node_modules/@arcgis/core/widgets/FeatureForm/FeatureFormViewModel.js
var Z = new f({ attributes: {} });
var L3 = ["editableExpression", "requiredExpression", "valueExpression", "visibilityExpression"];
var k4 = ["visibilityExpression"];
var U3 = ["editableExpression", "visibilityExpression"];
var P2 = "#JSAPI_CONTINGENT_VALUE_EMPTY_HASH";
var W = "#JSAPI_CONTINGENT_VALUE_ANY_HASH";
var G2 = "#JSAPI_CONTINGENT_VALUE_NULL_HASH";
var O4 = "esri.widgets.FeatureForm.FeatureFormViewModel";
var $ = () => n.getLogger(O4);
var z2 = class extends n2(o2.EventedAccessor) {
  constructor(e10) {
    super(e10), this._expressionExecutorsInUse = /* @__PURE__ */ new Set(), this._expressionExecutorLookup = /* @__PURE__ */ new Map(), this._expressionsManager = null, this._contingentValuesCache = null, this._featureClone = Z.clone(), this._initialFeature = Z.clone(), this._timeZone = null, this._updatingHandles = new h(), this.arcadeEditType = "NA", this.contingencyConstraintViolations = /* @__PURE__ */ new Map(), this.disabled = false, this.highlightHelper = null, this.inputs = [], this.map = null, this.relatedRecordCallbacks = null, this.strict = false;
  }
  initialize() {
    const e10 = d(() => {
      var _a;
      return [this.layer, !!((_a = this.layer) == null ? void 0 : _a.loaded), this.formTemplate, this.feature, this.timeZone, this.arcadeEditType];
    }, async ([e11, t6]) => {
      null != e11 && (t6 ? this._updatingHandles.addPromise(this._updateInputs()) : e11.load().catch(() => {
      }));
    }, { equals: ([e11, t6, n7, s2, i7, o4], [r6, a4, l4, u5, p7, d4]) => e11 === r6 && t6 === a4 && n7 === l4 && s2 === u5 && i7 === p7 && o4 === d4, initial: true }), t5 = d(() => this._arcadeContextInfo, (e11) => {
      null != this._expressionsManager && (this._expressionsManager.arcadeContextInfo = e11, this._updatingHandles.addPromise(this._expressionsManager.evaluateAll().finally(() => this._afterExpressionsEvaluated())));
    }), n6 = d(() => this.layer, (e11) => {
      const t6 = "subtype-sublayer" === (e11 == null ? void 0 : e11.type) ? e11.parent : "feature" === (e11 == null ? void 0 : e11.type) ? e11 : null;
      t6 && this.addResolvingPromise(O3.createLoadedLayerContingentValuesCache(t6).then((e12) => {
        this._contingentValuesCache = e12, this.notifyChange("fieldsWithContingentValues");
      }));
    }, { initial: true });
    this.addHandles([e10, t5, n6]);
  }
  destroy() {
    var _a;
    this.feature = null, this.layer = null, this._contingentValuesCache = u(this._contingentValuesCache), (_a = this.highlightHelper) == null ? void 0 : _a.removeAll(), this._updatingHandles.destroy();
  }
  get _expressionInfosLookup() {
    var _a, _b;
    return new Map((_b = (_a = this.formTemplate) == null ? void 0 : _a.expressionInfos) == null ? void 0 : _b.map((e10) => [e10.name, e10]));
  }
  get activeRelationshipInput() {
    return this.allRelationshipInputs.find((e10) => e10.relationshipId === this.relationshipId);
  }
  get _arcadeContextInfo() {
    const { _initialFeature: e10, arcadeEditType: t5, layer: n6, map: s2, spatialReference: i7, timeZone: o4 } = this;
    return { layer: i3(n6) ? n6 : null, originalFeature: e10, editType: t5, map: s2, spatialReference: i7, timeZone: o4 };
  }
  get allFieldInputs() {
    return O2(this.inputs);
  }
  get allGroupInputs() {
    return this.inputs.filter(c);
  }
  get allRelationshipInputs() {
    return j(this.inputs);
  }
  get _layerFieldsByName() {
    var _a;
    return new Map((_a = this.layer) == null ? void 0 : _a.fields.map((e10) => [e10.name, e10]));
  }
  get feature() {
    return this._get("feature");
  }
  set feature(e10) {
    this._featureClone = e10 ? e10.clone() : Z.clone(), this._initialFeature = this._featureClone.clone(), this._expressionsManager && (this._expressionsManager.feature = this._featureClone), e10 ? (this._resetFieldInputValues(this._featureClone), this.allRelationshipInputs.forEach((t5) => t5.feature = e10)) : (this.inputs.forEach((e11) => e11.destroy()), this.inputs.length = 0), this.contingencyConstraintViolations.clear(), this._set("feature", e10);
  }
  get fieldsWithContingentValues() {
    if (null == this._contingentValuesCache)
      return /* @__PURE__ */ new Set();
    const e10 = this._contingentValuesCache.fieldGroups.flatMap((e11) => e11.fields);
    return new Set(e10);
  }
  get fieldsWithInvalidCodedValue() {
    const e10 = this.allFieldInputs;
    return new Set(e10.filter((e11) => {
      const { name: t5, domain: n6, value: s2 } = e11;
      if ("coded-value" === (n6 == null ? void 0 : n6.type)) {
        const e12 = this.getFieldValueOptionsForField(t5);
        return null != s2 && "" !== s2 && !e12.flat().some((e13) => e13.value === s2);
      }
      return false;
    }));
  }
  get formTemplate() {
    return this.layer && "formTemplate" in this.layer ? this.layer.formTemplate : null;
  }
  set formTemplate(e10) {
    void 0 === e10 ? this._clearOverride("formTemplate") : this._override("formTemplate", e10);
  }
  get formDescription() {
    const { formTemplate: e10, layer: t5 } = this;
    return (e10 == null ? void 0 : e10.description) && t5 ? _({ label: e10.description, attributes: this.getValues(), fieldsIndex: t5.fieldsIndex, timeZone: this.timeZone }) : null;
  }
  get formTitle() {
    const { formTemplate: e10, layer: t5 } = this;
    return (e10 == null ? void 0 : e10.title) && t5 ? _({ label: e10.title, attributes: this.getValues(), fieldsIndex: t5.fieldsIndex, timeZone: this.timeZone }) : null;
  }
  get formHeaderVisible() {
    const { activeRelationshipInput: e10, formDescription: t5, formTitle: n6 } = this;
    return !(e10 || !t5 && !n6);
  }
  get joinedContingentValues() {
    return this._joinContingentValues();
  }
  get layer() {
    var _a;
    return ((_a = this.feature) == null ? void 0 : _a.sourceLayer) && "applyEdits" in this.feature.sourceLayer ? this.feature.sourceLayer : null;
  }
  set layer(e10) {
    this._override("layer", e10);
  }
  get relationshipId() {
    return this._get("relationshipId");
  }
  set relationshipId(e10) {
    const t5 = this.allRelationshipInputs;
    if (null != e10 && e10 === this.relationshipId || t5.forEach((e11) => e11.showAllEnabled = false), null != e10) {
      const n6 = t5.find((t6) => t6.relationshipId === e10);
      n6 && (n6.showAllEnabled = true);
    }
    this._set("relationshipId", e10);
  }
  get spatialReference() {
    var _a;
    return ((_a = this.layer) == null ? void 0 : _a.spatialReference) ?? null;
  }
  set spatialReference(e10) {
    this._override("spatialReference", e10);
  }
  get state() {
    var _a;
    return ((_a = this.layer) == null ? void 0 : _a.loaded) ? "ready" : "disabled";
  }
  get submittable() {
    return !!this.valid || this.allFieldInputs.filter((e10) => !e10.valid).every(({ submittable: e10 }) => e10);
  }
  get timeZone() {
    const { layer: e10 } = this;
    if (e10 && "datesInUnknownTimezone" in e10 && e10.datesInUnknownTimezone)
      return i2;
    const t5 = e10 && "preferredTimeZone" in e10 && e10.preferredTimeZone;
    return this._timeZone === r2 ? t5 || i2 : this._timeZone || o3;
  }
  set timeZone(e10) {
    this._timeZone = e10;
  }
  get updating() {
    return this._updatingHandles.updating;
  }
  get valid() {
    const e10 = this.allFieldInputs;
    return e10.length > 0 && e10.every(({ valid: e11 }) => e11);
  }
  get view() {
    return o($(), "view", { replacement: "FeatureForm.map", version: "4.27" }), this._get("view");
  }
  set view(e10) {
    o($(), "view", { replacement: "FeatureForm.map", version: "4.27" }), this._set("view", e10), (e10 == null ? void 0 : e10.map) && (this.map = e10.map);
  }
  findField(e10) {
    return this.allFieldInputs.find((t5) => t5.name === e10);
  }
  getFieldValueOptionsForField(e10, t5) {
    var _a;
    const n6 = this.findField(e10);
    if (!n6)
      return [[], []];
    const s2 = "coded-value" === ((_a = n6.domain) == null ? void 0 : _a.type) ? n6.domain.codedValues.map(({ name: e11, code: t6 }) => ({ name: e11, value: t6 })) : [], i7 = this.fieldsWithContingentValues.has(e10) ? this._getContingentValueOptionsForField(e10, t5) : [];
    if (i7.length > 0) {
      const e11 = new Set(i7.map((e12) => e12.value));
      return [i7, s2.filter((t6) => !e11.has(t6.value))];
    }
    return [s2, []];
  }
  getValue(e10) {
    const { _featureClone: t5, layer: n6 } = this, s2 = !!(n6 == null ? void 0 : n6.getField(e10));
    return t5.getAttribute(e10) ?? (s2 ? null : void 0);
  }
  setValue(e10, t5) {
    const { _featureClone: n6, strict: s2 } = this, i7 = this.findField(e10);
    t5 = "" === t5 ? null : t5, i7 && n6.getAttribute(e10) !== t5 && (i7.value = t5, s2 && !i7.valid || (this._afterValueChange(i7), null != this._expressionsManager && this._updatingHandles.addPromise(this._expressionsManager.evaluateInvalidated([i7.name]).finally(() => this._afterExpressionsEvaluated()))));
  }
  getValues() {
    return { ...this._featureClone.attributes };
  }
  overrideInitialFeature(e10) {
    this._initialFeature = e10;
  }
  submit() {
    const e10 = this.allFieldInputs, t5 = new Set(e10.filter((e11) => e11.valid).map(({ name: e11 }) => e11)), n6 = e10.filter((e11) => !e11.valid).map(({ name: e11 }) => e11), s2 = this.getValues();
    if (this.validateContingencyConstraints(s2, { includeIncompleteViolations: true }).length > 0)
      for (const [i7, o4] of this.contingencyConstraintViolations.entries())
        "error" === o4.type && (t5.delete(i7), n6.push(i7));
    this.emit("submit", { valid: [...t5], invalid: n6, values: s2 });
  }
  validateContingencyConstraints(e10, t5) {
    const { _contingentValuesCache: n6 } = this, s2 = /* @__PURE__ */ new Map();
    if (this.contingencyConstraintViolations = s2, null == n6)
      return [];
    const { invalid: i7, incomplete: o4 } = n6.validateContingencyConstraints(e10), r6 = [...i7, ...(t5 == null ? void 0 : t5.includeIncompleteViolations) ? o4 : []];
    for (const a4 of r6)
      for (const e11 of a4.fieldGroup.fields)
        s2.set(e11, a4);
    return r6;
  }
  notifyFeatureGeometryChanged() {
    const { _expressionsManager: e10, feature: t5, _featureClone: n6 } = this;
    n6.geometry = t5.geometry, null != e10 && this._updatingHandles.addPromise(e10.evaluateInvalidatedByGeometry().finally(() => this._afterExpressionsEvaluated()));
  }
  _emitChangeEvent({ name: e10, valid: t5, value: n6 }) {
    this.emit("value-change", { layer: this.layer, feature: this.feature, fieldName: e10, value: n6, valid: t5 });
  }
  async _updateInputs() {
    this._stopExpressions();
    const { _featureClone: e10, _initialFeature: t5, arcadeEditType: n6, formTemplate: s2, inputs: i7, layer: o4, timeZone: r6 } = this;
    if (!o4)
      return;
    const a4 = { arcadeEditType: n6, feature: e10, initialFeature: t5, layer: o4, timeZone: r6 }, l4 = i7.slice(), u5 = (s2 == null ? void 0 : s2.elements) && s2.elements.length > 0 ? await this._updateInputsUsingFormElements(l4, s2.elements, a4) : this._updateInputsUsingLayerFields(l4, o4 == null ? void 0 : o4.fields, a4);
    this.inputs = u5, await this._startExpressions();
  }
  async _updateInputsUsingFormElements(e10, t5, n6) {
    const s2 = /* @__PURE__ */ new Map();
    for (const r6 of e10)
      if (c(r6)) {
        s2.set(r6.element, r6);
        for (const e11 of r6.inputs)
          e11.element && s2.set(e11.element, e11);
      } else
        r6.element && s2.set(r6.element, r6);
    const i7 = /* @__PURE__ */ new Map(), o4 = this._updateInputsUsingFormElementsRecursive({ existingInputsByElement: s2, updatedElements: t5.filter(D2), sharedInitializationProperties: n6, group: null, newExpressionExecutorPromises: i7 });
    for (const [r6, a4] of s2.entries())
      s2.delete(r6), a4.destroy();
    return await Promise.all(Array.from(i7.values())), o4;
  }
  _updateInputsUsingFormElementsRecursive(e10) {
    const { existingInputsByElement: t5, updatedElements: n6, sharedInitializationProperties: s2, group: i7, newExpressionExecutorPromises: o4 } = e10, r6 = [];
    for (const a4 of n6) {
      const e11 = t5.has(a4), n7 = e11 ? t5.get(a4) : T2(a4) ? this._makeGroupInputFromElement(a4, s2) : b3(a4) ? this._makeFieldInputFromElement(a4, s2, i7) : x(a4) ? this._makeRelationshipInputFromElement(a4, s2, i7) : null;
      if (n7) {
        if (r6.push(n7), this._assignExpressionExecutors(n7, a4, o4), e11)
          if (t5.delete(a4), c(n7)) {
            const { feature: e12, timeZone: t6 } = s2;
            n7.set({ feature: e12, timeZone: t6 });
          } else if (f2(n7)) {
            const e12 = this.relationshipId === a4.relationshipId;
            n7.set(s2), n7.set({ map: this.map, showAllEnabled: e12 });
          } else
            n7.set(s2);
        if (T2(a4)) {
          const e12 = a4.elements.filter((e13) => D2(e13));
          n7.inputs = this._updateInputsUsingFormElementsRecursive({ existingInputsByElement: t5, updatedElements: e12, sharedInitializationProperties: s2, group: n7, newExpressionExecutorPromises: o4 });
        }
      }
    }
    return r6;
  }
  _updateInputsUsingLayerFields(e10, t5, n6) {
    var _a;
    if (!Array.isArray(t5))
      return $().warn(this.declaredClass, "No attribute fields found."), [];
    const s2 = /* @__PURE__ */ new Map();
    for (const p7 of e10)
      if (c(p7)) {
        for (const e11 of p7.inputs)
          e11.destroy();
        p7.inputs.length = 0, p7.destroy();
      } else
        f2(p7) ? p7.destroy() : d2(p7) && (null !== p7.element ? p7.destroy() : s2.set(p7.field, p7));
    const i7 = [], { arcadeEditType: o4, feature: r6, initialFeature: a4, layer: l4, timeZone: u5 } = n6;
    for (const p7 of t5) {
      const e11 = s2.get(p7) ?? new q({ arcadeEditType: o4, field: p7, feature: r6, initialFeature: a4, layer: l4, value: (r6 == null ? void 0 : r6.getAttribute(p7.name)) ?? null, preservesValueWhenHidden: (_a = this.formTemplate) == null ? void 0 : _a.preserveFieldValuesWhenHidden, timeZone: u5 });
      i7.push(e11), s2.delete(p7);
    }
    for (const [p7, d4] of s2.entries())
      s2.delete(p7), d4.destroy();
    return i7;
  }
  _resetFieldInputValues(e10) {
    for (const t5 of this.allFieldInputs)
      t5.value = e10.getAttribute(t5.name);
  }
  _makeFieldInputFromElement(e10, t5, n6) {
    var _a;
    const { arcadeEditType: s2, feature: i7, initialFeature: o4, layer: r6, timeZone: a4 } = t5, { fieldName: l4 } = e10, u5 = l4 && this._layerFieldsByName.get(l4);
    return u5 ? new q({ arcadeEditType: s2, element: e10, field: u5, value: (i7 == null ? void 0 : i7.getAttribute(e10.fieldName)) ?? null, feature: i7, initialFeature: o4, layer: r6, group: n6, preservesValueWhenHidden: (_a = this.formTemplate) == null ? void 0 : _a.preserveFieldValuesWhenHidden, timeZone: a4 }) : null;
  }
  _makeGroupInputFromElement(e10, t5) {
    const { feature: n6, layer: s2 } = t5;
    return new l3({ element: e10, inputs: [], feature: n6, layer: s2 });
  }
  _makeRelationshipInputFromElement(e10, t5, n6 = null) {
    const { map: s2 } = this, { feature: i7, layer: o4, timeZone: r6 } = t5, a4 = new m2({ element: e10, feature: i7, group: n6, layer: o4, map: s2, timeZone: r6 });
    return a4.addHandles(v(() => a4.relatedLayer, "edits", () => {
      var _a;
      return (_a = this._expressionsManager) == null ? void 0 : _a.evaluateAsyncExpressions();
    })), a4;
  }
  _assignExpressionExecutors(e10, t5, n6) {
    var _a;
    const s2 = T2(t5) ? k4 : x(t5) ? U3 : L3, i7 = [];
    for (const o4 of s2) {
      const s3 = `${o4}Executor`;
      if (e10[s3]) {
        this._useExecutor(e10[s3]);
        continue;
      }
      const i8 = t5[o4], { _expressionExecutorLookup: r6 } = this;
      if (null != i8 && "" !== i8) {
        const t6 = ((_a = this._expressionInfosLookup.get(i8)) == null ? void 0 : _a.expression) ?? i8;
        if (r6.has(t6))
          e10[s3] = this._useExecutor(r6.get(t6));
        else if (n6.has(t6)) {
          const i9 = n6.get(t6).then((t7) => (e10[s3] = t7, t7));
          n6.set(t6, i9);
        } else {
          const i9 = d3(t6, this.layer).then((n7) => (e10[s3] = this._useExecutor(n7), r6.set(t6, n7), n7));
          n6.set(t6, i9);
        }
      }
    }
    return i7;
  }
  _createExpressionsManager(e10) {
    const { _arcadeContextInfo: t5, _featureClone: n6, allFieldInputs: s2, formTemplate: i7 } = this;
    this._expressionsManager = new l2({ executors: e10, feature: n6, arcadeContextInfo: t5, fieldInputs: s2, preserveFieldValuesWhenHidden: true === (i7 == null ? void 0 : i7.preserveFieldValuesWhenHidden) });
  }
  async _startExpressions() {
    if (0 === this._expressionExecutorsInUse.size)
      return;
    const e10 = Array.from(this._expressionExecutorsInUse);
    this._createExpressionsManager(e10), await this._expressionsManager.evaluateAll().finally(() => this._afterExpressionsEvaluated());
  }
  _stopExpressions() {
    this._expressionsManager = u(this._expressionsManager), this._expressionExecutorsInUse.clear();
  }
  _useExecutor(e10) {
    return this._expressionExecutorsInUse.add(e10), e10;
  }
  _afterValueChange(e10) {
    var _a;
    const { name: t5, value: n6 } = e10, { _featureClone: s2, formTemplate: i7, layer: o4 } = this;
    if (!o4)
      return;
    const r6 = s2.getAttribute(t5);
    s2.setAttribute(t5, n6);
    const { typeFieldName: a4, types: l4 } = L2(o4);
    if (t5 === a4 && n6 !== r6) {
      if ("subtype-sublayer" === o4.type) {
        const e12 = (_a = o4.parent) == null ? void 0 : _a.findSublayerForFeature(s2);
        s2.sourceLayer = this.feature.sourceLayer = e12;
      }
      const e11 = /* @__PURE__ */ new Set();
      for (const t6 of l4)
        if (t6.domains && "object" == typeof t6.domains)
          for (const n7 of Object.keys(t6.domains))
            e11.add(n7);
      for (const t6 of e11) {
        const e12 = this.findField(t6);
        e12 && e12.notifyChange("domain");
      }
    }
    if (null != i7) {
      const { description: e11, title: n7 } = i7;
      n7 && i(n7, t5) && this.notifyChange("formTitle"), e11 && i(e11, t5) && this.notifyChange("formDescription");
    }
    this._emitChangeEvent(e10);
  }
  _afterExpressionsEvaluated() {
    const { _featureClone: e10 } = this;
    for (const t5 of this.allFieldInputs)
      t5.value !== e10.getAttribute(t5.name) && this._afterValueChange(t5);
  }
  _joinContingentValues() {
    const e10 = this._contingentValuesCache;
    if (null == e10)
      return [];
    const { typeFieldName: t5 } = L2(this.layer), n6 = t5 ? this.getValue(t5) : null, s2 = [];
    for (const r6 of e10.fieldGroups) {
      const { contingencies: e11, fields: t6, name: i8 } = r6, o5 = [];
      for (const s3 of e11)
        s3.isRetired || null != s3.subtype && s3.subtype.code !== n6 || o5.push({ values: s3.values });
      o5.length > 0 && s2.push({ name: i8, fields: t6, contingencies: o5 });
    }
    const [i7, o4] = this._generateJoinPlan(s2);
    return [...i7.flatMap((e11) => this._joinFieldGroupContingencies(e11)), ...o4.flatMap((e11) => e11.contingencies)];
  }
  _generateJoinPlan(e10) {
    const t5 = /* @__PURE__ */ new Map(), n6 = [], s2 = /* @__PURE__ */ new Set();
    for (const l4 of e10)
      for (const e11 of l4.fields)
        if (t5.has(e11)) {
          const i8 = t5.get(e11), o5 = l4, r7 = [i8.name, o5.name].sort().join("|");
          if (s2.has(r7))
            continue;
          n6.push([i8, o5]), s2.add(r7), t5.set(e11, o5);
        } else
          t5.set(e11, l4);
    const i7 = new Set(n6.flat()), o4 = new Set(e10);
    for (const l4 of i7)
      o4.delete(l4);
    const r6 = /* @__PURE__ */ new Map(), a4 = /* @__PURE__ */ new Map();
    for (const l4 of new Set(n6.flat())) {
      const e11 = Symbol(l4.name);
      r6.set(e11, /* @__PURE__ */ new Set([l4])), a4.set(l4, e11);
    }
    for (const [l4, u5] of n6) {
      const e11 = a4.get(l4), t6 = a4.get(u5);
      if (e11 === t6)
        continue;
      const n7 = r6.get(e11), s3 = r6.get(t6);
      for (const i8 of s3)
        n7.add(i8), a4.set(i8, e11);
      r6.delete(t6);
    }
    return [[...r6.values()].map((e11) => [...e11]), [...o4]];
  }
  _joinFieldGroupContingencies(e10) {
    var _a, _b;
    const t5 = e10.slice(), n6 = t5.shift();
    let s2 = t5.shift(), i7 = this._generateJoinKey(n6.fields, s2.fields), o4 = /* @__PURE__ */ new Set([...n6.fields, ...s2.fields]), r6 = /* @__PURE__ */ new Map();
    for (const l4 of n6.contingencies) {
      const [e11] = this._hashContingency(l4, i7.codedValueFields, true);
      r6.has(e11) ? (_a = r6.get(e11)) == null ? void 0 : _a.push(l4) : r6.set(e11, [l4]);
    }
    for (; t5.length > 0; ) {
      const e11 = /* @__PURE__ */ new Map(), n7 = t5.shift(), a5 = this._generateJoinKey(o4, n7.fields);
      for (const t6 of s2.contingencies) {
        const [n8, s3] = this._hashContingency(t6, i7.codedValueFields), o5 = s3 ? this._findMatchingContingenciesWithAnyHashMask(r6, n8) : r6.get(n8);
        if (r6.has(W) && (o5 == null ? void 0 : o5.push(...this._findMatchingContingenciesContainingAny(t6, r6.get(W), i7.codedValueFields))), null != o5)
          for (const r7 of o5) {
            const n9 = i7.rangeFields.length > 0 ? this._joinContingenciesWithRangeDomains(r7, t6, i7.rangeFields) : this._joinContingencies(r7, t6);
            if (null == n9)
              break;
            const [s4] = this._hashContingency(n9, a5.codedValueFields, true);
            e11.has(s4) ? (_b = e11.get(s4)) == null ? void 0 : _b.push(n9) : e11.set(s4, [n9]);
          }
      }
      r6 = e11, s2 = n7, i7 = a5, o4 = /* @__PURE__ */ new Set([...o4, ...s2.fields]);
    }
    const a4 = [];
    for (const l4 of s2.contingencies) {
      const [e11, t6] = this._hashContingency(l4, i7.codedValueFields), n7 = t6 ? this._findMatchingContingenciesWithAnyHashMask(r6, e11) : r6.get(e11);
      if (r6.has(W) && n7.push(...this._findMatchingContingenciesContainingAny(l4, r6.get(W), i7.codedValueFields)), null != n7)
        for (const s3 of n7) {
          const e12 = i7.rangeFields.length > 0 ? this._joinContingenciesWithRangeDomains(s3, l4, i7.rangeFields) : this._joinContingencies(s3, l4);
          null != e12 && a4.push(e12);
        }
    }
    return a4;
  }
  _joinContingencies(e10, t5) {
    const n6 = { values: { ...e10.values, ...t5.values } };
    for (const [s2, i7] of Object.entries(n6.values))
      "any" === i7.objectType && null != e10.values[s2] && (n6.values[s2] = e10.values[s2]);
    return n6;
  }
  _joinContingenciesWithRangeDomains(e10, t5, n6) {
    const s2 = this._joinContingencies(e10, t5);
    for (const i7 of n6) {
      const n7 = e10.values[i7], o4 = t5.values[i7], { leftIsNull: r6, rightIsNull: a4, bothAreNull: l4, leftIsAny: u5, rightIsAny: p7, bothAreAny: d4, leftIsRange: c4, rightIsRange: h4 } = this._compareObjectTypes(n7.objectType, o4.objectType);
      if (l4 || d4)
        continue;
      if (r6 && p7 || a4 && u5) {
        s2.values[i7] = new p2({ objectType: "null" });
        continue;
      }
      if (r6 && h4 || a4 && c4)
        return null;
      u5 ? (n7.minValue = -1 / 0, n7.maxValue = 1 / 0) : p7 && (o4.minValue = -1 / 0, o4.maxValue = 1 / 0);
      const m3 = Math.max(n7.minValue, o4.minValue), g2 = Math.min(n7.maxValue, o4.maxValue);
      if (m3 > g2)
        return null;
      s2.values[i7] = new p2({ objectType: "range", minValue: m3, maxValue: g2 });
    }
    return s2;
  }
  _findMatchingContingenciesContainingAny(e10, t5, n6) {
    return t5.filter((t6) => n6.every((n7) => {
      var _a, _b;
      const s2 = t6.values[n7], i7 = e10.values[n7];
      return "any" === s2.objectType || "any" === i7.objectType || ((_a = s2.codedValue) == null ? void 0 : _a.code) === ((_b = i7.codedValue) == null ? void 0 : _b.code);
    }));
  }
  _findMatchingContingenciesWithAnyHashMask(e10, t5) {
    const n6 = RegExp(`${t5}$`), s2 = [];
    for (const [i7, o4] of e10) {
      if (i7 === W)
        break;
      n6.test(i7) && s2.push(...o4);
    }
    return s2;
  }
  _generateJoinKey(e10, t5) {
    var _a;
    const n6 = Array.isArray(e10) ? new Set(e10) : e10, s2 = Array.isArray(t5) ? new Set(t5) : t5, i7 = n6.size < s2.size ? n6 : s2, o4 = i7 === n6 ? s2 : n6, r6 = /* @__PURE__ */ new Set(), a4 = /* @__PURE__ */ new Set();
    for (const l4 of i7)
      if (o4.has(l4)) {
        const e11 = (_a = this.layer) == null ? void 0 : _a.getFieldDomain(l4, { feature: this.feature });
        if (null == e11)
          continue;
        switch (e11.type) {
          case "coded-value":
            r6.add(l4);
            break;
          case "range":
            a4.add(l4);
        }
      }
    return { codedValueFields: [...r6], rangeFields: [...a4] };
  }
  _contingencyIsValid(e10, t5) {
    const n6 = {};
    for (const { name: s2, value: i7 } of this.allFieldInputs)
      this.fieldsWithContingentValues.has(s2) && null != i7 && s2 !== e10 && (n6[s2] = i7);
    return Object.entries(n6).every(([e11, n7]) => !t5.values.hasOwnProperty(e11) || k3(n7, t5.values[e11]));
  }
  _getContingentValueOptionsForField(e10, t5) {
    const n6 = this.joinedContingentValues.slice(), s2 = /* @__PURE__ */ new Map(), i7 = { code: "", name: t5 ?? "No value" };
    for (const o4 of n6) {
      const t6 = o4.values[e10];
      if ("code" === (t6 == null ? void 0 : t6.objectType) || "null" === (t6 == null ? void 0 : t6.objectType)) {
        const { code: n7, name: r6 } = t6.codedValue && "null" !== t6.objectType ? t6.codedValue : i7;
        !s2.has(n7) && this._contingencyIsValid(e10, o4) && s2.set(n7, { name: r6, value: n7 });
      }
    }
    return [...s2.values()];
  }
  _hashContingency(e10, t5, n6 = false) {
    var _a;
    if (t5.length < 1)
      return [P2, false];
    const s2 = [];
    let i7 = false;
    for (const o4 of t5) {
      const t6 = e10.values[o4];
      if ("any" === t6.objectType) {
        if (n6)
          return [W, true];
        i7 = true, s2.push(`${o4}:.*`);
      } else
        "null" === t6.objectType ? s2.push(`${o4}:${G2}`) : s2.push(`${o4}:${(_a = t6.codedValue) == null ? void 0 : _a.code}`);
    }
    return [s2.sort().join("&"), i7];
  }
  _compareObjectTypes(e10, t5) {
    return { leftIsNull: "null" === e10, rightIsNull: "null" === t5, bothAreNull: "null" === e10 && "null" === t5, leftIsAny: "any" === e10, rightIsAny: "any" === t5, bothAreAny: "any" === e10 && "any" === t5, leftIsRange: "range" === e10, rightIsRange: "range" === t5 };
  }
};
function D2(e10) {
  return "field" === e10.type || "group" === e10.type || "relationship" === e10.type || ($().warn("form-info::unsupported-element-type", "Only element types 'field', 'group' and 'relationship' are supported", `Element ${e10.label} has unsupported type '${e10.type}'`), false);
}
e([y()], z2.prototype, "_expressionInfosLookup", null), e([y()], z2.prototype, "_featureClone", void 0), e([y()], z2.prototype, "_timeZone", void 0), e([y()], z2.prototype, "activeRelationshipInput", null), e([y()], z2.prototype, "_arcadeContextInfo", null), e([y()], z2.prototype, "allFieldInputs", null), e([y()], z2.prototype, "allGroupInputs", null), e([y()], z2.prototype, "allRelationshipInputs", null), e([y()], z2.prototype, "_layerFieldsByName", null), e([y()], z2.prototype, "arcadeEditType", void 0), e([y()], z2.prototype, "contingencyConstraintViolations", void 0), e([y()], z2.prototype, "disabled", void 0), e([y()], z2.prototype, "feature", null), e([y()], z2.prototype, "fieldsWithContingentValues", null), e([y()], z2.prototype, "fieldsWithInvalidCodedValue", null), e([y({ type: y2 })], z2.prototype, "formTemplate", null), e([y()], z2.prototype, "formDescription", null), e([y()], z2.prototype, "formTitle", null), e([y()], z2.prototype, "formHeaderVisible", null), e([y()], z2.prototype, "highlightHelper", void 0), e([y()], z2.prototype, "inputs", void 0), e([y()], z2.prototype, "joinedContingentValues", null), e([y()], z2.prototype, "layer", null), e([y()], z2.prototype, "map", void 0), e([y()], z2.prototype, "relatedRecordCallbacks", void 0), e([y()], z2.prototype, "relationshipId", null), e([y()], z2.prototype, "spatialReference", null), e([y()], z2.prototype, "state", null), e([y()], z2.prototype, "strict", void 0), e([y()], z2.prototype, "submittable", null), e([y()], z2.prototype, "timeZone", null), e([y()], z2.prototype, "updating", null), e([y()], z2.prototype, "valid", null), e([y()], z2.prototype, "view", null), e([y()], z2.prototype, "getValues", null), e([y()], z2.prototype, "submit", null), z2 = e([a(O4)], z2);
var J2 = z2;

// node_modules/@arcgis/core/widgets/FeatureForm.js
var E = "data-field-name";
var U4 = class extends D {
  constructor(e10, t5) {
    super(e10, t5), this._attemptFocusOnNextRender = false, this._dateComponentMap = /* @__PURE__ */ new Map(), this._inputsWithChanges = /* @__PURE__ */ new Set(), this._focusedFieldName = null, this._listObserverNode = null, this._listObserver = new IntersectionObserver((e11) => {
      e11.length && e11[0].isIntersecting && this._incrementRelatedRecordPage();
    }, { root: window.document }), this.groupDisplay = "all", this.headingLevel = 2, this.messages = null, this.messagesCommon = null, this.messagesFeature = null, this.messagesTemplates = null, this.viewModel = new J2(), this._onShowAllRelatedRecordsClick = (e11) => {
      const { feature: t6, relatedRecordCallbacks: i7 } = this;
      t6 && (i7 == null ? void 0 : i7.showAllRelatedRecords) && i7.showAllRelatedRecords({ parentFeature: t6, relationshipId: e11 });
    }, this._onAddRelatedRecordsClick = (e11, t6) => {
      const { feature: i7, relatedRecordCallbacks: o4 } = this;
      i7 && (o4 == null ? void 0 : o4.addRelatedRecord) && o4.addRelatedRecord({ parentFeature: i7, relatedLayer: t6, relationshipId: e11 });
    }, this._activeCombobox = null, this._activeComboboxClosedByWorkaround = false, this._onFormKeyDown = this._onFormKeyDown.bind(this), this._onFormSubmit = this._onFormSubmit.bind(this), this._onGroupToggle = this._onGroupToggle.bind(this), this._onComponentBlur = this._onComponentBlur.bind(this), this._onComponentFocus = this._onComponentFocus.bind(this), this._onComponentKeyDown = this._onComponentKeyDown.bind(this), this._afterComponentCreate = this._afterComponentCreate.bind(this), this._afterComponentCreateOrUpdate = this._afterComponentCreateOrUpdate.bind(this), this._afterDateComponentCreate = this._afterDateComponentCreate.bind(this), this._afterDateComponentCreateOrUpdate = this._afterDateComponentCreateOrUpdate.bind(this), this._afterRadioGroupCreateOrUpdate = this._afterRadioGroupCreateOrUpdate.bind(this), this._onComboboxOpen = this._onComboboxOpen.bind(this), this._onComboboxClose = this._onComboboxClose.bind(this), this.onScroll = this.onScroll.bind(this);
  }
  initialize() {
    this.addHandles([d(() => this.feature, () => {
      this._inputsWithChanges.clear(), this._dateComponentMap.clear(), w(() => !this.viewModel.updating).then(() => {
        const e10 = this._getFocusableInput("forward");
        this._syncGroupInputStates(), this._focusedFieldName = (e10 == null ? void 0 : e10.name) || null, this._attemptFocusOnNextRender = true;
      });
    }), d(() => this.groupDisplay, () => this._syncGroupInputStates()), this.on("submit", (e10) => {
      if (e10.invalid.length > 0) {
        const [t5] = e10.invalid;
        e10.invalid.forEach((e11) => this._inputsWithChanges.add(e11)), this._focusedFieldName = t5, this._attemptFocusOnNextRender = true, this.scheduleRender();
      }
    }), d(() => [this.viewModel.activeRelationshipInput, this._listObserverNode], () => this._onObserverChange())]);
  }
  loadDependencies() {
    return r3({ block: () => import("./calcite-block-GV6ZWM4U.js"), button: () => import("./calcite-button-V4T5NPWY.js"), combobox: () => import("./calcite-combobox-2DABLAR5.js"), "combobox-item": () => import("./calcite-combobox-item-CJU6ESRT.js"), "combobox-item-group": () => import("./calcite-combobox-item-group-2XDUTAMI.js"), icon: () => import("./calcite-icon-25XWA6H7.js"), input: () => import("./calcite-input-CHG5BNQ7.js"), "input-date-picker": () => import("./calcite-input-date-picker-QVEGEMR6.js"), "input-message": () => import("./calcite-input-message-MUD7QGBO.js"), "input-number": () => import("./calcite-input-number-IGQXKZWP.js"), "input-time-picker": () => import("./calcite-input-time-picker-EVB2HQGH.js"), "input-time-zone": () => import("./calcite-input-time-zone-BCPG4KUK.js"), label: () => import("./calcite-label-W4VTHQAF.js"), list: () => import("./calcite-list-CC3BA3BY.js"), "list-item": () => import("./calcite-list-item-K4SMX7ZK.js"), loader: () => import("./calcite-loader-64JUXTQT.js"), notice: () => import("./calcite-notice-Q2MN4Y4I.js"), "radio-button": () => import("./calcite-radio-button-JGCHQ7DQ.js"), "radio-button-group": () => import("./calcite-radio-button-group-IGITYPZQ.js"), switch: () => import("./calcite-switch-RMLANBR4.js"), "text-area": () => import("./calcite-text-area-7P6CVWG4.js") });
  }
  destroy() {
    this._listObserverNode && this._listObserver.unobserve(this._listObserverNode);
  }
  get _relatedRecordsEnabled() {
    const e10 = this.relatedRecordCallbacks;
    return !(!e10 || !(e10.addRelatedRecord || e10.editRelatedRecord || e10.showAllRelatedRecords));
  }
  get disabled() {
    return this.viewModel.disabled;
  }
  set disabled(e10) {
    this.viewModel.disabled = e10;
  }
  get feature() {
    return this.viewModel.feature;
  }
  set feature(e10) {
    this.viewModel.feature = e10;
  }
  get formTemplate() {
    return this.viewModel.formTemplate;
  }
  set formTemplate(e10) {
    this.viewModel.formTemplate = e10;
  }
  get icon() {
    return "form-field";
  }
  set icon(e10) {
    this._overrideIfSome("icon", e10);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e10) {
    this._overrideIfSome("label", e10);
  }
  get layer() {
    return this.viewModel.layer;
  }
  set layer(e10) {
    this.viewModel.layer = e10;
  }
  get map() {
    return this.viewModel.map;
  }
  set map(e10) {
    this.viewModel.map = e10;
  }
  get relatedRecordCallbacks() {
    return this.viewModel.relatedRecordCallbacks;
  }
  set relatedRecordCallbacks(e10) {
    this.viewModel.relatedRecordCallbacks = e10;
  }
  get relationshipId() {
    return this.viewModel.relationshipId;
  }
  set relationshipId(e10) {
    this.viewModel.relationshipId = e10;
  }
  get spatialReference() {
    return this.viewModel.spatialReference;
  }
  set spatialReference(e10) {
    this.viewModel.spatialReference = e10;
  }
  get strict() {
    return this.viewModel.strict;
  }
  set strict(e10) {
    this.viewModel.strict = e10;
  }
  get timeZone() {
    return this.viewModel.timeZone;
  }
  set timeZone(e10) {
    this.viewModel.timeZone = e10;
  }
  get view() {
    return o(n.getLogger(this), "view", { replacement: "Use FeatureForm.map instead.", version: "4.27" }), this.viewModel.view;
  }
  set view(e10) {
    o(n.getLogger(this), "view", { replacement: "Use FeatureForm.map instead.", version: "4.27" }), this.viewModel.view = e10;
  }
  getValues() {
    return this.viewModel.getValues();
  }
  submit() {
    return this.viewModel.submit();
  }
  render() {
    const { state: e10 } = this.viewModel;
    return n3("div", { class: this.classes(a2.base, e3.widget, e3.panel), onscroll: this.onScroll }, "ready" === e10 ? this._renderForm() : null);
  }
  _renderForm() {
    return n3("form", { class: a2.form, novalidate: true, onkeydown: this._onFormKeyDown, onsubmit: this._onFormSubmit }, this._renderHeader(), this._renderContent());
  }
  _renderHeader() {
    const e10 = this.viewModel;
    if (!e10.formHeaderVisible)
      return;
    const t5 = null != e10.formTitle && n3(e4, { key: "title", level: this.headingLevel }, e10.formTitle), i7 = null != e10.formDescription && n3("p", { class: a2.description, key: "description" }, e10.formDescription);
    return n3("div", { class: a2.formHeader }, t5, i7);
  }
  _renderContent() {
    const { viewModel: e10 } = this;
    return e10.activeRelationshipInput ? this._renderActiveRelationshipInput(e10.activeRelationshipInput) : e10.inputs.filter(k).filter((e11) => e11.visible).map((e11, t5) => c(e11) ? this._renderGroup(e11, t5) : d2(e11) ? this._renderLabeledField(e11) : f2(e11) ? this._renderRelationshipInput(e11) : void 0);
  }
  _renderActiveRelationshipInput(e10) {
    return this._renderRelationshipInput(e10);
  }
  _renderDescriptionOrEmpty(e10, t5) {
    return null == e10 ? null : n3("div", { class: this.classes(a2.description), id: t5 }, e10);
  }
  _renderGroup(e10, t5) {
    const { disabled: i7, formTemplate: o4, headingLevel: n6 } = this, { description: a4, inputs: s2, label: r6, open: l4 } = e10, d4 = s2.filter((e11) => e11.visible), p7 = this.viewModel.findField(this._focusedFieldName), h4 = (p7 == null ? void 0 : p7.group) === e10, v4 = `${this.id}_group_${t5}`, b5 = "sequential" === this.groupDisplay;
    return n3("calcite-block", { class: this.classes(a2.group, b5 ? a2.groupSequential : null, h4 ? a2.groupActive : null, i7 ? a2.inputDisabled : null), collapsible: true, "data-group": e10, description: a4 || void 0, disabled: i7, heading: `${r6}`, headingLevel: (o4 == null ? void 0 : o4.title) ? n5(n6) : n6, id: v4, key: v4, open: l4, onCalciteBlockToggle: ({ target: t6 }) => this._onGroupToggle(t6, e10) }, d4.map((e11) => d2(e11) ? this._renderLabeledField(e11) : f2(e11) ? this._renderRelationshipInput(e11) : void 0));
  }
  _getFocusableInput(e10, t5) {
    const i7 = this.viewModel.allFieldInputs, o4 = "forward" === e10 ? i7 : i7.slice().reverse();
    let n6;
    if (!t5 || f2(t5))
      n6 = 0;
    else if (c(t5)) {
      const e11 = t5.inputs.find(d2);
      n6 = e11 ? o4.indexOf(e11) : 0;
    } else {
      let i8;
      if (y3(t5) && !t5.group.open) {
        const o5 = t5.group.inputs.filter(d2);
        i8 = "forward" === e10 ? o5[o5.length - 1] : o5[0];
      } else
        i8 = t5;
      n6 = o4.indexOf(i8) + 1;
    }
    for (let a4 = n6; a4 < o4.length; a4++) {
      const e11 = o4[a4];
      if (e11.visible && d2(e11))
        return e11;
    }
    return null;
  }
  _renderLabeledField(e10) {
    var _a;
    const { dataType: t5, feature: i7, label: o4, layer: n6, required: a4 } = e10, s2 = { "aria-label": a4 ? s(this.messages.requiredFieldLabel, { name: o4 }) : o4, class: a2.label, key: `${n6.id}-${i7.uid}-${e10.name}` }, r6 = [n3("div", { class: a2.labelTextContent, key: "labelTextContainer" }, o4, a4 ? n3("span", { "aria-hidden": "true", title: this.messagesCommon.required }, "*") : void 0), "unsupported" !== t5 ? this._renderFieldInput(e10) : this._renderReadOnlyComponent(e10), this._renderAuxiliaryText(e10)];
    return "date" === t5 && "coded-value" !== ((_a = e10.domain) == null ? void 0 : _a.type) ? n3("label", { ...s2 }, r6) : n3("calcite-label", { ...s2 }, r6);
  }
  _renderFieldInput(e10) {
    const { dataType: t5, domain: i7, inputType: o4, name: n6 } = e10, a4 = this.getCommonInputProps(e10);
    if ("coded-value" === (i7 == null ? void 0 : i7.type)) {
      const t6 = this.viewModel.getFieldValueOptionsForField(n6, this.messages.empty);
      return "switch" !== o4 || e10.hasInvalidSwitchValue ? "radio-buttons" === o4 ? this._renderRadioButtonComponents(e10, t6.flat(), a4) : this._renderComboBoxComponent(e10, t6, a4) : this._renderSwitchComponent(e10, a4);
    }
    return "datetime-picker" === o4 || "date" === t5 ? this._renderDateComponents(e10, a4) : "number" === t5 ? this._renderNumberComponent(e10, a4) : this._renderStringComponent(e10, a4);
  }
  _renderStringComponent(e10, t5) {
    return "text-area" === e10.inputType ? t5.readOnly ? n3("calcite-input", { ...t5, loading: e10.updating, type: "textarea", onCalciteInputInput: (e11) => this._saveValueFromComponent(e11.target) }) : n3("calcite-text-area", { ...t5, resize: "vertical", onCalciteTextAreaInput: (e11) => this._saveValueFromComponent(e11.target) }) : n3("calcite-input", { ...t5, loading: e10.updating, type: "text", onCalciteInputInput: (e11) => this._saveValueFromComponent(e11.target) });
  }
  _renderNumberComponent(e10, t5) {
    return n3("calcite-input-number", { ...t5, integer: me(e10.field), loading: e10.updating, type: "number", onCalciteInputNumberInput: (e11) => this._saveValueFromComponent(e11.target) });
  }
  _renderDateComponents(e10, t5) {
    const { field: i7 } = e10;
    switch (i7.type) {
      case "date":
        return this._renderDateFieldComponents(e10, t5);
      case "date-only":
        return this._renderDateOnlyFieldComponent(e10, t5);
      case "time-only":
        return this._renderTimeOnlyFieldComponent(e10, t5);
      case "timestamp-offset":
        return this._renderTimestampOffsetFieldComponents(e10, t5);
      default:
        return this._renderReadOnlyComponent(e10, T(i7, t5.value, { timeZone: this.timeZone, ...F(i7) }));
    }
  }
  _renderDateOnlyFieldComponent(e10, t5) {
    const { range: i7, valid: o4, value: n6 } = e10, { class: a4, key: s2, readOnly: r6 } = t5, { rawMax: l4, rawMin: d4 } = i7;
    return n3("calcite-input-date-picker", { afterCreate: this._afterDateComponentCreate, afterUpdate: this._afterDateComponentCreateOrUpdate, "aria-invalid": !o4, class: a4, "data-date-part": "date", "data-field-name": t5[E], key: `${s2}-date-input`, max: t(l4) ? l4 : void 0, min: t(d4) ? d4 : void 0, numberingSystem: w2, onblur: (e11) => {
      this._focusedFieldName = null, this._saveValueFromDateComponent(e11.target);
    }, onfocus: this._onComponentFocus, overlayPositioning: "fixed", readOnly: r6, value: null != n6 ? `${n6}` : void 0, onCalciteInputDatePickerChange: (e11) => this._saveValueFromDateComponent(e11.target) });
  }
  _renderTimeOnlyFieldComponent(e10, t5) {
    const { valid: i7, value: o4 } = e10, { class: n6, key: a4, readOnly: s2 } = t5;
    return n3("calcite-input-time-picker", { afterCreate: this._afterDateComponentCreate, afterUpdate: this._afterDateComponentCreateOrUpdate, "aria-invalid": !i7, class: n6, "data-date-part": "time", "data-field-name": t5[E], key: `${a4}-time-input`, numberingSystem: w2, onblur: (e11) => {
      this._focusedFieldName = null, this._saveValueFromDateComponent(e11.target);
    }, onfocus: this._onComponentFocus, overlayPositioning: "fixed", readOnly: s2, step: e10.timeStep, value: null != o4 ? `${o4}` : void 0, onCalciteInputTimePickerChange: (e11) => this._saveValueFromDateComponent(e11.target) });
  }
  _renderTimestampOffsetFieldComponents(e10, t5) {
    const { name: i7, range: o4, timeZone: n6, valid: a4, value: s2 } = e10, { class: r6, key: l4, readOnly: d4 } = t5, { rawMax: p7, rawMin: u5 } = o4, m3 = { afterCreate: this._afterDateComponentCreate, afterUpdate: this._afterDateComponentCreateOrUpdate, "aria-invalid": !a4, numberingSystem: w2, overlayPositioning: "fixed", readOnly: d4, [E]: i7, onfocus: this._onComponentFocus }, h4 = V(p7, n6), v4 = V(u5, n6), b5 = V(s2, n6);
    return n3("div", { class: a2.dateInputContainer, key: `${l4}-date-time-container` }, n3("calcite-input-date-picker", { ...m3, class: r6, "data-date-part": "date", key: `${l4}-date-input`, max: (h4 == null ? void 0 : h4.date) ?? void 0, min: (v4 == null ? void 0 : v4.date) ?? void 0, onblur: (e11) => {
      this._focusedFieldName = null, this._saveValueFromDateComponent(e11.target);
    }, value: b5.date ?? void 0, onCalciteInputDatePickerChange: (e11) => this._saveValueFromDateComponent(e11.target) }), n3("calcite-input-time-picker", { ...m3, class: r6, "data-date-part": "time", key: `${l4}-time-input`, onblur: (e11) => {
      this._focusedFieldName = null, this._saveValueFromDateComponent(e11.target);
    }, step: e10.timeStep, value: b5.time ?? void 0, onCalciteInputTimePickerChange: (e11) => this._saveValueFromDateComponent(e11.target) }), e10.includeTimeOffset ? n3("calcite-input-time-zone", { ...m3, class: r6, "data-date-part": "timeZone", disabled: d4, key: `${l4}-timezone-input`, onblur: (e11) => {
      this._focusedFieldName = null, this._saveValueFromDateComponent(e11.target);
    }, value: b5.timeZoneOffset ?? "0", onCalciteInputTimeZoneChange: (e11) => this._saveValueFromDateComponent(e11.target) }) : null);
  }
  _renderDateFieldComponents(e10, t5) {
    const { includeTime: i7, name: o4, valid: n6, value: a4 } = e10, { class: s2, key: r6, max: l4, min: d4, readOnly: p7 } = t5, { timeZone: u5 } = this, m3 = { afterCreate: this._afterDateComponentCreate, afterUpdate: this._afterDateComponentCreateOrUpdate, "aria-invalid": !n6, numberingSystem: w2, overlayPositioning: "fixed", readOnly: p7, [E]: o4, onfocus: this._onComponentFocus }, h4 = I(a4, u5), v4 = I(l4, u5), b5 = I(d4, u5);
    return n3("div", { class: a2.dateInputContainer, key: `${r6}-date-time-container` }, n3("calcite-input-date-picker", { ...m3, class: s2, "data-date-part": "date", key: `${r6}-date-input`, max: (v4 == null ? void 0 : v4.date) ?? void 0, min: (b5 == null ? void 0 : b5.date) ?? void 0, onblur: (e11) => {
      this._focusedFieldName = null, this._saveValueFromDateComponent(e11.target);
    }, value: h4.date ?? void 0, onCalciteInputDatePickerChange: (e11) => this._saveValueFromDateComponent(e11.target) }), i7 ? n3("calcite-input-time-picker", { ...m3, class: s2, "data-date-part": "time", key: `${r6}-time-input`, onblur: (e11) => {
      this._focusedFieldName = null, this._saveValueFromDateComponent(e11.target);
    }, step: 1, value: h4.time ?? void 0, onCalciteInputTimePickerChange: (e11) => this._saveValueFromDateComponent(e11.target) }) : null);
  }
  _renderReadOnlyComponent(e10, t5) {
    const i7 = this.getCommonInputProps(e10);
    return n3("calcite-input", { ...i7, class: this.classes(a2.fieldInput, a2.inputDisabled), readOnly: true, type: "text", value: null != t5 ? `${t5}` : i7.value });
  }
  _renderComboBoxComponent(e10, t5, i7) {
    const { value: o4, name: n6 } = e10, { messages: a4, messagesTemplates: s2, viewModel: r6, _inputsWithChanges: l4 } = this, d4 = t5.map((e11) => e11.map(({ name: e12, value: t6 }) => n3("calcite-combobox-item", { key: `#${t6}`, selected: o4 === t6, textLabel: e12, value: `${t6}` }))), [c4, p7] = d4;
    this.viewModel.fieldsWithInvalidCodedValue.has(e10) && p7.unshift(n3("calcite-combobox-item", { key: "incompatible-option", readOnly: true, textLabel: `${e10.value}`, value: `${e10.value}` }));
    const u5 = p7.length > 0 ? [n3("calcite-combobox-item-group", { key: "recommended", label: a4.recommended }, c4), n3("calcite-combobox-item-group", { key: "other", label: s2.other }, p7)] : c4, m3 = "INSERT" === r6.arcadeEditType, h4 = l4.has(n6), v4 = null == o4 && (!m3 || h4);
    e10.showNoValueOptionEnabled && u5.unshift(n3("calcite-combobox-item", { key: "empty-option", selected: v4, textLabel: e10.showNoValueLabel || a4.empty, value: "" }));
    const b5 = m3 && e10.showNoValueOptionEnabled && !h4 ? () => {
    } : i7.onblur;
    return n3("calcite-combobox", { ...i7, allowCustomValues: false, clearDisabled: true, disabled: i7.readOnly, onblur: b5, overlayPositioning: "fixed", selectionMode: "single", onCalciteComboboxBeforeOpen: this._onComboboxOpen, onCalciteComboboxChange: ({ target: e11 }) => {
      v4 && 0 === e11.selectedItems.length ? this._ignoreDeselectionOfNoValueOption(e11) : this._saveValueFromComponent(e11);
    }, onCalciteComboboxClose: this._onComboboxClose }, u5);
  }
  _renderRadioButtonComponents(e10, t5, i7) {
    const { name: o4, value: n6 } = e10, a4 = t5.map(({ name: e11, value: t6 }) => this._renderRadioButtonComponent({ key: e11, label: e11, name: o4, value: t6, selected: t6 === n6, props: i7 }));
    if (e10.showNoValueOptionEnabled) {
      const t6 = "", s2 = e10.showNoValueLabel || this.messages.empty, r6 = n6 === t6 || null === n6;
      a4.unshift(this._renderRadioButtonComponent({ key: "empty-option", label: s2, name: o4, value: t6, selected: r6, props: i7 }));
    }
    return n3("calcite-radio-button-group", { afterCreate: this._afterRadioGroupCreateOrUpdate, afterUpdate: this._afterRadioGroupCreateOrUpdate, class: a2.inputRadioGroup, "data-field-name": i7[E], key: `${i7.key}-radio-group`, layout: "vertical", name: i7.key, required: i7.required }, a4);
  }
  _renderSwitchComponent(e10, t5) {
    const { value: i7 } = e10, o4 = !!v2(e10.element, "switch") && i7 === e10.element.input.onValue;
    return n3("calcite-switch", { ...t5, checked: o4, class: a2.inputSwitch, disabled: t5.readOnly, onblur: () => {
      this._focusedFieldName = null;
    }, onCalciteSwitchChange: (e11) => this._saveValueFromComponent(e11.target) });
  }
  _renderRadioButtonComponent({ key: e10, name: t5, value: i7, selected: o4, label: n6, props: a4 }) {
    return n3("calcite-label", { class: a2.inputRadioLabel, key: e10, layout: "inline" }, n3("calcite-radio-button", { ...a4, afterCreate: void 0, afterUpdate: void 0, checked: o4, class: a2.inputRadio, disabled: a4.readOnly, name: t5, onblur: () => {
      this._focusedFieldName = null;
    }, value: i7, onCalciteRadioButtonChange: ({ target: e11 }) => {
      e11.checked && this._saveValueFromComponent(e11);
    } }), n6);
  }
  _renderAuxiliaryText(e10) {
    const t5 = e10.name, i7 = this._inputsWithChanges.has(t5) && !e10.valid ? S2(e10, this.messages, this.timeZone) : null != this.viewModel.contingencyConstraintViolations.get(t5) ? this.messages.validationErrors.valuesIncompatible : null != e10.valueExpressionExecutor && e10.valueExpressionExecutor.stale ? this.messages.valueExpressionError : null;
    return null != i7 ? n3("calcite-input-message", { icon: true, status: "invalid" }, i7) : this._renderDescriptionOrEmpty(e10.description);
  }
  _renderShowAllRelatedRecordsListItem(e10) {
    const { featureCount: t5, relationshipId: i7, showAllActionVisible: o4 } = e10, { relatedRecordCallbacks: n6 } = this;
    if (!o4 || !(n6 == null ? void 0 : n6.showAllRelatedRecords))
      return;
    const a4 = this.messages;
    return n3("calcite-list-item", { description: s(a4.totalCount, { count: t5 }), label: a4.showAll, value: true, onCalciteListItemSelect: () => this._onShowAllRelatedRecordsClick(i7) }, n3("calcite-icon", { icon: "list", scale: "s", slot: "content-end" }));
  }
  _renderAddRelatedRecordButton(e10) {
    const { canAddRelatedFeature: t5, relationshipId: i7, relatedLayer: o4 } = e10, { messages: n6, relatedRecordCallbacks: a4 } = this;
    if (t5 && (a4 == null ? void 0 : a4.addRelatedRecord) && o4)
      return n3("calcite-button", { alignment: "center", appearance: "outline-fill", class: a2.centeredButton, disabled: e10.updating || !e10.originHasValidKey, iconStart: "plus", key: `${i7}-add-button`, onclick: () => {
        !e10.updating && e10.originHasValidKey && this._onAddRelatedRecordsClick(i7, o4);
      }, round: true, scale: "s", width: "half" }, e10.relatedLayerIsTable ? n6.addRecord : n6.addFeature);
  }
  _renderRelatedRecordListItem(e10, t5) {
    const { feature: i7, description: o4, title: n6 } = e10, { feature: a4, relatedRecordCallbacks: s2 } = this, { highlightHelper: r6 } = this.viewModel, l4 = () => {
      r6 == null ? void 0 : r6.removeAll(), (s2 == null ? void 0 : s2.editRelatedRecord) && a4 && s2.editRelatedRecord({ parentFeature: a4, relationshipId: t5, relatedFeature: i7 });
    }, d4 = r6 ? () => r6.add(i7) : void 0, c4 = r6 ? () => r6.remove(i7) : void 0;
    return n3("calcite-list-item", { bind: this, description: o4, key: `${t5}-${i7.uid}`, label: n6, onclick: l4, onmouseenter: d4, onmouseleave: c4, value: n6 }, n3("calcite-icon", { icon: M(i7), slot: "content-start" }), n3("calcite-icon", { icon: "chevron-right", scale: "s", slot: "content-end" }));
  }
  _renderRelationshipInput(e10) {
    if (!this._relatedRecordsEnabled || !e10.editable)
      return;
    const { featureCount: t5, relationshipId: i7, showAllEnabled: o4 } = e10, n6 = o4 ? null : this._renderDescriptionOrEmpty(e10.description), a4 = t5 > 0 ? this._renderRelatedRecordsList(e10) : e10.loaded ? e10.originHasValidKey ? this._renderNoRelatedRecordsNotice() : this._renderNoValidOriginKeyNotice(e10) : void 0;
    return n3("calcite-label", { class: this.classes(a2.label, a2.relatedRecordsLabel), key: `relationship-${i7}-container` }, n3("div", null, this._renderRelatedRecordsHeaderContainer(e10), n6, a4), this._renderAddRelatedRecordButton(e10));
  }
  _renderRelatedRecordsHeaderContainer(e10) {
    var _a;
    const t5 = e10.updating || !e10.loaded;
    return n3("div", { class: a2.relatedRecordsHeader, key: `relationship-${e10.relationshipId}-header` }, n3("span", null, e10.label), t5 ? n3("calcite-loader", { inline: true, key: "loader", label: (_a = this.messagesCommon) == null ? void 0 : _a.loading, scale: "s", type: "indeterminate" }) : void 0);
  }
  _renderRelatedRecordsList(e10) {
    const { relationshipId: t5 } = e10;
    return n3("calcite-list", { class: a2.relatedRecordsList }, e10.relatedFeatureInfos.map((e11) => this._renderRelatedRecordListItem(e11, t5)), this._renderShowAllRelatedRecordsListItem(e10), this._renderObserverNode());
  }
  _renderNoValidOriginKeyNotice(e10) {
    var _a, _b, _c;
    const { messages: t5 } = this, i7 = e10.relatedLayerIsTable ? t5.noOriginKeyRecord : t5.noOriginKeyFeature, o4 = (_a = e10.relationship) == null ? void 0 : _a.keyField, n6 = this.viewModel.findField(o4), a4 = (_b = e10.layer) == null ? void 0 : _b.fieldsIndex.get(o4), s2 = (n6 == null ? void 0 : n6.label) || (a4 == null ? void 0 : a4.alias) || o4, r6 = s(i7, { relatedLayerName: (_c = e10.relatedLayer) == null ? void 0 : _c.title, originKeyField: s2 });
    return n3("calcite-notice", { icon: "information", kind: "brand", open: true, scale: "s", width: "full" }, n3("div", { slot: "message" }, r6));
  }
  _renderNoRelatedRecordsNotice() {
    return n3("calcite-notice", { icon: "information", kind: "brand", open: true, scale: "s", width: "full" }, n3("div", { slot: "message" }, this.messagesFeature.noRelatedFeatures));
  }
  _renderObserverNode() {
    var _a;
    if ((_a = this.viewModel.activeRelationshipInput) == null ? void 0 : _a.showAllEnabled)
      return n3("div", { afterCreate: this._afterListObserverCreated, afterRemoved: this._afterListObserverRemoved, bind: this, class: a2.listObserver, key: "feature-observer" });
  }
  getCommonInputProps(e10) {
    const { disabled: t5 } = this, { editable: i7, hint: o4, label: n6, maxLength: a4, minLength: s2, name: r6, range: { max: l4, min: d4 }, required: p7, valid: u5, value: m3 } = e10, h4 = this._inputsWithChanges.has(r6), v4 = !i7 || t5;
    return { afterCreate: this._afterComponentCreate, afterUpdate: this._afterComponentCreateOrUpdate, "aria-invalid": u5 ? "false" : "true", class: this.classes(a2.fieldInput, v4 ? a2.inputDisabled : null, h4 && !u5 ? a2.inputInvalid : null), key: r6, label: n6, max: null != l4 ? l4 : void 0, min: null != d4 ? d4 : void 0, maxLength: a4 > -1 ? a4 : void 0, minLength: s2 > -1 ? s2 : void 0, placeholder: o4 ?? void 0, readOnly: v4, required: p7, value: null == m3 ? "" : `${m3}`, onblur: this._onComponentBlur, onfocus: this._onComponentFocus, onkeydown: this._onComponentKeyDown, [E]: r6 };
  }
  _getFieldInputFromHTMLElement(e10) {
    return this.viewModel.findField(e10.getAttribute(E));
  }
  _afterDateComponentCreate(e10) {
    const t5 = this._getFieldInputFromHTMLElement(e10), i7 = e10.dataset.datePart, o4 = this._dateComponentMap.get(t5.name);
    if ("valueAsDate" in e10 && null != e10.value) {
      const t6 = e10.value, i8 = new ResizeObserver(() => {
        e10.value = void 0, e10.value = t6, i8.unobserve(e10);
      });
      i8.observe(e10);
    }
    if (null != o4)
      switch (i7) {
        case "date":
          o4.date = e10;
          break;
        case "time":
          o4.time = e10;
          break;
        case "timeZone":
          o4.timeZone = e10;
      }
    else
      this._dateComponentMap.set(t5.name, { [i7]: e10 });
    this._afterDateComponentCreateOrUpdate(e10);
  }
  _afterDateComponentCreateOrUpdate(e10) {
    this._afterComponentCreateOrUpdate(e10);
  }
  _afterComponentCreate(e10) {
    const t5 = this._getFieldInputFromHTMLElement(e10);
    U2(t5) && null != e10.value && "setNumberValue" in e10 && e10.setNumberValue({ committing: false, value: e10.value, origin: "direct" }), this._afterComponentCreateOrUpdate(e10);
  }
  _afterRadioGroupCreateOrUpdate(e10) {
    const t5 = e10.selectedItem, i7 = e10.querySelector("calcite-radio-button"), o4 = t5 || i7;
    o4 && this._afterComponentCreateOrUpdate(o4);
  }
  _afterComponentCreateOrUpdate(e10) {
    const { viewModel: t5 } = this, i7 = this._getFieldInputFromHTMLElement(e10), o4 = t5.findField(this._focusedFieldName);
    this._attemptFocusOnNextRender && o4 === i7 && (this._attemptFocusOnNextRender = false, y3(i7) && (i7.group.open = true), e10.setFocus());
  }
  _onComponentFocus(e10) {
    const t5 = e10.target, i7 = this._getFieldInputFromHTMLElement(t5);
    this._focusedFieldName = i7.name;
  }
  _onComponentBlur(e10) {
    const t5 = e10.target;
    this._focusedFieldName = null, this._saveValueFromComponent(t5);
  }
  _saveValueFromDateComponent(e10) {
    const { timeZone: t5 } = this, i7 = this._getFieldInputFromHTMLElement(e10), o4 = i7.field.type, { name: n6, range: a4 } = i7, s2 = this._dateComponentMap.get(n6);
    if (!s2)
      return;
    let r6 = this.viewModel.getValue(n6), l4 = null;
    "date-only" === o4 ? l4 = e10.value : "time-only" === o4 ? (r6 = z(r6), l4 = z(e10.value)) : l4 = "timestamp-offset" === o4 ? null != e10.value ? b2({ dateComponent: s2.date, timeComponent: s2.time, timeZoneComponent: s2.timeZone, oldValue: r6, defaultTimeZone: t5 }) : null : null != e10.value ? C({ oldValue: r6, dateComponent: s2.date, timeComponent: s2.time, timeZone: t5, max: a4.max, min: a4.min }) : null, null !== l4 && e10.value ? r6 !== l4 && this._updateFieldValue(n6, l4) : this._updateFieldValue(n6, null);
  }
  _saveValueFromComponent(e10) {
    const t5 = this._getFieldInputFromHTMLElement(e10);
    this._updateFieldValue(t5.name, this._parseValue(e10));
  }
  _onComponentKeyDown({ key: e10, target: t5 }) {
    const i7 = this._getFieldInputFromHTMLElement(t5);
    "Enter" === e10 && y3(i7) && !i7.group.open && (i7.group.open = true);
  }
  _updateFieldValue(e10, t5) {
    if (this.viewModel.setValue(e10, t5), this._inputsWithChanges.add(e10), this.viewModel.fieldsWithContingentValues.has(e10)) {
      const e11 = Object.fromEntries(Object.entries(this.getValues()).filter(([e12, t6]) => null != t6));
      this.viewModel.validateContingencyConstraints(e11);
    }
  }
  _parseValue(e10) {
    const t5 = this._getFieldInputFromHTMLElement(e10), i7 = e10.value;
    return v2(t5.element, "switch") ? e10.checked ? t5.element.input.onValue : t5.element.input.offValue : null == i7 || "" === i7 ? null : "number" === t5.dataType ? "-0" === i7 || "-0." === i7 || "-0," === i7 ? i7 : parseFloat(i7) : "date" === t5.field.type ? parseFloat(i7) : i7;
  }
  _ignoreDeselectionOfNoValueOption(e10) {
    const { firstChild: t5, selectedItems: i7 } = e10;
    0 === i7.length && t5 && "selected" in t5 ? t5.selected = true : n.getLogger(this).warnOnce("Failed to override user attempt to deselect 'No value' option.");
  }
  _onGroupToggle(e10, t5) {
    var _a;
    e10.open ? (t5.open = true, this._focusedFieldName = ((_a = this._getFocusableInput("forward", t5)) == null ? void 0 : _a.name) || null, this._attemptFocusOnNextRender = true, "sequential" === this.groupDisplay && this.viewModel.allGroupInputs.forEach((e11) => {
      e11 !== t5 && (e11.open = false);
    })) : t5.open = false, this.scheduleRender();
  }
  _onFormSubmit(e10) {
    e10.preventDefault();
  }
  _onFormKeyDown(e10) {
    "Enter" === e10.key && this.viewModel.submit();
  }
  _afterListObserverCreated(e10) {
    this.viewModel.activeRelationshipInput && (this._listObserverNode = e10);
  }
  _afterListObserverRemoved() {
    this._listObserverNode = null;
  }
  _onObserverChange() {
    this._listObserverNode && this._listObserver.unobserve(this._listObserverNode);
    const e10 = this.viewModel.activeRelationshipInput;
    e10 && this._listObserverNode && e10.showAllEnabled && this._listObserver.observe(this._listObserverNode);
  }
  _incrementRelatedRecordPage() {
    const e10 = this.viewModel.activeRelationshipInput;
    e10 == null ? void 0 : e10.incrementPage();
  }
  _syncGroupInputStates() {
    if ("sequential" !== this.groupDisplay)
      return;
    const e10 = this.viewModel.allGroupInputs;
    if (!e10.length)
      return;
    const t5 = e10.filter((e11) => e11.open);
    0 === t5.length ? e10[0].open = true : t5.length > 1 && t5.slice(1).forEach((e11) => e11.open = false);
  }
  _onComboboxClose(e10) {
    this._activeComboboxClosedByWorkaround || this._activeCombobox !== e10.target || (this._activeCombobox = null);
  }
  _onComboboxOpen(e10) {
    this._activeComboboxClosedByWorkaround = false, this._activeCombobox = e10.target;
  }
  onScroll(e10) {
    if (this._activeCombobox) {
      const t5 = this._activeCombobox.getBoundingClientRect(), i7 = e10.target.getBoundingClientRect();
      t5.bottom > i7.bottom ? (this._activeComboboxClosedByWorkaround = true, this._activeCombobox.open = false) : (this._activeComboboxClosedByWorkaround && (this._activeCombobox.open = true, this._activeComboboxClosedByWorkaround = false), this._activeCombobox.reposition());
    }
  }
};
e([y()], U4.prototype, "_listObserverNode", void 0), e([y()], U4.prototype, "_relatedRecordsEnabled", null), e([y()], U4.prototype, "disabled", null), e([y()], U4.prototype, "feature", null), e([y()], U4.prototype, "formTemplate", null), e([y()], U4.prototype, "groupDisplay", void 0), e([y()], U4.prototype, "headingLevel", void 0), e([y()], U4.prototype, "icon", null), e([y()], U4.prototype, "label", null), e([y()], U4.prototype, "layer", null), e([y()], U4.prototype, "map", null), e([y(), e2("esri/widgets/FeatureForm/t9n/FeatureForm")], U4.prototype, "messages", void 0), e([y(), e2("esri/t9n/common")], U4.prototype, "messagesCommon", void 0), e([y(), e2("esri/widgets/Feature/t9n/Feature")], U4.prototype, "messagesFeature", void 0), e([y(), e2("esri/widgets/FeatureTemplates/t9n/FeatureTemplates")], U4.prototype, "messagesTemplates", void 0), e([y()], U4.prototype, "relatedRecordCallbacks", null), e([y()], U4.prototype, "relationshipId", null), e([y()], U4.prototype, "spatialReference", null), e([y()], U4.prototype, "strict", null), e([y()], U4.prototype, "timeZone", null), e([y()], U4.prototype, "view", null), e([y(), e5(["value-change", "submit"])], U4.prototype, "viewModel", void 0), U4 = e([a("esri.widgets.FeatureForm")], U4);
var $2 = U4;

export {
  J2 as J,
  $2 as $
};
//# sourceMappingURL=chunk-WU7QPFL3.js.map
