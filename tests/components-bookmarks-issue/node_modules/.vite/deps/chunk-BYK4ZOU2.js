import {
  i
} from "./chunk-R4CJB3GP.js";
import {
  o
} from "./chunk-TGXFDJCS.js";
import {
  m
} from "./chunk-6CWL7BCV.js";
import {
  i as i2
} from "./chunk-RUN6MNXL.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";

// node_modules/@arcgis/core/portal/timeUnitKebabDictionary.js
var e2 = i2()({ esriTimeUnitsMilliseconds: "milliseconds", esriTimeUnitsSeconds: "seconds", esriTimeUnitsMinutes: "minutes", esriTimeUnitsHours: "hours", esriTimeUnitsDays: "days", esriTimeUnitsWeeks: "weeks", esriTimeUnitsMonths: "months", esriTimeUnitsYears: "years", esriTimeUnitsDecades: "decades", esriTimeUnitsCenturies: "centuries", esriTimeUnitsUnknown: void 0 });

// node_modules/@arcgis/core/TimeInterval.js
var m2 = class extends i(f) {
  constructor(o2) {
    super(o2), this.unit = "milliseconds", this.value = 0;
  }
  toMilliseconds() {
    return m(this.value, this.unit, "milliseconds");
  }
};
e([o(e2, { nonNullable: true })], m2.prototype, "unit", void 0), e([y({ type: Number, json: { write: true }, nonNullable: true })], m2.prototype, "value", void 0), m2 = e([a("esri.TimeInterval")], m2);
var l = m2;

export {
  e2 as e,
  l
};
//# sourceMappingURL=chunk-BYK4ZOU2.js.map
