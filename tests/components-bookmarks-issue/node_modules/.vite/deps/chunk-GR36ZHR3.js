import {
  u
} from "./chunk-LRSI5HZ3.js";
import {
  l
} from "./chunk-BSYULFZQ.js";
import {
  s as s3
} from "./chunk-QX66UTIR.js";
import {
  c
} from "./chunk-I5RCKVDX.js";
import {
  o
} from "./chunk-YOPMY6TS.js";
import {
  r
} from "./chunk-VIN55KNF.js";
import {
  s as s2
} from "./chunk-IOB3DJMR.js";
import {
  f
} from "./chunk-SBL4URUW.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a2,
  d
} from "./chunk-I2RC5KWA.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import {
  a,
  n2 as n,
  s
} from "./chunk-7RBRCL6S.js";

// node_modules/@arcgis/core/webmap/Bookmark.js
var y2;
var d2 = y2 = class extends s3(f) {
  constructor(t) {
    super(t), this.name = null, this.thumbnail = new u(), this.timeExtent = null;
  }
  castThumbnail(t) {
    return "string" == typeof t ? new u({ url: t }) : d(u, t);
  }
  set viewpoint(t) {
    const { targetGeometry: e2, scale: o2 } = t;
    null != e2 && "point" === e2.type && null == o2 && n.getLogger(this).warn("Bookmark.viewpoint should include 'scale' when its targetGeometry is a point.", t), this._set("viewpoint", t);
  }
  readViewpoint(t, e2) {
    const { extent: r2, viewpoint: i } = e2;
    return l.fromJSON(i || { targetGeometry: r2 });
  }
  writeViewpoint(t, e2, o2, i) {
    if (!t)
      return;
    const { targetGeometry: n2 } = t;
    if (null == n2 || "extent" === n2.type)
      null != n2 && (e2.extent = n2.toJSON()), e2[o2] = t.toJSON();
    else {
      const t2 = "Bookmark.viewpoint cannot be written to JSON when the viewpoint's targetGeometry is not an extent.";
      (i == null ? void 0 : i.messages) ? i.messages.push(new s("property:unsupported", t2)) : n.getLogger(this).error(t2);
    }
  }
  clone() {
    return new y2(a({ name: this.name, thumbnail: this.thumbnail, timeExtent: this.timeExtent, viewpoint: this.viewpoint }));
  }
};
e([y({ type: String, nonNullable: true, json: { write: { isRequired: true } } })], d2.prototype, "name", void 0), e([y({ type: u, json: { write: { overridePolicy: (t) => ({ enabled: !(!t || !t.url) }) } } })], d2.prototype, "thumbnail", void 0), e([s2("thumbnail")], d2.prototype, "castThumbnail", null), e([y({ type: c, json: { write: true } })], d2.prototype, "timeExtent", void 0), e([y({ type: l, nonNullable: true, json: { write: true } })], d2.prototype, "viewpoint", null), e([o("viewpoint", ["extent", "viewpoint"])], d2.prototype, "readViewpoint", null), e([r("viewpoint")], d2.prototype, "writeViewpoint", null), d2 = y2 = e([a2("esri.webmap.Bookmark")], d2);
var f2 = d2;

export {
  f2 as f
};
//# sourceMappingURL=chunk-GR36ZHR3.js.map
