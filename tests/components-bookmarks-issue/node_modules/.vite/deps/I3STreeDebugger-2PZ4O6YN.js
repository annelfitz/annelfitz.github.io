import {
  d
} from "./chunk-NXOQIUV7.js";
import {
  e as e2
} from "./chunk-N5GQOIDP.js";
import "./chunk-QYC3GV65.js";
import "./chunk-ETHGDNE6.js";
import "./chunk-X2GCSX3A.js";
import {
  _
} from "./chunk-HWHMO3CO.js";
import "./chunk-QX66UTIR.js";
import "./chunk-ZIJHDTB7.js";
import "./chunk-ZU6I4R6T.js";
import "./chunk-JI3AZJ7K.js";
import "./chunk-A5Q7MMP6.js";
import "./chunk-326OSIM5.js";
import "./chunk-R4CJB3GP.js";
import "./chunk-HTKSTTSR.js";
import "./chunk-6IED7TER.js";
import "./chunk-X7VSXJWW.js";
import "./chunk-VEODBKUJ.js";
import "./chunk-AG6JXA4M.js";
import "./chunk-B647DRFJ.js";
import "./chunk-PJNK3TLV.js";
import "./chunk-J7AMTUNG.js";
import "./chunk-G5EVVNIJ.js";
import "./chunk-HU5IGOTI.js";
import "./chunk-C24MEKSO.js";
import "./chunk-WDPG5BMO.js";
import "./chunk-TGXFDJCS.js";
import "./chunk-BOAEEYBE.js";
import "./chunk-VBUVOOM6.js";
import "./chunk-UMXV3EBO.js";
import "./chunk-ONK5AE7R.js";
import "./chunk-CZSTCON2.js";
import {
  n as n2
} from "./chunk-GBF2OQAY.js";
import "./chunk-WNNYD62G.js";
import {
  j
} from "./chunk-HV6S3GY2.js";
import "./chunk-IGR2BTWR.js";
import "./chunk-C7NPPGFR.js";
import "./chunk-ZPYA32PH.js";
import "./chunk-OCF7OAES.js";
import {
  O,
  r
} from "./chunk-JZBR4X6W.js";
import {
  n
} from "./chunk-OIJCMME5.js";
import "./chunk-4KLYOMH2.js";
import "./chunk-C62RZQQX.js";
import "./chunk-6Z6C6JVV.js";
import "./chunk-QLL2YG25.js";
import "./chunk-Z2PDA67N.js";
import "./chunk-IZKCZQUY.js";
import "./chunk-M5ZB5S5C.js";
import "./chunk-MBGZKT2Z.js";
import "./chunk-UWQ3OYA5.js";
import "./chunk-ORO4D3FB.js";
import "./chunk-YOPMY6TS.js";
import "./chunk-VIN55KNF.js";
import "./chunk-NIDZ6R4E.js";
import "./chunk-IOB3DJMR.js";
import "./chunk-BPRXWDBO.js";
import "./chunk-7MT4ACA4.js";
import "./chunk-RUN6MNXL.js";
import "./chunk-SAYWXQVM.js";
import "./chunk-SBL4URUW.js";
import "./chunk-Z4Y53NDM.js";
import "./chunk-PVUNFEWX.js";
import "./chunk-TXBMNSNF.js";
import "./chunk-BVQWKK2V.js";
import "./chunk-D25BO7X7.js";
import {
  y2 as y
} from "./chunk-NDIXNREV.js";
import {
  a3 as a
} from "./chunk-I2RC5KWA.js";
import "./chunk-SSFWZSUM.js";
import {
  e
} from "./chunk-2F6FFF5T.js";
import "./chunk-C26KUZ46.js";
import "./chunk-JGDJR5EV.js";
import "./chunk-QHK5ZYFW.js";
import "./chunk-L65HKN25.js";
import "./chunk-7RBRCL6S.js";
import {
  k
} from "./chunk-J2EGIWT6.js";
import "./chunk-Z4ZPL3B3.js";

// node_modules/@arcgis/core/views/3d/layers/support/I3STreeDebugger.js
var u = class extends d {
  constructor(e3) {
    super(e3);
  }
  getTiles() {
    const e3 = this.lv.getVisibleNodes(), o = this.view.renderSpatialReference, s = this.nodeSR;
    return e3.map((e4) => f(e4, o, s)).filter(k).sort((e4, r2) => e4.lij[0] === r2.lij[0] ? e4.label > r2.label ? -1 : 1 : e4.lij[0] - r2.lij[0]);
  }
};
function f(e3, r2, o) {
  const s = e3.serviceObbInIndexSR;
  if (null == s || null == r2)
    return null;
  _(h, s.quaternion), r(j2, s.center), n2(j2, o, 0, j2, r2, 0, 1), h[12] = j2[0], h[13] = j2[1], h[14] = j2[2];
  const i = [[], [], []];
  O(j2, s.halfSize, h), n2(j2, r2, 0, j2, o, 0, 1), i[0].push([j2[0], j2[1]]), r(j2, s.halfSize), j2[0] = -j2[0], O(j2, j2, h), n2(j2, r2, 0, j2, o, 0, 1), i[0].push([j2[0], j2[1]]), r(j2, s.halfSize), j2[0] = -j2[0], j2[1] = -j2[1], O(j2, j2, h), n2(j2, r2, 0, j2, o, 0, 1), i[0].push([j2[0], j2[1]]), r(j2, s.halfSize), j2[1] = -j2[1], O(j2, j2, h), n2(j2, r2, 0, j2, o, 0, 1), i[0].push([j2[0], j2[1]]), i[1].push(i[0][0]), i[1].push(i[0][1]), r(j2, s.halfSize), j2[0] = -j2[0], j2[2] = -j2[2], O(j2, j2, h), n2(j2, r2, 0, j2, o, 0, 1), i[1].push([j2[0], j2[1]]), r(j2, s.halfSize), j2[2] = -j2[2], O(j2, j2, h), n2(j2, r2, 0, j2, o, 0, 1), i[1].push([j2[0], j2[1]]), i[2].push(i[0][0]), i[2].push(i[0][3]), r(j2, s.halfSize), j2[1] = -j2[1], j2[2] = -j2[2], O(j2, j2, h), n2(j2, r2, 0, j2, o, 0, 1), i[2].push([j2[0], j2[1]]), i[2].push(i[1][3]);
  const c = new j({ rings: i, spatialReference: o });
  return { lij: [e3.level, e3.childCount, 0], label: e3.id, geometry: c };
}
e([y({ constructOnly: true })], u.prototype, "lv", void 0), e([y({ constructOnly: true })], u.prototype, "nodeSR", void 0), u = e([a("esri.views.3d.layers.support.I3STreeDebugger")], u);
var h = e2();
var j2 = n();
export {
  u as I3STreeDebugger
};
//# sourceMappingURL=I3STreeDebugger-2PZ4O6YN.js.map
