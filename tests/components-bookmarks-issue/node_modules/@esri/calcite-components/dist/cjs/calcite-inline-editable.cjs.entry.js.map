{"file":"calcite-inline-editable.entry.cjs.js","mappings":"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","names":["createObserver","connectInteractive","connectLabel","connectLocalized","connectMessages","setUpLoadableComponent","setUpMessages","setComponentLoaded","disconnectInteractive","disconnectLabel","disconnectLocalized","disconnectMessages","updateHostInteraction","h","InteractiveContainer","updateMessages","componentFocusable","getSlotted","getLabelText"],"sources":["src/components/inline-editable/resources.ts","src/components/inline-editable/inline-editable.scss?tag=calcite-inline-editable&encapsulation=shadow","src/components/inline-editable/inline-editable.tsx"],"sourcesContent":["export const CSS = {\n  wrapper: \"wrapper\",\n  confirmChangesButton: \"confirm-changes-button\",\n  cancelEditingButton: \"cancel-editing-button\",\n  inputWrapper: \"input-wrapper\",\n  cancelEditingButtonWrapper: \"cancel-editing-button-wrapper\",\n  enableEditingButton: \"enable-editing-button\",\n  controlsWrapper: \"controls-wrapper\",\n};\n",":host {\n  @apply block;\n}\n\n:host([scale=\"s\"]) {\n  .controls-wrapper {\n    @apply h-6;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .controls-wrapper {\n    @apply h-8;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .controls-wrapper {\n    @apply h-11;\n  }\n}\n\n:host(:not([editing-enabled]):not([disabled])) {\n  .wrapper {\n    &:hover {\n      @apply bg-foreground-2;\n    }\n  }\n}\n\n.wrapper {\n  @apply bg-foreground-1\n    transition-default\n    box-border\n    flex\n    justify-between;\n\n  .input-wrapper {\n    @apply flex-1;\n  }\n}\n\n.controls-wrapper {\n  @apply flex;\n}\n\n@include disabled() {\n  .cancel-editing-button-wrapper {\n    @apply border-color-2;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { getSlotted } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Scale } from \"../interfaces\";\nimport { InlineEditableMessages } from \"./assets/inline-editable/t9n\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding a `calcite-input`.\n */\n@Component({\n  tag: \"calcite-inline-editable\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  styleUrl: \"inline-editable.scss\",\n  assetsDirs: [\"assets\"],\n})\nexport class InlineEditable\n  implements\n    InteractiveComponent,\n    LabelableComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Props\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(disabled: boolean): void {\n    if (this.inputElement) {\n      this.inputElement.disabled = disabled;\n    }\n  }\n\n  /**\n   * When `true`, inline editing is enabled on the component.\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  @Watch(\"editingEnabled\")\n  editingEnabledWatcher(newValue: boolean, oldValue: boolean): void {\n    if (this.inputElement) {\n      this.inputElement.editingEnabled = newValue;\n    }\n    if (!newValue && !!oldValue) {\n      this.shouldEmitCancel = true;\n    }\n  }\n\n  /** When `true`, a busy indicator is displayed. */\n  @Prop({ mutable: true, reflect: true }) loading = false;\n\n  /** When `true` and `editingEnabled` is `true`, displays save and cancel controls on the component. */\n  @Prop({ reflect: true }) controls = false;\n\n  /** Specifies the size of the component. Defaults to the scale of the wrapped `calcite-input` or the scale of the closest wrapping component with a set scale. */\n  @Prop({ reflect: true, mutable: true }) scale: Scale;\n\n  /** Specifies a callback to be executed prior to disabling editing via the controls. When provided, the component's loading state will be handled automatically. */\n  @Prop() afterConfirm: () => Promise<void>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InlineEditableMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InlineEditableMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback() {\n    connectInteractive(this);\n    connectLabel(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.mutationObserverCallback();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback() {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.mutationObserver?.disconnect();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div\n          class={CSS.wrapper}\n          onClick={this.enableEditingHandler}\n          onKeyDown={this.escapeKeyHandler}\n        >\n          <div class={CSS.inputWrapper}>\n            <slot />\n          </div>\n          <div class={CSS.controlsWrapper}>\n            <calcite-button\n              appearance=\"transparent\"\n              class={CSS.enableEditingButton}\n              disabled={this.disabled}\n              iconStart=\"pencil\"\n              kind=\"neutral\"\n              label={this.messages.enableEditing}\n              onClick={this.enableEditingHandler}\n              scale={this.scale}\n              style={{\n                opacity: this.editingEnabled ? \"0\" : \"1\",\n                width: this.editingEnabled ? \"0\" : \"inherit\",\n              }}\n              type=\"button\"\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={(el) => (this.enableEditingButton = el)}\n            />\n            {this.shouldShowControls && [\n              <div class={CSS.cancelEditingButtonWrapper}>\n                <calcite-button\n                  appearance=\"transparent\"\n                  class={CSS.cancelEditingButton}\n                  disabled={this.disabled}\n                  iconStart=\"x\"\n                  kind=\"neutral\"\n                  label={this.messages.cancelEditing}\n                  onClick={this.cancelEditingHandler}\n                  scale={this.scale}\n                  type=\"button\"\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={(el) => (this.cancelEditingButton = el)}\n                />\n              </div>,\n              <calcite-button\n                appearance=\"solid\"\n                class={CSS.confirmChangesButton}\n                disabled={this.disabled}\n                iconStart=\"check\"\n                kind=\"brand\"\n                label={this.messages.confirmChanges}\n                loading={this.loading}\n                onClick={this.confirmChangesHandler}\n                scale={this.scale}\n                type=\"button\"\n                // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                ref={(el) => (this.confirmEditingButton = el)}\n              />,\n            ]}\n          </div>\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emits when the component's \"cancel editing\" button is pressed.\n   */\n  @Event({ cancelable: false }) calciteInlineEditableEditCancel: EventEmitter<void>;\n\n  /**\n   * Emits when the component's \"confirm edits\" button is pressed.\n   */\n  @Event({ cancelable: false }) calciteInlineEditableEditConfirm: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalInlineEditableEnableEditingChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalInputBlur\")\n  blurHandler(): void {\n    if (!this.controls) {\n      this.disableEditing();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInlineEditableElement;\n\n  private inputElement: HTMLCalciteInputElement;\n\n  private valuePriorToEditing: string;\n\n  private shouldEmitCancel: boolean;\n\n  private enableEditingButton: HTMLCalciteButtonElement;\n\n  private cancelEditingButton: HTMLCalciteButtonElement;\n\n  private confirmEditingButton: HTMLCalciteButtonElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  mutationObserver = createObserver(\"mutation\", () => this.mutationObserverCallback());\n\n  @State() defaultMessages: InlineEditableMessages;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.el?.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  mutationObserverCallback(): void {\n    this.updateSlottedInput();\n    this.scale = this.scale || this.inputElement?.scale;\n  }\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  updateSlottedInput(): void {\n    const inputElement: HTMLCalciteInputElement = getSlotted(this.el, {\n      matches: \"calcite-input\",\n    });\n\n    this.inputElement = inputElement;\n\n    if (!inputElement) {\n      return;\n    }\n\n    this.inputElement.disabled = this.disabled;\n    this.inputElement.label = this.inputElement.label || getLabelText(this);\n  }\n\n  private get shouldShowControls(): boolean {\n    return this.editingEnabled && this.controls;\n  }\n\n  private enableEditing = () => {\n    this.valuePriorToEditing = this.inputElement?.value;\n    this.editingEnabled = true;\n    this.inputElement?.setFocus();\n    this.calciteInternalInlineEditableEnableEditingChange.emit();\n  };\n\n  private disableEditing = () => {\n    this.editingEnabled = false;\n  };\n\n  private cancelEditing = () => {\n    if (this.inputElement) {\n      this.inputElement.value = this.valuePriorToEditing;\n    }\n    this.disableEditing();\n    this.enableEditingButton.setFocus();\n    if (!this.editingEnabled && !!this.shouldEmitCancel) {\n      this.calciteInlineEditableEditCancel.emit();\n    }\n  };\n\n  private escapeKeyHandler = async (event: KeyboardEvent) => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === \"Escape\") {\n      event.preventDefault();\n      this.cancelEditing();\n    }\n\n    if (event.key === \"Tab\" && this.shouldShowControls) {\n      if (!event.shiftKey && event.target === this.inputElement) {\n        event.preventDefault();\n        this.cancelEditingButton.setFocus();\n      }\n      if (!!event.shiftKey && event.target === this.cancelEditingButton) {\n        event.preventDefault();\n        this.inputElement?.setFocus();\n      }\n    }\n  };\n\n  private cancelEditingHandler = async (event: MouseEvent) => {\n    event.preventDefault();\n    this.cancelEditing();\n  };\n\n  private enableEditingHandler = async (event: MouseEvent) => {\n    if (\n      this.disabled ||\n      event.target === this.cancelEditingButton ||\n      event.target === this.confirmEditingButton\n    ) {\n      return;\n    }\n\n    event.preventDefault();\n    if (!this.editingEnabled) {\n      this.enableEditing();\n    }\n  };\n\n  private confirmChangesHandler = async (event: MouseEvent) => {\n    event.preventDefault();\n    this.calciteInlineEditableEditConfirm.emit();\n    try {\n      if (this.afterConfirm) {\n        this.loading = true;\n        await this.afterConfirm();\n        this.disableEditing();\n        this.enableEditingButton.setFocus();\n      }\n    } catch (error) {\n    } finally {\n      this.loading = false;\n    }\n  };\n}\n"],"version":3}