{"file":"calcite-chip.entry.cjs.js","mappings":"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","names":["createObserver","isActivationKey","slotChangeHasAssignedElement","updateMessages","connectConditionalSlotComponent","connectInteractive","connectLocalized","connectMessages","setComponentLoaded","updateHostInteraction","disconnectConditionalSlotComponent","disconnectInteractive","disconnectLocalized","disconnectMessages","setUpLoadableComponent","setUpMessages","componentFocusable","h","getIconScale","Host","InteractiveContainer","toAriaBoolean"],"sources":["src/components/chip/resources.ts","src/components/chip/chip.scss?tag=calcite-chip&encapsulation=shadow","src/components/chip/chip.tsx"],"sourcesContent":["export const CSS = {\n  title: \"title\",\n  close: \"close\",\n  imageContainer: \"image-container\",\n  chipIcon: \"chip-icon\",\n  textSlotted: \"text--slotted\",\n  container: \"container\",\n  imageSlotted: \"image--slotted\",\n  closable: \"closable\",\n  multiple: \"multiple\",\n  selectable: \"selectable\",\n  selectIcon: \"select-icon\",\n  selectIconActive: \"select-icon--active\",\n  nonInteractive: \"non-interactive\",\n  isCircle: \"is-circle\",\n};\n\nexport const SLOTS = {\n  image: \"image\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n  unchecked: \"circle\",\n  checkedSingle: \"circle-f\",\n  checked: \"check-circle-f\",\n};\n",":host([scale=\"s\"]) {\n  @apply text-n2 h-6;\n  --calcite-chip-spacing-s-internal: theme(\"spacing[1]\");\n  --calcite-chip-spacing-l-internal: theme(\"spacing[2]\");\n  .close,\n  .select-icon--active {\n    @apply h-4 w-4;\n  }\n\n  .image-container {\n    @apply h-5 w-5;\n  }\n\n  .container.is-circle {\n    @apply w-6 h-6;\n  }\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n1 h-8;\n  --calcite-chip-spacing-s-internal: theme(\"spacing[1.5]\");\n  --calcite-chip-spacing-l-internal: theme(\"spacing[2]\");\n\n  .close,\n  .image-container,\n  .select-icon--active {\n    @apply h-6 w-6;\n  }\n\n  .container.is-circle {\n    @apply w-8 h-8;\n  }\n}\n\n:host([scale=\"l\"]) {\n  @apply text-0 h-11;\n  --calcite-chip-spacing-s-internal: theme(\"spacing[2]\");\n  --calcite-chip-spacing-l-internal: theme(\"spacing[3]\");\n  .image-container,\n  .close,\n  .select-icon--active {\n    @apply h-8 w-8;\n  }\n\n  .container.is-circle {\n    @apply w-11 h-11;\n  }\n}\n\n:host {\n  @apply inline-flex\n    cursor-default\n    rounded-full;\n}\n\n.container {\n  @apply inline-flex\n  h-full\n  max-w-full\n  items-center\n  rounded-full\n  focus-base\n  justify-center\n  border\n  border-solid\n  border-color-1\n  box-border\n  font-medium;\n  &:not(.is-circle) {\n    padding-inline: var(--calcite-chip-spacing-s-internal);\n  }\n  &.selectable {\n    @apply cursor-pointer;\n  }\n  &:not(.non-interactive):focus {\n    @apply focus-outset;\n  }\n}\n\n:host([scale=\"s\"]) .container.image--slotted {\n  padding-inline-start: calc(theme(\"spacing[0.5]\") / 2);\n}\n\n:host([scale=\"s\"]) .container.is-circle {\n  padding-inline: 0;\n}\n\n.container.text--slotted .title {\n  @apply truncate;\n  padding-inline: var(--calcite-chip-spacing-s-internal);\n}\n\n.container:not(.text--slotted) .title {\n  display: none;\n}\n\n.container:not(.image--slotted) .image-container {\n  display: none;\n}\n\n.container.closable {\n  padding-inline-end: calc(var(--calcite-chip-spacing-l-internal) / 2);\n}\n\n.container:not(.is-circle) {\n  &.image--slotted {\n    padding-inline-start: calc(var(--calcite-chip-spacing-l-internal) / 2);\n  }\n\n  &.image--slotted .image-container {\n    margin-inline-end: var(--calcite-chip-spacing-s-internal);\n  }\n\n  &.image--slotted .image-container ~ .chip-icon {\n    margin-inline-start: var(--calcite-chip-spacing-s-internal);\n  }\n\n  &.selectable:not(.text--slotted) .chip-icon {\n    margin-inline-end: var(--calcite-chip-spacing-s-internal);\n  }\n\n  &:not(.selectable):not(.text--slotted) .chip-icon {\n    margin-inline-start: var(--calcite-chip-spacing-s-internal);\n  }\n\n  &:not(.text--slotted) .chip-icon {\n    margin-inline-end: var(--calcite-chip-spacing-s-internal);\n  }\n\n  &:not(.text-slotted).image--slotted .image-container {\n    margin-inline-end: var(--calcite-chip-spacing-s-internal);\n  }\n\n  &:not(.closable):not(.text--slotted).image--slotted.selectable .image-container {\n    margin-inline-end: 0;\n    ~ .chip-icon {\n      margin-inline-start: calc(var(--calcite-chip-spacing-s-internal) * 2);\n    }\n  }\n}\n\n.chip-icon {\n  @apply relative my-0 inline-flex duration-150 ease-in-out;\n  margin-inline: var(--calcite-chip-spacing-s-internal);\n}\n\n.image-container {\n  @apply inline-flex overflow-hidden;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n}\n\n.close {\n  @apply focus-base\n    transition-default\n    text-color-1\n    m-0\n    cursor-pointer\n    items-center\n    border-none\n    bg-transparent;\n  -webkit-appearance: none;\n  display: flex;\n  border-radius: 50%;\n  align-content: center;\n  justify-content: center;\n  --calcite-chip-transparent-hover: var(--calcite-color-transparent-hover);\n  --calcite-chip-transparent-press: var(--calcite-color-transparent-press);\n  &:hover {\n    background-color: var(--calcite-chip-transparent-hover);\n  }\n  &:focus {\n    background-color: var(--calcite-chip-transparent-hover);\n    @apply focus-inset;\n  }\n  &:active {\n    background-color: var(--calcite-chip-transparent-press);\n  }\n  & calcite-icon {\n    color: inherit;\n  }\n}\n\n.select-icon {\n  align-self: center;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  inset-block-start: -1px;\n  position: relative;\n  visibility: hidden;\n  inline-size: 0;\n  opacity: 0;\n  transition:\n    opacity 0.15s ease-in-out,\n    inline-size 0.15s ease-in-out;\n  &.select-icon--active {\n    visibility: visible;\n    opacity: 0.5;\n  }\n}\n.container:not(.is-circle).image--slotted .select-icon.select-icon--active {\n  margin-inline-end: var(--calcite-chip-spacing-s-internal);\n}\n\n:host([selected]) .select-icon {\n  opacity: 1;\n}\n\n.container:hover .select-icon--active {\n  opacity: 1;\n}\n\nslot[name=\"image\"]::slotted(*) {\n  @apply rounded-half flex h-full w-full overflow-hidden;\n}\n\n:host([kind=\"neutral\"]) {\n  background-color: var(--calcite-color-foreground-2);\n  color: var(--calcite-color-text-1);\n  .container {\n    border-color: transparent;\n  }\n  .close {\n    color: var(--calcite-color-text-3);\n  }\n  .chip-icon {\n    color: var(--calcite-ui-icon-color, var(--calcite-color-text-3));\n  }\n}\n\n:host([kind=\"inverse\"]) {\n  background-color: var(--calcite-color-inverse);\n  @apply text-color-inverse;\n  .container {\n    border-color: transparent;\n  }\n  .close {\n    @apply text-color-inverse;\n  }\n  .chip-icon {\n    color: var(--calcite-ui-icon-color, var(--calcite-color-text-inverse));\n  }\n}\n\n:host([kind=\"brand\"]) {\n  background-color: var(--calcite-color-brand);\n  color: var(--calcite-color-text-inverse);\n  .container {\n    border-color: transparent;\n  }\n  .close {\n    @apply text-color-inverse;\n  }\n  .chip-icon {\n    color: var(--calcite-ui-icon-color, var(--calcite-color-text-inverse));\n  }\n}\n\n:host([appearance=\"outline-fill\"]),\n:host([appearance=\"outline\"]) {\n  @apply text-color-1 bg-foreground-1;\n  .close {\n    @apply text-color-3;\n  }\n  .chip-icon {\n    color: var(--calcite-ui-icon-color, var(--calcite-color-text-3));\n  }\n}\n\n:host([appearance=\"outline-fill\"]) {\n  @apply bg-foreground-1;\n}\n\n:host([appearance=\"outline\"]) {\n  @apply bg-transparent;\n}\n\n:host([kind=\"neutral\"][appearance=\"outline-fill\"]) .container,\n:host([kind=\"neutral\"][appearance=\"outline\"]) .container {\n  border-color: var(--calcite-color-border-1);\n}\n\n:host([kind=\"inverse\"][appearance=\"outline-fill\"]) .container,\n:host([kind=\"inverse\"][appearance=\"outline\"]) .container {\n  border-color: var(--calcite-color-border-inverse);\n}\n\n:host([kind=\"brand\"][appearance=\"outline-fill\"]) .container,\n:host([kind=\"brand\"][appearance=\"outline\"]) .container {\n  border-color: var(--calcite-color-brand);\n}\n\n:host([kind=\"brand\"][appearance=\"solid\"]),\n:host([kind=\"inverse\"][appearance=\"solid\"]) {\n  button {\n    outline-color: var(--calcite-color-text-inverse);\n  }\n}\n\n:host([closed]) {\n  display: none;\n}\n\n@include disabled();\n@include base-component();\n","import {\n  Build,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean, slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport { CSS, SLOTS, ICONS } from \"./resources\";\nimport { Appearance, Kind, Scale, SelectionMode } from \"../interfaces\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { ChipMessages } from \"./assets/chip/t9n\";\nimport { getIconScale } from \"../../utils/component\";\n\n/**\n * @slot - A slot for adding text.\n * @slot image - A slot for adding an image.\n */\n@Component({\n  tag: \"calcite-chip\",\n  styleUrl: \"chip.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Chip\n  implements\n    ConditionalSlotComponent,\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Specifies the appearance style of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"outline\" | \"outline-fill\" | \"solid\", Appearance> =\n    \"solid\";\n\n  /** Specifies the kind of the component, which will apply to border and background if applicable. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"inverse\" | \"neutral\", Kind> = \"neutral\";\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. When contained in a parent `calcite-chip-group` inherits the parent's `scale` value. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** The component's value. */\n  @Prop() value!: any;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  /**\n   * This internal property, managed by a containing `calcite-chip-group`, is\n   * conditionally set based on the `selectionMode` of the parent\n   *\n   * @internal\n   */\n  @Prop() selectionMode: Extract<\"multiple\" | \"single\" | \"single-persist\" | \"none\", SelectionMode> =\n    \"none\";\n\n  /** When `true`, the component is selected.  */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ChipMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ChipMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * When true, enables the chip to be focused, and allows the `calciteChipSelect` to emit.\n   * This is set to `true` by a parent Chip Group component.\n   *\n   * @internal\n   */\n  @Prop() interactive = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteChipElement;\n\n  @State() defaultMessages: ChipMessages;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() private hasText = false;\n\n  @State() private hasImage = false;\n\n  private containerEl: HTMLDivElement;\n\n  private closeButtonEl: HTMLButtonElement;\n\n  private mutationObserver = createObserver(\"mutation\", () => this.updateHasText());\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's close button is selected.\n   */\n  @Event({ cancelable: false }) calciteChipClose: EventEmitter<void>;\n\n  /**\n   * Fires when the selected state of the component changes.\n   */\n  @Event({ cancelable: false }) calciteChipSelect: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalChipKeyEvent: EventEmitter<KeyboardEvent>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.mutationObserver?.disconnect();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (Build.isBrowser) {\n      await setUpMessages(this);\n      this.updateHasText();\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (event.target === this.el) {\n      switch (event.key) {\n        case \" \":\n        case \"Enter\":\n          this.handleEmittingEvent();\n          event.preventDefault();\n          break;\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n        case \"Home\":\n        case \"End\":\n          this.calciteInternalChipKeyEvent.emit(event);\n          event.preventDefault();\n          break;\n      }\n    }\n  }\n\n  @Listen(\"click\")\n  clickHandler(): void {\n    if (!this.interactive && this.closable) {\n      this.closeButtonEl.focus();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (!this.disabled && this.interactive) {\n      this.containerEl?.focus();\n    } else if (!this.disabled && this.closable) {\n      this.closeButtonEl?.focus();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private close = (): void => {\n    this.calciteChipClose.emit();\n    this.selected = false;\n    this.closed = true;\n  };\n\n  private closeButtonKeyDownHandler = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.close();\n    }\n  };\n\n  private updateHasText() {\n    this.hasText = this.el.textContent.trim().length > 0;\n  }\n\n  private handleSlotImageChange = (event: Event): void => {\n    this.hasImage = slotChangeHasAssignedElement(event);\n  };\n\n  private handleEmittingEvent = (): void => {\n    if (this.interactive) {\n      this.calciteChipSelect.emit();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderChipImage(): VNode {\n    return (\n      <div class={CSS.imageContainer}>\n        <slot name={SLOTS.image} onSlotchange={this.handleSlotImageChange} />\n      </div>\n    );\n  }\n\n  renderSelectionIcon(): VNode {\n    const icon =\n      this.selectionMode === \"multiple\" && this.selected\n        ? ICONS.checked\n        : this.selectionMode === \"multiple\"\n          ? ICONS.unchecked\n          : this.selected\n            ? ICONS.checkedSingle\n            : undefined;\n\n    return (\n      <div\n        class={{\n          [CSS.selectIcon]: true,\n          [CSS.selectIconActive]: this.selectionMode === \"multiple\" || this.selected,\n        }}\n      >\n        {icon ? <calcite-icon icon={icon} scale={getIconScale(this.scale)} /> : null}\n      </div>\n    );\n  }\n\n  renderCloseButton(): VNode {\n    return (\n      <button\n        aria-label={this.messages.dismissLabel}\n        class={CSS.close}\n        onClick={this.close}\n        onKeyDown={this.closeButtonKeyDownHandler}\n        tabIndex={this.disabled ? -1 : 0}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.closeButtonEl = el)}\n      >\n        <calcite-icon icon={ICONS.close} scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  renderIcon(): VNode {\n    return (\n      <calcite-icon\n        class={CSS.chipIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.icon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n    const disableInteraction = disabled || (!disabled && !this.interactive);\n    const role =\n      this.selectionMode === \"multiple\" && this.interactive\n        ? \"checkbox\"\n        : this.selectionMode !== \"none\" && this.interactive\n          ? \"radio\"\n          : this.interactive\n            ? \"button\"\n            : undefined;\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div\n            aria-checked={\n              this.selectionMode !== \"none\" && this.interactive\n                ? toAriaBoolean(this.selected)\n                : undefined\n            }\n            aria-disabled={disableInteraction ? toAriaBoolean(disabled) : undefined}\n            aria-label={this.label}\n            class={{\n              [CSS.container]: true,\n              [CSS.textSlotted]: this.hasText,\n              [CSS.imageSlotted]: this.hasImage,\n              [CSS.selectable]: this.selectionMode !== \"none\",\n              [CSS.multiple]: this.selectionMode === \"multiple\",\n              [CSS.closable]: this.closable,\n              [CSS.nonInteractive]: !this.interactive,\n              [CSS.isCircle]:\n                !this.closable &&\n                !this.hasText &&\n                (!this.icon || !this.hasImage) &&\n                (this.selectionMode === \"none\" ||\n                  (!!this.selectionMode && this.selectionMode !== \"multiple\" && !this.selected)),\n            }}\n            onClick={this.handleEmittingEvent}\n            role={role}\n            tabIndex={disableInteraction ? -1 : 0}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(el) => (this.containerEl = el)}\n          >\n            {this.selectionMode !== \"none\" && this.renderSelectionIcon()}\n            {this.renderChipImage()}\n            {this.icon && this.renderIcon()}\n            <span class={CSS.title}>\n              <slot />\n            </span>\n            {this.closable && this.renderCloseButton()}\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"],"version":3}