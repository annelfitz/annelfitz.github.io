{"file":"calcite-segmented-control.calcite-segmented-control-item.entry.cjs.js","mappings":"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","names":["CSS","createObserver","setUpLoadableComponent","afterConnectDefaultValueSet","setComponentLoaded","connectInteractive","connectLabel","connectForm","disconnectInteractive","disconnectLabel","disconnectForm","updateHostInteraction","h","Host","InteractiveContainer","HiddenFormInputSlot","Validation","getElementDir","componentFocusable","toAriaBoolean"],"sources":["src/components/segmented-control/resources.ts","src/components/segmented-control/segmented-control.scss?tag=calcite-segmented-control&encapsulation=shadow","src/components/segmented-control/segmented-control.tsx","src/components/segmented-control-item/resources.ts","src/components/segmented-control-item/segmented-control-item.scss?tag=calcite-segmented-control-item&encapsulation=shadow","src/components/segmented-control-item/segmented-control-item.tsx"],"sourcesContent":["export const CSS = {\n  itemWrapper: \"item-wrapper\",\n};\n",":host {\n  @apply flex flex-col;\n}\n\n.item-wrapper {\n  @apply bg-foreground-1 flex;\n  inline-size: fit-content;\n  outline: 1px solid var(--calcite-color-border-input);\n  outline-offset: -1px;\n}\n\n:host([appearance=\"outline\"]) > .item-wrapper {\n  @apply bg-transparent;\n}\n\n@include disabled();\n\n:host([layout=\"vertical\"]) > .item-wrapper {\n  @apply flex-col items-start self-start;\n}\n\n// segmented control width for full\n:host([width=\"full\"]) > .item-wrapper {\n  @apply w-full;\n  min-inline-size: fit-content;\n\n  ::slotted(calcite-segmented-control-item) {\n    @apply flex-auto;\n  }\n}\n\n:host([width=\"full\"][layout=\"vertical\"]) > .item-wrapper {\n  ::slotted(calcite-segmented-control-item) {\n    @apply justify-start;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n","import {\n  Build,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport { getElementDir } from \"../../utils/dom\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Appearance, Layout, Scale, Status, Width } from \"../interfaces\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Validation } from \"../functional/Validation\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-segmented-control-item`s.\n */\n@Component({\n  tag: \"calcite-segmented-control\",\n  styleUrl: \"segmented-control.scss\",\n  shadow: true,\n})\nexport class SegmentedControl\n  implements LabelableComponent, FormComponent, InteractiveComponent, LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the appearance style of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"outline\" | \"outline-fill\" | \"solid\", Appearance> =\n    \"solid\";\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Defines the layout of the component. */\n  @Prop({ reflect: true }) layout: Extract<\"horizontal\" | \"vertical\", Layout> = \"horizontal\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"appearance\")\n  @Watch(\"layout\")\n  @Watch(\"scale\")\n  handlePropsChange(): void {\n    this.handleItemPropChange();\n  }\n\n  /** The component's `selectedItem` value. */\n  @Prop({ mutable: true }) value: string = null;\n\n  @Watch(\"value\")\n  valueHandler(value: string): void {\n    const items = this.getItems();\n    items.forEach((item) => (item.checked = item.value === value));\n  }\n\n  /**\n   * The component's selected item `HTMLElement`.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItem: HTMLCalciteSegmentedControlItemElement;\n\n  @Watch(\"selectedItem\")\n  protected handleSelectedItemChange<T extends HTMLCalciteSegmentedControlItemElement>(\n    newItem: T,\n    oldItem: T,\n  ): void {\n    this.value = newItem?.value;\n    if (newItem === oldItem) {\n      return;\n    }\n    const items = this.getItems();\n    const match = items.filter((item) => item === newItem).pop();\n\n    if (match) {\n      this.selectItem(match);\n    } else if (items[0]) {\n      items[0].tabIndex = 0;\n    }\n  }\n\n  /** Specifies the status of the validation message. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: string | boolean;\n\n  /** Specifies the width of the component. */\n  @Prop({ reflect: true }) width: Extract<\"auto\" | \"full\", Width> = \"auto\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n    this.setUpItems();\n  }\n\n  componentDidLoad(): void {\n    afterConnectDefaultValueSet(this, this.value);\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n    this.mutationObserver?.observe(this.el, { childList: true });\n\n    this.handleItemPropChange();\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    this.mutationObserver?.unobserve(this.el);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    return (\n      <Host onClick={this.handleClick} role=\"radiogroup\">\n        <div class={CSS.itemWrapper}>\n          <InteractiveContainer disabled={this.disabled}>\n            <slot />\n            <HiddenFormInputSlot component={this} />\n          </InteractiveContainer>\n        </div>\n        {this.validationMessage && this.status === \"invalid\" ? (\n          <Validation\n            icon={this.validationIcon}\n            message={this.validationMessage}\n            scale={this.scale}\n            status={this.status}\n          />\n        ) : null}\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  protected handleClick = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    if ((event.target as HTMLElement).localName === \"calcite-segmented-control-item\") {\n      this.selectItem(event.target as HTMLCalciteSegmentedControlItemElement, true);\n    }\n  };\n\n  @Listen(\"calciteInternalSegmentedControlItemChange\")\n  protected handleSelected(event: Event): void {\n    event.preventDefault();\n    this.selectItem(event.target as HTMLCalciteSegmentedControlItemElement);\n    event.stopPropagation();\n  }\n\n  @Listen(\"keydown\")\n  protected handleKeyDown(event: KeyboardEvent): void {\n    const keys = [\"ArrowLeft\", \"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \" \"];\n    const { key } = event;\n    const { el, selectedItem } = this;\n\n    if (keys.indexOf(key) === -1) {\n      return;\n    }\n\n    let adjustedKey = key;\n\n    if (getElementDir(el) === \"rtl\") {\n      if (key === \"ArrowRight\") {\n        adjustedKey = \"ArrowLeft\";\n      }\n      if (key === \"ArrowLeft\") {\n        adjustedKey = \"ArrowRight\";\n      }\n    }\n\n    const items = this.getItems();\n    let selectedIndex = -1;\n\n    items.forEach((item, index) => {\n      if (item === selectedItem) {\n        selectedIndex = index;\n      }\n    });\n\n    switch (adjustedKey) {\n      case \"ArrowLeft\":\n      case \"ArrowUp\":\n        event.preventDefault();\n        const previous = selectedIndex < 1 ? items[items.length - 1] : items[selectedIndex - 1];\n        this.selectItem(previous, true);\n        return;\n      case \"ArrowRight\":\n      case \"ArrowDown\":\n        event.preventDefault();\n        const next = selectedIndex === -1 ? items[1] : items[selectedIndex + 1] || items[0];\n        this.selectItem(next, true);\n        return;\n      case \" \":\n        event.preventDefault();\n        this.selectItem(event.target as HTMLCalciteSegmentedControlItemElement, true);\n        return;\n      default:\n        return;\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the `calcite-segmented-control-item` selection changes. */\n  @Event({ cancelable: false }) calciteSegmentedControlChange: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    (this.selectedItem || this.getItems()[0])?.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSegmentedControlElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: SegmentedControl[\"value\"];\n\n  private mutationObserver = createObserver(\"mutation\", () => this.setUpItems());\n\n  private handleItemPropChange(): void {\n    const items = this.getItems();\n\n    items.forEach((item) => {\n      item.appearance = this.appearance;\n      item.layout = this.layout;\n      item.scale = this.scale;\n    });\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private getItems(): HTMLCalciteSegmentedControlItemElement[] {\n    return Array.from(this.el.querySelectorAll(\"calcite-segmented-control-item\"));\n  }\n\n  private selectItem(selected: HTMLCalciteSegmentedControlItemElement, emit = false): void {\n    if (selected === this.selectedItem) {\n      return;\n    }\n\n    const items = this.getItems();\n    let match: HTMLCalciteSegmentedControlItemElement = null;\n\n    items.forEach((item) => {\n      const matches = item === selected;\n\n      if ((matches && !item.checked) || (!matches && item.checked)) {\n        item.checked = matches;\n      }\n\n      item.tabIndex = matches ? 0 : -1;\n\n      if (matches) {\n        match = item;\n\n        if (emit) {\n          this.calciteSegmentedControlChange.emit();\n        }\n      }\n    });\n\n    this.selectedItem = match;\n    if (Build.isBrowser && match) {\n      match.focus();\n    }\n  }\n\n  private setUpItems(): void {\n    const items = this.getItems();\n    const lastChecked = items.filter((item) => item.checked).pop();\n\n    if (lastChecked) {\n      this.selectItem(lastChecked);\n    } else if (items[0]) {\n      items[0].tabIndex = 0;\n    }\n  }\n}\n","export const SLOTS = {\n  input: \"input\",\n};\n\nexport const CSS = {\n  segmentedControlItemIcon: \"segmented-control-item-icon\",\n};\n",":host {\n  @apply flex\n    cursor-pointer\n    self-stretch\n    font-normal;\n  transition:\n    background-color var(--calcite-internal-animation-timing-fast) ease-in-out,\n    border-color var(--calcite-animation-timing) ease-in-out;\n}\n\n:host label {\n  @apply text-color-3\n    pointer-events-none\n    m-0.5\n    box-border\n    flex\n    flex-1\n    items-center;\n  transition:\n    background-color var(--calcite-internal-animation-timing-fast) ease-in-out,\n    border-color var(--calcite-internal-animation-timing-fast) ease-in-out,\n    color var(--calcite-internal-animation-timing-fast) ease-in-out;\n}\n\n.label--horizontal {\n  @apply justify-center;\n}\n\n// focus styles\n:host {\n  @apply focus-base;\n}\n:host(:focus) {\n  @apply focus-inset;\n  outline-offset: -1px;\n}\n\n.label--scale-s {\n  @apply text-n2h px-2;\n  padding-block: 0.125rem;\n}\n\n.label--scale-m {\n  @apply text-n1h px-3;\n  padding-block: 0.375rem;\n}\n\n.label--scale-l {\n  @apply text-0h px-4 py-2.5;\n}\n\n:host(:hover) label {\n  @apply bg-foreground-2 text-color-1;\n}\n\n:host(:active) label {\n  @apply bg-foreground-3;\n}\n\n:host([checked]) label {\n  @apply bg-brand border-color-brand cursor-default text-color-inverse;\n}\n\n:host([checked]) .label--outline,\n:host([checked]) .label--outline-fill {\n  @apply bg-foreground-1 border-color-brand;\n  box-shadow: inset 0 0 0 1px theme(\"backgroundColor.brand\");\n  color: theme(\"backgroundColor.brand\");\n}\n\n:host([checked]) .label--outline {\n  @apply bg-transparent;\n}\n\n::slotted(input) {\n  @apply hidden;\n}\n\n@media (forced-colors: active) {\n  :host([checked]) label {\n    background-color: highlight;\n  }\n  :host([checked]) .label--outline,\n  :host([checked]) .label--outline-fill {\n    @apply outline-none;\n  }\n  :host([checked]) label:not([class~=\"label--outline\"]) .segmented-control-item-icon {\n    color: highlightText;\n  }\n}\n\n// icon\n.segmented-control-item-icon {\n  @apply relative\n    m-0\n    inline-flex;\n  line-height: inherit;\n}\n\n:host([icon-start]) .label--scale-s .segmented-control-item-icon {\n  margin-inline-end: theme(\"margin.2\");\n}\n\n:host([icon-end]) .label--scale-s .segmented-control-item-icon {\n  margin-inline-start: theme(\"margin.2\");\n}\n\n:host([icon-start]) .label--scale-m .segmented-control-item-icon {\n  margin-inline-end: theme(\"margin.3\");\n}\n\n:host([icon-end]) .label--scale-m .segmented-control-item-icon {\n  margin-inline-start: theme(\"margin.3\");\n}\n\n:host([icon-start]) .label--scale-l .segmented-control-item-icon {\n  margin-inline-end: theme(\"margin.4\");\n}\n:host([icon-end]) .label--scale-l .segmented-control-item-icon {\n  margin-inline-start: theme(\"margin.4\");\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { Appearance, Layout, Scale } from \"../interfaces\";\nimport { CSS, SLOTS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-segmented-control-item\",\n  styleUrl: \"segmented-control-item.scss\",\n  shadow: true,\n})\nexport class SegmentedControlItem {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is checked. */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by form module\n  @Prop({ reflect: true, mutable: true }) checked = false;\n\n  @Watch(\"checked\")\n  protected handleCheckedChange(): void {\n    this.calciteInternalSegmentedControlItemChange.emit();\n  }\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: string;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: string;\n\n  /**\n   * The component's value.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by form module\n  @Prop({ mutable: true })\n  value: any | null;\n\n  /**\n   * Specifies the appearance style of the component inherited from parent `calcite-segmented-control`, defaults to `solid`.\n   *\n   * @internal\n   */\n  @Prop() appearance: Extract<\"outline\" | \"outline-fill\" | \"solid\", Appearance> = \"solid\";\n\n  /**\n   * Defines the layout of the component inherited from parent `calcite-segmented-control`, defaults to `horizontal`.\n   *\n   * @internal\n   */\n  @Prop() layout: Layout = \"horizontal\";\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-segmented-control`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const { appearance, checked, layout, scale, value } = this;\n\n    const iconStartEl = this.iconStart ? (\n      <calcite-icon\n        class={CSS.segmentedControlItemIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.iconStart}\n        key=\"icon-start\"\n        scale=\"s\"\n      />\n    ) : null;\n\n    const iconEndEl = this.iconEnd ? (\n      <calcite-icon\n        class={CSS.segmentedControlItemIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.iconEnd}\n        key=\"icon-end\"\n        scale=\"s\"\n      />\n    ) : null;\n\n    return (\n      <Host aria-checked={toAriaBoolean(checked)} aria-label={value} role=\"radio\">\n        <label\n          class={{\n            \"label--scale-s\": scale === \"s\",\n            \"label--scale-m\": scale === \"m\",\n            \"label--scale-l\": scale === \"l\",\n            \"label--horizontal\": layout === \"horizontal\",\n            \"label--outline\": appearance === \"outline\",\n            \"label--outline-fill\": appearance === \"outline-fill\",\n          }}\n        >\n          {this.iconStart ? iconStartEl : null}\n          <slot>{value}</slot>\n          <slot name={SLOTS.input} />\n          {this.iconEnd ? iconEndEl : null}\n        </label>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSegmentedControlItemElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the item has been selected.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalSegmentedControlItemChange: EventEmitter<void>;\n}\n"],"version":3}