{"file":"calcite-split-button.entry.js","mappings":";;;;;;;;;;AAAO,MAAM,GAAG,GAAG;IACjB,SAAS,EAAE,WAAW;IACtB,gBAAgB,EAAE,mBAAmB;IACrC,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,YAAY;IACvB,SAAS,EAAE,YAAY;IACvB,SAAS,EAAE,YAAY;CACxB;;ACPD,MAAM,cAAc,GAAG,ovIAAovI;;MCuC9vI,WAAW;;;;;QAmMd,0CAAqC,GAAG,MAC9C,IAAI,CAAC,8BAA8B,CAAC,IAAI,EAAE,CAAC;QAErC,4CAAuC,GAAG,MAChD,IAAI,CAAC,gCAAgC,CAAC,IAAI,EAAE,CAAC;0BA5L3C,OAAO;oBAIT,OAAO;wBAG2B,KAAK;sBAcQ,KAAK;gCAUQ,SAAS;;uBAQpC,KAAK;kCAU0B,UAAU;;;;;;qBAkBpC,GAAG;qBAGH,MAAM;;IA5D9C,oBAAoB,CAAC,KAAc;QACjC,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;KACF;IAUD,aAAa;QACX,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;KACF;;;;;;;IAgED,MAAM,QAAQ;QACZ,MAAM,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;KACjB;;;;;;IAgBD,iBAAiB;QACf,kBAAkB,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,iBAAiB;QACf,sBAAsB,CAAC,IAAI,CAAC,CAAC;KAC9B;IAED,gBAAgB;QACd,kBAAkB,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,kBAAkB;QAChB,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC7B;IAED,oBAAoB;QAClB,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC7B;IAED,MAAM;QACJ,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC;QAE5D,QACE,EAAC,oBAAoB,IAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAC3C,WAAK,KAAK,EAAE,GAAG,CAAC,SAAS,IACvB,sBACE,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ,cACb,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,gBAC9C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,EAChE,WAAW,EAAE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,EACrE,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,IAAI,CAAC,YAAY,EACxB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,OAAO,EAAE,IAAI,CAAC,qCAAqC,EACnD,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,UAAU,EAAE,SAAS,EACrB,IAAI,EAAC,QAAQ,EACb,KAAK,EAAE,WAAW,IAEjB,IAAI,CAAC,WAAW,CACF,EACjB,WAAK,KAAK,EAAE,GAAG,CAAC,gBAAgB,IAC9B,WAAK,KAAK,EAAE,GAAG,CAAC,OAAO,GAAI,CACvB,EACN,wBACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,IAAI,CAAC,uCAAuC,EACrD,IAAI,EAAE,IAAI,CAAC,MAAM,EACjB,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,EAC3C,SAAS,EAAC,YAAY,EACtB,KAAK,EAAE,IAAI,CAAC,KAAK,iBACJ,IAAI,CAAC,KAAK,IAEvB,sBACE,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ,gBACX,IAAI,CAAC,YAAY,EAC7B,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,IAAI,CAAC,aAAa,EACzB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,IAAI,EAAC,SAAS,EACd,UAAU,EAAE,WAAW,EACvB,IAAI,EAAC,QAAQ,GACb,EACF,eAAQ,CACS,CACf,CACe,EACvB;KACH;IAQD,IAAY,YAAY;QACtB,OAAO,IAAI,CAAC,gBAAgB,KAAK,SAAS;cACtC,aAAa;cACb,IAAI,CAAC,gBAAgB,KAAK,OAAO;kBAC/B,WAAW;kBACX,IAAI,CAAC,gBAAgB,KAAK,UAAU;sBAClC,UAAU;sBACV,iBAAiB,CAAC;KAC3B;;;;;;;;;;;;","names":[],"sources":["src/components/split-button/resources.ts","src/components/split-button/split-button.scss?tag=calcite-split-button&encapsulation=shadow","src/components/split-button/split-button.tsx"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n  dividerContainer: \"divider-container\",\n  divider: \"divider\",\n  widthAuto: \"width-auto\",\n  widthHalf: \"width-half\",\n  widthFull: \"width-full\",\n};\n",":host {\n  @apply inline-block;\n}\n\n:host([width=\"auto\"]) {\n  @apply w-auto;\n}\n\n:host([width=\"half\"]) {\n  @apply w-2/4;\n}\n\n:host([width=\"full\"]) {\n  @apply w-full;\n}\n\n:host {\n  &:host([kind=\"brand\"]) {\n    --calcite-split-button-background: theme(\"colors.brand\");\n    --calcite-split-button-divider: theme(\"colors.background.foreground.1\");\n  }\n  &:host([kind=\"danger\"]) {\n    --calcite-split-button-background: theme(\"colors.danger\");\n    --calcite-split-button-divider: theme(\"colors.background.foreground.1\");\n  }\n  &:host([kind=\"neutral\"]) {\n    --calcite-split-button-background: theme(\"colors.background.foreground.3\");\n    --calcite-split-button-divider: theme(\"colors.color.1\");\n  }\n  &:host([kind=\"inverse\"]) {\n    --calcite-split-button-background: var(--calcite-color-inverse);\n    --calcite-split-button-divider: theme(\"colors.background.foreground.1\");\n  }\n}\n\n:host([appearance=\"transparent\"]) {\n  &:host([kind=\"brand\"]) {\n    --calcite-split-button-divider: theme(\"colors.brand\");\n    --calcite-split-button-background: transparent;\n  }\n  &:host([kind=\"danger\"]) {\n    --calcite-split-button-divider: theme(\"colors.danger\");\n    --calcite-split-button-background: transparent;\n  }\n  &:host([kind=\"neutral\"]) {\n    --calcite-split-button-divider: theme(\"colors.color.1\");\n    --calcite-split-button-background: transparent;\n  }\n  &:host([kind=\"inverse\"]) {\n    --calcite-split-button-divider: theme(\"colors.background.foreground.1\");\n    --calcite-split-button-background: transparent;\n  }\n}\n\n:host([appearance=\"outline\"]) {\n  --calcite-split-button-background: transparent;\n}\n\n:host([appearance=\"outline-fill\"]) {\n  --calcite-split-button-background: theme(\"colors.background.foreground.1\");\n}\n\n:host([appearance=\"outline\"]),\n:host([appearance=\"outline-fill\"]) {\n  &:host([kind=\"brand\"]) {\n    --calcite-split-button-divider: theme(\"colors.brand\");\n  }\n  &:host([kind=\"danger\"]) {\n    --calcite-split-button-divider: theme(\"colors.danger\");\n  }\n  &:host([kind=\"neutral\"]) {\n    --calcite-split-button-divider: theme(\"borderColor.color.1\");\n    --calcite-split-button-background: theme(\"borderColor.color.1\");\n  }\n  &:host([kind=\"inverse\"]) {\n    --calcite-split-button-divider: var(--calcite-color-inverse);\n  }\n}\n\n.container {\n  @apply flex items-stretch;\n  > calcite-dropdown > calcite-button {\n    @apply h-full align-top;\n  }\n}\n\n.divider-container {\n  @apply transition-default flex w-px items-stretch;\n  background-color: var(--calcite-split-button-background);\n}\n\n.divider {\n  @apply my-1 inline-block w-px;\n  background-color: var(--calcite-split-button-divider);\n}\n\n:host([appearance=\"outline-fill\"]),\n:host([appearance=\"outline\"]) {\n  .divider-container {\n    border-block: 1px solid var(--calcite-split-button-divider);\n  }\n  &:hover .divider-container {\n    background-color: var(--calcite-split-button-divider);\n  }\n}\n\n:host([appearance=\"outline-fill\"]:hover),\n:host([appearance=\"outline\"]:hover) {\n  .divider-container {\n    background-color: var(--calcite-split-button-divider);\n  }\n}\n\n:host([appearance=\"outline-fill\"]:focus-within),\n:host([appearance=\"outline\"]:focus-within) {\n  &:host([kind=\"brand\"]) {\n    --calcite-split-button-divider: theme(\"colors.brand-press\");\n  }\n  &:host([kind=\"danger\"]) {\n    --calcite-split-button-divider: theme(\"colors.danger-press\");\n  }\n  .divider-container {\n    background-color: var(--calcite-split-button-divider);\n  }\n}\n\n@include disabled() {\n  .divider-container {\n    @apply opacity-disabled;\n  }\n\n  calcite-dropdown > calcite-button {\n    @apply pointer-events-none;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { DropdownIconType } from \"../button/interfaces\";\nimport { Appearance, FlipContext, Kind, Scale, Width } from \"../interfaces\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-dropdown` content.\n */\n@Component({\n  tag: \"calcite-split-button\",\n  styleUrl: \"split-button.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class SplitButton implements InteractiveComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the appearance style of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\n    \"outline\" | \"outline-fill\" | \"solid\" | \"transparent\",\n    Appearance\n  > = \"solid\";\n\n  /** Specifies the kind of the component, which will apply to border and background, if applicable. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"danger\" | \"inverse\" | \"neutral\", Kind> =\n    \"brand\";\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(value: boolean): void {\n    if (!value) {\n      this.active = false;\n    }\n  }\n\n  /**\n   * When `true`, the component is active.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) active = false;\n\n  @Watch(\"active\")\n  activeHandler(): void {\n    if (this.disabled) {\n      this.active = false;\n    }\n  }\n\n  /** Specifies the icon used for the dropdown menu. */\n  @Prop({ reflect: true }) dropdownIconType: DropdownIconType = \"chevron\";\n\n  /** Accessible name for the dropdown menu. */\n  @Prop({ reflect: true }) dropdownLabel: string;\n\n  /**\n    When `true`, a busy indicator is displayed on the primary button.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /** Specifies an icon to display at the end of the primary button. */\n  @Prop({ reflect: true }) primaryIconEnd: string;\n\n  /**  Displays the `primaryIconStart` and/or `primaryIconEnd` as flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) primaryIconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the primary button. */\n  @Prop({ reflect: true }) primaryIconStart: string;\n\n  /** Accessible name for the primary button. */\n  @Prop({ reflect: true }) primaryLabel: string;\n\n  /** Text displayed in the primary button. */\n  @Prop({ reflect: true }) primaryText: string;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the width of the component. */\n  @Prop({ reflect: true }) width: Width = \"auto\";\n\n  /**\n   * Fires when the primary button is clicked.\n   */\n  @Event({ cancelable: false })\n  calciteSplitButtonPrimaryClick: EventEmitter<void>;\n\n  /**\n   * Fires when the dropdown menu is clicked.\n   */\n  @Event({ cancelable: false })\n  calciteSplitButtonSecondaryClick: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSplitButtonElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  render(): VNode {\n    const buttonWidth = this.width === \"auto\" ? \"auto\" : \"full\";\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div class={CSS.container}>\n          <calcite-button\n            appearance={this.appearance}\n            disabled={this.disabled}\n            icon-end={this.primaryIconEnd ? this.primaryIconEnd : null}\n            icon-start={this.primaryIconStart ? this.primaryIconStart : null}\n            iconFlipRtl={this.primaryIconFlipRtl ? this.primaryIconFlipRtl : null}\n            kind={this.kind}\n            label={this.primaryLabel}\n            loading={this.loading}\n            onClick={this.calciteSplitButtonPrimaryClickHandler}\n            scale={this.scale}\n            splitChild={\"primary\"}\n            type=\"button\"\n            width={buttonWidth}\n          >\n            {this.primaryText}\n          </calcite-button>\n          <div class={CSS.dividerContainer}>\n            <div class={CSS.divider} />\n          </div>\n          <calcite-dropdown\n            disabled={this.disabled}\n            onClick={this.calciteSplitButtonSecondaryClickHandler}\n            open={this.active}\n            overlayPositioning={this.overlayPositioning}\n            placement=\"bottom-end\"\n            scale={this.scale}\n            width-scale={this.scale}\n          >\n            <calcite-button\n              appearance={this.appearance}\n              disabled={this.disabled}\n              icon-start={this.dropdownIcon}\n              kind={this.kind}\n              label={this.dropdownLabel}\n              scale={this.scale}\n              slot=\"trigger\"\n              splitChild={\"secondary\"}\n              type=\"button\"\n            />\n            <slot />\n          </calcite-dropdown>\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  private calciteSplitButtonPrimaryClickHandler = (): CustomEvent =>\n    this.calciteSplitButtonPrimaryClick.emit();\n\n  private calciteSplitButtonSecondaryClickHandler = (): CustomEvent =>\n    this.calciteSplitButtonSecondaryClick.emit();\n\n  private get dropdownIcon(): string {\n    return this.dropdownIconType === \"chevron\"\n      ? \"chevronDown\"\n      : this.dropdownIconType === \"caret\"\n        ? \"caretDown\"\n        : this.dropdownIconType === \"ellipsis\"\n          ? \"ellipsis\"\n          : \"handle-vertical\";\n  }\n}\n"],"version":3}