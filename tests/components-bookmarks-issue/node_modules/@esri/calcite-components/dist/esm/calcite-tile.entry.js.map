{"file":"calcite-tile.entry.js","mappings":";;;;;;;;;;;;AAAO,MAAM,GAAG,GAAG;IACjB,SAAS,EAAE,WAAW;IACtB,OAAO,EAAE,SAAS;IAClB,gBAAgB,EAAE,mBAAmB;IACrC,oBAAoB,EAAE,wBAAwB;IAC9C,WAAW,EAAE,aAAa;IAC1B,OAAO,EAAE,SAAS;IAClB,WAAW,EAAE,cAAc;CAC5B,CAAC;AAEK,MAAM,KAAK,GAAG;IACnB,YAAY,EAAE,eAAe;IAC7B,UAAU,EAAE,aAAa;CAC1B;;ACbD,MAAM,OAAO,GAAG,k1HAAk1H;;MCqBr1H,IAAI;;;;;;;;QA+EP,iCAA4B,GAAG,CAAC,KAAY;YAClD,IAAI,CAAC,eAAe,GAAG,4BAA4B,CAAC,KAAK,CAAC,CAAC;SAC5D,CAAC;QAEM,+BAA0B,GAAG,CAAC,KAAY;YAChD,IAAI,CAAC,aAAa,GAAG,4BAA4B,CAAC,KAAK,CAAC,CAAC;SAC1D,CAAC;sBA3EgC,KAAK;yBAKyB,OAAO;;wBAUnC,KAAK;qBASR,KAAK;uBAOH,KAAK;;;;2BAaD,KAAK;qBAKJ,GAAG;+BAUhB,KAAK;6BAEP,KAAK;;;;;;;IAsB9B,iBAAiB;QACf,kBAAkB,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,oBAAoB;QAClB,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC7B;IAED,kBAAkB;QAChB,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC7B;;;;;;IAQD,UAAU;QACR,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,aAAa,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;QACzF,MAAM,aAAa,GAAG,OAAO,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC;QAEtD,QACE,WAAK,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,WAAW,GAAG,aAAa,EAAE,IACpE,IAAI,IAAI,oBAAc,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAC,GAAG,GAAG,EACrE,WAAK,KAAK,EAAE,GAAG,CAAC,gBAAgB,IAC9B,WAAK,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,oBAAoB,GAAG,eAAe,EAAE,IACzD,YAAM,IAAI,EAAE,KAAK,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,CAAC,4BAA4B,GAAI,CAC/E,EACN,WAAK,KAAK,EAAE,GAAG,CAAC,OAAO,IACpB,OAAO,IAAI,WAAK,KAAK,EAAE,GAAG,CAAC,OAAO,IAAG,OAAO,CAAO,EACnD,WAAW,IAAI,WAAK,KAAK,EAAE,GAAG,CAAC,WAAW,IAAG,WAAW,CAAO,CAC5D,EACN,WAAK,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,oBAAoB,GAAG,aAAa,EAAE,IACvD,YAAM,IAAI,EAAE,KAAK,CAAC,UAAU,EAAE,YAAY,EAAE,IAAI,CAAC,0BAA0B,GAAI,CAC3E,CACF,CACF,EACN;KACH;IAED,MAAM;QACJ,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QAE1B,QACE,EAAC,oBAAoB,IAAC,QAAQ,EAAE,QAAQ,IACrC,IAAI,CAAC,IAAI,IACR,oBAAc,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,IAC9C,IAAI,CAAC,UAAU,EAAE,CACL,KAEf,IAAI,CAAC,UAAU,EAAE,CAClB,CACoB,EACvB;KACH;;;;;;;","names":[],"sources":["src/components/tile/resources.ts","src/components/tile/tile.scss?tag=calcite-tile&encapsulation=shadow","src/components/tile/tile.tsx"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n  content: \"content\",\n  contentContainer: \"content-container\",\n  contentSlotContainer: \"content-slot-container\",\n  description: \"description\",\n  heading: \"heading\",\n  largeVisual: \"large-visual\",\n};\n\nexport const SLOTS = {\n  contentStart: \"content-start\",\n  contentEnd: \"content-end\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-tile-background-color: Specifies the background color of the component.\n * @prop --calcite-tile-border-color: Specifies the border color of the component.\n * @prop --calcite-tile-description-text-color: Specifies the description text color of the component.\n * @prop --calcite-tile-heading-text-color: Specifies the heading text color of the component.\n */\n\n:host {\n  --calcite-tile-background-color: var(--calcite-color-foreground-1);\n  --calcite-tile-border-color: var(--calcite-color-border-2);\n  --calcite-tile-description-text-color: var(--calcite-color-text-3);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-2);\n\n  box-sizing: border-box;\n  display: inline-block;\n  max-inline-size: 460px;\n  min-inline-size: 140px;\n\n  .container {\n    background-color: var(--calcite-tile-background-color);\n    block-size: var(--calcite-container-size-content-fluid);\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    gap: var(--calcite-spacing-md);\n    inline-size: var(--calcite-container-size-content-fluid);\n    pointer-events: none;\n    transition-duration: 150ms;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    user-select: none;\n  }\n\n  .content-container {\n    display: flex;\n    outline-color: transparent;\n    padding: 0;\n    inline-size: 100%;\n  }\n\n  .content-slot-container {\n    align-items: center;\n    display: flex;\n\n    &:first-child {\n      padding-inline: 0 0.75rem;\n    }\n\n    &:last-child {\n      padding-inline: 0.75rem 0;\n    }\n  }\n\n  .heading {\n    color: var(--calcite-tile-heading-text-color);\n    font-size: var(--calcite-font-size--1);\n    font-weight: var(--calcite-font-weight-medium);\n    line-height: 1.20313rem;\n    overflow-wrap: break-word;\n  }\n  .large-visual {\n    align-items: center;\n    justify-content: center;\n    min-block-size: 12rem;\n    text-align: center;\n\n    calcite-icon {\n      block-size: 64px;\n      inline-size: 64px;\n    }\n    .content-container {\n      justify-content: center;\n    }\n  }\n  .description {\n    color: var(--calcite-tile-description-text-color);\n    font-size: var(--calcite-font-size--2);\n    font-weight: var(--calcite-font-weight-regular);\n    line-height: 1.03125rem;\n    overflow-wrap: break-word;\n  }\n}\n\n:host([alignment=\"center\"]) {\n  .container {\n    align-items: center;\n    text-align: center;\n  }\n}\n\n:host([scale=\"s\"]) {\n  max-inline-size: 400px;\n  min-inline-size: 100px;\n  .container {\n    gap: var(--calcite-spacing-sm);\n  }\n  .heading {\n    font-size: var(--calcite-font-size--2);\n    line-height: 1.03125rem;\n  }\n  .description {\n    font-size: var(--calcite-font-size--3);\n    line-height: 0.85938rem;\n  }\n}\n\n:host([scale=\"l\"]) {\n  max-inline-size: 520px;\n  min-inline-size: 160px;\n  .container {\n    gap: var(--calcite-spacing-xl);\n  }\n  .heading {\n    font-size: var(--calcite-font-size-0);\n    line-height: 1.375rem;\n  }\n  .description {\n    font-size: var(--calcite-font-size--1);\n    line-height: 1.20313rem;\n  }\n}\n\n:host(:not([href])) {\n  --calcite-ui-icon-color: var(--calcite-color-text-3);\n}\n\n:host([href]),\n:host([href]:hover) {\n  --calcite-tile-heading-text-color: var(--calcite-color-text-link);\n  .heading {\n    text-decoration-line: underline;\n  }\n}\n:host(:not([embed])) {\n  .container {\n    box-shadow: 0 0 0 1px var(--calcite-tile-border-color);\n    padding: var(--calcite-spacing-md);\n  }\n}\n:host(:not([embed])[scale=\"s\"]) {\n  .container {\n    padding: var(--calcite-spacing-sm);\n  }\n}\n:host(:not([embed])[scale=\"l\"]) {\n  .container {\n    padding: var(--calcite-spacing-xl);\n  }\n}\n:host(:not([embed])[href]:hover),\n:host(:not([embed])[href]:focus) {\n  --calcite-tile-border-color: var(--calcite-color-brand);\n  .container {\n    box-shadow: 0 0 0 2px var(--calcite-tile-border-color);\n    cursor: pointer;\n    position: relative;\n    z-index: var(--calcite-z-index);\n  }\n}\n:host(:not([embed])[href]:active) {\n  --calcite-tile-border-color: var(--calcite-color-brand);\n  .container {\n    box-shadow: 0 0 0 3px var(--calcite-tile-border-color);\n  }\n}\n\n@include disabled();\n\n:host(:hover),\n:host([active]) {\n  --calcite-tile-description-text-color: var(--calcite-color-text-2);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-1);\n}\n\n@include base-component();\n","import { Component, Element, h, Prop, State, VNode } from \"@stencil/core\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { Alignment, Scale } from \"../interfaces\";\nimport { slotChangeHasAssignedElement } from \"../../utils/dom\";\n\n/**\n * @slot content-start - A slot for adding non-actionable elements before the component's content.\n * @slot content-end - A slot for adding non-actionable elements after the component's content.\n */\n@Component({\n  tag: \"calcite-tile\",\n  styleUrl: \"tile.scss\",\n  shadow: true,\n})\nexport class Tile implements InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is active.\n   */\n  @Prop({ reflect: true }) active = false;\n\n  /**\n   * Specifies the alignment of the Tile's content.\n   */\n  @Prop({ reflect: true }) alignment: Exclude<Alignment, \"end\"> = \"start\";\n\n  /**\n   * A description for the component, which displays below the heading.\n   */\n  @Prop({ reflect: true }) description: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The component's embed mode.\n   *\n   * When `true`, renders without a border and padding for use by other components.\n   *\n   * @deprecated No longer necessary.\n   */\n  @Prop({ reflect: true }) embed = false;\n\n  /**\n   * The focused state of the component.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) focused = false;\n\n  /** The component header text, which displays between the icon and description. */\n  @Prop({ reflect: true }) heading: string;\n\n  /** When embed is `\"false\"`, the URL for the component. */\n  @Prop({ reflect: true }) href: string;\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTileElement;\n\n  @State() hasContentStart = false;\n\n  @State() hasContentEnd = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    this.hasContentStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentEndSlotChange = (event: Event): void => {\n    this.hasContentEnd = slotChangeHasAssignedElement(event);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderTile(): VNode {\n    const { icon, hasContentStart, hasContentEnd, heading, description, iconFlipRtl } = this;\n    const isLargeVisual = heading && icon && !description;\n\n    return (\n      <div class={{ [CSS.container]: true, [CSS.largeVisual]: isLargeVisual }}>\n        {icon && <calcite-icon flipRtl={iconFlipRtl} icon={icon} scale=\"l\" />}\n        <div class={CSS.contentContainer}>\n          <div class={{ [CSS.contentSlotContainer]: hasContentStart }}>\n            <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n          </div>\n          <div class={CSS.content}>\n            {heading && <div class={CSS.heading}>{heading}</div>}\n            {description && <div class={CSS.description}>{description}</div>}\n          </div>\n          <div class={{ [CSS.contentSlotContainer]: hasContentEnd }}>\n            <slot name={SLOTS.contentEnd} onSlotchange={this.handleContentEndSlotChange} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        {this.href ? (\n          <calcite-link disabled={disabled} href={this.href}>\n            {this.renderTile()}\n          </calcite-link>\n        ) : (\n          this.renderTile()\n        )}\n      </InteractiveContainer>\n    );\n  }\n}\n"],"version":3}