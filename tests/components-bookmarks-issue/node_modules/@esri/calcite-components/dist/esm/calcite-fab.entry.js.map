{"file":"calcite-fab.entry.js","mappings":";;;;;;;;;;;;;AAAO,MAAM,GAAG,GAAG;IACjB,MAAM,EAAE,QAAQ;CACjB,CAAC;AAEK,MAAM,KAAK,GAAG;IACnB,IAAI,EAAE,MAAM;CACb;;ACND,MAAM,MAAM,GAAG,uuCAAuuC;;MCuBzuC,GAAG;;;0BAUuE,OAAO;oBAM1F,OAAO;wBAK2B,KAAK;oBAOD,KAAK,CAAC,IAAI;2BAGX,KAAK;;uBAUT,KAAK;qBAKA,GAAG;;2BAUJ,KAAK;;;;;;;IAkB5C,iBAAiB;QACf,kBAAkB,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,iBAAiB;QACf,sBAAsB,CAAC,IAAI,CAAC,CAAC;KAC9B;IAED,gBAAgB;QACd,kBAAkB,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,kBAAkB;QAChB,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC7B;IAED,oBAAoB;QAClB,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC7B;;;;;;;IAUD,MAAM,QAAQ;QACZ,MAAM,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAE/B,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7B;;;;;;IAQD,MAAM;QACJ,MAAM,EACJ,UAAU,EACV,IAAI,EACJ,QAAQ,EACR,OAAO,EACP,KAAK,EACL,WAAW,EACX,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,WAAW,GACZ,GAAG,IAAI,CAAC;QAET,MAAM,KAAK,GAAG,CAAC,WAAW,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC;QAE1D,QACE,EAAC,oBAAoB,IAAC,QAAQ,EAAE,QAAQ,IACtC,sBACE,UAAU,EAAE,UAAU,KAAK,OAAO,GAAG,OAAO,GAAG,cAAc,EAC7D,KAAK,EAAE,GAAG,CAAC,MAAM,EACjB,QAAQ,EAAE,QAAQ,EAClB,WAAW,EAAE,WAAW,GAAG,OAAO,GAAG,IAAI,EACzC,SAAS,EAAE,IAAI,EACf,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,IAAI,EACX,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,EACZ,IAAI,EAAC,QAAQ,EACb,KAAK,EAAC,MAAM;;YAEZ,GAAG,EAAE,CAAC,QAAQ;gBACZ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC1B,IAEA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CACrB,CACI,EACvB;KACH;;;;;;;","names":[],"sources":["src/components/fab/resources.ts","src/components/fab/fab.scss?tag=calcite-fab&encapsulation=shadow","src/components/fab/fab.tsx"],"sourcesContent":["export const CSS = {\n  button: \"button\",\n};\n\nexport const ICONS = {\n  plus: \"plus\",\n};\n",":host {\n  @apply flex bg-transparent;\n}\n\n@include disabled();\n\ncalcite-button {\n  @apply shadow-2;\n  &:hover {\n    @apply shadow-2-lg;\n  }\n  &:active {\n    @apply shadow-2-sm;\n  }\n}\n\n@include base-component();\n","import { Component, Element, h, Method, Prop, VNode } from \"@stencil/core\";\nimport { focusElement } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Appearance, Kind, Scale } from \"../interfaces\";\nimport { CSS, ICONS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-fab\",\n  styleUrl: \"fab.scss\",\n  shadow: true,\n})\nexport class Fab implements InteractiveComponent, LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the appearance style of the component.\n   */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"outline-fill\", Appearance> = \"solid\";\n\n  /**\n   * Specifies the kind of the component, which will apply to border and background.\n   */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"danger\" | \"inverse\" | \"neutral\", Kind> =\n    \"brand\";\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Specifies an icon to display.\n   *\n   * @default \"plus\"\n   */\n  @Prop({ reflect: true }) icon: string = ICONS.plus;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Accessible name for the component.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies text to accompany the component's icon.\n   */\n  @Prop() text: string;\n\n  /**\n   * When `true`, displays the `text` value in the component.\n   */\n  @Prop({ reflect: true }) textEnabled = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteFabElement;\n\n  private buttonEl: HTMLElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusElement(this.buttonEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      appearance,\n      kind,\n      disabled,\n      loading,\n      scale,\n      textEnabled,\n      icon,\n      label,\n      text,\n      iconFlipRtl,\n    } = this;\n\n    const title = !textEnabled ? label || text || null : null;\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        <calcite-button\n          appearance={appearance === \"solid\" ? \"solid\" : \"outline-fill\"}\n          class={CSS.button}\n          disabled={disabled}\n          iconFlipRtl={iconFlipRtl ? \"start\" : null}\n          iconStart={icon}\n          kind={kind}\n          label={label}\n          loading={loading}\n          round={true}\n          scale={scale}\n          title={title}\n          type=\"button\"\n          width=\"auto\"\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(buttonEl): void => {\n            this.buttonEl = buttonEl;\n          }}\n        >\n          {this.textEnabled ? this.text : null}\n        </calcite-button>\n      </InteractiveContainer>\n    );\n  }\n}\n"],"version":3}