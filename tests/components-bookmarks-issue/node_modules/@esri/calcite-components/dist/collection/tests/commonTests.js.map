{"version":3,"file":"commonTests.js","sourceRoot":"","sources":["../../../src/tests/commonTests.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable jest/no-conditional-expect -- Using conditional logic in a confined test helper to handle specific scenarios, reducing duplication, balancing test readability and maintainability. **/\n/* eslint-disable jest/no-export -- Util functions are now imported to be used as `it` blocks within `describe` instead of assertions within `it` blocks. */\nimport { E2EElement, E2EPage, EventSpy, newE2EPage } from \"@stencil/core/testing\";\nimport axe from \"axe-core\";\nimport { toHaveNoViolations } from \"jest-axe\";\nimport { config } from \"../../stencil.config\";\nimport { html } from \"../../support/formatting\";\nimport type { JSX } from \"../components\";\nimport { getClearValidationEventName, hiddenFormInputSlotName, componentsWithInputEvent } from \"../utils/form\";\nimport { MessageBundle } from \"../utils/t9n\";\nimport {\n  GlobalTestProps,\n  IntrinsicElementsWithProp,\n  isElementFocused,\n  newProgrammaticE2EPage,\n  skipAnimations,\n} from \"./utils\";\nimport { KeyInput } from \"puppeteer\";\n\nexpect.extend(toHaveNoViolations);\n\ntype ComponentTag = keyof JSX.IntrinsicElements;\ntype AxeOwningWindow = GlobalTestProps<{ axe: typeof axe }>;\ntype ComponentHTML = string;\ntype TagOrHTML = ComponentTag | ComponentHTML;\ntype BeforeContent = (page: E2EPage) => Promise<void>;\n\nexport type TagAndPage = {\n  tag: ComponentTag;\n  page: E2EPage;\n};\n\ntype TagOrHTMLWithBeforeContent = {\n  tagOrHTML: TagOrHTML;\n\n  /**\n   * Allows for custom setup of the page.\n   *\n   * This is useful for test helpers that need to create and configure the test page before running tests.\n   *\n   * @param page\n   */\n  beforeContent: BeforeContent;\n};\n\nexport const HYDRATED_ATTR = config.hydratedFlag.name;\n\nfunction isHTML(tagOrHTML: string): boolean {\n  return tagOrHTML.trim().startsWith(\"<\");\n}\n\nfunction getTag(tagOrHTML: string): ComponentTag {\n  if (isHTML(tagOrHTML)) {\n    const calciteTagRegex = /<calcite-[a-z0-9-]+/i;\n    const trimmedTag = tagOrHTML.trim();\n    const calciteTagMatchResult = trimmedTag.match(calciteTagRegex);\n    if (calciteTagMatchResult) {\n      return calciteTagMatchResult[0].substring(1) as ComponentTag;\n    }\n    throw new Error(`Could not extract tag from HTML: ${trimmedTag}`);\n  }\n\n  return tagOrHTML as ComponentTag;\n}\n\nasync function simplePageSetup(componentTagOrHTML: TagOrHTML): Promise<E2EPage> {\n  const componentTag = getTag(componentTagOrHTML);\n  const page = await newE2EPage({\n    html: isHTML(componentTagOrHTML) ? componentTagOrHTML : `<${componentTag}></${componentTag}>`,\n    failOnConsoleError: true,\n  });\n  await page.waitForChanges();\n\n  return page;\n}\n\n/**\n * Helper for asserting that a component is accessible.\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"accessible\"), () => {\n *    accessible(`<calcite-tree></calcite-tree>`);\n * });\n *\n * @param {ComponentTestSetup} componentTestSetup - A component tag, html, or the tag and e2e page for setting up a test\n */\nexport function accessible(componentTestSetup: ComponentTestSetup): void {\n  it(\"is accessible\", async () => {\n    const { page, tag } = await getTagAndPage(componentTestSetup);\n\n    await page.addScriptTag({ path: require.resolve(\"axe-core\") });\n    await page.waitForFunction(() => (window as AxeOwningWindow).axe);\n\n    expect(\n      await page.evaluate(async (componentTag: ComponentTag) => (window as AxeOwningWindow).axe.run(componentTag), tag),\n    ).toHaveNoViolations();\n  });\n}\n\n/**\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"renders\", () => {\n *    renders(`<calcite-tree></calcite-tree>`);\n * });\n * @param componentTestSetup\n *\n * @param {string} componentTagOrHTML - the component tag or HTML markup to test against\n * @param {object} options - additional options to assert\n * @param {string} options.visible - is the component visible\n * @param {string} options.display - is the component's display \"inline\"\n */\nexport async function renders(\n  componentTestSetup: ComponentTestSetup,\n  options?: {\n    visible?: boolean;\n    display: string;\n  },\n): Promise<void> {\n  it(`renders`, async () => {\n    const { page, tag } = await getTagAndPage(componentTestSetup);\n    const element = await page.find(tag);\n\n    expect(element).toHaveAttribute(HYDRATED_ATTR);\n    expect(await element.isVisible()).toBe(options?.visible ?? true);\n    expect((await element.getComputedStyle()).display).toBe(options?.display ?? \"inline\");\n  });\n}\n\n/**\n *\n * Helper for asserting that a component reflects\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"reflects\", () => {\n *    reflects(\"calcite-action-bar\", [\n *      {\n *        propertyName: \"expandDisabled\",\n *        value: true\n *      },\n *      {\n *        propertyName: \"expanded\",\n *        value: true\n *      }\n *    ])\n * })\n *\n * @param {string} componentTagOrHTML - the component tag or HTML markup to test against\n * @param componentTestSetup\n * @param {object[]} propsToTest - the properties to test\n * @param {string} propsToTest.propertyName - the property name\n * @param {any} propsToTest.value - the property value (if boolean, needs to be `true` to ensure reflection)\n */\nexport function reflects(\n  componentTestSetup: ComponentTestSetup,\n  propsToTest: {\n    propertyName: string;\n    value: any;\n  }[],\n): void {\n  const cases = propsToTest.map(({ propertyName, value }) => [propertyName, value]);\n\n  it.each(cases)(\"%p\", async (propertyName, value) => {\n    const { page, tag: componentTag } = await getTagAndPage(componentTestSetup);\n    await skipAnimations(page);\n    const element = await page.find(componentTag);\n\n    const attrName = propToAttr(propertyName);\n    const componentAttributeSelector = `${componentTag}[${attrName}]`;\n\n    element.setProperty(propertyName, value);\n    await page.waitForChanges();\n\n    expect(await page.find(componentAttributeSelector)).toBeTruthy();\n\n    if (typeof value === \"boolean\") {\n      const getExpectedValue = (propValue: boolean): string | null => (propValue ? \"\" : null);\n      const negated = !value;\n\n      element.setProperty(propertyName, negated);\n      await page.waitForChanges();\n\n      expect(element.getAttribute(attrName)).toBe(getExpectedValue(negated));\n\n      element.setProperty(propertyName, value);\n      await page.waitForChanges();\n\n      expect(element.getAttribute(attrName)).toBe(getExpectedValue(value));\n    }\n  });\n}\n\nfunction propToAttr(name: string): string {\n  return name.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\n/**\n * Helper for asserting that a property's value is its default\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"defaults\", () => {\n *    defaults(\"calcite-action\", [\n *      {\n *        propertyName: \"active\",\n *        defaultValue: false\n *      },\n *      {\n *        propertyName: \"appearance\",\n *        defaultValue: \"solid\"\n *      }\n *    ])\n * })\n *\n * @param {string} componentTagOrHTML - the component tag or HTML markup to test against\n * @param componentTestSetup\n * @param {object[]} propsToTest - the properties to test\n * @param {string} propsToTest.propertyName - the property name\n * @param {any} propsToTest.value - the property value\n */\nexport function defaults(\n  componentTestSetup: ComponentTestSetup,\n  propsToTest: {\n    propertyName: string;\n    defaultValue: any;\n  }[],\n): void {\n  it.each(propsToTest.map(({ propertyName, defaultValue }) => [propertyName, defaultValue]))(\n    \"%p\",\n    async (propertyName, defaultValue) => {\n      const { page, tag } = await getTagAndPage(componentTestSetup);\n      const element = await page.find(tag);\n      const prop = await element.getProperty(propertyName);\n      expect(prop).toEqual(defaultValue);\n    },\n  );\n}\n\n/**\n * Helper for asserting that a component is not visible when hidden\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * @param componentTestSetup\n * describe(\"honors hidden attribute\", () => {\n *    hidden(\"calcite-accordion\")\n * });\n *\n * @param {string} componentTagOrHTML - the component tag or HTML markup to test against\n */\nexport async function hidden(componentTestSetup: ComponentTestSetup): Promise<void> {\n  it(\"is hidden\", async () => {\n    const { page, tag } = await getTagAndPage(componentTestSetup);\n    const element = await page.find(tag);\n\n    element.setAttribute(\"hidden\", \"\");\n    await page.waitForChanges();\n\n    expect(await element.isVisible()).toBe(false);\n  });\n}\n\ninterface FocusableOptions {\n  /**\n   * use this to pass an ID to setFocus()\n   *\n   * @deprecated components should no longer use a focusId parameter for setFocus()\n   */\n  focusId?: string;\n\n  /**\n   * selector used to assert the focused DOM element\n   */\n  focusTargetSelector?: string;\n\n  /**\n   * selector used to assert the focused shadow DOM element\n   */\n  shadowFocusTargetSelector?: string;\n}\n\n/**\n * Helper for asserting that a component is focusable\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"is focusable\", () => {\n *    focusable(`calcite-input-number`, { shadowFocusTargetSelector: \"input\" })\n * });\n *\n * @param {string} componentTagOrHTML - the component tag or HTML markup to test against\n * @param componentTestSetup\n * @param {FocusableOptions} [options] - additional options for asserting focus\n */\nexport function focusable(componentTestSetup: ComponentTestSetup, options?: FocusableOptions): void {\n  it(\"is focusable\", async () => {\n    const { page, tag } = await getTagAndPage(componentTestSetup);\n    const element = await page.find(tag);\n    const focusTargetSelector = options?.focusTargetSelector || tag;\n    await element.callMethod(\"setFocus\", options?.focusId); // assumes element is FocusableElement\n\n    if (options?.shadowFocusTargetSelector) {\n      expect(\n        await page.$eval(\n          tag,\n          (element: HTMLElement, selector: string) => element.shadowRoot.activeElement?.matches(selector),\n          options?.shadowFocusTargetSelector,\n        ),\n      ).toBe(true);\n    }\n\n    // wait for next frame before checking focus\n    await page.waitForChanges();\n\n    expect(await page.evaluate((selector) => document.activeElement?.matches(selector), focusTargetSelector)).toBe(\n      true,\n    );\n  });\n}\n\n/**\n * Helper for asserting slots.\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"slots\", () => {\n *    slots(\"calcite-stack\", SLOTS)\n * })\n *\n * @param {string} componentTagOrHTML - The component tag or HTML markup to test against.\n * @param {Record<string, string> | string[]} slots - A component's SLOTS resource object or an array of slot names.\n * @param {boolean} includeDefaultSlot - When true, it will run assertions on the default slot.\n */\nexport function slots(\n  componentTagOrHTML: TagOrHTML,\n  slots: Record<string, string> | string[],\n  includeDefaultSlot = false,\n): void {\n  it(\"has slots\", async () => {\n    const page = await simplePageSetup(componentTagOrHTML);\n    const tag = getTag(componentTagOrHTML);\n    const slotNames = Array.isArray(slots) ? slots : Object.values(slots);\n\n    await page.$eval(\n      tag,\n      async (component, slotNames: string[], includeDefaultSlot?: boolean) => {\n        async function slotTestElement(testClass: string, slotName?: string): Promise<void> {\n          const el = document.createElement(\"div\"); // slotting a <div> will suffice for our purposes\n          el.classList.add(testClass);\n\n          if (slotName) {\n            el.slot = slotName;\n          }\n\n          component.append(el);\n          await new Promise<void>((resolve) => requestAnimationFrame(() => resolve()));\n        }\n\n        for (let i = 0; i < slotNames.length; i++) {\n          await slotTestElement(\"slotted-into-named-slot\", slotNames[i]);\n        }\n\n        if (includeDefaultSlot) {\n          await slotTestElement(\"slotted-into-default-slot\");\n        }\n      },\n      slotNames,\n      includeDefaultSlot,\n    );\n\n    await page.waitForChanges();\n\n    const slotted = await page.evaluate(() =>\n      Array.from(document.querySelectorAll(\".slotted-into-named-slot\"))\n        .filter((slotted) => slotted.assignedSlot)\n        .map((slotted) => slotted.slot),\n    );\n\n    expect(slotNames).toEqual(slotted);\n\n    if (includeDefaultSlot) {\n      const hasDefaultSlotted = await page.evaluate(() => {\n        const defaultSlotted = document.querySelector(\".slotted-into-default-slot\");\n        return defaultSlotted.assignedSlot?.name === \"\" && defaultSlotted.slot === \"\";\n      });\n\n      expect(hasDefaultSlotted).toBe(true);\n    }\n  });\n}\n\nasync function assertLabelable({\n  page,\n  componentTag,\n  propertyToToggle,\n  focusTargetSelector = componentTag,\n  shadowFocusTargetSelector,\n}: {\n  page: E2EPage;\n  componentTag: string;\n  propertyToToggle?: string;\n  focusTargetSelector?: string;\n  shadowFocusTargetSelector?: string;\n}): Promise<void> {\n  let initialPropertyValue: boolean;\n  const component = await page.find(componentTag);\n\n  if (propertyToToggle) {\n    initialPropertyValue = await component.getProperty(propertyToToggle);\n  }\n\n  const label = await page.find(\"calcite-label\");\n  await label.callMethod(\"click\"); // we call the method to avoid clicking the child element\n  await page.waitForChanges();\n\n  expect(\n    await page.evaluate(\n      (focusTargetSelector: string): boolean => !!document.activeElement?.closest(focusTargetSelector),\n      focusTargetSelector,\n    ),\n  ).toBe(true);\n\n  if (shadowFocusTargetSelector) {\n    expect(\n      await page.$eval(\n        componentTag,\n        (element: HTMLElement, selector: string) => element.shadowRoot.activeElement.matches(selector),\n        shadowFocusTargetSelector,\n      ),\n    ).toBe(true);\n  }\n\n  if (propertyToToggle) {\n    const toggledPropertyValue = !initialPropertyValue;\n    expect(await component.getProperty(propertyToToggle)).toBe(toggledPropertyValue);\n\n    // assert that direct clicks on component toggle property correctly\n    component.setProperty(propertyToToggle, initialPropertyValue); // we reset as not all components toggle when clicked\n    await page.waitForChanges();\n    await component.click();\n    await page.waitForChanges();\n    expect(await component.getProperty(propertyToToggle)).toBe(toggledPropertyValue);\n  }\n\n  // assert clicking on labelable keeps focus\n  await component.callMethod(\"click\");\n  await page.waitForChanges();\n\n  expect(await isElementFocused(page, focusTargetSelector)).toBe(true);\n}\n\ninterface LabelableOptions extends Pick<FocusableOptions, \"focusTargetSelector\" | \"shadowFocusTargetSelector\"> {\n  /**\n   * If clicking on a label toggles the labelable component, use this prop to specify the name of the toggled prop.\n   */\n  propertyToToggle?: string;\n}\n\n/**\n * Helper for asserting label clicking functionality works.\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"labelable\", () => {\n *    async () => labelable(\"calcite-button\")\n * })\n *\n * @param {string} componentTagOrHtml - The component tag or HTML used to test label support.\n * @param {LabelableOptions} [options] - Labelable options.\n */\nexport function labelable(\n  componentTagOrHtml: TagOrHTML | TagOrHTMLWithBeforeContent,\n  options?: LabelableOptions,\n): void {\n  const id = \"labelable-id\";\n  const labelTitle = \"My Component\";\n  const propertyToToggle = options?.propertyToToggle;\n  const focusTargetSelector = options?.focusTargetSelector || `#${id}`;\n  const shadowFocusTargetSelector = options?.shadowFocusTargetSelector;\n  const { beforeContent, tagOrHTML } = getTagOrHTMLWithBeforeContent(componentTagOrHtml);\n  const componentTag = getTag(tagOrHTML);\n  const componentHtml = isHTML(tagOrHTML) ? ensureId(tagOrHTML) : `<${componentTag} id=\"${id}\"></${componentTag}>`;\n\n  function ensureId(html: string): string {\n    return html.includes(\"id=\") ? html : html.replace(componentTag, `${componentTag} id=\"${id}\" `);\n  }\n\n  describe(\"label wraps labelables\", () => {\n    it(\"is labelable when component is wrapped in a label\", async () => {\n      const wrappedHtml = html`<calcite-label>${labelTitle} ${componentHtml}</calcite-label>`;\n      const wrappedPage: E2EPage = await newE2EPage();\n      beforeContent?.(wrappedPage);\n      await wrappedPage.setContent(wrappedHtml);\n      await wrappedPage.waitForChanges();\n\n      await assertLabelable({\n        page: wrappedPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n\n    it(\"is labelable when wrapping label is set prior to component\", async () => {\n      const labelFirstWrappedPage: E2EPage = await newE2EPage();\n      beforeContent?.(labelFirstWrappedPage);\n      await labelFirstWrappedPage.setContent(html`\n        <calcite-label></calcite-label>\n        <template>${componentHtml}</template>\n      `);\n      await labelFirstWrappedPage.waitForChanges();\n      await labelFirstWrappedPage.evaluate(() => {\n        const template = document.querySelector(\"template\");\n        const labelEl = document.querySelector(\"calcite-label\");\n\n        labelEl.append(template.content.cloneNode(true));\n      }, componentHtml);\n      await labelFirstWrappedPage.waitForChanges();\n\n      await assertLabelable({\n        page: labelFirstWrappedPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n\n    it(\"is labelable when a component is set first before being wrapped in a label\", async () => {\n      const componentFirstWrappedPage: E2EPage = await newE2EPage();\n      beforeContent?.(componentFirstWrappedPage);\n      await componentFirstWrappedPage.setContent(componentHtml);\n      await componentFirstWrappedPage.waitForChanges();\n      await componentFirstWrappedPage.evaluate((id: string) => {\n        const componentEl = document.querySelector(`[id='${id}']`);\n        const labelEl = document.createElement(\"calcite-label\");\n        document.body.append(labelEl);\n        labelEl.append(componentEl);\n      }, id);\n      await componentFirstWrappedPage.waitForChanges();\n\n      await assertLabelable({\n        page: componentFirstWrappedPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n\n    it(\"only sets focus on the first labelable when label is clicked\", async () => {\n      const firstLabelableId = `${id}`;\n      const componentFirstWrappedPage: E2EPage = await newE2EPage();\n      beforeContent?.(componentFirstWrappedPage);\n      const content = html`\n        <calcite-label>\n          <!-- duplicate tags should be fine as assertion uses first match -->\n          ${componentHtml.replace(id, firstLabelableId)} ${componentHtml.replace(id, `${id}-2`)}\n          ${componentHtml.replace(id, `${id}-3`)}\n        </calcite-label>\n      `;\n\n      await componentFirstWrappedPage.setContent(content);\n      await componentFirstWrappedPage.waitForChanges();\n\n      const firstLabelableSelector = `#${firstLabelableId}`;\n\n      await assertLabelable({\n        page: componentFirstWrappedPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector:\n          focusTargetSelector === firstLabelableSelector\n            ? firstLabelableSelector\n            : `${firstLabelableSelector} ${focusTargetSelector}`,\n      });\n    });\n  });\n\n  describe(\"label is sibling to labelables\", () => {\n    it(\"is labelable with label set as a sibling to the component\", async () => {\n      const siblingHtml = html`\n        <calcite-label for=\"${id}\">${labelTitle}</calcite-label>\n        ${componentHtml}\n      `;\n      const siblingPage: E2EPage = await newE2EPage();\n      beforeContent?.(siblingPage);\n\n      await siblingPage.setContent(siblingHtml);\n      await siblingPage.waitForChanges();\n\n      await assertLabelable({\n        page: siblingPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n\n    it(\"is labelable when sibling label is set prior to component\", async () => {\n      const labelFirstSiblingPage: E2EPage = await newE2EPage();\n      beforeContent?.(labelFirstSiblingPage);\n      await labelFirstSiblingPage.setContent(html`\n        <calcite-label for=\"${id}\"></calcite-label>\n        <template>${componentHtml}</template>\n      `);\n      await labelFirstSiblingPage.waitForChanges();\n      await labelFirstSiblingPage.evaluate(() => {\n        const template = document.querySelector(\"template\");\n        document.body.append(template.content.cloneNode(true));\n      }, componentHtml);\n      await labelFirstSiblingPage.waitForChanges();\n\n      await assertLabelable({\n        page: labelFirstSiblingPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n\n    it(\"is labelable for a component set before sibling label\", async () => {\n      const componentFirstSiblingPage: E2EPage = await newE2EPage();\n      beforeContent?.(componentFirstSiblingPage);\n      await componentFirstSiblingPage.setContent(componentHtml);\n      await componentFirstSiblingPage.waitForChanges();\n      await componentFirstSiblingPage.evaluate((id: string) => {\n        const label = document.createElement(\"calcite-label\");\n        label.setAttribute(\"for\", `${id}`);\n        document.body.append(label);\n      }, id);\n      await componentFirstSiblingPage.waitForChanges();\n\n      await assertLabelable({\n        page: componentFirstSiblingPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n\n    it(\"is labelable when label's for is set after initialization\", async () => {\n      const siblingHtml = html`\n        <calcite-label>${labelTitle}</calcite-label>\n        ${componentHtml}\n      `;\n      const siblingPage: E2EPage = await newE2EPage();\n      beforeContent?.(siblingPage);\n\n      await siblingPage.setContent(siblingHtml);\n      await siblingPage.waitForChanges();\n\n      const label = await siblingPage.find(\"calcite-label\");\n      label.setProperty(\"for\", id);\n      await siblingPage.waitForChanges();\n\n      await assertLabelable({\n        page: siblingPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n  });\n}\n\ninterface FormAssociatedOptions {\n  /**\n   * This value will be set on the component and submitted by the form.\n   */\n  testValue: any;\n\n  /**\n   * Set this if the expected submit value **is different** from stringifying `testValue`.\n   * For example, a component may transform an object to a serializable string.\n   */\n  expectedSubmitValue?: any;\n\n  /*\n   * Set this if the value required to emit an input/change event is different from `testValue`.\n   * The value is passed to `page.keyboard.type()`. For example, input-time-picker requires\n   * appending AM or PM before the value commits and calciteInputTimePickerChange emits.\n   *\n   * This option is only relevant when the `validation` option is enabled.\n   */\n  validUserInputTestValue?: string;\n\n  /*\n   * Set this if emitting an input/change event requires key presses. Each array item will be passed\n   * to `page.keyboard.press()`. For example, the combobox value can be changed by pressing \"Space\"\n   * to open the component and \"Enter\" to select a value.\n   *\n   * This option is only relevant when the `validation` option is enabled.\n   */\n  changeValueKeys?: KeyInput[];\n\n  /**\n   * Specifies the input type that will be used to capture the value.\n   */\n  inputType?: HTMLInputElement[\"type\"];\n\n  /**\n   * Specifies if the component supports submitting the form on Enter key press.\n   */\n  submitsOnEnter?: boolean;\n\n  /**\n   * Specifies if the component supports clearing its value (i.e., setting to null).\n   */\n  clearable?: boolean;\n\n  /**\n   * Specifies if the component supports preventing submission and displaying validation messages.\n   */\n  validation?: boolean;\n}\n\n/**\n * Helper for testing form-associated components; specifically form submitting and resetting.\n *\n * Note that this helper should be used within a describe block.\n *\n * @param {string} componentTagOrHtml - the component tag or HTML markup to test against\n * @param {FormAssociatedOptions} options - form associated options\n */\nexport function formAssociated(\n  componentTagOrHtml: TagOrHTML | TagOrHTMLWithBeforeContent,\n  options: FormAssociatedOptions,\n): void {\n  const inputTypeContext = options?.inputType ? ` (input type=\"${options.inputType}\")` : \"\";\n\n  it(`supports association via ancestry${inputTypeContext}`, () => testAncestorFormAssociated());\n  it(`supports association via form ID${inputTypeContext}`, () => testIdFormAssociated());\n\n  if (options?.validation && ![\"color\", \"month\", \"time\"].includes(options?.inputType)) {\n    it(`supports required property validation${inputTypeContext}`, () => testRequiredPropertyValidation());\n  }\n\n  async function testAncestorFormAssociated(): Promise<void> {\n    const { beforeContent, tagOrHTML } = getTagOrHTMLWithBeforeContent(componentTagOrHtml);\n    const tag = getTag(tagOrHTML);\n    const componentHtml = ensureName(isHTML(tagOrHTML) ? tagOrHTML : `<${tag}></${tag}>`, tag);\n\n    const page = await newE2EPage();\n    await beforeContent?.(page);\n\n    const content = html` <form>\n      ${componentHtml}\n      <!--\n        keeping things simple by using submit-type input\n        this should cover button and calcite-button submit cases\n      -->\n      <input id=\"submitter\" type=\"submit\" />\n    </form>`;\n    await page.setContent(content);\n    await page.waitForChanges();\n    const component = await page.find(tag);\n\n    await assertValueSubmissionType(page, component, options);\n    await assertValueResetOnFormReset(page, component, options);\n    await assertValueSubmittedOnFormSubmit(page, component, options);\n\n    if (options.submitsOnEnter) {\n      await assertFormSubmitOnEnter(page, component, options);\n    }\n  }\n\n  async function testIdFormAssociated(): Promise<void> {\n    const { beforeContent, tagOrHTML } = getTagOrHTMLWithBeforeContent(componentTagOrHtml);\n    const tag = getTag(tagOrHTML);\n    const componentHtml = ensureForm(ensureName(isHTML(tagOrHTML) ? tagOrHTML : `<${tag}></${tag}>`, tag), tag);\n\n    const page = await newE2EPage();\n    await beforeContent?.(page);\n    await page.setContent(\n      html` <form id=\"test-form\"></form>\n        ${componentHtml}\n        <!--\n        keeping things simple by using submit-type input\n        this should cover button and calcite-button submit cases\n        -->\n        <input id=\"submitter\" form=\"test-form\" type=\"submit\" />`,\n    );\n    await page.waitForChanges();\n    const component = await page.find(tag);\n\n    await assertValueSubmissionType(page, component, options);\n    await assertValueResetOnFormReset(page, component, options);\n    await assertValueSubmittedOnFormSubmit(page, component, options);\n\n    if (options.submitsOnEnter) {\n      await assertFormSubmitOnEnter(page, component, options);\n    }\n  }\n\n  async function testRequiredPropertyValidation(): Promise<void> {\n    const requiredValidationMessage = \"Please fill out this field.\";\n    const { beforeContent, tagOrHTML } = getTagOrHTMLWithBeforeContent(componentTagOrHtml);\n    const tag = getTag(tagOrHTML);\n    const componentHtml = ensureUnchecked(\n      ensureRequired(ensureName(isHTML(tagOrHTML) ? tagOrHTML : `<${tag}></${tag}>`, tag), tag),\n    );\n\n    const page = await newE2EPage();\n    await beforeContent?.(page);\n\n    const content = html`\n      <form>\n        ${componentHtml}\n        <calcite-button id=\"submitButton\" type=\"submit\">Submit</calcite-button>\n      </form>\n    `;\n\n    await page.setContent(content);\n    await page.waitForChanges();\n    const component = await page.find(tag);\n\n    const submitButton = await page.find(\"#submitButton\");\n    const spyEvent = await page.spyOnEvent(getClearValidationEventName(tag));\n\n    await assertPreventsFormSubmission(page, component, submitButton, requiredValidationMessage);\n    await assertClearsValidationOnValueChange(page, component, options, spyEvent, tag);\n    await assertUserMessageNotOverridden(page, component, submitButton);\n  }\n\n  function ensureName(html: string, componentTag: string): string {\n    return html.includes(\"name=\") ? html : html.replace(componentTag, `${componentTag} name=\"testName\" `);\n  }\n\n  function ensureRequired(html: string, componentTag: string): string {\n    return html.includes(\"required\") ? html : html.replace(componentTag, `${componentTag} required `);\n  }\n\n  function ensureUnchecked(html: string): string {\n    return html.replace(/(checked|selected)/, \"\");\n  }\n\n  function ensureForm(html: string, componentTag: string): string {\n    return html.includes(\"form=\") ? html : html.replace(componentTag, `${componentTag} form=\"test-form\" `);\n  }\n\n  async function isCheckable(page: E2EPage, component: E2EElement, options: FormAssociatedOptions): Promise<boolean> {\n    return (\n      typeof options.testValue === \"boolean\" &&\n      (await page.$eval(component.tagName.toLowerCase(), (component) => \"checked\" in component))\n    );\n  }\n\n  function stringifyTestValue(value: any): string | string[] {\n    return Array.isArray(value) ? value.map((value) => value.toString()) : value.toString();\n  }\n\n  async function assertValueSubmissionType(\n    page: E2EPage,\n    component: E2EElement,\n    options: FormAssociatedOptions,\n  ): Promise<void> {\n    const name = await component.getProperty(\"name\");\n    const inputType = options.inputType ?? \"text\";\n\n    const hiddenFormInputType = await page.evaluate(\n      async (inputName: string, hiddenFormInputSlotName: string): Promise<string> => {\n        const hiddenFormInput = document.querySelector<HTMLInputElement>(\n          `[name=\"${inputName}\"] input[slot=${hiddenFormInputSlotName}]`,\n        );\n\n        return hiddenFormInput.type;\n      },\n      name,\n      hiddenFormInputSlotName,\n    );\n\n    if (await isCheckable(page, component, options)) {\n      expect(hiddenFormInputType).toMatch(/radio|checkbox/);\n    } else {\n      expect(hiddenFormInputType).toMatch(inputType);\n    }\n  }\n\n  async function assertValueResetOnFormReset(\n    page: E2EPage,\n    component: E2EElement,\n    options: FormAssociatedOptions,\n  ): Promise<void> {\n    const resettablePropName = (await isCheckable(page, component, options)) ? \"checked\" : \"value\";\n    const initialValue = await component.getProperty(resettablePropName);\n    component.setProperty(resettablePropName, options.testValue);\n    await page.waitForChanges();\n\n    await page.$eval(\"form\", (form: HTMLFormElement) => form.reset());\n    await page.waitForChanges();\n\n    expect(await component.getProperty(resettablePropName)).toBe(initialValue);\n  }\n\n  async function assertValueSubmittedOnFormSubmit(\n    page: E2EPage,\n    component: E2EElement,\n    options: FormAssociatedOptions,\n  ): Promise<void> {\n    const stringifiedTestValue = stringifyTestValue(options.testValue);\n    const name = await component.getProperty(\"name\");\n\n    if (await isCheckable(page, component, options)) {\n      component.setProperty(\"checked\", true);\n      await page.waitForChanges();\n      expect(await submitAndGetValue()).toEqual(\"on\");\n\n      component.setProperty(\"value\", options.testValue);\n      await page.waitForChanges();\n      expect(await submitAndGetValue()).toEqual(stringifiedTestValue);\n\n      component.setProperty(\"disabled\", true);\n      await page.waitForChanges();\n      expect(await submitAndGetValue()).toBe(null);\n\n      component.setProperty(\"checked\", true);\n      component.setProperty(\"disabled\", false);\n      await page.waitForChanges();\n      expect(await submitAndGetValue()).toEqual(stringifiedTestValue);\n\n      component.setProperty(\"checked\", false);\n      await page.waitForChanges();\n      expect(await submitAndGetValue()).toBe(null);\n    } else {\n      if (options.clearable) {\n        component.setProperty(\"required\", true);\n        component.setProperty(\"value\", null);\n        await page.waitForChanges();\n        expect(await submitAndGetValue()).toBe(\n          options.inputType === \"color\"\n            ? // `input[type=\"color\"]` will set its value to #000000 when set to an invalid value\n              // see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/color#value\n              \"#000\"\n            : undefined,\n        );\n\n        component.setProperty(\"required\", false);\n        component.setProperty(\"value\", options.testValue);\n        await page.waitForChanges();\n        expect(await submitAndGetValue()).toEqual(options?.expectedSubmitValue || stringifiedTestValue);\n      }\n\n      component.setProperty(\"disabled\", true);\n      await page.waitForChanges();\n      expect(await submitAndGetValue()).toBe(null);\n\n      component.setProperty(\"disabled\", false);\n      component.setProperty(\"value\", options.testValue);\n      await page.waitForChanges();\n      expect(await submitAndGetValue()).toEqual(options?.expectedSubmitValue || stringifiedTestValue);\n\n      component.setProperty(\"value\", options.testValue);\n      await page.waitForChanges();\n      expect(await submitAndGetValue()).toEqual(options?.expectedSubmitValue || stringifiedTestValue);\n    }\n\n    type SubmitValueResult = ReturnType<FormData[\"get\"]> | ReturnType<FormData[\"getAll\"] | undefined>;\n\n    /**\n     * This method will submit the form and return the submitted value:\n     *\n     * For single-value components, it will return a string or null if the value was not submitted\n     * For multi-value components, it will return an array of strings\n     *\n     * If the input cannot be submitted because it is invalid, undefined will be returned\n     */\n    async function submitAndGetValue(): Promise<SubmitValueResult> {\n      return page.$eval(\n        \"form\",\n        async (\n          form: HTMLFormElement,\n          inputName: string,\n          hiddenFormInputSlotName: string,\n        ): Promise<SubmitValueResult> => {\n          const hiddenFormInput = document.querySelector(\n            `[name=\"${inputName}\"] input[slot=${hiddenFormInputSlotName}]`,\n          );\n\n          let resolve: (value: SubmitValueResult) => void;\n          const submitPromise = new Promise<SubmitValueResult>((yes) => (resolve = yes));\n\n          function handleFormSubmit(event: Event): void {\n            event.preventDefault();\n            const formData = new FormData(form);\n            const values = formData.getAll(inputName);\n\n            if (values.length > 1) {\n              resolve(values as string[]);\n              return;\n            }\n\n            resolve(formData.get(inputName));\n            hiddenFormInput.removeEventListener(\"invalid\", handleInvalidInput);\n          }\n\n          function handleInvalidInput(): void {\n            resolve(undefined);\n            form.removeEventListener(\"submit\", handleFormSubmit);\n          }\n\n          form.addEventListener(\"submit\", handleFormSubmit, { once: true });\n          hiddenFormInput.addEventListener(\"invalid\", handleInvalidInput, { once: true });\n\n          document.querySelector<HTMLInputElement>(\"#submitter\").click();\n\n          return submitPromise;\n        },\n        name,\n        hiddenFormInputSlotName,\n      );\n    }\n  }\n\n  async function assertFormSubmitOnEnter(\n    page: E2EPage,\n    component: E2EElement,\n    options: FormAssociatedOptions,\n  ): Promise<void> {\n    type TestWindow = GlobalTestProps<{\n      called: boolean;\n    }>;\n\n    await page.$eval(\"form\", (form: HTMLFormElement) => {\n      form.addEventListener(\"submit\", (event) => {\n        event.preventDefault();\n        (window as TestWindow).called = true;\n      });\n    });\n\n    const stringifiedTestValue = stringifyTestValue(options.testValue);\n\n    component.setProperty(\"value\", stringifiedTestValue);\n    await component.callMethod(\"setFocus\");\n    await page.keyboard.press(\"Enter\");\n    const called = await page.evaluate(() => (window as TestWindow).called);\n\n    expect(called).toBe(true);\n  }\n\n  async function assertPreventsFormSubmission(\n    page: E2EPage,\n    component: E2EElement,\n    submitButton: E2EElement,\n    message: string,\n  ) {\n    await submitButton.click();\n    await page.waitForChanges();\n\n    await expectValidationInvalid(component, message);\n  }\n\n  async function assertClearsValidationOnValueChange(\n    page: E2EPage,\n    component: E2EElement,\n    options: FormAssociatedOptions,\n    event: EventSpy,\n    tag: string,\n  ) {\n    if (options?.changeValueKeys) {\n      for (const key of options.changeValueKeys) {\n        await page.keyboard.press(key);\n      }\n    } else {\n      await page.keyboard.type(options?.validUserInputTestValue ?? options.testValue);\n      await page.keyboard.press(\"Tab\");\n    }\n\n    await page.waitForChanges();\n\n    // components with an Input event will emit multiple times depending on the length of testValue\n    if (componentsWithInputEvent.includes(tag)) {\n      expect(event.length).toBeGreaterThanOrEqual(1);\n    } else {\n      expect(event).toHaveReceivedEventTimes(1);\n    }\n\n    await expectValidationIdle(component);\n  }\n\n  async function assertUserMessageNotOverridden(page: E2EPage, component: E2EElement, submitButton: E2EElement) {\n    const customValidationMessage = \"This is a custom message.\";\n    const customValidationIcon = \"banana\";\n\n    // don't override custom validation message and icon\n    component.setProperty(\"validationMessage\", customValidationMessage);\n    component.setProperty(\"validationIcon\", customValidationIcon);\n    component.setProperty(\"value\", undefined);\n    await page.waitForChanges();\n\n    await submitButton.click();\n    await page.waitForChanges();\n\n    await expectValidationInvalid(component, customValidationMessage, customValidationIcon);\n  }\n\n  async function expectValidationIdle(element: E2EElement) {\n    expect(await element.getProperty(\"status\")).toBe(\"idle\");\n    expect(await element.getProperty(\"validationMessage\")).toBe(\"\");\n    expect(await element.getProperty(\"validationIcon\")).toBe(false);\n  }\n\n  async function expectValidationInvalid(element: E2EElement, message: string, icon: string = \"\") {\n    expect(await element.getProperty(\"status\")).toBe(\"invalid\");\n    expect(await element.getProperty(\"validationMessage\")).toBe(message);\n    expect(element.getAttribute(\"validation-icon\")).toBe(icon);\n  }\n}\n\ninterface TabAndClickTargets {\n  tab: string;\n  click: string;\n}\n\ntype FocusTarget = \"host\" | \"child\" | \"none\";\n\ninterface DisabledOptions {\n  /**\n   *  Use this to specify whether the test should cover focusing.\n   */\n  focusTarget?: FocusTarget | TabAndClickTargets;\n\n  /**\n   *  Use this to specify the main wrapped component in shadow DOM that handles disabling interaction.\n   *\n   *  Note: this should only be used for components that wrap a single component that implements disabled behavior.\n   */\n  shadowAriaAttributeTargetSelector?: string;\n}\n\ntype ComponentTestContent = TagOrHTML | TagAndPage;\ntype ComponentTestSetupProvider = (() => ComponentTestContent) | (() => Promise<ComponentTestContent>);\ntype ComponentTestSetup = ComponentTestContent | ComponentTestSetupProvider;\n\nasync function getTagAndPage(componentTestSetup: ComponentTestSetup): Promise<TagAndPage> {\n  if (typeof componentTestSetup === \"function\") {\n    componentTestSetup = await componentTestSetup();\n  }\n\n  if (typeof componentTestSetup === \"string\") {\n    const page = await simplePageSetup(componentTestSetup);\n    const tag = getTag(componentTestSetup);\n\n    return { page, tag };\n  }\n\n  return componentTestSetup;\n}\n\nfunction getTagOrHTMLWithBeforeContent(componentTestSetup: TagOrHTML | TagOrHTMLWithBeforeContent): {\n  tagOrHTML: TagOrHTML;\n  beforeContent?: BeforeContent;\n} {\n  if (typeof componentTestSetup === \"string\") {\n    return { tagOrHTML: componentTestSetup };\n  }\n\n  return {\n    tagOrHTML: componentTestSetup.tagOrHTML,\n    beforeContent: componentTestSetup.beforeContent,\n  };\n}\n\n/**\n * Helper to test the disabled prop disabling user interaction.\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"disabled\", () => {\n *    disabled(\"calcite-input\")\n * });\n *\n * @param {ComponentTestSetup} componentTestSetup - A component tag, html, or the tag and e2e page for setting up a test.\n * @param {DisabledOptions} [options] - Disabled options.\n */\nexport function disabled(componentTestSetup: ComponentTestSetup, options?: DisabledOptions): void {\n  options = { focusTarget: \"host\", ...options };\n\n  const addRedirectPrevention = async (page: E2EPage, tag: string): Promise<void> => {\n    await page.$eval(tag, (el) => {\n      el.addEventListener(\n        \"click\",\n        (event) => {\n          const path = event.composedPath() as HTMLElement[];\n          const anchor = path.find((el) => el?.tagName === \"A\");\n\n          if (anchor) {\n            // we prevent the default behavior to avoid a page redirect\n            anchor.addEventListener(\"click\", (event) => event.preventDefault(), { once: true });\n          }\n        },\n        true,\n      );\n    });\n  };\n\n  async function expectToBeFocused(page: E2EPage, tag: string): Promise<void> {\n    const focusedTag = await page.evaluate(() => document.activeElement?.tagName.toLowerCase());\n    expect(focusedTag).toBe(tag);\n  }\n\n  function assertOnMouseAndPointerEvents(spies: EventSpy[], expectCallback: (spy: EventSpy) => void): void {\n    for (const spy of spies) {\n      expectCallback(spy);\n    }\n  }\n\n  // only testing events from https://github.com/web-platform-tests/wpt/blob/master/html/semantics/disabled-elements/event-propagate-disabled.tentative.html#L66\n  const eventsExpectedToBubble = [\"mousemove\", \"pointermove\", \"pointerdown\", \"pointerup\"];\n  const eventsExpectedToNotBubble = [\"mousedown\", \"mouseup\", \"click\"];\n  const allExpectedEvents = [...eventsExpectedToBubble, ...eventsExpectedToNotBubble];\n\n  const createEventSpiesForExpectedEvents = async (component: E2EElement): Promise<EventSpy[]> => {\n    const eventSpies: EventSpy[] = [];\n\n    for (const event of allExpectedEvents) {\n      eventSpies.push(await component.spyOnEvent(event));\n    }\n\n    return eventSpies;\n  };\n\n  async function getFocusTarget(page: E2EPage, tag: string, focusTarget: FocusTarget): Promise<string> {\n    return focusTarget === \"host\" ? tag : await page.evaluate(() => document.activeElement?.tagName.toLowerCase());\n  }\n\n  const getTabAndClickFocusTarget = async (\n    page: E2EPage,\n    tag: string,\n    focusTarget: DisabledOptions[\"focusTarget\"],\n  ): Promise<string[]> => {\n    if (typeof focusTarget === \"object\") {\n      return [focusTarget.tab, focusTarget.click];\n    }\n\n    const sameClickAndTabFocusTarget = await getFocusTarget(page, tag, focusTarget);\n\n    return [sameClickAndTabFocusTarget, sameClickAndTabFocusTarget];\n  };\n\n  const getShadowFocusableCenterCoordinates = async (page: E2EPage, tabFocusTarget: string): Promise<number[]> => {\n    return await page.$eval(tabFocusTarget, (element: HTMLElement) => {\n      const focusTarget = element.shadowRoot.activeElement || element;\n      const rect = focusTarget.getBoundingClientRect();\n\n      return [rect.x + rect.width / 2, rect.y + rect.height / 2];\n    });\n  };\n\n  it(\"prevents focusing via keyboard and mouse\", async () => {\n    const { page, tag } = await getTagAndPage(componentTestSetup);\n\n    const component = await page.find(tag);\n    const ariaAttributeTargetElement = options.shadowAriaAttributeTargetSelector\n      ? await page.find(`${tag} >>> ${options.shadowAriaAttributeTargetSelector}`)\n      : component;\n    await skipAnimations(page);\n    await addRedirectPrevention(page, tag);\n\n    const eventSpies = await createEventSpiesForExpectedEvents(component);\n\n    expect(ariaAttributeTargetElement.getAttribute(\"aria-disabled\")).toBeNull();\n\n    if (options.focusTarget === \"none\") {\n      await page.click(tag);\n      await page.waitForChanges();\n      await expectToBeFocused(page, \"body\");\n\n      assertOnMouseAndPointerEvents(eventSpies, (spy) => expect(spy).toHaveReceivedEventTimes(1));\n\n      component.setProperty(\"disabled\", true);\n      await page.waitForChanges();\n\n      expect(ariaAttributeTargetElement.getAttribute(\"aria-disabled\")).toBe(\"true\");\n\n      await page.click(tag);\n      await page.waitForChanges();\n      await expectToBeFocused(page, \"body\");\n\n      await component.callMethod(\"click\");\n      await page.waitForChanges();\n      await expectToBeFocused(page, \"body\");\n\n      assertOnMouseAndPointerEvents(eventSpies, (spy) => {\n        expect(spy).toHaveReceivedEventTimes(eventsExpectedToBubble.includes(spy.eventName) ? 2 : 1);\n      });\n\n      return;\n    }\n\n    await page.keyboard.press(\"Tab\");\n\n    const [tabFocusTarget, clickFocusTarget] = await getTabAndClickFocusTarget(page, tag, options.focusTarget);\n\n    expect(tabFocusTarget).not.toBe(\"body\");\n    await expectToBeFocused(page, tabFocusTarget);\n\n    const [shadowFocusableCenterX, shadowFocusableCenterY] = await getShadowFocusableCenterCoordinates(\n      page,\n      tabFocusTarget,\n    );\n\n    async function resetFocusOrder(): Promise<void> {\n      // test page has default margin, so clicking on 0,0 will not hit the test element\n      await page.mouse.click(0, 0);\n    }\n\n    await resetFocusOrder();\n    await expectToBeFocused(page, \"body\");\n\n    await page.mouse.click(shadowFocusableCenterX, shadowFocusableCenterY);\n    await page.waitForChanges();\n    await expectToBeFocused(page, clickFocusTarget);\n\n    await component.callMethod(\"click\");\n    await page.waitForChanges();\n    await expectToBeFocused(page, clickFocusTarget);\n\n    assertOnMouseAndPointerEvents(eventSpies, (spy) => {\n      if (spy.eventName === \"click\") {\n        // some components emit more than one click event (e.g., from calling `click()`),\n        // so we check if at least one event is received\n        expect(spy.length).toBeGreaterThanOrEqual(2);\n      } else {\n        expect(spy).toHaveReceivedEventTimes(1);\n      }\n    });\n\n    component.setProperty(\"disabled\", true);\n    await page.waitForChanges();\n\n    expect(ariaAttributeTargetElement.getAttribute(\"aria-disabled\")).toBe(\"true\");\n\n    await resetFocusOrder();\n    await page.keyboard.press(\"Tab\");\n    await expectToBeFocused(page, \"body\");\n\n    await page.mouse.click(shadowFocusableCenterX, shadowFocusableCenterY);\n    await expectToBeFocused(page, \"body\");\n\n    assertOnMouseAndPointerEvents(eventSpies, (spy) => {\n      if (spy.eventName === \"click\") {\n        // some components emit more than one click event (e.g., from calling `click()`),\n        // so we check if at least one event is received\n        expect(spy.length).toBeGreaterThanOrEqual(2);\n      } else {\n        expect(spy).toHaveReceivedEventTimes(eventsExpectedToBubble.includes(spy.eventName) ? 2 : 1);\n      }\n    });\n  });\n\n  it(\"events are no longer blocked right after enabling\", async () => {\n    const { page, tag } = await getTagAndPage(componentTestSetup);\n\n    const component = await page.find(tag);\n    const ariaAttributeTargetElement = options.shadowAriaAttributeTargetSelector\n      ? await page.find(`${tag} >>> ${options.shadowAriaAttributeTargetSelector}`)\n      : component;\n\n    await skipAnimations(page);\n    await addRedirectPrevention(page, tag);\n\n    const eventSpies = await createEventSpiesForExpectedEvents(component);\n\n    component.setProperty(\"disabled\", true);\n    await page.waitForChanges();\n\n    expect(ariaAttributeTargetElement.getAttribute(\"aria-disabled\")).toBe(\"true\");\n\n    await page.click(tag);\n    await page.waitForChanges();\n\n    assertOnMouseAndPointerEvents(eventSpies, (spy) => {\n      expect(spy).toHaveReceivedEventTimes(eventsExpectedToBubble.includes(spy.eventName) ? 1 : 0);\n    });\n\n    type InteractiveCalciteComponents = IntrinsicElementsWithProp<\"disabled\"> & HTMLElement;\n\n    // this needs to run in the browser context to ensure disabling and events fire immediately after being set\n    await page.$eval(\n      tag,\n      (component: InteractiveCalciteComponents, allExpectedEvents: string[]) => {\n        component.disabled = false;\n        allExpectedEvents.forEach((event) => component.dispatchEvent(new MouseEvent(event)));\n\n        component.disabled = true;\n        allExpectedEvents.forEach((event) => component.dispatchEvent(new MouseEvent(event)));\n      },\n      allExpectedEvents,\n    );\n\n    assertOnMouseAndPointerEvents(eventSpies, (spy) => {\n      if (spy.eventName === \"click\") {\n        // some components emit more than one click event (e.g., from calling `click()`),\n        // so we check if at least one event is received\n        expect(spy.length).toBeGreaterThanOrEqual(1);\n      } else {\n        expect(spy).toHaveReceivedEventTimes(eventsExpectedToBubble.includes(spy.eventName) ? 3 : 1);\n      }\n    });\n  });\n}\n\n/**\n * This helper will test if a floating-ui-owning component has configured the floating-ui correctly.\n * At the moment, this only tests if the scroll event listeners are only active when the floating-ui is displayed.\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"owns a floating-ui\", () => {\n *  floatingUIOwner(\n *    `<calcite-input-date-picker></calcite-input-date-picker>`,\n *      \"open\",\n *      { shadowSelector: \".menu-container\" }\n *  )\n * });\n *\n * @param {TagOrHTML} componentTagOrHTML - The component tag or HTML markup to test against.\n * @param {string} togglePropName - The component property that toggles the floating-ui.\n * @param [options] - additional options for asserting focus\n * @param {string} [options.shadowSelector] - The selector in the shadow DOM for the floating-ui element.\n */\nexport function floatingUIOwner(\n  componentTagOrHTML: TagOrHTML,\n  togglePropName: string,\n  options?: {\n    /**\n     * Use this to specify the selector in the shadow DOM for the floating-ui element.\n     */\n    shadowSelector?: string;\n  },\n): void {\n  it(\"owns a floating-ui\", async () => {\n    const page = await simplePageSetup(componentTagOrHTML);\n\n    const scrollablePageSizeInPx = 2400;\n    await page.addStyleTag({\n      content: `body {\n      height: ${scrollablePageSizeInPx}px;\n      width: ${scrollablePageSizeInPx}px;\n    }`,\n    });\n    await page.waitForChanges();\n\n    const tag = getTag(componentTagOrHTML);\n    const component = await page.find(tag);\n\n    async function getTransform(): Promise<string> {\n      // need to get the style attribute from the browser context since the E2E element returns null\n      return page.$eval(\n        tag,\n        (component: HTMLElement, shadowSelector: string): string => {\n          const floatingUIEl = shadowSelector\n            ? component.shadowRoot.querySelector<HTMLElement>(shadowSelector)\n            : component;\n\n          return floatingUIEl.getAttribute(\"style\");\n        },\n        options?.shadowSelector,\n      );\n    }\n\n    async function scrollTo(x: number, y: number): Promise<void> {\n      await page.evaluate((x: number, y: number) => document.firstElementChild.scrollTo(x, y), x, y);\n    }\n\n    component.setProperty(togglePropName, false);\n    await page.waitForChanges();\n\n    const initialClosedTransform = await getTransform();\n\n    await scrollTo(scrollablePageSizeInPx, scrollablePageSizeInPx);\n    await page.waitForChanges();\n\n    expect(await getTransform()).toBe(initialClosedTransform);\n\n    await scrollTo(0, 0);\n    await page.waitForChanges();\n\n    expect(await getTransform()).toBe(initialClosedTransform);\n\n    component.setProperty(togglePropName, true);\n    await page.waitForChanges();\n\n    const initialOpenTransform = await getTransform();\n\n    await scrollTo(scrollablePageSizeInPx, scrollablePageSizeInPx);\n    await page.waitForChanges();\n\n    expect(await getTransform()).not.toBe(initialOpenTransform);\n\n    await scrollTo(0, 0);\n    await page.waitForChanges();\n\n    expect(await getTransform()).toBe(initialOpenTransform);\n  });\n}\n\n/**\n * Helper to test if a component has a floating-UI-owning component wired up.\n *\n * Note: this performs a shallow test and assumes the underlying component has floating-ui properly configured.\n *\n * @example\n * describe(\"delegates to floating-ui-owner component\", () => {\n *   delegatesToFloatingUiOwningComponent(\"calcite-pad\", \"calcite-action-group\");\n * });\n *\n * @param componentTagOrHTML\n * @param floatingUiOwnerComponentTag\n */\nexport async function delegatesToFloatingUiOwningComponent(\n  componentTagOrHTML: TagOrHTML,\n  floatingUiOwnerComponentTag: ComponentTag,\n): Promise<void> {\n  it(\"delegates to floating-ui owning component\", async () => {\n    const page = await simplePageSetup(componentTagOrHTML);\n    const tag = getTag(componentTagOrHTML);\n\n    // we assume if `overlay-positioning` is used by an internal component that it is a floating-ui component\n\n    const floatingUiOwningComponent = await page.find(`${tag} >>> ${floatingUiOwnerComponentTag}`);\n    expect(await floatingUiOwningComponent.getProperty(\"overlayPositioning\")).toBe(\"absolute\");\n\n    const component = await page.find(tag);\n    await component.setProperty(\"overlayPositioning\", \"fixed\");\n    await page.waitForChanges();\n\n    expect(await floatingUiOwningComponent.getProperty(\"overlayPositioning\")).toBe(\"fixed\");\n  });\n}\n\n/**\n * Helper to test t9n component setup.\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"translation support\", () => {\n *   t9n(\"calcite-action\");\n * });\n *\n * @param {ComponentTestSetup} componentTestSetup - A component tag, html, or the tag and e2e page for setting up a test.\n */\n\nexport async function t9n(componentTestSetup: ComponentTestSetup): Promise<void> {\n  let component: E2EElement;\n  let page: E2EPage;\n  let getCurrentMessages: () => Promise<MessageBundle>;\n\n  beforeEach(async () => {\n    const { page: e2ePage, tag } = await getTagAndPage(componentTestSetup);\n    page = e2ePage;\n\n    type CalciteComponentsWithMessages = IntrinsicElementsWithProp<\"messages\"> & HTMLElement;\n\n    component = await page.find(tag);\n    getCurrentMessages = async (): Promise<MessageBundle> => {\n      return page.$eval(tag, (component: CalciteComponentsWithMessages) => component.messages);\n    };\n  });\n\n  it(\"has defined default messages\", async () => await assertDefaultMessages());\n  it(\"overrides messages\", async () => await assertOverrides());\n  it(\"switches messages\", async () => await assertLangSwitch());\n\n  async function assertDefaultMessages(): Promise<void> {\n    expect(await getCurrentMessages()).toBeDefined();\n  }\n\n  async function assertOverrides(): Promise<void> {\n    const messages = await getCurrentMessages();\n    const firstMessageProp = Object.keys(messages)[0];\n    const messageOverride = { [firstMessageProp]: \"override test\" };\n\n    component.setProperty(\"messageOverrides\", messageOverride);\n    await page.waitForChanges();\n\n    expect(await getCurrentMessages()).toEqual({\n      ...messages,\n      ...messageOverride,\n    });\n\n    // reset test changes\n    component.setProperty(\"messageOverrides\", undefined);\n    await page.waitForChanges();\n  }\n\n  async function assertLangSwitch(): Promise<void> {\n    const enMessages = await getCurrentMessages();\n    const fakeBundleIdentifier = \"__fake__\";\n    await page.evaluate(\n      (enMessages, fakeBundleIdentifier) => {\n        const orig = window.fetch;\n        window.fetch = async function (input, init) {\n          if (typeof input === \"string\" && input.endsWith(\"messages_es.json\")) {\n            const fakeEsMessages = {\n              ...enMessages, // reuse real message bundle in case component rendering depends on strings\n\n              [fakeBundleIdentifier]: true, // we inject a fake identifier for assertion-purposes\n            };\n            window.fetch = orig;\n            return new Response(new Blob([JSON.stringify(fakeEsMessages, null, 2)], { type: \"application/json\" }));\n          }\n\n          return orig.call(input, init);\n        };\n      },\n      enMessages,\n      fakeBundleIdentifier,\n    );\n\n    component.setAttribute(\"lang\", \"es\");\n    await page.waitForChanges();\n    await page.waitForTimeout(3000);\n    const esMessages = await getCurrentMessages();\n\n    expect(esMessages).toHaveProperty(fakeBundleIdentifier);\n\n    // reset test changes\n    component.removeAttribute(\"lang\");\n    await page.waitForChanges();\n  }\n}\n\ninterface BeforeToggle {\n  /**\n   * Function argument to simulate user input (mouse or keyboard), to open the component.\n   */\n  open: (page: E2EPage) => Promise<void>;\n\n  /**\n   * Function argument to simulate user input (mouse or keyboard), to close the component.\n   */\n  close: (page: E2EPage) => Promise<void>;\n}\n\ninterface OpenCloseOptions {\n  /**\n   * Toggle property to test. Currently, either \"open\" or \"expanded\".\n   */\n  openPropName?: string;\n\n  /**\n   * Indicates the initial value of the toggle property.\n   */\n  initialToggleValue?: boolean;\n\n  /**\n   * Optional argument with functions to simulate user input (mouse or keyboard), to open or close the component.\n   */\n  beforeToggle?: BeforeToggle;\n}\n\n/**\n * Helper to test openClose component setup.\n *\n * Note that this helper should be used within a `describe` block.\n *\n * @example\n *\n * describe(\"openClose\", () => {\n *   openClose(\"calcite-combobox opened with a tab\", {\n *     beforeToggle: {\n *        open: async (page) => {\n *            await page.keyboard.press(\"Tab\");\n *            await page.waitForChanges();\n *        },\n *        close: async (page) => {\n *            await page.keyboard.press(\"Tab\");\n *            await page.waitForChanges();\n *        },\n *      }\n *   });\n *\n *  openClose(\"open calcite-combobox closed with a tab\", {\n *        initialToggleValue: true,\n *        beforeToggle: {\n *          close: async (page) => {\n *            await page.keyboard.press(\"Tab\");\n *            await page.waitForChanges();\n *        },\n *      }\n *    }\n * })\n *\n * @param componentTagOrHTML - The component tag or HTML markup to test against.\n * @param {object} [options] - Additional options to assert.\n */\n\nexport function openClose(componentTagOrHTML: TagOrHTML, options?: OpenCloseOptions): void {\n  const defaultOptions: OpenCloseOptions = {\n    initialToggleValue: false,\n    openPropName: \"open\",\n  };\n  const customizedOptions = { ...defaultOptions, ...options };\n\n  type EventOrderWindow = GlobalTestProps<{ events: string[] }>;\n  const eventSequence = setUpEventSequence(componentTagOrHTML);\n\n  function setUpEventSequence(componentTagOrHTML: TagOrHTML): string[] {\n    const tag = getTag(componentTagOrHTML);\n\n    const camelCaseTag = tag.replace(/-([a-z])/g, (lettersAfterHyphen) => lettersAfterHyphen[1].toUpperCase());\n    const eventSuffixes = [`BeforeOpen`, `Open`, `BeforeClose`, `Close`];\n\n    return eventSuffixes.map((suffix) => `${camelCaseTag}${suffix}`);\n  }\n\n  async function setUpPage(componentTagOrHTML: TagOrHTML, page: E2EPage): Promise<void> {\n    await page.evaluate(\n      (eventSequence: string[], initialToggleValue: boolean, openPropName: string, componentTagOrHTML: string) => {\n        const receivedEvents: string[] = [];\n\n        (window as EventOrderWindow).events = receivedEvents;\n\n        eventSequence.forEach((eventType) => {\n          document.addEventListener(eventType, (event) => receivedEvents.push(event.type));\n        });\n\n        if (!initialToggleValue) {\n          return;\n        }\n\n        const component = document.createElement(componentTagOrHTML);\n        component[openPropName] = true;\n\n        document.body.append(component);\n      },\n      eventSequence,\n      customizedOptions.initialToggleValue,\n      customizedOptions.openPropName,\n      componentTagOrHTML,\n    );\n  }\n\n  async function testOpenCloseEvents(componentTagOrHTML: TagOrHTML, page: E2EPage): Promise<void> {\n    const tag = getTag(componentTagOrHTML);\n    const element = await page.find(tag);\n\n    const [beforeOpenEvent, openEvent, beforeCloseEvent, closeEvent] = eventSequence.map((event) =>\n      page.waitForEvent(event),\n    );\n\n    const [beforeOpenSpy, openSpy, beforeCloseSpy, closeSpy] = await Promise.all(\n      eventSequence.map(async (event) => await element.spyOnEvent(event)),\n    );\n\n    await page.waitForChanges();\n\n    if (customizedOptions.beforeToggle) {\n      await customizedOptions.beforeToggle.open(page);\n    } else {\n      element.setProperty(customizedOptions.openPropName, true);\n    }\n\n    await page.waitForChanges();\n\n    await beforeOpenEvent;\n    await openEvent;\n\n    expect(beforeOpenSpy).toHaveReceivedEventTimes(1);\n    expect(openSpy).toHaveReceivedEventTimes(1);\n    expect(beforeCloseSpy).toHaveReceivedEventTimes(0);\n    expect(closeSpy).toHaveReceivedEventTimes(0);\n\n    if (customizedOptions.beforeToggle) {\n      await customizedOptions.beforeToggle.close(page);\n    } else {\n      element.setProperty(customizedOptions.openPropName, false);\n    }\n\n    await page.waitForChanges();\n\n    await beforeCloseEvent;\n    await closeEvent;\n\n    expect(beforeCloseSpy).toHaveReceivedEventTimes(1);\n    expect(closeSpy).toHaveReceivedEventTimes(1);\n    expect(beforeOpenSpy).toHaveReceivedEventTimes(1);\n    expect(openSpy).toHaveReceivedEventTimes(1);\n\n    expect(await page.evaluate(() => (window as EventOrderWindow).events)).toEqual(eventSequence);\n  }\n\n  /**\n   * `skipAnimations` utility sets the animation duration to 0.01. This is a workaround for an issue with the animation utility.\n   * Because this still leaves a very small duration, we can still test the animation events, but faster.\n   */\n\n  if (customizedOptions.initialToggleValue === true) {\n    it(\"emits on initialization with animations enabled\", async () => {\n      const page = await newProgrammaticE2EPage();\n      await skipAnimations(page);\n      await setUpPage(componentTagOrHTML, page);\n      await testOpenCloseEvents(componentTagOrHTML, page);\n    });\n\n    it(\"emits on initialization with animations disabled\", async () => {\n      const page = await newProgrammaticE2EPage();\n      await page.addStyleTag({\n        content: `:root { --calcite-duration-factor: 0; }`,\n      });\n      await setUpPage(componentTagOrHTML, page);\n      await testOpenCloseEvents(componentTagOrHTML, page);\n    });\n  } else {\n    it(`emits with animations enabled`, async () => {\n      const page = await simplePageSetup(componentTagOrHTML);\n      await skipAnimations(page);\n      await setUpPage(componentTagOrHTML, page);\n      await testOpenCloseEvents(componentTagOrHTML, page);\n    });\n\n    it(`emits with animations disabled`, async () => {\n      const page = await simplePageSetup(componentTagOrHTML);\n      await page.addStyleTag({\n        content: `:root { --calcite-duration-factor: 0; }`,\n      });\n      await setUpPage(componentTagOrHTML, page);\n      await testOpenCloseEvents(componentTagOrHTML, page);\n    });\n  }\n}\n"]}