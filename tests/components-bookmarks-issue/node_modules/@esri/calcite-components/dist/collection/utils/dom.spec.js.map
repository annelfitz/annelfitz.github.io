{"version":3,"file":"dom.spec.js","sourceRoot":"","sources":["../../../src/utils/dom.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { ModeName } from \"../../src/components/interfaces\";\nimport { html } from \"../../support/formatting\";\nimport {\n  ensureId,\n  focusElementInGroup,\n  getElementProp,\n  getModeName,\n  getSlotted,\n  isPrimaryPointerButton,\n  setRequestedIcon,\n  slotChangeGetAssignedElements,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n  getShadowRootNode,\n  slotChangeGetTextContent,\n  slotChangeGetAssignedNodes,\n  slotChangeHasAssignedNode,\n  slotChangeHasTextContent,\n  slotChangeHasContent,\n  isBefore,\n} from \"./dom\";\nimport { guidPattern } from \"./guid.spec\";\n\ndescribe(\"dom\", () => {\n  describe(\"getElementProp()\", () => {\n    describe(\"light DOM\", () => {\n      it(\"returns match if found on self\", async () => {\n        document.body.innerHTML = `\n        <div>\n          <div>\n            <div id=\"test\" test-prop=\"self\"></div>\n          </div>\n        </div>\n      `;\n\n        expect(getElementProp(document.getElementById(\"test\"), \"test-prop\", \"not-found\")).toBe(\"self\");\n      });\n\n      it(\"returns first ancestral match\", async () => {\n        document.body.innerHTML = `\n        <div test-prop=\"root\">\n          <div>\n            <div id=\"test\" ></div>\n          </div>\n        </div>\n      `;\n\n        expect(getElementProp(document.getElementById(\"test\"), \"test-prop\", \"not-found\")).toBe(\"root\");\n      });\n\n      it(\"returns fallback if no match is found\", async () => {\n        document.body.innerHTML = `\n        <div>\n          <div>\n            <div id=\"test\"></div>\n          </div>\n        </div>\n      `;\n\n        expect(getElementProp(document.getElementById(\"test\"), \"test-prop\", \"not-found\")).toBe(\"not-found\");\n      });\n    });\n\n    describe(\"shadow DOM boundaries\", () => {\n      function defineTestComponents(): void {\n        class PropLookupParentTest extends HTMLElement {\n          constructor() {\n            super();\n            this.attachShadow({ mode: \"open\" });\n          }\n\n          connectedCallback(): void {\n            this.shadowRoot.innerHTML = `<prop-lookup-child-test></prop-lookup-child-test>`;\n          }\n        }\n\n        class PropLookupChildTest extends HTMLElement {\n          constructor() {\n            super();\n            this.attachShadow({ mode: \"open\" });\n          }\n\n          connectedCallback(): void {\n            this.shadowRoot.innerHTML = \"<div>😄</div>\";\n          }\n        }\n\n        customElements.define(\"prop-lookup-parent-test\", PropLookupParentTest);\n        customElements.define(\"prop-lookup-child-test\", PropLookupChildTest);\n      }\n\n      beforeEach(defineTestComponents);\n\n      it(\"does not cross shadow DOM boundary (default)\", () => {\n        document.body.innerHTML = `\n        <prop-lookup-parent-test id=\"test\" test-prop=\"parent\"></prop-lookup-parent-test>\n      `;\n\n        expect(\n          getElementProp(document.getElementById(\"test\").shadowRoot.firstElementChild, \"test-prop\", \"not-found\"),\n        ).toBe(\"not-found\");\n      });\n    });\n  });\n\n  describe(\"getSlotted()\", () => {\n    const testSlotName = \"test\";\n    const testSlotName2 = \"test2\";\n\n    function getTestComponent(): HTMLElement {\n      return document.body.querySelector(\"slot-test\");\n    }\n\n    function defineTestComponents() {\n      class SlotTest extends HTMLElement {\n        constructor() {\n          super();\n          this.attachShadow({ mode: \"open\" });\n        }\n\n        connectedCallback(): void {\n          this.shadowRoot.innerHTML = html`\n            <slot name=\"${testSlotName}\"></slot>\n            <slot name=\"${testSlotName2}\"></slot>\n            <slot></slot>\n          `;\n        }\n      }\n\n      customElements.define(\"slot-test\", SlotTest);\n    }\n\n    beforeEach(() => {\n      defineTestComponents();\n\n      document.body.innerHTML = `\n      <slot-test>\n        <h2 slot=${testSlotName}>\n          <span>😃</span>\n          <span>🙂</span>\n        </h2>\n        <h2 slot=${testSlotName}><span>😂</span></h2>\n        <h3 slot=${testSlotName2}><span>😂</span></h3>\n        <div id=\"default-slot-el\"><p>🙂</p></div>\n      </slot-test>\n    `;\n    });\n\n    describe(\"single slotted\", () => {\n      it(\"returns elements with matching default slot\", () => expect(getSlotted(getTestComponent())).toBeTruthy());\n\n      it(\"returns elements with matching slot name\", () =>\n        expect(getSlotted(getTestComponent(), testSlotName)).toBeTruthy());\n\n      it(\"returns elements with matching slot names\", () =>\n        expect(getSlotted(getTestComponent(), [testSlotName, testSlotName2])).toBeTruthy());\n\n      it(\"returns null when no results\", () => expect(getSlotted(getTestComponent(), \"non-existent-slot\")).toBeNull());\n\n      describe(\"scoped selector\", () => {\n        it(\"returns element with matching default slot\", () =>\n          expect(getSlotted(getTestComponent(), { selector: \"p\" })).toBeTruthy());\n\n        it(\"returns element with matching nested selector\", () =>\n          expect(getSlotted(getTestComponent(), testSlotName, { selector: \"span\" })).toBeTruthy());\n\n        it(\"returns nothing with non-matching child selector\", () =>\n          expect(\n            getSlotted(getTestComponent(), testSlotName, {\n              selector: \"non-existent-slot\",\n            }),\n          ).toBeNull());\n      });\n\n      describe(\"direct slotted children\", () => {\n        it(\"returns element if slot is child of element\", () => {\n          document.body.innerHTML = `\n            <slot-test>\n              <h2 slot=${testSlotName}><span>😂</span></h2>\n              <some-other-element>\n                <h2 slot=${testSlotName}><span>🙃</span></h2>\n              </some-other-element>\n            </slot-test>\n          `;\n\n          expect(\n            getSlotted(getTestComponent(), testSlotName, {\n              direct: true,\n            }),\n          ).toBeTruthy();\n        });\n\n        it(\"returns null if slot is nested\", () => {\n          document.body.innerHTML = `\n            <slot-test>\n              <some-other-element>\n                <h2 slot=${testSlotName}><span>🙃</span></h2>\n              </some-other-element>\n            </slot-test>\n          `;\n\n          expect(\n            getSlotted(getTestComponent(), testSlotName, {\n              all: true,\n              direct: true,\n            }),\n          ).toBeTruthy();\n        });\n      });\n    });\n\n    describe(\"multiple slotted\", () => {\n      it(\"returns element with default slot name\", () =>\n        expect(getSlotted(getTestComponent(), { all: true })).toHaveLength(1));\n\n      it(\"returns elements with matching slot name\", () =>\n        expect(getSlotted(getTestComponent(), testSlotName, { all: true })).toHaveLength(2));\n\n      it(\"returns elements with matching slot names\", () =>\n        expect(\n          getSlotted(getTestComponent(), [testSlotName, testSlotName2], {\n            all: true,\n          }),\n        ).toHaveLength(3));\n\n      it(\"returns empty list when no results\", () =>\n        expect(getSlotted(getTestComponent(), \"non-existent-slot\", { all: true })).toHaveLength(0));\n\n      describe(\"scoped selector\", () => {\n        it(\"returns child elements matching selector\", () =>\n          expect(\n            getSlotted(getTestComponent(), testSlotName, {\n              all: true,\n              selector: \"span\",\n            }),\n          ).toHaveLength(3));\n\n        it(\"returns empty list with non-matching child selector\", () =>\n          expect(\n            getSlotted(getTestComponent(), testSlotName, {\n              all: true,\n              selector: \"non-existent\",\n            }),\n          ).toHaveLength(0));\n      });\n\n      describe(\"direct slotted children\", () => {\n        it(\"returns child elements if children are direct descendants\", () => {\n          document.body.innerHTML = `\n            <slot-test>\n              <h2 slot=${testSlotName}><span>😃</span></h2>\n              <some-other-element>\n                <h2 slot=${testSlotName}><span>🙃</span></h2>\n              </some-other-element>\n            </slot-test>\n          `;\n\n          expect(\n            getSlotted(getTestComponent(), testSlotName, {\n              all: true,\n              direct: true,\n            }),\n          ).toHaveLength(1);\n        });\n\n        it(\"returns empty list if children are nested\", () => {\n          document.body.innerHTML = `\n            <slot-test>\n              <some-other-element>\n                <h2 slot=${testSlotName}><span>😃</span></h2>\n                <h2 slot=${testSlotName}><span>🙃</span></h2>\n              </some-other-element>\n            </slot-test>\n          `;\n\n          expect(\n            getSlotted(getTestComponent(), testSlotName, {\n              all: true,\n              direct: true,\n            }),\n          ).toHaveLength(0);\n        });\n      });\n    });\n  });\n\n  describe(\"setRequestedIcon()\", () => {\n    it(\"returns the custom icon name if custom value is passed\", () =>\n      expect(setRequestedIcon({ exampleValue: \"exampleReturnedValue\" }, \"myCustomValue\", \"exampleValue\")).toBe(\n        \"myCustomValue\",\n      ));\n\n    it(\"returns the pre-defined icon name if custom value is not passed\", () =>\n      expect(setRequestedIcon({ exampleValue: \"exampleReturnedValue\" }, \"\", \"exampleValue\")).toBe(\n        \"exampleReturnedValue\",\n      ));\n  });\n\n  describe(\"uniqueId\", () => {\n    it(\"generates unique ID on an element\", () => {\n      const input = document.createElement(\"input\");\n      expect(ensureId(input)).toMatch(new RegExp(`input-${guidPattern.source}`));\n    });\n\n    it(\"returns the element's ID if it exists\", () => {\n      const input = document.createElement(\"input\");\n      input.id = \"test\";\n      expect(ensureId(input)).toBe(\"test\");\n    });\n\n    it(\"returns empty string if invoked without element\", () => {\n      expect(ensureId(null)).toBe(\"\");\n    });\n  });\n\n  describe(\"getModeName()\", () => {\n    interface ModeElement extends HTMLElement {\n      foundModeName: ModeName;\n    }\n    function getTestComponentMode(): string {\n      return document.body.querySelector<ModeElement>(\"mode-element\").foundModeName;\n    }\n    function defineTestComponents(): void {\n      class ModeElement extends HTMLElement {\n        constructor() {\n          super();\n          this.attachShadow({ mode: \"open\" });\n        }\n\n        foundModeName = null;\n\n        connectedCallback(): void {\n          this.foundModeName = getModeName(this);\n        }\n      }\n      customElements.define(\"mode-element\", ModeElement);\n    }\n    beforeEach(() => {\n      defineTestComponents();\n    });\n\n    it(\"finds the closest mode if set (light)\", () => {\n      document.body.innerHTML = html`\n        <div class=\"calcite-mode-dark\">\n          <div class=\"calcite-mode-light\">\n            <mode-element></mode-element>\n          </div>\n        </div>\n      `;\n      expect(getTestComponentMode()).toBe(\"light\");\n    });\n\n    it(\"finds the closest mode if set (dark)\", () => {\n      document.body.innerHTML = html`\n        <div class=\"calcite-mode-light\">\n          <div class=\"calcite-mode-dark\">\n            <mode-element></mode-element>\n          </div>\n        </div>\n      `;\n      expect(getTestComponentMode()).toBe(\"dark\");\n    });\n\n    it(\"sets to default (light) if no mode is set\", () => {\n      document.body.innerHTML = html`\n        <div>\n          <div>\n            <mode-element></mode-element>\n          </div>\n        </div>\n      `;\n      expect(getTestComponentMode()).toBe(\"light\");\n    });\n  });\n\n  describe(\"toAriaBoolean()\", () => {\n    it(\"handles truthy values\", () => {\n      expect(toAriaBoolean(true)).toBe(\"true\");\n    });\n\n    it(\"handles falsy values\", () => {\n      expect(toAriaBoolean(false)).toBe(\"false\");\n      expect(toAriaBoolean(null)).toBe(\"false\");\n      expect(toAriaBoolean(undefined)).toBe(\"false\");\n    });\n  });\n\n  describe(\"isPrimaryPointerButton()\", () => {\n    it(\"handles pointer events\", () => {\n      expect(isPrimaryPointerButton({ button: 0, isPrimary: true } as PointerEvent)).toBe(true);\n      expect(isPrimaryPointerButton({ button: 1, isPrimary: true } as PointerEvent)).toBe(false);\n      expect(isPrimaryPointerButton({ button: 0, isPrimary: false } as PointerEvent)).toBe(false);\n      expect(isPrimaryPointerButton({} as PointerEvent)).toBe(false);\n    });\n  });\n\n  describe(\"slotChangeGetAssignedElements()\", () => {\n    it(\"handles slotted elements\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedElements = () => [document.createElement(\"div\"), document.createElement(\"div\")];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeGetAssignedElements(event)).toHaveLength(2);\n    });\n\n    it(\"handles no slotted elements\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedElements = () => [];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeGetAssignedElements(event)).toHaveLength(0);\n    });\n  });\n\n  describe(\"slotChangeHasAssignedElement()\", () => {\n    it(\"handles slotted elements\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedElements = () => [document.createElement(\"div\"), document.createElement(\"div\")];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeHasAssignedElement(event)).toBe(true);\n    });\n\n    it(\"handles no slotted elements\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedElements = () => [];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeHasAssignedElement(event)).toBe(false);\n    });\n  });\n\n  describe(\"slotChangeHasAssignedNode()\", () => {\n    it(\"handles slotted nodes\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedNodes = () => [document.createTextNode(\"hello\"), document.createTextNode(\"world\")];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeHasAssignedNode(event)).toBe(true);\n    });\n\n    it(\"handles no slotted nodes\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedNodes = () => [];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeHasAssignedNode(event)).toBe(false);\n    });\n  });\n\n  describe(\"slotChangeGetAssignedNodes()\", () => {\n    it(\"handles slotted nodes\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedNodes = () => [document.createTextNode(\"hello\"), document.createTextNode(\"world\")];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeGetAssignedNodes(event)).toHaveLength(2);\n    });\n\n    it(\"handles no slotted nodes\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedNodes = () => [];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeGetAssignedNodes(event)).toHaveLength(0);\n    });\n  });\n\n  describe(\"slotChangeGetTextContent()\", () => {\n    it(\"handles slotted nodes\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedNodes = () => [document.createTextNode(\"hello\"), document.createTextNode(\"world\")];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeGetTextContent(event)).toEqual(\"helloworld\");\n    });\n\n    it(\"handles no slotted nodes\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedNodes = () => [];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeGetTextContent(event)).toEqual(\"\");\n    });\n  });\n\n  describe(\"slotChangeHasContent()\", () => {\n    it(\"handles slotted nodes\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedNodes = () => [document.createTextNode(\"hello\")];\n      target.assignedElements = () => [];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeHasContent(event)).toEqual(true);\n    });\n\n    it(\"handles slotted elements\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedNodes = () => [];\n      target.assignedElements = () => [document.createElement(\"div\")];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeHasContent(event)).toEqual(true);\n    });\n\n    it(\"handles no slotted nodes or elements\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedNodes = () => [];\n      target.assignedElements = () => [];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeHasContent(event)).toEqual(false);\n    });\n  });\n\n  describe(\"slotChangeHasTextContent()\", () => {\n    it(\"handles slotted nodes\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedNodes = () => [document.createTextNode(\"hello\"), document.createTextNode(\"world\")];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeHasTextContent(event)).toEqual(true);\n    });\n\n    it(\"handles no slotted nodes\", () => {\n      const target = document.createElement(\"slot\");\n      target.assignedNodes = () => [];\n      const event = new Event(\"onSlotchange\");\n      target.dispatchEvent(event);\n      expect(slotChangeHasTextContent(event)).toEqual(false);\n    });\n  });\n\n  describe(\"focusElementInGroup()\", () => {\n    it(\"should cycle through the array by default\", () => {\n      const elements = [document.createElement(\"div\"), document.createElement(\"div\"), document.createElement(\"div\")];\n      expect(focusElementInGroup(elements, elements[0], \"previous\")).toBe(elements[2]);\n      expect(focusElementInGroup(elements, elements[2], \"next\")).toBe(elements[0]);\n    });\n\n    it(\"should not cycle through the array\", () => {\n      const elements = [document.createElement(\"div\"), document.createElement(\"div\"), document.createElement(\"div\")];\n      expect(focusElementInGroup(elements, elements[0], \"previous\", false)).toBe(elements[0]);\n      expect(focusElementInGroup(elements, elements[2], \"next\", false)).toBe(elements[2]);\n    });\n  });\n\n  describe(\"getShadowRootNode()\", () => {\n    function defineTestComponents(): void {\n      class ShadowElement extends HTMLElement {\n        constructor() {\n          super();\n          const shadow = this.attachShadow({ mode: \"open\" });\n          shadow.innerHTML = `<button>Hello</button>`;\n        }\n      }\n      customElements.define(\"shadow-element\", ShadowElement);\n    }\n    beforeEach(() => {\n      defineTestComponents();\n    });\n\n    it(\"should return shadowRoot for shadowed element\", () => {\n      document.body.innerHTML = html` <shadow-element></shadow-element> `;\n      const shadowElement = document.body.querySelector(\"shadow-element\");\n      const shadowRoot = shadowElement.shadowRoot;\n      const button = shadowElement.shadowRoot.querySelector(\"button\");\n      expect(button).toBeDefined();\n      expect(getShadowRootNode(button)).toEqual(shadowRoot);\n    });\n\n    it(\"should return null for non shadowed element\", () => {\n      document.body.innerHTML = html` <div></div> `;\n      expect(getShadowRootNode(document.body.querySelector(\"div\"))).toBe(null);\n    });\n  });\n\n  describe(\"isBefore\", () => {\n    let div1: HTMLDivElement;\n    let div2: HTMLDivElement;\n\n    beforeEach(() => {\n      div1 = document.createElement(\"div\");\n      div2 = document.createElement(\"div\");\n    });\n\n    it(\"should return true if element A is before element B\", () => {\n      document.body.append(div1, div2);\n      expect(isBefore(div1, div2)).toBe(true);\n    });\n\n    it(\"should return false if element A is after element B\", () => {\n      document.body.append(div2, div1);\n      expect(isBefore(div1, div2)).toBe(false);\n    });\n  });\n});\n"]}