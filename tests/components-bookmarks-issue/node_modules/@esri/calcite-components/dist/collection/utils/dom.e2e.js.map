{"version":3,"file":"dom.e2e.js","sourceRoot":"","sources":["../../../src/utils/dom.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EPage, newE2EPage } from \"@stencil/core/testing\";\nimport { getHost, getRootNode, queryElementRoots } from \"./dom\";\n\ninterface SetUpTestComponentOptions {\n  insideHostHTML: string;\n  componentTag: string;\n  insideShadowHTML: string;\n  myButtonClass: string;\n  myButtonId: string;\n}\n\ntype TestWindow = typeof window & {\n  getRootNode: (el: Element) => HTMLDocument | ShadowRoot;\n  getHost: (root: HTMLDocument | ShadowRoot) => Element | null;\n  queryElementRoots: <T extends Element = Element>(\n    element: Element,\n    options: {\n      selector?: string;\n      id?: string;\n    },\n  ) => T | null;\n  setUpTestComponent: (options: SetUpTestComponentOptions) => void;\n};\n\nconst myButtonId = \"my.id\";\nconst myButtonClass = \"my-class\";\nconst insideHost = \"Inside Host\";\nconst outsideHost = \"Outside Host\";\nconst insideShadow = \"Inside Shadow\";\nconst componentTag = \"test-component\";\nconst insideHostHTML = `<button class=\"${myButtonClass}\">${insideHost}</button>`;\nconst insideShadowHTML = `<div><button id=\"${myButtonId}\">${insideShadow}</button></div>`;\nconst outsideHostHTML = `<span>Test</span><button id=\"${myButtonId}\">${outsideHost}</button>`;\n\ndescribe(\"queries\", () => {\n  let page: E2EPage;\n\n  beforeEach(async () => {\n    page = await newE2EPage({\n      html: outsideHostHTML,\n    });\n\n    function setUpTestComponent({ insideHostHTML, componentTag, insideShadowHTML }: SetUpTestComponentOptions) {\n      class TestComponent extends HTMLElement {\n        constructor() {\n          super();\n          const shadow = this.attachShadow({ mode: \"open\" });\n          shadow.innerHTML = insideShadowHTML;\n        }\n      }\n\n      customElements.define(componentTag, TestComponent);\n\n      const testComponent = document.createElement(componentTag);\n      testComponent.innerHTML = insideHostHTML;\n      document.body.appendChild(testComponent);\n    }\n\n    await page.addScriptTag({\n      content: `\n      ${getRootNode}\n      ${getHost}\n      ${queryElementRoots}\n      ${setUpTestComponent}\n      `,\n    });\n\n    await page.waitForFunction(() => (window as TestWindow).queryElementRoots);\n  });\n\n  it(\"queryElementRoots: should query from inside host element\", async () => {\n    const text = await page.evaluate(\n      ({\n        insideHostHTML,\n        componentTag,\n        insideShadowHTML,\n        myButtonClass,\n        myButtonId,\n      }: SetUpTestComponentOptions): string => {\n        (window as TestWindow).setUpTestComponent({\n          insideHostHTML,\n          componentTag,\n          insideShadowHTML,\n          myButtonClass,\n          myButtonId,\n        });\n\n        const testComponent = document.querySelector(\"test-component\");\n        const queryEl = testComponent.shadowRoot.querySelector(\"div\");\n        const resultEl: HTMLElement = (window as TestWindow).queryElementRoots(queryEl, {\n          selector: `button.${myButtonClass}`,\n        });\n\n        return resultEl?.textContent;\n      },\n      { insideHostHTML, componentTag, insideShadowHTML, myButtonClass, myButtonId },\n    );\n\n    expect(text).toBe(insideHost);\n  });\n\n  it(\"queryElementRoots: should query id from inside shadow element\", async () => {\n    const text = await page.evaluate(\n      ({\n        insideHostHTML,\n        componentTag,\n        insideShadowHTML,\n        myButtonClass,\n        myButtonId,\n      }: SetUpTestComponentOptions): string => {\n        (window as TestWindow).setUpTestComponent({\n          insideHostHTML,\n          componentTag,\n          insideShadowHTML,\n          myButtonClass,\n          myButtonId,\n        });\n\n        const testComponent = document.querySelector(\"test-component\");\n        const queryEl = testComponent.shadowRoot.querySelector(\"div\");\n        const resultEl: HTMLElement = (window as TestWindow).queryElementRoots(queryEl, {\n          id: myButtonId,\n        });\n\n        return resultEl?.textContent;\n      },\n      { insideHostHTML, componentTag, insideShadowHTML, myButtonClass, myButtonId },\n    );\n\n    expect(text).toBe(insideShadow);\n  });\n\n  it(\"queryElementRoots: should query from outside host element\", async () => {\n    const text = await page.evaluate(\n      ({\n        insideHostHTML,\n        componentTag,\n        insideShadowHTML,\n        myButtonClass,\n        myButtonId,\n      }: SetUpTestComponentOptions): string => {\n        (window as TestWindow).setUpTestComponent({\n          insideHostHTML,\n          componentTag,\n          insideShadowHTML,\n          myButtonClass,\n          myButtonId,\n        });\n\n        const queryEl = document.body.querySelector(\"span\");\n        const resultEl: HTMLElement = (window as TestWindow).queryElementRoots(queryEl, { selector: \"button\" });\n\n        return resultEl?.textContent;\n      },\n      { insideHostHTML, componentTag, insideShadowHTML, myButtonClass, myButtonId },\n    );\n\n    expect(text).toBe(outsideHost);\n  });\n\n  it(\"queryElementRoots: should query id from outside host element\", async () => {\n    const text = await page.evaluate(\n      ({\n        insideHostHTML,\n        componentTag,\n        insideShadowHTML,\n        myButtonClass,\n        myButtonId,\n      }: SetUpTestComponentOptions): string => {\n        (window as TestWindow).setUpTestComponent({\n          insideHostHTML,\n          componentTag,\n          insideShadowHTML,\n          myButtonClass,\n          myButtonId,\n        });\n\n        const queryEl = document.body.querySelector(\"span\");\n        const resultEl: HTMLElement = (window as TestWindow).queryElementRoots(queryEl, { id: myButtonId });\n\n        return resultEl?.textContent;\n      },\n      { insideHostHTML, componentTag, insideShadowHTML, myButtonClass, myButtonId },\n    );\n\n    expect(text).toBe(outsideHost);\n  });\n});\n"]}