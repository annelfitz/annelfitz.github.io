{"version":3,"file":"openCloseComponent.js","sourceRoot":"","sources":["../../../src/utils/openCloseComponent.ts"],"names":[],"mappings":"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","sourcesContent":["import { readTask } from \"@stencil/core\";\n/**\n * Defines interface for components with open/close public emitter.\n * All implementations of this interface must handle the following events: `beforeOpen`, `open`, `beforeClose`, `close`.\n */\nexport interface OpenCloseComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * When true, the component opens.\n   */\n  open?: boolean;\n\n  /**\n   * When true, the component is open.\n   */\n  opened?: boolean;\n\n  /**\n   *  Specifies the name of transitionProp.\n   */\n  transitionProp?: string;\n\n  /**\n   * Specifies property on which active transition is watched for.\n   */\n  openTransitionProp: string;\n\n  /**\n   * Specifies element that the transition is allowed to emit on.\n   */\n  transitionEl: HTMLElement;\n\n  /**\n   * Defines method for `beforeOpen` event handler.\n   */\n  onBeforeOpen: () => void;\n\n  /**\n   * Defines method for `open` event handler:\n   */\n  onOpen: () => void;\n\n  /**\n   * Defines method for `beforeClose` event handler:\n   */\n  onBeforeClose: () => void;\n\n  /**\n   * Defines method for `close` event handler:\n   */\n  onClose: () => void;\n}\n\nconst componentToTransitionListeners = new WeakMap<\n  OpenCloseComponent,\n  [HTMLElement, typeof transitionStart, typeof transitionEnd]\n>();\n\nfunction transitionStart(this: OpenCloseComponent, event: TransitionEvent): void {\n  if (event.propertyName === this.openTransitionProp && event.target === this.transitionEl) {\n    isOpen(this) ? this.onBeforeOpen() : this.onBeforeClose();\n  }\n}\nfunction transitionEnd(this: OpenCloseComponent, event: TransitionEvent): void {\n  if (event.propertyName === this.openTransitionProp && event.target === this.transitionEl) {\n    isOpen(this) ? this.onOpen() : this.onClose();\n  }\n}\n\nfunction isOpen(component: OpenCloseComponent): boolean {\n  return \"opened\" in component ? component.opened : component.open;\n}\n\nfunction emitImmediately(component: OpenCloseComponent, nonOpenCloseComponent = false): void {\n  (nonOpenCloseComponent ? component[component.transitionProp] : isOpen(component))\n    ? component.onBeforeOpen()\n    : component.onBeforeClose();\n  (nonOpenCloseComponent ? component[component.transitionProp] : isOpen(component))\n    ? component.onOpen()\n    : component.onClose();\n}\n\n/**\n * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch(\"open\").\n * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).\n *\n * @example\n * import { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\n *\n * async componentWillLoad() {\n * // When component initially renders, if `open` was set we need to trigger on load as watcher doesn't fire.\n * if (this.open) {\n *    onToggleOpenCloseComponent(this);\n * }\n * @Watch(\"open\")\n * async toggleModal(value: boolean): Promise<void> {\n *    onToggleOpenCloseComponent(this);\n * }\n *\n * @param component - OpenCloseComponent uses `open` prop to emit (before)open/close.\n * @param nonOpenCloseComponent - OpenCloseComponent uses `expanded` prop to emit (before)open/close.\n */\nexport function onToggleOpenCloseComponent(component: OpenCloseComponent, nonOpenCloseComponent = false): void {\n  readTask((): void => {\n    if (component.transitionEl) {\n      const { transitionDuration: allDurations, transitionProperty: allProps } = getComputedStyle(\n        component.transitionEl,\n      );\n      const allTransitionDurationsArray = allDurations.split(\",\");\n      const allTransitionPropsArray = allProps.split(\",\");\n      const openTransitionPropIndex = allTransitionPropsArray.indexOf(component.openTransitionProp);\n\n      const transitionDuration =\n        allTransitionDurationsArray[openTransitionPropIndex] ??\n        /* Safari will have a single transition value if multiple props share it,\n        so we fall back to it if there's no matching prop duration */\n        allTransitionDurationsArray[0];\n\n      if (transitionDuration === \"0s\") {\n        emitImmediately(component, nonOpenCloseComponent);\n        return;\n      }\n\n      const fallbackTimeoutId = setTimeout(\n        (): void => {\n          component.transitionEl.removeEventListener(\"transitionstart\", onStart);\n          component.transitionEl.removeEventListener(\"transitionend\", onEndOrCancel);\n          component.transitionEl.removeEventListener(\"transitioncancel\", onEndOrCancel);\n          emitImmediately(component, nonOpenCloseComponent);\n        },\n        parseFloat(transitionDuration) * 1000,\n      );\n\n      component.transitionEl.addEventListener(\"transitionstart\", onStart);\n      component.transitionEl.addEventListener(\"transitionend\", onEndOrCancel);\n      component.transitionEl.addEventListener(\"transitioncancel\", onEndOrCancel);\n\n      function onStart(event: TransitionEvent): void {\n        if (event.propertyName === component.openTransitionProp && event.target === component.transitionEl) {\n          clearTimeout(fallbackTimeoutId);\n          component.transitionEl.removeEventListener(\"transitionstart\", onStart);\n          (nonOpenCloseComponent ? component[component.transitionProp] : isOpen(component))\n            ? component.onBeforeOpen()\n            : component.onBeforeClose();\n        }\n      }\n\n      function onEndOrCancel(event: TransitionEvent): void {\n        if (event.propertyName === component.openTransitionProp && event.target === component.transitionEl) {\n          (nonOpenCloseComponent ? component[component.transitionProp] : isOpen(component))\n            ? component.onOpen()\n            : component.onClose();\n\n          component.transitionEl.removeEventListener(\"transitionend\", onEndOrCancel);\n          component.transitionEl.removeEventListener(\"transitioncancel\", onEndOrCancel);\n        }\n      }\n    }\n  });\n}\n\n/**\n * Helper to keep track of transition listeners on setTransitionEl and connectedCallback on OpenCloseComponent components.\n *\n * For component which do not have open prop, use `onToggleOpenCloseComponent` implementation.\n *\n * @param component\n * @deprecated Call `onToggleOpenClose` in `componentWillLoad` and `open` property watchers instead.\n */\nexport function connectOpenCloseComponent(component: OpenCloseComponent): void {\n  disconnectOpenCloseComponent(component);\n  if (component.transitionEl) {\n    const boundOnTransitionStart: (event: TransitionEvent) => void = transitionStart.bind(component);\n    const boundOnTransitionEnd: (event: TransitionEvent) => void = transitionEnd.bind(component);\n\n    componentToTransitionListeners.set(component, [\n      component.transitionEl,\n      boundOnTransitionStart,\n      boundOnTransitionEnd,\n    ]);\n\n    component.transitionEl.addEventListener(\"transitionstart\", boundOnTransitionStart);\n    component.transitionEl.addEventListener(\"transitionend\", boundOnTransitionEnd);\n  }\n}\n/**\n * Helper to tear down transition listeners on disconnectedCallback on OpenCloseComponent components.\n *\n * @param component\n * @deprecated Call `onToggleOpenClose` in `componentWillLoad` and `open` property watchers instead.\n */\nexport function disconnectOpenCloseComponent(component: OpenCloseComponent): void {\n  if (!componentToTransitionListeners.has(component)) {\n    return;\n  }\n  const [transitionEl, start, end] = componentToTransitionListeners.get(component);\n  transitionEl.removeEventListener(\"transitionstart\", start);\n  transitionEl.removeEventListener(\"transitionend\", end);\n\n  componentToTransitionListeners.delete(component);\n}\n"]}