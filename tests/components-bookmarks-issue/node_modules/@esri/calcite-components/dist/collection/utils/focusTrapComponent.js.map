{"version":3,"file":"focusTrapComponent.js","sourceRoot":"","sources":["../../../src/utils/focusTrapComponent.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAwD,MAAM,YAAY,CAAC;AACnG,OAAO,EAAoB,YAAY,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AACxE,OAAO,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AA2C1C;;;;;GAKG;AACH,MAAM,UAAU,gBAAgB,CAAC,SAA6B,EAAE,OAAiC;IAC/F,MAAM,EAAE,EAAE,EAAE,GAAG,SAAS,CAAC;IACzB,MAAM,aAAa,GAAG,OAAO,EAAE,WAAW,IAAI,EAAE,CAAC;IAEjD,IAAI,CAAC,aAAa,EAAE;QAClB,OAAO;KACR;IAED,MAAM,gBAAgB,GAAqB;QACzC,uBAAuB,EAAE,IAAI;QAC7B,iBAAiB,EAAE,KAAK;QACxB,aAAa,EAAE,aAAa;QAC5B,cAAc,EAAE,CAAC,EAAE,EAAE,EAAE;YACrB,YAAY,CAAC,EAAsB,CAAC,CAAC;YACrC,OAAO,KAAK,CAAC;QACf,CAAC;QACD,GAAG,OAAO,EAAE,gBAAgB;QAE5B,4CAA4C;QAC5C,QAAQ,EAAE,EAAE,CAAC,aAAa;QAC1B,eAAe;QACf,SAAS,EAAE,cAAc;KAC1B,CAAC;IAEF,SAAS,CAAC,SAAS,GAAG,eAAe,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC;AACzE,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,iBAAiB,CAC/B,SAA6B,EAC7B,OAA+C;IAE/C,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE;QAChC,SAAS,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;KACxC;AACH,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,mBAAmB,CACjC,SAA6B,EAC7B,OAAiD;IAEjD,SAAS,CAAC,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;AAC3C,CAAC;AAED;;;;;;;;;;;GAWG;AACH,MAAM,UAAU,uBAAuB,CAAC,SAA6B;IACnE,SAAS,CAAC,SAAS,EAAE,uBAAuB,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AAC7D,CAAC","sourcesContent":["import { createFocusTrap, FocusTrap as _FocusTrap, Options as FocusTrapOptions } from \"focus-trap\";\nimport { FocusableElement, focusElement, tabbableOptions } from \"./dom\";\nimport { focusTrapStack } from \"./config\";\n\n/**\n * Defines interface for components with a focus trap. Focusable content is required for components implementing focus trapping with this interface.\n */\nexport interface FocusTrapComponent {\n  /**\n   * The focus trap element.\n   */\n  el: HTMLElement;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  focusTrapDisabled: boolean;\n\n  /**\n   * The focus trap instance.\n   */\n  focusTrap: FocusTrap;\n\n  /**\n   * Method to update the element(s) that are used within the FocusTrap component.\n   *\n   * This should be implemented for components that allow user content and/or have conditionally-rendered focusable elements within the trap.\n   */\n  updateFocusTrapElements?: () => Promise<void>;\n}\n\nexport type FocusTrap = _FocusTrap;\n\ninterface ConnectFocusTrapOptions {\n  /**\n   * This option allows the focus trap to be created on a different element that's not the host (e.g., a supporting popup component).\n   */\n  focusTrapEl?: HTMLElement;\n\n  /**\n   * This allows specifying overrides to ConnectFocusTrap options.\n   */\n  focusTrapOptions?: Omit<FocusTrapOptions, \"document\" | \"tabbableOptions\" | \"trapStack\">;\n}\n\n/**\n * Helper to set up the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @param options\n */\nexport function connectFocusTrap(component: FocusTrapComponent, options?: ConnectFocusTrapOptions): void {\n  const { el } = component;\n  const focusTrapNode = options?.focusTrapEl || el;\n\n  if (!focusTrapNode) {\n    return;\n  }\n\n  const focusTrapOptions: FocusTrapOptions = {\n    clickOutsideDeactivates: true,\n    escapeDeactivates: false,\n    fallbackFocus: focusTrapNode,\n    setReturnFocus: (el) => {\n      focusElement(el as FocusableElement);\n      return false;\n    },\n    ...options?.focusTrapOptions,\n\n    // the following options are not overridable\n    document: el.ownerDocument,\n    tabbableOptions,\n    trapStack: focusTrapStack,\n  };\n\n  component.focusTrap = createFocusTrap(focusTrapNode, focusTrapOptions);\n}\n\n/**\n * Helper to activate the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @param [options] The FocusTrap activate options.\n */\nexport function activateFocusTrap(\n  component: FocusTrapComponent,\n  options?: Parameters<_FocusTrap[\"activate\"]>[0],\n): void {\n  if (!component.focusTrapDisabled) {\n    component.focusTrap?.activate(options);\n  }\n}\n\n/**\n * Helper to deactivate the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @param [options] The FocusTrap deactivate options.\n */\nexport function deactivateFocusTrap(\n  component: FocusTrapComponent,\n  options?: Parameters<_FocusTrap[\"deactivate\"]>[0],\n): void {\n  component.focusTrap?.deactivate(options);\n}\n\n/**\n * Helper to update the element(s) that are used within the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @example\n * const modal = document.querySelector(\"calcite-modal\");\n * const input = document.createElement(\"calcite-input\");\n * content.appendChild(input);\n * await input.componentOnReady();\n * await modal.updateFocusTrapElements();\n * requestAnimationFrame(() => input.setFocus());\n */\nexport function updateFocusTrapElements(component: FocusTrapComponent): void {\n  component.focusTrap?.updateContainerElements(component.el);\n}\n"]}