{"version":3,"file":"option.e2e.js","sourceRoot":"","sources":["../../../../src/components/option/option.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from \"@stencil/core/testing\";\nimport { accessible, defaults, reflects, renders, hidden } from \"../../tests/commonTests\";\n\ndescribe(\"calcite-option\", () => {\n  describe(\"renders\", () => {\n    renders(\"calcite-option\", { display: \"block\" });\n  });\n\n  describe(\"honors hidden attribute\", () => {\n    hidden(\"calcite-option\");\n  });\n\n  describe(\"accessible\", () => {\n    accessible(\"calcite-option\");\n  });\n\n  describe(\"defaults\", () => {\n    defaults(\"calcite-option\", [\n      {\n        propertyName: \"disabled\",\n        defaultValue: false,\n      },\n    ]);\n  });\n\n  describe(\"reflects\", () => {\n    reflects(\"calcite-option\", [\n      {\n        propertyName: \"disabled\",\n        value: true,\n      },\n      {\n        propertyName: \"selected\",\n        value: true,\n      },\n    ]);\n  });\n\n  it(\"falls back to the text content when value/label is not specified\", async () => {\n    const optionText = \"one\";\n    const page = await newE2EPage({\n      html: `<calcite-option>${optionText}</calcite-option>`,\n    });\n    const option = await page.find(\"calcite-option\");\n\n    expect(await option.getProperty(\"label\")).toBe(optionText);\n    expect(await option.getProperty(\"value\")).toBe(optionText);\n\n    option.setProperty(\"label\", \"two\");\n    option.setProperty(\"value\", 2);\n    await page.waitForChanges();\n\n    expect(await option.getProperty(\"label\")).toBe(\"two\");\n    expect(await option.getProperty(\"value\")).toBe(2);\n\n    option.setProperty(\"label\", undefined);\n    option.setProperty(\"value\", undefined);\n    await page.waitForChanges();\n\n    expect(await option.getProperty(\"label\")).toBe(optionText);\n    expect(await option.getProperty(\"value\")).toBe(optionText);\n\n    option.setProperty(\"label\", \"\");\n    option.setProperty(\"value\", \"\");\n    await page.waitForChanges();\n\n    expect(await option.getProperty(\"label\")).toBe(optionText);\n    expect(await option.getProperty(\"value\")).toBe(\"\");\n\n    option.setProperty(\"label\", null);\n    option.setProperty(\"value\", null);\n    await page.waitForChanges();\n\n    expect(await option.getProperty(\"label\")).toBe(optionText);\n    expect(await option.getProperty(\"value\")).toBe(optionText);\n\n    const alternateLabel = \"dos\";\n    await option.setProperty(\"innerText\", alternateLabel);\n    await page.waitForChanges();\n\n    expect(await option.getProperty(\"label\")).toBe(alternateLabel);\n    expect(await option.getProperty(\"value\")).toBe(alternateLabel);\n\n    const charDataUpdateLabel = \"tres\";\n    await page.evaluate((updatedText: string): void => {\n      // Ember and possibly other frameworks use Text node APIs to update contents\n      const option = document.querySelector<HTMLCalciteOptionElement>(\"calcite-option\");\n      const textNode = option.childNodes[0] as Text;\n      textNode.replaceData(0, textNode.length, updatedText);\n    }, charDataUpdateLabel);\n\n    expect(await option.getProperty(\"label\")).toBe(charDataUpdateLabel);\n    expect(await option.getProperty(\"value\")).toBe(charDataUpdateLabel);\n  });\n});\n"]}