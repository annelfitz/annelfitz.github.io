{"version":3,"file":"pick-list-group.js","sourceRoot":"","sources":["../../../../src/components/pick-list-group/pick-list-group.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAS,MAAM,eAAe,CAAC;AAC7E,OAAO,EAEL,+BAA+B,EAC/B,kCAAkC,GACnC,MAAM,6BAA6B,CAAC;AACrC,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,qBAAqB,EAAE,OAAO,EAAgB,MAAM,uBAAuB,CAAC;AACrF,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAEzC;;;GAGG;AAMH,MAAM,OAAO,aAAa;;;;;IA0BxB,6EAA6E;IAC7E,EAAE;IACF,aAAa;IACb,EAAE;IACF,6EAA6E;IAE7E,iBAAiB;QACf,+BAA+B,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,oBAAoB;QAClB,kCAAkC,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,6EAA6E;IAC7E,EAAE;IACF,kBAAkB;IAClB,EAAE;IACF,6EAA6E;IAE7E,MAAM;QACJ,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC;QAC9C,MAAM,aAAa,GAAG,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC;QAChE,MAAM,cAAc,GAAG;YACrB,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,IAAI;YACrB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,aAAa;SAC9B,CAAC;QAEF,MAAM,KAAK,GAAG,UAAU,CAAC;QACzB,MAAM,WAAW,GAAG,EAAE,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAE,YAAY,CAAC;QAClE,MAAM,aAAa,GAAG,WAAW,CAAC,CAAC,CAAC,qBAAqB,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAClF,MAAM,KAAK,GAAG,YAAY,IAAI,aAAa,CAAC;QAE5C,OAAO,CACL,EAAC,QAAQ;YACN,KAAK,CAAC,CAAC,CAAC,CACP,EAAC,OAAO,IAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,IACtC,KAAK,CACE,CACX,CAAC,CAAC,CAAC,IAAI;YACR,YAAM,IAAI,EAAE,KAAK,CAAC,UAAU,GAAI;YAChC,eAAS,KAAK,EAAE,cAAc;gBAC5B,eAAQ,CACA,CACD,CACZ,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, Fragment, h, Prop, VNode } from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted } from \"../../utils/dom\";\nimport { constrainHeadingLevel, Heading, HeadingLevel } from \"../functional/Heading\";\nimport { CSS, SLOTS } from \"./resources\";\n\n/**\n * @deprecated Use the `list` component instead.\n * @slot - A slot for adding `calcite-pick-list-item` elements.\n */\n@Component({\n  tag: \"calcite-pick-list-group\",\n  styleUrl: \"pick-list-group.scss\",\n  shadow: true,\n})\nexport class PickListGroup implements ConditionalSlotComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the title for all nested `calcite-pick-list-item`s.\n   *\n   */\n  @Prop({ reflect: true }) groupTitle: string;\n\n  /**\n   * Specifies the number at which section headings should start.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePickListGroupElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { el, groupTitle, headingLevel } = this;\n    const hasParentItem = getSlotted(el, SLOTS.parentItem) !== null;\n    const sectionClasses = {\n      [CSS.container]: true,\n      [CSS.indented]: hasParentItem,\n    };\n\n    const title = groupTitle;\n    const parentLevel = el.closest(\"calcite-pick-list\")?.headingLevel;\n    const relativeLevel = parentLevel ? constrainHeadingLevel(parentLevel + 1) : null;\n    const level = headingLevel || relativeLevel;\n\n    return (\n      <Fragment>\n        {title ? (\n          <Heading class={CSS.heading} level={level}>\n            {title}\n          </Heading>\n        ) : null}\n        <slot name={SLOTS.parentItem} />\n        <section class={sectionClasses}>\n          <slot />\n        </section>\n      </Fragment>\n    );\n  }\n}\n"]}