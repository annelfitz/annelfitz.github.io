{"version":3,"file":"alert.js","sourceRoot":"","sources":["../../../../src/components/alert/alert.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getSlotted,\n  setRequestedIcon,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport { MenuPlacement } from \"../../utils/floating-ui\";\nimport { getIconScale } from \"../../utils/component\";\n\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  NumberingSystem,\n  NumberStringFormat,\n} from \"../../utils/locale\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Kind, Scale } from \"../interfaces\";\nimport { KindIcons } from \"../resources\";\nimport { AlertMessages } from \"./assets/alert/t9n\";\nimport { AlertDuration, Sync, Unregister } from \"./interfaces\";\nimport { CSS, DURATIONS, SLOTS } from \"./resources\";\n\n/**\n * Alerts are meant to provide a way to communicate urgent or important information to users, frequently as a result of an action they took in your app. Alerts are positioned\n * at the bottom of the page. Multiple opened alerts will be added to a queue, allowing users to dismiss them in the order they are provided.\n */\n\n/**\n * @slot title - A slot for adding a title to the component.\n * @slot message - A slot for adding main text to the component.\n * @slot link - A slot for adding a `calcite-action` to take from the component such as: \"undo\", \"try again\", \"link to page\", etc.\n * @slot actions-end - A slot for adding `calcite-action`s to the end of the component. It is recommended to use two or fewer actions.\n */\n\n@Component({\n  tag: \"calcite-alert\",\n  styleUrl: \"alert.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Alert implements OpenCloseComponent, LoadableComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //---------------------------------------------------------------------------\n\n  /** When `true`, displays and positions the component. */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n    if (this.open && !this.queued) {\n      this.calciteInternalAlertRegister.emit();\n    }\n    if (!this.open) {\n      this.queue = this.queue.filter((el) => el !== this.el);\n      this.calciteInternalAlertSync.emit({ queue: this.queue });\n    }\n  }\n\n  /** When `true`, the component closes automatically. Recommended for passive, non-blocking alerts. */\n  @Prop({ reflect: true }) autoClose = false;\n\n  /** Specifies the duration before the component automatically closes - only use with `autoClose`. */\n  @Prop({ reflect: true }) autoCloseDuration: AlertDuration = \"medium\";\n\n  /** Specifies the kind of the component, which will apply to top border and icon. */\n  @Prop({ reflect: true }) kind: Extract<\n    \"brand\" | \"danger\" | \"info\" | \"success\" | \"warning\",\n    Kind\n  > = \"brand\";\n\n  /**\n   * When `true`, shows a default recommended icon. Alternatively,\n   * pass a Calcite UI Icon name to display a specific icon.\n   */\n  @Prop({ reflect: true }) icon: string | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies an accessible name for the component. */\n  @Prop() label!: string;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /** Specifies the placement of the component. */\n  @Prop({ reflect: true }) placement: MenuPlacement = \"bottom\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: AlertMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<AlertMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * This internal property, managed by a containing calcite-shell, is used\n   * to inform the component if special configuration or styles are needed\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) slottedInShell: boolean;\n\n  @Watch(\"autoCloseDuration\")\n  updateDuration(): void {\n    if (this.autoClose && this.autoCloseTimeoutId) {\n      window.clearTimeout(this.autoCloseTimeoutId);\n      this.autoCloseTimeoutId = window.setTimeout(\n        () => this.closeAlert(),\n        DURATIONS[this.autoCloseDuration],\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n\n    const open = this.open;\n    if (open && !this.queued) {\n      this.calciteInternalAlertRegister.emit();\n    }\n\n    this.numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      signDisplay: \"always\",\n    };\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    window.dispatchEvent(\n      new CustomEvent<Unregister>(\"calciteInternalAlertUnregister\", {\n        detail: { alert: this.el },\n      }),\n    );\n    window.clearTimeout(this.autoCloseTimeoutId);\n    window.clearTimeout(this.queueTimeout);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.slottedInShell = false;\n  }\n\n  render(): VNode {\n    const { open, autoClose, label, placement, queued } = this;\n    const role = autoClose ? \"alert\" : \"alertdialog\";\n    const hidden = !open;\n    const effectiveIcon = setRequestedIcon(KindIcons, this.icon, this.kind);\n    const hasQueuedAlerts = this.queueLength > 1;\n\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-label={label}\n        calcite-hydrated-hidden={hidden}\n        role={role}\n      >\n        <div\n          class={{\n            [CSS.container]: true,\n            [CSS.containerQueued]: queued,\n            [`${CSS.container}--${placement}`]: true,\n            [CSS.containerSlottedInShell]: this.slottedInShell,\n          }}\n          onPointerEnter={this.autoClose && this.autoCloseTimeoutId ? this.handleMouseOver : null}\n          onPointerLeave={this.autoClose && this.autoCloseTimeoutId ? this.handleMouseLeave : null}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={this.setTransitionEl}\n        >\n          {effectiveIcon && this.renderIcon(effectiveIcon)}\n          <div class={CSS.textContainer}>\n            <slot name={SLOTS.title} />\n            <slot name={SLOTS.message} />\n            <slot name={SLOTS.link} />\n          </div>\n          {this.renderActionsEnd()}\n          {hasQueuedAlerts ? this.renderQueueCount() : null}\n          {this.renderCloseButton()}\n          {open && !queued && autoClose ? <div class={CSS.dismissProgress} /> : null}\n        </div>\n      </Host>\n    );\n  }\n\n  private renderCloseButton(): VNode {\n    return (\n      <button\n        aria-label={this.messages.close}\n        class={CSS.close}\n        key=\"close\"\n        onClick={this.closeAlert}\n        type=\"button\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.closeButton = el)}\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  private renderQueueCount(): VNode {\n    const queueNumber = this.queueLength > 2 ? this.queueLength - 1 : 1;\n    const queueText = this.numberStringFormatter.numberFormatter.format(queueNumber);\n\n    return (\n      <div\n        class={{\n          [CSS.queueCount]: true,\n          [CSS.queueCountActive]: this.queueLength > 1,\n        }}\n        key=\"queue-count\"\n      >\n        <calcite-chip scale={this.scale} value={queueText}>\n          {queueText}\n        </calcite-chip>\n      </div>\n    );\n  }\n\n  private renderActionsEnd(): VNode {\n    return (\n      <div class={CSS.actionsEnd}>\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.actionsEndSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  private renderIcon(icon: string): VNode {\n    return (\n      <div class={CSS.icon}>\n        <calcite-icon flipRtl={this.iconFlipRtl} icon={icon} scale={getIconScale(this.scale)} />\n      </div>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteAlertBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteAlertClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteAlertBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteAlertOpen: EventEmitter<void>;\n\n  /**\n   * Fires to sync queue when opened or closed.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAlertSync: EventEmitter<Sync>;\n\n  /**\n   * Fires when the component is added to DOM - used to receive initial queue.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAlertRegister: EventEmitter<void>;\n\n  // when an alert is opened or closed, update queue and determine active alert\n  @Listen(\"calciteInternalAlertSync\", { target: \"window\" })\n  alertSync(event: CustomEvent): void {\n    if (this.queue !== event.detail.queue) {\n      this.queue = event.detail.queue;\n    }\n    this.queueLength = this.queue.length;\n    this.determineActiveAlert();\n    event.stopPropagation();\n  }\n\n  // when an alert is first registered, trigger a queue sync\n  @Listen(\"calciteInternalAlertRegister\", { target: \"window\" })\n  alertRegister(): void {\n    if (this.open && !this.queue.includes(this.el as HTMLCalciteAlertElement)) {\n      this.queued = true;\n      this.queue.push(this.el as HTMLCalciteAlertElement);\n    }\n    this.calciteInternalAlertSync.emit({ queue: this.queue });\n    this.determineActiveAlert();\n  }\n\n  // Event is dispatched on the window because the element is not in the DOM so bubbling won't occur.\n  @Listen(\"calciteInternalAlertUnregister\", { target: \"window\" })\n  alertUnregister(event: CustomEvent<Unregister>): void {\n    const queue = this.queue.filter((el) => el !== event.detail.alert);\n    this.queue = queue;\n\n    window.dispatchEvent(\n      new CustomEvent<Sync>(\"calciteInternalAlertSync\", {\n        detail: { queue },\n      }),\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's \"close\" button, the first focusable item. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    const alertLinkEl: HTMLCalciteLinkElement = getSlotted(this.el, { selector: \"calcite-link\" });\n\n    if (!this.closeButton && !alertLinkEl) {\n      return;\n    } else if (alertLinkEl) {\n      return alertLinkEl.setFocus();\n    } else if (this.closeButton) {\n      this.closeButton.focus();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteAlertElement;\n\n  @State() defaultMessages: AlertMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n    this.numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      signDisplay: \"always\",\n    };\n  }\n\n  @State() numberStringFormatter = new NumberStringFormat();\n\n  @Watch(\"numberingSystem\")\n  numberingSystemChange(): void {\n    this.numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      signDisplay: \"always\",\n    };\n  }\n\n  @State() hasEndActions = false;\n\n  /** the list of queued alerts */\n  @State() queue: HTMLCalciteAlertElement[] = [];\n\n  /** the count of queued alerts */\n  @State() queueLength = 0;\n\n  /** is the alert queued */\n  @State() queued = false;\n\n  private autoCloseTimeoutId: number = null;\n\n  private closeButton: HTMLButtonElement;\n\n  private initialOpenTime: number;\n\n  private lastMouseOverBegin: number;\n\n  private queueTimeout: number;\n\n  private totalOpenTime = 0;\n\n  private totalHoverTime = 0;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  /** determine which alert is active */\n  private determineActiveAlert(): void {\n    if (this.queue?.[0] === this.el) {\n      this.openAlert();\n      if (this.autoClose && !this.autoCloseTimeoutId) {\n        this.initialOpenTime = Date.now();\n        this.autoCloseTimeoutId = window.setTimeout(\n          () => this.closeAlert(),\n          DURATIONS[this.autoCloseDuration],\n        );\n      }\n    } else {\n      return;\n    }\n  }\n\n  /** close and emit calciteInternalAlertSync event with the updated queue payload */\n  private closeAlert = (): void => {\n    this.autoCloseTimeoutId = null;\n    this.queued = false;\n    this.open = false;\n    this.queue = this.queue.filter((el) => el !== this.el);\n    this.determineActiveAlert();\n    this.calciteInternalAlertSync.emit({ queue: this.queue });\n  };\n\n  onBeforeOpen(): void {\n    this.calciteAlertBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteAlertOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteAlertBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteAlertClose.emit();\n  }\n\n  /** remove queued class after animation completes */\n  private openAlert(): void {\n    window.clearTimeout(this.queueTimeout);\n    this.queueTimeout = window.setTimeout(() => (this.queued = false), 300);\n  }\n\n  private actionsEndSlotChangeHandler = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n\n  private handleMouseOver = (): void => {\n    window.clearTimeout(this.autoCloseTimeoutId);\n    this.totalOpenTime = Date.now() - this.initialOpenTime;\n    this.lastMouseOverBegin = Date.now();\n  };\n\n  private handleMouseLeave = (): void => {\n    const hoverDuration = Date.now() - this.lastMouseOverBegin;\n    const timeRemaining =\n      DURATIONS[this.autoCloseDuration] - this.totalOpenTime + this.totalHoverTime;\n    this.totalHoverTime = this.totalHoverTime ? hoverDuration + this.totalHoverTime : hoverDuration;\n    this.autoCloseTimeoutId = window.setTimeout(() => this.closeAlert(), timeRemaining);\n  };\n}\n"]}