{"version":3,"file":"color-picker-swatch.js","sourceRoot":"","sources":["../../../../src/components/color-picker-swatch/color-picker-swatch.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Fragment, h, Prop, VNode, Watch } from \"@stencil/core\";\nimport Color from \"color\";\nimport { getModeName } from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport { hexify } from \"../color-picker/utils\";\nimport { CHECKER_DIMENSIONS, COLORS, CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-color-picker-swatch\",\n  styleUrl: \"color-picker-swatch.scss\",\n  shadow: true,\n})\nexport class ColorPickerSwatch {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is active.\n   */\n  @Prop({\n    reflect: true,\n  })\n  active = false;\n\n  /**\n   * The color value.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n   */\n  @Prop()\n  color: string | null;\n\n  @Watch(\"color\")\n  handleColorChange(color: string | null): void {\n    this.internalColor = color ? Color(color) : null;\n  }\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerSwatchElement;\n\n  private internalColor: Color;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.handleColorChange(this.color);\n  }\n\n  render(): VNode {\n    const isEmpty = !this.internalColor;\n    const classes = {\n      [CSS.swatch]: true,\n      [CSS.noColorSwatch]: isEmpty,\n    };\n\n    return (\n      <svg class={classes} xmlns=\"http://www.w3.org/2000/svg\">\n        {this.renderSwatch()}\n      </svg>\n    );\n  }\n\n  renderSwatch(): VNode {\n    const { active, el, internalColor } = this;\n    const borderRadius = active ? \"100%\" : \"0\";\n    const theme = getModeName(el);\n    const borderColor = theme === \"light\" ? COLORS.borderLight : COLORS.borderDark;\n    const commonSwatchProps = {\n      height: \"100%\",\n      rx: borderRadius,\n      stroke: borderColor,\n\n      // stroke-width and clip-path are needed to hide overflowing portion of stroke\n      // see https://stackoverflow.com/a/7273346/194216\n\n      // using attribute to work around Stencil using the prop name vs the attribute when rendering\n      [\"stroke-width\"]: \"2\",\n      width: \"100%\",\n    };\n\n    const isEmpty = !internalColor;\n\n    if (isEmpty) {\n      return (\n        <Fragment>\n          <clipPath id=\"shape\">\n            <rect height=\"100%\" rx={borderRadius} width=\"100%\" />\n          </clipPath>\n          <rect\n            clip-path={`inset(0 round ${borderRadius})`}\n            rx={borderRadius}\n            {...commonSwatchProps}\n          />\n          <line clip-path=\"url(#shape)\" stroke-width=\"3\" x1=\"100%\" x2=\"0\" y1=\"0\" y2=\"100%\" />\n        </Fragment>\n      );\n    }\n\n    const alpha = internalColor.alpha();\n    const hex = hexify(internalColor);\n    const hexa = hexify(internalColor, alpha < 1);\n\n    return (\n      <Fragment>\n        <title>{hexa}</title>\n        <defs>\n          <pattern\n            height={CHECKER_DIMENSIONS.size}\n            id=\"checker\"\n            patternUnits=\"userSpaceOnUse\"\n            width={CHECKER_DIMENSIONS.size}\n            x=\"0\"\n            y=\"0\"\n          >\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x=\"0\"\n              y=\"0\"\n            />\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x={CHECKER_DIMENSIONS.squareSize}\n              y={CHECKER_DIMENSIONS.squareSize}\n            />\n          </pattern>\n        </defs>\n        <rect fill=\"url(#checker)\" height=\"100%\" rx={borderRadius} width=\"100%\" />\n        <rect\n          fill={hex}\n          style={{\n            \"clip-path\":\n              alpha < 1 ? \"polygon(100% 0, 0 0, 0 100%)\" : `inset(0 round ${borderRadius})`,\n          }}\n          {...commonSwatchProps}\n        />\n        {alpha < 1 ? (\n          <rect\n            fill={hexa}\n            key=\"opacity-fill\"\n            style={{ \"clip-path\": \"polygon(100% 0, 100% 100%, 0 100%)\" }}\n            {...commonSwatchProps}\n          />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n"]}