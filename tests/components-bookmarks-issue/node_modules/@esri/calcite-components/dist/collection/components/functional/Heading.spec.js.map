{"version":3,"file":"Heading.spec.js","sourceRoot":"","sources":["../../../../src/components/functional/Heading.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,qBAAqB,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAE3D,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;QACzC,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC5C,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC5C,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC5C,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC5C,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;QAC7B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,EAAC,OAAO,IAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAE,CAAC,iBAEpB,CACX;SACF,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,kCAAkC,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACnC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAC,OAAO,IAAC,KAAK,EAAC,MAAM,iBAAqB;SAC3D,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,oCAAoC,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { h } from \"@stencil/core\";\nimport { newSpecPage } from \"@stencil/core/testing\";\nimport { constrainHeadingLevel, Heading } from \"./Heading\";\n\ndescribe(\"constrainHeadingLevel\", () => {\n  it(\"should constrain heading levels\", () => {\n    expect(constrainHeadingLevel(10)).toEqual(6);\n    expect(constrainHeadingLevel(6)).toEqual(6);\n    expect(constrainHeadingLevel(5)).toEqual(5);\n    expect(constrainHeadingLevel(1)).toEqual(1);\n    expect(constrainHeadingLevel(0)).toEqual(1);\n    expect(constrainHeadingLevel(3.14)).toEqual(4);\n  });\n});\n\ndescribe(\"Heading\", () => {\n  it(\"should render\", async () => {\n    const page = await newSpecPage({\n      components: [],\n      template: () => (\n        <Heading class=\"test\" level={1}>\n          My Heading\n        </Heading>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`<h1 class=\"test\">My Heading</h1>`);\n  });\n\n  it(\"should render a div\", async () => {\n    const page = await newSpecPage({\n      components: [],\n      template: () => <Heading class=\"test\">My Heading</Heading>,\n    });\n\n    expect(page.root).toEqualHtml(`<div class=\"test\">My Heading</div>`);\n  });\n});\n"]}