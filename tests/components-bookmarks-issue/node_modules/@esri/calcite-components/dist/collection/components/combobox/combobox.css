/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:11 GMT
 */
/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:11 GMT
 */
/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:11 GMT
 */
/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:11 GMT
 */
/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:09 GMT
 */
/* mixins & extensions */
/* helper to properly scale internal durations */
/**
* Currently only used in Checkbox.
*/
:host([disabled]) {
  cursor: default;
  -webkit-user-select: none;
          user-select: none;
  opacity: var(--calcite-opacity-disabled);
}

:host([disabled]) *,
:host([disabled]) ::slotted(*) {
  pointer-events: none;
}

/**
* CSS Custom Properties
*
* These properties can be overridden using the component's tag as selector.
*
* @prop --calcite-combobox-input-height: Specifies the height of the component's input.
*/
:host {
  position: relative;
  display: block;
}

:host([disabled]) ::slotted([calcite-hydrated][disabled]),
:host([disabled]) [calcite-hydrated][disabled] {
  /* prevent opacity stacking */
  opacity: 1;
}

.interaction-container {
  display: contents;
}

:host([scale=s]) .x-button {
  inline-size: 1rem;
  block-size: 1rem;
}

:host([scale=m]) .x-button {
  inline-size: 1.5rem;
  block-size: 1.5rem;
}

:host([scale=l]) .x-button {
  inline-size: 2rem;
  block-size: 2rem;
}

.x-button {
  margin: 0px;
  display: flex;
  cursor: pointer;
  appearance: none;
  align-content: center;
  align-items: center;
  justify-content: center;
  align-self: center;
  border-width: 2px;
  background-color: transparent;
  color: var(--calcite-color-text-3);
  outline-color: transparent;
  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;
  border-radius: 50%;
  border-color: transparent;
  background-color: var(--calcite-color-foreground-2);
}
.x-button:active, .x-button:hover {
  color: var(--calcite-color-text-1);
  background-color: var(--calcite-color-foreground-3);
}
.x-button:active {
  border-style: solid;
  border-color: var(--calcite-color-brand);
}
.x-button calcite-icon {
  color: inherit;
}

:host([scale=s]) {
  font-size: var(--calcite-font-size--2);
  --calcite-combobox-item-spacing-unit-l: 0.5rem;
  --calcite-combobox-item-spacing-unit-s: 0.25rem;
  --calcite-combobox-input-height: 1rem;
  --calcite-internal-combobox-input-margin-block: calc(0.25rem - 1px);
}
:host([scale=s]) .x-button {
  margin-inline: 0.5rem;
}

:host([scale=m]) {
  font-size: var(--calcite-font-size--1);
  --calcite-combobox-item-spacing-unit-l: 0.75rem;
  --calcite-combobox-item-spacing-unit-s: 0.5rem;
  --calcite-combobox-input-height: 1rem;
  --calcite-internal-combobox-input-margin-block: calc(0.5rem - 1px);
}
:host([scale=m]) .x-button {
  margin-inline-end: 0.75rem;
}

:host([scale=l]) {
  font-size: var(--calcite-font-size-0);
  --calcite-combobox-item-spacing-unit-l: 1rem;
  --calcite-combobox-item-spacing-unit-s: 0.75rem;
  --calcite-combobox-input-height: 1.5rem;
  --calcite-internal-combobox-input-margin-block: calc(0.625rem - 1px);
}
:host([scale=l]) .x-button {
  margin-inline-end: 1rem;
}

.wrapper {
  display: flex;
  border-width: 1px;
  border-style: solid;
  border-color: var(--calcite-color-border-input);
  background-color: var(--calcite-color-foreground-1);
  color: var(--calcite-color-text-1);
  outline-color: transparent;
  padding-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);
  padding-inline: var(--calcite-combobox-item-spacing-unit-l);
}

:host(:focus-within) .wrapper,
.wrapper--active {
  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand-hover, var(--calcite-color-brand)));
  outline-offset: calc(
            -2px *
            calc(
              1 -
              2 * clamp(
                0,
                var(--calcite-offset-invert-focus),
                1
              )
            )
          );
}

:host([status=invalid]) .wrapper {
  border-color: var(--calcite-color-status-danger);
}

:host([status=invalid]:focus-within) .wrapper {
  outline: 2px solid var(--calcite-color-status-danger);
  outline-offset: calc(
            -2px *
            calc(
              1 -
              2 * clamp(
                0,
                var(--calcite-offset-invert-focus),
                1
              )
            )
          );
}

.wrapper--single {
  padding-block: 0;
  padding-inline: var(--calcite-combobox-item-spacing-unit-l);
  cursor: pointer;
  flex-wrap: nowrap;
}

.grid-input {
  position: relative;
  display: flex;
  flex-grow: 1;
  flex-wrap: wrap;
  align-items: center;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding: 0px;
  gap: var(--calcite-combobox-item-spacing-unit-s);
  margin-inline-end: var(--calcite-combobox-item-spacing-unit-s);
}
.grid-input.selection-display-fit, .grid-input.selection-display-single {
  flex-wrap: nowrap;
  overflow: hidden;
}

.input {
  flex-grow: 1;
  appearance: none;
  overflow: hidden;
  text-overflow: ellipsis;
  border-style: none;
  background-color: transparent;
  padding: 0px;
  font-family: inherit;
  color: var(--calcite-color-text-1);
  font-size: inherit;
  block-size: var(--calcite-combobox-input-height);
  line-height: var(--calcite-combobox-input-height);
  inline-size: 100%;
  margin-block-end: var(--calcite-combobox-item-spacing-unit-s);
  min-inline-size: 4.8125rem;
}
.input:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.input:placeholder-shown {
  text-overflow: ellipsis;
}

.input--transparent {
  opacity: 0;
}

.input--single {
  padding: 0px;
  margin-block: var(--calcite-internal-combobox-input-margin-block);
}

.wrapper--active .input-single {
  cursor: text;
}

.input--hidden {
  pointer-events: none;
  inline-size: 0px;
  min-inline-size: 0px;
  opacity: 0;
}

.input--icon {
  padding-block: 0;
  padding-inline: var(--calcite-combobox-item-spacing-unit-l);
}

.input-wrap {
  display: flex;
  flex-grow: 1;
  align-items: center;
}

.input-wrap--single {
  flex: 1 1 0%;
  overflow: hidden;
}

.label {
  pointer-events: none;
  max-inline-size: 100%;
  flex: 1 1 auto;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding: 0px;
  font-weight: var(--calcite-font-weight-normal);
  block-size: var(--calcite-combobox-input-height);
  line-height: var(--calcite-combobox-input-height);
}

.label--icon {
  padding-inline: var(--calcite-combobox-item-spacing-unit-l);
}

.icon-end,
.icon-start {
  display: flex;
  cursor: pointer;
  align-items: center;
}

.icon-end {
  flex: none;
}

.floating-ui-container {
  --calcite-floating-ui-z-index: var(--calcite-z-index-dropdown);
  display: block;
  position: absolute;
  z-index: var(--calcite-floating-ui-z-index);
  visibility: hidden;
}

.floating-ui-container .calcite-floating-ui-anim {
  position: relative;
  transition: var(--calcite-floating-ui-transition);
  transition-property: transform, visibility, opacity;
  opacity: 0;
  box-shadow: 0 0 16px 0 rgba(0, 0, 0, 0.16);
  z-index: var(--calcite-z-index);
  border-radius: 0.25rem;
}
.floating-ui-container[data-placement^=bottom] .calcite-floating-ui-anim {
  transform: translateY(-5px);
}
.floating-ui-container[data-placement^=top] .calcite-floating-ui-anim {
  transform: translateY(5px);
}
.floating-ui-container[data-placement^=left] .calcite-floating-ui-anim {
  transform: translateX(5px);
}
.floating-ui-container[data-placement^=right] .calcite-floating-ui-anim {
  transform: translateX(-5px);
}
.floating-ui-container[data-placement] .calcite-floating-ui-anim--active {
  opacity: 1;
  transform: translate(0);
}

.floating-ui-container--active {
  visibility: visible;
}

@media (forced-colors: active) {
  .wrapper,
  .floating-ui-container--active {
    border: 1px solid canvasText;
  }
}
.screen-readers-only {
  position: absolute;
  inline-size: 1px;
  block-size: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.list-container {
  max-block-size: 45vh;
  overflow-y: auto;
  background-color: var(--calcite-color-foreground-1);
  inline-size: var(--calcite-dropdown-width);
}

.list {
  margin: 0px;
  display: block;
  padding: 0px;
}

.list--hide {
  block-size: 0px;
  overflow: hidden;
}

calcite-chip {
  --calcite-animation-timing: 0;
}

.chip {
  margin-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);
  max-inline-size: 100%;
}

.chip--active {
  background-color: var(--calcite-color-foreground-3);
}

.chip--invisible {
  visibility: hidden;
  position: absolute;
}

.item {
  display: block;
}

.validation-container {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  align-self: stretch;
}

:host([scale=m]) .validation-container,
:host([scale=l]) .validation-container {
  padding-block-start: 0.5rem;
}

:host([scale=s]) .validation-container {
  padding-block-start: 0.25rem;
}

::slotted(input[slot=hidden-form-input]) {
  margin: 0 !important;
  opacity: 0 !important;
  outline: none !important;
  padding: 0 !important;
  position: absolute !important;
  inset: 0 !important;
  transform: none !important;
  -webkit-appearance: none !important;
  z-index: -1 !important;
}

:host([hidden]) {
  display: none;
}

[hidden] {
  display: none;
}

::slotted(calcite-combobox-item-group:not(:first-child)) {
  padding-block-start: var(--calcite-combobox-item-spacing-unit-l);
}