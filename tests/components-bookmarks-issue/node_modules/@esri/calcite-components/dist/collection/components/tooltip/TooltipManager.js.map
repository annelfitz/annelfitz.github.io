{"version":3,"file":"TooltipManager.js","sourceRoot":"","sources":["../../../../src/components/tooltip/TooltipManager.ts"],"names":[],"mappings":"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","sourcesContent":["import { getShadowRootNode, isPrimaryPointerButton } from \"../../utils/dom\";\nimport { ReferenceElement } from \"../../utils/floating-ui\";\nimport { TOOLTIP_OPEN_DELAY_MS, TOOLTIP_CLOSE_DELAY_MS } from \"./resources\";\nimport { getEffectiveReferenceElement } from \"./utils\";\n\nexport default class TooltipManager {\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  private registeredElements = new WeakMap<ReferenceElement, HTMLCalciteTooltipElement>();\n\n  private registeredShadowRootCounts = new WeakMap<ShadowRoot, number>();\n\n  private hoverOpenTimeout: number = null;\n\n  private hoverCloseTimeout: number = null;\n\n  private hoveredTooltip: HTMLCalciteTooltipElement = null;\n\n  private clickedTooltip: HTMLCalciteTooltipElement = null;\n\n  private activeTooltip: HTMLCalciteTooltipElement = null;\n\n  private registeredElementCount = 0;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  registerElement(referenceEl: ReferenceElement, tooltip: HTMLCalciteTooltipElement): void {\n    this.registeredElementCount++;\n    this.registeredElements.set(referenceEl, tooltip);\n    const shadowRoot = this.getReferenceElShadowRootNode(referenceEl);\n\n    if (shadowRoot) {\n      this.registerShadowRoot(shadowRoot);\n    }\n\n    if (this.registeredElementCount === 1) {\n      this.addListeners();\n    }\n  }\n\n  unregisterElement(referenceEl: ReferenceElement): void {\n    const shadowRoot = this.getReferenceElShadowRootNode(referenceEl);\n\n    if (shadowRoot) {\n      this.unregisterShadowRoot(shadowRoot);\n    }\n\n    if (this.registeredElements.delete(referenceEl)) {\n      this.registeredElementCount--;\n    }\n\n    if (this.registeredElementCount === 0) {\n      this.removeListeners();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private queryTooltip = (composedPath: EventTarget[]): HTMLCalciteTooltipElement => {\n    const { registeredElements } = this;\n\n    const registeredElement = (composedPath as HTMLElement[]).find((pathEl) => registeredElements.has(pathEl));\n\n    return registeredElements.get(registeredElement);\n  };\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.key === \"Escape\" && !event.defaultPrevented) {\n      const { activeTooltip } = this;\n\n      if (activeTooltip?.open) {\n        this.clearHoverTimeout();\n        this.closeActiveTooltip();\n\n        const referenceElement = getEffectiveReferenceElement(activeTooltip);\n\n        if (referenceElement instanceof Element && referenceElement.contains(event.target as HTMLElement)) {\n          event.preventDefault();\n        }\n      }\n    }\n  };\n\n  private pointerMoveHandler = (event: PointerEvent): void => {\n    const composedPath = event.composedPath();\n    const { activeTooltip } = this;\n    const hoveringActiveTooltip = activeTooltip?.open && composedPath.includes(activeTooltip);\n\n    if (hoveringActiveTooltip) {\n      this.clearHoverTimeout();\n      return;\n    }\n\n    const tooltip = this.queryTooltip(composedPath);\n    this.hoveredTooltip = tooltip;\n\n    if (this.isClosableClickedTooltip(tooltip)) {\n      return;\n    }\n\n    this.clickedTooltip = null;\n\n    if (tooltip) {\n      this.openHoveredTooltip(tooltip);\n    } else if (activeTooltip) {\n      this.closeHoveredTooltip();\n    }\n  };\n\n  private pointerDownHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const clickedTooltip = this.queryTooltip(event.composedPath());\n\n    this.clickedTooltip = clickedTooltip;\n\n    if (clickedTooltip?.closeOnClick) {\n      this.toggleTooltip(clickedTooltip, false);\n      this.clearHoverTimeout();\n    }\n  };\n\n  private focusInHandler = (event: FocusEvent): void => {\n    this.queryFocusedTooltip(event, true);\n  };\n\n  private focusOutHandler = (event: FocusEvent): void => {\n    this.queryFocusedTooltip(event, false);\n  };\n\n  private addShadowListeners(shadowRoot: ShadowRoot): void {\n    shadowRoot.addEventListener(\"focusin\", this.focusInHandler, { capture: true });\n    shadowRoot.addEventListener(\"focusout\", this.focusOutHandler, { capture: true });\n  }\n\n  private removeShadowListeners(shadowRoot: ShadowRoot): void {\n    shadowRoot.removeEventListener(\"focusin\", this.focusInHandler, { capture: true });\n    shadowRoot.removeEventListener(\"focusout\", this.focusOutHandler, { capture: true });\n  }\n\n  private addListeners(): void {\n    window.addEventListener(\"keydown\", this.keyDownHandler, { capture: true });\n    window.addEventListener(\"pointermove\", this.pointerMoveHandler, { capture: true });\n    window.addEventListener(\"pointerdown\", this.pointerDownHandler, { capture: true });\n    window.addEventListener(\"focusin\", this.focusInHandler, { capture: true });\n    window.addEventListener(\"focusout\", this.focusOutHandler, { capture: true });\n  }\n\n  private removeListeners(): void {\n    window.removeEventListener(\"keydown\", this.keyDownHandler, { capture: true });\n    window.removeEventListener(\"pointermove\", this.pointerMoveHandler, { capture: true });\n    window.removeEventListener(\"pointerdown\", this.pointerDownHandler, { capture: true });\n    window.removeEventListener(\"focusin\", this.focusInHandler, { capture: true });\n    window.removeEventListener(\"focusout\", this.focusOutHandler, { capture: true });\n  }\n\n  private clearHoverOpenTimeout(): void {\n    window.clearTimeout(this.hoverOpenTimeout);\n    this.hoverOpenTimeout = null;\n  }\n\n  private clearHoverCloseTimeout(): void {\n    window.clearTimeout(this.hoverCloseTimeout);\n    this.hoverCloseTimeout = null;\n  }\n\n  private clearHoverTimeout(): void {\n    this.clearHoverOpenTimeout();\n    this.clearHoverCloseTimeout();\n  }\n\n  private closeActiveTooltip(): void {\n    const { activeTooltip } = this;\n\n    if (activeTooltip?.open) {\n      this.toggleTooltip(activeTooltip, false);\n    }\n  }\n\n  private toggleFocusedTooltip(tooltip: HTMLCalciteTooltipElement, open: boolean): void {\n    this.closeActiveTooltip();\n\n    if (open) {\n      this.clearHoverTimeout();\n    }\n\n    this.toggleTooltip(tooltip, open);\n  }\n\n  private toggleTooltip(tooltip: HTMLCalciteTooltipElement, open: boolean): void {\n    tooltip.open = open;\n\n    this.activeTooltip = open ? tooltip : null;\n  }\n\n  private openHoveredTooltip = (tooltip: HTMLCalciteTooltipElement): void => {\n    this.hoverOpenTimeout = window.setTimeout(\n      () => {\n        if (this.hoverOpenTimeout === null) {\n          return;\n        }\n\n        this.clearHoverCloseTimeout();\n\n        if (this.activeTooltip === this.hoveredTooltip) {\n          return;\n        }\n\n        this.closeActiveTooltip();\n\n        if (tooltip !== this.hoveredTooltip) {\n          return;\n        }\n\n        this.toggleTooltip(tooltip, true);\n      },\n      this.activeTooltip ? 0 : TOOLTIP_OPEN_DELAY_MS,\n    );\n  };\n\n  private closeHoveredTooltip = (): void => {\n    this.hoverCloseTimeout = window.setTimeout(() => {\n      if (this.hoverCloseTimeout === null) {\n        return;\n      }\n\n      this.closeActiveTooltip();\n    }, TOOLTIP_CLOSE_DELAY_MS);\n  };\n\n  private queryFocusedTooltip(event: FocusEvent, open: boolean): void {\n    const tooltip = this.queryTooltip(event.composedPath());\n\n    if (!tooltip || this.isClosableClickedTooltip(tooltip)) {\n      return;\n    }\n\n    this.toggleFocusedTooltip(tooltip, open);\n  }\n\n  private isClosableClickedTooltip(tooltip: HTMLCalciteTooltipElement): boolean {\n    return tooltip?.closeOnClick && tooltip === this.clickedTooltip;\n  }\n\n  private registerShadowRoot(shadowRoot: ShadowRoot): void {\n    const { registeredShadowRootCounts } = this;\n\n    const newCount = (registeredShadowRootCounts.get(shadowRoot) ?? 0) + 1;\n\n    if (newCount === 1) {\n      this.addShadowListeners(shadowRoot);\n    }\n\n    registeredShadowRootCounts.set(shadowRoot, newCount);\n  }\n\n  private unregisterShadowRoot(shadowRoot: ShadowRoot): void {\n    const { registeredShadowRootCounts } = this;\n\n    const newCount = registeredShadowRootCounts.get(shadowRoot) - 1;\n\n    if (newCount === 0) {\n      this.removeShadowListeners(shadowRoot);\n    }\n\n    registeredShadowRootCounts.set(shadowRoot, newCount);\n  }\n\n  private getReferenceElShadowRootNode(referenceEl: ReferenceElement): ShadowRoot | null {\n    return referenceEl instanceof Element ? getShadowRootNode(referenceEl) : null;\n  }\n}\n"]}