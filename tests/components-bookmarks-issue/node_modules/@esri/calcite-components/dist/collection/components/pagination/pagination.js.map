{"version":3,"file":"pagination.js","sourceRoot":"","sources":["../../../../src/components/pagination/pagination.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Scale } from \"../interfaces\";\nimport { PaginationMessages } from \"./assets/pagination/t9n\";\nimport { CSS, ICONS } from \"./resources\";\nimport { createObserver } from \"../../utils/observers\";\nimport { breakpoints } from \"../../utils/responsive\";\nimport { getIconScale } from \"../../utils/component\";\n\nexport interface PaginationDetail {\n  start: number;\n  totalItems: number;\n  startItem: number;\n}\n\nconst firstAndLastPageCount = 2;\nconst ellipsisCount = 2;\n\nconst maxItemBreakpoints = {\n  large: 11,\n  medium: 9,\n  small: 7,\n  xsmall: 5,\n  xxsmall: 1,\n};\n\n@Component({\n  tag: \"calcite-pagination\",\n  styleUrl: \"pagination.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class Pagination\n  implements LocalizedComponent, LocalizedComponent, LoadableComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PaginationMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PaginationMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop() numberingSystem: NumberingSystem;\n\n  /** Specifies the number of items per page. */\n  @Prop({ mutable: true, reflect: true }) pageSize = 20;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the starting item number. */\n  @Prop({ mutable: true, reflect: true }) startItem = 1;\n\n  /** Specifies the total number of items. */\n  @Prop({ reflect: true }) totalItems = 0;\n\n  @Watch(\"totalItems\")\n  @Watch(\"pageSize\")\n  handleTotalPages(): void {\n    if (this.pageSize < 1) {\n      this.pageSize = 1;\n    }\n    this.totalPages = this.totalItems / this.pageSize;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePaginationElement;\n\n  @State() defaultMessages: PaginationMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleWatcher(): void {\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n  }\n\n  @State() maxItems = maxItemBreakpoints.xxsmall;\n\n  @State() totalPages: number;\n\n  @State() lastStartItem: number;\n\n  @Watch(\"totalItems\")\n  @Watch(\"pageSize\")\n  @Watch(\"totalPages\")\n  handleLastStartItemChange(): void {\n    const { totalItems, pageSize, totalPages } = this;\n\n    this.lastStartItem =\n      (totalItems % pageSize === 0 ? totalItems - pageSize : Math.floor(totalPages) * pageSize) + 1;\n  }\n\n  @State() isXXSmall: boolean;\n\n  @Watch(\"maxItems\")\n  handleIsXXSmall(): void {\n    this.isXXSmall = this.maxItems === maxItemBreakpoints.xxsmall;\n  }\n\n  private resizeObserver = createObserver(\"resize\", (entries) =>\n    entries.forEach(this.resizeHandler),\n  );\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emits when the selected page changes.\n   */\n  @Event({ cancelable: false }) calcitePaginationChange: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n    this.handleTotalPages();\n    this.handleLastStartItemChange();\n    this.handleIsXXSmall();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.setMaxItemsToBreakpoint(this.el.clientWidth);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  /** Go to the next page of results. */\n  @Method()\n  async nextPage(): Promise<void> {\n    this.startItem = Math.min(this.lastStartItem, this.startItem + this.pageSize);\n  }\n\n  /** Go to the previous page of results. */\n  @Method()\n  async previousPage(): Promise<void> {\n    this.startItem = Math.max(1, this.startItem - this.pageSize);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private setMaxItemsToBreakpoint(width: number): void {\n    if (!breakpoints || !width) {\n      return;\n    }\n\n    if (width >= breakpoints.width.medium) {\n      this.maxItems = maxItemBreakpoints.large;\n      return;\n    }\n\n    if (width >= breakpoints.width.small) {\n      this.maxItems = maxItemBreakpoints.medium;\n      return;\n    }\n\n    if (width >= breakpoints.width.xsmall) {\n      this.maxItems = maxItemBreakpoints.small;\n      return;\n    }\n\n    if (width >= breakpoints.width.xxsmall) {\n      this.maxItems = maxItemBreakpoints.xsmall;\n      return;\n    }\n\n    this.maxItems = maxItemBreakpoints.xxsmall;\n  }\n\n  private resizeHandler = ({ contentRect: { width } }: ResizeObserverEntry): void =>\n    this.setMaxItemsToBreakpoint(width);\n\n  private firstClicked = (): void => {\n    this.startItem = 1;\n    this.emitUpdate();\n  };\n\n  private lastClicked = (): void => {\n    this.startItem = this.lastStartItem;\n    this.emitUpdate();\n  };\n\n  private previousClicked = async (): Promise<void> => {\n    await this.previousPage();\n    this.emitUpdate();\n  };\n\n  private nextClicked = async (): Promise<void> => {\n    await this.nextPage();\n    this.emitUpdate();\n  };\n\n  private showStartEllipsis() {\n    return (\n      this.totalPages > this.maxItems &&\n      Math.floor(this.startItem / this.pageSize) >\n        this.maxItems - firstAndLastPageCount - ellipsisCount\n    );\n  }\n\n  private showEndEllipsis() {\n    return (\n      this.totalPages > this.maxItems &&\n      (this.totalItems - this.startItem) / this.pageSize >\n        this.maxItems - firstAndLastPageCount - (ellipsisCount - 1)\n    );\n  }\n\n  private emitUpdate() {\n    this.calcitePaginationChange.emit();\n  }\n\n  private handlePageClick = (event: Event) => {\n    const target = event.target as HTMLButtonElement;\n    this.startItem = parseInt(target.value, 10);\n    this.emitUpdate();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderEllipsis(type: \"start\" | \"end\"): VNode {\n    return (\n      <span class={CSS.ellipsis} data-test-ellipsis={type} key={type}>\n        &hellip;\n      </span>\n    );\n  }\n\n  renderItems(): VNode[] {\n    const { totalItems, pageSize, startItem, maxItems, totalPages, lastStartItem, isXXSmall } =\n      this;\n\n    const items: VNode[] = [];\n\n    if (isXXSmall) {\n      items.push(this.renderPage(startItem));\n      return items;\n    }\n\n    const renderFirstPage = totalItems > pageSize;\n    const renderStartEllipsis = this.showStartEllipsis();\n    const renderEndEllipsis = this.showEndEllipsis();\n\n    if (renderFirstPage) {\n      items.push(this.renderPage(1));\n    }\n\n    if (renderStartEllipsis) {\n      items.push(this.renderEllipsis(\"start\"));\n    }\n\n    const remainingItems =\n      maxItems -\n      firstAndLastPageCount -\n      (renderEndEllipsis ? 1 : 0) -\n      (renderStartEllipsis ? 1 : 0);\n\n    let end: number;\n    let nextStart: number;\n\n    // if we don't need ellipses render the whole set\n    if (totalPages - 1 <= remainingItems) {\n      nextStart = 1 + pageSize;\n      end = lastStartItem - pageSize;\n    } else {\n      // if we're within max pages of page 1\n      if (startItem / pageSize < remainingItems) {\n        nextStart = 1 + pageSize;\n        end = 1 + remainingItems * pageSize;\n      } else {\n        // if we're within max pages of last page\n        if (startItem + remainingItems * pageSize >= totalItems) {\n          nextStart = lastStartItem - remainingItems * pageSize;\n          end = lastStartItem - pageSize;\n        } else {\n          // if we're within the center pages\n          nextStart = startItem - pageSize * ((remainingItems - 1) / 2);\n          end = startItem + pageSize * ((remainingItems - 1) / 2);\n        }\n      }\n    }\n\n    for (let i = 0; i < remainingItems && nextStart <= end; i++) {\n      items.push(this.renderPage(nextStart));\n      nextStart = nextStart + pageSize;\n    }\n\n    if (renderEndEllipsis) {\n      items.push(this.renderEllipsis(\"end\"));\n    }\n\n    items.push(this.renderPage(lastStartItem));\n\n    return items;\n  }\n\n  renderPage(start: number): VNode {\n    const { pageSize } = this;\n    const page = Math.floor(start / pageSize) + (pageSize === 1 ? 0 : 1);\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    const displayedPage = numberStringFormatter.localize(page.toString());\n    const selected = start === this.startItem;\n\n    return (\n      <button\n        aria-current={selected ? \"page\" : \"false\"}\n        class={{\n          [CSS.page]: true,\n          [CSS.selected]: selected,\n        }}\n        onClick={this.handlePageClick}\n        value={start}\n      >\n        {displayedPage}\n      </button>\n    );\n  }\n\n  renderPreviousChevron(): VNode {\n    const { pageSize, startItem, messages } = this;\n\n    const disabled = pageSize === 1 ? startItem <= pageSize : startItem < pageSize;\n\n    return (\n      <button\n        aria-label={messages.previous}\n        class={{\n          [CSS.chevron]: true,\n          [CSS.disabled]: disabled,\n        }}\n        data-test-chevron=\"previous\"\n        disabled={disabled}\n        key=\"previous\"\n        onClick={this.previousClicked}\n      >\n        <calcite-icon flipRtl icon={ICONS.previous} scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  renderNextChevron(): VNode {\n    const { totalItems, pageSize, startItem, messages } = this;\n\n    const disabled =\n      pageSize === 1 ? startItem + pageSize > totalItems : startItem + pageSize > totalItems;\n\n    return (\n      <button\n        aria-label={messages.next}\n        class={{\n          [CSS.chevron]: true,\n          [CSS.disabled]: disabled,\n        }}\n        data-test-chevron=\"next\"\n        disabled={disabled}\n        key=\"next-button\"\n        onClick={this.nextClicked}\n      >\n        <calcite-icon flipRtl icon={ICONS.next} scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  renderFirstChevron(): VNode {\n    const { messages, startItem, isXXSmall } = this;\n\n    const disabled = startItem === 1;\n\n    return isXXSmall ? (\n      <button\n        aria-label={messages.first}\n        class={{\n          [CSS.chevron]: true,\n          [CSS.disabled]: disabled,\n        }}\n        disabled={disabled}\n        key=\"first-button\"\n        onClick={this.firstClicked}\n      >\n        <calcite-icon flipRtl icon={ICONS.first} scale={getIconScale(this.scale)} />\n      </button>\n    ) : null;\n  }\n\n  renderLastChevron(): VNode {\n    const { messages, startItem, isXXSmall, lastStartItem } = this;\n\n    const disabled = startItem === lastStartItem;\n\n    return isXXSmall ? (\n      <button\n        aria-label={messages.last}\n        class={{\n          [CSS.chevron]: true,\n          [CSS.disabled]: disabled,\n        }}\n        disabled={disabled}\n        key=\"last-button\"\n        onClick={this.lastClicked}\n      >\n        <calcite-icon flipRtl icon={ICONS.last} scale={getIconScale(this.scale)} />\n      </button>\n    ) : null;\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        {this.renderFirstChevron()}\n        {this.renderPreviousChevron()}\n        {this.renderItems()}\n        {this.renderNextChevron()}\n        {this.renderLastChevron()}\n      </Fragment>\n    );\n  }\n}\n"]}