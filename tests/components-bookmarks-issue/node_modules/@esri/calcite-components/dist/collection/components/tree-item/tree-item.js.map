{"version":3,"file":"tree-item.js","sourceRoot":"","sources":["../../../../src/components/tree-item/tree-item.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  filterDirectChildren,\n  getElementDir,\n  getSlotted,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { FlipContext, Scale, SelectionMode } from \"../interfaces\";\nimport { TreeItemSelectDetail } from \"./interfaces\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\nimport { getIconScale } from \"../../utils/component\";\n\n/**\n * @slot - A slot for adding text.\n * @slot children - A slot for adding nested `calcite-tree` elements.\n * @slot actions-end - A slot for adding actions to the end of the component. It is recommended to use two or fewer actions.\n */\n@Component({\n  tag: \"calcite-tree-item\",\n  styleUrl: \"tree-item.scss\",\n  shadow: true,\n})\nexport class TreeItem implements ConditionalSlotComponent, InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, the component is expanded. */\n  @Prop({ mutable: true, reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(newValue: boolean): void {\n    this.updateParentIsExpanded(this.el, newValue);\n  }\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: string;\n\n  /** When `true`, the component is selected. */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(value: boolean): void {\n    if (this.selectionMode === \"ancestors\" && !this.userChangedValue) {\n      if (value) {\n        this.indeterminate = false;\n      }\n      this.calciteInternalTreeItemSelect.emit({\n        modifyCurrentSelection: true,\n        updateItem: false,\n      });\n    }\n  }\n\n  /**\n   * @internal\n   */\n  @Prop() parentExpanded = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) depth = -1;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) hasChildren: boolean = null;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) lines: boolean;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) scale: Scale;\n\n  /**\n   * In ancestor selection mode, show as indeterminate when only some children are selected.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) indeterminate = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) selectionMode: SelectionMode;\n\n  @Watch(\"selectionMode\")\n  getSelectionMode(): void {\n    this.isSelectionMultiLike =\n      this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\";\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.parentTreeItem = this.el.parentElement?.closest(\"calcite-tree-item\");\n    if (this.parentTreeItem) {\n      const { expanded } = this.parentTreeItem;\n      this.updateParentIsExpanded(this.parentTreeItem, expanded);\n    }\n    connectConditionalSlotComponent(this);\n    connectInteractive(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n    disconnectInteractive(this);\n  }\n\n  componentWillRender(): void {\n    this.hasChildren = !!this.el.querySelector(\"calcite-tree\");\n    this.depth = 0;\n    let parentTree = this.el.closest(\"calcite-tree\");\n\n    if (!parentTree) {\n      return;\n    }\n\n    this.selectionMode = parentTree.selectionMode;\n    this.scale = parentTree.scale || \"m\";\n    this.lines = parentTree.lines;\n\n    let nextParentTree;\n    while (parentTree) {\n      nextParentTree = parentTree.parentElement?.closest(\"calcite-tree\");\n      if (nextParentTree === parentTree) {\n        break;\n      } else {\n        parentTree = nextParentTree;\n        this.depth = this.depth + 1;\n      }\n    }\n  }\n\n  componentWillLoad(): void {\n    requestAnimationFrame(() => (this.updateAfterInitialRender = true));\n  }\n\n  componentDidLoad(): void {\n    this.updateAncestorTree();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTreeItemElement;\n\n  private isSelectionMultiLike: boolean;\n\n  render(): VNode {\n    const rtl = getElementDir(this.el) === \"rtl\";\n    const showBulletPoint = this.selectionMode === \"single\" || this.selectionMode === \"children\";\n    const showCheckmark =\n      this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\";\n    const showBlank = this.selectionMode === \"none\" && !this.hasChildren;\n\n    const chevron = this.hasChildren ? (\n      <calcite-icon\n        class={{\n          [CSS.chevron]: true,\n          [CSS_UTILITY.rtl]: rtl,\n        }}\n        data-test-id=\"icon\"\n        icon={ICONS.chevronRight}\n        onClick={this.iconClickHandler}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const defaultSlotNode: VNode = <slot key=\"default-slot\" />;\n\n    const checkbox =\n      this.selectionMode === \"ancestors\" ? (\n        <label class={CSS.checkboxLabel} key=\"checkbox-label\">\n          <calcite-checkbox\n            checked={this.selected}\n            class={CSS.checkbox}\n            data-test-id=\"checkbox\"\n            indeterminate={this.hasChildren && this.indeterminate}\n            scale={this.scale}\n            tabIndex={-1}\n          />\n          {defaultSlotNode}\n        </label>\n      ) : null;\n    const selectedIcon = showBulletPoint\n      ? ICONS.bulletPoint\n      : showCheckmark\n        ? ICONS.checkmark\n        : showBlank\n          ? ICONS.blank\n          : null;\n    const itemIndicator = selectedIcon ? (\n      <calcite-icon\n        class={{\n          [CSS.bulletPointIcon]: selectedIcon === ICONS.bulletPoint,\n          [CSS.checkmarkIcon]: selectedIcon === ICONS.checkmark,\n          [CSS_UTILITY.rtl]: rtl,\n        }}\n        icon={selectedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n\n    const hidden = !(this.parentExpanded || this.depth === 1);\n    const isExpanded = this.updateAfterInitialRender && this.expanded;\n    const { hasEndActions } = this;\n    const slotNode = (\n      <slot\n        key=\"actionsEndSlot\"\n        name={SLOTS.actionsEnd}\n        onSlotchange={this.actionsEndSlotChangeHandler}\n      />\n    );\n\n    const iconStartEl = (\n      <calcite-icon\n        class={CSS.iconStart}\n        flipRtl={this.iconFlipRtl === \"start\" || this.iconFlipRtl === \"both\"}\n        icon={this.iconStart}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    return (\n      <Host\n        aria-expanded={this.hasChildren ? toAriaBoolean(isExpanded) : undefined}\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-selected={this.selected ? \"true\" : showCheckmark ? \"false\" : undefined}\n        calcite-hydrated-hidden={hidden}\n        role=\"treeitem\"\n        tabIndex={this.disabled ? -1 : 0}\n      >\n        <InteractiveContainer disabled={this.disabled}>\n          <div class={{ [CSS.itemExpanded]: isExpanded }}>\n            <div class={CSS.nodeAndActionsContainer}>\n              <div\n                class={{\n                  [CSS.nodeContainer]: true,\n                  [CSS_UTILITY.rtl]: rtl,\n                }}\n                data-selection-mode={this.selectionMode}\n                // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                ref={(el) => (this.defaultSlotWrapper = el as HTMLElement)}\n              >\n                {chevron}\n                {itemIndicator}\n                {this.iconStart ? iconStartEl : null}\n                {checkbox ? checkbox : defaultSlotNode}\n              </div>\n              <div\n                class={CSS.actionsEnd}\n                hidden={!hasEndActions}\n                ref={(el) => (this.actionSlotWrapper = el as HTMLElement)}\n              >\n                {slotNode}\n              </div>\n            </div>\n\n            <div\n              class={{\n                [CSS.childrenContainer]: true,\n                [CSS_UTILITY.rtl]: rtl,\n              }}\n              data-test-id=\"calcite-tree-children\"\n              onClick={this.childrenClickHandler}\n              role={this.hasChildren ? \"group\" : undefined}\n            >\n              <slot name={SLOTS.children} />\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"click\")\n  onClick(event: Event): void {\n    if (this.disabled || this.isActionEndEvent(event)) {\n      return;\n    }\n\n    // Solve for if the item is clicked somewhere outside the slotted anchor.\n    // Anchor is triggered anywhere you click\n    const [link] = filterDirectChildren<HTMLAnchorElement>(this.el, \"a\");\n    if (link && (event.composedPath()[0] as any).tagName.toLowerCase() !== \"a\") {\n      const target = link.target === \"\" ? \"_self\" : link.target;\n      window.open(link.href, target);\n    }\n    this.calciteInternalTreeItemSelect.emit({\n      modifyCurrentSelection: this.selectionMode === \"ancestors\" || this.isSelectionMultiLike,\n      updateItem: true,\n    });\n    this.userChangedValue = true;\n  }\n\n  private iconClickHandler = (event: MouseEvent): void => {\n    event.stopPropagation();\n    this.expanded = !this.expanded;\n  };\n\n  private childrenClickHandler = (event: MouseEvent): void => event.stopPropagation();\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (this.isActionEndEvent(event) || event.defaultPrevented) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.userChangedValue = true;\n        this.calciteInternalTreeItemSelect.emit({\n          modifyCurrentSelection: this.isSelectionMultiLike,\n          updateItem: true,\n        });\n        event.preventDefault();\n        break;\n      case \"Enter\":\n        // activates a node, i.e., performs its default action. For parent nodes, one possible default action is to open or close the node. In single-select trees where selection does not follow focus (see note below), the default action is typically to select the focused node.\n        const link = Array.from(this.el.children).find((el) =>\n          el.matches(\"a\"),\n        ) as HTMLAnchorElement;\n\n        this.userChangedValue = true;\n\n        if (link) {\n          link.click();\n          this.selected = true;\n        } else {\n          this.calciteInternalTreeItemSelect.emit({\n            modifyCurrentSelection: this.isSelectionMultiLike,\n            updateItem: true,\n          });\n        }\n        event.preventDefault();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTreeItemSelect: EventEmitter<TreeItemSelectDetail>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @State() hasEndActions = false;\n\n  /**\n   * Used to make sure initially expanded tree-item can properly\n   * transition and emit events from closed state when rendered.\n   *\n   * @private\n   */\n  @State() updateAfterInitialRender = false;\n\n  actionSlotWrapper!: HTMLElement;\n\n  childrenSlotWrapper!: HTMLElement;\n\n  defaultSlotWrapper!: HTMLElement;\n\n  private parentTreeItem?: HTMLCalciteTreeItemElement;\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private isActionEndEvent(event: Event): boolean {\n    const composedPath = event.composedPath();\n    return composedPath.includes(this.actionSlotWrapper);\n  }\n\n  private updateParentIsExpanded = (el: HTMLCalciteTreeItemElement, expanded: boolean): void => {\n    const items = getSlotted<HTMLCalciteTreeItemElement>(el, SLOTS.children, {\n      all: true,\n      selector: \"calcite-tree-item\",\n    });\n    items.forEach((item) => (item.parentExpanded = expanded));\n  };\n\n  /**\n   * This is meant to be called in `componentDidLoad` in order to take advantage of the hierarchical component lifecycle\n   * and help check for item selection as items are initialized\n   *\n   * @private\n   */\n  private updateAncestorTree(): void {\n    const parentItem = this.parentTreeItem;\n    if (this.selectionMode !== \"ancestors\" || !parentItem) {\n      return;\n    }\n\n    if (this.selected) {\n      const parentTree = this.el.parentElement;\n      const siblings = Array.from(parentTree?.children);\n      const selectedSiblings = siblings.filter(\n        (child: HTMLCalciteTreeItemElement) => child.selected,\n      );\n\n      if (siblings.length === selectedSiblings.length) {\n        parentItem.selected = true;\n        parentItem.indeterminate = false;\n      } else if (selectedSiblings.length > 0) {\n        parentItem.indeterminate = true;\n      }\n\n      const childItems = Array.from(\n        this.el.querySelectorAll<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\"),\n      );\n\n      childItems.forEach((item: HTMLCalciteTreeItemElement) => {\n        item.selected = true;\n        item.indeterminate = false;\n      });\n    } else if (this.indeterminate) {\n      const parentItem = this.parentTreeItem;\n      parentItem.indeterminate = true;\n    }\n  }\n\n  private actionsEndSlotChangeHandler = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n}\n"]}