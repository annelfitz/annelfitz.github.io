{"version":3,"file":"table-cell.js","sourceRoot":"","sources":["../../../../src/components/table-cell/table-cell.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Fragment,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { Alignment, Scale } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\n\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { TableCellMessages } from \"./assets/table-cell/t9n\";\nimport { CSS } from \"./resources\";\nimport { RowType, TableInteractionMode } from \"../table/interfaces\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\n\n/**\n * @slot - A slot for adding content, usually text content.\n */\n@Component({\n  tag: \"calcite-table-cell\",\n  styleUrl: \"table-cell.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TableCell\n  implements InteractiveComponent, LocalizedComponent, LoadableComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment = \"start\";\n\n  /** Specifies the number of columns the component should span. */\n  @Prop({ reflect: true }) colSpan: number;\n\n  /** Specifies the number of rows the component should span. */\n  @Prop({ reflect: true }) rowSpan: number;\n\n  /** @internal */\n  @Prop() disabled: boolean;\n\n  /** @internal */\n  @Prop() interactionMode: TableInteractionMode = \"interactive\";\n\n  /** @internal */\n  @Prop() lastCell: boolean;\n\n  /** @internal */\n  @Prop() numberCell: boolean;\n\n  /** @internal */\n  @Prop() parentRowIsSelected: boolean;\n\n  @Watch(\"parentRowIsSelected\")\n  onSelectedChange(): void {\n    this.updateScreenReaderSelectionText();\n  }\n\n  /** @internal */\n  @Prop() parentRowPositionLocalized: string;\n\n  /** @internal */\n  @Prop() parentRowType: RowType;\n\n  /** @internal */\n  @Prop() positionInRow: number;\n\n  /** @internal */\n  @Prop() readCellContentsToAT: boolean;\n\n  /** @internal */\n  @Prop() scale: Scale = \"m\";\n\n  /** @internal */\n  @Prop() selectionCell: boolean;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TableCellMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TableCellMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTableCellElement;\n\n  @State() contentsText = \"\";\n\n  @State() defaultMessages: TableCellMessages;\n\n  @State() focused = false;\n\n  @State() selectionText = \"\";\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  private containerEl: HTMLTableCellElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    this.updateScreenReaderContentsText();\n    this.updateScreenReaderSelectionText();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectInteractive(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.containerEl.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private updateScreenReaderSelectionText(): void {\n    const selectedText = `${this.messages?.row} ${this.parentRowPositionLocalized} ${this.messages?.selected} ${this.messages?.keyboardDeselect}`;\n    const unselectedText = `${this.messages?.row} ${this.parentRowPositionLocalized} ${this.messages?.unselected} ${this.messages?.keyboardSelect}`;\n    this.selectionText = this.parentRowIsSelected ? selectedText : unselectedText;\n  }\n\n  private updateScreenReaderContentsText = (): void => {\n    this.contentsText = this.el.textContent;\n  };\n\n  private onContainerBlur = (): void => {\n    this.focused = false;\n  };\n\n  private onContainerFocus = (): void => {\n    this.focused = true;\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const staticCell =\n      this.disabled ||\n      (this.interactionMode === \"static\" &&\n        (!this.selectionCell || (this.selectionCell && this.parentRowType === \"foot\")));\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <td\n            aria-disabled={this.disabled}\n            class={{\n              [CSS.footerCell]: this.parentRowType === \"foot\",\n              [CSS.numberCell]: this.numberCell,\n              [CSS.selectionCell]: this.selectionCell,\n              [CSS.selectedCell]: this.parentRowIsSelected,\n              [CSS.lastCell]: this.lastCell && (!this.rowSpan || (this.colSpan && !!this.rowSpan)),\n              [CSS_UTILITY.rtl]: dir === \"rtl\",\n              [CSS.staticCell]: staticCell,\n            }}\n            colSpan={this.colSpan}\n            onBlur={this.onContainerBlur}\n            onFocus={this.onContainerFocus}\n            role={this.interactionMode === \"interactive\" ? \"gridcell\" : \"cell\"}\n            rowSpan={this.rowSpan}\n            tabIndex={staticCell ? -1 : 0}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(el) => (this.containerEl = el)}\n          >\n            <span\n              aria-hidden={true}\n              aria-live={this.focused ? \"polite\" : \"off\"}\n              class={CSS.assistiveText}\n            >\n              {(this.selectionCell || this.readCellContentsToAT) && (\n                <Fragment>\n                  {this.selectionCell && this.selectionText}\n                  {this.readCellContentsToAT && !this.selectionCell && this.contentsText}\n                </Fragment>\n              )}\n            </span>\n            <slot onSlotchange={this.updateScreenReaderContentsText} />\n          </td>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"]}