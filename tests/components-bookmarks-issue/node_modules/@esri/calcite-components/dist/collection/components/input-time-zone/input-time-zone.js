/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.6.0
 */
import { h, Host, } from "@stencil/core";
import { connectLabel, disconnectLabel } from "../../utils/label";
import { InteractiveContainer, updateHostInteraction, } from "../../utils/interactive";
import { connectLocalized, disconnectLocalized, } from "../../utils/locale";
import { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from "../../utils/t9n";
import { createTimeZoneItems, getUserTimeZoneName, getUserTimeZoneOffset } from "./utils";
import { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from "../../utils/loadable";
import { afterConnectDefaultValueSet, connectForm, disconnectForm, HiddenFormInputSlot, } from "../../utils/form";
export class InputTimeZone {
    constructor() {
        this.setComboboxRef = (el) => {
            this.comboboxEl = el;
        };
        this.onComboboxBeforeClose = (event) => {
            event.stopPropagation();
            this.calciteInputTimeZoneBeforeClose.emit();
        };
        this.onComboboxBeforeOpen = (event) => {
            event.stopPropagation();
            this.calciteInputTimeZoneBeforeOpen.emit();
        };
        this.onComboboxChange = (event) => {
            event.stopPropagation();
            const combobox = event.target;
            const selected = this.findTimeZoneItem(combobox.selectedItems[0].getAttribute("data-value"));
            const selectedValue = `${selected.value}`;
            if (this.value === selectedValue) {
                return;
            }
            this.value = selectedValue;
            this.selectedTimeZoneItem = selected;
            this.calciteInputTimeZoneChange.emit();
        };
        this.onComboboxClose = (event) => {
            event.stopPropagation();
            this.open = false;
            this.calciteInputTimeZoneClose.emit();
        };
        this.onComboboxOpen = (event) => {
            this.open = true;
            event.stopPropagation();
            this.calciteInputTimeZoneOpen.emit();
        };
        this.disabled = false;
        this.form = undefined;
        this.maxItems = 0;
        this.messages = undefined;
        this.messageOverrides = undefined;
        this.mode = "offset";
        this.validationMessage = undefined;
        this.validationIcon = undefined;
        this.name = undefined;
        this.open = false;
        this.overlayPositioning = "absolute";
        this.referenceDate = undefined;
        this.required = false;
        this.scale = "m";
        this.status = "idle";
        this.value = undefined;
        this.defaultMessages = undefined;
        this.effectiveLocale = "";
    }
    onMessagesChange() {
        /* wired up by t9n util */
    }
    handleTimeZoneItemPropsChange() {
        this.updateTimeZoneItemsAndSelection();
    }
    handleValueChange(value, oldValue) {
        const timeZoneItem = this.findTimeZoneItem(value);
        if (!timeZoneItem) {
            this.value = oldValue;
            return;
        }
        this.selectedTimeZoneItem = timeZoneItem;
    }
    //--------------------------------------------------------------------------
    //
    //  Public Methods
    //
    //--------------------------------------------------------------------------
    async setFocus() {
        await componentFocusable(this);
        await this.comboboxEl.setFocus();
    }
    effectiveLocaleWatcher() {
        updateMessages(this, this.effectiveLocale);
    }
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    onLabelClick() {
        this.setFocus();
    }
    findTimeZoneItem(value) {
        const valueToMatch = value;
        return this.timeZoneItems.find(({ value }) => 
        // intentional == to match string to number
        value == valueToMatch);
    }
    async updateTimeZoneItemsAndSelection() {
        this.timeZoneItems = await this.createTimeZoneItems();
        const fallbackValue = this.mode === "offset" ? getUserTimeZoneOffset() : getUserTimeZoneName();
        const valueToMatch = this.value ?? fallbackValue;
        this.selectedTimeZoneItem = this.findTimeZoneItem(valueToMatch);
        if (!this.selectedTimeZoneItem) {
            this.selectedTimeZoneItem = this.findTimeZoneItem(fallbackValue);
        }
    }
    async createTimeZoneItems() {
        if (!this.effectiveLocale || !this.messages) {
            return [];
        }
        return createTimeZoneItems(this.effectiveLocale, this.messages, this.mode, this.referenceDate instanceof Date
            ? this.referenceDate
            : new Date(this.referenceDate ?? Date.now()));
    }
    // --------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    connectedCallback() {
        connectForm(this);
        connectLabel(this);
        connectLocalized(this);
        connectMessages(this);
    }
    disconnectedCallback() {
        disconnectForm(this);
        disconnectLabel(this);
        disconnectLocalized(this);
        disconnectMessages(this);
    }
    async componentWillLoad() {
        setUpLoadableComponent(this);
        await setUpMessages(this);
        await this.updateTimeZoneItemsAndSelection();
        const selectedValue = `${this.selectedTimeZoneItem.value}`;
        afterConnectDefaultValueSet(this, selectedValue);
        this.value = selectedValue;
    }
    componentDidLoad() {
        setComponentLoaded(this);
    }
    componentDidRender() {
        updateHostInteraction(this);
    }
    render() {
        return (h(Host, null, h(InteractiveContainer, { disabled: this.disabled }, h("calcite-combobox", { clearDisabled: true, disabled: this.disabled, label: this.messages.chooseTimeZone, lang: this.effectiveLocale, maxItems: this.maxItems, onCalciteComboboxBeforeClose: this.onComboboxBeforeClose, onCalciteComboboxBeforeOpen: this.onComboboxBeforeOpen, onCalciteComboboxChange: this.onComboboxChange, onCalciteComboboxClose: this.onComboboxClose, onCalciteComboboxOpen: this.onComboboxOpen, open: this.open, overlayPositioning: this.overlayPositioning, scale: this.scale, selectionMode: "single-persist", status: this.status, "validation-icon": this.validationIcon, "validation-message": this.validationMessage,
            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
            ref: this.setComboboxRef }, this.timeZoneItems.map((group) => {
            const selected = this.selectedTimeZoneItem === group;
            const { label, value } = group;
            return (h("calcite-combobox-item", { "data-value": value, key: label, selected: selected, textLabel: label, value: `${group.filterValue}` }));
        })), h(HiddenFormInputSlot, { component: this }))));
    }
    static get is() { return "calcite-input-time-zone"; }
    static get encapsulation() { return "shadow"; }
    static get delegatesFocus() { return true; }
    static get originalStyleUrls() {
        return {
            "$": ["input-time-zone.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["input-time-zone.css"]
        };
    }
    static get assetsDirs() { return ["assets"]; }
    static get properties() {
        return {
            "disabled": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "When `true`, interaction is prevented and the component is displayed with lower opacity."
                },
                "attribute": "disabled",
                "reflect": true,
                "defaultValue": "false"
            },
            "form": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The `id` of the form that will be associated with the component.\n\nWhen not set, the component will be associated with its ancestor form element, if any."
                },
                "attribute": "form",
                "reflect": true
            },
            "maxItems": {
                "type": "number",
                "mutable": false,
                "complexType": {
                    "original": "number",
                    "resolved": "number",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the component's maximum number of options to display before displaying a scrollbar."
                },
                "attribute": "max-items",
                "reflect": true,
                "defaultValue": "0"
            },
            "messages": {
                "type": "unknown",
                "mutable": true,
                "complexType": {
                    "original": "InputTimeZoneMessages",
                    "resolved": "{ chooseTimeZone: string; timeZoneLabel: string; \"Africa/Abidjan\": string; \"Africa/Accra\": string; \"Africa/Addis_Ababa\": string; \"Africa/Algiers\": string; \"Africa/Asmera\": string; \"Africa/Bamako\": string; \"Africa/Bangui\": string; \"Africa/Banjul\": string; \"Africa/Bissau\": string; \"Africa/Blantyre\": string; \"Africa/Brazzaville\": string; \"Africa/Bujumbura\": string; \"Africa/Cairo\": string; \"Africa/Casablanca\": string; \"Africa/Ceuta\": string; \"Africa/Conakry\": string; \"Africa/Dakar\": string; \"Africa/Dar_es_Salaam\": string; \"Africa/Djibouti\": string; \"Africa/Douala\": string; \"Africa/El_Aaiun\": string; \"Africa/Freetown\": string; \"Africa/Gaborone\": string; \"Africa/Harare\": string; \"Africa/Johannesburg\": string; \"Africa/Juba\": string; \"Africa/Kampala\": string; \"Africa/Khartoum\": string; \"Africa/Kigali\": string; \"Africa/Kinshasa\": string; \"Africa/Lagos\": string; \"Africa/Libreville\": string; \"Africa/Lome\": string; \"Africa/Luanda\": string; \"Africa/Lubumbashi\": string; \"Africa/Lusaka\": string; \"Africa/Malabo\": string; \"Africa/Maputo\": string; \"Africa/Maseru\": string; \"Africa/Mbabane\": string; \"Africa/Mogadishu\": string; \"Africa/Monrovia\": string; \"Africa/Nairobi\": string; \"Africa/Ndjamena\": string; \"Africa/Niamey\": string; \"Africa/Nouakchott\": string; \"Africa/Ouagadougou\": string; \"Africa/Porto-Novo\": string; \"Africa/Sao_Tome\": string; \"Africa/Tripoli\": string; \"Africa/Tunis\": string; \"Africa/Windhoek\": string; \"America/Adak\": string; \"America/Anchorage\": string; \"America/Anguilla\": string; \"America/Antigua\": string; \"America/Araguaina\": string; \"America/Argentina/La_Rioja\": string; \"America/Argentina/Rio_Gallegos\": string; \"America/Argentina/Salta\": string; \"America/Argentina/San_Juan\": string; \"America/Argentina/San_Luis\": string; \"America/Argentina/Tucuman\": string; \"America/Argentina/Ushuaia\": string; \"America/Aruba\": string; \"America/Asuncion\": string; \"America/Bahia\": string; \"America/Bahia_Banderas\": string; \"America/Barbados\": string; \"America/Belem\": string; \"America/Belize\": string; \"America/Blanc-Sablon\": string; \"America/Boa_Vista\": string; \"America/Bogota\": string; \"America/Boise\": string; \"America/Buenos_Aires\": string; \"America/Cambridge_Bay\": string; \"America/Campo_Grande\": string; \"America/Cancun\": string; \"America/Caracas\": string; \"America/Catamarca\": string; \"America/Cayenne\": string; \"America/Cayman\": string; \"America/Chicago\": string; \"America/Chihuahua\": string; \"America/Ciudad_Juarez\": string; \"America/Coral_Harbour\": string; \"America/Cordoba\": string; \"America/Costa_Rica\": string; \"America/Creston\": string; \"America/Cuiaba\": string; \"America/Curacao\": string; \"America/Danmarkshavn\": string; \"America/Dawson\": string; \"America/Dawson_Creek\": string; \"America/Denver\": string; \"America/Detroit\": string; \"America/Dominica\": string; \"America/Edmonton\": string; \"America/Eirunepe\": string; \"America/El_Salvador\": string; \"America/Fort_Nelson\": string; \"America/Fortaleza\": string; \"America/Glace_Bay\": string; \"America/Godthab\": string; \"America/Goose_Bay\": string; \"America/Grand_Turk\": string; \"America/Grenada\": string; \"America/Guadeloupe\": string; \"America/Guatemala\": string; \"America/Guayaquil\": string; \"America/Guyana\": string; \"America/Halifax\": string; \"America/Havana\": string; \"America/Hermosillo\": string; \"America/Indiana/Knox\": string; \"America/Indiana/Marengo\": string; \"America/Indiana/Petersburg\": string; \"America/Indiana/Tell_City\": string; \"America/Indiana/Vevay\": string; \"America/Indiana/Vincennes\": string; \"America/Indiana/Winamac\": string; \"America/Indianapolis\": string; \"America/Inuvik\": string; \"America/Iqaluit\": string; \"America/Jamaica\": string; \"America/Jujuy\": string; \"America/Juneau\": string; \"America/Kentucky/Monticello\": string; \"America/Kralendijk\": string; \"America/La_Paz\": string; \"America/Lima\": string; \"America/Los_Angeles\": string; \"America/Louisville\": string; \"America/Lower_Princes\": string; \"America/Maceio\": string; \"America/Managua\": string; \"America/Manaus\": string; \"America/Marigot\": string; \"America/Martinique\": string; \"America/Matamoros\": string; \"America/Mazatlan\": string; \"America/Mendoza\": string; \"America/Menominee\": string; \"America/Merida\": string; \"America/Metlakatla\": string; \"America/Mexico_City\": string; \"America/Miquelon\": string; \"America/Moncton\": string; \"America/Monterrey\": string; \"America/Montevideo\": string; \"America/Montreal\": string; \"America/Montserrat\": string; \"America/Nassau\": string; \"America/New_York\": string; \"America/Nipigon\": string; \"America/Nome\": string; \"America/Noronha\": string; \"America/North_Dakota/Beulah\": string; \"America/North_Dakota/Center\": string; \"America/North_Dakota/New_Salem\": string; \"America/Ojinaga\": string; \"America/Panama\": string; \"America/Pangnirtung\": string; \"America/Paramaribo\": string; \"America/Phoenix\": string; \"America/Port-au-Prince\": string; \"America/Port_of_Spain\": string; \"America/Porto_Velho\": string; \"America/Puerto_Rico\": string; \"America/Punta_Arenas\": string; \"America/Rainy_River\": string; \"America/Rankin_Inlet\": string; \"America/Recife\": string; \"America/Regina\": string; \"America/Resolute\": string; \"America/Rio_Branco\": string; \"America/Santa_Isabel\": string; \"America/Santarem\": string; \"America/Santiago\": string; \"America/Santo_Domingo\": string; \"America/Sao_Paulo\": string; \"America/Scoresbysund\": string; \"America/Sitka\": string; \"America/St_Barthelemy\": string; \"America/St_Johns\": string; \"America/St_Kitts\": string; \"America/St_Lucia\": string; \"America/St_Thomas\": string; \"America/St_Vincent\": string; \"America/Swift_Current\": string; \"America/Tegucigalpa\": string; \"America/Thule\": string; \"America/Thunder_Bay\": string; \"America/Tijuana\": string; \"America/Toronto\": string; \"America/Tortola\": string; \"America/Vancouver\": string; \"America/Whitehorse\": string; \"America/Winnipeg\": string; \"America/Yakutat\": string; \"America/Yellowknife\": string; \"Antarctica/Casey\": string; \"Antarctica/Davis\": string; \"Antarctica/DumontDUrville\": string; \"Antarctica/Macquarie\": string; \"Antarctica/Mawson\": string; \"Antarctica/McMurdo\": string; \"Antarctica/Palmer\": string; \"Antarctica/Rothera\": string; \"Antarctica/Syowa\": string; \"Antarctica/Troll\": string; \"Antarctica/Vostok\": string; \"Arctic/Longyearbyen\": string; \"Asia/Aden\": string; \"Asia/Almaty\": string; \"Asia/Amman\": string; \"Asia/Anadyr\": string; \"Asia/Aqtau\": string; \"Asia/Aqtobe\": string; \"Asia/Ashgabat\": string; \"Asia/Atyrau\": string; \"Asia/Baghdad\": string; \"Asia/Bahrain\": string; \"Asia/Baku\": string; \"Asia/Bangkok\": string; \"Asia/Barnaul\": string; \"Asia/Beirut\": string; \"Asia/Bishkek\": string; \"Asia/Brunei\": string; \"Asia/Calcutta\": string; \"Asia/Chita\": string; \"Asia/Choibalsan\": string; \"Asia/Colombo\": string; \"Asia/Damascus\": string; \"Asia/Dhaka\": string; \"Asia/Dili\": string; \"Asia/Dubai\": string; \"Asia/Dushanbe\": string; \"Asia/Famagusta\": string; \"Asia/Gaza\": string; \"Asia/Hebron\": string; \"Asia/Hong_Kong\": string; \"Asia/Hovd\": string; \"Asia/Irkutsk\": string; \"Asia/Jakarta\": string; \"Asia/Jayapura\": string; \"Asia/Jerusalem\": string; \"Asia/Kabul\": string; \"Asia/Kamchatka\": string; \"Asia/Karachi\": string; \"Asia/Katmandu\": string; \"Asia/Khandyga\": string; \"Asia/Krasnoyarsk\": string; \"Asia/Kuala_Lumpur\": string; \"Asia/Kuching\": string; \"Asia/Kuwait\": string; \"Asia/Macau\": string; \"Asia/Magadan\": string; \"Asia/Makassar\": string; \"Asia/Manila\": string; \"Asia/Muscat\": string; \"Asia/Nicosia\": string; \"Asia/Novokuznetsk\": string; \"Asia/Novosibirsk\": string; \"Asia/Omsk\": string; \"Asia/Oral\": string; \"Asia/Phnom_Penh\": string; \"Asia/Pontianak\": string; \"Asia/Pyongyang\": string; \"Asia/Qatar\": string; \"Asia/Qostanay\": string; \"Asia/Qyzylorda\": string; \"Asia/Rangoon\": string; \"Asia/Riyadh\": string; \"Asia/Saigon\": string; \"Asia/Sakhalin\": string; \"Asia/Samarkand\": string; \"Asia/Seoul\": string; \"Asia/Shanghai\": string; \"Asia/Singapore\": string; \"Asia/Srednekolymsk\": string; \"Asia/Taipei\": string; \"Asia/Tashkent\": string; \"Asia/Tbilisi\": string; \"Asia/Tehran\": string; \"Asia/Thimphu\": string; \"Asia/Tokyo\": string; \"Asia/Tomsk\": string; \"Asia/Ulaanbaatar\": string; \"Asia/Urumqi\": string; \"Asia/Ust-Nera\": string; \"Asia/Vientiane\": string; \"Asia/Vladivostok\": string; \"Asia/Yakutsk\": string; \"Asia/Yekaterinburg\": string; \"Asia/Yerevan\": string; \"Atlantic/Azores\": string; \"Atlantic/Bermuda\": string; \"Atlantic/Canary\": string; \"Atlantic/Cape_Verde\": string; \"Atlantic/Faeroe\": string; \"Atlantic/Madeira\": string; \"Atlantic/Reykjavik\": string; \"Atlantic/South_Georgia\": string; \"Atlantic/St_Helena\": string; \"Atlantic/Stanley\": string; \"Australia/Adelaide\": string; \"Australia/Brisbane\": string; \"Australia/Broken_Hill\": string; \"Australia/Currie\": string; \"Australia/Darwin\": string; \"Australia/Eucla\": string; \"Australia/Hobart\": string; \"Australia/Lindeman\": string; \"Australia/Lord_Howe\": string; \"Australia/Melbourne\": string; \"Australia/Perth\": string; \"Australia/Sydney\": string; \"Europe/Amsterdam\": string; \"Europe/Andorra\": string; \"Europe/Astrakhan\": string; \"Europe/Athens\": string; \"Europe/Belgrade\": string; \"Europe/Berlin\": string; \"Europe/Bratislava\": string; \"Europe/Brussels\": string; \"Europe/Bucharest\": string; \"Europe/Budapest\": string; \"Europe/Busingen\": string; \"Europe/Chisinau\": string; \"Europe/Copenhagen\": string; \"Europe/Dublin\": string; \"Europe/Gibraltar\": string; \"Europe/Guernsey\": string; \"Europe/Helsinki\": string; \"Europe/Isle_of_Man\": string; \"Europe/Istanbul\": string; \"Europe/Jersey\": string; \"Europe/Kaliningrad\": string; \"Europe/Kiev\": string; \"Europe/Kirov\": string; \"Europe/Lisbon\": string; \"Europe/Ljubljana\": string; \"Europe/London\": string; \"Europe/Luxembourg\": string; \"Europe/Madrid\": string; \"Europe/Malta\": string; \"Europe/Mariehamn\": string; \"Europe/Minsk\": string; \"Europe/Monaco\": string; \"Europe/Moscow\": string; \"Europe/Oslo\": string; \"Europe/Paris\": string; \"Europe/Podgorica\": string; \"Europe/Prague\": string; \"Europe/Riga\": string; \"Europe/Rome\": string; \"Europe/Samara\": string; \"Europe/San_Marino\": string; \"Europe/Sarajevo\": string; \"Europe/Saratov\": string; \"Europe/Simferopol\": string; \"Europe/Skopje\": string; \"Europe/Sofia\": string; \"Europe/Stockholm\": string; \"Europe/Tallinn\": string; \"Europe/Tirane\": string; \"Europe/Ulyanovsk\": string; \"Europe/Uzhgorod\": string; \"Europe/Vaduz\": string; \"Europe/Vatican\": string; \"Europe/Vienna\": string; \"Europe/Vilnius\": string; \"Europe/Volgograd\": string; \"Europe/Warsaw\": string; \"Europe/Zagreb\": string; \"Europe/Zaporozhye\": string; \"Europe/Zurich\": string; \"Indian/Antananarivo\": string; \"Indian/Chagos\": string; \"Indian/Christmas\": string; \"Indian/Cocos\": string; \"Indian/Comoro\": string; \"Indian/Kerguelen\": string; \"Indian/Mahe\": string; \"Indian/Maldives\": string; \"Indian/Mauritius\": string; \"Indian/Mayotte\": string; \"Indian/Reunion\": string; \"Pacific/Apia\": string; \"Pacific/Auckland\": string; \"Pacific/Bougainville\": string; \"Pacific/Chatham\": string; \"Pacific/Easter\": string; \"Pacific/Efate\": string; \"Pacific/Enderbury\": string; \"Pacific/Fakaofo\": string; \"Pacific/Fiji\": string; \"Pacific/Funafuti\": string; \"Pacific/Galapagos\": string; \"Pacific/Gambier\": string; \"Pacific/Guadalcanal\": string; \"Pacific/Guam\": string; \"Pacific/Honolulu\": string; \"Pacific/Johnston\": string; \"Pacific/Kiritimati\": string; \"Pacific/Kosrae\": string; \"Pacific/Kwajalein\": string; \"Pacific/Majuro\": string; \"Pacific/Marquesas\": string; \"Pacific/Midway\": string; \"Pacific/Nauru\": string; \"Pacific/Niue\": string; \"Pacific/Norfolk\": string; \"Pacific/Noumea\": string; \"Pacific/Pago_Pago\": string; \"Pacific/Palau\": string; \"Pacific/Pitcairn\": string; \"Pacific/Ponape\": string; \"Pacific/Port_Moresby\": string; \"Pacific/Rarotonga\": string; \"Pacific/Saipan\": string; \"Pacific/Tahiti\": string; \"Pacific/Tarawa\": string; \"Pacific/Tongatapu\": string; \"Pacific/Truk\": string; \"Pacific/Wake\": string; \"Pacific/Wallis\": string; }",
                    "references": {
                        "InputTimeZoneMessages": {
                            "location": "import",
                            "path": "./assets/input-time-zone/t9n",
                            "id": "src/components/input-time-zone/assets/input-time-zone/t9n/index.d.ts::InputTimeZoneMessages"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "internal",
                            "text": undefined
                        }],
                    "text": "Made into a prop for testing purposes only"
                }
            },
            "messageOverrides": {
                "type": "unknown",
                "mutable": true,
                "complexType": {
                    "original": "Partial<InputTimeZoneMessages>",
                    "resolved": "{ chooseTimeZone?: string; timeZoneLabel?: string; \"Africa/Abidjan\"?: string; \"Africa/Accra\"?: string; \"Africa/Addis_Ababa\"?: string; \"Africa/Algiers\"?: string; \"Africa/Asmera\"?: string; \"Africa/Bamako\"?: string; \"Africa/Bangui\"?: string; \"Africa/Banjul\"?: string; \"Africa/Bissau\"?: string; \"Africa/Blantyre\"?: string; \"Africa/Brazzaville\"?: string; \"Africa/Bujumbura\"?: string; \"Africa/Cairo\"?: string; \"Africa/Casablanca\"?: string; \"Africa/Ceuta\"?: string; \"Africa/Conakry\"?: string; \"Africa/Dakar\"?: string; \"Africa/Dar_es_Salaam\"?: string; \"Africa/Djibouti\"?: string; \"Africa/Douala\"?: string; \"Africa/El_Aaiun\"?: string; \"Africa/Freetown\"?: string; \"Africa/Gaborone\"?: string; \"Africa/Harare\"?: string; \"Africa/Johannesburg\"?: string; \"Africa/Juba\"?: string; \"Africa/Kampala\"?: string; \"Africa/Khartoum\"?: string; \"Africa/Kigali\"?: string; \"Africa/Kinshasa\"?: string; \"Africa/Lagos\"?: string; \"Africa/Libreville\"?: string; \"Africa/Lome\"?: string; \"Africa/Luanda\"?: string; \"Africa/Lubumbashi\"?: string; \"Africa/Lusaka\"?: string; \"Africa/Malabo\"?: string; \"Africa/Maputo\"?: string; \"Africa/Maseru\"?: string; \"Africa/Mbabane\"?: string; \"Africa/Mogadishu\"?: string; \"Africa/Monrovia\"?: string; \"Africa/Nairobi\"?: string; \"Africa/Ndjamena\"?: string; \"Africa/Niamey\"?: string; \"Africa/Nouakchott\"?: string; \"Africa/Ouagadougou\"?: string; \"Africa/Porto-Novo\"?: string; \"Africa/Sao_Tome\"?: string; \"Africa/Tripoli\"?: string; \"Africa/Tunis\"?: string; \"Africa/Windhoek\"?: string; \"America/Adak\"?: string; \"America/Anchorage\"?: string; \"America/Anguilla\"?: string; \"America/Antigua\"?: string; \"America/Araguaina\"?: string; \"America/Argentina/La_Rioja\"?: string; \"America/Argentina/Rio_Gallegos\"?: string; \"America/Argentina/Salta\"?: string; \"America/Argentina/San_Juan\"?: string; \"America/Argentina/San_Luis\"?: string; \"America/Argentina/Tucuman\"?: string; \"America/Argentina/Ushuaia\"?: string; \"America/Aruba\"?: string; \"America/Asuncion\"?: string; \"America/Bahia\"?: string; \"America/Bahia_Banderas\"?: string; \"America/Barbados\"?: string; \"America/Belem\"?: string; \"America/Belize\"?: string; \"America/Blanc-Sablon\"?: string; \"America/Boa_Vista\"?: string; \"America/Bogota\"?: string; \"America/Boise\"?: string; \"America/Buenos_Aires\"?: string; \"America/Cambridge_Bay\"?: string; \"America/Campo_Grande\"?: string; \"America/Cancun\"?: string; \"America/Caracas\"?: string; \"America/Catamarca\"?: string; \"America/Cayenne\"?: string; \"America/Cayman\"?: string; \"America/Chicago\"?: string; \"America/Chihuahua\"?: string; \"America/Ciudad_Juarez\"?: string; \"America/Coral_Harbour\"?: string; \"America/Cordoba\"?: string; \"America/Costa_Rica\"?: string; \"America/Creston\"?: string; \"America/Cuiaba\"?: string; \"America/Curacao\"?: string; \"America/Danmarkshavn\"?: string; \"America/Dawson\"?: string; \"America/Dawson_Creek\"?: string; \"America/Denver\"?: string; \"America/Detroit\"?: string; \"America/Dominica\"?: string; \"America/Edmonton\"?: string; \"America/Eirunepe\"?: string; \"America/El_Salvador\"?: string; \"America/Fort_Nelson\"?: string; \"America/Fortaleza\"?: string; \"America/Glace_Bay\"?: string; \"America/Godthab\"?: string; \"America/Goose_Bay\"?: string; \"America/Grand_Turk\"?: string; \"America/Grenada\"?: string; \"America/Guadeloupe\"?: string; \"America/Guatemala\"?: string; \"America/Guayaquil\"?: string; \"America/Guyana\"?: string; \"America/Halifax\"?: string; \"America/Havana\"?: string; \"America/Hermosillo\"?: string; \"America/Indiana/Knox\"?: string; \"America/Indiana/Marengo\"?: string; \"America/Indiana/Petersburg\"?: string; \"America/Indiana/Tell_City\"?: string; \"America/Indiana/Vevay\"?: string; \"America/Indiana/Vincennes\"?: string; \"America/Indiana/Winamac\"?: string; \"America/Indianapolis\"?: string; \"America/Inuvik\"?: string; \"America/Iqaluit\"?: string; \"America/Jamaica\"?: string; \"America/Jujuy\"?: string; \"America/Juneau\"?: string; \"America/Kentucky/Monticello\"?: string; \"America/Kralendijk\"?: string; \"America/La_Paz\"?: string; \"America/Lima\"?: string; \"America/Los_Angeles\"?: string; \"America/Louisville\"?: string; \"America/Lower_Princes\"?: string; \"America/Maceio\"?: string; \"America/Managua\"?: string; \"America/Manaus\"?: string; \"America/Marigot\"?: string; \"America/Martinique\"?: string; \"America/Matamoros\"?: string; \"America/Mazatlan\"?: string; \"America/Mendoza\"?: string; \"America/Menominee\"?: string; \"America/Merida\"?: string; \"America/Metlakatla\"?: string; \"America/Mexico_City\"?: string; \"America/Miquelon\"?: string; \"America/Moncton\"?: string; \"America/Monterrey\"?: string; \"America/Montevideo\"?: string; \"America/Montreal\"?: string; \"America/Montserrat\"?: string; \"America/Nassau\"?: string; \"America/New_York\"?: string; \"America/Nipigon\"?: string; \"America/Nome\"?: string; \"America/Noronha\"?: string; \"America/North_Dakota/Beulah\"?: string; \"America/North_Dakota/Center\"?: string; \"America/North_Dakota/New_Salem\"?: string; \"America/Ojinaga\"?: string; \"America/Panama\"?: string; \"America/Pangnirtung\"?: string; \"America/Paramaribo\"?: string; \"America/Phoenix\"?: string; \"America/Port-au-Prince\"?: string; \"America/Port_of_Spain\"?: string; \"America/Porto_Velho\"?: string; \"America/Puerto_Rico\"?: string; \"America/Punta_Arenas\"?: string; \"America/Rainy_River\"?: string; \"America/Rankin_Inlet\"?: string; \"America/Recife\"?: string; \"America/Regina\"?: string; \"America/Resolute\"?: string; \"America/Rio_Branco\"?: string; \"America/Santa_Isabel\"?: string; \"America/Santarem\"?: string; \"America/Santiago\"?: string; \"America/Santo_Domingo\"?: string; \"America/Sao_Paulo\"?: string; \"America/Scoresbysund\"?: string; \"America/Sitka\"?: string; \"America/St_Barthelemy\"?: string; \"America/St_Johns\"?: string; \"America/St_Kitts\"?: string; \"America/St_Lucia\"?: string; \"America/St_Thomas\"?: string; \"America/St_Vincent\"?: string; \"America/Swift_Current\"?: string; \"America/Tegucigalpa\"?: string; \"America/Thule\"?: string; \"America/Thunder_Bay\"?: string; \"America/Tijuana\"?: string; \"America/Toronto\"?: string; \"America/Tortola\"?: string; \"America/Vancouver\"?: string; \"America/Whitehorse\"?: string; \"America/Winnipeg\"?: string; \"America/Yakutat\"?: string; \"America/Yellowknife\"?: string; \"Antarctica/Casey\"?: string; \"Antarctica/Davis\"?: string; \"Antarctica/DumontDUrville\"?: string; \"Antarctica/Macquarie\"?: string; \"Antarctica/Mawson\"?: string; \"Antarctica/McMurdo\"?: string; \"Antarctica/Palmer\"?: string; \"Antarctica/Rothera\"?: string; \"Antarctica/Syowa\"?: string; \"Antarctica/Troll\"?: string; \"Antarctica/Vostok\"?: string; \"Arctic/Longyearbyen\"?: string; \"Asia/Aden\"?: string; \"Asia/Almaty\"?: string; \"Asia/Amman\"?: string; \"Asia/Anadyr\"?: string; \"Asia/Aqtau\"?: string; \"Asia/Aqtobe\"?: string; \"Asia/Ashgabat\"?: string; \"Asia/Atyrau\"?: string; \"Asia/Baghdad\"?: string; \"Asia/Bahrain\"?: string; \"Asia/Baku\"?: string; \"Asia/Bangkok\"?: string; \"Asia/Barnaul\"?: string; \"Asia/Beirut\"?: string; \"Asia/Bishkek\"?: string; \"Asia/Brunei\"?: string; \"Asia/Calcutta\"?: string; \"Asia/Chita\"?: string; \"Asia/Choibalsan\"?: string; \"Asia/Colombo\"?: string; \"Asia/Damascus\"?: string; \"Asia/Dhaka\"?: string; \"Asia/Dili\"?: string; \"Asia/Dubai\"?: string; \"Asia/Dushanbe\"?: string; \"Asia/Famagusta\"?: string; \"Asia/Gaza\"?: string; \"Asia/Hebron\"?: string; \"Asia/Hong_Kong\"?: string; \"Asia/Hovd\"?: string; \"Asia/Irkutsk\"?: string; \"Asia/Jakarta\"?: string; \"Asia/Jayapura\"?: string; \"Asia/Jerusalem\"?: string; \"Asia/Kabul\"?: string; \"Asia/Kamchatka\"?: string; \"Asia/Karachi\"?: string; \"Asia/Katmandu\"?: string; \"Asia/Khandyga\"?: string; \"Asia/Krasnoyarsk\"?: string; \"Asia/Kuala_Lumpur\"?: string; \"Asia/Kuching\"?: string; \"Asia/Kuwait\"?: string; \"Asia/Macau\"?: string; \"Asia/Magadan\"?: string; \"Asia/Makassar\"?: string; \"Asia/Manila\"?: string; \"Asia/Muscat\"?: string; \"Asia/Nicosia\"?: string; \"Asia/Novokuznetsk\"?: string; \"Asia/Novosibirsk\"?: string; \"Asia/Omsk\"?: string; \"Asia/Oral\"?: string; \"Asia/Phnom_Penh\"?: string; \"Asia/Pontianak\"?: string; \"Asia/Pyongyang\"?: string; \"Asia/Qatar\"?: string; \"Asia/Qostanay\"?: string; \"Asia/Qyzylorda\"?: string; \"Asia/Rangoon\"?: string; \"Asia/Riyadh\"?: string; \"Asia/Saigon\"?: string; \"Asia/Sakhalin\"?: string; \"Asia/Samarkand\"?: string; \"Asia/Seoul\"?: string; \"Asia/Shanghai\"?: string; \"Asia/Singapore\"?: string; \"Asia/Srednekolymsk\"?: string; \"Asia/Taipei\"?: string; \"Asia/Tashkent\"?: string; \"Asia/Tbilisi\"?: string; \"Asia/Tehran\"?: string; \"Asia/Thimphu\"?: string; \"Asia/Tokyo\"?: string; \"Asia/Tomsk\"?: string; \"Asia/Ulaanbaatar\"?: string; \"Asia/Urumqi\"?: string; \"Asia/Ust-Nera\"?: string; \"Asia/Vientiane\"?: string; \"Asia/Vladivostok\"?: string; \"Asia/Yakutsk\"?: string; \"Asia/Yekaterinburg\"?: string; \"Asia/Yerevan\"?: string; \"Atlantic/Azores\"?: string; \"Atlantic/Bermuda\"?: string; \"Atlantic/Canary\"?: string; \"Atlantic/Cape_Verde\"?: string; \"Atlantic/Faeroe\"?: string; \"Atlantic/Madeira\"?: string; \"Atlantic/Reykjavik\"?: string; \"Atlantic/South_Georgia\"?: string; \"Atlantic/St_Helena\"?: string; \"Atlantic/Stanley\"?: string; \"Australia/Adelaide\"?: string; \"Australia/Brisbane\"?: string; \"Australia/Broken_Hill\"?: string; \"Australia/Currie\"?: string; \"Australia/Darwin\"?: string; \"Australia/Eucla\"?: string; \"Australia/Hobart\"?: string; \"Australia/Lindeman\"?: string; \"Australia/Lord_Howe\"?: string; \"Australia/Melbourne\"?: string; \"Australia/Perth\"?: string; \"Australia/Sydney\"?: string; \"Europe/Amsterdam\"?: string; \"Europe/Andorra\"?: string; \"Europe/Astrakhan\"?: string; \"Europe/Athens\"?: string; \"Europe/Belgrade\"?: string; \"Europe/Berlin\"?: string; \"Europe/Bratislava\"?: string; \"Europe/Brussels\"?: string; \"Europe/Bucharest\"?: string; \"Europe/Budapest\"?: string; \"Europe/Busingen\"?: string; \"Europe/Chisinau\"?: string; \"Europe/Copenhagen\"?: string; \"Europe/Dublin\"?: string; \"Europe/Gibraltar\"?: string; \"Europe/Guernsey\"?: string; \"Europe/Helsinki\"?: string; \"Europe/Isle_of_Man\"?: string; \"Europe/Istanbul\"?: string; \"Europe/Jersey\"?: string; \"Europe/Kaliningrad\"?: string; \"Europe/Kiev\"?: string; \"Europe/Kirov\"?: string; \"Europe/Lisbon\"?: string; \"Europe/Ljubljana\"?: string; \"Europe/London\"?: string; \"Europe/Luxembourg\"?: string; \"Europe/Madrid\"?: string; \"Europe/Malta\"?: string; \"Europe/Mariehamn\"?: string; \"Europe/Minsk\"?: string; \"Europe/Monaco\"?: string; \"Europe/Moscow\"?: string; \"Europe/Oslo\"?: string; \"Europe/Paris\"?: string; \"Europe/Podgorica\"?: string; \"Europe/Prague\"?: string; \"Europe/Riga\"?: string; \"Europe/Rome\"?: string; \"Europe/Samara\"?: string; \"Europe/San_Marino\"?: string; \"Europe/Sarajevo\"?: string; \"Europe/Saratov\"?: string; \"Europe/Simferopol\"?: string; \"Europe/Skopje\"?: string; \"Europe/Sofia\"?: string; \"Europe/Stockholm\"?: string; \"Europe/Tallinn\"?: string; \"Europe/Tirane\"?: string; \"Europe/Ulyanovsk\"?: string; \"Europe/Uzhgorod\"?: string; \"Europe/Vaduz\"?: string; \"Europe/Vatican\"?: string; \"Europe/Vienna\"?: string; \"Europe/Vilnius\"?: string; \"Europe/Volgograd\"?: string; \"Europe/Warsaw\"?: string; \"Europe/Zagreb\"?: string; \"Europe/Zaporozhye\"?: string; \"Europe/Zurich\"?: string; \"Indian/Antananarivo\"?: string; \"Indian/Chagos\"?: string; \"Indian/Christmas\"?: string; \"Indian/Cocos\"?: string; \"Indian/Comoro\"?: string; \"Indian/Kerguelen\"?: string; \"Indian/Mahe\"?: string; \"Indian/Maldives\"?: string; \"Indian/Mauritius\"?: string; \"Indian/Mayotte\"?: string; \"Indian/Reunion\"?: string; \"Pacific/Apia\"?: string; \"Pacific/Auckland\"?: string; \"Pacific/Bougainville\"?: string; \"Pacific/Chatham\"?: string; \"Pacific/Easter\"?: string; \"Pacific/Efate\"?: string; \"Pacific/Enderbury\"?: string; \"Pacific/Fakaofo\"?: string; \"Pacific/Fiji\"?: string; \"Pacific/Funafuti\"?: string; \"Pacific/Galapagos\"?: string; \"Pacific/Gambier\"?: string; \"Pacific/Guadalcanal\"?: string; \"Pacific/Guam\"?: string; \"Pacific/Honolulu\"?: string; \"Pacific/Johnston\"?: string; \"Pacific/Kiritimati\"?: string; \"Pacific/Kosrae\"?: string; \"Pacific/Kwajalein\"?: string; \"Pacific/Majuro\"?: string; \"Pacific/Marquesas\"?: string; \"Pacific/Midway\"?: string; \"Pacific/Nauru\"?: string; \"Pacific/Niue\"?: string; \"Pacific/Norfolk\"?: string; \"Pacific/Noumea\"?: string; \"Pacific/Pago_Pago\"?: string; \"Pacific/Palau\"?: string; \"Pacific/Pitcairn\"?: string; \"Pacific/Ponape\"?: string; \"Pacific/Port_Moresby\"?: string; \"Pacific/Rarotonga\"?: string; \"Pacific/Saipan\"?: string; \"Pacific/Tahiti\"?: string; \"Pacific/Tarawa\"?: string; \"Pacific/Tongatapu\"?: string; \"Pacific/Truk\"?: string; \"Pacific/Wake\"?: string; \"Pacific/Wallis\"?: string; }",
                    "references": {
                        "Partial": {
                            "location": "global",
                            "id": "global::Partial"
                        },
                        "InputTimeZoneMessages": {
                            "location": "import",
                            "path": "./assets/input-time-zone/t9n",
                            "id": "src/components/input-time-zone/assets/input-time-zone/t9n/index.d.ts::InputTimeZoneMessages"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Use this property to override individual strings used by the component."
                }
            },
            "mode": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "TimeZoneMode",
                    "resolved": "\"name\" | \"offset\"",
                    "references": {
                        "TimeZoneMode": {
                            "location": "import",
                            "path": "./interfaces",
                            "id": "src/components/input-time-zone/interfaces.d.ts::TimeZoneMode"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "default",
                            "text": "\"offset\""
                        }],
                    "text": "This specifies the type of `value` and the associated options presented to the user:\n\nUsing `\"offset\"` will provide options that show timezone offsets.\n\nUsing `\"name\"` will provide options that show the IANA time zone names."
                },
                "attribute": "mode",
                "reflect": true,
                "defaultValue": "\"offset\""
            },
            "validationMessage": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the validation message to display under the component."
                },
                "attribute": "validation-message",
                "reflect": false
            },
            "validationIcon": {
                "type": "any",
                "mutable": false,
                "complexType": {
                    "original": "string | boolean",
                    "resolved": "boolean | string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the validation icon to display under the component."
                },
                "attribute": "validation-icon",
                "reflect": true
            },
            "name": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the name of the component.\n\nRequired to pass the component's `value` on form submission."
                },
                "attribute": "name",
                "reflect": true
            },
            "open": {
                "type": "boolean",
                "mutable": true,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "When `true`, displays and positions the component."
                },
                "attribute": "open",
                "reflect": true,
                "defaultValue": "false"
            },
            "overlayPositioning": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "OverlayPositioning",
                    "resolved": "\"absolute\" | \"fixed\"",
                    "references": {
                        "OverlayPositioning": {
                            "location": "import",
                            "path": "../../utils/floating-ui",
                            "id": "src/utils/floating-ui.ts::OverlayPositioning"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Determines the type of positioning to use for the overlaid content.\n\nUsing `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n\n`\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`."
                },
                "attribute": "overlay-positioning",
                "reflect": true,
                "defaultValue": "\"absolute\""
            },
            "referenceDate": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "Date | string",
                    "resolved": "Date | string",
                    "references": {
                        "Date": {
                            "location": "global",
                            "id": "global::Date"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "see",
                            "text": "[Date.prototype.toISOString](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)"
                        }],
                    "text": "This `date` will be used as a reference to Daylight Savings Time when creating time zone item groups.\n\nIt can be either a Date instance or a string in ISO format (`\"YYYY-MM-DD\"`, `\"YYYY-MM-DDTHH:MM:SS.SSSZ\"`)."
                },
                "attribute": "reference-date",
                "reflect": false
            },
            "required": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "internal",
                            "text": undefined
                        }],
                    "text": "When `true`, the component must have a value in order for the form to submit."
                },
                "attribute": "required",
                "reflect": true,
                "defaultValue": "false"
            },
            "scale": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "Scale",
                    "resolved": "\"l\" | \"m\" | \"s\"",
                    "references": {
                        "Scale": {
                            "location": "import",
                            "path": "../interfaces",
                            "id": "src/components/interfaces.ts::Scale"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the size of the component."
                },
                "attribute": "scale",
                "reflect": true,
                "defaultValue": "\"m\""
            },
            "status": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "Status",
                    "resolved": "\"idle\" | \"invalid\" | \"valid\"",
                    "references": {
                        "Status": {
                            "location": "import",
                            "path": "../interfaces",
                            "id": "src/components/interfaces.ts::Status"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the status of the input field, which determines message and icons."
                },
                "attribute": "status",
                "reflect": true,
                "defaultValue": "\"idle\""
            },
            "value": {
                "type": "string",
                "mutable": true,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "see",
                            "text": "https://www.w3.org/International/core/2005/09/timezone.html#:~:text=What%20is%20a%20%22zone%20offset,or%20%22%2D%22%20from%20UTC."
                        }],
                    "text": "The component's value, where the value is the time zone offset or the difference, in minutes, between the selected time zone and UTC.\n\nIf no value is provided, the user's time zone offset will be selected by default."
                },
                "attribute": "value",
                "reflect": false
            }
        };
    }
    static get states() {
        return {
            "defaultMessages": {},
            "effectiveLocale": {}
        };
    }
    static get events() {
        return [{
                "method": "calciteInputTimeZoneBeforeClose",
                "name": "calciteInputTimeZoneBeforeClose",
                "bubbles": true,
                "cancelable": false,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Fires when the component is requested to be closed and before the closing transition begins."
                },
                "complexType": {
                    "original": "void",
                    "resolved": "void",
                    "references": {}
                }
            }, {
                "method": "calciteInputTimeZoneBeforeOpen",
                "name": "calciteInputTimeZoneBeforeOpen",
                "bubbles": true,
                "cancelable": false,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Fires when the component is added to the DOM but not rendered, and before the opening transition begins."
                },
                "complexType": {
                    "original": "void",
                    "resolved": "void",
                    "references": {}
                }
            }, {
                "method": "calciteInputTimeZoneChange",
                "name": "calciteInputTimeZoneChange",
                "bubbles": true,
                "cancelable": false,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Fires when the component's `value` changes."
                },
                "complexType": {
                    "original": "void",
                    "resolved": "void",
                    "references": {}
                }
            }, {
                "method": "calciteInputTimeZoneClose",
                "name": "calciteInputTimeZoneClose",
                "bubbles": true,
                "cancelable": false,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Fires after the component is closed and animation is complete."
                },
                "complexType": {
                    "original": "void",
                    "resolved": "void",
                    "references": {}
                }
            }, {
                "method": "calciteInputTimeZoneOpen",
                "name": "calciteInputTimeZoneOpen",
                "bubbles": true,
                "cancelable": false,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Fires after the component is opened and animation is complete."
                },
                "complexType": {
                    "original": "void",
                    "resolved": "void",
                    "references": {}
                }
            }];
    }
    static get methods() {
        return {
            "setFocus": {
                "complexType": {
                    "signature": "() => Promise<void>",
                    "parameters": [],
                    "references": {
                        "Promise": {
                            "location": "global",
                            "id": "global::Promise"
                        }
                    },
                    "return": "Promise<void>"
                },
                "docs": {
                    "text": "",
                    "tags": []
                }
            }
        };
    }
    static get elementRef() { return "el"; }
    static get watchers() {
        return [{
                "propName": "messageOverrides",
                "methodName": "onMessagesChange"
            }, {
                "propName": "messages",
                "methodName": "handleTimeZoneItemPropsChange"
            }, {
                "propName": "mode",
                "methodName": "handleTimeZoneItemPropsChange"
            }, {
                "propName": "referenceDate",
                "methodName": "handleTimeZoneItemPropsChange"
            }, {
                "propName": "value",
                "methodName": "handleValueChange"
            }, {
                "propName": "effectiveLocale",
                "methodName": "effectiveLocaleWatcher"
            }];
    }
}
//# sourceMappingURL=input-time-zone.js.map
