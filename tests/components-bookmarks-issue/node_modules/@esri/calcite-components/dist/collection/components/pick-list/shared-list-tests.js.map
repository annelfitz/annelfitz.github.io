{"version":3,"file":"shared-list-tests.js","sourceRoot":"","sources":["../../../../src/components/pick-list/shared-list-tests.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EElement, E2EPage, newE2EPage } from \"@stencil/core/testing\";\nimport { html } from \"../../../support/formatting\";\nimport { disabled, focusable } from \"../../tests/commonTests\";\nimport { selectText } from \"../../tests/utils\";\nimport { CSS as PICK_LIST_ITEM_CSS } from \"../pick-list-item/resources\";\n\ntype ListType = \"pick\" | \"value\";\ntype ListElement = HTMLCalcitePickListElement | HTMLCalciteValueListElement;\n\nexport function keyboardNavigation(listType: ListType): void {\n  const getFocusedItemValue = (page: E2EPage): ReturnType<E2EPage[\"evaluate\"]> =>\n    page.evaluate(\n      () => (document.activeElement as HTMLCalcitePickListItemElement | HTMLCalciteValueListItemElement)?.value ?? null,\n    );\n\n  async function getSelectedItemValues(list: E2EElement, listType: string): Promise<string[]> {\n    return Promise.all(\n      (await list.findAll(`calcite-${listType}-list-item[selected]`)).map((el) => el.getProperty(\"value\")),\n    );\n  }\n\n  describe(\"multi selection\", () => {\n    it(\"keyboard interaction\", async () => {\n      const page = await newE2EPage({\n        html: `\n        <calcite-${listType}-list multiple>\n          <calcite-${listType}-list-item disabled value=\"zero\" label=\"Zero (disabled)\"></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"one\" label=\"One\"></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"two\" label=\"Two\"></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item disabled value=\"three\" label=\"Three (disabled)\"></calcite-${listType}-list-item>\n        </calcite-${listType}-list>\n      `,\n      });\n      const list = await page.find(`calcite-${listType}-list`);\n      await list.callMethod(\"setFocus\");\n      await page.waitForChanges();\n\n      expect(await getFocusedItemValue(page)).toEqual(\"one\");\n      expect(await getSelectedItemValues(list, listType)).toEqual([]);\n\n      await list.press(\"ArrowDown\");\n      await page.waitForChanges();\n\n      expect(await getFocusedItemValue(page)).toEqual(\"two\");\n\n      await list.press(\" \");\n      await page.waitForChanges();\n\n      expect(await getSelectedItemValues(list, listType)).toEqual([\"two\"]);\n\n      await list.press(\"ArrowDown\");\n      await page.waitForChanges();\n\n      expect(await getFocusedItemValue(page)).toEqual(\"one\");\n\n      await list.press(\" \");\n      await page.waitForChanges();\n      expect(await getSelectedItemValues(list, listType)).toEqual([\"one\", \"two\"]);\n\n      await list.press(\"ArrowUp\");\n      await page.waitForChanges();\n\n      expect(await getFocusedItemValue(page)).toEqual(\"two\");\n\n      await list.press(\" \");\n      await page.waitForChanges();\n      expect(await getSelectedItemValues(list, listType)).toEqual([\"one\"]);\n\n      await list.press(\"ArrowUp\");\n      await page.waitForChanges();\n\n      expect(await getFocusedItemValue(page)).toEqual(\"one\");\n\n      await list.press(\" \");\n      await page.waitForChanges();\n      expect(await getSelectedItemValues(list, listType)).toEqual([]);\n    });\n  });\n\n  describe(\"single selection\", () => {\n    describe(\"with selected item\", () => {\n      it(\"keyboard interaction\", async () => {\n        const page = await newE2EPage({\n          html: `\n        <calcite-${listType}-list>\n          <calcite-${listType}-list-item id=\"one\" value=\"one\" label=\"One\"></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item id=\"two\" value=\"two\" label=\"Two\"></calcite-${listType}-list-item>\n        </calcite-${listType}-list>\n      `,\n        });\n        const list = await page.find(`calcite-${listType}-list`);\n        const firstItem = await page.find(\"#one\");\n        const secondItem = await page.find(\"#two\");\n        await list.callMethod(\"setFocus\");\n        await page.waitForChanges();\n\n        expect(await getSelectedItemValues(list, listType)).toEqual([]);\n\n        expect(await getFocusedItemValue(page)).toEqual(\"one\");\n        expect(await getSelectedItemValues(list, listType)).toEqual([]);\n        expect(firstItem.tabIndex).toBe(-1);\n        expect(secondItem.tabIndex).toBe(-1);\n\n        await list.press(\"ArrowDown\");\n\n        expect(await getFocusedItemValue(page)).toEqual(\"two\");\n        expect(firstItem.tabIndex).toBe(-1);\n        expect(secondItem.tabIndex).toBe(-1);\n\n        await list.press(\" \");\n        expect(await getSelectedItemValues(list, listType)).toEqual([\"two\"]);\n\n        await list.press(\"ArrowDown\");\n\n        expect(await getFocusedItemValue(page)).toEqual(\"one\");\n        expect(firstItem.tabIndex).toBe(-1);\n        expect(firstItem.tabIndex).toBe(-1);\n\n        await list.press(\" \");\n        expect(await getSelectedItemValues(list, listType)).toEqual([\"one\"]);\n\n        await list.press(\"ArrowUp\");\n\n        expect(await getFocusedItemValue(page)).toEqual(\"two\");\n        expect(firstItem.tabIndex).toBe(-1);\n        expect(secondItem.tabIndex).toBe(-1);\n\n        await list.press(\" \");\n        expect(await getSelectedItemValues(list, listType)).toEqual([\"two\"]);\n\n        await list.press(\"ArrowUp\");\n\n        expect(await getFocusedItemValue(page)).toEqual(\"one\");\n\n        await list.press(\" \");\n        expect(await getSelectedItemValues(list, listType)).toEqual([\"one\"]);\n      });\n\n      it(\"keyboard interaction + selectionFollowsFocus\", async () => {\n        const page = await newE2EPage({\n          html: `\n        <calcite-${listType}-list selection-follows-focus>\n          <calcite-${listType}-list-item value=\"one\" label=\"One\"></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"two\" label=\"Two\"></calcite-${listType}-list-item>\n        </calcite-${listType}-list>\n      `,\n        });\n        const list = await page.find(`calcite-${listType}-list`);\n\n        expect(await getFocusedItemValue(page)).toBeNull();\n        expect(await getSelectedItemValues(list, listType)).toEqual([]);\n\n        await list.callMethod(\"setFocus\");\n        await page.waitForChanges();\n\n        expect(await getFocusedItemValue(page)).toEqual(\"one\");\n        expect(await getSelectedItemValues(list, listType)).toEqual([\"one\"]);\n\n        await list.press(\"ArrowDown\");\n\n        expect(await getFocusedItemValue(page)).toEqual(\"two\");\n        expect(await getSelectedItemValues(list, listType)).toEqual([\"two\"]);\n\n        await list.press(\"ArrowDown\");\n\n        expect(await getFocusedItemValue(page)).toEqual(\"one\");\n        expect(await getSelectedItemValues(list, listType)).toEqual([\"one\"]);\n\n        await list.press(\"ArrowUp\");\n\n        expect(await getFocusedItemValue(page)).toEqual(\"two\");\n        expect(await getSelectedItemValues(list, listType)).toEqual([\"two\"]);\n\n        await list.press(\"ArrowUp\");\n\n        expect(await getFocusedItemValue(page)).toEqual(\"one\");\n        expect(await getSelectedItemValues(list, listType)).toEqual([\"one\"]);\n      });\n    });\n\n    it.skip(\"should honor filterText\", async () => {\n      const page = await newE2EPage({\n        html: `\n        <calcite-${listType}-list filter-enabled filter-text=\"one\">\n          <calcite-${listType}-list-item value=\"one\" label=\"One\" selected></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"two\" label=\"Two\"></calcite-${listType}-list-item>\n        </calcite-${listType}-list>\n      `,\n      });\n      const list = await page.find(`calcite-${listType}-list`);\n      expect(await list.getProperty(\"filteredItems\")).toHaveLength(1);\n      expect(await list.getProperty(\"filteredData\")).toHaveLength(1);\n      expect(await list.getProperty(\"filterText\")).toBe(\"one\");\n    });\n\n    it.skip(\"navigating items after filtering\", async () => {\n      const page = await newE2EPage({\n        html: `\n        <calcite-${listType}-list filter-enabled>\n          <calcite-${listType}-list-item value=\"one\" label=\"One\" selected></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"two\" label=\"Two\"></calcite-${listType}-list-item>\n        </calcite-${listType}-list>\n      `,\n      });\n      const list = await page.find(`calcite-${listType}-list`);\n      expect(await list.getProperty(\"filteredItems\")).toHaveLength(2);\n      expect(await list.getProperty(\"filteredData\")).toHaveLength(2);\n      expect(await list.getProperty(\"filterText\")).toBe(undefined);\n      const filter = await page.find(`calcite-${listType}-list >>> calcite-filter`);\n      await filter.callMethod(\"setFocus\");\n      await page.waitForChanges();\n\n      const calciteFilterChangeEvent = filter.waitForEvent(\"calciteFilterChange\");\n      const calciteListFilterEvent = page.waitForEvent(\"calciteListFilter\");\n      await page.keyboard.type(\"one\");\n      await calciteFilterChangeEvent;\n      await calciteListFilterEvent;\n      expect(await list.getProperty(\"filteredItems\")).toHaveLength(1);\n      expect(await list.getProperty(\"filteredData\")).toHaveLength(1);\n      expect(await list.getProperty(\"filterText\")).toBe(\"one\");\n\n      await page.keyboard.press(\"Tab\");\n      expect(await getFocusedItemValue(page)).toEqual(\"one\");\n\n      await filter.callMethod(\"setFocus\");\n      await page.waitForChanges();\n\n      await page.keyboard.press(\"Backspace\");\n      await page.keyboard.press(\"Backspace\");\n      await page.keyboard.press(\"Backspace\");\n      await page.waitForChanges();\n\n      const calciteFilterChangeEvent2 = filter.waitForEvent(\"calciteFilterChange\");\n      const calciteListFilterEvent2 = page.waitForEvent(\"calciteListFilter\");\n      await page.keyboard.type(\"two\");\n      await calciteFilterChangeEvent2;\n      await calciteListFilterEvent2;\n      expect(await list.getProperty(\"filteredItems\")).toHaveLength(1);\n      expect(await list.getProperty(\"filteredData\")).toHaveLength(1);\n      expect(await list.getProperty(\"filterText\")).toBe(\"two\");\n\n      await page.keyboard.press(\"Tab\");\n      expect(await getFocusedItemValue(page)).toEqual(\"two\");\n\n      await filter.callMethod(\"setFocus\");\n      await page.waitForChanges();\n\n      const calciteFilterChangeEvent3 = filter.waitForEvent(\"calciteFilterChange\");\n      const calciteListFilterEvent3 = page.waitForEvent(\"calciteListFilter\");\n      await page.keyboard.type(\"blah\");\n      await calciteFilterChangeEvent3;\n      await calciteListFilterEvent3;\n      expect(await list.getProperty(\"filteredItems\")).toHaveLength(0);\n      expect(await list.getProperty(\"filteredData\")).toHaveLength(0);\n      expect(await list.getProperty(\"filterText\")).toBe(\"twoblah\");\n    });\n\n    it(\"resets tabindex to selected item when focusing out of list\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(html`\n        <calcite-${listType}-list>\n          <calcite-${listType}-list-item value=\"one\" label=\"One\" selected></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"two\" label=\"Two\"></calcite-${listType}-list-item>\n        </calcite-${listType}-list>\n      `);\n\n      await page.keyboard.press(\"Tab\");\n      await page.keyboard.press(\"Tab\");\n      expect(await getFocusedItemValue(page)).toEqual(null);\n\n      await page.keyboard.down(\"Shift\");\n      await page.keyboard.press(\"Tab\");\n      expect(await getFocusedItemValue(page)).toEqual(\"one\");\n    });\n  });\n}\n\nexport function selectionAndDeselection(listType: ListType): void {\n  describe(\"when multiple is false and an item is clicked\", () => {\n    it(\"should emit an event with the last selected item data\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(`<calcite-${listType}-list>\n          <calcite-${listType}-list-item value=\"one\" label=\"One\"></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"two\" label=\"Two\"></calcite-${listType}-list-item>\n        </calcite-${listType}-list>`);\n\n      const list = await page.find(`calcite-${listType}-list`);\n      const item1 = await list.find(\"[value=one]\");\n      const item2 = await list.find(\"[value=two]\");\n      const toggleSpy = await list.spyOnEvent(\"calciteListChange\");\n\n      await item1.click();\n      await item2.click();\n      expect(toggleSpy).toHaveReceivedEventTimes(2);\n    });\n  });\n\n  describe(\"when multiple is true and a item is clicked\", () => {\n    it(\"should emit an event with each selected item's data\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(`<calcite-${listType}-list multiple>\n          <calcite-${listType}-list-item value=\"one\" label=\"One\"></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"two\" label=\"Two\"></calcite-${listType}-list-item>\n        </calcite-${listType}-list>`);\n\n      const list = await page.find(`calcite-${listType}-list`);\n      const item1 = await list.find(\"[value=one]\");\n      const item2 = await list.find(\"[value=two]\");\n      const toggleSpy = await list.spyOnEvent(\"calciteListChange\");\n\n      await item1.click();\n      await item2.click();\n      await item2.click(); // deselect\n      expect(toggleSpy).toHaveReceivedEventTimes(3);\n    });\n  });\n\n  describe(\"preselected items\", () => {\n    it(\"should be included in the list of selected items\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(`<calcite-${listType}-list multiple>\n          <calcite-${listType}-list-item value=\"one\" label=\"One\" selected></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"two\" label=\"Two\"></calcite-${listType}-list-item>\n        </calcite-${listType}-list>`);\n\n      const numSelected = await page.evaluate(async (listType) => {\n        const list: ListElement = document.querySelector(`calcite-${listType}-list`);\n\n        return (await list.getSelectedItems()).size;\n      }, listType);\n\n      expect(numSelected).toBe(1);\n    });\n  });\n\n  describe(\"shift click behavior\", () => {\n    it(\"should multi-select\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(`<calcite-${listType}-list multiple>\n          <calcite-${listType}-list-item value=\"one\" label=\"One\"></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"two\" label=\"Two\"></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"three\" label=\"Three\"></calcite-${listType}-list-item>\n        </calcite-${listType}-list>`);\n\n      const list = await page.find(`calcite-${listType}-list`);\n      const item1 = await list.find(\"[value=one]\");\n      const item3 = await list.find(\"[value=three]\");\n\n      await item1.click();\n      await page.keyboard.down(\"Shift\");\n      await item3.click();\n      await page.keyboard.up(\"Shift\");\n\n      const numSelected = await page.evaluate(async (listType) => {\n        const list: ListElement = document.querySelector(`calcite-${listType}-list`);\n        return (await list.getSelectedItems()).size;\n      }, listType);\n\n      expect(numSelected).toBe(3);\n    });\n\n    it(\"should multi de-select\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(`<calcite-${listType}-list multiple>\n          <calcite-${listType}-list-item value=\"one\" label=\"One\" selected></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"two\" label=\"Two\" selected></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"three\" label=\"Three\" selected></calcite-${listType}-list-item>\n        </calcite-${listType}-list>`);\n\n      const list = await page.find(`calcite-${listType}-list`);\n      const item1 = await list.find(\"[value=one]\");\n      const item3 = await list.find(\"[value=three]\");\n\n      await item1.click();\n      await page.keyboard.down(\"Shift\");\n      await item3.click();\n      await page.keyboard.up(\"Shift\");\n\n      const numSelected = await page.evaluate(async (type) => {\n        const domList: ListElement = document.querySelector(`calcite-${type}-list`);\n        return (await domList.getSelectedItems()).size;\n      }, listType);\n      expect(numSelected).toBe(0);\n    });\n  });\n\n  describe(\"calciteListChange event\", () => {\n    it(\"should fire event when a selection changed\", async () => {\n      const page = await newE2EPage();\n\n      await page.setContent(`<calcite-${listType}-list>\n          <calcite-${listType}-list-item label=\"test\" value=\"example\"></calcite-${listType}-list-item>\n        </calcite-${listType}-list>`);\n      const item = await page.find(`calcite-${listType}-list-item`);\n      await page.evaluate(() => {\n        document.addEventListener(\"calciteListChange\", (event: CustomEvent): void => {\n          (window as any).eventDetail = event.detail;\n        });\n      });\n\n      await item.click();\n\n      await page.waitForChanges();\n\n      const eventDetail: any = await page.evaluateHandle(() => {\n        const detail = (window as any).eventDetail;\n        return {\n          size: detail.size,\n          hasItem: detail.has(\"example\"),\n        };\n      });\n      const properties = await eventDetail.getProperties();\n      expect(eventDetail).toBeDefined();\n      expect(properties.get(\"size\").remoteObject().value).toBe(1);\n      expect(properties.get(\"hasItem\").remoteObject().value).toBe(true);\n    });\n  });\n\n  describe(\"when an item is selected and then gets removed\", () => {\n    it(\"should deselect the removed item from the selectedValues map\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(`<calcite-${listType}-list multiple>\n          <calcite-${listType}-list-item value=\"one\" label=\"One\"></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item id=\"item2\" value=\"two\" label=\"Two\" selected></calcite-${listType}-list-item>\n        </calcite-${listType}-list>`);\n\n      const numSelected = await page.evaluate(async (type) => {\n        document.querySelector(\"#item2\").remove();\n        const domList: ListElement = document.querySelector(`calcite-${type}-list`);\n        return (await domList.getSelectedItems()).size;\n      }, listType);\n\n      expect(numSelected).toBe(0);\n    });\n  });\n\n  describe(\"value changes after item is selected\", () => {\n    it(\"should update the value in selectedValues map\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(`<calcite-${listType}-list>\n          <calcite-${listType}-list-item value=\"one\" label=\"One\" selected></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"two\" label=\"Two\" selected></calcite-${listType}-list-item>\n          <calcite-${listType}-list-item value=\"three\" label=\"Three\" selected></calcite-${listType}-list-item>\n        </calcite-${listType}-list>`);\n\n      const list = await page.find(`calcite-${listType}-list`);\n      const item1 = await list.find(\"[value=one]\");\n      await item1.click();\n\n      const hasValueOne = await page.evaluate(async (type) => {\n        const pageList: ListElement = document.querySelector(`calcite-${type}-list`);\n        return (await pageList.getSelectedItems()).has(\"one\");\n      }, listType);\n\n      expect(hasValueOne).toBe(true);\n\n      item1.setProperty(\"value\", \"four\");\n      await page.waitForChanges();\n\n      const hasValues = await page.evaluate(async (type) => {\n        const pageList: ListElement = document.querySelector(`calcite-${type}-list`);\n        const result = await pageList.getSelectedItems();\n\n        return {\n          four: result.has(\"four\"),\n          one: result.has(\"one\"),\n        };\n      }, listType);\n\n      expect(hasValues.one).toBe(false);\n      expect(hasValues.four).toBe(true);\n    });\n  });\n}\n\nexport function filterBehavior(listType: ListType): void {\n  let page: E2EPage = null;\n  let item1: E2EElement;\n  let item2: E2EElement;\n  let filter: E2EElement;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`<calcite-${listType}-list filter-enabled>\n        <calcite-${listType}-list-item value=\"1\" label=\"One\" description=\"uno\"></calcite-${listType}-list-item>\n        <calcite-${listType}-list-item value=\"2\" label=\"Two [regex chars]\" description=\"dos (regex chars)\"></calcite-${listType}-list-item>\n      </calcite-${listType}-list>`);\n    item1 = await page.find(`calcite-${listType}-list-item[value=\"1\"]`);\n    item2 = await page.find(`calcite-${listType}-list-item[value=\"2\"]`);\n    filter = await page.find(`calcite-${listType}-list >>> calcite-filter`);\n    item1.setProperty(\"metadata\", { category: \"first\" });\n    item2.setProperty(\"metadata\", { category: \"second /regex chars/\" });\n    await page.waitForChanges();\n  });\n\n  it(\"should match text in the label prop\", async () => {\n    // Match first item\n    await selectText(filter);\n    await filter.type(\"one\");\n    await item2.waitForNotVisible();\n\n    expect(await item1.isVisible()).toBe(true);\n    expect(await item2.isVisible()).toBe(false);\n\n    // Match second item (with regex chars)\n    await selectText(filter);\n    await filter.type(\"two [\");\n    await item1.waitForNotVisible();\n\n    expect(await item1.isVisible()).toBe(false);\n    expect(await item2.isVisible()).toBe(true);\n  });\n\n  it(\"should match text in the description prop\", async () => {\n    // Match first item\n    await selectText(filter);\n    await filter.type(\"uno\");\n    await item2.waitForNotVisible();\n\n    expect(await item1.isVisible()).toBe(true);\n    expect(await item2.isVisible()).toBe(false);\n\n    // Match second item (with regex chars)\n    await selectText(filter);\n    await filter.type(\"dos (\");\n    await item1.waitForNotVisible();\n\n    expect(await item1.isVisible()).toBe(false);\n    expect(await item2.isVisible()).toBe(true);\n  });\n\n  it(\"should match text in the metadata prop\", async () => {\n    // Match first item\n    await selectText(filter);\n    await filter.type(\"first\");\n    await item2.waitForNotVisible();\n\n    expect(await item1.isVisible()).toBe(true);\n    expect(await item2.isVisible()).toBe(false);\n\n    // Match second item (with regex chars)\n    await selectText(filter);\n    await filter.type(\"second /\");\n    await item1.waitForNotVisible();\n\n    expect(await item1.isVisible()).toBe(false);\n    expect(await item2.isVisible()).toBe(true);\n  });\n}\n\nexport function itemRemoval(listType: ListType): void {\n  const pickListGroupHtml = html` <calcite-pick-list-group\n      label=\"Will be removed when slotted 'parent item' is removed\"\n      value=\"remove-me\"\n    >\n      <calcite-pick-list-item\n        slot=\"parent-item\"\n        value=\"remove-me\"\n        label=\"Remove me!\"\n        removable\n      ></calcite-pick-list-item>\n    </calcite-pick-list-group>\n    <calcite-pick-list-group label=\"Will not be removed when child item is removed\" value=\"do-not-remove-me\">\n      <calcite-pick-list-item value=\"remove-me\" label=\"Do not remove me!\" removable></calcite-pick-list-item>\n    </calcite-pick-list-group>`;\n\n  it(\"handles removing items\", async () => {\n    const page = await newE2EPage({\n      html: html`\n      <calcite-${listType}-list>\n        ${listType === \"value\" ? \"\" : pickListGroupHtml}\n        <calcite-${listType}-list-item value=\"remove-me\" label=\"Remove me!\" removable></calcite-${listType}-list-item>\n      </calcite-${listType}-list>\n    `,\n    });\n    const list = await page.find(`calcite-${listType}-list`);\n    const removeItemSpy = await list.spyOnEvent(\"calciteListItemRemove\");\n    const listChangeSpy = await list.spyOnEvent(\"calciteListChange\");\n\n    const removableItems = await page.$$eval(\n      `calcite-${listType}-list-item`,\n      (items, listType, selector: string) => {\n        items.forEach((item) => {\n          listType === \"pick\"\n            ? item.shadowRoot.querySelector<HTMLElement>(selector).click()\n            : item.shadowRoot\n                .querySelector<HTMLCalcitePickListItemElement>(\"calcite-pick-list-item\")\n                .shadowRoot.querySelector<HTMLElement>(selector)\n                .click();\n        });\n\n        return items;\n      },\n      listType,\n      `.${PICK_LIST_ITEM_CSS.remove}`,\n    );\n\n    await page.waitForChanges();\n\n    expect(await page.findAll(`calcite-${listType}-list-item`)).toHaveLength(0);\n    expect(await page.findAll(`calcite-pick-list-group`)).toHaveLength(listType === \"pick\" ? 1 : 0);\n    expect(removeItemSpy).toHaveReceivedEventTimes(removableItems.length);\n    expect(listChangeSpy).toHaveReceivedEventTimes(1);\n  });\n}\n\n// eslint-disable-next-line jest/no-export -- util functions are now imported to be used as `it` blocks within `describe` instead of assertions within `it` blocks */\nexport function focusing(listType: ListType): void {\n  describe(\"should focus filter when setFocus method is called\", () => {\n    focusable(\n      html`\n        <calcite-${listType}-list filter-enabled>\n          <calcite-${listType}-list-item label=\"Sample\" value=\"one\"></calcite-${listType}-list-item>\n        </calcite-${listType}-list>\n      `,\n      {\n        focusId: \"filter\",\n        shadowFocusTargetSelector: \"calcite-filter\",\n      },\n    );\n  });\n}\n\n/* eslint-disable-next-line jest/no-export  -- util functions are now imported to be used as `it` blocks within `describe` instead of assertions within `it` blocks */\nexport function disabling(listType: ListType): void {\n  describe(\"disabled\", () => {\n    disabled(\n      html`\n      <calcite-${listType}-list>\n        <calcite-${listType}-list-item label=\"Sample\" value=\"one\"></calcite-${listType}-list-item>\n      </calcite-${listType}-list>\n    `,\n      {\n        focusTarget: \"child\",\n      },\n    );\n  });\n}\n"]}