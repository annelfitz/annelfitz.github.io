{"version":3,"file":"table-header.js","sourceRoot":"","sources":["../../../../src/components/table-header/table-header.tsx"],"names":[],"mappings":"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":["import { Component, Element, h, Host, Method, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { Alignment, Scale, SelectionMode } from \"../interfaces\";\nimport { TableHeaderMessages } from \"./assets/table-header/t9n\";\nimport { CSS } from \"./resources\";\nimport { RowType, TableInteractionMode } from \"../table/interfaces\";\nimport { getIconScale } from \"../../utils/component\";\n\n@Component({\n  tag: \"calcite-table-header\",\n  styleUrl: \"table-header.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TableHeader implements LocalizedComponent, LoadableComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment = \"start\";\n\n  /** Specifies the number of columns the component should span. */\n  @Prop({ reflect: true }) colSpan: number;\n\n  /** A description to display beneath heading content. */\n  @Prop({ reflect: true }) description: string;\n\n  /** A heading to display above description content. */\n  @Prop({ reflect: true }) heading: string;\n\n  /** Specifies the number of rows the component should span. */\n  @Prop({ reflect: true }) rowSpan: number;\n\n  /** @internal */\n  @Prop() interactionMode: TableInteractionMode = \"interactive\";\n\n  /** @internal */\n  @Prop() lastCell: boolean;\n\n  /** @internal */\n  @Prop() numberCell = false;\n\n  /** @internal */\n  @Prop() parentRowIsSelected: boolean;\n\n  /** @internal */\n  @Prop() parentRowType: RowType;\n\n  /** @internal */\n  @Prop() positionInRow: number;\n\n  /** @internal */\n  @Prop() scale: Scale;\n\n  /** @internal */\n  @Prop() selectedRowCount: number;\n\n  /** @internal */\n  @Prop() selectedRowCountLocalized: string;\n\n  @Watch(\"selectedRowCount\")\n  @Watch(\"selectedRowCountLocalized\")\n  onSelectedChange(): void {\n    this.updateScreenReaderText();\n  }\n\n  /** @internal */\n  @Prop() selectionCell = false;\n\n  /** @internal */\n  @Prop() selectionMode: SelectionMode;\n\n  /** @internal */\n  @Prop() bodyRowCount: number;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TableHeaderMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TableHeaderMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    this.updateScreenReaderText();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n  @Element() el: HTMLCalciteTableHeaderElement;\n\n  @State() defaultMessages: TableHeaderMessages;\n\n  @State() focused = false;\n\n  @State() screenReaderText = \"\";\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  private containerEl: HTMLTableCellElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.containerEl.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private updateScreenReaderText(): void {\n    let text = \"\";\n    const sharedText = `${this.selectedRowCountLocalized} ${this.messages?.selected}`;\n    if (this.numberCell) {\n      text = this.messages?.rowNumber;\n    } else if (this.selectionMode === \"single\") {\n      text = `${this.messages?.selectionColumn}. ${sharedText}`;\n    } else if (this.bodyRowCount === this.selectedRowCount) {\n      text = `${this.messages?.selectionColumn}. ${this.messages?.all} ${sharedText} ${this.messages?.keyboardDeselectAll}`;\n    } else {\n      text = `${this.messages?.selectionColumn}. ${sharedText} ${this.messages?.keyboardSelectAll}`;\n    }\n    this.screenReaderText = text;\n  }\n\n  private onContainerBlur = (): void => {\n    this.focused = false;\n  };\n\n  private onContainerFocus = (): void => {\n    this.focused = true;\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const scope = this.rowSpan\n      ? \"rowgroup\"\n      : this.colSpan\n        ? \"colgroup\"\n        : this.parentRowType === \"body\"\n          ? \"row\"\n          : \"col\";\n\n    const allSelected = this.selectedRowCount === this.bodyRowCount;\n    const selectionIcon = allSelected ? \"check-square-f\" : \"check-square\";\n    const staticCell = this.interactionMode === \"static\" && !this.selectionCell;\n    return (\n      <Host>\n        <th\n          aria-colindex={this.parentRowType === \"head\" ? this.positionInRow : undefined}\n          class={{\n            [CSS.bodyRow]: this.parentRowType === \"body\",\n            [CSS.footerRow]: this.parentRowType === \"foot\",\n            [CSS.numberCell]: this.numberCell,\n            [CSS.selectionCell]: this.selectionCell,\n            [CSS.selectedCell]: this.parentRowIsSelected,\n            [CSS.multipleSelectionCell]: this.selectionMode === \"multiple\",\n            [CSS.staticCell]: staticCell,\n            [CSS.lastCell]: this.lastCell && (!this.rowSpan || (this.colSpan && !!this.rowSpan)),\n          }}\n          colSpan={this.colSpan}\n          onBlur={this.onContainerBlur}\n          onFocus={this.onContainerFocus}\n          role={this.parentRowType === \"head\" ? \"columnheader\" : \"rowheader\"}\n          rowSpan={this.rowSpan}\n          scope={scope}\n          tabIndex={this.selectionCell ? 0 : staticCell ? -1 : 0}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(el) => (this.containerEl = el)}\n        >\n          {this.heading && <div class={CSS.heading}>{this.heading}</div>}\n          {this.description && <div class={CSS.description}>{this.description}</div>}\n          {this.selectionCell && this.selectionMode === \"multiple\" && (\n            <calcite-icon\n              class={{ [CSS.active]: allSelected }}\n              icon={selectionIcon}\n              scale={getIconScale(this.scale)}\n            />\n          )}\n          <span\n            aria-hidden={true}\n            aria-live={this.focused ? \"polite\" : \"off\"}\n            class={CSS.assistiveText}\n          >\n            {(this.selectionCell || this.numberCell) && this.screenReaderText}\n          </span>\n        </th>\n      </Host>\n    );\n  }\n}\n"]}