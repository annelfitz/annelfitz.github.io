{"version":3,"file":"date-picker-day.js","sourceRoot":"","sources":["../../../../src/components/date-picker-day/date-picker-day.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,OAAO,EACP,KAAK,EAEL,CAAC,EACD,IAAI,EACJ,MAAM,EACN,IAAI,GAEL,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAE7C,OAAO,EAAE,iCAAiC,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AACnF,OAAO,EACL,kBAAkB,EAClB,qBAAqB,EAErB,oBAAoB,EACpB,qBAAqB,GACtB,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAClD,OAAO,EAAE,qBAAqB,EAAE,MAAM,oBAAoB,CAAC;AAQ3D,MAAM,OAAO,aAAa;;QAyDxB,4EAA4E;QAC5E,EAAE;QACF,mBAAmB;QACnB,EAAE;QACF,4EAA4E;QAE5E,YAAO,GAAG,GAAS,EAAE;YACnB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO;aACR;YAED,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,KAAoB,EAAQ,EAAE;YAC9C,IAAI,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBAC9B,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;gBAC/C,KAAK,CAAC,cAAc,EAAE,CAAC;aACxB;QACH,CAAC,CAAC;;;wBA1DkC,KAAK;4BAGD,KAAK;wBAGT,KAAK;2BAGF,KAAK;qBAGX,KAAK;;4BAUE,KAAK;0BAGP,KAAK;0BAGL,KAAK;sBAGT,KAAK;;;;IA8BvC,kBAAkB;QAChB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;IACtC,CAAC;IAoBD,4EAA4E;IAC5E,EAAE;IACF,aAAa;IACb,EAAE;IACF,4EAA4E;IAE5E,iBAAiB;QACf,IAAI,CAAC,kBAAkB,GAAG,iCAAiC,CACzD,IAAI,CAAC,EAAE,EACP,qBAAqB,CACU,CAAC;IACpC,CAAC;IAED,MAAM;QACJ,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACxD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,MAAM,EAAE,eAAe,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAElE,qBAAqB,CAAC,mBAAmB,GAAG;gBAC1C,WAAW,EAAE,KAAK;gBAClB,GAAG,CAAC,eAAe,IAAI,EAAE,eAAe,EAAE,CAAC;gBAC3C,GAAG,CAAC,MAAM,IAAI,EAAE,MAAM,EAAE,CAAC;aAC1B,CAAC;SACH;QACD,MAAM,YAAY,GAAG,qBAAqB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACtE,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAExD,OAAO,CACL,EAAC,IAAI,qBACY,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAC/B,QAAQ,mBACL,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,EACzC,EAAE,EAAE,KAAK,EACT,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,SAAS,EAAE,IAAI,CAAC,cAAc,EAC9B,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEhD,EAAC,oBAAoB,IAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBAC3C,0BAAiB,MAAM,EAAC,KAAK,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE;oBACtD,WAAK,KAAK,EAAC,aAAa;wBACtB,YAAM,KAAK,EAAC,KAAK;4BACf,YAAM,KAAK,EAAC,MAAM,IAAE,YAAY,CAAQ,CACnC,CACH,CACF,CACe,CAClB,CACR,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,kBAAkB;QAChB,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,oBAAoB;QAClB,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAWF","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { dateToISO } from \"../../utils/date\";\n\nimport { closestElementCrossShadowBoundary, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { numberStringFormatter } from \"../../utils/locale\";\nimport { Scale } from \"../interfaces\";\n\n@Component({\n  tag: \"calcite-date-picker-day\",\n  styleUrl: \"date-picker-day.scss\",\n  shadow: true,\n})\nexport class DatePickerDay implements InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Day of the month to be shown. */\n  @Prop() day!: number;\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @Prop() dateTimeFormat: Intl.DateTimeFormat;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Date is in the current month. */\n  @Prop({ reflect: true }) currentMonth = false;\n\n  /**  When `true`, the component is selected. */\n  @Prop({ reflect: true }) selected = false;\n\n  /** Date is currently highlighted as part of the range, */\n  @Prop({ reflect: true }) highlighted = false;\n\n  /** When `true`, activates the component's range mode to allow a start and end date. */\n  @Prop({ reflect: true }) range = false;\n\n  /**\n   * When `true`, highlight styling for edge dates is applied.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) rangeEdge: \"start\" | \"end\" | undefined;\n\n  /** Date is the start of date range. */\n  @Prop({ reflect: true }) startOfRange = false;\n\n  /** Date is the end of date range. */\n  @Prop({ reflect: true }) endOfRange = false;\n\n  /** Date is being hovered and within the set range. */\n  @Prop({ reflect: true }) rangeHover = false;\n\n  /** When `true`, the component is active. */\n  @Prop({ reflect: true }) active = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /** The component's value. */\n  @Prop() value: Date;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  onClick = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.calciteDaySelect.emit();\n  };\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      !this.disabled && this.calciteDaySelect.emit();\n      event.preventDefault();\n    }\n  };\n\n  @Listen(\"pointerover\")\n  pointerOverHandler(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.calciteInternalDayHover.emit();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when user selects day.\n   */\n  @Event({ cancelable: false }) calciteDaySelect: EventEmitter<void>;\n\n  /**\n   * Fires when user hovers over a day.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDayHover: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.parentDatePickerEl = closestElementCrossShadowBoundary(\n      this.el,\n      \"calcite-date-picker\",\n    ) as HTMLCalciteDatePickerElement;\n  }\n\n  render(): VNode {\n    const dayId = dateToISO(this.value).replaceAll(\"-\", \"\");\n    if (this.parentDatePickerEl) {\n      const { numberingSystem, lang: locale } = this.parentDatePickerEl;\n\n      numberStringFormatter.numberFormatOptions = {\n        useGrouping: false,\n        ...(numberingSystem && { numberingSystem }),\n        ...(locale && { locale }),\n      };\n    }\n    const formattedDay = numberStringFormatter.localize(String(this.day));\n    const dayLabel = this.dateTimeFormat.format(this.value);\n\n    return (\n      <Host\n        aria-disabled={toAriaBoolean(this.disabled)}\n        aria-label={dayLabel}\n        aria-selected={toAriaBoolean(this.active)}\n        id={dayId}\n        onClick={this.onClick}\n        onKeyDown={this.keyDownHandler}\n        role=\"button\"\n        tabIndex={this.active && !this.disabled ? 0 : -1}\n      >\n        <InteractiveContainer disabled={this.disabled}>\n          <div aria-hidden=\"true\" class={{ \"day-v-wrapper\": true }}>\n            <div class=\"day-wrapper\">\n              <span class=\"day\">\n                <span class=\"text\">{formattedDay}</span>\n              </span>\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerDayElement;\n\n  private parentDatePickerEl: HTMLCalciteDatePickerElement;\n}\n"]}