{"version":3,"file":"chip.js","sourceRoot":"","sources":["../../../../src/components/chip/chip.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Build,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean, slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport { CSS, SLOTS, ICONS } from \"./resources\";\nimport { Appearance, Kind, Scale, SelectionMode } from \"../interfaces\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { ChipMessages } from \"./assets/chip/t9n\";\nimport { getIconScale } from \"../../utils/component\";\n\n/**\n * @slot - A slot for adding text.\n * @slot image - A slot for adding an image.\n */\n@Component({\n  tag: \"calcite-chip\",\n  styleUrl: \"chip.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Chip\n  implements\n    ConditionalSlotComponent,\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Specifies the appearance style of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"outline\" | \"outline-fill\" | \"solid\", Appearance> =\n    \"solid\";\n\n  /** Specifies the kind of the component, which will apply to border and background if applicable. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"inverse\" | \"neutral\", Kind> = \"neutral\";\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. When contained in a parent `calcite-chip-group` inherits the parent's `scale` value. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** The component's value. */\n  @Prop() value!: any;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  /**\n   * This internal property, managed by a containing `calcite-chip-group`, is\n   * conditionally set based on the `selectionMode` of the parent\n   *\n   * @internal\n   */\n  @Prop() selectionMode: Extract<\"multiple\" | \"single\" | \"single-persist\" | \"none\", SelectionMode> =\n    \"none\";\n\n  /** When `true`, the component is selected.  */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ChipMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ChipMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * When true, enables the chip to be focused, and allows the `calciteChipSelect` to emit.\n   * This is set to `true` by a parent Chip Group component.\n   *\n   * @internal\n   */\n  @Prop() interactive = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteChipElement;\n\n  @State() defaultMessages: ChipMessages;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() private hasText = false;\n\n  @State() private hasImage = false;\n\n  private containerEl: HTMLDivElement;\n\n  private closeButtonEl: HTMLButtonElement;\n\n  private mutationObserver = createObserver(\"mutation\", () => this.updateHasText());\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's close button is selected.\n   */\n  @Event({ cancelable: false }) calciteChipClose: EventEmitter<void>;\n\n  /**\n   * Fires when the selected state of the component changes.\n   */\n  @Event({ cancelable: false }) calciteChipSelect: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalChipKeyEvent: EventEmitter<KeyboardEvent>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.mutationObserver?.disconnect();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (Build.isBrowser) {\n      await setUpMessages(this);\n      this.updateHasText();\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (event.target === this.el) {\n      switch (event.key) {\n        case \" \":\n        case \"Enter\":\n          this.handleEmittingEvent();\n          event.preventDefault();\n          break;\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n        case \"Home\":\n        case \"End\":\n          this.calciteInternalChipKeyEvent.emit(event);\n          event.preventDefault();\n          break;\n      }\n    }\n  }\n\n  @Listen(\"click\")\n  clickHandler(): void {\n    if (!this.interactive && this.closable) {\n      this.closeButtonEl.focus();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (!this.disabled && this.interactive) {\n      this.containerEl?.focus();\n    } else if (!this.disabled && this.closable) {\n      this.closeButtonEl?.focus();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private close = (): void => {\n    this.calciteChipClose.emit();\n    this.selected = false;\n    this.closed = true;\n  };\n\n  private closeButtonKeyDownHandler = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.close();\n    }\n  };\n\n  private updateHasText() {\n    this.hasText = this.el.textContent.trim().length > 0;\n  }\n\n  private handleSlotImageChange = (event: Event): void => {\n    this.hasImage = slotChangeHasAssignedElement(event);\n  };\n\n  private handleEmittingEvent = (): void => {\n    if (this.interactive) {\n      this.calciteChipSelect.emit();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderChipImage(): VNode {\n    return (\n      <div class={CSS.imageContainer}>\n        <slot name={SLOTS.image} onSlotchange={this.handleSlotImageChange} />\n      </div>\n    );\n  }\n\n  renderSelectionIcon(): VNode {\n    const icon =\n      this.selectionMode === \"multiple\" && this.selected\n        ? ICONS.checked\n        : this.selectionMode === \"multiple\"\n          ? ICONS.unchecked\n          : this.selected\n            ? ICONS.checkedSingle\n            : undefined;\n\n    return (\n      <div\n        class={{\n          [CSS.selectIcon]: true,\n          [CSS.selectIconActive]: this.selectionMode === \"multiple\" || this.selected,\n        }}\n      >\n        {icon ? <calcite-icon icon={icon} scale={getIconScale(this.scale)} /> : null}\n      </div>\n    );\n  }\n\n  renderCloseButton(): VNode {\n    return (\n      <button\n        aria-label={this.messages.dismissLabel}\n        class={CSS.close}\n        onClick={this.close}\n        onKeyDown={this.closeButtonKeyDownHandler}\n        tabIndex={this.disabled ? -1 : 0}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.closeButtonEl = el)}\n      >\n        <calcite-icon icon={ICONS.close} scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  renderIcon(): VNode {\n    return (\n      <calcite-icon\n        class={CSS.chipIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.icon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n    const disableInteraction = disabled || (!disabled && !this.interactive);\n    const role =\n      this.selectionMode === \"multiple\" && this.interactive\n        ? \"checkbox\"\n        : this.selectionMode !== \"none\" && this.interactive\n          ? \"radio\"\n          : this.interactive\n            ? \"button\"\n            : undefined;\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div\n            aria-checked={\n              this.selectionMode !== \"none\" && this.interactive\n                ? toAriaBoolean(this.selected)\n                : undefined\n            }\n            aria-disabled={disableInteraction ? toAriaBoolean(disabled) : undefined}\n            aria-label={this.label}\n            class={{\n              [CSS.container]: true,\n              [CSS.textSlotted]: this.hasText,\n              [CSS.imageSlotted]: this.hasImage,\n              [CSS.selectable]: this.selectionMode !== \"none\",\n              [CSS.multiple]: this.selectionMode === \"multiple\",\n              [CSS.closable]: this.closable,\n              [CSS.nonInteractive]: !this.interactive,\n              [CSS.isCircle]:\n                !this.closable &&\n                !this.hasText &&\n                (!this.icon || !this.hasImage) &&\n                (this.selectionMode === \"none\" ||\n                  (!!this.selectionMode && this.selectionMode !== \"multiple\" && !this.selected)),\n            }}\n            onClick={this.handleEmittingEvent}\n            role={role}\n            tabIndex={disableInteraction ? -1 : 0}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(el) => (this.containerEl = el)}\n          >\n            {this.selectionMode !== \"none\" && this.renderSelectionIcon()}\n            {this.renderChipImage()}\n            {this.icon && this.renderIcon()}\n            <span class={CSS.title}>\n              <slot />\n            </span>\n            {this.closable && this.renderCloseButton()}\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"]}