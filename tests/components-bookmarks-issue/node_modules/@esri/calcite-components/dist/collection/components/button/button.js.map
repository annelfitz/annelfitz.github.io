{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../../src/components/button/button.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Build,\n  Component,\n  Element,\n  forceUpdate,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { findAssociatedForm, FormOwner, resetForm, submitForm } from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { getIconScale } from \"../../utils/component\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Appearance, FlipContext, Kind, Scale, Width } from \"../interfaces\";\nimport { ButtonMessages } from \"./assets/button/t9n\";\nimport { ButtonAlignment } from \"./interfaces\";\nimport { CSS } from \"./resources\";\nimport { toAriaBoolean } from \"../../utils/dom\";\n\n/** Passing a 'href' will render an anchor link, instead of a button. Role will be set to link, or button, depending on this. */\n/** It is the consumers responsibility to add aria information, rel, target, for links, and any button attributes for form submission */\n\n/** @slot - A slot for adding text. */\n@Component({\n  tag: \"calcite-button\",\n  styleUrl: \"button.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Button\n  implements\n    LabelableComponent,\n    InteractiveComponent,\n    FormOwner,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"aria-expanded\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the alignment of the component's elements. */\n  @Prop({ reflect: true }) alignment: ButtonAlignment = \"center\";\n\n  /** Specifies the appearance style of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\n    \"outline\" | \"outline-fill\" | \"solid\" | \"transparent\",\n    Appearance\n  > = \"solid\";\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** Specifies the kind of the component, which will apply to the border and background if applicable. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"danger\" | \"inverse\" | \"neutral\", Kind> =\n    \"brand\";\n\n  /**  When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true })\n  form: string;\n\n  /**\n   * Specifies the URL of the linked resource, which can be set as an absolute or relative path.\n   */\n  @Prop({ reflect: true }) href: string;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: string;\n\n  /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: string;\n\n  /**\n   * When `true`, a busy indicator is displayed and interaction is disabled.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /** Specifies the name of the component on form submission. */\n  @Prop({ reflect: true }) name?: string;\n\n  /**\n   * Defines the relationship between the `href` value and the current document.\n   *\n   * @mdn [rel](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel)\n   */\n  @Prop({ reflect: true }) rel: string;\n\n  /** When `true`, adds a round style to the component. */\n  @Prop({ reflect: true }) round = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies if the component is a child of a `calcite-split-button`. */\n  @Prop({ reflect: true }) splitChild: \"primary\" | \"secondary\" | false = false;\n\n  /**\n   * Specifies where to open the linked document defined in the `href` property.\n   *\n   * @mdn [target](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target)\n   */\n  @Prop({ reflect: true }) target: string;\n\n  /**\n   * Specifies the default behavior of the component.\n   *\n   * @mdn [type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type)\n   */\n  @Prop({ reflect: true }) type = \"button\";\n\n  /** Specifies the width of the component. */\n  @Prop({ reflect: true }) width: Width = \"auto\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ButtonMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ButtonMessages>;\n\n  @Watch(\"loading\")\n  loadingChanged(newValue: boolean, oldValue: boolean): void {\n    if (!!newValue && !oldValue) {\n      this.hasLoader = true;\n    }\n    if (!newValue && !!oldValue) {\n      window.setTimeout(() => {\n        this.hasLoader = false;\n      }, 300);\n    }\n  }\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /** referred in t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async connectedCallback(): Promise<void> {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.hasLoader = this.loading;\n    this.setupTextContentObserver();\n    connectLabel(this);\n    this.formEl = findAssociatedForm(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n    this.formEl = null;\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (Build.isBrowser) {\n      this.updateHasContent();\n      await setUpMessages(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.setTooltipText();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    const childElType = this.href ? \"a\" : \"button\";\n    const Tag = childElType;\n    const loaderNode = this.hasLoader ? (\n      <div class={CSS.buttonLoader}>\n        <calcite-loader\n          class={this.loading ? CSS.loadingIn : CSS.loadingOut}\n          inline\n          label={this.messages.loading}\n          scale={this.scale === \"l\" ? \"m\" : \"s\"}\n        />\n      </div>\n    ) : null;\n    const noStartEndIcons = !this.iconStart && !this.iconEnd;\n\n    const iconStartEl = (\n      <calcite-icon\n        class={{ [CSS.icon]: true, [CSS.iconStart]: true }}\n        flipRtl={this.iconFlipRtl === \"start\" || this.iconFlipRtl === \"both\"}\n        icon={this.iconStart}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const iconEndEl = (\n      <calcite-icon\n        class={{ [CSS.icon]: true, [CSS.iconEnd]: true }}\n        flipRtl={this.iconFlipRtl === \"end\" || this.iconFlipRtl === \"both\"}\n        icon={this.iconEnd}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const contentEl = (\n      <span class={CSS.content} ref={(el) => (this.contentEl = el)}>\n        <slot />\n      </span>\n    );\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <Tag\n          aria-disabled={childElType === \"a\" ? toAriaBoolean(this.disabled || this.loading) : null}\n          aria-expanded={this.el.getAttribute(\"aria-expanded\")}\n          aria-label={!this.loading ? getLabelText(this) : this.messages.loading}\n          aria-live=\"polite\"\n          class={{\n            [CSS.buttonPadding]: noStartEndIcons,\n            [CSS.buttonPaddingShrunk]: !noStartEndIcons,\n            [CSS.contentSlotted]: this.hasContent,\n            [CSS.iconStartEmpty]: !this.iconStart,\n            [CSS.iconEndEmpty]: !this.iconEnd,\n          }}\n          disabled={childElType === \"button\" ? this.disabled || this.loading : null}\n          href={childElType === \"a\" && this.href}\n          name={childElType === \"button\" && this.name}\n          onClick={this.handleClick}\n          rel={childElType === \"a\" && this.rel}\n          tabIndex={this.disabled ? -1 : null}\n          target={childElType === \"a\" && this.target}\n          title={this.tooltipText}\n          type={childElType === \"button\" && this.type}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={this.setChildEl}\n        >\n          {loaderNode}\n          {this.iconStart ? iconStartEl : null}\n          {this.hasContent ? contentEl : null}\n          {this.iconEnd ? iconEndEl : null}\n        </Tag>\n      </InteractiveContainer>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.childEl?.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteButtonElement;\n\n  formEl: HTMLFormElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  /** watches for changing text content */\n  private mutationObserver = createObserver(\"mutation\", () => this.updateHasContent());\n\n  /** the rendered child element */\n  private childEl?: HTMLElement;\n\n  /** determine if there is slotted content for styling purposes */\n  @State() private hasContent = false;\n\n  /** determine if loader present for styling purposes */\n  @State() private hasLoader = false;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ButtonMessages;\n\n  private updateHasContent() {\n    const slottedContent = this.el.textContent.trim().length > 0 || this.el.childNodes.length > 0;\n    this.hasContent =\n      this.el.childNodes.length === 1 && this.el.childNodes[0]?.nodeName === \"#text\"\n        ? this.el.textContent?.trim().length > 0\n        : slottedContent;\n  }\n\n  private setupTextContentObserver() {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  /** keeps track of the tooltipText */\n  @State() tooltipText: string;\n\n  /** keep track of the rendered contentEl */\n  private contentEl: HTMLSpanElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.setTooltipText());\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.handleClick();\n    this.setFocus();\n  }\n\n  // act on a requested or nearby form based on type\n  private handleClick = (): void => {\n    const { type } = this;\n\n    if (this.href) {\n      return;\n    }\n\n    // this.type refers to type attribute, not child element type\n    if (type === \"submit\") {\n      submitForm(this);\n    } else if (type === \"reset\") {\n      resetForm(this);\n    }\n  };\n\n  private setTooltipText = (): void => {\n    const { contentEl } = this;\n    if (contentEl) {\n      this.tooltipText =\n        contentEl.offsetWidth < contentEl.scrollWidth ? this.el.innerText || null : null;\n    }\n  };\n\n  private setChildEl = (el: HTMLElement): void => {\n    this.childEl = el;\n\n    if (el) {\n      this.resizeObserver?.observe(el);\n    }\n  };\n}\n"]}