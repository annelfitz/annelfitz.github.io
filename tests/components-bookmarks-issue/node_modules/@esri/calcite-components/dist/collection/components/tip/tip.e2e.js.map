{"version":3,"file":"tip.e2e.js","sourceRoot":"","sources":["../../../../src/components/tip/tip.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from \"@stencil/core/testing\";\nimport { accessible, hidden, renders, defaults, slots, t9n } from \"../../tests/commonTests\";\nimport { CSS, SLOTS } from \"./resources\";\n\ndescribe(\"calcite-tip\", () => {\n  describe(\"renders\", () => {\n    renders(\"calcite-tip\", { display: \"flex\" });\n  });\n\n  describe(\"honors hidden attribute\", () => {\n    hidden(\"calcite-tip\");\n  });\n\n  describe(\"defaults\", () => {\n    defaults(\"calcite-tip\", [\n      {\n        propertyName: \"headingLevel\",\n        defaultValue: undefined,\n      },\n    ]);\n  });\n\n  describe(\"accessible\", () => {\n    accessible(`<calcite-tip heading=\"sample\"><p>not dismissible</p></calcite-tip>`);\n  });\n\n  describe(\"slots\", () => {\n    slots(\"calcite-tip\", SLOTS);\n  });\n\n  it(\"should remove the closeButton if closeDisabled prop is true\", async () => {\n    const page = await newE2EPage();\n\n    await page.setContent(`<calcite-tip close-disabled><p>not dismissible</p></calcite-tip>`);\n\n    const closeButton = await page.find(`calcite-tip >>> .${CSS.close}`);\n    expect(closeButton).toBeNull();\n  });\n\n  it(\"should be hidden after the close button is clicked\", async () => {\n    const page = await newE2EPage({ html: `<calcite-tip><p>testing close button</p></calcite-tip>` });\n\n    const eventSpy = await page.spyOnEvent(\"calciteTipDismiss\", \"window\");\n\n    const closeButton = await page.find(`calcite-tip >>> .${CSS.close}`);\n\n    await closeButton.click();\n\n    const tip = await page.find(`calcite-tip`);\n\n    const isVisible = await tip.isVisible();\n\n    expect(isVisible).toBe(false);\n\n    expect(eventSpy).toHaveReceivedEvent();\n  });\n\n  it(\"header should only be visible if has a heading\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<calcite-tip><p>testing</p></calcite-tip>`);\n\n    let header = await page.find(`calcite-tip >>> .${CSS.header}`);\n\n    expect(header).toBeNull();\n\n    const tip = await page.find(\"calcite-tip\");\n\n    tip.setProperty(\"heading\", \"test\");\n\n    await page.waitForChanges();\n\n    header = await page.find(`calcite-tip >>> .${CSS.header}`);\n\n    expect(header).not.toBeNull();\n  });\n\n  describe(\"translation support\", () => {\n    t9n(\"calcite-tip\");\n  });\n});\n"]}