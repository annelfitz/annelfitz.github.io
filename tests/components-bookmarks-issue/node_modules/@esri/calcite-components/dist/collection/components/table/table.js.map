{"version":3,"file":"table.js","sourceRoot":"","sources":["../../../../src/components/table/table.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport {\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  numberStringFormatter,\n  NumberingSystem,\n} from \"../../utils/locale\";\nimport { TableInteractionMode, TableLayout, TableRowFocusEvent } from \"./interfaces\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { TableMessages } from \"./assets/table/t9n\";\nimport { getUserAgentString } from \"../../utils/browser\";\n\n/**\n * @slot - A slot for adding `calcite-table-row` elements containing `calcite-table-cell` and/or `calcite-table-header` elements.\n * @slot table-header - A slot for adding `calcite-table-row` elements containing `calcite-table-header` elements.\n * @slot table-footer - A slot for adding `calcite-table-row` elements containing `calcite-table-cell` and/or `calcite-table-header` elements.\n * @slot selection-actions - A slot for adding a `calcite-action-bar` or other elements to display when `selectionMode` is not `\"none\"`.\n */\n\n@Component({\n  tag: \"calcite-table\",\n  styleUrl: \"table.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Table implements LocalizedComponent, LoadableComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, displays borders in the component. */\n  @Prop({ reflect: true }) bordered = false;\n\n  /** Specifies an accessible title for the component. */\n  @Prop() caption!: string;\n\n  /** When `true`, number values are displayed with a group separator corresponding to the language and country format. */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /** When `\"interactive\"`, allows focus and keyboard navigation of `table-header`s and `table-cell`s.  When `\"static\"`, prevents focus and keyboard navigation of `table-header`s and `table-cell`s when assistive technologies are not active. Selection affordances and slotted content within `table-cell`s remain focusable. */\n  @Prop({ reflect: true }) interactionMode: TableInteractionMode = \"interactive\";\n\n  /** Specifies the layout of the component. */\n  @Prop({ reflect: true }) layout: TableLayout = \"auto\";\n\n  /** When `true`, displays the position of the row in numeric form. */\n  @Prop({ reflect: true }) numbered = false;\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop({ reflect: true }) numberingSystem?: NumberingSystem;\n\n  /** Specifies the page size of the component. When `true`, renders `calcite-pagination`. */\n  @Prop({ reflect: true }) pageSize = 0;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection, and\n   *\n   * `\"none\"` does not allow any selections.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\"none\" | \"multiple\" | \"single\", SelectionMode> =\n    \"none\";\n\n  /**\n   * When `true`, displays striped styling in the component.\n   *\n   * @deprecated Use the `striped` property instead.\n   */\n  @Prop({ reflect: true }) zebra = false;\n\n  /** When `true`, displays striped styling in the component. */\n  @Prop({ reflect: true }) striped = false;\n\n  @Watch(\"groupSeparator\")\n  @Watch(\"interactionMode\")\n  @Watch(\"numbered\")\n  @Watch(\"numberingSystem\")\n  @Watch(\"pageSize\")\n  @Watch(\"scale\")\n  @Watch(\"selectionMode\")\n  handleNumberedChange(): void {\n    this.updateRows();\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteTableRowElement[] = [];\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TableMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TableMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTableElement;\n\n  @State() colCount = 0;\n\n  @State() pageStartRow = 1;\n\n  @State() selectedCount = 0;\n\n  /* Workaround for Safari https://bugs.webkit.org/show_bug.cgi?id=258430 https://bugs.webkit.org/show_bug.cgi?id=239478 */\n  // ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\n  @State() readCellContentsToAT: boolean;\n\n  @State() defaultMessages: TableMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  private allRows: HTMLCalciteTableRowElement[];\n\n  private bodyRows: HTMLCalciteTableRowElement[];\n\n  private headRows: HTMLCalciteTableRowElement[];\n\n  private footRows: HTMLCalciteTableRowElement[];\n\n  private paginationEl: HTMLCalcitePaginationElement;\n\n  private tableBodySlotEl: HTMLSlotElement;\n\n  private tableHeadSlotEl: HTMLSlotElement;\n\n  private tableFootSlotEl: HTMLSlotElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    this.readCellContentsToAT = /safari/i.test(getUserAgentString());\n    this.updateRows();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Emits when the component's selected rows change. */\n  @Event({ cancelable: false }) calciteTableSelect: EventEmitter<void>;\n\n  /** Emits when the component's page selection changes. */\n  @Event({ cancelable: false }) calciteTablePageChange: EventEmitter<void>;\n\n  /** @internal */\n  @Event({ cancelable: false })\n  calciteInternalTableRowFocusChange: EventEmitter<TableRowFocusEvent>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteTableRowSelect\")\n  calciteChipSelectListener(event: CustomEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      this.setSelectedItems(event.target as HTMLCalciteTableRowElement);\n    }\n  }\n\n  @Listen(\"calciteInternalTableRowFocusRequest\")\n  calciteInternalTableRowFocusEvent(event: TableRowFocusEvent): void {\n    const cellPosition = event[\"detail\"].cellPosition;\n    const rowPos = event[\"detail\"].rowPosition;\n    const destination = event[\"detail\"].destination;\n    const lastCell = event[\"detail\"].lastCell;\n\n    const visibleBody = this.bodyRows?.filter((row) => !row.hidden);\n    const visibleAll = this.allRows?.filter((row) => !row.hidden);\n\n    const lastHeadRow = this.headRows[this.headRows.length - 1]?.positionAll;\n    const firstBodyRow = visibleBody[0]?.positionAll;\n    const lastBodyRow = visibleBody[visibleBody.length - 1]?.positionAll;\n    const firstFootRow = this.footRows[0]?.positionAll;\n    const lastTableRow = visibleAll[visibleAll.length - 1]?.positionAll;\n\n    const leavingHeader = destination === \"next\" && rowPos === lastHeadRow;\n    const leavingFooter = destination === \"previous\" && rowPos === firstFootRow;\n    const enteringHeader = destination === \"previous\" && rowPos === firstBodyRow;\n    const enteringFooter = destination === \"next\" && rowPos === lastBodyRow;\n\n    let rowPosition: number;\n\n    switch (destination) {\n      case \"first\":\n        rowPosition = 0;\n        break;\n      case \"last\":\n        rowPosition = lastTableRow;\n        break;\n      case \"next\":\n        rowPosition = leavingHeader ? firstBodyRow : enteringFooter ? firstFootRow : rowPos + 1;\n        break;\n      case \"previous\":\n        rowPosition = leavingFooter ? lastBodyRow : enteringHeader ? lastHeadRow : rowPos - 1;\n        break;\n    }\n\n    const destinationCount = this.allRows?.find((row) => row.positionAll === rowPosition)\n      ?.cellCount;\n\n    const adjustedPos = cellPosition > destinationCount ? destinationCount : cellPosition;\n\n    if (rowPosition !== undefined) {\n      this.calciteInternalTableRowFocusChange.emit({\n        cellPosition: adjustedPos,\n        rowPosition,\n        destination,\n        lastCell,\n      });\n    }\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private getSlottedRows = (el: HTMLSlotElement): HTMLCalciteTableRowElement[] => {\n    return el\n      ?.assignedElements({ flatten: true })\n      ?.filter((el) => el?.matches(\"calcite-table-row\")) as HTMLCalciteTableRowElement[];\n  };\n\n  private updateRows = (): void => {\n    const headRows = this.getSlottedRows(this.tableHeadSlotEl) || [];\n    const bodyRows = this.getSlottedRows(this.tableBodySlotEl) || [];\n    const footRows = this.getSlottedRows(this.tableFootSlotEl) || [];\n    const allRows = [...headRows, ...bodyRows, ...footRows];\n\n    headRows?.forEach((row) => {\n      const position = headRows?.indexOf(row);\n      row.rowType = \"head\";\n      row.positionSection = position;\n      row.positionSectionLocalized = this.localizeNumber((position + 1).toString());\n    });\n\n    bodyRows?.forEach((row) => {\n      const position = bodyRows?.indexOf(row);\n      row.rowType = \"body\";\n      row.positionSection = position;\n      row.positionSectionLocalized = this.localizeNumber((position + 1).toString());\n    });\n\n    footRows?.forEach((row) => {\n      const position = footRows?.indexOf(row);\n      row.rowType = \"foot\";\n      row.positionSection = position;\n      row.positionSectionLocalized = this.localizeNumber((position + 1).toString());\n    });\n\n    allRows?.forEach((row) => {\n      row.interactionMode = this.interactionMode;\n      row.selectionMode = this.selectionMode;\n      row.bodyRowCount = bodyRows?.length;\n      row.positionAll = allRows?.indexOf(row);\n      row.numbered = this.numbered;\n      row.scale = this.scale;\n      row.readCellContentsToAT = this.readCellContentsToAT;\n      row.lastVisibleRow = allRows?.indexOf(row) === allRows.length - 1;\n    });\n\n    const colCount =\n      headRows[0]?.cellCount || headRows[0]?.querySelectorAll(\"calcite-table-header\")?.length;\n\n    this.colCount = colCount;\n    this.headRows = headRows;\n    this.bodyRows = bodyRows;\n    this.footRows = footRows;\n    this.allRows = allRows;\n\n    this.updateSelectedItems();\n    this.paginateRows();\n  };\n\n  private handlePaginationChange = (): void => {\n    const requestedItem = this.paginationEl?.startItem;\n    this.pageStartRow = requestedItem || 1;\n    this.calciteTablePageChange.emit();\n    this.updateRows();\n  };\n\n  private paginateRows = (): void => {\n    this.bodyRows?.forEach((row) => {\n      const rowPos = row.positionSection + 1;\n      const inView = rowPos >= this.pageStartRow && rowPos < this.pageStartRow + this.pageSize;\n      row.hidden = this.pageSize > 0 && !inView && !this.footRows.includes(row);\n      row.lastVisibleRow =\n        rowPos === this.pageStartRow + this.pageSize - 1 || rowPos === this.bodyRows.length;\n    });\n  };\n\n  private updateSelectedItems = (emit?: boolean): void => {\n    const selectedItems = this.bodyRows?.filter((el) => el.selected);\n    this.selectedItems = selectedItems;\n    this.selectedCount = selectedItems?.length;\n    this.allRows?.forEach((row) => {\n      row.selectedRowCount = this.selectedCount;\n      row.selectedRowCountLocalized = this.localizeNumber(this.selectedCount);\n    });\n    if (emit) {\n      this.calciteTableSelect.emit();\n    }\n  };\n\n  private handleDeselectAllRows = (): void => {\n    this.bodyRows?.forEach((row) => {\n      row.selected = false;\n    });\n    this.updateSelectedItems(true);\n  };\n\n  private setSelectedItems = (elToMatch?: HTMLCalciteTableRowElement): void => {\n    this.bodyRows?.forEach((el) => {\n      if (elToMatch?.rowType === \"head\") {\n        el.selected = this.selectedCount !== this.bodyRows?.length;\n      } else {\n        el.selected =\n          elToMatch === el ? !el.selected : this.selectionMode === \"multiple\" ? el.selected : false;\n      }\n    });\n    this.updateSelectedItems(true);\n  };\n\n  private localizeNumber = (value: number | string): string => {\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    return numberStringFormatter.localize(value.toString());\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderSelectionArea(): VNode {\n    const outOfViewCount = this.selectedItems?.filter((el) => el.hidden)?.length;\n    const localizedOutOfView = this.localizeNumber(outOfViewCount?.toString());\n    const localizedSelectedCount = this.localizeNumber(this.selectedCount?.toString());\n    const selectionText = `${localizedSelectedCount} ${this.messages.selected}`;\n    const outOfView = `${localizedOutOfView} ${this.messages.hiddenSelected}`;\n\n    return (\n      <div class={CSS.selectionArea}>\n        <calcite-chip\n          kind={this.selectedCount > 0 ? \"brand\" : \"neutral\"}\n          scale={this.scale}\n          value={selectionText}\n        >\n          {selectionText}\n        </calcite-chip>\n        {outOfViewCount > 0 && (\n          <calcite-chip icon=\"hide-empty\" scale={this.scale} title={outOfView} value={outOfView}>\n            {localizedOutOfView}\n          </calcite-chip>\n        )}\n        {this.selectedCount > 0 && (\n          <calcite-button\n            icon-start=\"x\"\n            kind=\"neutral\"\n            onClick={this.handleDeselectAllRows}\n            round\n            scale={this.scale}\n            title={`${this.messages.clear} ${selectionText} ${this.messages.row}`}\n          >\n            {this.messages.clear}\n          </calcite-button>\n        )}\n        <div class={CSS.selectionActions}>\n          <slot name={SLOTS.selectionActions} />\n        </div>\n      </div>\n    );\n  }\n\n  renderPaginationArea(): VNode {\n    return (\n      <div class={CSS.paginationArea}>\n        <calcite-pagination\n          groupSeparator={this.groupSeparator}\n          numberingSystem={this.numberingSystem}\n          onCalcitePaginationChange={this.handlePaginationChange}\n          pageSize={this.pageSize}\n          scale={this.scale}\n          startItem={1}\n          totalItems={this.bodyRows?.length}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(el) => (this.paginationEl = el)}\n        />\n      </div>\n    );\n  }\n\n  renderTHead(): VNode {\n    return (\n      <thead>\n        <slot\n          name={SLOTS.tableHeader}\n          onSlotchange={this.updateRows}\n          ref={(el) => (this.tableHeadSlotEl = el as HTMLSlotElement)}\n        />\n      </thead>\n    );\n  }\n\n  renderTBody(): VNode {\n    return (\n      <tbody>\n        <slot\n          onSlotchange={this.updateRows}\n          ref={(el) => (this.tableBodySlotEl = el as HTMLSlotElement)}\n        />\n      </tbody>\n    );\n  }\n\n  renderTFoot(): VNode {\n    return (\n      <tfoot>\n        <slot\n          name={SLOTS.tableFooter}\n          onSlotchange={this.updateRows}\n          ref={(el) => (this.tableFootSlotEl = el as HTMLSlotElement)}\n        />\n      </tfoot>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Host>\n        <div class={CSS.container}>\n          {this.selectionMode !== \"none\" && this.renderSelectionArea()}\n          <div\n            class={{\n              [CSS.bordered]: this.bordered,\n              [CSS.striped]: this.striped || this.zebra,\n              [CSS.tableContainer]: true,\n            }}\n          >\n            <table\n              aria-colcount={this.colCount}\n              aria-multiselectable={this.selectionMode === \"multiple\"}\n              aria-rowcount={this.allRows?.length}\n              class={{ [CSS.tableFixed]: this.layout === \"fixed\" }}\n              role={this.interactionMode === \"interactive\" ? \"grid\" : \"table\"}\n            >\n              <caption class={CSS.assistiveText}>{this.caption}</caption>\n              {this.renderTHead()}\n              {this.renderTBody()}\n              {this.renderTFoot()}\n            </table>\n          </div>\n          {this.pageSize > 0 && this.renderPaginationArea()}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}