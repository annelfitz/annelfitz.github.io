/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:11 GMT
 */
/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:11 GMT
 */
/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:11 GMT
 */
/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:11 GMT
 */
/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:09 GMT
 */
/* mixins & extensions */
/* helper to properly scale internal durations */
/**
* Currently only used in Checkbox.
*/
:host([disabled]) {
  cursor: default;
  -webkit-user-select: none;
          user-select: none;
  opacity: var(--calcite-opacity-disabled);
}

:host([disabled]) *,
:host([disabled]) ::slotted(*) {
  pointer-events: none;
}

/**
* CSS Custom Properties
*
* These properties can be overridden using the component's tag as selector.
*
* @prop --calcite-label-margin-bottom: The spacing below the component.
*/
:host {
  display: flex;
}

:host([alignment=start]) {
  text-align: start;
}

:host([alignment=end]) {
  text-align: end;
}

:host([alignment=center]) {
  text-align: center;
}

:host([scale=s]) .container {
  gap: 0.25rem;
  font-size: var(--calcite-font-size--2);
  line-height: 1rem;
  margin-block-end: var(--calcite-label-margin-bottom, 0.5rem);
}

:host([scale=m]) .container {
  gap: 0.5rem;
  font-size: var(--calcite-font-size--1);
  line-height: 1rem;
  margin-block-end: var(--calcite-label-margin-bottom, 0.75rem);
}

:host([scale=l]) .container {
  gap: 0.5rem;
  font-size: var(--calcite-font-size-0);
  line-height: 1.25rem;
  margin-block-end: var(--calcite-label-margin-bottom, 1rem);
}

:host .container {
  margin-inline: 0px;
  margin-block-start: 0px;
  inline-size: 100%;
  line-height: 1.375;
  color: var(--calcite-color-text-1);
}

:host([layout=default]) .container {
  display: flex;
  flex-direction: column;
}

:host([layout=inline]) .container,
:host([layout=inline-space-between]) .container {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
}

:host([layout=inline][scale=l]) .container {
  gap: 0.75rem;
}

:host([layout=inline-space-between]) .container {
  justify-content: space-between;
}

:host([disabled]) > .container {
  opacity: var(--calcite-opacity-disabled);
}
:host([disabled]) ::slotted(*[disabled]),
:host([disabled]) ::slotted(*[disabled] *) {
  --tw-bg-opacity: 1;
}
:host([disabled]) ::slotted(calcite-input-message:not([active])) {
  --tw-bg-opacity: 0;
}
:host([disabled]) ::slotted([calcite-hydrated][disabled]),
:host([disabled]) [calcite-hydrated][disabled] {
  /* prevent opacity stacking */
  opacity: 1;
}

.interaction-container {
  display: contents;
}

:host([hidden]) {
  display: none;
}

[hidden] {
  display: none;
}