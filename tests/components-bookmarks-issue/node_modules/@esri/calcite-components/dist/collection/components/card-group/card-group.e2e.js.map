{"version":3,"file":"card-group.e2e.js","sourceRoot":"","sources":["../../../../src/components/card-group/card-group.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAW,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,IAAI,EAAE,MAAM,6BAA6B,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AAEhF,OAAO,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAC;AAExC,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,OAAO,CAAC,2FAA2F,EAAE;YACnG,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACvC,MAAM,CAAC,oBAAoB,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QACxB,QAAQ,CAAC,wEAAwE,EAAE,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9G,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gDAAgD,EAAE,GAAG,EAAE;QAC9D,UAAU,CACR,IAAI,CAAA;;;4BAGkB,CACvB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,wCAAwC,EAAE,GAAG,EAAE;QACtD,UAAU,CACR,IAAI,CAAA;;;4BAGkB,CACvB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gDAAgD,EAAE,GAAG,EAAE;QAC9D,UAAU,CACR,IAAI,CAAA;;;4BAGkB,CACvB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0CAA0C,EAAE,GAAG,EAAE;QACxD,UAAU,CACR,IAAI,CAAA;;;4BAGkB,CACvB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,sCAAsC,EAAE,GAAG,EAAE;QACpD,EAAE,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;YAC3E,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;YAChC,MAAM,IAAI,CAAC,UAAU,CACnB,IAAI,CAAA;;;;8BAIkB,CACvB,CAAC;YACF,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAE5B,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACtD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;YAChF,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;YAEhF,MAAM,kBAAkB,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;YAC9E,MAAM,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAE5C,MAAM,cAAc,GAAG,MAAM,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;YACnE,MAAM,cAAc,GAAG,MAAM,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;YACnE,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAEjE,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,MAAM,cAAc,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,MAAM,cAAc,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAEjE,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAEjE,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC/D,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;YAC5E,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;YAChC,MAAM,IAAI,CAAC,UAAU,CACnB,IAAI,CAAA;;;8BAGkB,CACvB,CAAC;YACF,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAE5B,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACtD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;YAChF,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;YAEhF,MAAM,kBAAkB,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;YAC9E,MAAM,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAE5C,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAEjE,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAEjE,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAEjE,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sEAAsE,EAAE,KAAK,IAAI,EAAE;YACpF,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;YAChC,MAAM,IAAI,CAAC,UAAU,CACnB,IAAI,CAAA;;;;8BAIkB,CACvB,CAAC;YACF,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAE5B,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACtD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;YAChF,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;YAChF,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;YAEhF,MAAM,kBAAkB,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;YAC9E,MAAM,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAE5C,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC/D,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,CAAC;YAEzD,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAEjE,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAE3E,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAErF,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAE3E,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAEjE,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC/D,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,4CAA4C,EAAE,GAAG,EAAE;QAC1D,EAAE,CAAC,0DAA0D,EAAE,KAAK,IAAI,EAAE;YACxE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;YAChC,MAAM,IAAI,CAAC,UAAU,CACnB,IAAI,CAAA;;;;;;8BAMkB,CACvB,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACtD,MAAM,kBAAkB,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;YAC9E,MAAM,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAE5C,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEzC,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC/E,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,CAAC;YAEzD,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YACxC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE/E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YACxC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE/E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE/E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAEjE,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACvC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE/E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAE3E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAEjE,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAClC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE/E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACvC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE/E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YACxC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,+EAA+E,EAAE,KAAK,IAAI,EAAE;YAC7F,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;YAChC,MAAM,IAAI,CAAC,UAAU,CACnB,IAAI,CAAA;;;;;;8BAMkB,CACvB,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACtD,MAAM,kBAAkB,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;YAC9E,MAAM,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAE5C,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEzC,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC/E,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,CAAC;YAEzD,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YACxC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE/E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YACxC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE/E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE/E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,CAAC;YAEzD,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACvC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE/E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,CAAC;YAEzD,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,CAAC;YAEzD,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAClC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE/E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACvC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE/E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YACxC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4FAA4F,EAAE,KAAK,IAAI,EAAE;QAC1G,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CACnB,IAAI,CAAA;;;;;;4BAMkB,CACvB,CAAC;QACF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACtD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,MAAM,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnE,MAAM,mBAAmB,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUH;;;;;;;;GAQG;AACH,KAAK,UAAU,mBAAmB,CAAC,IAAa,EAAE,EAAE,eAAe,EAAiC;IAClG,MAAM,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IAC/B,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;QAC/C,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAA8B,oBAAoB,CAAC,CAAC;QAC5F,OAAO,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IAE7D,eAAe,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7F,CAAC;AAID;;;;GAIG;AACH,mBAAmB,CAAC,WAAW,GAAG,KAAK,EAAE,IAAa,EAAE,EAAE;IACxD,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;QACvB,QAAQ,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,CAAC,EAAE,MAAM,EAA0B,EAAE,EAAE;YACxF,MAAmC,CAAC,WAAW,GAAG,MAAM,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { E2EPage, newE2EPage } from \"@stencil/core/testing\";\nimport { html } from \"../../../support/formatting\";\nimport { accessible, renders, hidden, disabled } from \"../../tests/commonTests\";\nimport { GlobalTestProps } from \"../../tests/utils\";\nimport { CSS } from \"../card/resources\";\n\ndescribe(\"calcite-card-group\", () => {\n  describe(\"renders\", () => {\n    renders(\"<calcite-card-group label='test-label'><calcite-card></calcite-card></calcite-card-group>\", {\n      display: \"block\",\n    });\n  });\n\n  describe(\"honors hidden attribute\", () => {\n    hidden(\"calcite-card-group\");\n  });\n\n  describe(\"disabled\", () => {\n    disabled(\"<calcite-card-group><calcite-card></calcite-card></calcite-card-group>\", { focusTarget: \"none\" });\n  });\n\n  describe(\"is accessible in selection mode none (default)\", () => {\n    accessible(\n      html`<calcite-card-group label=\"test-label-group\">\n        <calcite-card label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        <calcite-card label=\"test-label-2\"><span slot=\"heading\">Heading</span></calcite-card>\n      </calcite-card-group>`,\n    );\n  });\n\n  describe(\"is accessible in selection mode single\", () => {\n    accessible(\n      html` <calcite-card-group label=\"test-label-group\" selection-mode=\"single\">\n        <calcite-card label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        <calcite-card label=\"test-label-2\"><span slot=\"heading\">Heading</span></calcite-card>\n      </calcite-card-group>`,\n    );\n  });\n\n  describe(\"is accessible in selection mode single-persist\", () => {\n    accessible(\n      html`<calcite-card-group label=\"test-label-group\" selection-mode=\"single-persist\">\n        <calcite-card label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        <calcite-card label=\"test-label-2\"><span slot=\"heading\">Heading</span></calcite-card>\n      </calcite-card-group>`,\n    );\n  });\n\n  describe(\"is accessible in selection mode multiple\", () => {\n    accessible(\n      html`<calcite-card-group label=\"test-label-group\" selection-mode=\"multiple\">\n        <calcite-card label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        <calcite-card label=\"test-label-2\"><span slot=\"heading\">Heading</span></calcite-card>\n      </calcite-card-group>`,\n    );\n  });\n\n  describe(\"selection modes function as intended\", () => {\n    it(\"selection mode single allows one or no cards to be selected\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-card-group label=\"test-label\" selection-mode=\"single\">\n          <calcite-card id=\"card-1\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-2\" selected label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-3\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        </calcite-card-group>`,\n      );\n      await page.waitForChanges();\n\n      const element = await page.find(\"calcite-card-group\");\n      const card1 = await page.find(\"#card-1\");\n      const card2 = await page.find(\"#card-2\");\n      const card1CheckAction = await page.find(`#card-1 >>> .${CSS.checkboxWrapper}`);\n      const card2CheckAction = await page.find(`#card-2 >>> .${CSS.checkboxWrapper}`);\n\n      const cardGroupSelectSpy = await element.spyOnEvent(\"calciteCardGroupSelect\");\n      await assertSelectedItems.setUpEvents(page);\n\n      const cardSelectSpy1 = await card1.spyOnEvent(\"calciteCardSelect\");\n      const cardSelectSpy2 = await card2.spyOnEvent(\"calciteCardSelect\");\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(cardSelectSpy1).toHaveReceivedEventTimes(0);\n      expect(cardSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await assertSelectedItems(page, { expectedItemIds: [card2.id] });\n\n      card1CheckAction.click();\n      await page.waitForChanges();\n      expect(await cardGroupSelectSpy).toHaveReceivedEventTimes(1);\n      expect(await cardSelectSpy1).toHaveReceivedEventTimes(1);\n      expect(await cardSelectSpy2).toHaveReceivedEventTimes(0);\n      expect(await card1.getProperty(\"selected\")).toBe(true);\n      expect(await card2.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await assertSelectedItems(page, { expectedItemIds: [card1.id] });\n\n      card2CheckAction.click();\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(2);\n      expect(cardSelectSpy1).toHaveReceivedEventTimes(1);\n      expect(cardSelectSpy2).toHaveReceivedEventTimes(1);\n      expect(await card1.getProperty(\"selected\")).toBe(false);\n      expect(await card2.getProperty(\"selected\")).toBe(true);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await assertSelectedItems(page, { expectedItemIds: [card2.id] });\n\n      card2CheckAction.click();\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(3);\n      expect(cardSelectSpy1).toHaveReceivedEventTimes(1);\n      expect(cardSelectSpy2).toHaveReceivedEventTimes(2);\n      expect(await card1.getProperty(\"selected\")).toBe(false);\n      expect(await card2.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toEqual([]);\n      await assertSelectedItems(page, { expectedItemIds: [] });\n    });\n\n    it(\"selection mode single-persist allows one card to be selected\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-card-group label=\"test-label\" selection-mode=\"single-persist\">\n          <calcite-card id=\"card-1\" selected label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-2\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        </calcite-card-group>`,\n      );\n      await page.waitForChanges();\n\n      const element = await page.find(\"calcite-card-group\");\n      const card1 = await page.find(\"#card-1\");\n      const card2 = await page.find(\"#card-2\");\n      const card1CheckAction = await page.find(`#card-1 >>> .${CSS.checkboxWrapper}`);\n      const card2CheckAction = await page.find(`#card-2 >>> .${CSS.checkboxWrapper}`);\n\n      const cardGroupSelectSpy = await element.spyOnEvent(\"calciteCardGroupSelect\");\n      await assertSelectedItems.setUpEvents(page);\n\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await assertSelectedItems(page, { expectedItemIds: [card1.id] });\n\n      card1CheckAction.click();\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(1);\n      expect(await card1.getProperty(\"selected\")).toBe(true);\n      expect(await card2.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await assertSelectedItems(page, { expectedItemIds: [card1.id] });\n\n      card2CheckAction.click();\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(2);\n      expect(await card1.getProperty(\"selected\")).toBe(false);\n      expect(await card2.getProperty(\"selected\")).toBe(true);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await assertSelectedItems(page, { expectedItemIds: [card2.id] });\n\n      card2CheckAction.click();\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(3);\n      expect(await card1.getProperty(\"selected\")).toBe(false);\n      expect(await card2.getProperty(\"selected\")).toBe(true);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await assertSelectedItems(page, { expectedItemIds: [card2.id] });\n    });\n\n    it(\"selection mode multiple allows none, one, or multiple to be selected\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-card-group label=\"test-label\" selection-mode=\"multiple\">\n          <calcite-card id=\"card-1\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-2\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-3\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        </calcite-card-group>`,\n      );\n      await page.waitForChanges();\n\n      const element = await page.find(\"calcite-card-group\");\n      const card1 = await page.find(\"#card-1\");\n      const card2 = await page.find(\"#card-2\");\n      const card3 = await page.find(\"#card-3\");\n      const card1CheckAction = await page.find(`#card-1 >>> .${CSS.checkboxWrapper}`);\n      const card2CheckAction = await page.find(`#card-2 >>> .${CSS.checkboxWrapper}`);\n      const card3CheckAction = await page.find(`#card-3 >>> .${CSS.checkboxWrapper}`);\n\n      const cardGroupSelectSpy = await element.spyOnEvent(\"calciteCardGroupSelect\");\n      await assertSelectedItems.setUpEvents(page);\n\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toEqual([]);\n      await assertSelectedItems(page, { expectedItemIds: [] });\n\n      card1CheckAction.click();\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(1);\n      expect(await card1.getProperty(\"selected\")).toBe(true);\n      expect(await card2.getProperty(\"selected\")).toBe(false);\n      expect(await card3.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await assertSelectedItems(page, { expectedItemIds: [card1.id] });\n\n      card2CheckAction.click();\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(2);\n      expect(await card1.getProperty(\"selected\")).toBe(true);\n      expect(await card2.getProperty(\"selected\")).toBe(true);\n      expect(await card3.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(2);\n      await assertSelectedItems(page, { expectedItemIds: [card1.id, card2.id] });\n\n      card3CheckAction.click();\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(3);\n      expect(await card1.getProperty(\"selected\")).toBe(true);\n      expect(await card2.getProperty(\"selected\")).toBe(true);\n      expect(await card3.getProperty(\"selected\")).toBe(true);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(3);\n      await assertSelectedItems(page, { expectedItemIds: [card1.id, card2.id, card3.id] });\n\n      card1CheckAction.click();\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(4);\n      expect(await card1.getProperty(\"selected\")).toBe(false);\n      expect(await card2.getProperty(\"selected\")).toBe(true);\n      expect(await card3.getProperty(\"selected\")).toBe(true);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(2);\n      await assertSelectedItems(page, { expectedItemIds: [card2.id, card3.id] });\n\n      card2CheckAction.click();\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(5);\n      expect(await card1.getProperty(\"selected\")).toBe(false);\n      expect(await card2.getProperty(\"selected\")).toBe(false);\n      expect(await card3.getProperty(\"selected\")).toBe(true);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await assertSelectedItems(page, { expectedItemIds: [card3.id] });\n\n      card3CheckAction.click();\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(6);\n      expect(await card1.getProperty(\"selected\")).toBe(false);\n      expect(await card2.getProperty(\"selected\")).toBe(false);\n      expect(await card3.getProperty(\"selected\")).toBe(false);\n      expect(await element.getProperty(\"selectedItems\")).toEqual([]);\n      await assertSelectedItems(page, { expectedItemIds: [] });\n    });\n  });\n\n  describe(\"focus and interaction function as intended\", () => {\n    it(\"navigation and selection with keyboard works as expected\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-card-group label=\"test-label\" selection-mode=\"multiple\">\n          <calcite-card id=\"card-1\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-2\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-3\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-4\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-5\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        </calcite-card-group>`,\n      );\n\n      const element = await page.find(\"calcite-card-group\");\n      const cardGroupSelectSpy = await element.spyOnEvent(\"calciteCardGroupSelect\");\n      await assertSelectedItems.setUpEvents(page);\n\n      const card1 = await page.find(\"#card-1\");\n      const card2 = await page.find(\"#card-2\");\n      const card3 = await page.find(\"#card-3\");\n      const card4 = await page.find(\"#card-4\");\n      const card5 = await page.find(\"#card-5\");\n\n      await page.keyboard.press(\"Tab\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card1.id);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(0);\n      await assertSelectedItems(page, { expectedItemIds: [] });\n\n      await page.keyboard.press(\"ArrowRight\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card2.id);\n\n      await page.keyboard.press(\"ArrowRight\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card3.id);\n\n      await page.keyboard.press(\"End\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card5.id);\n\n      await page.keyboard.press(\"Space\");\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(1);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await assertSelectedItems(page, { expectedItemIds: [card5.id] });\n\n      await page.keyboard.press(\"ArrowLeft\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card4.id);\n\n      await page.keyboard.press(\"Enter\");\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(2);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(2);\n      await assertSelectedItems(page, { expectedItemIds: [card4.id, card5.id] });\n\n      await page.keyboard.press(\"Space\");\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(3);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(1);\n      await assertSelectedItems(page, { expectedItemIds: [card5.id] });\n\n      await page.keyboard.press(\"Home\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card1.id);\n\n      await page.keyboard.press(\"ArrowLeft\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card5.id);\n\n      await page.keyboard.press(\"ArrowRight\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card1.id);\n    });\n    it(\"navigation with keyboard works as expected when selection mode none (default)\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(\n        html`<calcite-card-group label=\"test-label\">\n          <calcite-card id=\"card-1\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-2\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-3\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-4\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n          <calcite-card id=\"card-5\" label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        </calcite-card-group>`,\n      );\n\n      const element = await page.find(\"calcite-card-group\");\n      const cardGroupSelectSpy = await element.spyOnEvent(\"calciteCardGroupSelect\");\n      await assertSelectedItems.setUpEvents(page);\n\n      const card1 = await page.find(\"#card-1\");\n      const card2 = await page.find(\"#card-2\");\n      const card3 = await page.find(\"#card-3\");\n      const card4 = await page.find(\"#card-4\");\n      const card5 = await page.find(\"#card-5\");\n\n      await page.keyboard.press(\"Tab\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card1.id);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(0);\n      await assertSelectedItems(page, { expectedItemIds: [] });\n\n      await page.keyboard.press(\"ArrowRight\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card2.id);\n\n      await page.keyboard.press(\"ArrowRight\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card3.id);\n\n      await page.keyboard.press(\"End\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card5.id);\n\n      await page.keyboard.press(\"Space\");\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(0);\n      await assertSelectedItems(page, { expectedItemIds: [] });\n\n      await page.keyboard.press(\"ArrowLeft\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card4.id);\n\n      await page.keyboard.press(\"Enter\");\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(0);\n      await assertSelectedItems(page, { expectedItemIds: [] });\n\n      await page.keyboard.press(\"Space\");\n      await page.waitForChanges();\n      expect(cardGroupSelectSpy).toHaveReceivedEventTimes(0);\n      expect(await element.getProperty(\"selectedItems\")).toHaveLength(0);\n      await assertSelectedItems(page, { expectedItemIds: [] });\n\n      await page.keyboard.press(\"Home\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card1.id);\n\n      await page.keyboard.press(\"ArrowLeft\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card5.id);\n\n      await page.keyboard.press(\"ArrowRight\");\n      await page.waitForChanges();\n      expect(await page.evaluate(() => document.activeElement.id)).toEqual(card1.id);\n    });\n  });\n\n  it(\"selectedItems property is correctly populated at load when property is set on cards in DOM\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(\n      html`<calcite-card-group label=\"test-label\" selection-mode=\"multiple\">\n        <calcite-card label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        <calcite-card label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        <calcite-card label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        <calcite-card id=\"card-4\" selected label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n        <calcite-card id=\"card-5\" selected label=\"test-label\"><span slot=\"heading\">Heading</span></calcite-card>\n      </calcite-card-group>`,\n    );\n    const element = await page.find(\"calcite-card-group\");\n    const card4 = await page.find(\"#card-4\");\n    const card5 = await page.find(\"#card-5\");\n    await page.waitForChanges();\n\n    expect(await element.getProperty(\"selectedItems\")).toHaveLength(2);\n    await assertSelectedItems(page, { expectedItemIds: [card4.id, card5.id] });\n  });\n});\n\n// Borrowed from Dropdown until a generic utility is set up.\ninterface SelectedItemsAssertionOptions {\n  /**\n   * IDs from items to assert selection\n   */\n  expectedItemIds: string[];\n}\n\n/**\n * Test helper for selected calcite-card-group items. Expects items to have IDs to test against.\n *\n * Note: assertSelectedItems.setUpEvents must be called before using this method\n *\n * @param page\n * @param root0\n * @param root0.expectedItemIds\n */\nasync function assertSelectedItems(page: E2EPage, { expectedItemIds }: SelectedItemsAssertionOptions): Promise<void> {\n  await page.waitForTimeout(100);\n  const selectedItemIds = await page.evaluate(() => {\n    const cardGroup = document.querySelector<HTMLCalciteCardGroupElement>(\"calcite-card-group\");\n    return cardGroup.selectedItems.map((item) => item.id);\n  });\n\n  expect(selectedItemIds).toHaveLength(expectedItemIds.length);\n\n  expectedItemIds.forEach((itemId, index) => expect(selectedItemIds[index]).toEqual(itemId));\n}\n\ntype SelectionEventTestWindow = GlobalTestProps<{ eventDetail: Selection }>;\n\n/**\n * Helper to wire up the page to assert on the event detail\n *\n * @param page\n */\nassertSelectedItems.setUpEvents = async (page: E2EPage) => {\n  await page.evaluate(() => {\n    document.addEventListener(\"calciteCardGroupSelect\", ({ detail }: CustomEvent<Selection>) => {\n      (window as SelectionEventTestWindow).eventDetail = detail;\n    });\n  });\n};\n"]}