{"version":3,"file":"input-time-zone.e2e.js","sourceRoot":"","sources":["../../../../src/components/input-time-zone/input-time-zone.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from \"@stencil/core/testing\";\nimport { html } from \"../../../support/formatting\";\nimport {\n  accessible,\n  defaults,\n  disabled,\n  focusable,\n  formAssociated,\n  hidden,\n  labelable,\n  reflects,\n  renders,\n  t9n,\n  TagAndPage,\n} from \"../../tests/commonTests\";\nimport { toUserFriendlyName } from \"./utils\";\n\ndescribe(\"calcite-input-time-zone\", () => {\n  // for stability, we use time zones that are unaffected by daylight savings time\n  const testTimeZoneNamesAndOffsets = [\n    { name: \"America/Mexico_City\", offset: -360, label: \"GMT-6\" },\n    { name: \"America/Phoenix\", offset: -420, label: \"GMT-7\" },\n    { name: \"Pacific/Guam\", offset: 600, label: \"GMT+10\" },\n  ];\n\n  async function simpleTestProvider(): Promise<TagAndPage> {\n    const page = await newE2EPage();\n    await page.emulateTimezone(testTimeZoneNamesAndOffsets[0].name);\n    await page.setContent(addTimeZoneNamePolyfill(html`<calcite-input-time-zone></calcite-input-time-zone>`));\n\n    return {\n      page,\n      tag: \"calcite-input-time-zone\",\n    };\n  }\n\n  describe(\"accessible\", () => {\n    accessible(simpleTestProvider);\n  });\n\n  describe(\"focusable\", () => {\n    focusable(simpleTestProvider);\n  });\n\n  describe(\"formAssociated\", () => {\n    formAssociated(\n      {\n        tagOrHTML: addTimeZoneNamePolyfill(html`<calcite-input-time-zone></calcite-input-time-zone>`),\n        beforeContent: async (page) => {\n          await page.emulateTimezone(testTimeZoneNamesAndOffsets[0].name);\n        },\n      },\n      {\n        testValue: \"-360\",\n        clearable: false,\n      },\n    );\n  });\n\n  describe(\"hidden\", () => {\n    hidden(simpleTestProvider);\n  });\n\n  describe(\"renders\", () => {\n    renders(simpleTestProvider, { display: \"block\" });\n  });\n\n  describe(\"labelable\", () => {\n    labelable({\n      tagOrHTML: addTimeZoneNamePolyfill(html`<calcite-input-time-zone></calcite-input-time-zone>`),\n      beforeContent: async (page) => {\n        await page.emulateTimezone(testTimeZoneNamesAndOffsets[0].name);\n      },\n    });\n  });\n\n  describe(\"reflects\", () => {\n    reflects(simpleTestProvider, [\n      { propertyName: \"disabled\", value: true },\n      { propertyName: \"maxItems\", value: 0 },\n      { propertyName: \"mode\", value: \"offset\" },\n      { propertyName: \"open\", value: true },\n      { propertyName: \"scale\", value: \"m\" },\n      { propertyName: \"overlayPositioning\", value: \"absolute\" },\n      { propertyName: \"status\", value: \"invalid\" },\n      { propertyName: \"validationIcon\", value: true },\n    ]);\n  });\n\n  describe(\"defaults\", () => {\n    defaults(simpleTestProvider, [\n      { propertyName: \"disabled\", defaultValue: false },\n      { propertyName: \"maxItems\", defaultValue: 0 },\n      { propertyName: \"messageOverrides\", defaultValue: undefined },\n      { propertyName: \"mode\", defaultValue: \"offset\" },\n      { propertyName: \"open\", defaultValue: false },\n      { propertyName: \"overlayPositioning\", defaultValue: \"absolute\" },\n      { propertyName: \"scale\", defaultValue: \"m\" },\n      { propertyName: \"status\", defaultValue: \"idle\" },\n      { propertyName: \"validationIcon\", defaultValue: undefined },\n      { propertyName: \"validationMessage\", defaultValue: undefined },\n    ]);\n  });\n\n  describe(\"disabled\", () => {\n    disabled(simpleTestProvider, {\n      shadowAriaAttributeTargetSelector: \"calcite-combobox\",\n    });\n  });\n\n  describe(\"t9n\", () => {\n    t9n(simpleTestProvider);\n  });\n\n  describe(\"mode\", () => {\n    describe(\"offset (default)\", () => {\n      describe(\"selects user's matching time zone offset on initialization\", () => {\n        testTimeZoneNamesAndOffsets.forEach(({ name, offset, label }) => {\n          it(`selects default time zone for \"${name}\"`, async () => {\n            const page = await newE2EPage();\n            await page.emulateTimezone(name);\n            await page.setContent(addTimeZoneNamePolyfill(html`<calcite-input-time-zone></calcite-input-time-zone>`));\n            await page.waitForChanges();\n\n            const input = await page.find(\"calcite-input-time-zone\");\n            expect(await input.getProperty(\"value\")).toBe(`${offset}`);\n\n            const timeZoneItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item[selected]\");\n\n            expect(await timeZoneItem.getProperty(\"textLabel\")).toMatch(label);\n          });\n        });\n      });\n\n      it(\"allows users to preselect a time zone offset\", async () => {\n        const page = await newE2EPage();\n        await page.emulateTimezone(testTimeZoneNamesAndOffsets[0].name);\n        await page.setContent(\n          await addTimeZoneNamePolyfill(\n            html`<calcite-input-time-zone value=\"${testTimeZoneNamesAndOffsets[1].offset}\"></calcite-input-time-zone>`,\n          ),\n        );\n\n        const input = await page.find(\"calcite-input-time-zone\");\n\n        expect(await input.getProperty(\"value\")).toBe(`${testTimeZoneNamesAndOffsets[1].offset}`);\n\n        const timeZoneItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item[selected]\");\n\n        expect(await timeZoneItem.getProperty(\"textLabel\")).toMatch(testTimeZoneNamesAndOffsets[1].label);\n      });\n\n      it(\"ignores invalid values\", async () => {\n        const page = await newE2EPage();\n        await page.emulateTimezone(testTimeZoneNamesAndOffsets[0].name);\n        await page.setContent(\n          await addTimeZoneNamePolyfill(html`<calcite-input-time-zone value=\"9000\"></calcite-input-time-zone>`),\n        );\n\n        const input = await page.find(\"calcite-input-time-zone\");\n\n        expect(await input.getProperty(\"value\")).toBe(`${testTimeZoneNamesAndOffsets[0].offset}`);\n\n        const timeZoneItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item[selected]\");\n\n        expect(await timeZoneItem.getProperty(\"textLabel\")).toMatch(testTimeZoneNamesAndOffsets[0].label);\n      });\n\n      it(\"omits filtered or non-localized time zones (incoming to browser)\", async () => {\n        const page = await newE2EPage();\n        await page.emulateTimezone(testTimeZoneNamesAndOffsets[0].name);\n        await page.setContent(\n          await addTimeZoneNamePolyfill(html`<calcite-input-time-zone value=\"600\"></calcite-input-time-zone>`),\n        );\n\n        const input = await page.find(\"calcite-input-time-zone\");\n\n        expect(await input.getProperty(\"value\")).toBe(`${testTimeZoneNamesAndOffsets[2].offset}`);\n\n        const timeZoneItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item[selected]\");\n\n        expect(await timeZoneItem.getProperty(\"textLabel\")).toMatch(testTimeZoneNamesAndOffsets[2].label);\n      });\n\n      it(\"looks up in label and time zone groups (not displayed)\", async () => {\n        const displayLabelSearchTerm = \"Guam\";\n        const groupedTimeZoneSearchTerm = \"Chuuk\";\n        const gmtSearchTerm = \"GMT-12\";\n        const searchTerms = [displayLabelSearchTerm, groupedTimeZoneSearchTerm, gmtSearchTerm];\n\n        const page = await newE2EPage();\n        await page.emulateTimezone(testTimeZoneNamesAndOffsets[0].name);\n        await page.setContent(await addTimeZoneNamePolyfill(html`<calcite-input-time-zone></calcite-input-time-zone>`));\n\n        const input = await page.find(\"calcite-input-time-zone\");\n\n        async function clearSearchTerm(searchTerm: string): Promise<void> {\n          for (let i = 0; i < searchTerm.length; i++) {\n            await input.press(\"Backspace\");\n          }\n        }\n\n        let matchedTimeZoneItems = await page.findAll(\n          \"calcite-input-time-zone >>> calcite-combobox-item:not([hidden])\",\n        );\n        expect(matchedTimeZoneItems.length).toBeGreaterThan(1);\n\n        await input.click();\n        await input.type(searchTerms[0]);\n        await page.waitForChanges();\n\n        matchedTimeZoneItems = await page.findAll(\"calcite-input-time-zone >>> calcite-combobox-item:not([hidden])\");\n\n        expect(matchedTimeZoneItems).toHaveLength(1);\n\n        await clearSearchTerm(searchTerms[0]);\n        await input.type(searchTerms[1]);\n        await page.waitForChanges();\n\n        matchedTimeZoneItems = await page.findAll(\"calcite-input-time-zone >>> calcite-combobox-item:not([hidden])\");\n\n        expect(matchedTimeZoneItems).toHaveLength(1);\n\n        await clearSearchTerm(searchTerms[1]);\n        await input.type(searchTerms[2]);\n        await page.waitForChanges();\n\n        matchedTimeZoneItems = await page.findAll(\"calcite-input-time-zone >>> calcite-combobox-item:not([hidden])\");\n\n        expect(matchedTimeZoneItems).toHaveLength(2);\n\n        await clearSearchTerm(searchTerms[1]);\n        await page.waitForChanges();\n\n        matchedTimeZoneItems = await page.findAll(\"calcite-input-time-zone >>> calcite-combobox-item:not([hidden])\");\n\n        expect(matchedTimeZoneItems.length).toBeGreaterThan(1);\n      });\n    });\n\n    describe(\"name\", () => {\n      describe(\"selects user's matching time zone name on initialization\", () => {\n        testTimeZoneNamesAndOffsets.forEach(({ name }) => {\n          it(`selects default time zone for \"${name}\"`, async () => {\n            const page = await newE2EPage();\n            await page.emulateTimezone(name);\n            await page.setContent(\n              await addTimeZoneNamePolyfill(html`<calcite-input-time-zone mode=\"name\"></calcite-input-time-zone>`),\n            );\n            await page.waitForChanges();\n\n            const input = await page.find(\"calcite-input-time-zone\");\n            expect(await input.getProperty(\"value\")).toBe(name);\n\n            const timeZoneItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item[selected]\");\n\n            expect(await timeZoneItem.getProperty(\"textLabel\")).toMatch(toUserFriendlyName(name));\n          });\n        });\n      });\n\n      it(\"allows users to preselect a time zone by name\", async () => {\n        const page = await newE2EPage();\n        await page.emulateTimezone(testTimeZoneNamesAndOffsets[0].name);\n        await page.setContent(\n          await addTimeZoneNamePolyfill(\n            html`<calcite-input-time-zone\n              mode=\"name\"\n              value=\"${testTimeZoneNamesAndOffsets[1].name}\"\n            ></calcite-input-time-zone>`,\n          ),\n        );\n\n        const input = await page.find(\"calcite-input-time-zone\");\n\n        expect(await input.getProperty(\"value\")).toBe(testTimeZoneNamesAndOffsets[1].name);\n\n        const timeZoneItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item[selected]\");\n\n        expect(await timeZoneItem.getProperty(\"textLabel\")).toMatch(\n          toUserFriendlyName(testTimeZoneNamesAndOffsets[1].name),\n        );\n      });\n\n      it(\"ignores invalid values\", async () => {\n        const page = await newE2EPage();\n        await page.emulateTimezone(testTimeZoneNamesAndOffsets[0].name);\n        await page.setContent(\n          await addTimeZoneNamePolyfill(\n            html`<calcite-input-time-zone mode=\"name\" value=\"Does/Not/Exist\"></calcite-input-time-zone>`,\n          ),\n        );\n\n        const input = await page.find(\"calcite-input-time-zone\");\n\n        expect(await input.getProperty(\"value\")).toBe(testTimeZoneNamesAndOffsets[0].name);\n\n        const timeZoneItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item[selected]\");\n\n        expect(await timeZoneItem.getProperty(\"textLabel\")).toMatch(\n          toUserFriendlyName(testTimeZoneNamesAndOffsets[0].name),\n        );\n      });\n    });\n  });\n\n  it(\"does not allow users to deselect a time zone offset\", async () => {\n    const page = await newE2EPage();\n    await page.emulateTimezone(testTimeZoneNamesAndOffsets[0].name);\n    await page.setContent(\n      addTimeZoneNamePolyfill(html`\n        <calcite-input-time-zone value=\"${testTimeZoneNamesAndOffsets[1].offset}\" open></calcite-input-time-zone>\n      `),\n    );\n    await page.waitForChanges();\n\n    let selectedTimeZoneItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item[selected]\");\n    await selectedTimeZoneItem.click();\n    await page.waitForChanges();\n\n    selectedTimeZoneItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item[selected]\");\n    const input = await page.find(\"calcite-input-time-zone\");\n\n    expect(await input.getProperty(\"value\")).toBe(`${testTimeZoneNamesAndOffsets[1].offset}`);\n    expect(await selectedTimeZoneItem.getProperty(\"textLabel\")).toMatch(testTimeZoneNamesAndOffsets[1].label);\n  });\n\n  it(\"supports setting maxItems to display\", async () => {\n    const page = await newE2EPage();\n    await page.emulateTimezone(testTimeZoneNamesAndOffsets[0].name);\n    await page.setContent(\n      addTimeZoneNamePolyfill(html`<calcite-input-time-zone max-items=\"7\"></calcite-input-time-zone>`),\n    );\n    const internalCombobox = await page.find(\"calcite-input-time-zone >>> calcite-combobox\");\n\n    // we assume maxItems works properly on combobox\n    expect(await internalCombobox.getProperty(\"maxItems\")).toBe(7);\n  });\n\n  it(\"recreates time zone items when item-dependent props change\", async () => {\n    const page = await newE2EPage();\n    await page.emulateTimezone(testTimeZoneNamesAndOffsets[0].name);\n    await page.setContent(addTimeZoneNamePolyfill(html`<calcite-input-time-zone></calcite-input-time-zone>`));\n    const inputTimeZone = await page.find(\"calcite-input-time-zone\");\n\n    let prevComboboxItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item\");\n    await inputTimeZone.setProperty(\"lang\", \"es\");\n    await page.waitForChanges();\n\n    let currComboboxItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item\");\n    expect(currComboboxItem).not.toBe(prevComboboxItem);\n\n    prevComboboxItem = currComboboxItem;\n    await inputTimeZone.setProperty(\"referenceDate\", \"2021-01-01\");\n    await page.waitForChanges();\n\n    currComboboxItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item\");\n    expect(currComboboxItem).not.toBe(prevComboboxItem);\n\n    prevComboboxItem = currComboboxItem;\n    await inputTimeZone.setProperty(\"mode\", \"list\");\n    await page.waitForChanges();\n\n    currComboboxItem = await page.find(\"calcite-input-time-zone >>> calcite-combobox-item\");\n    expect(currComboboxItem).not.toBe(prevComboboxItem);\n  });\n});\n\n/**\n * Helper to inject an Intl polyfill to support time zone-related APIs\n * Extended due to lack of support for \"Intl.DateTimeFormatOptions#timeZoneName\" in Chromium v92 (bundled in Puppeteer v10).\n *\n * @param testHtml\n */\nfunction addTimeZoneNamePolyfill(testHtml: string): string {\n  return html`<script type=\"module\">\n      const OriginalDateTimeFormat = Intl.DateTimeFormat;\n\n      class ExtendedDateTimeFormat extends OriginalDateTimeFormat {\n        constructor(locales, options) {\n          const originalOptions = { ...options };\n          delete options?.timeZoneName;\n          super(locales, options);\n          this.originalOptions = originalOptions;\n        }\n\n        formatToParts(date) {\n          const originalParts = super.formatToParts(date);\n          const timeZoneName = this.originalOptions.timeZoneName;\n\n          if (timeZoneName === \"shortOffset\") {\n            const { timeZone } = this.originalOptions;\n            let offsetString;\n\n            // hardcoding GMT and time zone names for this particular test suite\n            if (timeZone.includes(\"Etc/\")) {\n              offsetString = timeZone.replace(\"Etc/\", \"GMT\");\n\n              // Etc/x time zones have the opposite sign of the offset\n              if (offsetString.includes(\"+\")) {\n                offsetString = offsetString.replace(\"+\", \"-\");\n              } else if (offsetString.includes(\"-\")) {\n                offsetString = offsetString.replace(\"-\", \"+\");\n              }\n            } else {\n              offsetString =\n                \"GMT\" +\n                (timeZone === \"America/Mexico_City\"\n                  ? \"-6\"\n                  : timeZone === \"America/Phoenix\"\n                    ? \"-7\"\n                    : timeZone === \"Pacific/Guam\" || timeZone === \"Pacific/Chuuk\"\n                      ? \"+10\"\n                      : \"+0\");\n            }\n\n            originalParts.push({ type: \"timeZoneName\", value: offsetString });\n          }\n\n          return originalParts;\n        }\n\n        resolvedOptions() {\n          const originalResolvedOptions = OriginalDateTimeFormat.prototype.resolvedOptions;\n          const options = originalResolvedOptions.call(this);\n          const timeZoneName = options.timeZoneName;\n\n          if (timeZoneName === \"shortOffset\") {\n            options.timeZoneName = undefined;\n            options.timeZone = options.timeZone || \"UTC\";\n            return options;\n          }\n\n          return options;\n        }\n      }\n\n      Intl.DateTimeFormat = ExtendedDateTimeFormat;\n\n      Intl.supportedValuesOf = function (key) {\n        if (key === \"timeZone\") {\n          return [\n            \"America/Mexico_City\",\n            \"America/Phoenix\",\n            \"Pacific/Guam\",\n\n            // not available in Chromium v92 at time of testing\n            \"Etc/GMT+1\",\n            \"Etc/GMT+10\",\n            \"Etc/GMT+11\",\n            \"Etc/GMT+12\",\n            \"Etc/GMT+2\",\n            \"Etc/GMT+3\",\n            \"Etc/GMT+4\",\n            \"Etc/GMT+5\",\n            \"Etc/GMT+6\",\n            \"Etc/GMT+7\",\n            \"Etc/GMT+8\",\n            \"Etc/GMT+9\",\n            \"Etc/GMT-1\",\n            \"Etc/GMT-10\",\n            \"Etc/GMT-11\",\n            \"Etc/GMT-12\",\n            \"Etc/GMT-13\",\n            \"Etc/GMT-14\",\n            \"Etc/GMT-2\",\n            \"Etc/GMT-3\",\n            \"Etc/GMT-4\",\n            \"Etc/GMT-5\",\n            \"Etc/GMT-6\",\n            \"Etc/GMT-7\",\n            \"Etc/GMT-8\",\n            \"Etc/GMT-9\",\n            \"Pacific/Chuuk\",\n          ];\n        }\n      };\n    </script>\n    ${testHtml}`;\n}\n"]}