{"version":3,"file":"segmented-control-item.js","sourceRoot":"","sources":["../../../../src/components/segmented-control-item/segmented-control-item.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,OAAO,EACP,KAAK,EAEL,CAAC,EACD,IAAI,EACJ,IAAI,EAEJ,KAAK,GACN,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAOzC,MAAM,OAAO,oBAAoB;;uBASmB,KAAK;2BAQhB,KAAK;;;;0BAoBoC,OAAO;sBAO9D,YAAY;qBAOd,GAAG;;IAvChB,mBAAmB;QAC3B,IAAI,CAAC,yCAAyC,CAAC,IAAI,EAAE,CAAC;IACxD,CAAC;IAuCD,4EAA4E;IAC5E,EAAE;IACF,aAAa;IACb,EAAE;IACF,4EAA4E;IAE5E,MAAM;QACJ,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAE3D,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CACnC,oBACE,KAAK,EAAE,GAAG,CAAC,wBAAwB,EACnC,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,IAAI,EAAE,IAAI,CAAC,SAAS,EACpB,GAAG,EAAC,YAAY,EAChB,KAAK,EAAC,GAAG,GACT,CACH,CAAC,CAAC,CAAC,IAAI,CAAC;QAET,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAC/B,oBACE,KAAK,EAAE,GAAG,CAAC,wBAAwB,EACnC,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,IAAI,EAAE,IAAI,CAAC,OAAO,EAClB,GAAG,EAAC,UAAU,EACd,KAAK,EAAC,GAAG,GACT,CACH,CAAC,CAAC,CAAC,IAAI,CAAC;QAET,OAAO,CACL,EAAC,IAAI,oBAAe,aAAa,CAAC,OAAO,CAAC,gBAAc,KAAK,EAAE,IAAI,EAAC,OAAO;YACzE,aACE,KAAK,EAAE;oBACL,gBAAgB,EAAE,KAAK,KAAK,GAAG;oBAC/B,gBAAgB,EAAE,KAAK,KAAK,GAAG;oBAC/B,gBAAgB,EAAE,KAAK,KAAK,GAAG;oBAC/B,mBAAmB,EAAE,MAAM,KAAK,YAAY;oBAC5C,gBAAgB,EAAE,UAAU,KAAK,SAAS;oBAC1C,qBAAqB,EAAE,UAAU,KAAK,cAAc;iBACrD;gBAEA,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI;gBACpC,gBAAO,KAAK,CAAQ;gBACpB,YAAM,IAAI,EAAE,KAAK,CAAC,KAAK,GAAI;gBAC1B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAC1B,CACH,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAuBF","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { Appearance, Layout, Scale } from \"../interfaces\";\nimport { CSS, SLOTS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-segmented-control-item\",\n  styleUrl: \"segmented-control-item.scss\",\n  shadow: true,\n})\nexport class SegmentedControlItem {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is checked. */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by form module\n  @Prop({ reflect: true, mutable: true }) checked = false;\n\n  @Watch(\"checked\")\n  protected handleCheckedChange(): void {\n    this.calciteInternalSegmentedControlItemChange.emit();\n  }\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: string;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: string;\n\n  /**\n   * The component's value.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by form module\n  @Prop({ mutable: true })\n  value: any | null;\n\n  /**\n   * Specifies the appearance style of the component inherited from parent `calcite-segmented-control`, defaults to `solid`.\n   *\n   * @internal\n   */\n  @Prop() appearance: Extract<\"outline\" | \"outline-fill\" | \"solid\", Appearance> = \"solid\";\n\n  /**\n   * Defines the layout of the component inherited from parent `calcite-segmented-control`, defaults to `horizontal`.\n   *\n   * @internal\n   */\n  @Prop() layout: Layout = \"horizontal\";\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-segmented-control`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const { appearance, checked, layout, scale, value } = this;\n\n    const iconStartEl = this.iconStart ? (\n      <calcite-icon\n        class={CSS.segmentedControlItemIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.iconStart}\n        key=\"icon-start\"\n        scale=\"s\"\n      />\n    ) : null;\n\n    const iconEndEl = this.iconEnd ? (\n      <calcite-icon\n        class={CSS.segmentedControlItemIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.iconEnd}\n        key=\"icon-end\"\n        scale=\"s\"\n      />\n    ) : null;\n\n    return (\n      <Host aria-checked={toAriaBoolean(checked)} aria-label={value} role=\"radio\">\n        <label\n          class={{\n            \"label--scale-s\": scale === \"s\",\n            \"label--scale-m\": scale === \"m\",\n            \"label--scale-l\": scale === \"l\",\n            \"label--horizontal\": layout === \"horizontal\",\n            \"label--outline\": appearance === \"outline\",\n            \"label--outline-fill\": appearance === \"outline-fill\",\n          }}\n        >\n          {this.iconStart ? iconStartEl : null}\n          <slot>{value}</slot>\n          <slot name={SLOTS.input} />\n          {this.iconEnd ? iconEndEl : null}\n        </label>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSegmentedControlItemElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the item has been selected.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalSegmentedControlItemChange: EventEmitter<void>;\n}\n"]}