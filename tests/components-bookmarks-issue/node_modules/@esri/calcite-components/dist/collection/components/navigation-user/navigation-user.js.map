{"version":3,"file":"navigation-user.js","sourceRoot":"","sources":["../../../../src/components/navigation-user/navigation-user.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAS,MAAM,EAAE,MAAM,eAAe,CAAC;AACjF,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAC;AAClC,OAAO,EAEL,kBAAkB,EAClB,kBAAkB,EAClB,sBAAsB,GACvB,MAAM,sBAAsB,CAAC;AAS9B,MAAM,OAAO,qBAAqB;;;;;4BAiBQ,KAAK;;;;;IAW7C,4EAA4E;IAC5E,EAAE;IACF,kBAAkB;IAClB,EAAE;IACF,4EAA4E;IAE5E,mCAAmC;IAEnC,KAAK,CAAC,QAAQ;QACZ,MAAM,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;IAClB,CAAC;IAUD,4EAA4E;IAC5E,EAAE;IACF,aAAa;IACb,EAAE;IACF,4EAA4E;IAE5E,iBAAiB;QACf,sBAAsB,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,gBAAgB;QACd,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,6EAA6E;IAC7E,EAAE;IACF,kBAAkB;IAClB,EAAE;IACF,6EAA6E;IAE7E,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,4BAAoB,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,MAAM;gBAC/C,mCACa,IAAI,CAAC,QAAQ,EACxB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,SAAS,EAAE,IAAI,CAAC,SAAS,aAChB,IAAI,CAAC,MAAM,EACpB,QAAQ,EAAE,IAAI,CAAC,QAAQ,GACvB;gBACD,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CACzD,WAAK,KAAK,EAAE,GAAG,CAAC,aAAa;oBAC1B,IAAI,CAAC,QAAQ,IAAI,CAChB,YAAM,KAAK,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,QAAQ,IACzC,IAAI,CAAC,QAAQ,CACT,CACR;oBACA,IAAI,CAAC,QAAQ,IAAI,CAChB,YAAM,KAAK,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,QAAQ,IACzC,IAAI,CAAC,QAAQ,CACT,CACR,CACG,CACP,CACM,CACJ,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, h, Host, Prop, VNode, Method } from \"@stencil/core\";\nimport { CSS } from \"./resources\";\nimport {\n  LoadableComponent,\n  componentFocusable,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n@Component({\n  tag: \"calcite-navigation-user\",\n  styleUrl: \"navigation-user.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class CalciteNavigationUser implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is highlighted.*/\n  @Prop({ reflect: true }) active: boolean;\n\n  /** Specifies the full name of the user.*/\n  @Prop() fullName: string;\n\n  /** Describes the appearance of the avatar. If no label is provided, context will not be provided to assistive technologies.*/\n  @Prop() label: string;\n\n  /** When `true`, hides the `fullName` and `username` contents.*/\n  @Prop({ reflect: true }) textDisabled = false;\n\n  /** Specifies the `src` to an image (remember to add a token if the user is private).*/\n  @Prop() thumbnail: string;\n\n  /** Specifies the unique id of the user.*/\n  @Prop() userId: string;\n\n  /** Specifies the username of the user.*/\n  @Prop() username: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteNavigationUserElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      <Host>\n        <button aria-label={this.label} class={CSS.button}>\n          <calcite-avatar\n            full-name={this.fullName}\n            label={this.label}\n            thumbnail={this.thumbnail}\n            user-id={this.userId}\n            username={this.username}\n          />\n          {(this.fullName || this.username) && !this.textDisabled && (\n            <div class={CSS.textContainer}>\n              {this.fullName && (\n                <span class={CSS.fullName} key={CSS.fullName}>\n                  {this.fullName}\n                </span>\n              )}\n              {this.username && (\n                <span class={CSS.username} key={CSS.username}>\n                  {this.username}\n                </span>\n              )}\n            </div>\n          )}\n        </button>\n      </Host>\n    );\n  }\n}\n"]}