{"version":3,"file":"menu-item.e2e.js","sourceRoot":"","sources":["../../../../src/components/menu-item/menu-item.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from \"@stencil/core/testing\";\nimport { html } from \"../../../support/formatting\";\nimport { accessible, focusable, hidden, reflects, renders, t9n } from \"../../tests/commonTests\";\nimport { getFocusedElementProp } from \"../../tests/utils\";\n\ndescribe(\"calcite-menu-item\", () => {\n  describe(\"renders\", () => {\n    renders(\"calcite-menu-item\", { display: \"flex\" });\n  });\n\n  describe(\"reflects\", () => {\n    reflects(\"calcite-menu-item\", [\n      {\n        propertyName: \"active\",\n        value: \"true\",\n      },\n      {\n        propertyName: \"target\",\n        value: \"_blank\",\n      },\n    ]);\n  });\n\n  describe(\"honors hidden attribute\", () => {\n    hidden(\"calcite-menu-item\");\n  });\n\n  describe(\"accessible\", () => {\n    accessible(html`<calcite-menu><calcite-menu-item text=\"calcite\"></calcite-menu-item></calcite-menu>`);\n  });\n\n  describe(\"is focusable\", () => {\n    focusable(\"calcite-menu-item\");\n  });\n\n  describe(\"translation support\", () => {\n    t9n(\"calcite-menu-item\");\n  });\n\n  it(\"should emit calciteMenuItemSelect event on user click\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(html` <calcite-menu-item id=\"Nature\" text=\"Nature\" href=\"#nature\"> </calcite-menu-item> `);\n\n    const menuItem = await page.find(\"calcite-menu-item\");\n    const eventSpy = await menuItem.spyOnEvent(\"calciteMenuItemSelect\");\n\n    await menuItem.click();\n    await page.waitForChanges();\n    expect(await getFocusedElementProp(page, \"id\")).toBe(\"Nature\");\n    expect(eventSpy).toHaveReceivedEventTimes(1);\n  });\n\n  describe(\"href support\", () => {\n    const testHref = \"#nature\";\n    const testEl = `<calcite-menu><calcite-menu-item id=\"Nature\" text=\"Nature\" href=\"${testHref}\"></calcite-menu-item></calcite-menu>`;\n\n    it(\"should navigate to a new url when href provided and user interacts with click\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(html`${testEl}`);\n      const originalUrl = page.url();\n      await page.waitForChanges();\n\n      const menuItem = await page.find(\"calcite-menu-item\");\n      await page.waitForChanges();\n      await menuItem.click();\n      await page.waitForChanges();\n      const newUrl = page.url();\n      expect(newUrl).toEqual(originalUrl + testHref);\n    });\n\n    it(\"should navigate to a new url when href provided and user interacts with `enter` key\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(html`${testEl}`);\n      const originalUrl = page.url();\n      await page.waitForChanges();\n\n      await page.keyboard.press(\"Tab\");\n      await page.waitForChanges();\n      await page.keyboard.press(\"Enter\");\n      await page.waitForChanges();\n      const newUrl = page.url();\n      expect(newUrl).toEqual(originalUrl + testHref);\n    });\n  });\n\n  it(\"should emit calciteMenuItemSelect event when user select the text area of the component using Enter or Space key\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(html`\n      <calcite-menu>\n        <calcite-menu-item id=\"Nature\" text=\"Nature\" href=\"#nature\">\n          <calcite-menu-item id=\"Mountains\" text=\"Mountains\" slot=\"submenu-item\"> </calcite-menu-item>\n          <calcite-menu-item id=\"Rivers\" text=\"Rivers\" slot=\"submenu-item\"> </calcite-menu-item>\n        </calcite-menu-item>\n      </calcite-menu>\n    `);\n\n    const element = await page.find(\"calcite-menu-item\");\n    const eventSpy = await element.spyOnEvent(\"calciteMenuItemSelect\");\n\n    await page.keyboard.press(\"Tab\");\n    await page.waitForChanges();\n    expect(await getFocusedElementProp(page, \"id\")).toBe(\"Nature\");\n    expect(eventSpy).not.toHaveReceivedEvent();\n\n    await page.keyboard.press(\"Enter\");\n    await page.waitForChanges();\n    expect(eventSpy).toHaveReceivedEventTimes(1);\n\n    await page.keyboard.press(\"Space\");\n    await page.waitForChanges();\n    expect(eventSpy).toHaveReceivedEventTimes(2);\n\n    await page.keyboard.press(\"Tab\");\n    await page.waitForChanges();\n    expect(await getFocusedElementProp(page, \"id\")).toBe(\"Nature\");\n    expect(eventSpy).toHaveReceivedEventTimes(2);\n  });\n});\n"]}