{"version":3,"file":"color-picker-hex-input.e2e.js","sourceRoot":"","sources":["../../../../src/components/color-picker-hex-input/color-picker-hex-input.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EElement, E2EPage, newE2EPage } from \"@stencil/core/testing\";\nimport { accessible, defaults, focusable, hidden, reflects, renders } from \"../../tests/commonTests\";\nimport { selectText } from \"../../tests/utils\";\nimport { canConvertToHexa, isValidHex, normalizeHex } from \"../color-picker/utils\";\nimport { CSS } from \"./resources\";\n\ndescribe(\"calcite-color-picker-hex-input\", () => {\n  describe(\"renders\", () => {\n    renders(\"calcite-color-picker-hex-input\", { display: \"block\" });\n  });\n\n  describe(\"honors hidden attribute\", () => {\n    hidden(\"calcite-color-picker-hex-input\");\n  });\n\n  describe(\"accessible\", () => {\n    accessible(\"calcite-color-picker-hex-input\");\n    accessible(\"<calcite-color-picker-hex-input color='#c0ffee'></calcite-color-picker-hex-input>\");\n    accessible(\"<calcite-color-picker-hex-input allow-empty color=''></calcite-color-picker-hex-input>\");\n  });\n\n  describe(\"defaults\", () => {\n    defaults(\"calcite-color-picker-hex-input\", [\n      {\n        propertyName: \"allowEmpty\",\n        defaultValue: false,\n      },\n      {\n        propertyName: \"alphaChannel\",\n        defaultValue: false,\n      },\n      {\n        propertyName: \"value\",\n        defaultValue: \"#000000\",\n      },\n    ]);\n  });\n\n  describe(\"reflects\", () => {\n    reflects(\"calcite-color-picker-hex-input\", [\n      {\n        propertyName: \"value\",\n        value: \"#ffffff\",\n      },\n    ]);\n  });\n\n  describe(\"can be focused\", () => {\n    focusable(\"calcite-color-picker-hex-input\");\n  });\n\n  it(\"supports no color\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(\"<calcite-color-picker-hex-input allow-empty></calcite-color-picker-hex-input>\");\n\n    const input = await page.find(`calcite-color-picker-hex-input`);\n    input.setProperty(\"value\", null);\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(null);\n    expect(input.getAttribute(\"value\")).toBe(null);\n\n    const internalInput = await page.find(`calcite-color-picker-hex-input >>> .${CSS.hexInput}`);\n    expect(await internalInput.getProperty(\"value\")).toBe(\"\");\n  });\n\n  it(\"accepts shorthand hex\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(\"<calcite-color-picker-hex-input></calcite-color-picker-hex-input>\");\n\n    const input = await page.find(`calcite-color-picker-hex-input`);\n    input.setProperty(\"value\", \"#abc\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(\"#aabbcc\");\n  });\n\n  it(\"accepts shorthand hexa\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(\"<calcite-color-picker-hex-input alpha-channel></calcite-color-picker-hex-input>\");\n\n    const input = await page.find(`calcite-color-picker-hex-input`);\n    input.setProperty(\"value\", \"#abcd\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(\"#aabbccdd\");\n  });\n\n  it(\"accepts longhand hex\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(\"<calcite-color-picker-hex-input></calcite-color-picker-hex-input>\");\n\n    const input = await page.find(`calcite-color-picker-hex-input`);\n    input.setProperty(\"value\", \"#fafafa\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(\"#fafafa\");\n  });\n\n  it(\"accepts longhand hexa\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(\"<calcite-color-picker-hex-input alpha-channel></calcite-color-picker-hex-input>\");\n\n    const input = await page.find(`calcite-color-picker-hex-input`);\n    input.setProperty(\"value\", \"#fafafafa\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(\"#fafafafa\");\n  });\n\n  it(\"normalizes value when initialized\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(\"<calcite-color-picker-hex-input value='#f0f'></calcite-color-picker-hex-input>\");\n    const input = await page.find(`calcite-color-picker-hex-input`);\n\n    expect(await input.getProperty(\"value\")).toBe(\"#ff00ff\");\n  });\n\n  it(\"normalizes hexa value when initialized\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(\n      \"<calcite-color-picker-hex-input alpha-channel value='#f0f0'></calcite-color-picker-hex-input>\",\n    );\n    const input = await page.find(`calcite-color-picker-hex-input`);\n\n    expect(await input.getProperty(\"value\")).toBe(\"#ff00ff00\");\n  });\n\n  it(\"ignores invalid hex\", async () => {\n    const hex = \"#b33f33\";\n    const page = await newE2EPage();\n    await page.setContent(`<calcite-color-picker-hex-input value='${hex}'></calcite-color-picker-hex-input>`);\n    const input = await page.find(`calcite-color-picker-hex-input`);\n\n    input.setProperty(\"value\", null);\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n\n    input.setProperty(\"value\", \"wrong\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n\n    input.setProperty(\"value\", \"#\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n\n    input.setProperty(\"value\", \"#a\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n\n    input.setProperty(\"value\", \"#aa\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n\n    input.setProperty(\"value\", \"#aaaa\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n\n    input.setProperty(\"value\", \"#aaaaa\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n  });\n\n  it(\"ignores invalid hexa\", async () => {\n    const hex = \"#b33f33ff\";\n    const page = await newE2EPage();\n    await page.setContent(\n      `<calcite-color-picker-hex-input alpha-channel value='${hex}'></calcite-color-picker-hex-input>`,\n    );\n    const input = await page.find(`calcite-color-picker-hex-input`);\n\n    input.setProperty(\"value\", null);\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n\n    input.setProperty(\"value\", \"wrong\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n\n    input.setProperty(\"value\", \"#\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n\n    input.setProperty(\"value\", \"#a\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n\n    input.setProperty(\"value\", \"#aa\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n\n    input.setProperty(\"value\", \"#aaaaa\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n\n    input.setProperty(\"value\", \"#aaaaaaa\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(hex);\n  });\n\n  it(\"emits event when color changes via user and not programmatically\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(\"<calcite-color-picker-hex-input value='#b33f33'></calcite-color-picker-hex-input>\");\n\n    const input = await page.find(\"calcite-color-picker-hex-input\");\n    const spy = await input.spyOnEvent(\"calciteColorPickerHexInputChange\");\n\n    input.setProperty(\"value\", \"#abcdef\");\n    await page.waitForChanges();\n\n    expect(spy).toHaveReceivedEventTimes(0);\n\n    await selectText(input);\n    await page.keyboard.type(\"abc\");\n    await page.keyboard.press(\"Enter\");\n    await page.waitForChanges();\n\n    expect(spy).toHaveReceivedEventTimes(1);\n  });\n\n  it(\"prevents entering chars if invalid hex chars or it exceeds max hex length\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(\"<calcite-color-picker-hex-input value='#b33f33'></calcite-color-picker-hex-input>\");\n    const input = await page.find(\"calcite-color-picker-hex-input\");\n    const selectAllText = async (): Promise<void> => await input.click({ clickCount: 3 });\n\n    await selectAllText();\n    await page.keyboard.type(\"zaaaz\");\n    await page.keyboard.press(\"Enter\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(\"#aaaaaa\");\n\n    await selectAllText();\n    await page.keyboard.type(\"bbbbbbc\");\n    await page.keyboard.press(\"Enter\");\n    await page.waitForChanges();\n\n    expect(await input.getProperty(\"value\")).toBe(\"#bbbbbb\");\n  });\n\n  it(\"prevents entering chars if invalid hexa chars or it exceeds max hexa length\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(\n      \"<calcite-color-picker-hex-input alpha-channel value='#b33f33'></calcite-color-picker-hex-input>\",\n    );\n    const input = await page.find(\"calcite-color-picker-hex-input\");\n    const blockedCharsAndLonghandHexa = \"zabcdz\";\n\n    await selectText(input);\n    await page.keyboard.type(blockedCharsAndLonghandHexa);\n    await page.keyboard.press(\"Enter\");\n    await page.waitForChanges();\n\n    const expandedLonghandHexa = \"#aabbccdd\";\n    expect(await input.getProperty(\"value\")).toBe(expandedLonghandHexa);\n\n    await selectText(input);\n    const longhandHexWithExtraChars = \"bbbbbbbbc\";\n    await page.keyboard.type(longhandHexWithExtraChars);\n    await page.keyboard.press(\"Enter\");\n    await page.waitForChanges();\n\n    const hexWithPreviousAlphaCharsPreserved = \"#bbbbbbdd\";\n    expect(await input.getProperty(\"value\")).toBe(hexWithPreviousAlphaCharsPreserved);\n  });\n\n  describe(\"keyboard interaction\", () => {\n    let page: E2EPage;\n    let input: E2EElement;\n\n    async function assertTabAndEnterBehavior(\n      hexInputChars: string,\n      expectedValue: string | null,\n      alphaChannel = false,\n    ): Promise<void> {\n      const normalizedInputHex = normalizeHex(hexInputChars);\n      const resetHex = alphaChannel ? \"#face0fff\" : \"#efface\";\n\n      if (normalizedInputHex === resetHex) {\n        throw new Error(`input hex (${hexInputChars}) cannot be the same as reset value (${resetHex})`);\n      }\n\n      expectedValue =\n        expectedValue === null ||\n        (alphaChannel\n          ? isValidHex(normalizedInputHex, true) || canConvertToHexa(normalizedInputHex)\n          : isValidHex(normalizedInputHex))\n          ? expectedValue\n          : resetHex;\n\n      await typeHexValue(resetHex, \"Enter\");\n      expect(await input.getProperty(\"value\")).toBe(resetHex);\n\n      await typeHexValue(hexInputChars, \"Enter\");\n      expect(await input.getProperty(\"value\")).toBe(expectedValue);\n\n      await typeHexValue(resetHex, \"Enter\");\n      expect(await input.getProperty(\"value\")).toBe(resetHex);\n\n      await typeHexValue(hexInputChars, \"Tab\");\n      expect(await input.getProperty(\"value\")).toBe(expectedValue);\n    }\n\n    async function typeHexValue(text: string, commitKey: \"Tab\" | \"Enter\"): Promise<void> {\n      await clearText();\n      await input.type(text);\n      await page.keyboard.press(commitKey);\n      await page.waitForChanges();\n    }\n\n    async function clearText(): Promise<void> {\n      await selectText(input);\n      await page.keyboard.press(\"Backspace\");\n    }\n\n    describe(\"when color value is required\", () => {\n      describe(\"hex\", () => {\n        const startingHex = \"#b33f33\";\n\n        beforeEach(async () => {\n          page = await newE2EPage();\n          await page.setContent(\n            `<calcite-color-picker-hex-input value=${startingHex}></calcite-color-picker-hex-input>`,\n          );\n          await page.waitForChanges();\n\n          input = await page.find(\"calcite-color-picker-hex-input\");\n        });\n\n        it(\"commits hex chars on Tab and Enter\", async () => {\n          await assertTabAndEnterBehavior(\"b00\", \"#bb0000\");\n          await assertTabAndEnterBehavior(\"c0ffee\", \"#c0ffee\");\n          await assertTabAndEnterBehavior(\"\", startingHex);\n        });\n\n        it(\"prevents committing invalid hex values\", async () => {\n          await assertTabAndEnterBehavior(\"aabbc\", startingHex);\n          await assertTabAndEnterBehavior(\"aabb\", startingHex);\n          await assertTabAndEnterBehavior(\"aa\", startingHex);\n          await assertTabAndEnterBehavior(\"a\", startingHex);\n          await assertTabAndEnterBehavior(\"\", startingHex);\n        });\n\n        it(\"allows nudging RGB channels with arrow keys (+/-1) and shift modifies amount (+/-10)\", async () => {\n          const initialHex = \"#000000\";\n\n          await input.callMethod(\"setFocus\");\n          input.setProperty(\"value\", initialHex);\n          await page.waitForChanges();\n\n          await page.keyboard.press(\"ArrowUp\");\n          await page.waitForChanges();\n          expect(await input.getProperty(\"value\")).toBe(\"#010101\");\n\n          await page.keyboard.press(\"ArrowDown\");\n          await page.waitForChanges();\n          expect(await input.getProperty(\"value\")).toBe(initialHex);\n\n          await page.keyboard.down(\"Shift\");\n          await page.keyboard.press(\"ArrowUp\");\n          await page.keyboard.up(\"Shift\");\n          expect(await input.getProperty(\"value\")).toBe(\"#0a0a0a\");\n\n          await page.keyboard.down(\"Shift\");\n          await page.keyboard.press(\"ArrowDown\");\n          await page.keyboard.up(\"Shift\");\n          expect(await input.getProperty(\"value\")).toBe(initialHex);\n        });\n\n        describe(\"when empty is allowed\", () => {\n          beforeEach(async () => {\n            input.setProperty(\"allowEmpty\", true);\n            await page.waitForChanges();\n          });\n\n          it(\"commits hex chars on Tab and Enter\", async () => {\n            await assertTabAndEnterBehavior(\"b00\", \"#bb0000\");\n            await assertTabAndEnterBehavior(\"c0ffee\", \"#c0ffee\");\n            await assertTabAndEnterBehavior(\"\", null);\n          });\n\n          it(\"prevents committing invalid hex values\", async () => {\n            await assertTabAndEnterBehavior(\"aabbc\", startingHex);\n            await assertTabAndEnterBehavior(\"aabb\", startingHex);\n            await assertTabAndEnterBehavior(\"aa\", startingHex);\n            await assertTabAndEnterBehavior(\"a\", startingHex);\n            await assertTabAndEnterBehavior(\"\", null);\n          });\n\n          it(\"restores previous value when a nudge key is pressed and no-color is allowed and set\", async () => {\n            const noColorValue = null;\n            input.setProperty(\"value\", noColorValue);\n            await page.waitForChanges();\n            await input.callMethod(\"setFocus\");\n            await page.waitForChanges();\n\n            await page.keyboard.press(\"ArrowUp\");\n            await page.waitForChanges();\n            expect(await input.getProperty(\"value\")).toBe(startingHex);\n\n            input.setProperty(\"value\", noColorValue);\n            await page.waitForChanges();\n\n            await page.keyboard.press(\"ArrowDown\");\n            await page.waitForChanges();\n            expect(await input.getProperty(\"value\")).toBe(startingHex);\n\n            input.setProperty(\"value\", noColorValue);\n            await page.waitForChanges();\n\n            await page.keyboard.down(\"Shift\");\n            await page.keyboard.press(\"ArrowUp\");\n            await page.keyboard.up(\"Shift\");\n            expect(await input.getProperty(\"value\")).toBe(startingHex);\n\n            input.setProperty(\"value\", noColorValue);\n            await page.waitForChanges();\n\n            await page.keyboard.down(\"Shift\");\n            await page.keyboard.press(\"ArrowDown\");\n            await page.keyboard.up(\"Shift\");\n            expect(await input.getProperty(\"value\")).toBe(startingHex);\n          });\n        });\n      });\n\n      describe(\"hexa\", () => {\n        const startingHexa = \"#ff00ff00\";\n\n        beforeEach(async () => {\n          page = await newE2EPage();\n          await page.setContent(\n            `<calcite-color-picker-hex-input alpha-channel value=${startingHexa}></calcite-color-picker-hex-input>`,\n          );\n\n          input = await page.find(\"calcite-color-picker-hex-input\");\n        });\n\n        it.skip(\"commits hexa chars on Tab and Enter\", async () => {\n          await assertTabAndEnterBehavior(\"b00\", \"#bb0000ff\", true);\n          await assertTabAndEnterBehavior(\"abcd\", \"#aabbccdd\", true);\n          await assertTabAndEnterBehavior(\"c0ffee\", \"#c0ffeeff\", true);\n          await assertTabAndEnterBehavior(\"b0b0b0b0\", \"#b0b0b0b0\", true);\n          await assertTabAndEnterBehavior(\"\", startingHexa, true);\n        });\n\n        it.skip(\"prevents committing invalid hexa values\", async () => {\n          await assertTabAndEnterBehavior(\"aabbccd\", startingHexa, true);\n          await assertTabAndEnterBehavior(\"aabbcc\", \"#aabbccff\", true);\n          await assertTabAndEnterBehavior(\"ff00f\", \"#aabbccff\", true);\n          await assertTabAndEnterBehavior(\"ff00\", \"#ffff0000\", true);\n          await assertTabAndEnterBehavior(\"aab\", \"#aaaabbff\", true);\n          await assertTabAndEnterBehavior(\"aa\", \"#aaaabbff\", true);\n          await assertTabAndEnterBehavior(\"a\", \"#aaaabbff\", true);\n          await assertTabAndEnterBehavior(\"\", \"#aaaabbff\", true);\n        });\n\n        it(\"allows nudging RGB channels with arrow keys (+/-1) and shift modifies amount (+/-10)\", async () => {\n          const initialHex = \"#000000ff\";\n\n          await input.callMethod(\"setFocus\");\n          input.setProperty(\"value\", initialHex);\n          await page.waitForChanges();\n\n          await page.keyboard.press(\"ArrowUp\");\n          await page.waitForChanges();\n          expect(await input.getProperty(\"value\")).toBe(\"#010101ff\");\n\n          await page.keyboard.press(\"ArrowDown\");\n          await page.waitForChanges();\n          expect(await input.getProperty(\"value\")).toBe(initialHex);\n\n          await page.keyboard.down(\"Shift\");\n          await page.keyboard.press(\"ArrowUp\");\n          await page.keyboard.up(\"Shift\");\n          expect(await input.getProperty(\"value\")).toBe(\"#0a0a0aff\");\n\n          await page.keyboard.down(\"Shift\");\n          await page.keyboard.press(\"ArrowDown\");\n          await page.keyboard.up(\"Shift\");\n          expect(await input.getProperty(\"value\")).toBe(initialHex);\n        });\n\n        describe(\"when empty is allowed\", () => {\n          beforeEach(async () => {\n            input.setProperty(\"allowEmpty\", true);\n            await page.waitForChanges();\n          });\n\n          it.skip(\"commits hexa chars on Tab and Enter\", async () => {\n            await assertTabAndEnterBehavior(\"b00\", \"#bb0000ff\", true);\n            await assertTabAndEnterBehavior(\"baba\", \"#bbaabbaa\", true);\n            await assertTabAndEnterBehavior(\"c0ffee\", \"#c0ffeeff\", true);\n            await assertTabAndEnterBehavior(\"c0c0c0c0\", \"#c0c0c0c0\", true);\n            await assertTabAndEnterBehavior(\"\", null, true);\n          });\n\n          it.skip(\"prevents committing invalid hexa values\", async () => {\n            await assertTabAndEnterBehavior(\"aabbccd\", startingHexa, true);\n            await assertTabAndEnterBehavior(\"aabbcc\", \"#aabbccff\", true);\n            await assertTabAndEnterBehavior(\"ff00f\", \"#aabbccff\", true);\n            await assertTabAndEnterBehavior(\"ff00\", \"#ffff0000\", true);\n            await assertTabAndEnterBehavior(\"aab\", \"#aaaabbff\", true);\n            await assertTabAndEnterBehavior(\"aa\", \"#aaaabbff\", true);\n            await assertTabAndEnterBehavior(\"a\", \"#aaaabbff\", true);\n            await assertTabAndEnterBehavior(\"\", null, true);\n          });\n\n          it(\"restores previous value when a nudge key is pressed and no-color is allowed and set\", async () => {\n            const noColorValue = null;\n            input.setProperty(\"value\", noColorValue);\n            await page.waitForChanges();\n            await input.callMethod(\"setFocus\");\n            await page.waitForChanges();\n\n            await page.keyboard.press(\"ArrowUp\");\n            await page.waitForChanges();\n            expect(await input.getProperty(\"value\")).toBe(startingHexa);\n\n            input.setProperty(\"value\", noColorValue);\n            await page.waitForChanges();\n\n            await page.keyboard.press(\"ArrowDown\");\n            await page.waitForChanges();\n            expect(await input.getProperty(\"value\")).toBe(startingHexa);\n\n            input.setProperty(\"value\", noColorValue);\n            await page.waitForChanges();\n\n            await page.keyboard.down(\"Shift\");\n            await page.keyboard.press(\"ArrowUp\");\n            await page.keyboard.up(\"Shift\");\n            expect(await input.getProperty(\"value\")).toBe(startingHexa);\n\n            input.setProperty(\"value\", noColorValue);\n            await page.waitForChanges();\n\n            await page.keyboard.down(\"Shift\");\n            await page.keyboard.press(\"ArrowDown\");\n            await page.keyboard.up(\"Shift\");\n            expect(await input.getProperty(\"value\")).toBe(startingHexa);\n          });\n        });\n      });\n    });\n  });\n});\n"]}