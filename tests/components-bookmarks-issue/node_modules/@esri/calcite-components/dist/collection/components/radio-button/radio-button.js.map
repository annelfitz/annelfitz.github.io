{"version":3,"file":"radio-button.js","sourceRoot":"","sources":["../../../../src/components/radio-button/radio-button.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { getRoundRobinIndex } from \"../../utils/array\";\nimport { focusElement, getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  CheckableFormComponent,\n  connectForm,\n  disconnectForm,\n  HiddenFormInputSlot,\n} from \"../../utils/form\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-radio-button\",\n  styleUrl: \"radio-button.scss\",\n  shadow: true,\n})\nexport class RadioButton\n  implements LabelableComponent, CheckableFormComponent, InteractiveComponent, LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"hidden\")\n  handleHiddenChange(): void {\n    this.updateTabIndexOfOtherRadioButtonsInGroup();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is checked. */\n  @Prop({ mutable: true, reflect: true }) checked = false;\n\n  @Watch(\"checked\")\n  checkedChanged(newChecked: boolean): void {\n    if (newChecked) {\n      this.uncheckOtherRadioButtonsInGroup();\n    }\n\n    this.calciteInternalRadioButtonCheckedChange.emit();\n  }\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledChanged(): void {\n    this.updateTabIndexOfOtherRadioButtonsInGroup();\n  }\n\n  /**\n   * The focused state of the component.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) focused = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true })\n  form: string;\n\n  /** The `id` of the component. When omitted, a globally unique identifier is used. */\n  @Prop({ reflect: true, mutable: true }) guid: string;\n\n  /**\n   * The hovered state of the component.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) hovered = false;\n\n  /**\n   * Accessible name for the component.\n   *\n   * @internal\n   */\n  @Prop() label?: string;\n\n  /**\n   * Specifies the name of the component. Can be inherited from `calcite-radio-button-group`.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  @Watch(\"name\")\n  nameChanged(): void {\n    this.checkLastRadioButton();\n  }\n\n  /** When `true`, the component must have a value selected from the `calcite-radio-button-group` in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component inherited from the `calcite-radio-button-group`. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** The component's value. */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by form module\n  @Prop({ mutable: true }) value!: any;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteRadioButtonElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultChecked: boolean;\n\n  defaultValue: RadioButton[\"value\"];\n\n  rootNode: HTMLElement;\n\n  containerEl: HTMLDivElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    if (!this.disabled) {\n      focusElement(this.containerEl);\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    input.type = \"radio\";\n  }\n\n  selectItem = (items: HTMLCalciteRadioButtonElement[], selectedIndex: number): void => {\n    items[selectedIndex].click();\n  };\n\n  queryButtons = (): HTMLCalciteRadioButtonElement[] => {\n    return Array.from(this.rootNode.querySelectorAll(\"calcite-radio-button:not([hidden])\")).filter(\n      (radioButton: HTMLCalciteRadioButtonElement) => radioButton.name === this.name,\n    ) as HTMLCalciteRadioButtonElement[];\n  };\n\n  isFocusable = (): boolean => {\n    const radioButtons = this.queryButtons();\n    const firstFocusable = radioButtons.find((radioButton) => !radioButton.disabled);\n    const checked = radioButtons.find((radioButton) => radioButton.checked);\n    return firstFocusable === this.el && !checked;\n  };\n\n  check = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.focused = true;\n    this.setFocus();\n\n    if (this.checked) {\n      return;\n    }\n\n    this.uncheckAllRadioButtonsInGroup();\n    this.checked = true;\n    this.calciteRadioButtonChange.emit();\n  };\n\n  private clickHandler = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.check();\n  };\n\n  onLabelClick(event: CustomEvent): void {\n    if (this.disabled || this.el.hidden) {\n      return;\n    }\n\n    const label = event.currentTarget as HTMLCalciteLabelElement;\n\n    const radioButton = label.for\n      ? this.rootNode.querySelector<HTMLCalciteRadioButtonElement>(\n          `calcite-radio-button[id=\"${label.for}\"]`,\n        )\n      : label.querySelector<HTMLCalciteRadioButtonElement>(\n          `calcite-radio-button[name=\"${this.name}\"]`,\n        );\n\n    if (!radioButton) {\n      return;\n    }\n\n    radioButton.focused = true;\n    this.setFocus();\n\n    if (radioButton.checked) {\n      return;\n    }\n\n    this.uncheckOtherRadioButtonsInGroup();\n    radioButton.checked = true;\n    this.calciteRadioButtonChange.emit();\n  }\n\n  private checkLastRadioButton(): void {\n    const radioButtons = this.queryButtons();\n    const checkedRadioButtons = radioButtons.filter((radioButton) => radioButton.checked);\n\n    if (checkedRadioButtons?.length > 1) {\n      const lastCheckedRadioButton = checkedRadioButtons[checkedRadioButtons.length - 1];\n      checkedRadioButtons\n        .filter((checkedRadioButton) => checkedRadioButton !== lastCheckedRadioButton)\n        .forEach((checkedRadioButton: HTMLCalciteRadioButtonElement) => {\n          checkedRadioButton.checked = false;\n          checkedRadioButton.emitCheckedChange();\n        });\n    }\n  }\n\n  /** @internal */\n  @Method()\n  async emitCheckedChange(): Promise<void> {\n    this.calciteInternalRadioButtonCheckedChange.emit();\n  }\n\n  private setContainerEl = (el: HTMLDivElement): void => {\n    this.containerEl = el;\n  };\n\n  private uncheckAllRadioButtonsInGroup(): void {\n    const radioButtons = this.queryButtons();\n    radioButtons.forEach((radioButton) => {\n      if (radioButton.checked) {\n        radioButton.checked = false;\n        radioButton.focused = false;\n      }\n    });\n  }\n\n  private uncheckOtherRadioButtonsInGroup(): void {\n    const radioButtons = this.queryButtons();\n    const otherRadioButtons = radioButtons.filter((radioButton) => radioButton.guid !== this.guid);\n    otherRadioButtons.forEach((otherRadioButton) => {\n      if (otherRadioButton.checked) {\n        otherRadioButton.checked = false;\n        otherRadioButton.focused = false;\n      }\n    });\n  }\n\n  private updateTabIndexOfOtherRadioButtonsInGroup(): void {\n    const radioButtons = this.queryButtons();\n    const otherFocusableRadioButtons = radioButtons.filter(\n      (radioButton) => radioButton.guid !== this.guid && !radioButton.disabled,\n    );\n    otherFocusableRadioButtons.forEach((radioButton) => {\n      forceUpdate(radioButton);\n    });\n  }\n\n  private getTabIndex(): number | undefined {\n    if (this.disabled) {\n      return undefined;\n    }\n    return this.checked || this.isFocusable() ? 0 : -1;\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the radio button is blurred.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalRadioButtonBlur: EventEmitter<void>;\n\n  /**\n   * Fires only when the radio button is checked.  This behavior is identical to the native HTML input element.\n   * Since this event does not fire when the radio button is unchecked, it's not recommended to attach a listener for this event\n   * directly on the element, but instead either attach it to a node that contains all of the radio buttons in the group\n   * or use the `calciteRadioButtonGroupChange` event if using this with `calcite-radio-button-group`.\n   */\n  @Event({ cancelable: false }) calciteRadioButtonChange: EventEmitter<void>;\n\n  /**\n   * Fires when the checked property changes.  This is an internal event used for styling purposes only.\n   * Use calciteRadioButtonChange or calciteRadioButtonGroupChange for responding to changes in the checked value for forms.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalRadioButtonCheckedChange: EventEmitter<void>;\n\n  /**\n   * Fires when the radio button is focused.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalRadioButtonFocus: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"pointerenter\")\n  pointerEnterHandler(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.hovered = true;\n  }\n\n  @Listen(\"pointerleave\")\n  pointerLeaveHandler(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.hovered = false;\n  }\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    const keys = [\"ArrowLeft\", \"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \" \"];\n    const { key } = event;\n    const { el } = this;\n\n    if (keys.indexOf(key) === -1) {\n      return;\n    }\n\n    if (key === \" \") {\n      this.check();\n      event.preventDefault();\n      return;\n    }\n\n    let adjustedKey = key;\n\n    if (getElementDir(el) === \"rtl\") {\n      if (key === \"ArrowRight\") {\n        adjustedKey = \"ArrowLeft\";\n      }\n      if (key === \"ArrowLeft\") {\n        adjustedKey = \"ArrowRight\";\n      }\n    }\n\n    const radioButtons = Array.from(\n      this.rootNode.querySelectorAll(\"calcite-radio-button:not([hidden])\"),\n    ).filter(\n      (radioButton: HTMLCalciteRadioButtonElement) => radioButton.name === this.name,\n    ) as HTMLCalciteRadioButtonElement[];\n    let currentIndex = 0;\n\n    const radioButtonsLength = radioButtons.length;\n\n    radioButtons.some((item, index) => {\n      if (item.checked) {\n        currentIndex = index;\n        return true;\n      }\n    });\n\n    switch (adjustedKey) {\n      case \"ArrowLeft\":\n      case \"ArrowUp\":\n        event.preventDefault();\n        this.selectItem(\n          radioButtons,\n          getRoundRobinIndex(Math.max(currentIndex - 1, -1), radioButtonsLength),\n        );\n        return;\n      case \"ArrowRight\":\n      case \"ArrowDown\":\n        event.preventDefault();\n        this.selectItem(radioButtons, getRoundRobinIndex(currentIndex + 1, radioButtonsLength));\n        return;\n      default:\n        return;\n    }\n  };\n\n  private onContainerBlur = (): void => {\n    this.focused = false;\n    this.calciteInternalRadioButtonBlur.emit();\n  };\n\n  private onContainerFocus = (): void => {\n    if (!this.disabled) {\n      this.focused = true;\n      this.calciteInternalRadioButtonFocus.emit();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.rootNode = this.el.getRootNode() as HTMLElement;\n    this.guid = this.el.id || `calcite-radio-button-${guid()}`;\n    if (this.name) {\n      this.checkLastRadioButton();\n    }\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n    this.updateTabIndexOfOtherRadioButtonsInGroup();\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n\n    if (this.focused && !this.disabled) {\n      this.setFocus();\n    }\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    this.updateTabIndexOfOtherRadioButtonsInGroup();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const tabIndex = this.getTabIndex();\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.handleKeyDown}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-checked={toAriaBoolean(this.checked)}\n            aria-label={getLabelText(this)}\n            class={CSS.container}\n            onBlur={this.onContainerBlur}\n            onFocus={this.onContainerFocus}\n            role=\"radio\"\n            tabIndex={tabIndex}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.setContainerEl}\n          >\n            <div class=\"radio\" />\n          </div>\n          <HiddenFormInputSlot component={this} />\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"]}