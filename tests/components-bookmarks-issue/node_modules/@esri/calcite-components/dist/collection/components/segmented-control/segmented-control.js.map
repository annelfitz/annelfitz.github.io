{"version":3,"file":"segmented-control.js","sourceRoot":"","sources":["../../../../src/components/segmented-control/segmented-control.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,KAAK,EACL,SAAS,EACT,OAAO,EACP,KAAK,EAEL,CAAC,EACD,IAAI,EACJ,MAAM,EACN,MAAM,EACN,IAAI,EAEJ,KAAK,GACN,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EACL,2BAA2B,EAC3B,WAAW,EACX,cAAc,EAEd,mBAAmB,GACpB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EACL,kBAAkB,EAClB,qBAAqB,EAErB,oBAAoB,EACpB,qBAAqB,GACtB,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAE,YAAY,EAAE,eAAe,EAAsB,MAAM,mBAAmB,CAAC;AACtF,OAAO,EACL,kBAAkB,EAElB,kBAAkB,EAClB,sBAAsB,GACvB,MAAM,sBAAsB,CAAC;AAE9B,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AACtD,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAC;AAElC;;GAEG;AAMH,MAAM,OAAO,gBAAgB;;QAsJ3B,4EAA4E;QAC5E,EAAE;QACF,mBAAmB;QACnB,EAAE;QACF,4EAA4E;QAElE,gBAAW,GAAG,CAAC,KAAiB,EAAQ,EAAE;YAClD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO;aACR;YAED,IAAK,KAAK,CAAC,MAAsB,CAAC,SAAS,KAAK,gCAAgC,EAAE;gBAChF,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAgD,EAAE,IAAI,CAAC,CAAC;aAC/E;QACH,CAAC,CAAC;QAkGM,qBAAgB,GAAG,cAAc,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;0BA3P7E,OAAO;wBAG2B,KAAK;;wBAUL,KAAK;;sBAUqC,YAAY;qBAGlD,GAAG;qBAUF,IAAI;;sBAmCH,MAAM;;;qBASkB,MAAM;;IAjDxE,iBAAiB;QACf,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAMD,YAAY,CAAC,KAAa;QACxB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;IACjE,CAAC;IAUS,wBAAwB,CAChC,OAAU,EACV,OAAU;QAEV,IAAI,CAAC,KAAK,GAAG,OAAO,EAAE,KAAK,CAAC;QAC5B,IAAI,OAAO,KAAK,OAAO,EAAE;YACvB,OAAO;SACR;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;QAE7D,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACxB;aAAM,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;YACnB,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;SACvB;IACH,CAAC;IAcD,4EAA4E;IAC5E,EAAE;IACF,aAAa;IACb,EAAE;IACF,4EAA4E;IAE5E,iBAAiB;QACf,sBAAsB,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,gBAAgB;QACd,2BAA2B,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9C,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,iBAAiB;QACf,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACzB,YAAY,CAAC,IAAI,CAAC,CAAC;QACnB,WAAW,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,gBAAgB,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QAE7D,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,oBAAoB;QAClB,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAC5B,eAAe,CAAC,IAAI,CAAC,CAAC;QACtB,cAAc,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,kBAAkB;QAChB,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,IAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAC,YAAY;YAChD,WAAK,KAAK,EAAE,GAAG,CAAC,WAAW;gBACzB,EAAC,oBAAoB,IAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBAC3C,eAAQ;oBACR,EAAC,mBAAmB,IAAC,SAAS,EAAE,IAAI,GAAI,CACnB,CACnB;YACL,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,CACrD,EAAC,UAAU,IACT,IAAI,EAAE,IAAI,CAAC,cAAc,EACzB,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAC/B,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,MAAM,EAAE,IAAI,CAAC,MAAM,GACnB,CACH,CAAC,CAAC,CAAC,IAAI,CACH,CACR,CAAC;IACJ,CAAC;IAmBS,cAAc,CAAC,KAAY;QACnC,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAgD,CAAC,CAAC;QACxE,KAAK,CAAC,eAAe,EAAE,CAAC;IAC1B,CAAC;IAGS,aAAa,CAAC,KAAoB;QAC1C,MAAM,IAAI,GAAG,CAAC,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;QACtE,MAAM,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC;QACtB,MAAM,EAAE,EAAE,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC;QAElC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;YAC5B,OAAO;SACR;QAED,IAAI,WAAW,GAAG,GAAG,CAAC;QAEtB,IAAI,aAAa,CAAC,EAAE,CAAC,KAAK,KAAK,EAAE;YAC/B,IAAI,GAAG,KAAK,YAAY,EAAE;gBACxB,WAAW,GAAG,WAAW,CAAC;aAC3B;YACD,IAAI,GAAG,KAAK,WAAW,EAAE;gBACvB,WAAW,GAAG,YAAY,CAAC;aAC5B;SACF;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC;QAEvB,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAC5B,IAAI,IAAI,KAAK,YAAY,EAAE;gBACzB,aAAa,GAAG,KAAK,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;QAEH,QAAQ,WAAW,EAAE;YACnB,KAAK,WAAW,CAAC;YACjB,KAAK,SAAS;gBACZ,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,MAAM,QAAQ,GAAG,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAChC,OAAO;YACT,KAAK,YAAY,CAAC;YAClB,KAAK,WAAW;gBACd,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,MAAM,IAAI,GAAG,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpF,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC5B,OAAO;YACT,KAAK,GAAG;gBACN,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAgD,EAAE,IAAI,CAAC,CAAC;gBAC9E,OAAO;YACT;gBACE,OAAO;SACV;IACH,CAAC;IAWD,6EAA6E;IAC7E,EAAE;IACF,WAAW;IACX,EAAE;IACF,6EAA6E;IAE7E,mCAAmC;IAEnC,KAAK,CAAC,QAAQ;QACZ,MAAM,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAE/B,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IACrD,CAAC;IAkBO,oBAAoB;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAE9B,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4EAA4E;IAC5E,EAAE;IACF,mBAAmB;IACnB,EAAE;IACF,4EAA4E;IAE5E,YAAY;QACV,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAEO,QAAQ;QACd,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,gCAAgC,CAAC,CAAC,CAAC;IAChF,CAAC;IAEO,UAAU,CAAC,QAAgD,EAAE,IAAI,GAAG,KAAK;QAC/E,IAAI,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;YAClC,OAAO;SACR;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,KAAK,GAA2C,IAAI,CAAC;QAEzD,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACrB,MAAM,OAAO,GAAG,IAAI,KAAK,QAAQ,CAAC;YAElC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE;gBAC5D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;aACxB;YAED,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEjC,IAAI,OAAO,EAAE;gBACX,KAAK,GAAG,IAAI,CAAC;gBAEb,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,CAAC;iBAC3C;aACF;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,KAAK,CAAC,SAAS,IAAI,KAAK,EAAE;YAC5B,KAAK,CAAC,KAAK,EAAE,CAAC;SACf;IACH,CAAC;IAEO,UAAU;QAChB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;QAE/D,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;SAC9B;aAAM,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;YACnB,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;SACvB;IACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {\n  Build,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport { getElementDir } from \"../../utils/dom\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Appearance, Layout, Scale, Status, Width } from \"../interfaces\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Validation } from \"../functional/Validation\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-segmented-control-item`s.\n */\n@Component({\n  tag: \"calcite-segmented-control\",\n  styleUrl: \"segmented-control.scss\",\n  shadow: true,\n})\nexport class SegmentedControl\n  implements LabelableComponent, FormComponent, InteractiveComponent, LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the appearance style of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"outline\" | \"outline-fill\" | \"solid\", Appearance> =\n    \"solid\";\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Defines the layout of the component. */\n  @Prop({ reflect: true }) layout: Extract<\"horizontal\" | \"vertical\", Layout> = \"horizontal\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"appearance\")\n  @Watch(\"layout\")\n  @Watch(\"scale\")\n  handlePropsChange(): void {\n    this.handleItemPropChange();\n  }\n\n  /** The component's `selectedItem` value. */\n  @Prop({ mutable: true }) value: string = null;\n\n  @Watch(\"value\")\n  valueHandler(value: string): void {\n    const items = this.getItems();\n    items.forEach((item) => (item.checked = item.value === value));\n  }\n\n  /**\n   * The component's selected item `HTMLElement`.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItem: HTMLCalciteSegmentedControlItemElement;\n\n  @Watch(\"selectedItem\")\n  protected handleSelectedItemChange<T extends HTMLCalciteSegmentedControlItemElement>(\n    newItem: T,\n    oldItem: T,\n  ): void {\n    this.value = newItem?.value;\n    if (newItem === oldItem) {\n      return;\n    }\n    const items = this.getItems();\n    const match = items.filter((item) => item === newItem).pop();\n\n    if (match) {\n      this.selectItem(match);\n    } else if (items[0]) {\n      items[0].tabIndex = 0;\n    }\n  }\n\n  /** Specifies the status of the validation message. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: string | boolean;\n\n  /** Specifies the width of the component. */\n  @Prop({ reflect: true }) width: Extract<\"auto\" | \"full\", Width> = \"auto\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n    this.setUpItems();\n  }\n\n  componentDidLoad(): void {\n    afterConnectDefaultValueSet(this, this.value);\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n    this.mutationObserver?.observe(this.el, { childList: true });\n\n    this.handleItemPropChange();\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    this.mutationObserver?.unobserve(this.el);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    return (\n      <Host onClick={this.handleClick} role=\"radiogroup\">\n        <div class={CSS.itemWrapper}>\n          <InteractiveContainer disabled={this.disabled}>\n            <slot />\n            <HiddenFormInputSlot component={this} />\n          </InteractiveContainer>\n        </div>\n        {this.validationMessage && this.status === \"invalid\" ? (\n          <Validation\n            icon={this.validationIcon}\n            message={this.validationMessage}\n            scale={this.scale}\n            status={this.status}\n          />\n        ) : null}\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  protected handleClick = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    if ((event.target as HTMLElement).localName === \"calcite-segmented-control-item\") {\n      this.selectItem(event.target as HTMLCalciteSegmentedControlItemElement, true);\n    }\n  };\n\n  @Listen(\"calciteInternalSegmentedControlItemChange\")\n  protected handleSelected(event: Event): void {\n    event.preventDefault();\n    this.selectItem(event.target as HTMLCalciteSegmentedControlItemElement);\n    event.stopPropagation();\n  }\n\n  @Listen(\"keydown\")\n  protected handleKeyDown(event: KeyboardEvent): void {\n    const keys = [\"ArrowLeft\", \"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \" \"];\n    const { key } = event;\n    const { el, selectedItem } = this;\n\n    if (keys.indexOf(key) === -1) {\n      return;\n    }\n\n    let adjustedKey = key;\n\n    if (getElementDir(el) === \"rtl\") {\n      if (key === \"ArrowRight\") {\n        adjustedKey = \"ArrowLeft\";\n      }\n      if (key === \"ArrowLeft\") {\n        adjustedKey = \"ArrowRight\";\n      }\n    }\n\n    const items = this.getItems();\n    let selectedIndex = -1;\n\n    items.forEach((item, index) => {\n      if (item === selectedItem) {\n        selectedIndex = index;\n      }\n    });\n\n    switch (adjustedKey) {\n      case \"ArrowLeft\":\n      case \"ArrowUp\":\n        event.preventDefault();\n        const previous = selectedIndex < 1 ? items[items.length - 1] : items[selectedIndex - 1];\n        this.selectItem(previous, true);\n        return;\n      case \"ArrowRight\":\n      case \"ArrowDown\":\n        event.preventDefault();\n        const next = selectedIndex === -1 ? items[1] : items[selectedIndex + 1] || items[0];\n        this.selectItem(next, true);\n        return;\n      case \" \":\n        event.preventDefault();\n        this.selectItem(event.target as HTMLCalciteSegmentedControlItemElement, true);\n        return;\n      default:\n        return;\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the `calcite-segmented-control-item` selection changes. */\n  @Event({ cancelable: false }) calciteSegmentedControlChange: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    (this.selectedItem || this.getItems()[0])?.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSegmentedControlElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: SegmentedControl[\"value\"];\n\n  private mutationObserver = createObserver(\"mutation\", () => this.setUpItems());\n\n  private handleItemPropChange(): void {\n    const items = this.getItems();\n\n    items.forEach((item) => {\n      item.appearance = this.appearance;\n      item.layout = this.layout;\n      item.scale = this.scale;\n    });\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private getItems(): HTMLCalciteSegmentedControlItemElement[] {\n    return Array.from(this.el.querySelectorAll(\"calcite-segmented-control-item\"));\n  }\n\n  private selectItem(selected: HTMLCalciteSegmentedControlItemElement, emit = false): void {\n    if (selected === this.selectedItem) {\n      return;\n    }\n\n    const items = this.getItems();\n    let match: HTMLCalciteSegmentedControlItemElement = null;\n\n    items.forEach((item) => {\n      const matches = item === selected;\n\n      if ((matches && !item.checked) || (!matches && item.checked)) {\n        item.checked = matches;\n      }\n\n      item.tabIndex = matches ? 0 : -1;\n\n      if (matches) {\n        match = item;\n\n        if (emit) {\n          this.calciteSegmentedControlChange.emit();\n        }\n      }\n    });\n\n    this.selectedItem = match;\n    if (Build.isBrowser && match) {\n      match.focus();\n    }\n  }\n\n  private setUpItems(): void {\n    const items = this.getItems();\n    const lastChecked = items.filter((item) => item.checked).pop();\n\n    if (lastChecked) {\n      this.selectItem(lastChecked);\n    } else if (items[0]) {\n      items[0].tabIndex = 0;\n    }\n  }\n}\n"]}