{"version":3,"file":"chip.e2e.js","sourceRoot":"","sources":["../../../../src/components/chip/chip.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,yBAAyB,CAAC;AACvG,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAEzC,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,OAAO,CAAC,sCAAsC,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACvC,MAAM,CAAC,cAAc,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAChD,UAAU,CAAC,sCAAsC,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;QACrB,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;QAC7C,SAAS,CAAC,kDAAkD,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAChD,QAAQ,CAAC,kDAAkD,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gFAAgF,EAAE,KAAK,IAAI,EAAE;QAC9F,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAEhC,MAAM,IAAI,CAAC,UAAU,CAAC,2EAA2E,CAAC,CAAC;QAEnG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;QAEzD,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2EAA2E,EAAE,KAAK,IAAI,EAAE;QACzF,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,mDAAmD,CAAC,CAAC;QAE3E,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;QAEtE,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;QACpB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qEAAqE,EAAE,KAAK,IAAI,EAAE;QACnF,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,8DAA8D,CAAC,CAAC;QAEtF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;QAEtE,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;QACpB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,EAAE,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,+CAA+C,CAAC,CAAC;QAEvE,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;QAErE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,qBAAqB,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;QAEtE,MAAM,WAAW,CAAC,KAAK,EAAE,CAAC;QAE1B,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,EAAE,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,kDAAkD,CAAC,CAAC;QAE1E,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;QACpB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC5D,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,2CAA2C,CAAC,CAAC;QAEnE,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAChD,MAAM,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QACxD,MAAM,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACpD,MAAM,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACrE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,uFAAuF,CAAC,CAAC;QAE/G,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAChD,MAAM,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC1D,MAAM,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAClD,MAAM,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE,KAAK,IAAI,EAAE;QACxE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,4FAA4F,CAAC,CAAC;QAEpH,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAChD,MAAM,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAC/D,MAAM,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAClD,MAAM,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,oDAAoD,CAAC,CAAC;QAE5E,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAC/D,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,2CAA2C,CAAC,CAAC;QAEnE,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAC/D,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAClD,MAAM,WAAW,GAAG;;;;;;;;;;KAUnB,CAAC;QACF,IAAI,IAAI,CAAC;QACT,IAAI,eAAe,CAAC;QACpB,IAAI,yBAAyB,CAAC;QAC9B,IAAI,yBAAyB,CAAC;QAE9B,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACzD,IAAI,GAAG,MAAM,UAAU,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;YAC/C,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAC1C,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;gBACpD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,kCAAkC,EAAE,sBAAsB,CAAC,CAAC;gBACnF,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,kCAAkC,EAAE,qBAAqB,CAAC,CAAC;gBAClF,OAAO;oBACL,UAAU,EAAE,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,kCAAkC,CAAC;oBAC9F,MAAM,EAAE,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,kCAAkC,CAAC;iBAC3F,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;YAC9D,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,qCAAqC,EAAE,GAAG,EAAE;YACnD,EAAE,CAAC,oEAAoE,EAAE,KAAK,IAAI,EAAE;gBAClF,IAAI,GAAG,MAAM,UAAU,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;gBAC/C,eAAe,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;gBAC7D,MAAM,eAAe,CAAC,KAAK,EAAE,CAAC;gBAC9B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC5B,yBAAyB,GAAG,MAAM,eAAe,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gBAC7E,MAAM,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;gBAEtG,MAAM,eAAe,CAAC,KAAK,EAAE,CAAC;gBAC9B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC5B,yBAAyB,GAAG,MAAM,eAAe,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gBAC7E,MAAM,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;YACxG,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;YAC3C,EAAE,CAAC,kEAAkE,EAAE,KAAK,IAAI,EAAE;gBAChF,IAAI,GAAG,MAAM,UAAU,CAAC;oBACtB,IAAI,EAAE,kCAAkC,WAAW,QAAQ;iBAC5D,CAAC,CAAC;gBACH,eAAe,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;gBAC7D,MAAM,eAAe,CAAC,KAAK,EAAE,CAAC;gBAC9B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC5B,yBAAyB,GAAG,MAAM,eAAe,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gBAC7E,MAAM,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;gBAE5G,MAAM,eAAe,CAAC,KAAK,EAAE,CAAC;gBAC9B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC5B,yBAAyB,GAAG,MAAM,eAAe,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gBAC7E,MAAM,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YAC9G,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;YACrE,MAAM,aAAa,GAAG,uBAAuB,CAAC;YAC9C,IAAI,GAAG,MAAM,UAAU,CAAC;gBACtB,IAAI,EAAE;;;iDAGmC,aAAa;;;eAG/C,WAAW,QAAQ;aAC3B,CAAC,CAAC;YACH,eAAe,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC7D,MAAM,eAAe,CAAC,KAAK,EAAE,CAAC;YAC9B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,yBAAyB,GAAG,MAAM,eAAe,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAC7E,MAAM,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YAE9F,MAAM,eAAe,CAAC,KAAK,EAAE,CAAC;YAC9B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,yBAAyB,GAAG,MAAM,eAAe,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAC7E,MAAM,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAChG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;YAC9D,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;YAChC,MAAM,IAAI,CAAC,UAAU,CAAC,kCAAkC,WAAW,QAAQ,CAAC,CAAC;YAE7E,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC/C,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACpC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAE5B,MAAM,CAAC,MAAM,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,GAAG,CAAC,cAAc,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage } from \"@stencil/core/testing\";\nimport { accessible, disabled, focusable, hidden, renders, slots, t9n } from \"../../tests/commonTests\";\nimport { CSS, SLOTS } from \"./resources\";\n\ndescribe(\"calcite-chip\", () => {\n  describe(\"renders\", () => {\n    renders(\"<calcite-chip>doritos</calcite-chip>\", { display: \"inline-flex\" });\n  });\n\n  describe(\"honors hidden attribute\", () => {\n    hidden(\"calcite-chip\");\n  });\n\n  describe(\"accessible without calcite-label\", () => {\n    accessible(`<calcite-chip>doritos</calcite-chip>`);\n  });\n\n  describe(\"slots\", () => {\n    slots(\"calcite-chip\", SLOTS);\n  });\n\n  describe(\"is focusable when interactive\", () => {\n    focusable(\"<calcite-chip interactive>doritos</calcite-chip>\");\n  });\n\n  describe(\"can be disabled when interactive\", () => {\n    disabled(\"<calcite-chip interactive>doritos</calcite-chip>\");\n  });\n\n  it(\"should not render a calcite-icon when selectionMode is single and not selected\", async () => {\n    const page = await newE2EPage();\n\n    await page.setContent(`<calcite-chip selection-mode=\"single\" id=\"chip-1\" >cheetos</calcite-chip>`);\n\n    await page.waitForChanges();\n\n    const icon = await page.find(\"#chip-1 >>> calcite-icon\");\n\n    expect(icon).toBeNull();\n  });\n\n  it(\"should not emit event after the chip is clicked if interactive if not set\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<calcite-chip id=\"chip-1\" >cheetos</calcite-chip>`);\n\n    const eventSpy = await page.spyOnEvent(\"calciteChipSelect\", \"window\");\n\n    const chip1 = await page.find(\"#chip-1\");\n    await chip1.click();\n    await page.waitForChanges();\n\n    expect(eventSpy).not.toHaveReceivedEvent();\n  });\n\n  it(\"should emit event after the chip button is clicked when interactive\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<calcite-chip id=\"chip-1\" interactive>cheetos</calcite-chip>`);\n\n    const eventSpy = await page.spyOnEvent(\"calciteChipSelect\", \"window\");\n\n    const chip1 = await page.find(\"#chip-1\");\n    await chip1.click();\n    await page.waitForChanges();\n\n    expect(eventSpy).toHaveReceivedEvent();\n  });\n\n  it(\"should emit event after the close button is clicked\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<calcite-chip closable>cheetos</calcite-chip>`);\n\n    const eventSpy = await page.spyOnEvent(\"calciteChipClose\", \"window\");\n\n    const closeButton = await page.find(`calcite-chip >>> .${CSS.close}`);\n\n    await closeButton.click();\n\n    expect(eventSpy).toHaveReceivedEvent();\n  });\n\n  it(\"should receive focus when clicked\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<calcite-chip id=\"chip-1\">cheetos</calcite-chip>`);\n\n    const chip1 = await page.find(\"#chip-1\");\n    await chip1.click();\n    await page.waitForChanges();\n    expect(await page.evaluate(() => document.activeElement.id)).toEqual(chip1.id);\n  });\n\n  it(\"renders default props when none are provided\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<calcite-chip>Chip content</calcite-chip>`);\n\n    const element = await page.find(\"calcite-chip\");\n    expect(element).toEqualAttribute(\"appearance\", \"solid\");\n    expect(element).toEqualAttribute(\"kind\", \"neutral\");\n    expect(element).toEqualAttribute(\"scale\", \"m\");\n  });\n\n  it(\"renders requested props when valid props are provided\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<calcite-chip appearance=\"outline\" kind=\"brand\" scale=\"l\">Chip content</calcite-chip>`);\n\n    const element = await page.find(\"calcite-chip\");\n    expect(element).toEqualAttribute(\"appearance\", \"outline\");\n    expect(element).toEqualAttribute(\"kind\", \"brand\");\n    expect(element).toEqualAttribute(\"scale\", \"l\");\n  });\n\n  it(\"renders outline-fill chip when appearance='outline-fill'\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<calcite-chip appearance=\"outline-fill\" kind=\"brand\" scale=\"l\">Chip content</calcite-chip>`);\n\n    const element = await page.find(\"calcite-chip\");\n    expect(element).toEqualAttribute(\"appearance\", \"outline-fill\");\n    expect(element).toEqualAttribute(\"kind\", \"brand\");\n    expect(element).toEqualAttribute(\"scale\", \"l\");\n  });\n\n  it(\"renders a close button when requested\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<calcite-chip closable>Chip content</calcite-chip>`);\n\n    const close = await page.find(\"calcite-chip >>> button.close\");\n    expect(close).not.toBeNull();\n  });\n\n  it(\"does not render a close button when not requested\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<calcite-chip>Chip content</calcite-chip>`);\n\n    const close = await page.find(\"calcite-chip >>> button.close\");\n    expect(close).toBeNull();\n  });\n\n  describe(\"CSS properties for light/dark mode\", () => {\n    const chipSnippet = `\n      <calcite-chip\n        class=\"layers\"\n        icon=\"layer\"\n        appearance=\"solid\"\n        kind=\"neutral\"\n        closable\n      >\n        Layers\n      </calcite-chip>\n    `;\n    let page;\n    let chipCloseButton;\n    let chipCloseButtonFocusStyle;\n    let chipCloseButtonHoverStyle;\n\n    it(\"should have defined CSS custom properties\", async () => {\n      page = await newE2EPage({ html: chipSnippet });\n      const chipStyles = await page.evaluate(() => {\n        const chip = document.querySelector(\"calcite-chip\");\n        chip.style.setProperty(\"--calcite-chip-transparent-hover\", \"rgba(3, 2, 20, 0.14)\");\n        chip.style.setProperty(\"--calcite-chip-transparent-press\", \"rgba(4, 10, 4, 0.31\");\n        return {\n          hoverFocus: window.getComputedStyle(chip).getPropertyValue(\"--calcite-chip-transparent-hover\"),\n          active: window.getComputedStyle(chip).getPropertyValue(\"--calcite-chip-transparent-press\"),\n        };\n      });\n      expect(chipStyles.hoverFocus).toEqual(\"rgba(3, 2, 20, 0.14)\");\n      expect(chipStyles.active).toEqual(\"rgba(4, 10, 4, 0.31\");\n    });\n\n    describe(\"when mode attribute is not provided\", () => {\n      it(\"should render chip pseudo classes with default values tied to mode\", async () => {\n        page = await newE2EPage({ html: chipSnippet });\n        chipCloseButton = await page.find(\"calcite-chip >>> button\");\n        await chipCloseButton.focus();\n        await page.waitForChanges();\n        chipCloseButtonFocusStyle = await chipCloseButton.getComputedStyle(\":focus\");\n        expect(chipCloseButtonFocusStyle.getPropertyValue(\"background-color\")).toEqual(\"rgba(0, 0, 0, 0.04)\");\n\n        await chipCloseButton.hover();\n        await page.waitForChanges();\n        chipCloseButtonHoverStyle = await chipCloseButton.getComputedStyle(\":hover\");\n        expect(chipCloseButtonHoverStyle.getPropertyValue(\"background-color\")).toEqual(\"rgba(0, 0, 0, 0.04)\");\n      });\n    });\n\n    describe(\"when mode attribute is dark\", () => {\n      it(\"should render button pseudo classes with value tied to dark mode\", async () => {\n        page = await newE2EPage({\n          html: `<div class=\"calcite-mode-dark\">${chipSnippet}</div>`,\n        });\n        chipCloseButton = await page.find(\"calcite-chip >>> button\");\n        await chipCloseButton.focus();\n        await page.waitForChanges();\n        chipCloseButtonFocusStyle = await chipCloseButton.getComputedStyle(\":focus\");\n        expect(chipCloseButtonFocusStyle.getPropertyValue(\"background-color\")).toEqual(\"rgba(255, 255, 255, 0.04)\");\n\n        await chipCloseButton.hover();\n        await page.waitForChanges();\n        chipCloseButtonHoverStyle = await chipCloseButton.getComputedStyle(\":hover\");\n        expect(chipCloseButtonHoverStyle.getPropertyValue(\"background-color\")).toEqual(\"rgba(255, 255, 255, 0.04)\");\n      });\n    });\n\n    it(\"should allow the CSS custom property to be overridden\", async () => {\n      const overrideStyle = \"rgba(55, 5, 10, 0.19)\";\n      page = await newE2EPage({\n        html: `\n        <style>\n          :root {\n            --calcite-color-transparent-hover: ${overrideStyle};\n          }\n        </style>\n        <div>${chipSnippet}</div>`,\n      });\n      chipCloseButton = await page.find(\"calcite-chip >>> button\");\n      await chipCloseButton.focus();\n      await page.waitForChanges();\n      chipCloseButtonFocusStyle = await chipCloseButton.getComputedStyle(\":focus\");\n      expect(chipCloseButtonFocusStyle.getPropertyValue(\"background-color\")).toEqual(overrideStyle);\n\n      await chipCloseButton.hover();\n      await page.waitForChanges();\n      chipCloseButtonHoverStyle = await chipCloseButton.getComputedStyle(\":hover\");\n      expect(chipCloseButtonHoverStyle.getPropertyValue(\"background-color\")).toEqual(overrideStyle);\n    });\n\n    it(\"should not render chip when closed set to true\", async () => {\n      const page = await newE2EPage();\n      await page.setContent(`<div class=\"calcite-mode-dark\">${chipSnippet}</div>`);\n\n      const chipEl = await page.find(`calcite-chip`);\n      chipEl.setAttribute(\"closed\", true);\n      await page.waitForChanges();\n\n      expect(await chipEl.isVisible()).toBe(false);\n    });\n  });\n\n  describe(\"translation support\", () => {\n    t9n(\"calcite-chip\");\n  });\n});\n"]}