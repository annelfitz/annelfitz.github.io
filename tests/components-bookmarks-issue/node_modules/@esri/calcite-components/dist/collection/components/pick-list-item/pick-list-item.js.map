{"version":3,"file":"pick-list-item.js","sourceRoot":"","sources":["../../../../src/components/pick-list-item/pick-list-item.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ICON_TYPES } from \"../pick-list/resources\";\nimport { PickListItemMessages } from \"./assets/pick-list-item/t9n\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\n/**\n * @deprecated Use the `list` component instead.\n * @slot actions-end - A slot for adding `calcite-action`s or content to the end side of the component.\n * @slot actions-start - A slot for adding `calcite-action`s or content to the start side of the component.\n */\n@Component({\n  tag: \"calcite-pick-list-item\",\n  styleUrl: \"pick-list-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class PickListItem\n  implements ConditionalSlotComponent, InteractiveComponent, LoadableComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * A description for the component that displays below the label text.\n   */\n  @Prop({ reflect: true }) description: string;\n\n  @Watch(\"description\")\n  descriptionWatchHandler(): void {\n    this.calciteInternalListItemPropsChange.emit();\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `false`, the component cannot be deselected by user interaction.\n   */\n  @Prop({ reflect: true }) deselectDisabled = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true }) nonInteractive = false;\n\n  /**\n   * Determines the icon SVG symbol that will be shown. Options are `\"circle\"`, `\"square\"`, `\"grip\"` or `null`.\n   *\n   * @see [ICON_TYPES](https://github.com/Esri/calcite-design-system/blob/main/src/components/pick-list/resources.ts#L5)\n   */\n  @Prop({ reflect: true }) icon: ICON_TYPES | null = null;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Label and accessible name for the component. Appears next to the icon.\n   */\n  @Prop({ reflect: true }) label!: string;\n\n  @Watch(\"label\")\n  labelWatchHandler(): void {\n    this.calciteInternalListItemPropsChange.emit();\n  }\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PickListItemMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PickListItemMessages;\n\n  @Watch(\"defaultMessages\")\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Provides additional metadata to the component. Primary use is for a filter on the parent list.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  @Watch(\"metadata\")\n  metadataWatchHandler(): void {\n    this.calciteInternalListItemPropsChange.emit();\n  }\n\n  /**\n   * When `true`, displays a remove action that removes the item from the list.\n   */\n  @Prop({ reflect: true }) removable = false;\n\n  /**\n   * When `true`, selects an item. Toggles when an item is checked/unchecked.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  selectedWatchHandler(): void {\n    this.calciteListItemChange.emit({\n      item: this.el,\n      value: this.value,\n      selected: this.selected,\n      shiftPressed: this.shiftPressed,\n    });\n\n    this.shiftPressed = false;\n  }\n\n  /**\n   * The component's value.\n   */\n  @Prop() value!: any;\n\n  @Watch(\"value\")\n  valueWatchHandler(newValue: any, oldValue: any): void {\n    this.calciteInternalListItemValueChange.emit({ oldValue, newValue });\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePickListItemElement;\n\n  private focusEl: HTMLLabelElement;\n\n  shiftPressed: boolean;\n\n  @State() defaultMessages: PickListItemMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    connectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is selected or unselected.\n   */\n  @Event({ cancelable: false }) calciteListItemChange: EventEmitter<{\n    item: HTMLCalcitePickListItemElement;\n    value: any;\n    selected: boolean;\n    shiftPressed: boolean;\n  }>;\n\n  /**\n   * Fires when the remove button is pressed.\n   */\n  @Event({ cancelable: true }) calciteListItemRemove: EventEmitter<void>;\n\n  /**\n   * Emits when the component's label, description, value, or metadata properties are modified.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemPropsChange: EventEmitter<void>;\n\n  /**\n   * Emits when the component's value property is modified.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemValueChange: EventEmitter<{\n    oldValue: any;\n    newValue: any;\n  }>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Toggles the selection state. By default this won't trigger an event.\n   * The first argument allows the value to be coerced, rather than swapping values.\n   *\n   * @param coerce\n   */\n  @Method()\n  async toggleSelected(coerce?: boolean): Promise<void> {\n    this.selected = typeof coerce === \"boolean\" ? coerce : !this.selected;\n  }\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.focusEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  pickListClickHandler = (event: MouseEvent): void => {\n    if (this.disabled || (this.deselectDisabled && this.selected) || this.nonInteractive) {\n      return;\n    }\n\n    this.shiftPressed = event.shiftKey;\n    this.selected = !this.selected;\n  };\n\n  pickListKeyDownHandler = (event: KeyboardEvent): void => {\n    if (event.key === \" \") {\n      event.preventDefault();\n      if ((this.deselectDisabled && this.selected) || this.nonInteractive) {\n        return;\n      }\n      this.selected = !this.selected;\n    }\n  };\n\n  removeClickHandler = (): void => {\n    this.calciteListItemRemove.emit();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderIcon(): VNode {\n    const { icon, iconFlipRtl } = this;\n\n    if (!icon) {\n      return null;\n    }\n\n    return (\n      <span\n        class={{\n          [CSS.icon]: true,\n          [CSS.iconDot]: icon === ICON_TYPES.circle,\n        }}\n        onClick={this.pickListClickHandler}\n      >\n        {icon === ICON_TYPES.square ? (\n          <calcite-icon flipRtl={iconFlipRtl} icon={ICONS.checked} scale=\"s\" />\n        ) : null}\n      </span>\n    );\n  }\n\n  renderRemoveAction(): VNode {\n    return this.removable ? (\n      <calcite-action\n        class={CSS.remove}\n        icon={ICONS.remove}\n        onClick={this.removeClickHandler}\n        slot={SLOTS.actionsEnd}\n        text={this.messages.remove}\n      />\n    ) : null;\n  }\n\n  renderActionsStart(): VNode {\n    const { el } = this;\n    const hasActionsStart = getSlotted(el, SLOTS.actionsStart);\n\n    return hasActionsStart ? (\n      <div class={{ [CSS.actions]: true, [CSS.actionsStart]: true }}>\n        <slot name={SLOTS.actionsStart} />\n      </div>\n    ) : null;\n  }\n\n  renderActionsEnd(): VNode {\n    const { el, removable } = this;\n    const hasActionsEnd = getSlotted(el, SLOTS.actionsEnd);\n\n    return hasActionsEnd || removable ? (\n      <div class={{ [CSS.actions]: true, [CSS.actionsEnd]: true }}>\n        <slot name={SLOTS.actionsEnd} />\n        {this.renderRemoveAction()}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { description, label } = this;\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        {this.renderIcon()}\n        {this.renderActionsStart()}\n        <label\n          aria-label={label}\n          class={CSS.label}\n          onClick={this.pickListClickHandler}\n          onKeyDown={this.pickListKeyDownHandler}\n          tabIndex={0}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(focusEl): HTMLLabelElement => (this.focusEl = focusEl)}\n        >\n          <div\n            aria-checked={toAriaBoolean(this.selected)}\n            class={CSS.textContainer}\n            role=\"menuitemcheckbox\"\n          >\n            <span class={CSS.title}>{label}</span>\n            {description ? <span class={CSS.description}>{description}</span> : null}\n          </div>\n        </label>\n        {this.renderActionsEnd()}\n      </InteractiveContainer>\n    );\n  }\n}\n"]}