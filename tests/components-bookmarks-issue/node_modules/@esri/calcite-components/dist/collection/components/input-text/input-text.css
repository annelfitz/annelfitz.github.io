/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:11 GMT
 */
/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:11 GMT
 */
/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:11 GMT
 */
/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:11 GMT
 */
/**
 * Do not edit directly
 * Generated on Tue, 27 Feb 2024 18:51:09 GMT
 */
/* mixins & extensions */
/* helper to properly scale internal durations */
/**
* Currently only used in Checkbox.
*/
:host([disabled]) {
  cursor: default;
  -webkit-user-select: none;
          user-select: none;
  opacity: var(--calcite-opacity-disabled);
}

:host([disabled]) *,
:host([disabled]) ::slotted(*) {
  pointer-events: none;
}

:host {
  display: block;
}

:host([scale=s]) input {
  padding-inline-start: 0.5rem;
  padding-inline-end: var(--calcite-internal-input-text-input-padding-inline-end, 0.5rem);
}
:host([scale=s]) input, :host([scale=s]) .prefix, :host([scale=s]) .suffix {
  block-size: 1.5rem;
  font-size: var(--calcite-font-size--2);
  line-height: 1rem;
}
:host([scale=s]) .prefix, :host([scale=s]) .suffix {
  padding-inline: 0.5rem;
}
:host([scale=s]) .action-wrapper calcite-button, :host([scale=s]) .action-wrapper calcite-button button {
  block-size: 1.5rem;
}
:host([scale=s]) .clear-button {
  min-block-size: 1.5rem;
  min-inline-size: 1.5rem;
}

:host([scale=m]) input {
  padding-inline-start: 0.75rem;
  padding-inline-end: var(--calcite-internal-input-text-input-padding-inline-end, 0.75rem);
}
:host([scale=m]) input, :host([scale=m]) .prefix, :host([scale=m]) .suffix {
  block-size: 2rem;
  font-size: var(--calcite-font-size--1);
  line-height: 1rem;
}
:host([scale=m]) .prefix, :host([scale=m]) .suffix {
  padding-inline: 0.75rem;
}
:host([scale=m]) .action-wrapper calcite-button, :host([scale=m]) .action-wrapper calcite-button button {
  block-size: 2rem;
}
:host([scale=m]) .clear-button {
  min-block-size: 2rem;
  min-inline-size: 2rem;
}

:host([scale=l]) input {
  padding-inline-start: 1rem;
  padding-inline-end: var(--calcite-internal-input-text-input-padding-inline-end, 1rem);
}
:host([scale=l]) input, :host([scale=l]) .prefix, :host([scale=l]) .suffix {
  block-size: 2.75rem;
  font-size: var(--calcite-font-size-0);
  line-height: 1.25rem;
}
:host([scale=l]) .prefix, :host([scale=l]) .suffix {
  padding-inline: 1rem;
}
:host([scale=l]) .action-wrapper calcite-button, :host([scale=l]) .action-wrapper calcite-button button {
  block-size: 2.75rem;
}
:host([scale=l]) .clear-button {
  min-block-size: 2.75rem;
  min-inline-size: 2.75rem;
}

:host([disabled]) ::slotted([calcite-hydrated][disabled]),
:host([disabled]) [calcite-hydrated][disabled] {
  /* prevent opacity stacking */
  opacity: 1;
}

.interaction-container {
  display: contents;
}

input {
  transition: var(--calcite-animation-timing), block-size 0, outline-offset 0s;
  -webkit-appearance: none;
  position: relative;
  margin: 0px;
  box-sizing: border-box;
  display: flex;
  max-block-size: 100%;
  inline-size: 100%;
  max-inline-size: 100%;
  flex: 1 1 0%;
  text-overflow: ellipsis;
  border-radius: 0px;
  background-color: var(--calcite-color-foreground-1);
  font-family: inherit;
  font-weight: var(--calcite-font-weight-normal);
  color: var(--calcite-color-text-1);
}
input:placeholder-shown {
  text-overflow: ellipsis;
}

input {
  border-width: 1px;
  border-style: solid;
  border-color: var(--calcite-color-border-input);
  color: var(--calcite-color-text-1);
}
input::placeholder, input:-ms-input-placeholder, input::-ms-input-placeholder {
  font-weight: var(--calcite-font-weight-normal);
  color: var(--calcite-color-text-3);
}

input:focus {
  border-color: var(--calcite-color-brand);
  color: var(--calcite-color-text-1);
}

input[readonly] {
  background-color: var(--calcite-color-background);
  font-weight: var(--calcite-font-weight-medium);
}

input[readonly]:focus {
  color: var(--calcite-color-text-1);
}

calcite-icon {
  color: var(--calcite-color-text-3);
}

input {
  outline-color: transparent;
}

input:focus {
  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand-hover, var(--calcite-color-brand)));
  outline-offset: calc(
            -2px *
            calc(
              1 -
              2 * clamp(
                0,
                var(--calcite-offset-invert-focus),
                1
              )
            )
          );
}

:host([status=invalid]) input {
  border-color: var(--calcite-color-status-danger);
}
:host([status=invalid]) input:focus {
  outline: 2px solid var(--calcite-color-status-danger);
  outline-offset: calc(
            -2px *
            calc(
              1 -
              2 * clamp(
                0,
                var(--calcite-offset-invert-focus),
                1
              )
            )
          );
}

:host([scale=s]) .icon {
  inset-inline-start: 0.5rem;
}

:host([scale=m]) .icon {
  inset-inline-start: 0.75rem;
}

:host([scale=l]) .icon {
  inset-inline-start: 1rem;
}

:host([icon][scale=s]) input {
  padding-inline-start: 2rem;
}

:host([icon][scale=m]) input {
  padding-inline-start: 2.5rem;
}

:host([icon][scale=l]) input {
  padding-inline-start: 3.5rem;
}

.element-wrapper {
  position: relative;
  order: 3;
  display: inline-flex;
  flex: 1 1 0%;
  align-items: center;
}

.icon {
  pointer-events: none;
  position: absolute;
  z-index: var(--calcite-z-index);
  display: block;
  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;
}

input[type=text]::-ms-clear,
input[type=text]::-ms-reveal {
  display: none;
  block-size: 0px;
  inline-size: 0px;
}

.clear-button {
  pointer-events: initial;
  order: 4;
  margin: 0px;
  box-sizing: border-box;
  display: flex;
  min-block-size: 100%;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  align-self: stretch;
  border-width: 1px;
  border-style: solid;
  border-color: var(--calcite-color-border-input);
  background-color: var(--calcite-color-foreground-1);
  outline-color: transparent;
  border-inline-start-width: 0px;
}
.clear-button:hover {
  background-color: var(--calcite-color-foreground-2);
  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;
}
.clear-button:hover calcite-icon {
  color: var(--calcite-color-text-1);
  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;
}
.clear-button:active {
  background-color: var(--calcite-color-foreground-3);
}
.clear-button:active calcite-icon {
  color: var(--calcite-color-text-1);
}
.clear-button:focus {
  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand-hover, var(--calcite-color-brand)));
  outline-offset: calc(
            -2px *
            calc(
              1 -
              2 * clamp(
                0,
                var(--calcite-offset-invert-focus),
                1
              )
            )
          );
}
.clear-button:disabled {
  opacity: var(--calcite-opacity-disabled);
}

.loader {
  inset-block-start: 1px;
  inset-inline: 1px;
  pointer-events: none;
  position: absolute;
  display: block;
}

.action-wrapper {
  order: 7;
  display: flex;
}

.prefix,
.suffix {
  box-sizing: border-box;
  display: flex;
  block-size: auto;
  min-block-size: 100%;
  -webkit-user-select: none;
          user-select: none;
  align-content: center;
  align-items: center;
  overflow-wrap: break-word;
  border-width: 1px;
  border-style: solid;
  border-color: var(--calcite-color-border-input);
  background-color: var(--calcite-color-background);
  font-weight: var(--calcite-font-weight-medium);
  line-height: 1;
  color: var(--calcite-color-text-2);
}

.prefix {
  order: 2;
  border-inline-end-width: 0px;
}

.suffix {
  order: 5;
  border-inline-start-width: 0px;
}

:host([alignment=start]) input {
  text-align: start;
}

:host([alignment=end]) input {
  text-align: end;
}

.wrapper {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: center;
}

:host(.no-bottom-border) input {
  border-block-end-width: 0px;
}

:host(.border-top-color-one) input {
  border-block-start-color: var(--calcite-color-border-1);
}

input.inline-child {
  background-color: transparent;
  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;
}
input.inline-child .editing-enabled {
  background-color: inherit;
}
input.inline-child:not(.editing-enabled) {
  display: flex;
  cursor: pointer;
  text-overflow: ellipsis;
  border-color: transparent;
  padding-inline-start: 0;
}

.validation-container {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  align-self: stretch;
}

:host([scale=m]) .validation-container,
:host([scale=l]) .validation-container {
  padding-block-start: 0.5rem;
}

:host([scale=s]) .validation-container {
  padding-block-start: 0.25rem;
}

::slotted(input[slot=hidden-form-input]) {
  margin: 0 !important;
  opacity: 0 !important;
  outline: none !important;
  padding: 0 !important;
  position: absolute !important;
  inset: 0 !important;
  transform: none !important;
  -webkit-appearance: none !important;
  z-index: -1 !important;
}

:host([hidden]) {
  display: none;
}

[hidden] {
  display: none;
}