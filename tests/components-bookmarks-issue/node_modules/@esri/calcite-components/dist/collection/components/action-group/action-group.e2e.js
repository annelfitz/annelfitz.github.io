/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.6.0
 */
import { newE2EPage } from "@stencil/core/testing";
import { accessible, defaults, focusable, hidden, renders, slots, t9n } from "../../tests/commonTests";
import { CSS, SLOTS } from "./resources";
const actionGroupHTML = `<calcite-action-group scale="l">
      <calcite-action id="plus" slot="menu-actions" text="Add" icon="plus"></calcite-action>
      <calcite-action id="banana" slot="menu-actions" text="Banana" icon="banana"></calcite-action>
      </calcite-action-group>`;
describe("calcite-action-group", () => {
    describe("defaults", () => {
        defaults("calcite-action-group", [
            {
                propertyName: "layout",
                defaultValue: "vertical",
            },
            {
                propertyName: "overlayPositioning",
                defaultValue: "absolute",
            },
        ]);
    });
    describe("renders", () => {
        renders("calcite-action-group", { display: "flex" });
    });
    describe("focusable", () => {
        focusable(actionGroupHTML, { shadowFocusTargetSelector: "calcite-action" });
    });
    describe("honors hidden attribute", () => {
        hidden("calcite-action-group");
    });
    describe("accessible", () => {
        accessible(actionGroupHTML);
    });
    describe("slots", () => {
        slots("calcite-action-group", SLOTS);
    });
    it("should honor scale of expand icon", async () => {
        const page = await newE2EPage({ html: actionGroupHTML });
        const menu = await page.find(`calcite-action-group >>> calcite-action-menu`);
        expect(await menu.getProperty("scale")).toBe("l");
    });
    it("should honor overlayPositioning", async () => {
        const page = await newE2EPage();
        await page.setContent(`<calcite-action-group scale="l" overlay-positioning="fixed">
    <calcite-action id="plus" slot="menu-actions" text="Add" icon="plus"></calcite-action>
    <calcite-action id="banana" slot="menu-actions" text="Banana" icon="banana"></calcite-action>
    </calcite-action-group>`);
        await page.waitForChanges();
        const menu = await page.find(`calcite-action-group >>> calcite-action-menu`);
        expect(await menu.getProperty("overlayPositioning")).toBe("fixed");
    });
    it("should honor label", async () => {
        const page = await newE2EPage();
        await page.setContent(`<calcite-action-group label="test">
    <calcite-action id="plus" slot="menu-actions" text="Add" icon="plus"></calcite-action>
    <calcite-action id="banana" slot="menu-actions" text="Banana" icon="banana"></calcite-action>
    </calcite-action-group>`);
        await page.waitForChanges();
        const container = await page.find(`calcite-action-group >>> .${CSS.container}`);
        expect(await container.getProperty("ariaLabel")).toBe("test");
    });
    describe("translation support", () => {
        t9n("calcite-action-group");
    });
});
//# sourceMappingURL=action-group.e2e.js.map
