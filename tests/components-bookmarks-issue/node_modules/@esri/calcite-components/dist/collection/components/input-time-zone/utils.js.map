{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/components/input-time-zone/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { TimeZoneItem, TimeZoneMode, TimeZoneName } from \"./interfaces\";\nimport { getDateTimeFormat, SupportedLocale } from \"../../utils/locale\";\nimport { InputTimeZoneMessages } from \"./assets/input-time-zone/t9n\";\n\nconst hourToMinutes = 60;\n\nconst timeZoneNameBlockList = [\n  \"CET\",\n  \"CST6CDT\",\n  \"EET\",\n  \"EST\",\n  \"EST5EDT\",\n  \"Factory\",\n  \"HST\",\n  \"MET\",\n  \"MST\",\n  \"MST7MDT\",\n  \"PST8PDT\",\n  \"UTC\",\n  \"WET\",\n];\n\nfunction timeZoneOffsetToDecimal(shortOffsetTimeZoneName: string): string {\n  const minusSign = \"âˆ’\";\n  const hyphen = \"-\";\n\n  return (\n    shortOffsetTimeZoneName\n      .replace(\":15\", \".25\")\n      .replace(\":30\", \".5\")\n      .replace(\":45\", \".75\")\n\n      // ensures decimal string representation is parseable\n      .replace(minusSign, hyphen)\n  );\n}\n\nfunction toOffsetValue(timeZoneName: TimeZoneName, referenceDateInMs: number): number {\n  // we use \"en-US\" to allow us to reliably remove the standard time token\n  const offset = getTimeZoneShortOffset(timeZoneName, \"en-US\", referenceDateInMs).replace(\"GMT\", \"\");\n\n  if (offset === \"\") {\n    return 0;\n  }\n\n  return Number(timeZoneOffsetToDecimal(offset)) * hourToMinutes;\n}\n\nexport function getUserTimeZoneOffset(): number {\n  const localDate = new Date();\n  return localDate.getTimezoneOffset() * -1;\n}\n\nexport function getUserTimeZoneName(): string {\n  const dateFormatter = new Intl.DateTimeFormat();\n  return dateFormatter.resolvedOptions().timeZone;\n}\n\n/**\n * The lazy-loaded timezone-groups lib to be used across instances.\n */\nlet timeZoneGroups: Promise<[any, any]>;\n\nexport async function createTimeZoneItems(\n  locale: SupportedLocale,\n  messages: InputTimeZoneMessages,\n  mode: TimeZoneMode,\n  referenceDate: Date,\n): Promise<TimeZoneItem[]> {\n  const referenceDateInMs: number = referenceDate.getTime();\n  const timeZoneNames = Intl.supportedValuesOf(\"timeZone\");\n\n  if (mode === \"offset\") {\n    if (!timeZoneGroups) {\n      timeZoneGroups = Promise.all([\n        import(\"timezone-groups/dist/index.js\"),\n        import(\"timezone-groups/dist/strategy/native/index.js\"),\n      ]);\n    }\n\n    return timeZoneGroups.then(async ([{ groupTimeZones }, { DateEngine }]) => {\n      const timeZoneGroups: { labelTzIndices: number[]; tzs: TimeZoneName[] }[] = await groupTimeZones({\n        dateEngine: new DateEngine(),\n        groupDateRange: 1,\n        startDate: new Date(referenceDateInMs).toISOString(),\n      });\n\n      const listFormatter = new Intl.ListFormat(locale, { style: \"long\", type: \"conjunction\" });\n\n      // we remove blocked entries from tzs and adjust label indices accordingly\n      timeZoneGroups.forEach((group) => {\n        const indexOffsets: number[] = [];\n        let removedSoFar = 0;\n\n        group.tzs.forEach((tz, index) => {\n          if (timeZoneNameBlockList.includes(tz)) {\n            removedSoFar++;\n          }\n          indexOffsets[index] = removedSoFar;\n        });\n\n        group.tzs = group.tzs.filter((tz) => !timeZoneNameBlockList.includes(tz));\n\n        group.labelTzIndices = group.labelTzIndices\n          .map((index) => index - indexOffsets[index])\n          .filter((index) => index >= 0 && index < group.tzs.length);\n      });\n\n      return timeZoneGroups\n        .map<TimeZoneItem<number>>(({ labelTzIndices, tzs }) => {\n          const groupRepTz = tzs[0];\n          const decimalOffset = timeZoneOffsetToDecimal(getTimeZoneShortOffset(groupRepTz, locale, referenceDateInMs));\n          const value = toOffsetValue(groupRepTz, referenceDateInMs);\n          const tzLabels = labelTzIndices.map((index: number) => {\n            const timeZone = tzs[index];\n            const timeZoneLabel = messages[timeZone];\n            return (\n              timeZoneLabel ||\n              // get city token\n              timeZone.split(\"/\").pop()\n            );\n          });\n\n          const label = createTimeZoneOffsetLabel(messages, decimalOffset, listFormatter.format(tzLabels));\n\n          return {\n            label,\n            value,\n            filterValue: tzs.map((tz) => toUserFriendlyName(tz)),\n          };\n        })\n        .filter((group) => !!group)\n        .sort((groupA, groupB) => groupA.value - groupB.value);\n    });\n  }\n\n  return timeZoneNames\n    .map<TimeZoneItem<string>>((timeZone) => {\n      const label = toUserFriendlyName(timeZone);\n      const value = timeZone;\n\n      return {\n        label,\n        value,\n        filterValue: timeZone,\n      };\n    })\n    .filter((group) => !!group)\n    .sort();\n}\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport function toUserFriendlyName(timeZoneName: string): string {\n  return timeZoneName.replace(/_/g, \" \");\n}\n\nfunction createTimeZoneOffsetLabel(messages: InputTimeZoneMessages, offsetLabel: string, groupLabel: string): string {\n  return messages.timeZoneLabel.replace(\"{offset}\", offsetLabel).replace(\"{cities}\", groupLabel);\n}\n\nfunction getTimeZoneShortOffset(\n  timeZone: TimeZoneName,\n  locale: SupportedLocale,\n  referenceDateInMs: number = Date.now(),\n): string {\n  const dateTimeFormat = getDateTimeFormat(locale, { timeZone, timeZoneName: \"shortOffset\" });\n  const parts = dateTimeFormat.formatToParts(referenceDateInMs);\n  return parts.find(({ type }) => type === \"timeZoneName\").value;\n}\n"]}