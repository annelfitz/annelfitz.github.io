import { NumberingSystem } from "./locale";
export type FractionalSecondDigits = 1 | 2 | 3;
export type HourCycle = "12" | "24";
export interface LocalizedTime {
    localizedHour: string;
    localizedHourSuffix: string;
    localizedMinute: string;
    localizedMinuteSuffix: string;
    localizedSecond: string;
    localizedDecimalSeparator: string;
    localizedFractionalSecond: string;
    localizedSecondSuffix: string;
    localizedMeridiem: string;
}
export type Meridiem = "AM" | "PM";
export type MinuteOrSecond = "minute" | "second";
export interface Time {
    fractionalSecond: string;
    hour: string;
    minute: string;
    second: string;
}
export type TimePart = "hour" | "hourSuffix" | "minute" | "minuteSuffix" | "second" | "decimalSeparator" | "fractionalSecond" | "secondSuffix" | "meridiem";
export declare const maxTenthForMinuteAndSecond = 5;
export declare function formatTimePart(number: number, minLength?: number): string;
export declare function formatTimeString(value: string): string;
export declare function getLocaleHourCycle(locale: string, numberingSystem: NumberingSystem): HourCycle;
export declare function getLocalizedDecimalSeparator(locale: string, numberingSystem: NumberingSystem): string;
export declare function getLocalizedTimePartSuffix(part: "hour" | "minute" | "second", locale: string, numberingSystem?: NumberingSystem): string;
export declare function getMeridiem(hour: string): Meridiem;
export declare function isValidTime(value: string): boolean;
interface LocalizeTimePartParameters {
    value: string;
    part: TimePart;
    locale: string;
    numberingSystem: NumberingSystem;
}
export declare function localizeTimePart({ value, part, locale, numberingSystem }: LocalizeTimePartParameters): string;
interface LocalizeTimeStringParameters {
    value: string;
    includeSeconds?: boolean;
    fractionalSecondDigits?: FractionalSecondDigits;
    locale: string;
    numberingSystem: NumberingSystem;
}
export declare function localizeTimeString({ value, locale, numberingSystem, includeSeconds, fractionalSecondDigits, }: LocalizeTimeStringParameters): string;
interface LocalizeTimeStringToPartsParameters {
    value: string;
    locale: string;
    numberingSystem?: NumberingSystem;
}
export declare function localizeTimeStringToParts({ value, locale, numberingSystem, }: LocalizeTimeStringToPartsParameters): LocalizedTime;
interface GetTimePartsParameters {
    value: string;
    locale: string;
    numberingSystem: NumberingSystem;
}
export declare function getTimeParts({ value, locale, numberingSystem }: GetTimePartsParameters): Intl.DateTimeFormatPart[];
export declare function parseTimeString(value: string): Time;
export declare function toISOTimeString(value: string, includeSeconds?: boolean): string;
export {};
