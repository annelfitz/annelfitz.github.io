declare const _default: {
    theme: {
        borderColor: ({ theme }: {
            theme: any;
        }) => object;
        colors: {
            current: string;
            brand: string;
            "brand-hover": string;
            "brand-press": string;
            info: string;
            success: string;
            warning: string;
            danger: string;
            "danger-hover": string;
            "danger-press": string;
            background: {
                background: string;
                foreground: {
                    1: string;
                    2: string;
                    3: string;
                };
            };
            color: {
                1: string;
                2: string;
                3: string;
                inverse: string;
                link: string;
                icon: string;
            };
            transparent: string;
        };
        fontFamily: {
            sans: string;
            mono: string;
            inherit: string;
        };
        fontSize: {
            n3: string;
            n2: string;
            n1: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            n3h: (string | {
                lineHeight: string;
            })[];
            n2h: (string | {
                lineHeight: string;
            })[];
            n1h: (string | {
                lineHeight: string;
            })[];
            "0h": (string | {
                lineHeight: string;
            })[];
            "1h": (string | {
                lineHeight: string;
            })[];
            "2h": (string | {
                lineHeight: string;
            })[];
            "3h": (string | {
                lineHeight: string;
            })[];
            "4h": (string | {
                lineHeight: string;
            })[];
            "5h": (string | {
                lineHeight: string;
            })[];
            "6h": (string | {
                lineHeight: string;
            })[];
            "7h": (string | {
                lineHeight: string;
            })[];
            "8h": (string | {
                lineHeight: string;
            })[];
            "n3-wrap": (string | {
                lineHeight: string;
            })[];
            "n2-wrap": (string | {
                lineHeight: string;
            })[];
            "n1-wrap": (string | {
                lineHeight: string;
            })[];
            "0-wrap": (string | {
                lineHeight: string;
            })[];
            "1-wrap": (string | {
                lineHeight: string;
            })[];
            "2-wrap": (string | {
                lineHeight: string;
            })[];
            "3-wrap": (string | {
                lineHeight: string;
            })[];
            "4-wrap": (string | {
                lineHeight: string;
            })[];
            "5-wrap": (string | {
                lineHeight: string;
            })[];
            "6-wrap": (string | {
                lineHeight: string;
            })[];
            "7-wrap": (string | {
                lineHeight: string;
            })[];
            "8-wrap": (string | {
                lineHeight: string;
            })[];
        };
        fontWeight: {
            light: string;
            normal: string;
            medium: string;
            bold: string;
        };
        screens: {
            s: string;
            m: string;
            l: string;
            xl: string;
        };
        backgroundColor: ({ theme }: {
            theme: any;
        }) => object;
        extend: {
            animation: {
                in: string;
                "in-down": string;
                "in-up": string;
                "in-scale": string;
            };
            borderRadius: {
                half: string;
            };
            boxShadow: {
                0: string;
                1: string;
                "1-lg": string;
                "1-sm": string;
                2: string;
                "2-lg": string;
                "2-sm": string;
                "border-bottom": string;
                "border-top": string;
                "outline-active": string;
                none: string;
                xs: string;
                outline: string;
            };
            keyframes: {
                in: {
                    "0%": {
                        opacity: number;
                    };
                    "100%": {
                        opacity: number;
                    };
                };
                "in-down": {
                    "0%": {
                        opacity: number;
                        transform: string;
                    };
                    "100%": {
                        opacity: number;
                        transform: string;
                    };
                };
                "in-up": {
                    "0%": {
                        opacity: number;
                        transform: string;
                    };
                    "100%": {
                        opacity: number;
                        transform: string;
                    };
                };
                "in-scale": {
                    "0%": {
                        opacity: number;
                        transform: string;
                    };
                    "100%": {
                        opacity: number;
                        transform: string;
                    };
                };
            };
            opacity: {
                disabled: string;
            };
            spacing: {
                0.5: string;
                2.5: string;
                3.5: string;
                4.5: string;
                9: string;
                11: string;
                13: string;
            };
            transitionProperty: {
                margin: string;
                color: string;
            };
            transitionTimingFunction: {
                cubic: string;
            };
            maxHeight: {
                menu: string;
            };
            zIndex: {
                deep: string;
                default: string;
                sticky: string;
                header: string;
                toast: string;
                dropdown: string;
                overlay: string;
                modal: string;
                popover: string;
                tooltip: string;
            };
        };
    };
    plugins: {
        handler: import("tailwindcss/types/config").PluginCreator;
        config?: Partial<import("tailwindcss/types/config").Config>;
    }[];
};
export default _default;
