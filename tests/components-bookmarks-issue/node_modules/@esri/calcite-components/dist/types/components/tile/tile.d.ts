import { VNode } from "../../stencil-public-runtime";
import { InteractiveComponent } from "../../utils/interactive";
import { Alignment, Scale } from "../interfaces";
/**
 * @slot content-start - A slot for adding non-actionable elements before the component's content.
 * @slot content-end - A slot for adding non-actionable elements after the component's content.
 */
export declare class Tile implements InteractiveComponent {
    /**
     * When `true`, the component is active.
     */
    active: boolean;
    /**
     * Specifies the alignment of the Tile's content.
     */
    alignment: Exclude<Alignment, "end">;
    /**
     * A description for the component, which displays below the heading.
     */
    description: string;
    /**
     * When `true`, interaction is prevented and the component is displayed with lower opacity.
     */
    disabled: boolean;
    /**
     * The component's embed mode.
     *
     * When `true`, renders without a border and padding for use by other components.
     *
     * @deprecated No longer necessary.
     */
    embed: boolean;
    /**
     * The focused state of the component.
     *
     * @internal
     */
    focused: boolean;
    /** The component header text, which displays between the icon and description. */
    heading: string;
    /** When embed is `"false"`, the URL for the component. */
    href: string;
    /** Specifies an icon to display. */
    icon: string;
    /** When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`). */
    iconFlipRtl: boolean;
    /**
     * Specifies the size of the component.
     */
    scale: Scale;
    el: HTMLCalciteTileElement;
    hasContentStart: boolean;
    hasContentEnd: boolean;
    private handleContentStartSlotChange;
    private handleContentEndSlotChange;
    connectedCallback(): void;
    disconnectedCallback(): void;
    componentDidRender(): void;
    renderTile(): VNode;
    render(): VNode;
}
