import { EventEmitter, VNode } from "../../stencil-public-runtime";
import { LocalizedComponent } from "../../utils/locale";
import { Scale, SelectionMode } from "../interfaces";
import { RowType, TableInteractionMode, TableRowFocusEvent } from "../table/interfaces";
import { InteractiveComponent } from "../../utils/interactive";
/**
 * @slot - A slot for adding `calcite-table-cell` or `calcite-table-header` elements.
 */
export declare class TableRow implements InteractiveComponent, LocalizedComponent {
    /** When `true`, interaction is prevented and the component is displayed with lower opacity. */
    disabled: boolean;
    /** When `true`, the component is selected. */
    selected: boolean;
    /** @internal */
    cellCount: number;
    /** @internal */
    interactionMode: TableInteractionMode;
    /** @internal */
    lastVisibleRow: boolean;
    /** @internal */
    rowType: RowType;
    /** @internal */
    numbered: boolean;
    /** @internal */
    positionSection: number;
    /** @internal */
    positionSectionLocalized: string;
    /** @internal */
    positionAll: number;
    /** @internal */
    readCellContentsToAT: boolean;
    /** @internal */
    scale: Scale;
    /** @internal */
    selectionMode: Extract<"multiple" | "single" | "none", SelectionMode>;
    /** @internal */
    selectedRowCount: number;
    /** @internal */
    selectedRowCountLocalized: string;
    /** @internal */
    bodyRowCount: number;
    handleCellChanges(): void;
    handleDelayedCellChanges(): void;
    componentDidLoad(): void;
    connectedCallback(): void;
    componentDidRender(): void;
    disconnectedCallback(): void;
    el: HTMLCalciteTableRowElement;
    private rowCells;
    private tableRowEl;
    private tableRowSlotEl;
    effectiveLocale: string;
    /**
     * Fires when the selected state of the component changes.
     */
    calciteTableRowSelect: EventEmitter<void>;
    /** @internal */
    calciteInternalTableRowFocusRequest: EventEmitter<TableRowFocusEvent>;
    calciteInternalTableRowFocusChangeHandler(event: CustomEvent): void;
    private keyDownHandler;
    private emitTableRowFocusRequest;
    private updateCells;
    private handleSelectionOfRow;
    private handleKeyboardSelection;
    renderSelectionIcon(): VNode;
    renderSelectableCell(): VNode;
    renderNumberedCell(): VNode;
    render(): VNode;
}
