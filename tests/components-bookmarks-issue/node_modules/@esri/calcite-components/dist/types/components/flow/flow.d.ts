import { VNode } from "../../stencil-public-runtime";
import { FlowDirection, FlowItemLikeElement } from "./interfaces";
import { LoadableComponent } from "../../utils/loadable";
/**
 * @slot - A slot for adding `calcite-flow-item` elements to the component.
 */
export declare class Flow implements LoadableComponent {
    /**
     * Removes the currently active `calcite-flow-item`.
     */
    back(): Promise<HTMLCalciteFlowItemElement | FlowItemLikeElement>;
    /**
     * Sets focus on the component.
     */
    setFocus(): Promise<void>;
    /**
     * This property enables the component to consider other custom elements implementing flow-item's interface.
     *
     * @internal
     */
    customItemSelectors: string;
    el: HTMLCalciteFlowElement;
    flowDirection: FlowDirection;
    itemCount: number;
    items: FlowItemLikeElement[];
    itemMutationObserver: import("../../utils/observers").ExtendedMutationObserver;
    connectedCallback(): void;
    componentWillLoad(): Promise<void>;
    componentDidLoad(): void;
    disconnectedCallback(): void;
    handleItemBackClick(event: CustomEvent): Promise<void>;
    getFlowDirection: (oldFlowItemCount: number, newFlowItemCount: number) => FlowDirection | null;
    updateFlowProps: () => void;
    render(): VNode;
}
