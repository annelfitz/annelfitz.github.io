import { EventEmitter, VNode } from "../../stencil-public-runtime";
import { ItemKeyboardEvent } from "../dropdown/interfaces";
import { RequestedItem } from "../dropdown-group/interfaces";
import { FlipContext, Scale, SelectionMode } from "../interfaces";
import { LoadableComponent } from "../../utils/loadable";
import { InteractiveComponent } from "../../utils/interactive";
/**
 * @slot - A slot for adding text.
 */
export declare class DropdownItem implements InteractiveComponent, LoadableComponent {
    /**
     * When `true`, interaction is prevented and the component is displayed with lower opacity.
     */
    disabled: boolean;
    /**
     *  Specifies the URL of the linked resource, which can be set as an absolute or relative path.
     *
     * Determines if the component will render as an anchor.
     */
    href: string;
    /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`"rtl"`). */
    iconFlipRtl: FlipContext;
    /** Specifies an icon to display at the start of the component. */
    iconStart: string;
    /** Specifies an icon to display at the end of the component. */
    iconEnd: string;
    /** Accessible name for the component. */
    label: string;
    /** Specifies the relationship to the linked document defined in `href`. */
    rel: string;
    /** When `true`, the component is selected. */
    selected: boolean;
    /** Specifies the frame or window to open the linked document. */
    target: string;
    /** Fires when the component is selected. */
    calciteDropdownItemSelect: EventEmitter<void>;
    /**
     * @internal
     */
    calciteInternalDropdownItemSelect: EventEmitter<RequestedItem>;
    /** @internal */
    calciteInternalDropdownItemKeyEvent: EventEmitter<ItemKeyboardEvent>;
    /** @internal */
    calciteInternalDropdownCloseRequest: EventEmitter<void>;
    /** Sets focus on the component. */
    setFocus(): Promise<void>;
    /**
     * Specifies the selection mode inherited from `calcite-dropdown-group`, defaults to `single`:
     * - `multiple` allows any number of selected items,
     * - `single` allows only one selection (default),
     * - `none` doesn't allow for any selection.
     *
     * @internal
     */
    selectionMode: Extract<"none" | "single" | "multiple", SelectionMode>;
    /**
     * Specifies the size of the component inherited from `calcite-dropdown`, defaults to `m`.
     *
     * @internal
     */
    scale: Scale;
    componentWillLoad(): void;
    componentDidLoad(): void;
    connectedCallback(): void;
    componentDidRender(): void;
    render(): VNode;
    onClick(): void;
    keyDownHandler(event: KeyboardEvent): void;
    updateActiveItemOnChange(event: CustomEvent): void;
    el: HTMLCalciteDropdownItemElement;
    /** id of containing group */
    private parentDropdownGroupEl;
    /** requested group */
    private requestedDropdownGroup;
    /** requested item */
    private requestedDropdownItem;
    /** if href is requested, track the rendered child link*/
    private childLink;
    private initialize;
    private determineActiveItem;
    private emitRequestedItem;
}
