import { VNode } from "../../stencil-public-runtime";
import { Alignment, Scale } from "../interfaces";
import { LoadableComponent } from "../../utils/loadable";
import { T9nComponent } from "../../utils/t9n";
import { InteractiveComponent } from "../../utils/interactive";
import { LocalizedComponent } from "../../utils/locale";
import { TableCellMessages } from "./assets/table-cell/t9n";
import { RowType, TableInteractionMode } from "../table/interfaces";
/**
 * @slot - A slot for adding content, usually text content.
 */
export declare class TableCell implements InteractiveComponent, LocalizedComponent, LoadableComponent, T9nComponent {
    /** Specifies the alignment of the component. */
    alignment: Alignment;
    /** Specifies the number of columns the component should span. */
    colSpan: number;
    /** Specifies the number of rows the component should span. */
    rowSpan: number;
    /** @internal */
    disabled: boolean;
    /** @internal */
    interactionMode: TableInteractionMode;
    /** @internal */
    lastCell: boolean;
    /** @internal */
    numberCell: boolean;
    /** @internal */
    parentRowIsSelected: boolean;
    onSelectedChange(): void;
    /** @internal */
    parentRowPositionLocalized: string;
    /** @internal */
    parentRowType: RowType;
    /** @internal */
    positionInRow: number;
    /** @internal */
    readCellContentsToAT: boolean;
    /** @internal */
    scale: Scale;
    /** @internal */
    selectionCell: boolean;
    /**
     * Made into a prop for testing purposes only
     *
     * @internal
     */
    messages: TableCellMessages;
    /**
     * Use this property to override individual strings used by the component.
     */
    messageOverrides: Partial<TableCellMessages>;
    onMessagesChange(): void;
    el: HTMLCalciteTableCellElement;
    contentsText: string;
    defaultMessages: TableCellMessages;
    focused: boolean;
    selectionText: string;
    effectiveLocale: string;
    effectiveLocaleChange(): void;
    private containerEl;
    componentWillLoad(): Promise<void>;
    componentDidLoad(): void;
    connectedCallback(): void;
    componentDidRender(): void;
    disconnectedCallback(): void;
    /** Sets focus on the component. */
    setFocus(): Promise<void>;
    private updateScreenReaderSelectionText;
    private updateScreenReaderContentsText;
    private onContainerBlur;
    private onContainerFocus;
    render(): VNode;
}
