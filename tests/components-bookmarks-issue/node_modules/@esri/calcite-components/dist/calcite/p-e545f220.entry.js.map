{"version":3,"names":["CSS","lastVisibleRow","tableRowCss","TableRow","this","rowCells","keyDownHandler","event","interactionMode","el","target","key","isControl","ctrlKey","cells","matches","emitTableRowFocusRequest","positionInRow","positionAll","preventDefault","focusElementInGroup","length","cellPosition","rowPosition","destination","lastCell","calciteInternalTableRowFocusRequest","emit","updateCells","slottedCells","tableRowSlotEl","assignedElements","flatten","filter","renderedCells","Array","from","tableRowEl","querySelectorAll","numberCell","selectionCell","concat","forEach","cell","index","parentRowType","rowType","parentRowIsSelected","selected","scale","nodeName","readCellContentsToAT","disabled","cellCount","handleSelectionOfRow","calciteTableRowSelect","handleKeyboardSelection","isActivationKey","handleCellChanges","handleDelayedCellChanges","requestAnimationFrame","componentDidLoad","connectedCallback","connectInteractive","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","calciteInternalTableRowFocusChangeHandler","contains","position","detail","deflectDirection","find","_","setFocus","renderSelectionIcon","icon","selectionMode","h","getIconScale","renderSelectableCell","alignment","bodyRowCount","onClick","onKeyDown","selectedRowCount","selectedRowCountLocalized","parentRowPositionLocalized","positionSectionLocalized","renderNumberedCell","render","Host","InteractiveContainer","class","ref","numbered","onSlotchange"],"sources":["src/components/table-row/resources.ts","src/components/table-row/table-row.scss?tag=calcite-table-row&encapsulation=shadow","src/components/table-row/table-row.tsx"],"sourcesContent":["export const CSS = {\n  lastVisibleRow: \"last-visible-row\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-table-row-background: Specifies the background color of the component.\n * @prop --calcite-table-row-border-color: Specifies the border color of the component.\n */\n\n:host {\n  --calcite-internal-table-row-background: var(--calcite-table-row-background, var(--calcite-color-foreground-1));\n  --calcite-internal-table-row-border-color: var(--calcite-table-row-border-color, transparent);\n  @apply contents;\n}\n\n@include base-component();\n\n@include disabled() {\n  tr {\n    @apply opacity-disabled pointer-events-none;\n  }\n}\n\ntr {\n  border-block-end: 1px solid var(--calcite-internal-table-row-border-color);\n  background-color: var(--calcite-internal-table-row-background);\n}\n\ntr.last-visible-row {\n  border-block-end: 0;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { LocalizedComponent } from \"../../utils/locale\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport { focusElementInGroup, FocusElementInGroupDestination } from \"../../utils/dom\";\nimport { RowType, TableInteractionMode, TableRowFocusEvent } from \"../table/interfaces\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { getIconScale } from \"../../utils/component\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-table-cell` or `calcite-table-header` elements.\n */\n\n@Component({\n  tag: \"calcite-table-row\",\n  styleUrl: \"table-row.scss\",\n  shadow: true,\n})\nexport class TableRow implements InteractiveComponent, LocalizedComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, the component is selected. */\n  @Prop({ reflect: true }) selected = false;\n\n  /** @internal */\n  @Prop({ mutable: true }) cellCount: number;\n\n  /** @internal */\n  @Prop() interactionMode: TableInteractionMode = \"interactive\";\n\n  /** @internal */\n  @Prop() lastVisibleRow: boolean;\n\n  /** @internal */\n  @Prop() rowType: RowType;\n\n  /** @internal */\n  @Prop() numbered = false;\n\n  /** @internal */\n  @Prop() positionSection: number;\n\n  /** @internal */\n  @Prop() positionSectionLocalized: string;\n\n  /** @internal */\n  @Prop() positionAll: number;\n\n  /** @internal */\n  @Prop() readCellContentsToAT: boolean;\n\n  /** @internal */\n  @Prop() scale: Scale;\n\n  /** @internal */\n  @Prop() selectionMode: Extract<\"multiple\" | \"single\" | \"none\", SelectionMode> = \"none\";\n\n  /** @internal */\n  @Prop() selectedRowCount: number;\n\n  /** @internal */\n  @Prop() selectedRowCountLocalized: string;\n\n  /** @internal */\n  @Prop() bodyRowCount: number;\n\n  @Watch(\"bodyRowCount\")\n  @Watch(\"scale\")\n  @Watch(\"selected\")\n  @Watch(\"selectedRowCount\")\n  @Watch(\"interactionMode\")\n  handleCellChanges(): void {\n    if (this.tableRowEl && this.rowCells.length > 0) {\n      this.updateCells();\n    }\n  }\n\n  @Watch(\"numbered\")\n  @Watch(\"selectionMode\")\n  handleDelayedCellChanges(): void {\n    if (this.tableRowEl && this.rowCells.length > 0) {\n      requestAnimationFrame(() => this.updateCells());\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentDidLoad(): void {\n    if (this.tableRowEl && this.rowCells.length > 0) {\n      this.updateCells();\n    }\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTableRowElement;\n\n  private rowCells: (HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement)[] = [];\n\n  private tableRowEl: HTMLTableRowElement;\n\n  private tableRowSlotEl: HTMLSlotElement;\n\n  @State() effectiveLocale = \"\";\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the selected state of the component changes.\n   */\n  @Event({ cancelable: false }) calciteTableRowSelect: EventEmitter<void>;\n\n  /** @internal */\n  @Event({ cancelable: false })\n  calciteInternalTableRowFocusRequest: EventEmitter<TableRowFocusEvent>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTableRowFocusChange\", { target: \"document\" })\n  calciteInternalTableRowFocusChangeHandler(event: CustomEvent): void {\n    if ((event.target as Element).contains(this.el)) {\n      const position = event.detail.cellPosition;\n      const rowPosition = event.detail.rowPosition;\n      const destination = event.detail.destination;\n      const lastCell = event.detail.lastCell;\n\n      if (rowPosition === this.positionAll) {\n        if (this.disabled) {\n          const deflectDirection =\n            destination === \"last\" ? \"previous\" : destination === \"first\" ? \"next\" : destination;\n          this.emitTableRowFocusRequest(position, this.positionAll, deflectDirection);\n          return;\n        }\n        const cellPosition = lastCell\n          ? this.rowCells[this.rowCells.length - 1]\n          : this.rowCells?.find((_, index) => index + 1 === position);\n\n        if (cellPosition) {\n          cellPosition.setFocus();\n        }\n      }\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.interactionMode !== \"interactive\") {\n      return;\n    }\n    const el = event.target as HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement;\n    const key = event.key;\n    const isControl = event.ctrlKey;\n    const cells = this.rowCells;\n    if (el.matches(\"calcite-table-cell\") || el.matches(\"calcite-table-header\")) {\n      switch (key) {\n        case \"ArrowUp\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"previous\");\n          event.preventDefault();\n          break;\n        case \"ArrowDown\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"next\");\n          event.preventDefault();\n          break;\n        case \"PageUp\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"first\");\n          event.preventDefault();\n          break;\n        case \"PageDown\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"last\");\n          event.preventDefault();\n          break;\n        case \"ArrowLeft\":\n          focusElementInGroup(cells, el, \"previous\", false);\n          event.preventDefault();\n          break;\n        case \"ArrowRight\":\n          focusElementInGroup(cells, el, \"next\", false);\n          event.preventDefault();\n          break;\n        case \"Home\":\n          if (isControl) {\n            this.emitTableRowFocusRequest(1, this.positionAll, \"first\");\n            event.preventDefault();\n          } else {\n            focusElementInGroup(cells, el, \"first\", false);\n            event.preventDefault();\n          }\n          break;\n        case \"End\":\n          if (isControl) {\n            this.emitTableRowFocusRequest(this.rowCells?.length, this.positionAll, \"last\", true);\n            event.preventDefault();\n          } else {\n            focusElementInGroup(cells, el, \"last\", false);\n            event.preventDefault();\n          }\n          break;\n      }\n    }\n  };\n\n  private emitTableRowFocusRequest = (\n    cellPosition: number,\n    rowPosition: number,\n    destination: FocusElementInGroupDestination,\n    lastCell?: boolean,\n  ): void => {\n    this.calciteInternalTableRowFocusRequest.emit({\n      cellPosition,\n      rowPosition,\n      destination,\n      lastCell,\n    });\n  };\n\n  private updateCells = (): void => {\n    const slottedCells = this.tableRowSlotEl\n      ?.assignedElements({ flatten: true })\n      ?.filter(\n        (el: HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement) =>\n          el.matches(\"calcite-table-cell\") || el.matches(\"calcite-table-header\"),\n      );\n\n    const renderedCells = Array.from(\n      this.tableRowEl?.querySelectorAll(\"calcite-table-header, calcite-table-cell\"),\n    )?.filter(\n      (el: HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement) =>\n        el.numberCell || el.selectionCell,\n    );\n\n    const cells = renderedCells ? renderedCells.concat(slottedCells) : slottedCells;\n\n    if (cells.length > 0) {\n      cells?.forEach((cell: HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement, index) => {\n        cell.interactionMode = this.interactionMode;\n        cell.positionInRow = index + 1;\n        cell.parentRowType = this.rowType;\n        cell.parentRowIsSelected = this.selected;\n        cell.scale = this.scale;\n        cell.lastCell = index === cells.length - 1;\n\n        if (cell.nodeName === \"CALCITE-TABLE-CELL\") {\n          (cell as HTMLCalciteTableCellElement).readCellContentsToAT = this.readCellContentsToAT;\n          (cell as HTMLCalciteTableCellElement).disabled = this.disabled;\n        }\n      });\n    }\n\n    this.rowCells =\n      (cells as (HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement)[]) || [];\n    this.cellCount = cells?.length;\n  };\n\n  private handleSelectionOfRow = (): void => {\n    this.calciteTableRowSelect.emit();\n  };\n\n  private handleKeyboardSelection = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      if (event.key === \" \") {\n        event.preventDefault();\n      }\n      this.handleSelectionOfRow();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderSelectionIcon(): VNode {\n    const icon =\n      this.selectionMode === \"multiple\" && this.selected\n        ? \"check-square-f\"\n        : this.selectionMode === \"multiple\"\n          ? \"square\"\n          : this.selected\n            ? \"circle-f\"\n            : \"circle\";\n\n    return <calcite-icon icon={icon} scale={getIconScale(this.scale)} />;\n  }\n\n  renderSelectableCell(): VNode {\n    return this.rowType === \"head\" ? (\n      <calcite-table-header\n        alignment=\"center\"\n        bodyRowCount={this.bodyRowCount}\n        key=\"selection-head\"\n        onClick={this.selectionMode === \"multiple\" && this.handleSelectionOfRow}\n        onKeyDown={this.selectionMode === \"multiple\" && this.handleKeyboardSelection}\n        selectedRowCount={this.selectedRowCount}\n        selectedRowCountLocalized={this.selectedRowCountLocalized}\n        selectionCell={true}\n        selectionMode={this.selectionMode}\n      />\n    ) : this.rowType === \"body\" ? (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"selection-body\"\n        onClick={this.handleSelectionOfRow}\n        onKeyDown={this.handleKeyboardSelection}\n        parentRowIsSelected={this.selected}\n        parentRowPositionLocalized={this.positionSectionLocalized}\n        selectionCell={true}\n      >\n        {this.renderSelectionIcon()}\n      </calcite-table-cell>\n    ) : (\n      <calcite-table-cell alignment=\"center\" key=\"selection-foot\" selectionCell={true} />\n    );\n  }\n\n  renderNumberedCell(): VNode {\n    return this.rowType === \"head\" ? (\n      <calcite-table-header alignment=\"center\" key=\"numbered-head\" numberCell={true} />\n    ) : this.rowType === \"body\" ? (\n      <calcite-table-cell alignment=\"center\" key=\"numbered-body\" numberCell={true}>\n        {this.positionSectionLocalized}\n      </calcite-table-cell>\n    ) : (\n      <calcite-table-cell alignment=\"center\" key=\"numbered-foot\" numberCell={true} />\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <tr\n            aria-disabled={this.disabled}\n            aria-rowindex={this.positionAll + 1}\n            aria-selected={this.selected}\n            class={{ [CSS.lastVisibleRow]: this.lastVisibleRow }}\n            onKeyDown={this.keyDownHandler}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(el) => (this.tableRowEl = el)}\n          >\n            {this.numbered && this.renderNumberedCell()}\n            {this.selectionMode !== \"none\" && this.renderSelectableCell()}\n            <slot\n              onSlotchange={this.updateCells}\n              ref={(el) => (this.tableRowSlotEl = el as HTMLSlotElement)}\n            />\n          </tr>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}