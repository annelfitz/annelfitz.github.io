/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.6.0
 */
const t=(()=>{const t=Intl.supportedValuesOf("timeZone");const n=["Etc/GMT+1","Etc/GMT+10","Etc/GMT+11","Etc/GMT+12","Etc/GMT+2","Etc/GMT+3","Etc/GMT+4","Etc/GMT+5","Etc/GMT+6","Etc/GMT+7","Etc/GMT+8","Etc/GMT+9","Etc/GMT-1","Etc/GMT-10","Etc/GMT-11","Etc/GMT-12","Etc/GMT-13","Etc/GMT-14","Etc/GMT-2","Etc/GMT-3","Etc/GMT-4","Etc/GMT-5","Etc/GMT-6","Etc/GMT-7","Etc/GMT-8","Etc/GMT-9"];return[...new Set([...t,...n])]})();const n=new Date;const c=n.toISOString();const e=365;const o=e;const s={startDate:c,groupDateRange:o,debug:false};const r=new Set(["Europe","Asia","America","America/Argentina","Africa","Australia","Pacific","Atlantic","Antarctica","Arctic","Indian"]);const a=(t,n,c)=>{const e=[];let o=c.create(t);for(let t=0;t<=n;t++){o=c.increase(o);e.push(c.formatToIsoDateString(o))}return e};const i=t=>{if(t.includes("Istanbul")){return"Europe"}const n=t.lastIndexOf("/");return n===-1?t:t.slice(0,n)};const u=t=>r.has(t);const l=(t,n,c,e,o=false)=>{const s=new Map;if(o){console.log(`Initializing data starting ${n} with ${c} days in the future, comparing ${t.length} timezones`)}const r=a(n,c,e);return t.map((t=>{const n=t.label;const c=i(n);const o=r.map((t=>{const c=`${t}-${n}`;let o=s.get(c);if(o){return o}o=e.isoToTimeZone(t,n);s.set(c,o);return o}));return{...t,continent:c,isRegularContinent:u(c),dates:o}}))};const E=(t,n,c)=>t.length===n.length&&t.every(((t,e)=>c.same(t,n[e])));const M=(t,n=5)=>{const c=t.filter((({label:t})=>u(i(t))));if(c.length===0){return[0]}const e=c.map((n=>t.indexOf(n)));return T(e,n)};function T(t,n=5){const c=t.length;if(c<=n){return t}const e=Math.min(c-2,n-2);const o=(c-1)/(e+1);return[t[0],...Array.from({length:e},((n,c)=>t[Math.round((c+1)*o)])),t[c-1]]}async function G(n){const{debug:c,groupDateRange:e,hooks:o,startDate:r,dateEngine:a}={...s,...n};const i=[];if(!a){throw new Error("dateEngine is required")}const u=t.map((t=>({label:t})));o?.onBeforeTimeZoneMetadataCreate?.(u);const T=l(u,r,e,a,c);o?.onTimeZoneMetadataCreate?.(T);for(const t of T){const{label:n,continent:c,dates:e}=t;if(t.visited){continue}t.visited=true;const s={labelTzIndices:undefined,tzs:[{label:n}]};o?.onGroupCreate?.(s,t);for(const t of T.filter((t=>!t.visited))){const{label:n,continent:r,isRegularContinent:i,dates:u}=t;if((c===r||!i)&&E(e,u,a)){const c={label:n};s.tzs.push(c);o?.onGroupTimeZoneAdd?.(s,c,t);t.visited=true}}i.push(s);o?.onGroupAdd?.(s)}const G=i.map((t=>{o?.onBeforeFinalGroupCreate?.(t);t.tzs=t.tzs.sort(((t,n)=>t.label.localeCompare(n.label)));const n={labelTzIndices:M(t.tzs,7),tzs:t.tzs.map((t=>t.label))};o?.onFinalGroupCreate?.(n,t);return n})).sort(((t,n)=>n.tzs.length-t.tzs.length));if(c){const n=t.map((t=>G.some((n=>n.tzs.includes(t)))?null:t)).filter(Boolean);if(n.length>0){throw new Error(`There are ${n.length} missing timezones: ${n.toString()}`)}}return o?.onFinalGroupingCreate?o.onFinalGroupingCreate(G):G}export{G as groupTimeZones};
//# sourceMappingURL=p-1a6752df.js.map