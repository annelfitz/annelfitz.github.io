{"version":3,"names":["CSS","actionGroupEnd","SLOTS","actionsEnd","bottomActions","expandTooltip","actionBarCss","ActionBar","this","mutationObserver","createObserver","el","expanded","toggleChildActionText","overflowActions","resizeObserver","entries","resizeHandlerEntries","actionMenuOpenHandler","event","target","menuOpen","composedPath","Array","from","querySelectorAll","forEach","group","includes","resizeHandler","entry","width","height","contentRect","resize","debounce","expandDisabled","layout","overflowActionsDisabled","actions","queryActions","actionCount","length","actionGroups","setGroupLayout","groupCount","hasActionsEnd","hasBottomActions","actionHeight","actionWidth","geActionDimensions","overflowCount","getOverflowCount","overflowActionsDebounceInMs","toggleExpand","calciteActionBarToggle","emit","setExpandToggleRef","expandToggleEl","handleDefaultSlotChange","groups","slotChangeGetAssignedElements","filter","matches","handleActionsEndSlotChange","slotChangeHasAssignedElement","handleBottomActionsSlotChange","handleTooltipSlotChange","tooltips","expandHandler","expandedHandler","layoutHandler","updateGroups","overflowDisabledHandler","disconnect","observe","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","componentDidLoad","setComponentLoaded","connectedCallback","connectLocalized","connectMessages","childList","subtree","connectConditionalSlotComponent","componentWillLoad","setUpLoadableComponent","setUpMessages","disconnectedCallback","disconnectConditionalSlotComponent","disconnectLocalized","disconnectMessages","clientWidth","clientHeight","setFocus","componentFocusable","focusFirstTabbable","renderBottomActionGroup","position","scale","messages","actionsEndGroupLabel","overlayPositioning","expandToggleNode","h","ExpandToggle","collapseText","collapse","expandText","expand","toggle","tooltip","ref","class","hidden","label","name","onSlotchange","render","Host","onCalciteActionMenuOpen"],"sources":["src/components/action-bar/resources.ts","src/components/action-bar/action-bar.scss?tag=calcite-action-bar&encapsulation=shadow","src/components/action-bar/action-bar.tsx"],"sourcesContent":["export const CSS = {\n  actionGroupEnd: \"action-group--end\",\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  bottomActions: \"bottom-actions\",\n  expandTooltip: \"expand-tooltip\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-bar-expanded-max-width: When `layout` is `\"vertical\"`, specifies the expanded max width of the component.\n */\n\n:host {\n  @extend %component-host;\n  @apply pointer-events-auto\n    inline-flex\n    self-stretch;\n  --calcite-action-bar-expanded-max-width: auto;\n}\n\n:host([layout=\"vertical\"]) {\n  @apply flex-col;\n  .action-group--end {\n    margin-block-start: auto;\n  }\n}\n\n:host([layout=\"horizontal\"]) {\n  @apply flex-row;\n  .action-group--end {\n    @apply ms-auto;\n  }\n}\n\n:host([layout=\"vertical\"][overflow-actions-disabled]) {\n  overflow-y: auto;\n}\n\n:host([layout=\"horizontal\"][overflow-actions-disabled]) {\n  overflow-x: auto;\n}\n\n:host([layout=\"vertical\"][expanded]) {\n  max-inline-size: var(--calcite-action-bar-expanded-max-width);\n}\n\n::slotted(calcite-action-group) {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n:host([layout=\"horizontal\"]) ::slotted(calcite-action-group) {\n  border-block-end: 0;\n  border-inline-end: 1px solid var(--calcite-color-border-3);\n}\n\n:host([layout=\"horizontal\"][expand-disabled]) ::slotted(calcite-action-group:last-of-type) {\n  border-inline-end: 0;\n}\n\n::slotted(calcite-action-group:last-child) {\n  border-block-end: 0;\n  border-inline-end: 0;\n}\n\n.action-group--end {\n  @apply justify-end;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { debounce } from \"lodash-es\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  focusFirstTabbable,\n  slotChangeGetAssignedElements,\n  slotChangeHasAssignedElement,\n} from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ExpandToggle, toggleChildActionText } from \"../functional/ExpandToggle\";\nimport { Layout, Position, Scale } from \"../interfaces\";\nimport { ActionBarMessages } from \"./assets/action-bar/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\nimport {\n  geActionDimensions,\n  getOverflowCount,\n  overflowActions,\n  overflowActionsDebounceInMs,\n  queryActions,\n} from \"./utils\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\n\n/**\n * @slot - A slot for adding `calcite-action`s that will appear at the top of the component.\n * @slot bottom-actions - [Deprecated] Use the `\"actions-end\"` slot instead. A slot for adding `calcite-action`s that will appear at the bottom of the component, above the collapse/expand button.\n * @slot actions-end - A slot for adding `calcite-action`s that will appear at the end of the component, prior to the collapse/expand button.\n * @slot expand-tooltip - A slot to set the `calcite-tooltip` for the expand toggle.\n */\n@Component({\n  tag: \"calcite-action-bar\",\n  styleUrl: \"action-bar.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ActionBar\n  implements ConditionalSlotComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the accessible label for the last `calcite-action-group`.\n   */\n  @Prop() actionsEndGroupLabel: string;\n\n  /**\n   * When `true`, the expand-toggling behavior is disabled.\n   */\n  @Prop({ reflect: true }) expandDisabled = false;\n\n  @Watch(\"expandDisabled\")\n  expandHandler(): void {\n    this.overflowActions();\n  }\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true, mutable: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    const { el, expanded } = this;\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  }\n\n  /**\n   *  Specifies the layout direction of the actions.\n   */\n  @Prop({ reflect: true }) layout: Extract<\"horizontal\" | \"vertical\", Layout> = \"vertical\";\n\n  @Watch(\"layout\")\n  layoutHandler(): void {\n    this.updateGroups();\n  }\n\n  /**\n   * Disables automatically overflowing `calcite-action`s that won't fit into menus.\n   */\n  @Prop({ reflect: true }) overflowActionsDisabled = false;\n\n  @Watch(\"overflowActionsDisabled\")\n  overflowDisabledHandler(overflowActionsDisabled: boolean): void {\n    if (overflowActionsDisabled) {\n      this.resizeObserver?.disconnect();\n      return;\n    }\n\n    this.resizeObserver?.observe(this.el);\n    this.overflowActions();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Arranges the component depending on the element's `dir` property.\n   */\n  @Prop({ reflect: true }) position: Position;\n\n  /**\n   * Specifies the size of the expand `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionBarMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionBarMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `expanded` property is toggled.\n   */\n  @Event({ cancelable: false }) calciteActionBarToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionBarElement;\n\n  mutationObserver = createObserver(\"mutation\", () => {\n    const { el, expanded } = this;\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  });\n\n  resizeObserver = createObserver(\"resize\", (entries) => this.resizeHandlerEntries(entries));\n\n  expandToggleEl: HTMLCalciteActionElement;\n\n  @State() effectiveLocale: string;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasBottomActions = false;\n\n  @State() expandTooltip: HTMLCalciteTooltipElement;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionBarMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  componentDidLoad(): void {\n    const { el, expanded } = this;\n\n    setComponentLoaded(this);\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  }\n\n  connectedCallback(): void {\n    const { el, expanded } = this;\n\n    connectLocalized(this);\n    connectMessages(this);\n    toggleChildActionText({ el, expanded });\n\n    this.mutationObserver?.observe(el, { childList: true, subtree: true });\n\n    if (!this.overflowActionsDisabled) {\n      this.resizeObserver?.observe(el);\n    }\n\n    this.overflowActions();\n    connectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectConditionalSlotComponent(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Overflows actions that won't fit into menus.\n   *\n   * @internal\n   */\n  @Method()\n  async overflowActions(): Promise<void> {\n    this.resize({ width: this.el.clientWidth, height: this.el.clientHeight });\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusFirstTabbable(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  actionMenuOpenHandler = (event: CustomEvent<void>): void => {\n    if ((event.target as HTMLCalciteActionGroupElement).menuOpen) {\n      const composedPath = event.composedPath();\n      Array.from(this.el.querySelectorAll(\"calcite-action-group\")).forEach((group) => {\n        if (!composedPath.includes(group)) {\n          group.menuOpen = false;\n        }\n      });\n    }\n  };\n\n  resizeHandlerEntries = (entries: ResizeObserverEntry[]): void => {\n    entries.forEach(this.resizeHandler);\n  };\n\n  resizeHandler = (entry: ResizeObserverEntry): void => {\n    const { width, height } = entry.contentRect;\n    this.resize({ width, height });\n  };\n\n  private resize = debounce(({ width, height }: { width: number; height: number }): void => {\n    const { el, expanded, expandDisabled, layout, overflowActionsDisabled } = this;\n\n    if (\n      overflowActionsDisabled ||\n      (layout === \"vertical\" && !height) ||\n      (layout === \"horizontal\" && !width)\n    ) {\n      return;\n    }\n\n    const actions = queryActions(el);\n    const actionCount = expandDisabled ? actions.length : actions.length + 1;\n    const actionGroups = Array.from(el.querySelectorAll(\"calcite-action-group\"));\n\n    this.setGroupLayout(actionGroups);\n\n    const groupCount =\n      this.hasActionsEnd || this.hasBottomActions || !expandDisabled\n        ? actionGroups.length + 1\n        : actionGroups.length;\n\n    const { actionHeight, actionWidth } = geActionDimensions(actions);\n\n    const overflowCount = getOverflowCount({\n      layout,\n      actionCount,\n      actionHeight,\n      actionWidth,\n      height,\n      width,\n      groupCount,\n    });\n\n    overflowActions({\n      actionGroups,\n      expanded,\n      overflowCount,\n    });\n  }, overflowActionsDebounceInMs);\n\n  toggleExpand = (): void => {\n    this.expanded = !this.expanded;\n    this.calciteActionBarToggle.emit();\n  };\n\n  setExpandToggleRef = (el: HTMLCalciteActionElement): void => {\n    this.expandToggleEl = el;\n  };\n\n  updateGroups(): void {\n    this.setGroupLayout(Array.from(this.el.querySelectorAll(\"calcite-action-group\")));\n  }\n\n  setGroupLayout(groups: HTMLCalciteActionGroupElement[]): void {\n    groups.forEach((group) => (group.layout = this.layout));\n  }\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const groups = slotChangeGetAssignedElements(event).filter((el) =>\n      el.matches(\"calcite-action-group\"),\n    ) as HTMLCalciteActionGroupElement[];\n\n    this.setGroupLayout(groups);\n  };\n\n  handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  handleBottomActionsSlotChange = (event: Event): void => {\n    this.hasBottomActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleTooltipSlotChange = (event: Event): void => {\n    const tooltips = slotChangeGetAssignedElements(event).filter(\n      (el) => el?.matches(\"calcite-tooltip\"),\n    ) as HTMLCalciteTooltipElement[];\n\n    this.expandTooltip = tooltips[0];\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderBottomActionGroup(): VNode {\n    const {\n      expanded,\n      expandDisabled,\n      el,\n      position,\n      toggleExpand,\n      scale,\n      layout,\n      messages,\n      actionsEndGroupLabel,\n      overlayPositioning,\n    } = this;\n\n    const expandToggleNode = !expandDisabled ? (\n      <ExpandToggle\n        collapseText={messages.collapse}\n        el={el}\n        expandText={messages.expand}\n        expanded={expanded}\n        position={position}\n        scale={scale}\n        toggle={toggleExpand}\n        tooltip={this.expandTooltip}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.setExpandToggleRef}\n      />\n    ) : null;\n\n    return (\n      <calcite-action-group\n        class={CSS.actionGroupEnd}\n        hidden={this.expandDisabled && !(this.hasActionsEnd || this.hasBottomActions)}\n        label={actionsEndGroupLabel}\n        layout={layout}\n        overlayPositioning={overlayPositioning}\n        scale={scale}\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        <slot name={SLOTS.bottomActions} onSlotchange={this.handleBottomActionsSlotChange} />\n        <slot name={SLOTS.expandTooltip} onSlotchange={this.handleTooltipSlotChange} />\n        {expandToggleNode}\n      </calcite-action-group>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Host onCalciteActionMenuOpen={this.actionMenuOpenHandler}>\n        <slot onSlotchange={this.handleDefaultSlotChange} />\n        {this.renderBottomActionGroup()}\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;;ikBAAO,MAAMA,EAAM,CACjBC,eAAgB,qBAGX,MAAMC,EAAQ,CACnBC,WAAY,cACZC,cAAe,iBACfC,cAAe,kBCPjB,MAAMC,EAAe,uvC,MCgERC,EAAS,M,wFAwHpBC,KAAAC,iBAAmBC,EAAe,YAAY,KAC5C,MAAMC,GAAEA,EAAEC,SAAEA,GAAaJ,KACzBK,EAAsB,CAAEF,KAAIC,aAC5BJ,KAAKM,iBAAiB,IAGxBN,KAAAO,eAAiBL,EAAe,UAAWM,GAAYR,KAAKS,qBAAqBD,KA+FjFR,KAAAU,sBAAyBC,IACvB,GAAKA,EAAMC,OAAyCC,SAAU,CAC5D,MAAMC,EAAeH,EAAMG,eAC3BC,MAAMC,KAAKhB,KAAKG,GAAGc,iBAAiB,yBAAyBC,SAASC,IACpE,IAAKL,EAAaM,SAASD,GAAQ,CACjCA,EAAMN,SAAW,K,OAMzBb,KAAAS,qBAAwBD,IACtBA,EAAQU,QAAQlB,KAAKqB,cAAc,EAGrCrB,KAAAqB,cAAiBC,IACf,MAAMC,MAAEA,EAAKC,OAAEA,GAAWF,EAAMG,YAChCzB,KAAK0B,OAAO,CAAEH,QAAOC,UAAS,EAGxBxB,KAAA0B,OAASC,GAAS,EAAGJ,QAAOC,aAClC,MAAMrB,GAAEA,EAAEC,SAAEA,EAAQwB,eAAEA,EAAcC,OAAEA,EAAMC,wBAAEA,GAA4B9B,KAE1E,GACE8B,GACCD,IAAW,aAAeL,GAC1BK,IAAW,eAAiBN,EAC7B,CACA,M,CAGF,MAAMQ,EAAUC,EAAa7B,GAC7B,MAAM8B,EAAcL,EAAiBG,EAAQG,OAASH,EAAQG,OAAS,EACvE,MAAMC,EAAepB,MAAMC,KAAKb,EAAGc,iBAAiB,yBAEpDjB,KAAKoC,eAAeD,GAEpB,MAAME,EACJrC,KAAKsC,eAAiBtC,KAAKuC,mBAAqBX,EAC5CO,EAAaD,OAAS,EACtBC,EAAaD,OAEnB,MAAMM,aAAEA,EAAYC,YAAEA,GAAgBC,EAAmBX,GAEzD,MAAMY,EAAgBC,EAAiB,CACrCf,SACAI,cACAO,eACAC,cACAjB,SACAD,QACAc,eAGF/B,EAAgB,CACd6B,eACA/B,WACAuC,iBACA,GACDE,GAEH7C,KAAA8C,aAAe,KACb9C,KAAKI,UAAYJ,KAAKI,SACtBJ,KAAK+C,uBAAuBC,MAAM,EAGpChD,KAAAiD,mBAAsB9C,IACpBH,KAAKkD,eAAiB/C,CAAE,EAW1BH,KAAAmD,wBAA2BxC,IACzB,MAAMyC,EAASC,EAA8B1C,GAAO2C,QAAQnD,GAC1DA,EAAGoD,QAAQ,0BAGbvD,KAAKoC,eAAegB,EAAO,EAG7BpD,KAAAwD,2BAA8B7C,IAC5BX,KAAKsC,cAAgBmB,EAA6B9C,EAAM,EAG1DX,KAAA0D,8BAAiC/C,IAC/BX,KAAKuC,iBAAmBkB,EAA6B9C,EAAM,EAG7DX,KAAA2D,wBAA2BhD,IACzB,MAAMiD,EAAWP,EAA8B1C,GAAO2C,QACnDnD,GAAOA,GAAIoD,QAAQ,qBAGtBvD,KAAKH,cAAgB+D,EAAS,EAAE,E,wDA/SQ,M,cAUS,M,YAY2B,W,6BAU3B,M,wBAqBe,W,uJA8DzC,M,sBAEG,M,4DAlH5B,aAAAC,GACE7D,KAAKM,iB,CASP,eAAAwD,GACE,MAAM3D,GAAEA,EAAEC,SAAEA,GAAaJ,KACzBK,EAAsB,CAAEF,KAAIC,aAC5BJ,KAAKM,iB,CASP,aAAAyD,GACE/D,KAAKgE,c,CASP,uBAAAC,CAAwBnC,GACtB,GAAIA,EAAyB,CAC3B9B,KAAKO,gBAAgB2D,aACrB,M,CAGFlE,KAAKO,gBAAgB4D,QAAQnE,KAAKG,IAClCH,KAAKM,iB,CAsCP,gBAAA8D,G,CA0CA,qBAAAC,GACEC,EAAetE,KAAMA,KAAKuE,gB,CAW5B,gBAAAC,GACE,MAAMrE,GAAEA,EAAEC,SAAEA,GAAaJ,KAEzByE,EAAmBzE,MACnBK,EAAsB,CAAEF,KAAIC,aAC5BJ,KAAKM,iB,CAGP,iBAAAoE,GACE,MAAMvE,GAAEA,EAAEC,SAAEA,GAAaJ,KAEzB2E,EAAiB3E,MACjB4E,EAAgB5E,MAChBK,EAAsB,CAAEF,KAAIC,aAE5BJ,KAAKC,kBAAkBkE,QAAQhE,EAAI,CAAE0E,UAAW,KAAMC,QAAS,OAE/D,IAAK9E,KAAK8B,wBAAyB,CACjC9B,KAAKO,gBAAgB4D,QAAQhE,E,CAG/BH,KAAKM,kBACLyE,EAAgC/E,K,CAGlC,uBAAMgF,GACJC,EAAuBjF,YACjBkF,EAAclF,K,CAGtB,oBAAAmF,GACEnF,KAAKC,kBAAkBiE,aACvBlE,KAAKO,gBAAgB2D,aACrBkB,EAAmCpF,MACnCqF,EAAoBrF,MACpBsF,EAAmBtF,K,CAerB,qBAAMM,GACJN,KAAK0B,OAAO,CAAEH,MAAOvB,KAAKG,GAAGoF,YAAa/D,OAAQxB,KAAKG,GAAGqF,c,CAO5D,cAAMC,SACEC,EAAmB1F,MAEzB2F,EAAmB3F,KAAKG,G,CA+E1B,YAAA6D,GACEhE,KAAKoC,eAAerB,MAAMC,KAAKhB,KAAKG,GAAGc,iBAAiB,yB,CAG1D,cAAAmB,CAAegB,GACbA,EAAOlC,SAASC,GAAWA,EAAMU,OAAS7B,KAAK6B,Q,CAiCjD,uBAAA+D,GACE,MAAMxF,SACJA,EAAQwB,eACRA,EAAczB,GACdA,EAAE0F,SACFA,EAAQ/C,aACRA,EAAYgD,MACZA,EAAKjE,OACLA,EAAMkE,SACNA,EAAQC,qBACRA,EAAoBC,mBACpBA,GACEjG,KAEJ,MAAMkG,GAAoBtE,EACxBuE,EAACC,EAAY,CACXC,aAAcN,EAASO,SACvBnG,GAAIA,EACJoG,WAAYR,EAASS,OACrBpG,SAAUA,EACVyF,SAAUA,EACVC,MAAOA,EACPW,OAAQ3D,EACR4D,QAAS1G,KAAKH,cAEd8G,IAAK3G,KAAKiD,qBAEV,KAEJ,OACEkD,EAAA,wBACES,MAAOpH,EAAIC,eACXoH,OAAQ7G,KAAK4B,kBAAoB5B,KAAKsC,eAAiBtC,KAAKuC,kBAC5DuE,MAAOd,EACPnE,OAAQA,EACRoE,mBAAoBA,EACpBH,MAAOA,GAEPK,EAAA,QAAMY,KAAMrH,EAAMC,WAAYqH,aAAchH,KAAKwD,6BACjD2C,EAAA,QAAMY,KAAMrH,EAAME,cAAeoH,aAAchH,KAAK0D,gCACpDyC,EAAA,QAAMY,KAAMrH,EAAMG,cAAemH,aAAchH,KAAK2D,0BACnDuC,E,CAKP,MAAAe,GACE,OACEd,EAACe,EAAI,CAACC,wBAAyBnH,KAAKU,uBAClCyF,EAAA,QAAMa,aAAchH,KAAKmD,0BACxBnD,KAAK4F,0B"}