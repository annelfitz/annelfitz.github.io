{"version":3,"names":["CSS","sortItem","container","containerHorizontal","containerVertical","sortableListCss","SortableList","this","items","mutationObserver","createObserver","setUpSorting","dragEnabled","connectedCallback","dragActive","beginObserving","connectInteractive","disconnectedCallback","disconnectInteractive","disconnectSortableComponent","endObserving","componentDidRender","updateHostInteraction","calciteHandleNudgeNextHandler","event","handleNudgeEvent","onGlobalDragStart","onGlobalDragEnd","onDragEnd","onDragStart","onDragSort","Array","from","el","children","calciteListOrderChange","emit","direction","detail","handle","composedPath","find","matches","handleSelector","item","contains","includes","lastIndex","length","startingIndex","indexOf","appendInstead","buddyIndex","parentElement","appendChild","insertBefore","requestAnimationFrame","focusElement","selected","connectSortableComponent","observe","childList","subtree","disconnect","render","disabled","layout","horizontal","h","InteractiveContainer","class"],"sources":["src/components/sortable-list/resources.ts","src/components/sortable-list/sortable-list.scss?tag=calcite-sortable-list&encapsulation=shadow","src/components/sortable-list/sortable-list.tsx"],"sourcesContent":["export const CSS = {\n  sortItem: \"sort-item\",\n  container: \"container\",\n  containerHorizontal: \"container--horizontal\",\n  containerVertical: \"container--vertical\",\n};\n",":host {\n  @apply flex;\n}\n\n@include disabled();\n\n.container {\n  @apply flex flex-auto;\n}\n\n.container--vertical {\n  @apply flex-col;\n}\n\n.container--horizontal {\n  @apply flex-row;\n}\n\n@include base-component();\n","import { Component, Element, Event, EventEmitter, h, Listen, Prop, VNode } from \"@stencil/core\";\nimport Sortable from \"sortablejs\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { createObserver } from \"../../utils/observers\";\nimport { HandleNudge } from \"../handle/interfaces\";\nimport { Layout } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport {\n  DragDetail,\n  connectSortableComponent,\n  disconnectSortableComponent,\n  SortableComponent,\n  dragActive,\n} from \"../../utils/sortableComponent\";\nimport { focusElement } from \"../../utils/dom\";\n\n/**\n * @slot - A slot for adding sortable items.\n */\n@Component({\n  tag: \"calcite-sortable-list\",\n  styleUrl: \"sortable-list.scss\",\n  shadow: true,\n})\nexport class SortableList implements InteractiveComponent, SortableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When provided, the method will be called to determine whether the element can  move from the list.\n   */\n  @Prop() canPull: (detail: DragDetail) => boolean;\n\n  /**\n   * When provided, the method will be called to determine whether the element can be added from another list.\n   */\n  @Prop() canPut: (detail: DragDetail) => boolean;\n\n  /**\n   * Specifies which items inside the element should be draggable.\n   */\n  @Prop({ reflect: true }) dragSelector?: string;\n\n  /**\n   * The list's group identifier.\n   *\n   * To drag elements from one list into another, both lists must have the same group value.\n   */\n  @Prop({ reflect: true }) group?: string;\n\n  /**\n   * The selector for the handle elements.\n   */\n  @Prop({ reflect: true }) handleSelector = \"calcite-handle\";\n\n  /**\n   * Indicates the horizontal or vertical orientation of the component.\n   */\n  @Prop({ reflect: true }) layout: Layout = \"vertical\";\n\n  /**\n   * When true, disabled prevents interaction. This state shows items with lower opacity/grayed.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When true, content is waiting to be loaded. This state shows a busy indicator.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSortableListElement;\n\n  items: Element[] = [];\n\n  mutationObserver = createObserver(\"mutation\", () => {\n    this.setUpSorting();\n  });\n\n  sortable: Sortable;\n\n  dragEnabled = true;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (dragActive(this)) {\n      return;\n    }\n\n    this.setUpSorting();\n    this.beginObserving();\n    connectInteractive(this);\n  }\n\n  disconnectedCallback(): void {\n    if (dragActive(this)) {\n      return;\n    }\n\n    disconnectInteractive(this);\n    disconnectSortableComponent(this);\n    this.endObserving();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Emitted when the order of the list has changed.\n   */\n  @Event({ cancelable: false }) calciteListOrderChange: EventEmitter<void>;\n\n  @Listen(\"calciteHandleNudge\")\n  calciteHandleNudgeNextHandler(event: CustomEvent<HandleNudge>): void {\n    this.handleNudgeEvent(event);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  onGlobalDragStart(): void {\n    this.endObserving();\n  }\n\n  onGlobalDragEnd(): void {\n    this.beginObserving();\n  }\n\n  onDragEnd(): void {}\n\n  onDragStart(): void {}\n\n  onDragSort(): void {\n    this.items = Array.from(this.el.children);\n    this.calciteListOrderChange.emit();\n  }\n\n  handleNudgeEvent(event: CustomEvent<HandleNudge>): void {\n    const { direction } = event.detail;\n\n    const handle = event\n      .composedPath()\n      .find((el: HTMLElement) => el.matches(this.handleSelector)) as HTMLElement;\n\n    const sortItem = this.items.find((item) => {\n      return item.contains(handle) || event.composedPath().includes(item);\n    });\n\n    const lastIndex = this.items.length - 1;\n    const startingIndex = this.items.indexOf(sortItem);\n    let appendInstead = false;\n    let buddyIndex: number;\n\n    if (direction === \"up\") {\n      if (startingIndex === 0) {\n        appendInstead = true;\n      } else {\n        buddyIndex = startingIndex - 1;\n      }\n    } else {\n      if (startingIndex === lastIndex) {\n        buddyIndex = 0;\n      } else if (startingIndex === lastIndex - 1) {\n        appendInstead = true;\n      } else {\n        buddyIndex = startingIndex + 2;\n      }\n    }\n\n    this.endObserving();\n\n    if (appendInstead) {\n      sortItem.parentElement.appendChild(sortItem);\n    } else {\n      sortItem.parentElement.insertBefore(sortItem, this.items[buddyIndex]);\n    }\n\n    this.items = Array.from(this.el.children);\n\n    this.beginObserving();\n    requestAnimationFrame(() => focusElement(handle));\n\n    if (\"selected\" in handle) {\n      handle.selected = true;\n    }\n  }\n\n  setUpSorting(): void {\n    this.items = Array.from(this.el.children);\n    connectSortableComponent(this);\n  }\n\n  beginObserving(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  endObserving(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { disabled, layout } = this;\n    const horizontal = layout === \"horizontal\" || false;\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        <div\n          class={{\n            [CSS.container]: true,\n            [CSS.containerVertical]: !horizontal,\n            [CSS.containerHorizontal]: horizontal,\n          }}\n        >\n          <slot />\n        </div>\n      </InteractiveContainer>\n    );\n  }\n}\n"],"mappings":";;;;;+SAAO,MAAMA,EAAM,CACjBC,SAAU,YACVC,UAAW,YACXC,oBAAqB,wBACrBC,kBAAmB,uBCJrB,MAAMC,EAAkB,yhB,MC8BXC,EAAY,M,wFAyDvBC,KAAAC,MAAmB,GAEnBD,KAAAE,iBAAmBC,EAAe,YAAY,KAC5CH,KAAKI,cAAc,IAKrBJ,KAAAK,YAAc,K,kHAjC4B,iB,YAKA,W,cAKN,M,aAKD,K,CA0BnC,iBAAAC,GACE,GAAIC,EAAWP,MAAO,CACpB,M,CAGFA,KAAKI,eACLJ,KAAKQ,iBACLC,EAAmBT,K,CAGrB,oBAAAU,GACE,GAAIH,EAAWP,MAAO,CACpB,M,CAGFW,EAAsBX,MACtBY,EAA4BZ,MAC5BA,KAAKa,c,CAGP,kBAAAC,GACEC,EAAsBf,K,CAexB,6BAAAgB,CAA8BC,GAC5BjB,KAAKkB,iBAAiBD,E,CASxB,iBAAAE,GACEnB,KAAKa,c,CAGP,eAAAO,GACEpB,KAAKQ,gB,CAGP,SAAAa,GAAS,CAET,WAAAC,GAAW,CAEX,UAAAC,GACEvB,KAAKC,MAAQuB,MAAMC,KAAKzB,KAAK0B,GAAGC,UAChC3B,KAAK4B,uBAAuBC,M,CAG9B,gBAAAX,CAAiBD,GACf,MAAMa,UAAEA,GAAcb,EAAMc,OAE5B,MAAMC,EAASf,EACZgB,eACAC,MAAMR,GAAoBA,EAAGS,QAAQnC,KAAKoC,kBAE7C,MAAM1C,EAAWM,KAAKC,MAAMiC,MAAMG,GACzBA,EAAKC,SAASN,IAAWf,EAAMgB,eAAeM,SAASF,KAGhE,MAAMG,EAAYxC,KAAKC,MAAMwC,OAAS,EACtC,MAAMC,EAAgB1C,KAAKC,MAAM0C,QAAQjD,GACzC,IAAIkD,EAAgB,MACpB,IAAIC,EAEJ,GAAIf,IAAc,KAAM,CACtB,GAAIY,IAAkB,EAAG,CACvBE,EAAgB,I,KACX,CACLC,EAAaH,EAAgB,C,MAE1B,CACL,GAAIA,IAAkBF,EAAW,CAC/BK,EAAa,C,MACR,GAAIH,IAAkBF,EAAY,EAAG,CAC1CI,EAAgB,I,KACX,CACLC,EAAaH,EAAgB,C,EAIjC1C,KAAKa,eAEL,GAAI+B,EAAe,CACjBlD,EAASoD,cAAcC,YAAYrD,E,KAC9B,CACLA,EAASoD,cAAcE,aAAatD,EAAUM,KAAKC,MAAM4C,G,CAG3D7C,KAAKC,MAAQuB,MAAMC,KAAKzB,KAAK0B,GAAGC,UAEhC3B,KAAKQ,iBACLyC,uBAAsB,IAAMC,EAAalB,KAEzC,GAAI,aAAcA,EAAQ,CACxBA,EAAOmB,SAAW,I,EAItB,YAAA/C,GACEJ,KAAKC,MAAQuB,MAAMC,KAAKzB,KAAK0B,GAAGC,UAChCyB,EAAyBpD,K,CAG3B,cAAAQ,GACER,KAAKE,kBAAkBmD,QAAQrD,KAAK0B,GAAI,CAAE4B,UAAW,KAAMC,QAAS,M,CAGtE,YAAA1C,GACEb,KAAKE,kBAAkBsD,Y,CASzB,MAAAC,GACE,MAAMC,SAAEA,EAAQC,OAAEA,GAAW3D,KAC7B,MAAM4D,EAAaD,IAAW,cAAgB,MAE9C,OACEE,EAACC,EAAoB,CAACJ,SAAUA,GAC9BG,EAAA,OACEE,MAAO,CACL,CAACtE,EAAIE,WAAY,KACjB,CAACF,EAAII,oBAAqB+D,EAC1B,CAACnE,EAAIG,qBAAsBgE,IAG7BC,EAAA,c"}