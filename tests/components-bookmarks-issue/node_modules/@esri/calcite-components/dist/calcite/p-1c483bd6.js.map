{"version":3,"names":["NativeDateEngine","constructor","this","_formatterCache","Map","_commonDateTimeFormatterOptions","year","month","day","timeZoneName","name","create","date","Date","increase","oneDayInMs","getTime","formatToIsoDateString","getFullYear","getMonth","getDate","toString","padStart","isoToTimeZone","isoDate","tz","_toDate","formatter","_getFormatter","parts","formatToParts","offset","filter","type","map","value","tzOffset","_getTimeZoneOffsetInMins","tzOffsetMinutes","getMinutes","getTimezoneOffset","setMinutes","same","date1","date2","get","Intl","DateTimeFormat","timeZone","set","gmtTimeZone","sign","hoursMinutes","slice","hours","minutes","join","split","signMultiplier","Number"],"sources":["../../node_modules/timezone-groups/dist/strategy/native/index.js"],"sourcesContent":["class NativeDateEngine {\n    constructor() {\n        this._formatterCache = new Map();\n        this._commonDateTimeFormatterOptions = {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            timeZoneName: 'shortOffset',\n        };\n    }\n    get name() {\n        return 'native';\n    }\n    create(date) {\n        return new Date(date);\n    }\n    increase(date) {\n        const oneDayInMs = 86400000;\n        return new Date(date.getTime() + oneDayInMs);\n    }\n    formatToIsoDateString(date) {\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return `${year}-${month.toString().padStart(2, '0')}-${day\n            .toString()\n            .padStart(2, '0')}`;\n    }\n    isoToTimeZone(isoDate, tz) {\n        const date = this._toDate(isoDate);\n        const formatter = this._getFormatter(tz);\n        const parts = formatter.formatToParts(date);\n        const [offset] = parts\n            .filter(({ type }) => type === 'timeZoneName')\n            .map(({ value }) => value);\n        const tzOffset = this._getTimeZoneOffsetInMins(offset);\n        const tzOffsetMinutes = date.getMinutes() - (date.getTimezoneOffset() - tzOffset);\n        date.setMinutes(tzOffsetMinutes);\n        return date;\n    }\n    same(date1, date2) {\n        return date1.getTime() === date2.getTime();\n    }\n    _toDate(isoDate) {\n        return new Date(isoDate);\n    }\n    _getFormatter(tz) {\n        let formatter = this._formatterCache.get(tz);\n        if (!formatter) {\n            formatter = new Intl.DateTimeFormat('en-US', {\n                timeZone: tz,\n                ...this._commonDateTimeFormatterOptions,\n            });\n            this._formatterCache.set(tz, formatter);\n        }\n        return formatter;\n    }\n    _getTimeZoneOffsetInMins(gmtTimeZone) {\n        const [sign, ...hoursMinutes] = gmtTimeZone.slice(3);\n        const [hours, minutes] = hoursMinutes.join('').split(':');\n        const signMultiplier = sign === '+' ? 1 : -1;\n        return signMultiplier * (Number(hours) * 60 + Number(minutes || 0));\n    }\n}\n\nexport { NativeDateEngine as DateEngine };\n"],"mappings":";;;;;AAAA,MAAMA,EACF,WAAAC,GACIC,KAAKC,gBAAkB,IAAIC,IAC3BF,KAAKG,gCAAkC,CACnCC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,aAAc,cAE1B,CACI,QAAIC,GACA,MAAO,QACf,CACI,MAAAC,CAAOC,GACH,OAAO,IAAIC,KAAKD,EACxB,CACI,QAAAE,CAASF,GACL,MAAMG,EAAa,MACnB,OAAO,IAAIF,KAAKD,EAAKI,UAAYD,EACzC,CACI,qBAAAE,CAAsBL,GAClB,MAAMN,EAAOM,EAAKM,cAClB,MAAMX,EAAQK,EAAKO,WAAa,EAChC,MAAMX,EAAMI,EAAKQ,UACjB,MAAO,GAAGd,KAAQC,EAAMc,WAAWC,SAAS,EAAG,QAAQd,EAClDa,WACAC,SAAS,EAAG,MACzB,CACI,aAAAC,CAAcC,EAASC,GACnB,MAAMb,EAAOV,KAAKwB,QAAQF,GAC1B,MAAMG,EAAYzB,KAAK0B,cAAcH,GACrC,MAAMI,EAAQF,EAAUG,cAAclB,GACtC,MAAOmB,GAAUF,EACZG,QAAO,EAAGC,UAAWA,IAAS,iBAC9BC,KAAI,EAAGC,WAAYA,IACxB,MAAMC,EAAWlC,KAAKmC,yBAAyBN,GAC/C,MAAMO,EAAkB1B,EAAK2B,cAAgB3B,EAAK4B,oBAAsBJ,GACxExB,EAAK6B,WAAWH,GAChB,OAAO1B,CACf,CACI,IAAA8B,CAAKC,EAAOC,GACR,OAAOD,EAAM3B,YAAc4B,EAAM5B,SACzC,CACI,OAAAU,CAAQF,GACJ,OAAO,IAAIX,KAAKW,EACxB,CACI,aAAAI,CAAcH,GACV,IAAIE,EAAYzB,KAAKC,gBAAgB0C,IAAIpB,GACzC,IAAKE,EAAW,CACZA,EAAY,IAAImB,KAAKC,eAAe,QAAS,CACzCC,SAAUvB,KACPvB,KAAKG,kCAEZH,KAAKC,gBAAgB8C,IAAIxB,EAAIE,EACzC,CACQ,OAAOA,CACf,CACI,wBAAAU,CAAyBa,GACrB,MAAOC,KAASC,GAAgBF,EAAYG,MAAM,GAClD,MAAOC,EAAOC,GAAWH,EAAaI,KAAK,IAAIC,MAAM,KACrD,MAAMC,EAAiBP,IAAS,IAAM,GAAK,EAC3C,OAAOO,GAAkBC,OAAOL,GAAS,GAAKK,OAAOJ,GAAW,GACxE,S"}