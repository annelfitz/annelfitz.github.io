{"version":3,"names":["IDS","content","toggle","header","CSS","button","container","controlContainer","description","headerContainer","heading","icon","invalid","statusIcon","summary","title","toggleIcon","valid","SLOTS","control","headerMenuActions","ICONS","opened","closed","blockCss","Block","this","openTransitionProp","onHeaderClick","open","calciteBlockToggle","emit","setTransitionEl","el","transitionEl","openHandler","onToggleOpenCloseComponent","onMessagesChange","setFocus","componentFocusable","focusFirstTabbable","onBeforeOpen","calciteBlockBeforeOpen","onOpen","calciteBlockOpen","onBeforeClose","calciteBlockBeforeClose","onClose","calciteBlockClose","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectConditionalSlotComponent","connectInteractive","connectLocalized","connectMessages","disconnectedCallback","disconnectInteractive","disconnectLocalized","disconnectMessages","disconnectConditionalSlotComponent","componentWillLoad","setUpMessages","setUpLoadableComponent","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","renderScrim","loading","defaultSlot","h","renderIcon","messages","status","hasSlottedIcon","getSlotted","class","key","inline","label","scale","name","renderTitle","headingLevel","Heading","level","render","collapsible","toggleLabel","collapse","expand","headerContent","id","hasControl","hasMenuActions","collapseIcon","headerNode","dragHandle","toAriaBoolean","onClick","options","overlayPositioning","Host","InteractiveContainer","disabled","hidden","ref","focusGuard","sectionHeader","sectionHeaderText","toggleSwitch","toggleSwitchContainer","toggleSwitchContent","toggleSwitchText","menuOpen","menuClosedLeft","menuClosedRight","blockSectionCss","BlockSection","handleHeaderKeyDown","event","isActivationKey","toggleSection","preventDefault","stopPropagation","calciteBlockSectionToggle","renderStatusIcon","statusIconClasses","text","toggleDisplay","dir","getElementDir","arrowIcon","onKeyDown","role","tabIndex","layout","checked"],"sources":["src/components/block/resources.ts","src/components/block/block.scss?tag=calcite-block&encapsulation=shadow","src/components/block/block.tsx","src/components/block-section/resources.ts","src/components/block-section/block-section.scss?tag=calcite-block-section&encapsulation=shadow","src/components/block-section/block-section.tsx"],"sourcesContent":["export const IDS = {\n  content: \"content\",\n  toggle: \"toggle\",\n  header: \"header\",\n};\n\nexport const CSS = {\n  button: \"button\",\n  container: \"container\",\n  content: \"content\",\n  controlContainer: \"control-container\",\n  description: \"description\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  heading: \"heading\",\n  icon: \"icon\",\n  invalid: \"invalid\",\n  statusIcon: \"status-icon\",\n  summary: \"summary\",\n  title: \"title\",\n  toggle: \"toggle\",\n  toggleIcon: \"toggle-icon\",\n  valid: \"valid\",\n};\n\nexport const SLOTS = {\n  icon: \"icon\",\n  control: \"control\",\n  headerMenuActions: \"header-menu-actions\",\n};\n\nexport const ICONS = {\n  opened: \"chevron-up\",\n  closed: \"chevron-down\",\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-block-padding: Specifies the padding of the block `default` slot.\n */\n\n:host {\n  @extend %component-host;\n  @extend %component-spacing;\n  @apply transition-margin ease-cubic border-color-3 flex flex-shrink-0 flex-grow-0\n    flex-col border-0 border-b border-solid p-0 duration-150;\n  flex-basis: auto;\n}\n\n@include disabled();\n\n@import \"../../assets/styles/animation\";\n@import \"../../assets/styles/header\";\n\n.header {\n  @apply justify-start p-0;\n}\n\n.header,\n.toggle {\n  grid-area: header;\n}\n\n.header-container {\n  @apply grid items-stretch;\n  grid-template: auto / auto 1fr auto auto;\n  grid-template-areas: \"handle header control menu\";\n  grid-column: header-start / menu-end;\n  grid-row: 1 / 2;\n}\n\n.toggle {\n  @apply font-inherit\n    focus-base\n    m-0\n    flex\n    cursor-pointer\n    flex-nowrap\n    items-center\n    justify-between\n    border-none\n    p-0;\n  text-align: initial;\n\n  background-color: transparent;\n  &:hover {\n    @apply bg-foreground-2;\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n}\n\ncalcite-loader[inline] {\n  grid-area: control;\n  @apply self-center;\n}\n\ncalcite-handle {\n  grid-area: handle;\n}\n\n.title {\n  @apply m-0;\n  padding: theme(\"spacing.3\");\n}\n\n.header .title .heading {\n  @apply text-n1\n    text-color-2\n    word-break\n    transition-color\n    p-0\n    font-medium\n    leading-tight\n    duration-150\n    ease-in-out;\n}\n\n.description {\n  @apply text-n2-wrap\n    text-color-3\n    word-break\n    mt-0.5\n    p-0;\n}\n\n.icon {\n  display: flex;\n  margin-inline-start: theme(\"spacing.3\");\n  margin-inline-end: 0px;\n}\n\n.status-icon.valid {\n  color: theme(\"colors.success\");\n}\n\n.status-icon.invalid {\n  color: theme(\"colors.danger\");\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(180deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.toggle-icon {\n  @apply text-color-3\n  transition-color\n  my-3\n  self-center\n  justify-self-end\n  duration-150\n  ease-in-out;\n  margin-inline-end: theme(\"spacing.3\");\n  margin-inline-start: auto;\n}\n\n.toggle:hover .toggle-icon {\n  @apply text-color-1;\n}\n\n.container {\n  @apply flex flex-col h-full relative;\n}\n\n.content {\n  @apply animate-in flex-1 relative min-h-0;\n  padding-block: var(--calcite-block-padding, theme(\"spacing.2\"));\n  padding-inline: var(--calcite-block-padding, theme(\"spacing[2.5]\"));\n}\n\n.control-container {\n  @apply m-0 flex;\n  grid-area: control;\n}\n\ncalcite-action-menu {\n  grid-area: menu;\n}\n\n:host([open]) {\n  @apply my-2;\n\n  .header .title .heading {\n    @apply text-color-1;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { focusFirstTabbable, getSlotted, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Status } from \"../interfaces\";\nimport { BlockMessages } from \"./assets/block/t9n\";\nimport { CSS, ICONS, IDS, SLOTS } from \"./resources\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\n\n/**\n * @slot - A slot for adding custom content.\n * @slot icon - A slot for adding a leading header icon with `calcite-icon`.\n * @slot control - A slot for adding a single HTML input element in a header.\n * @slot header-menu-actions - A slot for adding an overflow menu with `calcite-action`s inside a dropdown menu.\n */\n@Component({\n  tag: \"calcite-block\",\n  styleUrl: \"block.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Block\n  implements\n    ConditionalSlotComponent,\n    InteractiveComponent,\n    LocalizedComponent,\n    T9nComponent,\n    LoadableComponent,\n    OpenCloseComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is collapsible.\n   */\n  @Prop({ reflect: true }) collapsible = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `true`, displays a drag handle in the header.\n   */\n  @Prop({ reflect: true }) dragHandle = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading!: string;\n\n  /**\n   * Specifies the number at which section headings should start.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * When `true`, expands the component and its contents.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n  }\n\n  /**\n   * Displays a status-related indicator icon.\n   */\n  @Prop({ reflect: true }) status: Status;\n\n  /**\n   * A description for the component, which displays below the heading.\n   */\n  @Prop() description: string;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: BlockMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<BlockMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first tabbable element.\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  onBeforeOpen(): void {\n    this.calciteBlockBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteBlockOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteBlockBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteBlockClose.emit();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteBlockElement;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: BlockMessages;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteBlockBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteBlockBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteBlockClose: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteBlockOpen: EventEmitter<void>;\n\n  /**\n   * Fires when the component's header is clicked.\n   *\n   * @deprecated Use `openClose` events such as `calciteBlockOpen`, `calciteBlockClose`, `calciteBlockBeforeOpen`, and `calciteBlockBeforeClose` instead.\n   */\n  @Event({ cancelable: false }) calciteBlockToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  onHeaderClick = (): void => {\n    this.open = !this.open;\n    this.calciteBlockToggle.emit();\n  };\n\n  private setTransitionEl = (el: HTMLElement): void => {\n    this.transitionEl = el;\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderScrim(): VNode[] {\n    const { loading } = this;\n    const defaultSlot = <slot />;\n\n    return [loading ? <calcite-scrim loading={loading} /> : null, defaultSlot];\n  }\n\n  renderIcon(): VNode[] {\n    const { loading, messages, status } = this;\n\n    const hasSlottedIcon = !!getSlotted(this.el, SLOTS.icon);\n\n    return loading ? (\n      <div class={CSS.icon} key=\"loader\">\n        <calcite-loader inline label={messages.loading} />\n      </div>\n    ) : !!status ? (\n      <div class={CSS.icon} key=\"status-icon\">\n        <calcite-icon\n          class={{\n            [CSS.statusIcon]: true,\n            [CSS.valid]: status == \"valid\",\n            [CSS.invalid]: status == \"invalid\",\n          }}\n          icon={ICONS[status]}\n          scale=\"s\"\n        />\n      </div>\n    ) : hasSlottedIcon ? (\n      <div class={CSS.icon} key=\"icon-slot\">\n        <slot key=\"icon-slot\" name={SLOTS.icon} />\n      </div>\n    ) : null;\n  }\n\n  renderTitle(): VNode {\n    const { heading, headingLevel, description } = this;\n    return heading || description ? (\n      <div class={CSS.title}>\n        <Heading class={CSS.heading} level={headingLevel}>\n          {heading}\n        </Heading>\n        {description ? <div class={CSS.description}>{description}</div> : null}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { collapsible, el, loading, open, heading, messages } = this;\n\n    const toggleLabel = open ? messages.collapse : messages.expand;\n\n    const headerContent = (\n      <header class={CSS.header} id={IDS.header}>\n        {this.renderIcon()}\n        {this.renderTitle()}\n      </header>\n    );\n\n    const hasControl = !!getSlotted(el, SLOTS.control);\n    const hasMenuActions = !!getSlotted(el, SLOTS.headerMenuActions);\n    const collapseIcon = open ? ICONS.opened : ICONS.closed;\n\n    const headerNode = (\n      <div class={CSS.headerContainer}>\n        {this.dragHandle ? <calcite-handle label={heading} /> : null}\n        {collapsible ? (\n          <button\n            aria-controls={IDS.content}\n            aria-describedby={IDS.header}\n            aria-expanded={collapsible ? toAriaBoolean(open) : null}\n            class={CSS.toggle}\n            id={IDS.toggle}\n            onClick={this.onHeaderClick}\n            title={toggleLabel}\n          >\n            {headerContent}\n            <calcite-icon aria-hidden=\"true\" class={CSS.toggleIcon} icon={collapseIcon} scale=\"s\" />\n          </button>\n        ) : (\n          headerContent\n        )}\n        {hasControl ? (\n          <div class={CSS.controlContainer}>\n            <slot name={SLOTS.control} />\n          </div>\n        ) : null}\n        {hasMenuActions ? (\n          <calcite-action-menu\n            label={messages.options}\n            overlayPositioning={this.overlayPositioning}\n          >\n            <slot name={SLOTS.headerMenuActions} />\n          </calcite-action-menu>\n        ) : null}\n      </div>\n    );\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <article\n            aria-busy={toAriaBoolean(loading)}\n            class={{\n              [CSS.container]: true,\n            }}\n          >\n            {headerNode}\n            <section\n              aria-labelledby={IDS.toggle}\n              class={CSS.content}\n              hidden={!open}\n              id={IDS.content}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.setTransitionEl}\n            >\n              {this.renderScrim()}\n            </section>\n          </article>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","export const IDS = {\n  content: \"content\",\n  toggle: \"toggle\",\n};\n\nexport const CSS = {\n  content: \"content\",\n  focusGuard: \"focus-guard\",\n  invalid: \"invalid\",\n  sectionHeader: \"section-header\",\n  sectionHeaderText: \"section-header__text\",\n  statusIcon: \"status-icon\",\n  toggle: \"toggle\",\n  toggleSwitch: \"toggle--switch\",\n  toggleSwitchContainer: \"toggle--switch-container\",\n  toggleSwitchContent: \"toggle--switch__content\",\n  toggleSwitchText: \"toggle--switch__text\",\n  valid: \"valid\",\n};\n\nexport const ICONS = {\n  menuOpen: \"chevron-down\",\n  menuClosedLeft: \"chevron-left\",\n  menuClosedRight: \"chevron-right\",\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n};\n",":host {\n  @apply bg-foreground-1\n    text-color-2\n    text-n1\n    box-border\n    block;\n}\n\n:host([open]) {\n  @apply border-b-color-3\n    border-0\n    border-b\n    border-solid;\n}\n\n:host(:last-child) {\n  @apply border-b-0;\n}\n\n.toggle {\n  @apply text-color-2\n    w-full\n    border-0\n    bg-transparent\n    font-sans\n    font-medium;\n}\n\n.toggle--switch,\n.section-header {\n  @apply text-n1\n    focus-base\n    mx-0\n    my-1\n    flex\n    cursor-pointer\n    select-none\n    items-center\n    px-0\n    py-2;\n\n  &:focus {\n    @apply focus-outset;\n  }\n  &:hover {\n    @apply text-color-1;\n  }\n}\n\n.section-header .status-icon {\n  @apply self-end;\n}\n\n.section-header__text {\n  @apply mx-3\n    my-0\n    flex-auto;\n\n  text-align: initial;\n  word-wrap: anywhere;\n}\n\n.toggle--switch-container {\n  @apply flex items-center relative bg-transparent w-full;\n  word-break: break-word;\n\n  .focus-guard {\n    --calcite-label-margin-bottom: 0;\n    @apply absolute pointer-events-none;\n    inset-inline-end: 0;\n    margin-inline-start: theme(\"margin.1\");\n  }\n}\n\n.toggle--switch {\n  .status-icon {\n    margin-inline-start: theme(\"margin.2\");\n  }\n}\n\n.toggle--switch__content {\n  @apply flex flex-auto items-center;\n}\n\n.status-icon.valid {\n  color: theme(\"colors.success\");\n}\n\n.status-icon.invalid {\n  color: theme(\"colors.danger\");\n}\n\n:host([toggle-display=\"switch\"]) .toggle {\n  .toggle--switch__content {\n    @apply me-7;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport { focusFirstTabbable, getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Status } from \"../interfaces\";\nimport { BlockSectionMessages } from \"./assets/block-section/t9n\";\nimport { BlockSectionToggleDisplay } from \"./interfaces\";\nimport { CSS, ICONS, IDS } from \"./resources\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-block-section\",\n  styleUrl: \"block-section.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class BlockSection implements LocalizedComponent, T9nComponent, LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, expands the component and its contents.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  /**\n   * Displays a status-related indicator icon.\n   */\n  @Prop({ reflect: true }) status: Status;\n\n  /**\n   * The component header text.\n   */\n  @Prop() text: string;\n\n  /**\n   * Specifies how the component's toggle is displayed, where:\n   *\n   * `\"button\"` sets the toggle to a selectable header, and\n   *\n   * `\"switch\"` sets the toggle to a switch.\n   */\n  @Prop({ reflect: true }) toggleDisplay: BlockSectionToggleDisplay = \"button\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: BlockSectionMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<BlockSectionMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first tabbable element.\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteBlockSectionElement;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: BlockSectionMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the header has been clicked.\n   */\n  @Event({ cancelable: false }) calciteBlockSectionToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleHeaderKeyDown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.toggleSection();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  toggleSection = (): void => {\n    this.open = !this.open;\n    this.calciteBlockSectionToggle.emit();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  renderStatusIcon(): VNode[] {\n    const { status } = this;\n    const statusIcon = ICONS[status] ?? false;\n    const statusIconClasses = {\n      [CSS.statusIcon]: true,\n      [CSS.valid]: status == \"valid\",\n      [CSS.invalid]: status == \"invalid\",\n    };\n\n    return !!statusIcon ? (\n      <calcite-icon class={statusIconClasses} icon={statusIcon} scale=\"s\" />\n    ) : null;\n  }\n\n  render(): VNode {\n    const { el, messages, open, text, toggleDisplay } = this;\n    const dir = getElementDir(el);\n    const arrowIcon = open\n      ? ICONS.menuOpen\n      : dir === \"rtl\"\n        ? ICONS.menuClosedLeft\n        : ICONS.menuClosedRight;\n\n    const toggleLabel = open ? messages.collapse : messages.expand;\n\n    const headerNode =\n      toggleDisplay === \"switch\" ? (\n        <div\n          class={{\n            [CSS.toggleSwitchContainer]: true,\n          }}\n        >\n          <div\n            aria-controls={IDS.content}\n            aria-expanded={toAriaBoolean(open)}\n            class={{\n              [CSS.toggle]: true,\n              [CSS.toggleSwitch]: true,\n            }}\n            id={IDS.toggle}\n            onClick={this.toggleSection}\n            onKeyDown={this.handleHeaderKeyDown}\n            role=\"button\"\n            tabIndex={0}\n            title={toggleLabel}\n          >\n            <div class={CSS.toggleSwitchContent}>\n              <span class={CSS.toggleSwitchText}>{text}</span>\n            </div>\n            {this.renderStatusIcon()}\n          </div>\n          {/* we use calcite-label to use a simple component that will allow us to prevent keyboard focus by setting tabindex=\"-1\" on the host */}\n          <calcite-label class={CSS.focusGuard} layout=\"inline\" tabIndex={-1}>\n            <calcite-switch checked={open} label={toggleLabel} scale=\"s\" />\n          </calcite-label>\n        </div>\n      ) : (\n        <button\n          aria-controls={IDS.content}\n          aria-expanded={toAriaBoolean(open)}\n          class={{\n            [CSS.sectionHeader]: true,\n            [CSS.toggle]: true,\n          }}\n          id={IDS.toggle}\n          onClick={this.toggleSection}\n        >\n          <calcite-icon icon={arrowIcon} scale=\"s\" />\n          <span class={CSS.sectionHeaderText}>{text}</span>\n          {this.renderStatusIcon()}\n        </button>\n      );\n\n    return (\n      <Host>\n        {headerNode}\n        <section aria-labelledby={IDS.toggle} class={CSS.content} hidden={!open} id={IDS.content}>\n          <slot />\n        </section>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}