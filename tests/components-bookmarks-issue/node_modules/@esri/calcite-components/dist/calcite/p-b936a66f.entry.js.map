{"version":3,"names":["stackCss","Stack","this","handleActionsStartSlotChange","event","hasActionsStart","slotChangeHasAssignedElement","handleActionsEndSlotChange","hasActionsEnd","handleContentStartSlotChange","hasContentStart","handleContentEndSlotChange","hasContentEnd","renderActionsStart","h","class","CSS","actionsStart","hidden","key","name","SLOTS","onSlotchange","renderActionsEnd","actionsEnd","renderContentStart","contentStart","renderDefaultContent","content","renderContentEnd","contentEnd","render","Host","container"],"sources":["src/components/stack/stack.scss?tag=calcite-stack&encapsulation=shadow","src/components/stack/stack.tsx"],"sourcesContent":["/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-stack-padding-inline: Specifies the inline padding of the component's content.\n * @prop --calcite-stack-padding-block: Specifies the block padding of the component's content.\n */\n\n:host {\n  @apply flex flex-col flex-1;\n}\n\n.container {\n  @apply text-color-2\n  flex\n  flex-auto\n  font-sans\n  font-normal\n  items-stretch;\n}\n\n.content {\n  @apply flex\n    flex-auto\n    flex-col\n    justify-center\n    text-n2-wrap;\n  padding-inline: var(--calcite-stack-padding-inline, theme(\"padding.3\"));\n  padding-block: var(--calcite-stack-padding-block, theme(\"padding.2\"));\n}\n\n:host([disabled]) .content {\n  @extend %disabled-host-only;\n}\n\n.content-start {\n  @apply justify-start;\n}\n\n.content-end {\n  @apply justify-end;\n}\n\n.content-start,\n.content-end {\n  @apply flex-initial;\n}\n\n.actions-start,\n.actions-end,\n.content-start,\n.content-end {\n  @apply flex items-center;\n}\n\n.content-start,\n.content-end {\n  ::slotted(calcite-icon) {\n    @apply self-center mx-3;\n  }\n}\n\n.actions-start,\n.actions-end {\n  ::slotted(calcite-action),\n  ::slotted(calcite-action-menu),\n  ::slotted(calcite-handle),\n  ::slotted(calcite-dropdown) {\n    @apply self-stretch;\n\n    color: inherit;\n  }\n}\n\n@include base-component();\n","import { Component, h, Host, Prop, State, VNode } from \"@stencil/core\";\nimport { slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport { CSS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding content.\n * @slot actions-start - A slot for adding actionable `calcite-action` elements before the content of the component.\n * @slot content-start - A slot for adding non-actionable elements before content of the component.\n * @slot content-end - A slot for adding non-actionable elements after content of the component.\n * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the component.\n */\n@Component({\n  tag: \"calcite-stack\",\n  styleUrl: \"stack.scss\",\n  shadow: true,\n})\nexport class Stack {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**  When `true`, content interaction is prevented and displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @State() hasActionsStart = false;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasContentStart = false;\n\n  @State() hasContentEnd = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderActionsStart(): VNode {\n    const { hasActionsStart } = this;\n    return (\n      <div class={CSS.actionsStart} hidden={!hasActionsStart} key=\"actions-start-container\">\n        <slot name={SLOTS.actionsStart} onSlotchange={this.handleActionsStartSlotChange} />\n      </div>\n    );\n  }\n\n  renderActionsEnd(): VNode {\n    const { hasActionsEnd } = this;\n    return (\n      <div class={CSS.actionsEnd} hidden={!hasActionsEnd} key=\"actions-end-container\">\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentStart(): VNode {\n    const { hasContentStart } = this;\n    return (\n      <div class={CSS.contentStart} hidden={!hasContentStart}>\n        <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n      </div>\n    );\n  }\n\n  renderDefaultContent(): VNode {\n    return (\n      <div class={CSS.content}>\n        <slot />\n      </div>\n    );\n  }\n\n  renderContentEnd(): VNode {\n    const { hasContentEnd } = this;\n    return (\n      <div class={CSS.contentEnd} hidden={!hasContentEnd}>\n        <slot name={SLOTS.contentEnd} onSlotchange={this.handleContentEndSlotChange} />\n      </div>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Host>\n        <div class={CSS.container}>\n          {this.renderActionsStart()}\n          {this.renderContentStart()}\n          {this.renderDefaultContent()}\n          {this.renderContentEnd()}\n          {this.renderActionsEnd()}\n        </div>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleActionsStartSlotChange = (event: Event): void => {\n    this.hasActionsStart = slotChangeHasAssignedElement(event);\n  };\n\n  handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  handleContentStartSlotChange = (event: Event): void => {\n    this.hasContentStart = slotChangeHasAssignedElement(event);\n  };\n\n  handleContentEndSlotChange = (event: Event): void => {\n    this.hasContentEnd = slotChangeHasAssignedElement(event);\n  };\n}\n"],"mappings":";;;;;iLAAA,MAAMA,EAAW,o6C,MCgBJC,EAAK,M,yBA8FhBC,KAAAC,6BAAgCC,IAC9BF,KAAKG,gBAAkBC,EAA6BF,EAAM,EAG5DF,KAAAK,2BAA8BH,IAC5BF,KAAKM,cAAgBF,EAA6BF,EAAM,EAG1DF,KAAAO,6BAAgCL,IAC9BF,KAAKQ,gBAAkBJ,EAA6BF,EAAM,EAG5DF,KAAAS,2BAA8BP,IAC5BF,KAAKU,cAAgBN,EAA6BF,EAAM,E,cAnGtB,M,qBAQT,M,mBAEF,M,qBAEE,M,mBAEF,K,CAQzB,kBAAAS,GACE,MAAMR,gBAAEA,GAAoBH,KAC5B,OACEY,EAAA,OAAKC,MAAOC,EAAIC,aAAcC,QAASb,EAAiBc,IAAI,2BAC1DL,EAAA,QAAMM,KAAMC,EAAMJ,aAAcK,aAAcpB,KAAKC,+B,CAKzD,gBAAAoB,GACE,MAAMf,cAAEA,GAAkBN,KAC1B,OACEY,EAAA,OAAKC,MAAOC,EAAIQ,WAAYN,QAASV,EAAeW,IAAI,yBACtDL,EAAA,QAAMM,KAAMC,EAAMG,WAAYF,aAAcpB,KAAKK,6B,CAKvD,kBAAAkB,GACE,MAAMf,gBAAEA,GAAoBR,KAC5B,OACEY,EAAA,OAAKC,MAAOC,EAAIU,aAAcR,QAASR,GACrCI,EAAA,QAAMM,KAAMC,EAAMK,aAAcJ,aAAcpB,KAAKO,+B,CAKzD,oBAAAkB,GACE,OACEb,EAAA,OAAKC,MAAOC,EAAIY,SACdd,EAAA,a,CAKN,gBAAAe,GACE,MAAMjB,cAAEA,GAAkBV,KAC1B,OACEY,EAAA,OAAKC,MAAOC,EAAIc,WAAYZ,QAASN,GACnCE,EAAA,QAAMM,KAAMC,EAAMS,WAAYR,aAAcpB,KAAKS,6B,CAKvD,MAAAoB,GACE,OACEjB,EAACkB,EAAI,KACHlB,EAAA,OAAKC,MAAOC,EAAIiB,WACb/B,KAAKW,qBACLX,KAAKuB,qBACLvB,KAAKyB,uBACLzB,KAAK2B,mBACL3B,KAAKqB,oB"}