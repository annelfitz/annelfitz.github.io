{"version":3,"names":["cardGroupCss","CardGroup","this","items","udpateItemsOnSelectionModeChange","updateSlottedItems","slotRefEl","updateSelectedItems","updateItemsOnSlotChange","event","target","assignedElements","flatten","filter","el","matches","forEach","selectionMode","setSelectedItems","emit","elToMatch","matchingEl","selected","selectedItems","disabled","calciteCardGroupSelect","onSelectionModeChange","connectedCallback","connectInteractive","componentDidRender","updateHostInteraction","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectInteractive","componentWillLoad","setUpLoadableComponent","calciteInternalCardKeyEventListener","composedPath","includes","interactiveItems","detail","focusElementInGroup","calciteCardSelectListener","selectable","setFocus","componentLoaded","focusElement","render","role","h","Host","InteractiveContainer","toAriaBoolean","label","class","onSlotchange","ref"],"sources":["src/components/card-group/card-group.scss?tag=calcite-card-group&encapsulation=shadow","src/components/card-group/card-group.tsx"],"sourcesContent":["/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-card-group-gap: Specifies the gap between slotted components.\n */\n\n:host {\n  --calcite-card-group-gap: var(--calcite-size-md);\n  display: block;\n}\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--calcite-card-group-gap);\n}\n\n@include disabled();\n@include base-component();\n","import {\n  Component,\n  h,\n  VNode,\n  Prop,\n  Element,\n  Listen,\n  EventEmitter,\n  Event,\n  Method,\n  Watch,\n  Host,\n} from \"@stencil/core\";\nimport { focusElement, focusElementInGroup, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport {\n  LoadableComponent,\n  componentLoaded,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n/**\n * @slot - A slot for adding one or more `calcite-card`s.\n */\n\n@Component({\n  tag: \"calcite-card-group\",\n  styleUrl: \"card-group.scss\",\n  shadow: true,\n})\nexport class CardGroup implements InteractiveComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Element\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteCardGroupElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /** Specifies the size of the component. Child `calcite-card`s inherit the component's value. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the selection mode of the component. */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"multiple\" | \"single\" | \"single-persist\" | \"none\",\n    SelectionMode\n  > = \"none\";\n\n  @Watch(\"selectionMode\")\n  onSelectionModeChange(): void {\n    this.udpateItemsOnSelectionModeChange();\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteCardElement[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  private items: HTMLCalciteCardElement[] = [];\n\n  private slotRefEl: HTMLSlotElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Emits when the component's selection changes and the `selectionMode` is not `none`. */\n  @Event({ cancelable: false }) calciteCardGroupSelect: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalCardKeyEvent\")\n  calciteInternalCardKeyEventListener(event: KeyboardEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      const interactiveItems = this.items.filter((el) => !el.disabled);\n      switch (event.detail[\"key\"]) {\n        case \"ArrowRight\":\n          focusElementInGroup(interactiveItems, event.target as HTMLCalciteCardElement, \"next\");\n          break;\n        case \"ArrowLeft\":\n          focusElementInGroup(interactiveItems, event.target as HTMLCalciteCardElement, \"previous\");\n          break;\n        case \"Home\":\n          focusElementInGroup(interactiveItems, event.target as HTMLCalciteCardElement, \"first\");\n          break;\n        case \"End\":\n          focusElementInGroup(interactiveItems, event.target as HTMLCalciteCardElement, \"last\");\n          break;\n      }\n    }\n  }\n\n  @Listen(\"calciteCardSelect\")\n  calciteCardSelectListener(event: CustomEvent): void {\n    if (\n      event.composedPath().includes(this.el) &&\n      !(event.target as HTMLCalciteCardElement).selectable\n    ) {\n      this.setSelectedItems(true, event.target as HTMLCalciteCardElement);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentLoaded(this);\n    if (!this.disabled) {\n      focusElement(this.items[0]);\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private udpateItemsOnSelectionModeChange = (): void => {\n    this.updateSlottedItems(this.slotRefEl);\n    this.updateSelectedItems();\n  };\n\n  private updateItemsOnSlotChange = (event: Event): void => {\n    this.updateSlottedItems(event.target as HTMLSlotElement);\n    this.updateSelectedItems();\n  };\n\n  private updateSlottedItems = (target: HTMLSlotElement): void => {\n    this.items = target\n      .assignedElements({ flatten: true })\n      .filter((el) => el?.matches(\"calcite-card\")) as HTMLCalciteCardElement[];\n  };\n\n  private updateSelectedItems = (): void => {\n    this.items.forEach((el) => {\n      el.selectionMode = this.selectionMode;\n    });\n\n    this.setSelectedItems(false);\n  };\n\n  private setSelectedItems = (emit: boolean, elToMatch?: HTMLCalciteCardElement): void => {\n    if (elToMatch) {\n      this.items.forEach((el) => {\n        const matchingEl = elToMatch === el;\n        switch (this.selectionMode) {\n          case \"multiple\":\n            if (matchingEl) {\n              el.selected = !el.selected;\n            }\n            break;\n\n          case \"single\":\n            el.selected = matchingEl ? !el.selected : false;\n            break;\n\n          case \"single-persist\":\n            el.selected = !!matchingEl;\n            break;\n        }\n      });\n    }\n\n    this.selectedItems = this.items.filter((el) => el.selected);\n\n    if (emit && this.selectionMode !== \"none\" && !this.disabled) {\n      this.calciteCardGroupSelect.emit();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const role =\n      this.selectionMode === \"none\" || this.selectionMode === \"multiple\" ? \"group\" : \"radiogroup\";\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-disabled={toAriaBoolean(this.disabled)}\n            aria-label={this.label}\n            class=\"container\"\n            role={role}\n          >\n            <slot\n              onSlotchange={this.updateItemsOnSlotChange}\n              ref={(el) => (this.slotRefEl = el as HTMLSlotElement)}\n            />\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;;qSAAA,MAAMA,EAAe,whB,MCsCRC,EAAS,M,wFAgDZC,KAAAC,MAAkC,GAkGlCD,KAAAE,iCAAmC,KACzCF,KAAKG,mBAAmBH,KAAKI,WAC7BJ,KAAKK,qBAAqB,EAGpBL,KAAAM,wBAA2BC,IACjCP,KAAKG,mBAAmBI,EAAMC,QAC9BR,KAAKK,qBAAqB,EAGpBL,KAAAG,mBAAsBK,IAC5BR,KAAKC,MAAQO,EACVC,iBAAiB,CAAEC,QAAS,OAC5BC,QAAQC,GAAOA,GAAIC,QAAQ,iBAA4C,EAGpEb,KAAAK,oBAAsB,KAC5BL,KAAKC,MAAMa,SAASF,IAClBA,EAAGG,cAAgBf,KAAKe,aAAa,IAGvCf,KAAKgB,iBAAiB,MAAM,EAGtBhB,KAAAgB,iBAAmB,CAACC,EAAeC,KACzC,GAAIA,EAAW,CACblB,KAAKC,MAAMa,SAASF,IAClB,MAAMO,EAAaD,IAAcN,EACjC,OAAQZ,KAAKe,eACX,IAAK,WACH,GAAII,EAAY,CACdP,EAAGQ,UAAYR,EAAGQ,Q,CAEpB,MAEF,IAAK,SACHR,EAAGQ,SAAWD,GAAcP,EAAGQ,SAAW,MAC1C,MAEF,IAAK,iBACHR,EAAGQ,WAAaD,EAChB,M,IAKRnB,KAAKqB,cAAgBrB,KAAKC,MAAMU,QAAQC,GAAOA,EAAGQ,WAElD,GAAIH,GAAQjB,KAAKe,gBAAkB,SAAWf,KAAKsB,SAAU,CAC3DtB,KAAKuB,uBAAuBN,M,iBAnLI,M,gCAMI,I,mBAMpC,O,mBAY+D,E,CATnE,qBAAAO,GACExB,KAAKE,kC,CAmCP,iBAAAuB,GACEC,EAAmB1B,K,CAGrB,kBAAA2B,GACEC,EAAsB5B,K,CAGxB,gBAAA6B,GACEC,EAAmB9B,K,CAGrB,oBAAA+B,GACEC,EAAsBhC,K,CAGxB,uBAAMiC,GACJC,EAAuBlC,K,CASzB,mCAAAmC,CAAoC5B,GAClC,GAAIA,EAAM6B,eAAeC,SAASrC,KAAKY,IAAK,CAC1C,MAAM0B,EAAmBtC,KAAKC,MAAMU,QAAQC,IAAQA,EAAGU,WACvD,OAAQf,EAAMgC,OAAO,QACnB,IAAK,aACHC,EAAoBF,EAAkB/B,EAAMC,OAAkC,QAC9E,MACF,IAAK,YACHgC,EAAoBF,EAAkB/B,EAAMC,OAAkC,YAC9E,MACF,IAAK,OACHgC,EAAoBF,EAAkB/B,EAAMC,OAAkC,SAC9E,MACF,IAAK,MACHgC,EAAoBF,EAAkB/B,EAAMC,OAAkC,QAC9E,M,EAMR,yBAAAiC,CAA0BlC,GACxB,GACEA,EAAM6B,eAAeC,SAASrC,KAAKY,MACjCL,EAAMC,OAAkCkC,WAC1C,CACA1C,KAAKgB,iBAAiB,KAAMT,EAAMC,O,EActC,cAAMmC,SACEC,EAAgB5C,MACtB,IAAKA,KAAKsB,SAAU,CAClBuB,EAAa7C,KAAKC,MAAM,G,EAqE5B,MAAA6C,GACE,MAAMC,EACJ/C,KAAKe,gBAAkB,QAAUf,KAAKe,gBAAkB,WAAa,QAAU,aAEjF,OACEiC,EAACC,EAAI,KACHD,EAACE,EAAoB,CAAC5B,SAAUtB,KAAKsB,UACnC0B,EAAA,uBACiBG,EAAcnD,KAAKsB,UAAS,aAC/BtB,KAAKoD,MACjBC,MAAM,YACNN,KAAMA,GAENC,EAAA,QACEM,aAActD,KAAKM,wBACnBiD,IAAM3C,GAAQZ,KAAKI,UAAYQ,M"}