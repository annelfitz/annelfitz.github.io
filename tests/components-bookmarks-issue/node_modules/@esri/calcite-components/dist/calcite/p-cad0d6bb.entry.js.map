{"version":3,"names":["panelCss","Panel","this","resizeObserver","createObserver","resizeHandler","panelScrollEl","scrollHeight","offsetHeight","tabIndex","setContainerRef","node","containerEl","panelKeyDownHandler","event","closable","key","defaultPrevented","close","preventDefault","closed","calcitePanelClose","emit","collapse","collapsed","calcitePanelToggle","panelScrollHandler","calcitePanelScroll","handleHeaderActionsStartSlotChange","hasStartActions","slotChangeHasAssignedElement","handleHeaderActionsEndSlotChange","hasEndActions","handleHeaderMenuActionsSlotChange","hasMenuItems","handleActionBarSlotChange","actionBars","slotChangeGetAssignedElements","filter","el","matches","forEach","actionBar","layout","hasActionBar","length","handleHeaderContentSlotChange","hasHeaderContent","handleFooterSlotChange","hasFooterContent","handleFooterActionsSlotChange","hasFooterActions","handleFabSlotChange","hasFab","setPanelScrollEl","disconnect","observe","onMessagesChange","connectedCallback","connectInteractive","connectLocalized","connectMessages","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","disconnectLocalized","disconnectMessages","effectiveLocaleChange","updateMessages","effectiveLocale","setFocus","componentFocusable","focusFirstTabbable","scrollContentTo","options","scrollTo","renderHeaderContent","heading","headingLevel","description","headingNode","h","Heading","class","CSS","level","descriptionNode","headerContent","renderActionBar","actionBarContainer","hidden","name","SLOTS","onSlotchange","renderHeaderSlottedContent","renderHeaderStartActions","headerActionsStart","headerActions","renderHeaderActionsEnd","messages","collapseDirection","collapsible","expand","icons","ICONS","reverse","collapseNode","toAriaBoolean","icon","onClick","text","title","closeNode","slotNode","headerActionsEnd","showContainer","renderMenu","menuOpen","flipPlacements","label","open","overlayPositioning","placement","menu","slot","ACTION_MENU_SLOTS","trigger","headerMenuActions","renderHeaderNode","headerContentNode","showHeaderContent","header","headerContainer","headerContainerBorderEnd","renderFooterNode","showFooter","footer","footerActions","renderContent","contentWrapper","onScroll","ref","renderFab","fabContainer","fab","render","disabled","loading","panelNode","container","onKeyDown","InteractiveContainer"],"sources":["src/components/panel/panel.scss?tag=calcite-panel&encapsulation=shadow","src/components/panel/panel.tsx"],"sourcesContent":["/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-panel-footer-padding: Specifies the padding of the component's footer.\n * @prop --calcite-panel-header-border-block-end: Specifies the component header's block end border.\n */\n\n:host {\n  @extend %component-host;\n  @apply relative flex w-full h-full flex-auto overflow-hidden;\n\n  --calcite-min-header-height: calc(var(--calcite-icon-size) * 3);\n}\n\n@include disabled();\n\n@import \"../../assets/styles/header\";\n\n.container {\n  @apply bg-background m-0 flex w-full flex-auto flex-col items-stretch p-0;\n\n  transition:\n    max-block-size var(--calcite-animation-timing),\n    inline-size var(--calcite-animation-timing);\n}\n\n.container[hidden] {\n  @apply hidden;\n}\n\n.header {\n  @apply bg-foreground-1 flex flex-col\n    z-header;\n  border-block-end: var(--calcite-panel-header-border-block-end, 1px solid var(--calcite-color-border-3));\n}\n\n.header-container {\n  @apply flex flex-row w-full\n  items-stretch\n  justify-start;\n  flex: 0 0 auto;\n}\n\n.header-container--border-end {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n.action-bar-container {\n  @apply w-full;\n}\n\n.action-bar-container ::slotted(calcite-action-bar) {\n  @apply w-full;\n}\n\n.header-content {\n  @apply flex\n    flex-col\n    overflow-hidden\n    px-3\n    py-3.5;\n  margin-inline-end: auto;\n  .heading,\n  .description {\n    @apply block\n      break-words\n      p-0;\n  }\n  .heading {\n    @apply text-0h mx-0 mt-0 mb-1 font-medium;\n    &:only-child {\n      @apply mb-0;\n    }\n  }\n  .description {\n    @apply text-color-2 text-n1h;\n  }\n}\n\n.back-button {\n  @apply border-color-3\n  border-0\n  border-solid;\n  border-inline-end-width: theme(\"borderWidth.DEFAULT\");\n}\n\n.header-actions {\n  @apply flex\n  flex-row\n  flex-nowrap\n  items-stretch;\n}\n\n.header-actions--end {\n  margin-inline-start: theme(\"margin.auto\");\n}\n\n.content-wrapper {\n  @apply flex\n  flex-auto\n  flex-col\n  flex-nowrap\n  items-stretch\n  bg-background\n  overflow-auto\n  h-full;\n}\n\n.footer {\n  @apply bg-foreground-1\n  flex\n  w-full\n  justify-evenly;\n\n  flex: 0 0 auto;\n  padding: var(--calcite-panel-footer-padding, theme(\"spacing.2\"));\n  border-block-start: 1px solid var(--calcite-color-border-3);\n}\n\n.fab-container {\n  @apply sticky\n  bottom-0\n  my-0\n  mx-auto\n  block\n  p-2\n  z-sticky;\n  inset-inline: 0;\n  inline-size: fit-content;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  focusFirstTabbable,\n  slotChangeGetAssignedElements,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { PanelMessages } from \"./assets/panel/t9n\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\n\n/**\n * @slot - A slot for adding custom content.\n * @slot action-bar - A slot for adding a `calcite-action-bar` to the component.\n * @slot header-actions-start - A slot for adding actions or content to the start side of the header.\n * @slot header-actions-end - A slot for adding actions or content to the end side of the header.\n * @slot header-content - A slot for adding custom content to the header.\n * @slot header-menu-actions - A slot for adding an overflow menu with actions inside a `calcite-dropdown`.\n * @slot fab - A slot for adding a `calcite-fab` (floating action button) to perform an action.\n * @slot footer-actions - [Deprecated] Use the `\"footer\"` slot instead. A slot for adding `calcite-button`s to the component's footer.\n * @slot footer - A slot for adding custom content to the footer.\n */\n@Component({\n  tag: \"calcite-panel\",\n  styleUrl: \"panel.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Panel\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** When `true`, the component will be hidden. */\n  @Prop({ mutable: true, reflect: true }) closed = false;\n\n  /**\n   *  When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, displays a close button in the trailing side of the header. */\n  @Prop({ reflect: true }) closable = false;\n\n  /**\n   * When `true`, hides the component's content area.\n   */\n  @Prop({ reflect: true }) collapsed = false;\n\n  /**\n   * Specifies the direction of the collapse.\n   *\n   * @internal\n   */\n  @Prop() collapseDirection: \"down\" | \"up\" = \"down\";\n\n  /**\n   * When `true`, the component is collapsible.\n   */\n  @Prop({ reflect: true }) collapsible = false;\n\n  /**\n   * Specifies the number at which section headings should start.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /** A description for the component. */\n  @Prop() description: string;\n\n  /**\n   * When `true`, the action menu items in the `header-menu-actions` slot are open.\n   */\n  @Prop({ reflect: true }) menuOpen = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PanelMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PanelMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePanelElement;\n\n  containerEl: HTMLElement;\n\n  panelScrollEl: HTMLElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.resizeHandler());\n\n  @State() hasStartActions = false;\n\n  @State() hasEndActions = false;\n\n  @State() hasMenuItems = false;\n\n  @State() hasHeaderContent = false;\n\n  @State() hasActionBar = false;\n\n  @State() hasFooterContent = false;\n\n  @State() hasFooterActions = false;\n\n  @State() hasFab = false;\n\n  @State() defaultMessages: PanelMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @State() showHeaderContent = false;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calcitePanelClose: EventEmitter<void>;\n\n  /**\n   * Fires when the collapse button is clicked.\n   */\n  @Event({ cancelable: false }) calcitePanelToggle: EventEmitter<void>;\n\n  /**\n   * Fires when the content is scrolled.\n   */\n  @Event({ cancelable: false }) calcitePanelScroll: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  resizeHandler = (): void => {\n    const { panelScrollEl } = this;\n\n    if (\n      !panelScrollEl ||\n      typeof panelScrollEl.scrollHeight !== \"number\" ||\n      typeof panelScrollEl.offsetHeight !== \"number\"\n    ) {\n      return;\n    }\n\n    panelScrollEl.tabIndex = panelScrollEl.scrollHeight > panelScrollEl.offsetHeight ? 0 : -1;\n  };\n\n  setContainerRef = (node: HTMLElement): void => {\n    this.containerEl = node;\n  };\n\n  panelKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.closable && event.key === \"Escape\" && !event.defaultPrevented) {\n      this.close();\n      event.preventDefault();\n    }\n  };\n\n  close = (): void => {\n    this.closed = true;\n    this.calcitePanelClose.emit();\n  };\n\n  collapse = (): void => {\n    this.collapsed = !this.collapsed;\n    this.calcitePanelToggle.emit();\n  };\n\n  panelScrollHandler = (): void => {\n    this.calcitePanelScroll.emit();\n  };\n\n  handleHeaderActionsStartSlotChange = (event: Event): void => {\n    this.hasStartActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleHeaderActionsEndSlotChange = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleHeaderMenuActionsSlotChange = (event: Event): void => {\n    this.hasMenuItems = slotChangeHasAssignedElement(event);\n  };\n\n  handleActionBarSlotChange = (event: Event): void => {\n    const actionBars = slotChangeGetAssignedElements(event).filter(\n      (el) => el?.matches(\"calcite-action-bar\"),\n    ) as HTMLCalciteActionBarElement[];\n\n    actionBars.forEach((actionBar) => (actionBar.layout = \"horizontal\"));\n\n    this.hasActionBar = !!actionBars.length;\n  };\n\n  handleHeaderContentSlotChange = (event: Event): void => {\n    this.hasHeaderContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterSlotChange = (event: Event): void => {\n    this.hasFooterContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterActionsSlotChange = (event: Event): void => {\n    this.hasFooterActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleFabSlotChange = (event: Event): void => {\n    this.hasFab = slotChangeHasAssignedElement(event);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.containerEl);\n  }\n\n  /**\n   * Scrolls the component's content to a specified set of coordinates.\n   *\n   * @example\n   * myCalciteFlowItem.scrollContentTo({\n   *   left: 0, // Specifies the number of pixels along the X axis to scroll the window or element.\n   *   top: 0, // Specifies the number of pixels along the Y axis to scroll the window or element\n   *   behavior: \"auto\" // Specifies whether the scrolling should animate smoothly (smooth), or happen instantly in a single jump (auto, the default value).\n   * });\n   * @param options - allows specific coordinates to be defined.\n   * @returns - promise that resolves once the content is scrolled to.\n   */\n  @Method()\n  async scrollContentTo(options?: ScrollToOptions): Promise<void> {\n    this.panelScrollEl?.scrollTo(options);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderHeaderContent(): VNode {\n    const { heading, headingLevel, description, hasHeaderContent } = this;\n    const headingNode = heading ? (\n      <Heading class={CSS.heading} level={headingLevel}>\n        {heading}\n      </Heading>\n    ) : null;\n\n    const descriptionNode = description ? <span class={CSS.description}>{description}</span> : null;\n\n    return !hasHeaderContent && (headingNode || descriptionNode) ? (\n      <div class={CSS.headerContent} key=\"header-content\">\n        {headingNode}\n        {descriptionNode}\n      </div>\n    ) : null;\n  }\n\n  renderActionBar(): VNode {\n    return (\n      <div class={CSS.actionBarContainer} hidden={!this.hasActionBar}>\n        <slot name={SLOTS.actionBar} onSlotchange={this.handleActionBarSlotChange} />\n      </div>\n    );\n  }\n\n  renderHeaderSlottedContent(): VNode {\n    return (\n      <div class={CSS.headerContent} hidden={!this.hasHeaderContent} key=\"slotted-header-content\">\n        <slot name={SLOTS.headerContent} onSlotchange={this.handleHeaderContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderHeaderStartActions(): VNode {\n    const { hasStartActions } = this;\n\n    return (\n      <div\n        class={{ [CSS.headerActionsStart]: true, [CSS.headerActions]: true }}\n        hidden={!hasStartActions}\n        key=\"header-actions-start\"\n      >\n        <slot\n          name={SLOTS.headerActionsStart}\n          onSlotchange={this.handleHeaderActionsStartSlotChange}\n        />\n      </div>\n    );\n  }\n\n  renderHeaderActionsEnd(): VNode {\n    const {\n      hasEndActions,\n      messages,\n      closable,\n      collapsed,\n      collapseDirection,\n      collapsible,\n      hasMenuItems,\n    } = this;\n    const { collapse, expand, close } = messages;\n\n    const icons = [ICONS.expand, ICONS.collapse];\n\n    if (collapseDirection === \"up\") {\n      icons.reverse();\n    }\n\n    const collapseNode = collapsible ? (\n      <calcite-action\n        aria-expanded={toAriaBoolean(!collapsed)}\n        aria-label={collapse}\n        data-test=\"collapse\"\n        icon={collapsed ? icons[0] : icons[1]}\n        onClick={this.collapse}\n        text={collapse}\n        title={collapsed ? expand : collapse}\n      />\n    ) : null;\n\n    const closeNode = closable ? (\n      <calcite-action\n        aria-label={close}\n        data-test=\"close\"\n        icon={ICONS.close}\n        onClick={this.close}\n        text={close}\n        title={close}\n      />\n    ) : null;\n\n    const slotNode = (\n      <slot name={SLOTS.headerActionsEnd} onSlotchange={this.handleHeaderActionsEndSlotChange} />\n    );\n\n    const showContainer = hasEndActions || collapseNode || closeNode || hasMenuItems;\n\n    return (\n      <div\n        class={{ [CSS.headerActionsEnd]: true, [CSS.headerActions]: true }}\n        hidden={!showContainer}\n        key=\"header-actions-end\"\n      >\n        {slotNode}\n        {this.renderMenu()}\n        {collapseNode}\n        {closeNode}\n      </div>\n    );\n  }\n\n  renderMenu(): VNode {\n    const { hasMenuItems, messages, menuOpen } = this;\n\n    return (\n      <calcite-action-menu\n        flipPlacements={[\"top\", \"bottom\"]}\n        hidden={!hasMenuItems}\n        key=\"menu\"\n        label={messages.options}\n        open={menuOpen}\n        overlayPositioning={this.overlayPositioning}\n        placement=\"bottom-end\"\n      >\n        <calcite-action\n          icon={ICONS.menu}\n          slot={ACTION_MENU_SLOTS.trigger}\n          text={messages.options}\n        />\n        <slot\n          name={SLOTS.headerMenuActions}\n          onSlotchange={this.handleHeaderMenuActionsSlotChange}\n        />\n      </calcite-action-menu>\n    );\n  }\n\n  renderHeaderNode(): VNode {\n    const {\n      hasHeaderContent,\n      hasStartActions,\n      hasEndActions,\n      closable,\n      collapsible,\n      hasMenuItems,\n      hasActionBar,\n    } = this;\n\n    const headerContentNode = this.renderHeaderContent();\n\n    const showHeaderContent =\n      hasHeaderContent ||\n      !!headerContentNode ||\n      hasStartActions ||\n      hasEndActions ||\n      collapsible ||\n      closable ||\n      hasMenuItems;\n\n    this.showHeaderContent = showHeaderContent;\n\n    return (\n      <header class={CSS.header} hidden={!(showHeaderContent || hasActionBar)}>\n        <div\n          class={{ [CSS.headerContainer]: true, [CSS.headerContainerBorderEnd]: hasActionBar }}\n          hidden={!showHeaderContent}\n        >\n          {this.renderHeaderStartActions()}\n          {this.renderHeaderSlottedContent()}\n          {headerContentNode}\n          {this.renderHeaderActionsEnd()}\n        </div>\n        {this.renderActionBar()}\n      </header>\n    );\n  }\n\n  renderFooterNode(): VNode {\n    const { hasFooterContent, hasFooterActions } = this;\n\n    const showFooter = hasFooterContent || hasFooterActions;\n\n    return (\n      <footer class={CSS.footer} hidden={!showFooter}>\n        <slot key=\"footer-slot\" name={SLOTS.footer} onSlotchange={this.handleFooterSlotChange} />\n        <slot\n          key=\"footer-actions-slot\"\n          name={SLOTS.footerActions}\n          onSlotchange={this.handleFooterActionsSlotChange}\n        />\n      </footer>\n    );\n  }\n\n  setPanelScrollEl = (el: HTMLElement): void => {\n    this.panelScrollEl = el;\n    this.resizeObserver?.disconnect();\n\n    if (el) {\n      this.resizeObserver?.observe(el);\n      this.resizeHandler();\n    }\n  };\n\n  renderContent(): VNode {\n    return (\n      <div\n        class={CSS.contentWrapper}\n        hidden={this.collapsible && this.collapsed}\n        onScroll={this.panelScrollHandler}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.setPanelScrollEl}\n      >\n        <slot />\n        {this.renderFab()}\n      </div>\n    );\n  }\n\n  renderFab(): VNode {\n    return (\n      <div class={CSS.fabContainer} hidden={!this.hasFab}>\n        <slot name={SLOTS.fab} onSlotchange={this.handleFabSlotChange} />\n      </div>\n    );\n  }\n\n  render(): VNode {\n    const { disabled, loading, panelKeyDownHandler, closed, closable } = this;\n\n    const panelNode = (\n      <article\n        aria-busy={toAriaBoolean(loading)}\n        class={CSS.container}\n        hidden={closed}\n        onKeyDown={panelKeyDownHandler}\n        tabIndex={closable ? 0 : -1}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.setContainerRef}\n      >\n        {this.renderHeaderNode()}\n        {this.renderContent()}\n        {this.renderFooterNode()}\n      </article>\n    );\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        {loading ? <calcite-scrim loading={loading} /> : null}\n        {panelNode}\n      </InteractiveContainer>\n    );\n  }\n}\n"],"mappings":"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"}