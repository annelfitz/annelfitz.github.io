{"version":3,"names":["CSS","container","tileGroupCss","TileGroup","this","updateTiles","el","querySelectorAll","forEach","item","scale","scaleWatcher","connectedCallback","connectInteractive","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","render","h","InteractiveContainer","disabled","class","onSlotchange"],"sources":["src/components/tile-group/resources.ts","src/components/tile-group/tile-group.scss?tag=calcite-tile-group&encapsulation=shadow","src/components/tile-group/tile-group.tsx"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n};\n",":host {\n  box-sizing: border-box;\n  display: inline-block;\n\n  ::slotted(calcite-tile) {\n    margin-block-end: var(--calcite-spacing-px);\n    margin-inline-end: var(--calcite-spacing-px);\n  }\n}\n.container {\n  display: grid;\n  grid-auto-rows: minmax(auto, 1fr);\n}\n:host([scale=\"s\"]) {\n  .container {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  }\n}\n:host([scale=\"m\"]) {\n  .container {\n    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n  }\n}\n:host([scale=\"l\"]) {\n  .container {\n    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));\n  }\n}\n:host([layout=\"vertical\"]) {\n  .container {\n    display: flex;\n    flex-direction: column;\n  }\n}\n\n@include disabled();\n@include base-component();\n","import { Component, Element, h, Prop, VNode, Watch } from \"@stencil/core\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { Layout, Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-tile` elements.\n */\n@Component({\n  tag: \"calcite-tile-group\",\n  styleUrl: \"tile-group.scss\",\n  shadow: true,\n})\nexport class TileGroup implements InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Defines the layout of the component.\n   *\n   * Use `\"horizontal\"` for rows, and `\"vertical\"` for a single column.\n   */\n  @Prop({ reflect: true }) layout: Exclude<Layout, \"grid\"> = \"horizontal\";\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  scaleWatcher(): void {\n    this.updateTiles();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTileGroupElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private updateTiles = (): void => {\n    this.el.querySelectorAll(\"calcite-tile\").forEach((item) => (item.scale = this.scale));\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    this.updateTiles();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  render(): VNode {\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div class={CSS.container}>\n          <slot onSlotchange={this.updateTiles} />\n        </div>\n      </InteractiveContainer>\n    );\n  }\n}\n"],"mappings":";;;;;mIAAO,MAAMA,EAAM,CACjBC,UAAW,aCDb,MAAMC,EAAe,s7B,MCmBRC,EAAS,M,yBAyCZC,KAAAC,YAAc,KACpBD,KAAKE,GAAGC,iBAAiB,gBAAgBC,SAASC,GAAUA,EAAKC,MAAQN,KAAKM,OAAO,E,cAlCnD,M,YAOuB,a,WAKnB,G,CAGxC,YAAAC,GACEP,KAAKC,a,CA2BP,iBAAAO,GACEC,EAAmBT,MACnBA,KAAKC,a,CAGP,kBAAAS,GACEC,EAAsBX,K,CAGxB,oBAAAY,GACEC,EAAsBb,K,CAGxB,MAAAc,GACE,OACEC,EAACC,EAAoB,CAACC,SAAUjB,KAAKiB,UACnCF,EAAA,OAAKG,MAAOtB,EAAIC,WACdkB,EAAA,QAAMI,aAAcnB,KAAKC,e"}