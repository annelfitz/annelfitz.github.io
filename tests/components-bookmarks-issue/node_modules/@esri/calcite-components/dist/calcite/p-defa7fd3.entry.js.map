{"version":3,"names":["CSS","container","containerContent","hasProgress","hide","primary","secondary","tertiary","SLOTS","logo","user","progress","navigationAction","contentStart","contentEnd","contentCenter","navSecondary","navTertiary","ICONS","hamburger","navigationCss","CalciteNavigation","this","actionClickHandler","calciteNavigationActionSelect","emit","handleUserSlotChange","event","isPrimaryLevel","userSlotHasElements","slotChangeHasAssignedElement","handleLogoSlotChange","logoSlotHasElements","handleContentStartSlotChange","primaryContentStartSlotHasElements","handleContentEndSlotChange","primaryContentEndSlotHasElements","handleContentCenterSlotChange","primaryContentCenterSlotHasElements","handleSecondarySlotChange","secondarySlotHasElements","handleTertiarySlotChange","tertiarySlotHasElements","handleMenuActionSlotChange","navigationActionSlotHasElements","handleProgressSlotChange","progressSlotHasElement","setFocus","componentFocusable","navigationActionEl","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","el","slot","renderMenuAction","h","name","onSlotchange","icon","onClick","text","label","ref","render","primaryLevelHasElements","slotName","Host","class","Fragment","heading","description","anchor","image","standalone","navigationLogoCss","CalciteNavigationLogo","href","focus","renderIcon","flipRtl","iconFlipRtl","scale","thumbnail","rel","target","alt","src","key","textContainer","fullName","username","button","navigationUserCss","CalciteNavigationUser","userId","textDisabled"],"sources":["src/components/navigation/resources.ts","src/components/navigation/navigation.scss?tag=calcite-navigation&encapsulation=shadow","src/components/navigation/navigation.tsx","src/components/navigation-logo/resources.ts","src/components/navigation-logo/navigation-logo.scss?tag=calcite-navigation-logo&encapsulation=shadow","src/components/navigation-logo/navigation-logo.tsx","src/components/navigation-user/resources.ts","src/components/navigation-user/navigation-user.scss?tag=calcite-navigation-user&encapsulation=shadow","src/components/navigation-user/navigation-user.tsx"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n  containerContent: \"container-content\",\n  hasProgress: \"progress-bar\",\n  hide: \"hide\",\n  primary: \"primary\",\n  secondary: \"secondary\",\n  tertiary: \"tertiary\",\n};\n\nexport const SLOTS = {\n  logo: \"logo\",\n  user: \"user\",\n  progress: \"progress\",\n  navigationAction: \"navigation-action\",\n  contentStart: \"content-start\",\n  contentEnd: \"content-end\",\n  contentCenter: \"content-center\",\n  navSecondary: \"navigation-secondary\",\n  navTertiary: \"navigation-tertiary\",\n};\n\nexport const ICONS = {\n  hamburger: \"hamburger\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-navigation-width: Specifies the width of the component's content area.\n * @prop --calcite-navigation-background: Specifies the background color of the component.\n * @prop --calcite-navigation-border-color: Specifies the border color of the component.\n */\n\n@include base-component();\n\n.container {\n  @apply flex\n  flex-col\n  mx-auto\n  w-full;\n  margin-block: 0;\n  margin-inline: auto;\n  background-color: var(--calcite-navigation-background, var(--calcite-color-foreground-1));\n  &.primary,\n  &.secondary,\n  &.tertiary {\n    border-block-end: 1px solid;\n    border-block-end-color: var(--calcite-navigation-border-color, var(--calcite-color-border-3));\n  }\n}\n\n.user,\n.logo {\n  @apply flex;\n}\n\n.hide {\n  @apply hidden;\n}\n\n.primary {\n  @apply h-16;\n}\n\n.secondary {\n  @apply h-12;\n}\n\n.tertiary {\n  @apply h-12;\n}\n\n.container-content {\n  @apply flex\n  w-full\n  h-full\n  mx-auto;\n  margin-block: 0;\n  inline-size: var(--calcite-navigation-width, 100%);\n  max-inline-size: 100%;\n  &.progress-bar {\n    margin-block-start: 0.125rem;\n  }\n}\n\nslot[name] {\n  @apply flex flex-row;\n}\n\nslot[name=\"navigation-secondary\"]::slotted(calcite-navigation),\nslot[name=\"navigation-tertiary\"]::slotted(calcite-navigation) {\n  @apply w-full;\n}\n\nslot[name=\"content-start\"]::slotted(*),\nslot[name=\"content-center\"]::slotted(*),\nslot[name=\"content-end\"]::slotted(*) {\n  @apply flex flex-row items-center;\n}\n\nslot[name=\"progress\"],\nslot[name=\"progress\"] calcite-progress {\n  inset-block-start: 0;\n  inset-inline: 0;\n}\nslot[name=\"content-end\"] {\n  @apply ms-auto;\n}\n\nslot[name=\"content-start\"] {\n  @apply me-auto;\n}\n\nslot[name=\"content-end\"],\nslot[name=\"logo\"] ~ slot[name=\"user\"],\nslot[name=\"user\"]:only-child {\n  @apply ms-auto;\n}\n\nslot[name=\"content-center\"] {\n  @apply ms-auto me-auto;\n}\n\nslot[name=\"content-start\"] ~ slot[name=\"content-center\"] {\n  @apply ms-0;\n}\n\nslot[name=\"content-start\"] ~ slot[name=\"content-end\"],\nslot[name=\"content-center\"] ~ slot[name=\"content-end\"],\nslot[name=\"content-center\"] ~ slot[name=\"user\"],\nslot[name=\"content-end\"] ~ slot[name=\"user\"] {\n  @apply m-0;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Host,\n  Prop,\n  State,\n  VNode,\n  Method,\n} from \"@stencil/core\";\nimport { slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\nimport {\n  LoadableComponent,\n  componentFocusable,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n/**\n * @slot logo - A slot for adding a `calcite-logo` component to the primary navigation level.\n * @slot user - A slot for adding a `calcite-user` component to the primary navigation level.\n * @slot progress - A slot for adding a `calcite-progress` component to the primary navigation level.\n * @slot navigation-action - A slot for adding a `calcite-action` component to the primary navigation level.\n * @slot content-start - A slot for adding a `calcite-menu`, `calcite-action`, or other interactive elements in the start position of any navigation level.\n * @slot content-center - A slot for adding a `calcite-menu`, `calcite-action`, or other interactive elements in the center position of the primary navigation level.\n * @slot content-end - A slot for adding a `calcite-menu`, `calcite-action`, or other interactive elements in the end position of any navigation level.\n * @slot navigation-secondary - A slot for adding a `calcite-navigation` component in the secondary navigation level. Components rendered here will not display `calcite-navigation-logo` or `calcite-navigation-user` components.\n * @slot navigation-tertiary - A slot for adding a `calcite-navigation` component in the tertiary navigation level.  Components rendered here will not display `calcite-navigation-logo` or `calcite-navigation-user` components.\n */\n@Component({\n  tag: \"calcite-navigation\",\n  styleUrl: \"navigation.scss\",\n  shadow: true,\n})\nexport class CalciteNavigation implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `navigationAction` is `true`, specifies the label of the `calcite-action`.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, displays a `calcite-action` and emits a `calciteNavActionSelect` event on selection change.\n   */\n  @Prop({ reflect: true }) navigationAction = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties/ State\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteNavigationElement;\n\n  @State() logoSlotHasElements: boolean;\n\n  @State() navigationActionSlotHasElements: boolean;\n\n  @State() primaryContentCenterSlotHasElements: boolean;\n\n  @State() primaryContentEndSlotHasElements: boolean;\n\n  @State() primaryContentStartSlotHasElements: boolean;\n\n  @State() progressSlotHasElement: boolean;\n\n  @State() secondarySlotHasElements: boolean;\n\n  @State() tertiarySlotHasElements: boolean;\n\n  @State() userSlotHasElements: boolean;\n\n  navigationActionEl: HTMLCalciteActionElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /** When `navigationAction` is `true`, emits when the displayed action selection changes. */\n  @Event({ cancelable: false }) calciteNavigationActionSelect: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `navigationAction` is `true`, sets focus on the component's action element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    return this.navigationActionEl?.setFocus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private actionClickHandler = () => {\n    this.calciteNavigationActionSelect.emit();\n  };\n\n  private handleUserSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.userSlotHasElements = slotChangeHasAssignedElement(event);\n    }\n  };\n\n  private handleLogoSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.logoSlotHasElements = slotChangeHasAssignedElement(event);\n    }\n  };\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.primaryContentStartSlotHasElements = slotChangeHasAssignedElement(event);\n    }\n  };\n\n  private handleContentEndSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.primaryContentEndSlotHasElements = slotChangeHasAssignedElement(event);\n    }\n  };\n\n  private handleContentCenterSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.primaryContentCenterSlotHasElements = slotChangeHasAssignedElement(event);\n    }\n  };\n\n  private handleSecondarySlotChange = (event: Event): void => {\n    this.secondarySlotHasElements = slotChangeHasAssignedElement(event);\n  };\n\n  private handleTertiarySlotChange = (event: Event): void => {\n    this.tertiarySlotHasElements = slotChangeHasAssignedElement(event);\n  };\n\n  private handleMenuActionSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.navigationActionSlotHasElements = slotChangeHasAssignedElement(event);\n      if (this.navigationActionSlotHasElements) {\n        this.navigationAction = false;\n      }\n    }\n  };\n\n  private handleProgressSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.progressSlotHasElement = slotChangeHasAssignedElement(event);\n    }\n  };\n\n  private isPrimaryLevel(): boolean {\n    return this.el.slot !== SLOTS.navSecondary && this.el.slot !== SLOTS.navTertiary;\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderMenuAction(): VNode {\n    return (\n      <slot name={SLOTS.navigationAction} onSlotchange={this.handleMenuActionSlotChange}>\n        {this.navigationAction && (\n          <calcite-action\n            icon={ICONS.hamburger}\n            onClick={this.actionClickHandler}\n            text={this.label}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(el: HTMLCalciteActionElement) => (this.navigationActionEl = el)}\n          />\n        )}\n      </slot>\n    );\n  }\n\n  render(): VNode {\n    const primaryLevelHasElements =\n      this.logoSlotHasElements ||\n      this.userSlotHasElements ||\n      this.navigationActionSlotHasElements ||\n      this.primaryContentCenterSlotHasElements ||\n      this.primaryContentEndSlotHasElements ||\n      this.primaryContentStartSlotHasElements ||\n      this.navigationAction;\n    const slotName = this.el.slot;\n    return (\n      <Host>\n        <div\n          class={{\n            [CSS.container]: true,\n            [CSS.secondary]: slotName === SLOTS.navSecondary,\n            [CSS.tertiary]: slotName === SLOTS.navTertiary,\n            [CSS.primary]: primaryLevelHasElements,\n          }}\n        >\n          <div class={{ [CSS.hide]: !this.progressSlotHasElement, [SLOTS.progress]: true }}>\n            <slot name={SLOTS.progress} onSlotchange={this.handleProgressSlotChange} />\n          </div>\n          <div\n            class={{ [CSS.containerContent]: true, [CSS.hasProgress]: this.progressSlotHasElement }}\n          >\n            {this.renderMenuAction()}\n            <div class={{ [CSS.hide]: !this.logoSlotHasElements, [SLOTS.logo]: true }}>\n              <slot name={SLOTS.logo} onSlotchange={this.handleLogoSlotChange} />\n            </div>\n            <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n            <slot name={SLOTS.contentCenter} onSlotchange={this.handleContentCenterSlotChange} />\n            <slot name={SLOTS.contentEnd} onSlotchange={this.handleContentEndSlotChange} />\n            <div class={{ [CSS.hide]: !this.userSlotHasElements, [SLOTS.user]: true }}>\n              <slot name={SLOTS.user} onSlotchange={this.handleUserSlotChange} />\n            </div>\n          </div>\n        </div>\n\n        <Fragment>\n          <slot name={SLOTS.navSecondary} onSlotchange={this.handleSecondarySlotChange} />\n          <slot name={SLOTS.navTertiary} onSlotchange={this.handleTertiarySlotChange} />\n        </Fragment>\n      </Host>\n    );\n  }\n}\n","export const CSS = {\n  container: \"container\",\n  heading: \"heading\",\n  description: \"description\",\n  anchor: \"anchor\",\n  image: \"image\",\n  standalone: \"standalone\",\n  icon: \"icon\",\n};\n",":host {\n  @apply inline-flex outline-none;\n}\n\n.anchor {\n  @apply flex\n    m-0\n    items-center\n    justify-center\n    cursor-pointer\n    transition-default\n    focus-base\n    no-underline\n    text-0h;\n  color: inherit;\n  border-block-end: 2px solid transparent;\n}\n\n.anchor:hover,\n.anchor:focus {\n  @apply bg-foreground-2;\n}\n.anchor:focus {\n  @apply focus-inset;\n}\n\n.anchor:active {\n  @apply bg-foreground-3;\n}\n\n.image,\n.icon {\n  @apply flex h-7 m-0 px-4;\n}\n\n.image ~ .icon {\n  @apply ps-0;\n}\n\n.image ~ .container,\n.icon ~ .container {\n  @apply ps-0;\n}\n\n:host(:active) .anchor {\n  @apply text-color-1;\n}\n\n:host([active]) .anchor {\n  @apply text-color-1;\n  border-color: var(--calcite-color-brand);\n  --calcite-ui-icon-color: var(--calcite-color-brand);\n}\n\n.container {\n  @apply flex\n  flex-col\n  truncate\n  text-start\n  px-4\n  mt-0.5;\n}\n\n.heading {\n  @apply text-0\n  ms-0\n  truncate\n  text-color-1\n  font-medium;\n}\n\n.standalone {\n  @apply text-1;\n}\n\n.description {\n  @apply text-color-2 truncate;\n  font-size: var(--calcite-font-size--1);\n}\n\n@include base-component();\n","import { Component, Element, h, Host, Prop, VNode, Method } from \"@stencil/core\";\nimport { CSS } from \"./resources\";\nimport {\n  LoadableComponent,\n  componentFocusable,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n@Component({\n  tag: \"calcite-navigation-logo\",\n  styleUrl: \"navigation-logo.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class CalciteNavigationLogo implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is highlighted. */\n  @Prop({ reflect: true }) active: boolean;\n\n  /** Specifies the URL destination of the component, which can be set as an absolute or relative path.*/\n  @Prop({ reflect: true }) href: string;\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Describes the appearance or function of the `thumbnail`. If no label is provided, context will not be provided to assistive technologies. */\n  @Prop() label: string;\n\n  /**\n   * Defines the relationship between the `href` value and the current document.\n   *\n   * @mdn [rel](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel)\n   */\n  @Prop({ reflect: true }) rel: string;\n\n  /** A description for the component, which displays below the `heading`.*/\n  @Prop() description: string;\n\n  /**\n   * Specifies where to open the linked document defined in the `href` property.\n   *\n   * @mdn [target](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target)\n   */\n  @Prop({ reflect: true }) target: string;\n\n  /** Specifies heading text for the component, such as a product or organization name.*/\n  @Prop() heading: string;\n\n  /** Specifies the `src` to an image. */\n  @Prop() thumbnail: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (this.href) {\n      this.el.focus();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteNavigationLogoElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private renderIcon(): VNode {\n    /** Icon scale is not variable as the component does not have a scale property */\n    return <calcite-icon class={CSS.icon} flipRtl={this.iconFlipRtl} icon={this.icon} scale=\"l\" />;\n  }\n\n  render(): VNode {\n    const { heading, description, thumbnail } = this;\n    return (\n      <Host>\n        <a class={CSS.anchor} href={this.href} rel={this.rel} target={this.target}>\n          {thumbnail && <img alt={this.label || \"\"} class={CSS.image} src={thumbnail} />}\n          {this.icon && this.renderIcon()}\n          {(heading || description) && (\n            <div class={CSS.container}>\n              {heading && (\n                <span\n                  aria-label={this.heading}\n                  class={{\n                    [CSS.heading]: true,\n                    [CSS.standalone]: !this.description,\n                  }}\n                  key={CSS.heading}\n                >\n                  {heading}\n                </span>\n              )}\n              {description && (\n                <span aria-label={this.description} class={CSS.description} key={CSS.description}>\n                  {description}\n                </span>\n              )}\n            </div>\n          )}\n        </a>\n      </Host>\n    );\n  }\n}\n","export const CSS = {\n  textContainer: \"text-container\",\n  fullName: \"full-name\",\n  username: \"username\",\n  button: \"button\",\n};\n",":host {\n  @apply inline-flex outline-none;\n  & .button {\n    background-color: transparent;\n    border: none;\n    @apply flex\n      m-0\n      items-center\n      justify-center\n      cursor-pointer\n      transition-default\n      focus-base\n      font-sans\n      text-0h;\n    border-block-end: 2px solid transparent;\n  }\n}\n\n:host(:hover) .button,\n:host(:focus) .button {\n  @apply bg-foreground-2;\n}\n\n:host(:focus) .button {\n  @apply focus-inset;\n}\n\n:host(:active) .button {\n  @apply bg-foreground-3 text-color-1;\n}\n\ncalcite-avatar {\n  @apply px-4;\n}\n\ncalcite-avatar ~ .text-container {\n  @apply ps-0;\n}\n\n:host([active]) .button {\n  @apply text-color-1 border-color-brand;\n  --calcite-ui-icon-color: var(--calcite-color-brand);\n}\n\n.text-container {\n  @apply flex\n  flex-col\n  text-start\n  px-4\n  mt-0.5;\n}\n\n.full-name {\n  @apply text-0\n  ms-0\n  text-color-1\n  font-medium;\n}\n\n.username {\n  @apply text-color-2;\n  font-size: var(--calcite-font-size--1);\n}\n\n@include base-component();\n","import { Component, Element, h, Host, Prop, VNode, Method } from \"@stencil/core\";\nimport { CSS } from \"./resources\";\nimport {\n  LoadableComponent,\n  componentFocusable,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n@Component({\n  tag: \"calcite-navigation-user\",\n  styleUrl: \"navigation-user.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class CalciteNavigationUser implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is highlighted.*/\n  @Prop({ reflect: true }) active: boolean;\n\n  /** Specifies the full name of the user.*/\n  @Prop() fullName: string;\n\n  /** Describes the appearance of the avatar. If no label is provided, context will not be provided to assistive technologies.*/\n  @Prop() label: string;\n\n  /** When `true`, hides the `fullName` and `username` contents.*/\n  @Prop({ reflect: true }) textDisabled = false;\n\n  /** Specifies the `src` to an image (remember to add a token if the user is private).*/\n  @Prop() thumbnail: string;\n\n  /** Specifies the unique id of the user.*/\n  @Prop() userId: string;\n\n  /** Specifies the username of the user.*/\n  @Prop() username: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteNavigationUserElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      <Host>\n        <button aria-label={this.label} class={CSS.button}>\n          <calcite-avatar\n            full-name={this.fullName}\n            label={this.label}\n            thumbnail={this.thumbnail}\n            user-id={this.userId}\n            username={this.username}\n          />\n          {(this.fullName || this.username) && !this.textDisabled && (\n            <div class={CSS.textContainer}>\n              {this.fullName && (\n                <span class={CSS.fullName} key={CSS.fullName}>\n                  {this.fullName}\n                </span>\n              )}\n              {this.username && (\n                <span class={CSS.username} key={CSS.username}>\n                  {this.username}\n                </span>\n              )}\n            </div>\n          )}\n        </button>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}