{"version":3,"names":["StatusIconDefaults","inputMessageCss","InputMessage","handleIconEl","this","requestedIcon","setRequestedIcon","icon","status","connectedCallback","render","hidden","el","h","Host","renderIcon","iconName","class","flipRtl","iconFlipRtl","scale"],"sources":["src/components/input-message/interfaces.ts","src/components/input-message/input-message.scss?tag=calcite-input-message&encapsulation=shadow","src/components/input-message/input-message.tsx"],"sourcesContent":["export enum StatusIconDefaults {\n  valid = \"check-circle\",\n  invalid = \"exclamation-mark-triangle\",\n  idle = \"information\",\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-message-spacing-value: The top margin spacing above the component.\n */\n\n:host {\n  @apply text-color-1 transition-default box-border flex h-auto w-full items-center font-medium opacity-100;\n  --calcite-input-message-spacing-value: theme(\"spacing.1\");\n  margin-block-start: var(--calcite-input-message-spacing-value);\n}\n\n.calcite-input-message-icon {\n  @apply transition-default pointer-events-none inline-flex flex-shrink-0;\n  margin-inline-end: theme(\"margin.2\");\n}\n\n:host([status=\"invalid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([status=\"warning\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-warning);\n}\n\n:host([status=\"valid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-success);\n}\n\n:host([status=\"idle\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-brand);\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n3h;\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n2h;\n}\n\n:host([scale=\"l\"]) {\n  @apply text-n1h;\n}\n\n@include base-component();\n","import { Component, Element, h, Host, Prop, VNode, Watch } from \"@stencil/core\";\nimport { setRequestedIcon } from \"../../utils/dom\";\nimport { Scale, Status } from \"../interfaces\";\nimport { StatusIconDefaults } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-input-message\",\n  styleUrl: \"input-message.scss\",\n  shadow: true,\n})\nexport class InputMessage {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: boolean | string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"status\")\n  @Watch(\"icon\")\n  handleIconEl(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  render(): VNode {\n    const hidden = this.el.hidden;\n    return (\n      <Host calcite-hydrated-hidden={hidden}>\n        {this.renderIcon(this.requestedIcon)}\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputMessageElement;\n\n  /** the computed icon to render */\n  private requestedIcon?: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private renderIcon(iconName: string): VNode {\n    if (iconName) {\n      return (\n        <calcite-icon\n          class=\"calcite-input-message-icon\"\n          flipRtl={this.iconFlipRtl}\n          icon={iconName}\n          scale=\"s\"\n        />\n      );\n    }\n  }\n}\n"],"mappings":";;;;;6IAAA,IAAYA,GAAZ,SAAYA,GACVA,EAAA,wBACAA,EAAA,uCACAA,EAAA,qBACD,EAJD,CAAYA,MAAkB,KCA9B,MAAMC,EAAkB,ksC,MCaXC,EAAY,M,8DAWgB,M,WAGC,I,YAGE,M,CAI1C,YAAAC,GACEC,KAAKC,cAAgBC,EAAiBN,EAAoBI,KAAKG,KAAMH,KAAKI,O,CAS5E,iBAAAC,GACEL,KAAKC,cAAgBC,EAAiBN,EAAoBI,KAAKG,KAAMH,KAAKI,O,CAG5E,MAAAE,GACE,MAAMC,EAASP,KAAKQ,GAAGD,OACvB,OACEE,EAACC,EAAI,2BAA0BH,GAC5BP,KAAKW,WAAWX,KAAKC,eACtBQ,EAAA,a,CAsBE,UAAAE,CAAWC,GACjB,GAAIA,EAAU,CACZ,OACEH,EAAA,gBACEI,MAAM,6BACNC,QAASd,KAAKe,YACdZ,KAAMS,EACNI,MAAM,K"}