{"version":3,"names":["slope","p0","p1","p2","dx","dx1","dy","dy1","m","m1","p","Math","sign","min","abs","slopeSingle","bezier","m0","t","x0","y0","x1","y1","h1","join","h2","translate","width","height","max","rangeX","rangeY","point","x","y","range","data","startX","startY","reduce","area","length","minX","minY","maxX","commands","acc","i","undefined","command","last","end","graphCss","Graph","this","graphId","guid","resizeObserver","createObserver","forceUpdate","connectedCallback","observe","el","disconnectedCallback","disconnect","render","colorStops","highlightMax","highlightMin","id","clientHeight","clientWidth","h","class","preserveAspectRatio","viewBox","rangeMin","rangeMax","currentMin","currentMax","hMinX","hMaxX","areaPath","fill","x2","y2","map","offset","color","opacity","d","mask","CSS","container","containerRange","graph","handle","handleExtension","handleLabel","handleLabelMinValue","handleLabelValue","hyphen","hyphenWrap","static","thumb","thumbActive","thumbContainer","thumbMinValue","thumbPrecise","thumbValue","tick","tickActive","tickLabel","tickMax","tickMin","ticks","track","trackRange","transformed","maxTickElementThreshold","sliderCss","isRange","value","Array","isArray","Slider","activeProp","onThumbBlur","onThumbFocus","event","currentTarget","getAttribute","onThumbPointerDown","pointerDownDragStart","onTrackPointerDown","dragUpdate","disabled","preventDefault","dragProp","clientX","pageX","minValueDragRange","maxValueDragRange","minMaxValueRange","newMinValue","newMaxValue","setValue","minValue","clamp","maxValue","pointerUpDragEnd","isPrimaryPointerButton","dragEnd","removeDragListeners","focusActiveHandle","lastDragPropValue","emitChange","storeTrackRef","node","trackEl","storeThumbRef","valueProp","minHandle","maxHandle","formatValue","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","localize","toString","histogramWatcher","newHistogram","hasHistogram","ticksWatcher","tickValues","generateTickValues","valueHandler","setMinMaxFromValue","minMaxValueHandler","setValueFromMinMax","connectInteractive","connectLocalized","connectLabel","connectForm","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","componentWillLoad","setUpLoadableComponent","snap","getClosestStep","histogram","afterConnectDefaultValueSet","componentDidLoad","setComponentLoaded","componentDidRender","labelHandles","adjustHostObscuredHandleLabel","precise","hyphenateCollidingRangeHandleLabels","hideObscuredBoundingTickLabels","updateHostInteraction","useMinValue","shouldUseMinValue","minInterval","getUnitInterval","maxInterval","mirror","shouldMirror","valueIsRange","thumbTypes","buildThumbType","renderThumb","type","thumbPlacement","includes","minThumbTypes","minThumb","Host","onTouchStart","handleTouchStart","InteractiveContainer","getLabelText","scale","renderGraph","ref","onPointerDown","style","left","right","tickOffset","activeTicks","renderTickLabel","HiddenFormInputSlot","component","isLabeled","isPrecise","isMinThumb","ariaLabel","minLabel","maxLabel","ariaValuenow","displayedValue","thumbStyle","thumbLabelClasses","labels","thumbContent","reverse","lastDragProp","key","onBlur","onFocus","role","tabIndex","histogramStops","labelTicks","isMinTickLabel","isMaxTickLabel","isAtEdge","shouldDisplayLabel","keyDownHandler","pageStep","step","isActivationKey","adjustment","directionFactor","isNaN","fixedDecimalAdjustment","Number","toFixed","decimalPlaces","pointerDownHandler","position","prop","inRange","closerToMax","dragStart","isThumbActive","shadowRoot","querySelector","setFocus","componentFocusable","focus","thumbTypeParts","push","onLabelClick","mirrored","getTickDensity","density","tickInterval","current","window","addEventListener","valueX","getClosestHandle","emitInput","calciteSliderInput","emit","calciteSliderChange","removeEventListener","values","valueChanged","Object","keys","forEach","propName","newValue","oldValue","dragging","getBoundingClientRect","percent","clampedValue","num","round","getDistanceX","getFontSizeForElement","element","getComputedStyle","getPropertyValue","match","name","label","labelStatic","labelTransformed","labelStaticBounds","labelStaticOffset","getHostOffset","transform","leftModifier","rightModifier","leftValueLabel","leftValueLabelStatic","leftValueLabelTransformed","leftValueLabelStaticHostOffset","rightValueLabel","rightValueLabelStatic","rightValueLabelTransformed","rightValueLabelStaticHostOffset","labelFontSize","labelTransformedOverlap","getRangeLabelOverlap","hyphenLabel","labelOffset","classList","add","leftValueLabelTranslate","leftValueLabelTransformedHostOffset","rightValueLabelTranslate","rightValueLabelTransformedHostOffset","remove","minTickLabel","maxTickLabel","isMinTickLabelObscured","isMaxTickLabelObscured","leftBounds","rightBounds","hostBounds","buffer","leftLabel","rightLabel","leftLabelBounds","rightLabelBounds","leftLabelFontSize","rangeLabelOverlap","minLabelBounds","handleBounds","intersects","maxLabelBounds"],"sources":["src/components/graph/util.ts","src/components/graph/graph.scss?tag=calcite-graph&encapsulation=shadow","src/components/graph/graph.tsx","src/components/slider/resources.ts","src/components/slider/slider.scss?tag=calcite-slider&encapsulation=shadow","src/components/slider/slider.tsx"],"sourcesContent":["import { DataSeries, Extent, Graph, Point, TranslateOptions, Translator } from \"../graph/interfaces\";\n\n/**\n * Calculate slope of the tangents\n * uses Steffen interpolation as it's monotonic\n * http://jrwalsh1.github.io/posts/interpolations/\n *\n * @param p0\n * @param p1\n * @param p2\n */\nfunction slope(p0: Point, p1: Point, p2: Point): number {\n  const dx = p1[0] - p0[0];\n  const dx1 = p2[0] - p1[0];\n  const dy = p1[1] - p0[1];\n  const dy1 = p2[1] - p1[1];\n  const m = dy / (dx || (dx1 < 0 && 0));\n  const m1 = dy1 / (dx1 || (dx < 0 && 0));\n  const p = (m * dx1 + m1 * dx) / (dx + dx1);\n  return (Math.sign(m) + Math.sign(m1)) * Math.min(Math.abs(m), Math.abs(m1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * Calculate slope for just one tangent (single-sided)\n *\n * @param p0\n * @param p1\n * @param m\n */\nfunction slopeSingle(p0: Point, p1: Point, m: number): number {\n  const dx = p1[0] - p0[0];\n  const dy = p1[1] - p0[1];\n  return dx ? ((3 * dy) / dx - m) / 2 : m;\n}\n\n/**\n * Given two points and their tangent slopes,\n * calculate the bezier handle coordinates and return draw command.\n *\n * Translates Hermite Spline to BÃ©zier curve:\n * https://stackoverflow.com/questions/42574940/\n *\n * @param p0\n * @param p1\n * @param m0\n * @param m1\n * @param t\n */\nfunction bezier(p0: Point, p1: Point, m0: number, m1: number, t: Translator): string {\n  const [x0, y0] = p0;\n  const [x1, y1] = p1;\n  const dx = (x1 - x0) / 3;\n  const h1 = t([x0 + dx, y0 + dx * m0]).join(\",\");\n  const h2 = t([x1 - dx, y1 - dx * m1]).join(\",\");\n  const p = t([x1, y1]).join(\",\");\n  return `C ${h1} ${h2} ${p}`;\n}\n\n/**\n * Generate a function which will translate a point\n * from the data coordinate space to svg viewbox oriented pixels\n *\n * @param root0\n * @param root0.width\n * @param root0.height\n * @param root0.min\n * @param root0.max\n */\nexport function translate({ width, height, min, max }: TranslateOptions): Translator {\n  const rangeX = max[0] - min[0];\n  const rangeY = max[1] - min[1];\n  return (point) => {\n    const x = ((point[0] - min[0]) / rangeX) * width;\n    const y = height - (point[1] / rangeY) * height;\n    return [x, y];\n  };\n}\n\n/**\n * Get the min and max values from the dataset\n *\n * @param data\n */\nexport function range(data: DataSeries): Extent {\n  const [startX, startY] = data[0];\n  const min: Point = [startX, startY];\n  const max: Point = [startX, startY];\n  return data.reduce(\n    ({ min, max }, [x, y]) => ({\n      min: [Math.min(min[0], x), Math.min(min[1], y)],\n      max: [Math.max(max[0], x), Math.max(max[1], y)],\n    }),\n    { min, max },\n  );\n}\n\n/**\n * Generate drawing commands for an area graph\n * returns a string can can be passed directly to a path element's `d` attribute\n *\n * @param root0\n * @param root0.data\n * @param root0.min\n * @param root0.max\n * @param root0.t\n */\nexport function area({ data, min, max, t }: Graph): string {\n  if (data.length === 0) {\n    return \"\";\n  }\n\n  // important points for beginning and ending the path\n  const [startX, startY] = t(data[0]);\n  const [minX, minY] = t(min);\n  const [maxX] = t(max);\n\n  // keep track of previous slope/points\n  let m: number;\n  let p0: Point;\n  let p1: Point;\n\n  // iterate over data points, calculating command for each\n  const commands = data.reduce((acc, point, i) => {\n    p0 = data[i - 2];\n    p1 = data[i - 1];\n    if (i > 1) {\n      const m1 = slope(p0, p1, point);\n      const m0 = m === undefined ? slopeSingle(p0, p1, m1) : m;\n      const command = bezier(p0, p1, m0, m1, t);\n      m = m1;\n      return `${acc} ${command}`;\n    }\n    return acc;\n  }, `M ${minX},${minY} L ${minX},${startY} L ${startX},${startY}`);\n\n  // close the path\n  const last = data[data.length - 1];\n  const end = bezier(p1, last, m, slopeSingle(p1, last, m), t);\n  return `${commands} ${end} L ${maxX},${minY} Z`;\n}\n",":host {\n  @apply block;\n  block-size: 100%;\n}\n\n.svg {\n  fill: currentColor;\n  stroke: transparent;\n  @apply m-0 block h-full w-full p-0;\n\n  .graph-path--highlight {\n    fill: var(--calcite-color-brand);\n    @apply opacity-50;\n  }\n}\n\n@include base-component();\n","import { Component, Element, forceUpdate, h, Prop, VNode } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { createObserver } from \"../../utils/observers\";\nimport { ColorStop, DataSeries, Point } from \"./interfaces\";\nimport { area, range, translate } from \"./util\";\n\n@Component({\n  tag: \"calcite-graph\",\n  styleUrl: \"graph.scss\",\n  shadow: true,\n})\nexport class Graph {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Array of tuples describing a single data point ([x, y])\n   * These data points should be sorted by x-axis value.\n   */\n  @Prop() data: DataSeries = [];\n\n  /**\n   * Array of values describing a single color stop ([offset, color, opacity])\n   * These color stops should be sorted by offset value.\n   */\n  @Prop() colorStops: ColorStop[];\n\n  /** Start of highlight color if highlighting range. */\n  @Prop() highlightMin: number;\n\n  /** End of highlight color if highlighting range. */\n  @Prop() highlightMax: number;\n\n  /** Lowest point of the range. */\n  @Prop({ reflect: true }) min!: number;\n\n  /** Highest point of the range. */\n  @Prop({ reflect: true }) max!: number;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.resizeObserver?.observe(this.el);\n  }\n\n  disconnectedCallback(): void {\n    this.resizeObserver?.disconnect();\n  }\n\n  render(): VNode {\n    const { data, colorStops, el, highlightMax, highlightMin, min, max } = this;\n    const id = this.graphId;\n    const { clientHeight: height, clientWidth: width } = el;\n\n    // if we have no data, return empty svg\n    if (!data || data.length === 0) {\n      return (\n        <svg\n          aria-hidden=\"true\"\n          class=\"svg\"\n          height={height}\n          preserveAspectRatio=\"none\"\n          viewBox={`0 0 ${width} ${height}`}\n          width={width}\n        />\n      );\n    }\n\n    const { min: rangeMin, max: rangeMax } = range(data);\n\n    let currentMin: Point = rangeMin;\n    let currentMax: Point = rangeMax;\n\n    if (min < rangeMin[0] || min > rangeMin[0]) {\n      currentMin = [min, 0];\n    }\n\n    if (max > rangeMax[0] || max < rangeMax[0]) {\n      currentMax = [max, rangeMax[1]];\n    }\n\n    const t = translate({ min: currentMin, max: currentMax, width, height });\n    const [hMinX] = t([highlightMin, currentMax[1]]);\n    const [hMaxX] = t([highlightMax, currentMax[1]]);\n    const areaPath = area({ data, min: rangeMin, max: rangeMax, t });\n    const fill = colorStops ? `url(#linear-gradient-${id})` : undefined;\n    return (\n      <svg\n        aria-hidden=\"true\"\n        class=\"svg\"\n        height={height}\n        preserveAspectRatio=\"none\"\n        viewBox={`0 0 ${width} ${height}`}\n        width={width}\n      >\n        {colorStops ? (\n          <defs>\n            <linearGradient id={`linear-gradient-${id}`} x1=\"0\" x2=\"1\" y1=\"0\" y2=\"0\">\n              {colorStops.map(({ offset, color, opacity }) => (\n                <stop offset={`${offset * 100}%`} stop-color={color} stop-opacity={opacity} />\n              ))}\n            </linearGradient>\n          </defs>\n        ) : null}\n\n        {highlightMin !== undefined ? (\n          [\n            <mask height=\"100%\" id={`${id}1`} width=\"100%\" x=\"0%\" y=\"0%\">\n              <path\n                d={`\n            M 0,0\n            L ${hMinX - 1},0\n            L ${hMinX - 1},${height}\n            L 0,${height}\n            Z\n          `}\n                fill=\"white\"\n              />\n            </mask>,\n\n            <mask height=\"100%\" id={`${id}2`} width=\"100%\" x=\"0%\" y=\"0%\">\n              <path\n                d={`\n            M ${hMinX + 1},0\n            L ${hMaxX - 1},0\n            L ${hMaxX - 1},${height}\n            L ${hMinX + 1}, ${height}\n            Z\n          `}\n                fill=\"white\"\n              />\n            </mask>,\n\n            <mask height=\"100%\" id={`${id}3`} width=\"100%\" x=\"0%\" y=\"0%\">\n              <path\n                d={`\n                M ${hMaxX + 1},0\n                L ${width},0\n                L ${width},${height}\n                L ${hMaxX + 1}, ${height}\n                Z\n              `}\n                fill=\"white\"\n              />\n            </mask>,\n\n            <path class=\"graph-path\" d={areaPath} fill={fill} mask={`url(#${id}1)`} />,\n            <path class=\"graph-path--highlight\" d={areaPath} fill={fill} mask={`url(#${id}2)`} />,\n            <path class=\"graph-path\" d={areaPath} fill={fill} mask={`url(#${id}3)`} />,\n          ]\n        ) : (\n          <path class=\"graph-path\" d={areaPath} fill={fill} />\n        )}\n      </svg>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteGraphElement;\n\n  private graphId = `calcite-graph-${guid()}`;\n\n  private resizeObserver = createObserver(\"resize\", () => forceUpdate(this));\n}\n","export const CSS = {\n  container: \"container\",\n  containerRange: \"container--range\",\n  graph: \"graph\",\n  handle: \"handle\",\n  handleExtension: \"handle-extension\",\n  handleLabel: \"handle__label\",\n  handleLabelMinValue: \"handle__label--minValue\",\n  handleLabelValue: \"handle__label--value\",\n  hyphen: \"hyphen\",\n  hyphenWrap: \"hyphen--wrap\",\n  static: \"static\",\n  thumb: \"thumb\",\n  thumbActive: \"thumb--active\",\n  thumbContainer: \"thumb-container\",\n  thumbMinValue: \"thumb--minValue\",\n  thumbPrecise: \"thumb--precise\",\n  thumbValue: \"thumb--value\",\n  tick: \"tick\",\n  tickActive: \"tick--active\",\n  tickLabel: \"tick__label\",\n  tickMax: \"tick__label--max\",\n  tickMin: \"tick__label--min\",\n  ticks: \"ticks\",\n  track: \"track\",\n  trackRange: \"track__range\",\n  transformed: \"transformed\",\n};\n\nexport const maxTickElementThreshold = 250;\n",".scale--s {\n  --calcite-slider-handle-size: theme(\"spacing[2.5]\");\n  --calcite-slider-handle-extension-height: 0.4rem;\n  --calcite-slider-container-font-size: var(--calcite-font-size--3);\n  .handle__label,\n  .tick__label {\n    @apply leading-3;\n  }\n}\n\n.scale--m {\n  --calcite-slider-handle-size: theme(\"spacing[3.5]\");\n  --calcite-slider-handle-extension-height: 0.5rem;\n  --calcite-slider-container-font-size: var(--calcite-font-size--2);\n  .handle__label,\n  .tick__label {\n    @apply leading-4;\n  }\n}\n\n.scale--l {\n  --calcite-slider-handle-size: 1rem;\n  --calcite-slider-handle-extension-height: 0.65rem;\n  --calcite-slider-container-font-size: var(--calcite-font-size--1);\n  .handle__label,\n  .tick__label {\n    @apply leading-4;\n  }\n}\n\n.handle__label,\n.tick__label {\n  @apply text-color-2 font-medium;\n  font-size: var(--calcite-slider-container-font-size);\n}\n\n:host {\n  @apply block;\n}\n\n.container {\n  @apply relative block break-normal;\n  padding-inline: calc(var(--calcite-slider-handle-size) * 0.5);\n  padding-block: calc(var(--calcite-slider-handle-size) * 0.5);\n  margin-block: calc(var(--calcite-slider-handle-size) * 0.5);\n  margin-inline: 0;\n  --calcite-slider-full-handle-height: calc(\n    var(--calcite-slider-handle-size) + var(--calcite-slider-handle-extension-height)\n  );\n  touch-action: none;\n  // disable browser swipe navigation to prevent interference with the slide thumb following a touch gesture\n}\n\n@include disabled() {\n  .track__range,\n  .tick--active {\n    background-color: var(--calcite-color-text-3);\n  }\n}\n\n.scale--s {\n  .thumb:not(.thumb--precise) {\n    --calcite-slider-thumb-y-offset: -0.375rem;\n  }\n}\n.scale--m {\n  .thumb:not(.thumb--precise) {\n    --calcite-slider-thumb-y-offset: -0.5rem;\n  }\n}\n.scale--l {\n  .thumb:not(.thumb--precise) {\n    --calcite-slider-thumb-y-offset: -0.55rem;\n  }\n}\n\n:host([precise]:not([has-histogram])) {\n  .container .thumb--value {\n    --calcite-slider-thumb-y-offset: calc(var(--calcite-slider-full-handle-height) * -1);\n  }\n}\n\n.thumb-container {\n  @apply relative max-w-full;\n}\n\n.thumb {\n  --calcite-slider-thumb-x-offset: calc(var(--calcite-slider-handle-size) * 0.5);\n  @apply font-inherit\n    absolute\n    m-0\n    flex\n    cursor-pointer\n    flex-col\n    items-center\n    border-none\n    bg-transparent\n    p-0\n    outline-none;\n  transform: translate(var(--calcite-slider-thumb-x-offset), var(--calcite-slider-thumb-y-offset));\n\n  .handle__label {\n    &.static,\n    &.transformed {\n      @apply absolute\n        top-0\n        bottom-0\n        opacity-0;\n    }\n    &.hyphen::after {\n      content: \"\\2014\";\n      display: inline-block;\n      inline-size: 1em;\n    }\n    &.hyphen--wrap {\n      display: flex;\n    }\n  }\n\n  .handle {\n    @apply focus-base\n      bg-foreground-1\n      box-border\n      rounded-full;\n    block-size: var(--calcite-slider-handle-size);\n    inline-size: var(--calcite-slider-handle-size);\n    box-shadow: 0 0 0 2px var(--calcite-color-text-3) inset;\n    transition:\n      border var(--calcite-internal-animation-timing-medium) ease,\n      background-color var(--calcite-internal-animation-timing-medium) ease,\n      box-shadow var(--calcite-animation-timing) ease;\n  }\n\n  .handle-extension {\n    @apply w-0.5;\n    block-size: var(--calcite-slider-handle-extension-height);\n    background-color: var(--calcite-color-text-3);\n  }\n\n  &:hover {\n    .handle {\n      box-shadow: 0 0 0 3px var(--calcite-color-brand) inset;\n    }\n    .handle-extension {\n      @apply bg-brand;\n    }\n  }\n\n  &:focus {\n    .handle {\n      @apply focus-outset;\n    }\n    .handle-extension {\n      @apply bg-brand;\n    }\n  }\n\n  &.thumb--minValue {\n    transform: translate(calc(var(--calcite-slider-thumb-x-offset) * -1), var(--calcite-slider-thumb-y-offset));\n  }\n\n  &.thumb--precise {\n    --calcite-slider-thumb-y-offset: -0.125rem;\n  }\n}\n\n:host([label-handles]) {\n  .thumb {\n    --calcite-slider-thumb-x-offset: 50%;\n  }\n  &:host(:not([has-histogram])) {\n    .scale--s {\n      .thumb:not(.thumb--precise) {\n        --calcite-slider-thumb-y-offset: -1.4375rem;\n      }\n    }\n    .scale--m {\n      .thumb:not(.thumb--precise) {\n        --calcite-slider-thumb-y-offset: -1.875rem;\n      }\n    }\n    .scale--l {\n      .thumb:not(.thumb--precise) {\n        --calcite-slider-thumb-y-offset: -2rem;\n      }\n    }\n  }\n}\n\n:host([has-histogram][label-handles]),\n:host([label-handles]:not([has-histogram])) .thumb--minValue.thumb--precise {\n  .handle__label {\n    margin-block-start: 0.5em;\n  }\n}\n:host(:not([has-histogram]):not([precise])),\n:host([label-handles]:not([has-histogram])) .thumb--value {\n  .handle__label {\n    margin-block-end: 0.5em;\n  }\n}\n\n:host([label-handles][precise]) {\n  &:host(:not([has-histogram])) .scale--s .thumb--value {\n    --calcite-slider-thumb-y-offset: -2.075rem;\n  }\n  &:host(:not([has-histogram])) .scale--m .thumb--value {\n    --calcite-slider-thumb-y-offset: -2.75rem;\n  }\n  &:host(:not([has-histogram])) .scale--l .thumb--value {\n    --calcite-slider-thumb-y-offset: -3.0625rem;\n  }\n}\n\n.thumb:focus,\n.thumb--active {\n  .handle {\n    @apply bg-brand;\n    box-shadow: 0 0 8px 0 rgb(0 0 0 / 16%); // shadow 1 press\n  }\n}\n\n.thumb:hover.thumb--precise:after,\n.thumb:focus.thumb--precise:after,\n.thumb--active.thumb--precise:after {\n  @apply bg-brand;\n}\n\n.track {\n  @apply relative h-0.5 rounded-none;\n  background-color: var(--calcite-color-border-2);\n  transition: all var(--calcite-internal-animation-timing-medium) ease-in;\n}\n\n.track__range {\n  @apply bg-brand\n  absolute\n  top-0\n  h-0.5;\n}\n.container--range {\n  .track__range {\n    &:hover {\n      cursor: ew-resize;\n    }\n    &:after {\n      @apply absolute w-full;\n      content: \"\";\n      inset-block-start: calc(calc(var(--calcite-slider-full-handle-height) * 0.5) * -1);\n      block-size: calc(var(--calcite-slider-handle-size) + var(--calcite-slider-handle-extension-height));\n    }\n  }\n}\n\n@media (forced-colors: active) {\n  .thumb {\n    outline-width: 0;\n    outline-offset: 0;\n  }\n  .handle {\n    @apply outline-none;\n  }\n  .thumb:focus .handle,\n  .thumb .handle-extension,\n  .thumb:hover .handle-extension,\n  .thumb:focus .handle-extension,\n  .thumb:active .handle-extension {\n    background-color: canvasText;\n  }\n  .track {\n    background-color: canvasText;\n  }\n  .track__range {\n    background-color: highlight;\n  }\n}\n\n.tick {\n  @apply absolute\n    h-1\n    w-0.5\n    border\n    border-solid;\n  background-color: var(--calcite-color-border-input);\n  border-color: var(--calcite-color-foreground-1);\n  inset-block-start: -2px;\n  pointer-events: none;\n  margin-inline-start: calc(-1 * theme(\"margin[0.5]\"));\n}\n\n.tick--active {\n  @apply bg-brand;\n}\n\n.tick__label {\n  @apply pointer-events-none\n    mt-3.5\n    flex\n    justify-center;\n}\n\n.tick__label--min {\n  transition: opacity var(--calcite-animation-timing);\n}\n\n.tick__label--max {\n  transition: opacity var(--calcite-internal-animation-timing-fast);\n}\n\n:host([has-histogram][label-handles]),\n:host([has-histogram][precise]) {\n  .tick__label--min,\n  .tick__label--max {\n    @apply text-color-3 font-normal;\n  }\n}\n\n.graph {\n  color: var(--calcite-color-foreground-3);\n  block-size: 48px;\n}\n\n// Ensure we have enough space on variants with text elements to prevent overlap\n:host([label-ticks][ticks]) {\n  .container {\n    // match tick__label top margin + font-size\n    padding-block-end: calc(theme(\"margin[3.5]\") + var(--calcite-slider-container-font-size));\n  }\n}\n:host([has-histogram]) {\n  &:host([precise][label-handles]) {\n    .container {\n      padding-block-end: calc(var(--calcite-slider-full-handle-height) + 1em);\n    }\n  }\n  &:host([label-handles]:not([precise])) {\n    .container {\n      padding-block-end: calc(calc(var(--calcite-slider-handle-size) * 0.5) + 1em);\n    }\n  }\n  &:host([precise]:not([label-handles])) {\n    .container {\n      padding-block-end: var(--calcite-slider-full-handle-height);\n    }\n  }\n}\n:host(:not([has-histogram])) {\n  &:host([precise]:not([label-handles])) {\n    .container {\n      padding-block-start: var(--calcite-slider-full-handle-height);\n    }\n    .container--range {\n      padding-block-end: var(--calcite-slider-full-handle-height);\n    }\n  }\n  &:host([label-handles]:not([precise])) {\n    .container {\n      padding-block-start: calc(var(--calcite-slider-full-handle-height) + 4px);\n    }\n  }\n  &:host([label-handles][precise]) {\n    .container {\n      padding-block-start: calc(\n        var(--calcite-slider-full-handle-height) + var(--calcite-slider-container-font-size) + 4px\n      );\n    }\n    .container--range {\n      padding-block-end: calc(\n        var(--calcite-slider-full-handle-height) + var(--calcite-slider-container-font-size) + 4px\n      );\n    }\n  }\n}\n\n@include hidden-form-input();\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\n\nimport { intersects, isPrimaryPointerButton } from \"../../utils/dom\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport { clamp, decimalPlaces } from \"../../utils/math\";\nimport { ColorStop, DataSeries } from \"../graph/interfaces\";\nimport { Scale } from \"../interfaces\";\nimport { CSS, maxTickElementThreshold } from \"./resources\";\nimport { ActiveSliderProperty, SetValueProperty, SideOffset, ThumbType } from \"./interfaces\";\n\nfunction isRange(value: number | number[]): value is number[] {\n  return Array.isArray(value);\n}\n\n@Component({\n  tag: \"calcite-slider\",\n  styleUrl: \"slider.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class Slider\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    LocalizedComponent,\n    LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true })\n  form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /** When `true`, indicates a histogram is present. */\n  @Prop({ reflect: true, mutable: true }) hasHistogram = false;\n\n  /**\n   * A list of the histogram's x,y coordinates within the component's `min` and `max`. Displays above the component's track.\n   *\n   * @see [DataSeries](https://github.com/Esri/calcite-design-system/blob/main/src/components/graph/interfaces.ts#L5)\n   */\n  @Prop() histogram: DataSeries;\n\n  @Watch(\"histogram\")\n  histogramWatcher(newHistogram: DataSeries): void {\n    this.hasHistogram = !!newHistogram;\n  }\n\n  /**\n   * A set of single color stops for a histogram, sorted by offset ascending.\n   */\n  @Prop() histogramStops: ColorStop[];\n\n  /** When `true`, displays label handles with their numeric value. */\n  @Prop({ reflect: true }) labelHandles = false;\n\n  /** When `true` and `ticks` is specified, displays label tick marks with their numeric value. */\n  @Prop({ reflect: true }) labelTicks = false;\n\n  /** The component's maximum selectable value. */\n  @Prop({ reflect: true }) max = 100;\n\n  /** For multiple selections, the accessible name for the second handle, such as `\"Temperature, upper bound\"`. */\n  @Prop() maxLabel: string;\n\n  /** For multiple selections, the component's upper value. */\n  @Prop({ mutable: true }) maxValue: number;\n\n  /** The component's minimum selectable value. */\n  @Prop({ reflect: true }) min = 0;\n\n  /** Accessible name for first (or only) handle, such as `\"Temperature, lower bound\"`. */\n  @Prop() minLabel: string;\n\n  /** For multiple selections, the component's lower value. */\n  @Prop({ mutable: true }) minValue: number;\n\n  /**\n   * When `true`, the slider will display values from high to low.\n   *\n   * Note that this value will be ignored if the slider has an associated histogram.\n   */\n  @Prop({ reflect: true }) mirrored = false;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop() numberingSystem: NumberingSystem;\n\n  /** Specifies the interval to move with the page up, or page down keys. */\n  @Prop({ reflect: true }) pageStep: number;\n\n  /** When `true`, sets a finer point for handles. */\n  @Prop({ reflect: true }) precise = false;\n\n  /**\n   * When `true`, the component must have a value in order for the form to submit.\n   */\n  @Prop({ reflect: true }) required = false;\n\n  /** When `true`, enables snap selection in coordination with `step` via a mouse. */\n  @Prop({ reflect: true }) snap = false;\n\n  /** Specifies the interval to move with the up, or down keys. */\n  @Prop({ reflect: true }) step = 1;\n\n  /** Displays tick marks on the number line at a specified interval. */\n  @Prop({ reflect: true }) ticks: number;\n\n  @Watch(\"ticks\")\n  ticksWatcher(): void {\n    this.tickValues = this.generateTickValues();\n  }\n\n  /** The component's value. */\n  @Prop({ reflect: true, mutable: true }) value: null | number | number[] = 0;\n\n  @Watch(\"value\")\n  valueHandler(): void {\n    this.setMinMaxFromValue();\n  }\n\n  @Watch(\"minValue\")\n  @Watch(\"maxValue\")\n  minMaxValueHandler(): void {\n    this.setValueFromMinMax();\n  }\n\n  /**\n   *  Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    this.setMinMaxFromValue();\n    this.setValueFromMinMax();\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    this.removeDragListeners();\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n    if (!isRange(this.value)) {\n      this.value = this.snap ? this.getClosestStep(this.value) : this.clamp(this.value);\n    }\n    this.ticksWatcher();\n    this.histogramWatcher(this.histogram);\n    afterConnectDefaultValueSet(this, this.value);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    if (this.labelHandles) {\n      this.adjustHostObscuredHandleLabel(\"value\");\n      if (isRange(this.value)) {\n        this.adjustHostObscuredHandleLabel(\"minValue\");\n        if (!(this.precise && !this.hasHistogram)) {\n          this.hyphenateCollidingRangeHandleLabels();\n        }\n      }\n    }\n    this.hideObscuredBoundingTickLabels();\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    const id = this.el.id || this.guid;\n    const value = isRange(this.value) ? this.maxValue : this.value;\n    const min = this.minValue || this.min;\n    const useMinValue = this.shouldUseMinValue();\n    const minInterval = this.getUnitInterval(useMinValue ? this.minValue : min) * 100;\n    const maxInterval = this.getUnitInterval(value) * 100;\n    const mirror = this.shouldMirror();\n    const valueIsRange = isRange(this.value);\n\n    const thumbTypes = this.buildThumbType(\"max\");\n    const thumb = this.renderThumb({\n      type: thumbTypes,\n      thumbPlacement: thumbTypes.includes(\"histogram\") ? \"below\" : \"above\",\n      maxInterval,\n      minInterval,\n      mirror,\n    });\n\n    const minThumbTypes = this.buildThumbType(\"min\");\n    const minThumb =\n      valueIsRange &&\n      this.renderThumb({\n        type: minThumbTypes,\n        thumbPlacement:\n          minThumbTypes.includes(\"histogram\") || minThumbTypes.includes(\"precise\")\n            ? \"below\"\n            : \"above\",\n        maxInterval,\n        minInterval,\n        mirror,\n      });\n\n    return (\n      <Host id={id} onTouchStart={this.handleTouchStart}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-label={getLabelText(this)}\n            class={{\n              [CSS.container]: true,\n              [CSS.containerRange]: valueIsRange,\n              [`scale--${this.scale}`]: true,\n            }}\n          >\n            {this.renderGraph()}\n            <div\n              class={CSS.track}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.storeTrackRef}\n            >\n              <div\n                class={CSS.trackRange}\n                onPointerDown={this.onTrackPointerDown}\n                style={{\n                  left: `${mirror ? 100 - maxInterval : minInterval}%`,\n                  right: `${mirror ? minInterval : 100 - maxInterval}%`,\n                }}\n              />\n              <div class={CSS.ticks}>\n                {this.tickValues.map((tick) => {\n                  const tickOffset = `${this.getUnitInterval(tick) * 100}%`;\n                  let activeTicks = tick >= min && tick <= value;\n                  if (useMinValue) {\n                    activeTicks = tick >= this.minValue && tick <= this.maxValue;\n                  }\n\n                  return (\n                    <span\n                      class={{\n                        [CSS.tick]: true,\n                        [CSS.tickActive]: activeTicks,\n                      }}\n                      style={{\n                        left: mirror ? \"\" : tickOffset,\n                        right: mirror ? tickOffset : \"\",\n                      }}\n                    >\n                      {this.renderTickLabel(tick)}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n            <div class={CSS.thumbContainer}>\n              {minThumb}\n              {thumb}\n              <HiddenFormInputSlot component={this} />\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  private renderThumb({\n    type,\n    mirror,\n    thumbPlacement,\n    minInterval,\n    maxInterval,\n  }: {\n    maxInterval: number;\n    minInterval: number;\n    mirror: boolean;\n    thumbPlacement: \"above\" | \"below\";\n    type: string;\n  }) {\n    const isLabeled = type.includes(\"labeled\");\n    const isPrecise = type.includes(\"precise\");\n    const isMinThumb = type.includes(\"min\");\n\n    const valueIsRange = isRange(this.value);\n    const value = isMinThumb\n      ? this.minValue\n      : valueIsRange\n        ? this.maxValue\n        : (this.value as number);\n    const valueProp = isMinThumb ? \"minValue\" : valueIsRange ? \"maxValue\" : \"value\";\n    const ariaLabel = isMinThumb ? this.minLabel : valueIsRange ? this.maxLabel : this.minLabel;\n    const ariaValuenow = isMinThumb ? this.minValue : value;\n    const displayedValue = isMinThumb ? this.formatValue(this.minValue) : this.formatValue(value);\n    const thumbStyle: SideOffset = isMinThumb\n      ? { left: `${mirror ? 100 - minInterval : minInterval}%` }\n      : { right: `${mirror ? maxInterval : 100 - maxInterval}%` };\n    const thumbLabelClasses = `${CSS.handleLabel} ${\n      isMinThumb ? CSS.handleLabelMinValue : CSS.handleLabelValue\n    }`;\n\n    const labels = isLabeled\n      ? [\n          <span aria-hidden=\"true\" class={thumbLabelClasses}>\n            {displayedValue}\n          </span>,\n          <span aria-hidden=\"true\" class={`${thumbLabelClasses} ${CSS.static}`}>\n            {displayedValue}\n          </span>,\n          <span aria-hidden=\"true\" class={`${thumbLabelClasses} ${CSS.transformed}`}>\n            {displayedValue}\n          </span>,\n        ]\n      : [];\n\n    const thumbContent: VNode[] = [\n      ...labels,\n      <div class={CSS.handle} />,\n      isPrecise && <div class={CSS.handleExtension} />,\n    ];\n\n    if (thumbPlacement === \"below\") {\n      thumbContent.reverse();\n    }\n\n    return (\n      <div\n        aria-disabled={this.disabled}\n        aria-label={ariaLabel}\n        aria-orientation=\"horizontal\"\n        aria-valuemax={this.max}\n        aria-valuemin={this.min}\n        aria-valuenow={ariaValuenow}\n        class={{\n          [CSS.thumb]: true,\n          [CSS.thumbValue]: !isMinThumb,\n          [CSS.thumbActive]: this.lastDragProp !== \"minMaxValue\" && this.dragProp === valueProp,\n          [CSS.thumbPrecise]: isPrecise,\n          [CSS.thumbMinValue]: isMinThumb,\n        }}\n        data-value-prop={valueProp}\n        key={type}\n        onBlur={this.onThumbBlur}\n        onFocus={this.onThumbFocus}\n        onPointerDown={this.onThumbPointerDown}\n        role=\"slider\"\n        style={thumbStyle}\n        tabIndex={0}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.storeThumbRef}\n      >\n        {thumbContent}\n      </div>\n    );\n  }\n\n  private renderGraph(): VNode {\n    return this.histogram ? (\n      <calcite-graph\n        class={CSS.graph}\n        colorStops={this.histogramStops}\n        data={this.histogram}\n        highlightMax={isRange(this.value) ? this.maxValue : this.value}\n        highlightMin={isRange(this.value) ? this.minValue : this.min}\n        max={this.max}\n        min={this.min}\n      />\n    ) : null;\n  }\n\n  private renderTickLabel(tick: number): VNode {\n    const { hasHistogram, labelHandles, labelTicks, max, min, precise, value } = this;\n    const valueIsRange = isRange(value);\n    const isMinTickLabel = tick === min;\n    const isMaxTickLabel = tick === max;\n    const isAtEdge = isMinTickLabel || isMaxTickLabel;\n\n    const shouldDisplayLabel =\n      labelTicks &&\n      ((!hasHistogram && (isAtEdge || !precise || !valueIsRange)) ||\n        (hasHistogram && (isAtEdge || (!precise && !labelHandles))));\n\n    return shouldDisplayLabel ? (\n      <span\n        class={{\n          [CSS.tickLabel]: true,\n          [CSS.tickMin]: isMinTickLabel,\n          [CSS.tickMax]: isMaxTickLabel,\n        }}\n      >\n        {this.formatValue(tick)}\n      </span>\n    ) : null;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    const mirror = this.shouldMirror();\n    const { activeProp, max, min, pageStep, step } = this;\n    const value = this[activeProp];\n    const { key } = event;\n\n    if (isActivationKey(key)) {\n      event.preventDefault();\n      return;\n    }\n\n    let adjustment: number;\n\n    if (key === \"ArrowUp\" || key === \"ArrowRight\") {\n      const directionFactor = mirror && key === \"ArrowRight\" ? -1 : 1;\n      adjustment = value + step * directionFactor;\n    } else if (key === \"ArrowDown\" || key === \"ArrowLeft\") {\n      const directionFactor = mirror && key === \"ArrowLeft\" ? -1 : 1;\n      adjustment = value - step * directionFactor;\n    } else if (key === \"PageUp\") {\n      if (pageStep) {\n        adjustment = value + pageStep;\n      }\n    } else if (key === \"PageDown\") {\n      if (pageStep) {\n        adjustment = value - pageStep;\n      }\n    } else if (key === \"Home\") {\n      adjustment = min;\n    } else if (key === \"End\") {\n      adjustment = max;\n    }\n    if (isNaN(adjustment)) {\n      return;\n    }\n    event.preventDefault();\n    const fixedDecimalAdjustment = Number(adjustment.toFixed(decimalPlaces(step)));\n    this.setValue({\n      [activeProp as SetValueProperty]: this.clamp(fixedDecimalAdjustment, activeProp),\n    });\n  }\n\n  @Listen(\"pointerdown\")\n  pointerDownHandler(event: PointerEvent): void {\n    if (this.disabled || !isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const x = event.clientX || event.pageX;\n    const position = this.translate(x);\n    let prop: ActiveSliderProperty = \"value\";\n    if (isRange(this.value)) {\n      const inRange = position >= this.minValue && position <= this.maxValue;\n      if (inRange && this.lastDragProp === \"minMaxValue\") {\n        prop = \"minMaxValue\";\n      } else {\n        const closerToMax = Math.abs(this.maxValue - position) < Math.abs(this.minValue - position);\n        prop = closerToMax || position > this.maxValue ? \"maxValue\" : \"minValue\";\n      }\n    }\n    this.lastDragPropValue = this[prop];\n    this.dragStart(prop);\n    const isThumbActive = this.el.shadowRoot.querySelector(`.${CSS.thumb}:active`);\n    if (!isThumbActive) {\n      this.setValue({ [prop as SetValueProperty]: this.clamp(position, prop) });\n    }\n    this.focusActiveHandle(x);\n  }\n\n  handleTouchStart(event: TouchEvent): void {\n    // needed to prevent extra click at the end of a handle drag\n    event.preventDefault();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Fires on all updates to the component.\n   *\n   * Note: Fires frequently during drag. To perform\n   * expensive operations consider using a debounce or throttle to avoid\n   * locking up the main thread.\n   */\n  @Event({ cancelable: false }) calciteSliderInput: EventEmitter<void>;\n\n  /**\n   * Fires when the thumb is released on the component.\n   *\n   * Note: To constantly listen to the drag event,\n   * use `calciteSliderInput` instead.\n   */\n  @Event({ cancelable: false }) calciteSliderChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    const handle = this.minHandle ? this.minHandle : this.maxHandle;\n    handle?.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSliderElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Slider[\"value\"];\n\n  private activeProp: ActiveSliderProperty = \"value\";\n\n  private guid = `calcite-slider-${guid()}`;\n\n  private dragProp: ActiveSliderProperty;\n\n  private lastDragProp: ActiveSliderProperty;\n\n  private lastDragPropValue: number;\n\n  private minHandle: HTMLDivElement;\n\n  private maxHandle: HTMLDivElement;\n\n  private trackEl: HTMLDivElement;\n\n  @State() effectiveLocale = \"\";\n\n  @State() private minMaxValueRange: number = null;\n\n  @State() private minValueDragRange: number = null;\n\n  @State() private maxValueDragRange: number = null;\n\n  @State() private tickValues: number[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private buildThumbType(type: \"min\" | \"max\"): ThumbType {\n    const thumbTypeParts: string[] = [type];\n\n    if (this.labelHandles) {\n      thumbTypeParts.push(\"labeled\");\n    }\n\n    if (this.precise) {\n      thumbTypeParts.push(\"precise\");\n    }\n\n    if (this.hasHistogram) {\n      thumbTypeParts.push(\"histogram\");\n    }\n\n    return thumbTypeParts.join(\"-\") as ThumbType;\n  }\n\n  setValueFromMinMax(): void {\n    const { minValue, maxValue } = this;\n\n    if (typeof minValue === \"number\" && typeof maxValue === \"number\") {\n      this.value = [minValue, maxValue];\n    }\n  }\n\n  setMinMaxFromValue(): void {\n    const { value } = this;\n\n    if (isRange(value)) {\n      this.minValue = value[0];\n      this.maxValue = value[1];\n    }\n  }\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private shouldMirror(): boolean {\n    return this.mirrored && !this.hasHistogram;\n  }\n\n  private shouldUseMinValue(): boolean {\n    if (!isRange(this.value)) {\n      return false;\n    }\n    return (\n      (this.hasHistogram && this.maxValue === 0) || (!this.hasHistogram && this.minValue === 0)\n    );\n  }\n\n  private getTickDensity(): number {\n    const density = (this.max - this.min) / this.ticks / maxTickElementThreshold;\n\n    return density < 1 ? 1 : density;\n  }\n\n  private generateTickValues(): number[] {\n    const tickInterval = this.ticks ?? 0;\n\n    if (tickInterval <= 0) {\n      return [];\n    }\n\n    const ticks: number[] = [this.min];\n    const density = this.getTickDensity();\n    const tickOffset = tickInterval * density;\n    let current = this.min;\n\n    while (current < this.max) {\n      current += tickOffset;\n      ticks.push(Math.min(current, this.max));\n    }\n\n    if (!ticks.includes(this.max)) {\n      ticks.push(this.max);\n    }\n\n    return ticks;\n  }\n\n  private onThumbBlur = () => {\n    this.activeProp = null;\n  };\n\n  private onThumbFocus = (event: FocusEvent) => {\n    const thumb = event.currentTarget as HTMLElement;\n    this.activeProp = thumb.getAttribute(\"data-value-prop\") as ActiveSliderProperty;\n  };\n\n  private onThumbPointerDown = (event: PointerEvent) => {\n    const thumb = event.currentTarget as HTMLElement;\n    this.pointerDownDragStart(event, thumb.getAttribute(\"data-value-prop\") as ActiveSliderProperty);\n  };\n\n  private onTrackPointerDown = (event: PointerEvent) => {\n    this.pointerDownDragStart(event, \"minMaxValue\");\n  };\n\n  private pointerDownDragStart(event: PointerEvent, prop: ActiveSliderProperty): void {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    this.dragStart(prop);\n  }\n\n  private dragStart(prop: ActiveSliderProperty): void {\n    this.dragProp = prop;\n    this.lastDragProp = this.dragProp;\n    this.activeProp = prop;\n    window.addEventListener(\"pointermove\", this.dragUpdate);\n    window.addEventListener(\"pointerup\", this.pointerUpDragEnd);\n    window.addEventListener(\"pointercancel\", this.dragEnd);\n  }\n\n  private focusActiveHandle(valueX: number): void {\n    switch (this.dragProp) {\n      case \"minValue\":\n        this.minHandle.focus();\n        break;\n      case \"maxValue\":\n      case \"value\":\n        this.maxHandle.focus();\n        break;\n      case \"minMaxValue\":\n        this.getClosestHandle(valueX).focus();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private dragUpdate = (event: PointerEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    event.preventDefault();\n    if (this.dragProp) {\n      const value = this.translate(event.clientX || event.pageX);\n      if (isRange(this.value) && this.dragProp === \"minMaxValue\") {\n        if (this.minValueDragRange && this.maxValueDragRange && this.minMaxValueRange) {\n          const newMinValue = value - this.minValueDragRange;\n          const newMaxValue = value + this.maxValueDragRange;\n          if (\n            newMaxValue <= this.max &&\n            newMinValue >= this.min &&\n            newMaxValue - newMinValue === this.minMaxValueRange\n          ) {\n            this.setValue({\n              minValue: this.clamp(newMinValue, \"minValue\"),\n              maxValue: this.clamp(newMaxValue, \"maxValue\"),\n            });\n          }\n        } else {\n          this.minValueDragRange = value - this.minValue;\n          this.maxValueDragRange = this.maxValue - value;\n          this.minMaxValueRange = this.maxValue - this.minValue;\n        }\n      } else {\n        this.setValue({ [this.dragProp as SetValueProperty]: this.clamp(value, this.dragProp) });\n      }\n    }\n  };\n\n  private emitInput(): void {\n    this.calciteSliderInput.emit();\n  }\n\n  private emitChange(): void {\n    this.calciteSliderChange.emit();\n  }\n\n  private pointerUpDragEnd = (event: PointerEvent): void => {\n    if (this.disabled || !isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    this.dragEnd(event);\n  };\n\n  private dragEnd = (event: PointerEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.removeDragListeners();\n    this.focusActiveHandle(event.clientX);\n    if (this.lastDragPropValue != this[this.dragProp]) {\n      this.emitChange();\n    }\n    this.dragProp = null;\n    this.lastDragPropValue = null;\n    this.minValueDragRange = null;\n    this.maxValueDragRange = null;\n    this.minMaxValueRange = null;\n  };\n\n  private removeDragListeners() {\n    window.removeEventListener(\"pointermove\", this.dragUpdate);\n    window.removeEventListener(\"pointerup\", this.pointerUpDragEnd);\n    window.removeEventListener(\"pointercancel\", this.dragEnd);\n  }\n\n  /**\n   * Set prop value(s) if changed at the component level\n   *\n   * @param {object} values - a set of key/value pairs delineating what properties in the component to update\n   */\n  private setValue(\n    values: Partial<{\n      [Property in keyof Pick<Slider, \"maxValue\" | \"minValue\" | \"value\">]: number;\n    }>,\n  ): void {\n    let valueChanged: boolean;\n\n    Object.keys(values).forEach((propName) => {\n      const newValue = values[propName];\n\n      if (!valueChanged) {\n        const oldValue = this[propName];\n        valueChanged = oldValue !== newValue;\n      }\n\n      this[propName] = newValue;\n    });\n\n    if (!valueChanged) {\n      return;\n    }\n\n    const dragging = this.dragProp;\n    if (!dragging) {\n      this.emitChange();\n    }\n    this.emitInput();\n  }\n\n  private storeTrackRef = (node: HTMLDivElement): void => {\n    this.trackEl = node;\n  };\n\n  private storeThumbRef = (el: HTMLDivElement): void => {\n    if (!el) {\n      return;\n    }\n\n    const valueProp = el.getAttribute(\"data-value-prop\") as ActiveSliderProperty;\n    valueProp === \"minValue\" ? (this.minHandle = el) : (this.maxHandle = el);\n  };\n\n  /**\n   * If number is outside range, constrain to min or max\n   *\n   * @param value\n   * @param prop\n   * @internal\n   */\n  private clamp(value: number, prop?: ActiveSliderProperty): number {\n    value = clamp(value, this.min, this.max);\n\n    // ensure that maxValue and minValue don't swap positions\n    if (prop === \"maxValue\") {\n      value = Math.max(value, this.minValue);\n    }\n    if (prop === \"minValue\") {\n      value = Math.min(value, this.maxValue);\n    }\n    return value;\n  }\n\n  /**\n   * Translate a pixel position to value along the range\n   *\n   * @param x\n   * @internal\n   */\n  private translate(x: number): number {\n    const range = this.max - this.min;\n    const { left, width } = this.trackEl.getBoundingClientRect();\n    const percent = (x - left) / width;\n    const mirror = this.shouldMirror();\n    const clampedValue = this.clamp(this.min + range * (mirror ? 1 - percent : percent));\n    let value = Number(clampedValue.toFixed(decimalPlaces(this.step)));\n    if (this.snap && this.step) {\n      value = this.getClosestStep(value);\n    }\n    return value;\n  }\n\n  /**\n   * Get closest allowed value along stepped values\n   *\n   * @param num\n   * @internal\n   */\n  private getClosestStep(num: number): number {\n    num = Number(this.clamp(num).toFixed(decimalPlaces(this.step)));\n    if (this.step) {\n      const step = Math.round(num / this.step) * this.step;\n      num = Number(this.clamp(step).toFixed(decimalPlaces(this.step)));\n    }\n    return num;\n  }\n\n  private getClosestHandle(valueX: number): HTMLDivElement {\n    return this.getDistanceX(this.maxHandle, valueX) > this.getDistanceX(this.minHandle, valueX)\n      ? this.minHandle\n      : this.maxHandle;\n  }\n\n  private getDistanceX(el: HTMLDivElement, valueX: number): number {\n    return Math.abs(el.getBoundingClientRect().left - valueX);\n  }\n\n  private getFontSizeForElement(element: HTMLElement): number {\n    return Number(window.getComputedStyle(element).getPropertyValue(\"font-size\").match(/\\d+/)[0]);\n  }\n\n  /**\n   * Get position of value along range as fractional value\n   *\n   * @param num\n   * @return {number} number in the unit interval [0,1]\n   * @internal\n   */\n  private getUnitInterval(num: number): number {\n    num = this.clamp(num);\n    const range = this.max - this.min;\n    return (num - this.min) / range;\n  }\n\n  private adjustHostObscuredHandleLabel(name: \"value\" | \"minValue\"): void {\n    const label: HTMLSpanElement = this.el.shadowRoot.querySelector(`.handle__label--${name}`);\n    const labelStatic: HTMLSpanElement = this.el.shadowRoot.querySelector(\n      `.handle__label--${name}.static`,\n    );\n    const labelTransformed: HTMLSpanElement = this.el.shadowRoot.querySelector(\n      `.handle__label--${name}.transformed`,\n    );\n    const labelStaticBounds = labelStatic.getBoundingClientRect();\n    const labelStaticOffset = this.getHostOffset(labelStaticBounds.left, labelStaticBounds.right);\n    label.style.transform = `translateX(${labelStaticOffset}px)`;\n    labelTransformed.style.transform = `translateX(${labelStaticOffset}px)`;\n  }\n\n  private hyphenateCollidingRangeHandleLabels(): void {\n    const { shadowRoot } = this.el;\n\n    const mirror = this.shouldMirror();\n    const leftModifier = mirror ? \"value\" : \"minValue\";\n    const rightModifier = mirror ? \"minValue\" : \"value\";\n\n    const leftValueLabel: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${leftModifier}`,\n    );\n    const leftValueLabelStatic: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${leftModifier}.static`,\n    );\n    const leftValueLabelTransformed: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${leftModifier}.transformed`,\n    );\n    const leftValueLabelStaticHostOffset = this.getHostOffset(\n      leftValueLabelStatic.getBoundingClientRect().left,\n      leftValueLabelStatic.getBoundingClientRect().right,\n    );\n\n    const rightValueLabel: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${rightModifier}`,\n    );\n    const rightValueLabelStatic: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${rightModifier}.static`,\n    );\n    const rightValueLabelTransformed: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${rightModifier}.transformed`,\n    );\n    const rightValueLabelStaticHostOffset = this.getHostOffset(\n      rightValueLabelStatic.getBoundingClientRect().left,\n      rightValueLabelStatic.getBoundingClientRect().right,\n    );\n\n    const labelFontSize = this.getFontSizeForElement(leftValueLabel);\n    const labelTransformedOverlap = this.getRangeLabelOverlap(\n      leftValueLabelTransformed,\n      rightValueLabelTransformed,\n    );\n\n    const hyphenLabel = leftValueLabel;\n    const labelOffset = labelFontSize / 2;\n\n    if (labelTransformedOverlap > 0) {\n      hyphenLabel.classList.add(CSS.hyphen, CSS.hyphenWrap);\n      if (rightValueLabelStaticHostOffset === 0 && leftValueLabelStaticHostOffset === 0) {\n        // Neither handle overlaps the host boundary\n        let leftValueLabelTranslate = labelTransformedOverlap / 2 - labelOffset;\n        leftValueLabelTranslate =\n          Math.sign(leftValueLabelTranslate) === -1\n            ? Math.abs(leftValueLabelTranslate)\n            : -leftValueLabelTranslate;\n\n        const leftValueLabelTransformedHostOffset = this.getHostOffset(\n          leftValueLabelTransformed.getBoundingClientRect().left +\n            leftValueLabelTranslate -\n            labelOffset,\n          leftValueLabelTransformed.getBoundingClientRect().right +\n            leftValueLabelTranslate -\n            labelOffset,\n        );\n\n        let rightValueLabelTranslate = labelTransformedOverlap / 2;\n        const rightValueLabelTransformedHostOffset = this.getHostOffset(\n          rightValueLabelTransformed.getBoundingClientRect().left + rightValueLabelTranslate,\n          rightValueLabelTransformed.getBoundingClientRect().right + rightValueLabelTranslate,\n        );\n\n        if (leftValueLabelTransformedHostOffset !== 0) {\n          leftValueLabelTranslate += leftValueLabelTransformedHostOffset;\n          rightValueLabelTranslate += leftValueLabelTransformedHostOffset;\n        }\n\n        if (rightValueLabelTransformedHostOffset !== 0) {\n          leftValueLabelTranslate += rightValueLabelTransformedHostOffset;\n          rightValueLabelTranslate += rightValueLabelTransformedHostOffset;\n        }\n\n        leftValueLabel.style.transform = `translateX(${leftValueLabelTranslate}px)`;\n        leftValueLabelTransformed.style.transform = `translateX(${\n          leftValueLabelTranslate - labelOffset\n        }px)`;\n        rightValueLabel.style.transform = `translateX(${rightValueLabelTranslate}px)`;\n        rightValueLabelTransformed.style.transform = `translateX(${rightValueLabelTranslate}px)`;\n      } else if (leftValueLabelStaticHostOffset > 0 || rightValueLabelStaticHostOffset > 0) {\n        // labels overlap host boundary on the left side\n        leftValueLabel.style.transform = `translateX(${\n          leftValueLabelStaticHostOffset + labelOffset\n        }px)`;\n        rightValueLabel.style.transform = `translateX(${\n          labelTransformedOverlap + rightValueLabelStaticHostOffset\n        }px)`;\n        rightValueLabelTransformed.style.transform = `translateX(${\n          labelTransformedOverlap + rightValueLabelStaticHostOffset\n        }px)`;\n      } else if (leftValueLabelStaticHostOffset < 0 || rightValueLabelStaticHostOffset < 0) {\n        // labels overlap host boundary on the right side\n        let leftValueLabelTranslate =\n          Math.abs(leftValueLabelStaticHostOffset) + labelTransformedOverlap - labelOffset;\n        leftValueLabelTranslate =\n          Math.sign(leftValueLabelTranslate) === -1\n            ? Math.abs(leftValueLabelTranslate)\n            : -leftValueLabelTranslate;\n        leftValueLabel.style.transform = `translateX(${leftValueLabelTranslate}px)`;\n        leftValueLabelTransformed.style.transform = `translateX(${\n          leftValueLabelTranslate - labelOffset\n        }px)`;\n      }\n    } else {\n      hyphenLabel.classList.remove(CSS.hyphen, CSS.hyphenWrap);\n      leftValueLabel.style.transform = `translateX(${leftValueLabelStaticHostOffset}px)`;\n      leftValueLabelTransformed.style.transform = `translateX(${leftValueLabelStaticHostOffset}px)`;\n      rightValueLabel.style.transform = `translateX(${rightValueLabelStaticHostOffset}px)`;\n      rightValueLabelTransformed.style.transform = `translateX(${rightValueLabelStaticHostOffset}px)`;\n    }\n  }\n\n  /**\n   * Hides bounding tick labels that are obscured by either handle.\n   */\n  private hideObscuredBoundingTickLabels(): void {\n    const valueIsRange = isRange(this.value);\n    if (!this.hasHistogram && !valueIsRange && !this.labelHandles && !this.precise) {\n      return;\n    }\n    if (!this.hasHistogram && !valueIsRange && this.labelHandles && !this.precise) {\n      return;\n    }\n    if (!this.hasHistogram && !valueIsRange && !this.labelHandles && this.precise) {\n      return;\n    }\n    if (!this.hasHistogram && !valueIsRange && this.labelHandles && this.precise) {\n      return;\n    }\n    if (!this.hasHistogram && valueIsRange && !this.precise) {\n      return;\n    }\n    if (this.hasHistogram && !this.precise && !this.labelHandles) {\n      return;\n    }\n\n    const minHandle: HTMLDivElement | null = this.el.shadowRoot.querySelector(\n      `.${CSS.thumbMinValue}`,\n    );\n    const maxHandle: HTMLDivElement | null = this.el.shadowRoot.querySelector(`.${CSS.thumbValue}`);\n\n    const minTickLabel: HTMLSpanElement | null = this.el.shadowRoot.querySelector(\n      `.${CSS.tickMin}`,\n    );\n    const maxTickLabel: HTMLSpanElement | null = this.el.shadowRoot.querySelector(\n      `.${CSS.tickMax}`,\n    );\n\n    if (!minHandle && maxHandle && minTickLabel && maxTickLabel) {\n      minTickLabel.style.opacity = this.isMinTickLabelObscured(minTickLabel, maxHandle) ? \"0\" : \"1\";\n      maxTickLabel.style.opacity = this.isMaxTickLabelObscured(maxTickLabel, maxHandle) ? \"0\" : \"1\";\n    }\n\n    if (minHandle && maxHandle && minTickLabel && maxTickLabel) {\n      minTickLabel.style.opacity =\n        this.isMinTickLabelObscured(minTickLabel, minHandle) ||\n        this.isMinTickLabelObscured(minTickLabel, maxHandle)\n          ? \"0\"\n          : \"1\";\n      maxTickLabel.style.opacity =\n        this.isMaxTickLabelObscured(maxTickLabel, minHandle) ||\n        (this.isMaxTickLabelObscured(maxTickLabel, maxHandle) && this.hasHistogram)\n          ? \"0\"\n          : \"1\";\n    }\n  }\n\n  /**\n   * Returns an integer representing the number of pixels to offset on the left or right side based on desired position behavior.\n   *\n   * @param leftBounds\n   * @param rightBounds\n   * @internal\n   */\n  private getHostOffset(leftBounds: number, rightBounds: number): number {\n    const hostBounds = this.el.getBoundingClientRect();\n    const buffer = 7;\n\n    if (leftBounds + buffer < hostBounds.left) {\n      return hostBounds.left - leftBounds - buffer;\n    }\n\n    if (rightBounds - buffer > hostBounds.right) {\n      return -(rightBounds - hostBounds.right) + buffer;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Returns an integer representing the number of pixels that the two given span elements are overlapping, taking into account\n   * a space in between the two spans equal to the font-size set on them to account for the space needed to render a hyphen.\n   *\n   * @param leftLabel\n   * @param rightLabel\n   */\n  private getRangeLabelOverlap(leftLabel: HTMLSpanElement, rightLabel: HTMLSpanElement): number {\n    const leftLabelBounds = leftLabel.getBoundingClientRect();\n    const rightLabelBounds = rightLabel.getBoundingClientRect();\n    const leftLabelFontSize = this.getFontSizeForElement(leftLabel);\n    const rangeLabelOverlap = leftLabelBounds.right + leftLabelFontSize - rightLabelBounds.left;\n\n    return Math.max(rangeLabelOverlap, 0);\n  }\n\n  /**\n   * Returns a boolean value representing if the minLabel span element is obscured (being overlapped) by the given handle div element.\n   *\n   * @param minLabel\n   * @param handle\n   */\n  private isMinTickLabelObscured(minLabel: HTMLSpanElement, handle: HTMLDivElement): boolean {\n    const minLabelBounds = minLabel.getBoundingClientRect();\n    const handleBounds = handle.getBoundingClientRect();\n    return intersects(minLabelBounds, handleBounds);\n  }\n\n  /**\n   * Returns a boolean value representing if the maxLabel span element is obscured (being overlapped) by the given handle div element.\n   *\n   * @param maxLabel\n   * @param handle\n   */\n  private isMaxTickLabelObscured(maxLabel: HTMLSpanElement, handle: HTMLDivElement): boolean {\n    const maxLabelBounds = maxLabel.getBoundingClientRect();\n    const handleBounds = handle.getBoundingClientRect();\n    return intersects(maxLabelBounds, handleBounds);\n  }\n\n  /**\n   * Returns a string representing the localized label value based if the groupSeparator prop is parsed.\n   *\n   * @param value\n   */\n  private formatValue = (value: number): string => {\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    return numberStringFormatter.localize(value.toString());\n  };\n}\n"],"mappings":"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"}