{"version":3,"names":["CSS","container","content","tabCss","Tab","this","guid","render","id","el","h","Host","labeledBy","class","scale","role","tabIndex","selected","connectedCallback","parentTabsEl","closest","componentDidLoad","calciteInternalTabRegister","emit","disconnectedCallback","document","body","dispatchEvent","CustomEvent","detail","internalTabChangeHandler","event","targetTabsEl","composedPath","find","tagName","tab","getTabIndex","then","index","stopPropagation","Array","prototype","indexOf","call","nodeListToArray","parentElement","children","filter","matches","updateAriaInfo","tabIds","titleIds","tabNavCss","TabNav","animationActiveDuration","resizeObserver","createObserver","activeIndicatorEl","style","transitionDuration","updateActiveWidth","updateOffsetPosition","handleTabFocus","destination","focusElementInGroup","enabledTabTitles","handleContainerScroll","selectedTabIdChanged","localStorage","storageId","selectedTabId","undefined","setItem","JSON","stringify","calciteInternalTabChange","selectedTitle","getTabTitleById","selectedTitleChanged","observe","componentWillLoad","storageKey","getItem","storedTab","parse","componentWillRender","layout","bordered","componentDidRender","tabTitles","length","every","title","getTabIdentifier","disconnect","dir","getElementDir","width","indicatorWidth","offset","indicatorOffset","indicatorStyle","left","right","position","onScroll","ref","tabNavEl","activeIndicatorContainerEl","focusPreviousTabHandler","target","focusNextTabHandler","focusFirstTabHandler","focusLastTabHandler","internalActivateTabHandler","getIndexOfTabTitle","activateTabHandler","calciteTabChange","internalCloseTabHandler","closedTabTitleEl","handleTabTitleClose","updateTabTitles","globalInternalTabChangeHandler","syncId","iconStartChangeHandler","navWidth","offsetWidth","tabLeft","offsetLeft","tabWidth","offsetRight","scrollLeft","Promise","all","map","ids","filterDirectChildren","tabTitle","closed","selectionModified","visibleTabTitlesIndices","reduce","tabTitleIndices","totalVisibleTabTitles","closable","activateTab","closedTabTitleIndex","findIndex","nextTabTitleIndex","value","requestAnimationFrame","focus","closeButton","contentHasText","iconEnd","iconPresent","iconStart","titleIcon","ICONS","close","tabTitleCss","TabTitle","closeClickHandler","closeTabTitleAndNotify","mutationObserver","updateHasText","calciteInternalTabIconChanged","selectedHandler","onMessagesChange","connectInteractive","connectLocalized","connectMessages","setupTextContentObserver","parentTabNavEl","disconnectInteractive","disconnectLocalized","disconnectMessages","setUpMessages","iconStartEl","flipRtl","iconFlipRtl","icon","getIconScale","iconEndEl","controls","toAriaBoolean","disabled","InteractiveContainer","hidden","hasText","renderCloseButton","messages","key","onClick","type","closeButtonEl","calciteInternalTabTitleRegister","updateHostInteraction","keyDownHandler","includes","preventDefault","calciteInternalTabsFocusNext","calciteInternalTabsFocusPrevious","calciteInternalTabsFocusFirst","calciteInternalTabsFocusLast","userTriggered","payload","calciteInternalTabsActivate","calciteTabsActivate","effectiveLocaleChange","updateMessages","effectiveLocale","textContent","trim","childList","subtree","calciteInternalTabsClose","calciteTabsClose","SLOTS","titleGroup","tabsCss","Tabs","mutationsList","mutation","nodeName","updateItems","handleInheritableProps","Fragment","name","titles","registryHandler","calciteTabTitleUnregister","tabs","calciteTabUnregister","nav","querySelector","from","querySelectorAll","forEach","some","sort","a","b","localeCompare","tabDomIndexes","titleDomIndexes","indexInDOM","registryIndex"],"sources":["src/components/tab/resources.ts","src/components/tab/tab.scss?tag=calcite-tab&encapsulation=shadow","src/components/tab/tab.tsx","src/components/tab-nav/resources.ts","src/components/tab-nav/tab-nav.scss?tag=calcite-tab-nav&encapsulation=shadow","src/components/tab-nav/tab-nav.tsx","src/components/tab-title/resources.ts","src/components/tab-title/tab-title.scss?tag=calcite-tab-title&encapsulation=shadow","src/components/tab-title/tab-title.tsx","src/components/tabs/resources.ts","src/components/tabs/tabs.scss?tag=calcite-tabs&encapsulation=shadow","src/components/tabs/tabs.tsx"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n  content: \"content\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-tab-content-block-padding: Specifies the block padding of the component's content in the `default` slot.\n */\n\n:host([selected]) {\n  section,\n  .container {\n    @apply block;\n  }\n}\n\n:host {\n  @apply hidden h-full w-full;\n}\n\n:host([selected]) {\n  @apply block h-full w-full overflow-auto;\n}\n\n.content {\n  @apply box-border;\n  padding-block: var(--calcite-internal-tab-content-block-padding);\n}\n\n.scale-s {\n  --calcite-internal-tab-content-block-padding: var(--calcite-tab-content-block-padding, theme(\"spacing.1\"));\n  @apply text-n2h;\n}\n\n.scale-m {\n  --calcite-internal-tab-content-block-padding: var(--calcite-tab-content-block-padding, theme(\"spacing.2\"));\n  @apply text-n1h;\n}\n\n.scale-l {\n  --calcite-internal-tab-content-block-padding: var(--calcite-tab-content-block-padding, theme(\"spacing.[2.5]\"));\n  @apply text-0h;\n}\n\nsection,\n.container {\n  @apply hidden h-full w-full;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n} from \"@stencil/core\";\nimport { CSS } from \"./resources\";\nimport { nodeListToArray } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { Scale } from \"../interfaces\";\nimport { TabChangeEventDetail } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-tab\",\n  styleUrl: \"tab.scss\",\n  shadow: true,\n})\nexport class Tab {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies a unique name for the component.\n   *\n   * When specified, use the same value on the `calcite-tab-title`.\n   */\n  @Prop({ reflect: true }) tab: string;\n\n  /**\n   * When `true`, the component's contents are selected.\n   *\n   * Only one tab can be selected within the `calcite-tabs` parent.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /**\n   * Specifies the size of the component inherited from the parent `calcite-tabs`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const id = this.el.id || this.guid;\n\n    return (\n      <Host aria-labelledby={this.labeledBy} id={id}>\n        <div\n          class={{ [CSS.container]: true, [`scale-${this.scale}`]: true }}\n          role=\"tabpanel\"\n          tabIndex={this.selected ? 0 : -1}\n        >\n          <section class={CSS.content}>\n            <slot />\n          </section>\n        </div>\n      </Host>\n    );\n  }\n\n  connectedCallback(): void {\n    this.parentTabsEl = this.el.closest(\"calcite-tabs\");\n  }\n\n  componentDidLoad(): void {\n    this.calciteInternalTabRegister.emit();\n  }\n\n  disconnectedCallback(): void {\n    // Dispatching to body in order to be listened by other elements that are still connected to the DOM.\n    document.body?.dispatchEvent(\n      new CustomEvent(\"calciteTabUnregister\", {\n        detail: this.el,\n      }),\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTabRegister: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTabChange\", { target: \"body\" })\n  internalTabChangeHandler(event: CustomEvent<TabChangeEventDetail>): void {\n    const targetTabsEl = event\n      .composedPath()\n      .find((el: HTMLElement) => el.tagName === \"CALCITE-TABS\");\n\n    // to allow `<calcite-tabs>` to be nested we need to make sure this\n    // `calciteTabChange` event was actually fired from a within the same\n    // `<calcite-tabs>` that is the a parent of this tab.\n    if (targetTabsEl !== this.parentTabsEl) {\n      return;\n    }\n\n    if (this.tab) {\n      this.selected = this.tab === event.detail.tab;\n    } else {\n      this.getTabIndex().then((index) => {\n        this.selected = index === event.detail.tab;\n      });\n    }\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Returns the index of the component item within the tab array.\n   */\n  @Method()\n  async getTabIndex(): Promise<number> {\n    return Array.prototype.indexOf.call(\n      nodeListToArray(this.el.parentElement.children).filter((el) => el.matches(\"calcite-tab\")),\n      this.el,\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabElement;\n\n  parentTabsEl: HTMLCalciteTabsElement;\n\n  guid = `calcite-tab-title-${guid()}`;\n\n  @State() labeledBy: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @param tabIds\n   * @param titleIds\n   * @internal\n   */\n  @Method()\n  async updateAriaInfo(tabIds: string[] = [], titleIds: string[] = []): Promise<void> {\n    this.labeledBy = titleIds[tabIds.indexOf(this.el.id)] || null;\n  }\n}\n","export const CSS = {\n  container: \"tab-nav\",\n};\n",":host {\n  @apply relative flex;\n}\n\n.scale-s {\n  min-block-size: theme(\"spacing.6\");\n}\n\n.scale-m {\n  min-block-size: theme(\"spacing.8\");\n}\n\n.scale-l {\n  min-block-size: theme(\"spacing.11\");\n}\n\n:host([layout=\"center\"]:not([bordered])) {\n  // `tab-nav` in all scales in layout=\"center\" has a padding of 20px on both ends\n  padding-inline: theme(\"margin.5\");\n\n  //override margin-inline-end for the last child for tab-nav to implement the 20px padding on both ends instead\n  .tab-nav {\n    ::slotted(calcite-tab-title:last-child) {\n      margin-inline-end: theme(\"margin.0\");\n    }\n  }\n}\n\n:host(:not([bordered])) {\n  .scale-l {\n    ::slotted(calcite-tab-title) {\n      margin-inline-end: theme(\"margin.6\");\n    }\n  }\n  .scale-m {\n    ::slotted(calcite-tab-title) {\n      margin-inline-end: theme(\"margin.5\");\n    }\n  }\n  .scale-s {\n    ::slotted(calcite-tab-title) {\n      margin-inline-end: theme(\"margin.4\");\n    }\n  }\n}\n\n.tab-nav {\n  @apply flex\n    w-full\n    justify-start\n    overflow-auto;\n}\n\n// prevent indicator overflow in horizontal scrolling situations\n.tab-nav-active-indicator-container {\n  @apply absolute\n    inset-x-0\n    bottom-0\n    h-0.5\n    w-full\n    overflow-hidden;\n}\n\n.tab-nav-active-indicator {\n  @apply bg-brand\n    absolute\n    bottom-0\n    block\n    h-0.5\n    transition-all\n    ease-out;\n}\n\n:host([layout=\"center\"]) .tab-nav {\n  @apply justify-evenly;\n}\n\n:host .position-bottom .tab-nav-active-indicator {\n  inset-block-end: unset;\n  @apply top-0;\n}\n\n:host .position-bottom .tab-nav-active-indicator-container {\n  inset-block-end: unset;\n  @apply top-0;\n}\n\n:host([bordered]) .tab-nav-active-indicator-container {\n  inset-block-end: unset; // display active blue line above instead of below\n}\n\n:host([bordered]) .position-bottom .tab-nav-active-indicator-container {\n  inset-block-end: 0; // display active blue line below instead of above\n  inset-block-start: unset;\n}\n\n@media (forced-colors: active) {\n  .tab-nav-active-indicator {\n    background-color: highlight;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  filterDirectChildren,\n  focusElementInGroup,\n  FocusElementInGroupDestination,\n  getElementDir,\n} from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { TabChangeEventDetail, TabCloseEventDetail } from \"../tab/interfaces\";\nimport { TabID, TabLayout, TabPosition } from \"../tabs/interfaces\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-tab-title`s.\n */\n@Component({\n  tag: \"calcite-tab-nav\",\n  styleUrl: \"tab-nav.scss\",\n  shadow: true,\n})\nexport class TabNav {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies the name when saving selected `calcite-tab` data to `localStorage`.\n   */\n  @Prop({ reflect: true }) storageId: string;\n\n  /**\n   * Specifies text to update multiple components to keep in sync if one changes.\n   */\n  @Prop({ reflect: true }) syncId: string;\n\n  /**\n   * Specifies the component's selected `calcite-tab-title`.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedTitle: HTMLCalciteTabTitleElement = null;\n\n  /**\n   * Specifies the size of the component inherited from the parent `calcite-tabs`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) layout: TabLayout = \"inline\";\n\n  /**\n   * Specifies the position of `calcite-tab-nav` and `calcite-tab-title` components in relation to, and is inherited from the parent `calcite-tabs`, defaults to `top`.\n   *\n   *  @internal\n   */\n  @Prop() position: TabPosition = \"bottom\";\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) bordered = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true }) indicatorOffset: number;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true }) indicatorWidth: number;\n\n  @Watch(\"selectedTabId\")\n  async selectedTabIdChanged(): Promise<void> {\n    if (\n      localStorage &&\n      this.storageId &&\n      this.selectedTabId !== undefined &&\n      this.selectedTabId !== null\n    ) {\n      localStorage.setItem(`calcite-tab-nav-${this.storageId}`, JSON.stringify(this.selectedTabId));\n    }\n\n    this.calciteInternalTabChange.emit({\n      tab: this.selectedTabId,\n    });\n\n    this.selectedTitle = await this.getTabTitleById(this.selectedTabId);\n  }\n\n  @Watch(\"selectedTitle\")\n  selectedTitleChanged(): void {\n    this.updateOffsetPosition();\n    this.updateActiveWidth();\n    // reset the animation time on tab selection\n    this.activeIndicatorEl.style.transitionDuration = `${this.animationActiveDuration}s`;\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.parentTabsEl = this.el.closest(\"calcite-tabs\");\n    this.resizeObserver?.observe(this.el);\n  }\n\n  componentWillLoad(): void {\n    const storageKey = `calcite-tab-nav-${this.storageId}`;\n    if (localStorage && this.storageId && localStorage.getItem(storageKey)) {\n      const storedTab = JSON.parse(localStorage.getItem(storageKey));\n      this.selectedTabId = storedTab;\n    }\n  }\n\n  componentWillRender(): void {\n    const { parentTabsEl } = this;\n\n    this.layout = parentTabsEl?.layout;\n    this.bordered = parentTabsEl?.bordered;\n    // fix issue with active tab-title not lining up with blue indicator\n    if (this.selectedTitle) {\n      this.updateOffsetPosition();\n    }\n  }\n\n  componentDidRender(): void {\n    // if every tab title is active select the first tab.\n    if (\n      this.tabTitles.length &&\n      this.tabTitles.every((title) => !title.selected) &&\n      !this.selectedTabId\n    ) {\n      this.tabTitles[0].getTabIdentifier().then((tab) => {\n        this.calciteInternalTabChange.emit({\n          tab,\n        });\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.resizeObserver?.disconnect();\n  }\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const width = `${this.indicatorWidth}px`;\n    const offset = `${this.indicatorOffset}px`;\n    const indicatorStyle = dir !== \"rtl\" ? { width, left: offset } : { width, right: offset };\n    return (\n      <Host role=\"tablist\">\n        <div\n          class={{\n            [CSS.container]: true,\n            [`scale-${this.scale}`]: true,\n            [`position-${this.position}`]: true,\n          }}\n          onScroll={this.handleContainerScroll}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(el: HTMLDivElement) => (this.tabNavEl = el)}\n        >\n          <slot />\n          <div\n            class=\"tab-nav-active-indicator-container\"\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(el) => (this.activeIndicatorContainerEl = el)}\n          >\n            <div\n              class=\"tab-nav-active-indicator\"\n              style={indicatorStyle}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={(el) => (this.activeIndicatorEl = el as HTMLElement)}\n            />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTabsFocusPrevious\")\n  focusPreviousTabHandler(event: CustomEvent): void {\n    this.handleTabFocus(event, event.target as HTMLCalciteTabTitleElement, \"previous\");\n  }\n\n  @Listen(\"calciteInternalTabsFocusNext\")\n  focusNextTabHandler(event: CustomEvent): void {\n    this.handleTabFocus(event, event.target as HTMLCalciteTabTitleElement, \"next\");\n  }\n\n  @Listen(\"calciteInternalTabsFocusFirst\")\n  focusFirstTabHandler(event: CustomEvent): void {\n    this.handleTabFocus(event, event.target as HTMLCalciteTabTitleElement, \"first\");\n  }\n\n  @Listen(\"calciteInternalTabsFocusLast\")\n  focusLastTabHandler(event: CustomEvent): void {\n    this.handleTabFocus(event, event.target as HTMLCalciteTabTitleElement, \"last\");\n  }\n\n  @Listen(\"calciteInternalTabsActivate\")\n  internalActivateTabHandler(event: CustomEvent<TabChangeEventDetail>): void {\n    this.selectedTabId = event.detail.tab\n      ? event.detail.tab\n      : this.getIndexOfTabTitle(event.target as HTMLCalciteTabTitleElement);\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteTabsActivate\")\n  activateTabHandler(event: CustomEvent<void>): void {\n    this.calciteTabChange.emit();\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalTabsClose\")\n  internalCloseTabHandler(event: CustomEvent<TabCloseEventDetail>): void {\n    const closedTabTitleEl = event.target as HTMLCalciteTabTitleElement;\n    this.handleTabTitleClose(closedTabTitleEl);\n    event.stopPropagation();\n  }\n\n  /**\n   * Check for active tabs on register and update selected\n   *\n   * @param event\n   */\n  @Listen(\"calciteInternalTabTitleRegister\")\n  updateTabTitles(event: CustomEvent<TabID>): void {\n    if ((event.target as HTMLCalciteTabTitleElement).selected) {\n      this.selectedTabId = event.detail;\n    }\n  }\n\n  @Listen(\"calciteInternalTabChange\", { target: \"body\" })\n  globalInternalTabChangeHandler(event: CustomEvent<TabChangeEventDetail>): void {\n    if (\n      this.syncId &&\n      event.target !== this.el &&\n      (event.target as HTMLCalciteTabNavElement).syncId === this.syncId &&\n      this.selectedTabId !== event.detail.tab\n    ) {\n      this.selectedTabId = event.detail.tab;\n    }\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalTabIconChanged\")\n  iconStartChangeHandler(): void {\n    this.updateActiveWidth();\n    this.updateOffsetPosition();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emits when the selected `calcite-tab` changes.\n   */\n  @Event({ cancelable: false }) calciteTabChange: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTabChange: EventEmitter<TabChangeEventDetail>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabNavElement;\n\n  @State() selectedTabId: TabID;\n\n  parentTabsEl: HTMLCalciteTabsElement;\n\n  tabNavEl: HTMLDivElement;\n\n  activeIndicatorEl: HTMLElement;\n\n  activeIndicatorContainerEl: HTMLDivElement;\n\n  animationActiveDuration = 0.3;\n\n  resizeObserver = createObserver(\"resize\", () => {\n    if (!this.activeIndicatorEl) {\n      return;\n    }\n\n    // remove active indicator transition duration during resize to prevent wobble\n    this.activeIndicatorEl.style.transitionDuration = \"0s\";\n    this.updateActiveWidth();\n    this.updateOffsetPosition();\n  });\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  handleTabFocus = (\n    event: CustomEvent,\n    el: HTMLCalciteTabTitleElement,\n    destination: FocusElementInGroupDestination,\n  ): void => {\n    focusElementInGroup(this.enabledTabTitles, el, destination);\n\n    event.stopPropagation();\n  };\n\n  handleContainerScroll = (): void => {\n    // remove active indicator transition duration while container is scrolling to prevent wobble\n    this.activeIndicatorEl.style.transitionDuration = \"0s\";\n    this.updateOffsetPosition();\n  };\n\n  updateOffsetPosition(): void {\n    const dir = getElementDir(this.el);\n    const navWidth = this.activeIndicatorContainerEl?.offsetWidth;\n    const tabLeft = this.selectedTitle?.offsetLeft;\n    const tabWidth = this.selectedTitle?.offsetWidth;\n    const offsetRight = navWidth - (tabLeft + tabWidth);\n    this.indicatorOffset =\n      dir !== \"rtl\" ? tabLeft - this.tabNavEl?.scrollLeft : offsetRight + this.tabNavEl?.scrollLeft;\n  }\n\n  updateActiveWidth(): void {\n    this.indicatorWidth = this.selectedTitle?.offsetWidth;\n  }\n\n  getIndexOfTabTitle(el: HTMLCalciteTabTitleElement, tabTitles = this.tabTitles): number {\n    // In most cases, since these indexes correlate with tab contents, we want to consider all tab titles.\n    // However, when doing relative index operations, it makes sense to pass in this.enabledTabTitles as the 2nd arg.\n    return tabTitles.indexOf(el);\n  }\n\n  async getTabTitleById(id: TabID): Promise<HTMLCalciteTabTitleElement | null> {\n    return Promise.all(this.tabTitles.map((el) => el.getTabIdentifier())).then((ids) => {\n      return this.tabTitles[ids.indexOf(id)];\n    });\n  }\n\n  get tabTitles(): HTMLCalciteTabTitleElement[] {\n    return filterDirectChildren<HTMLCalciteTabTitleElement>(this.el, \"calcite-tab-title\");\n  }\n\n  get enabledTabTitles(): HTMLCalciteTabTitleElement[] {\n    return filterDirectChildren<HTMLCalciteTabTitleElement>(\n      this.el,\n      \"calcite-tab-title:not([disabled])\",\n    ).filter((tabTitle) => !tabTitle.closed);\n  }\n\n  private handleTabTitleClose(closedTabTitleEl: HTMLCalciteTabTitleElement): void {\n    const { tabTitles } = this;\n    const selectionModified = closedTabTitleEl.selected;\n\n    const visibleTabTitlesIndices = tabTitles.reduce(\n      (tabTitleIndices: number[], tabTitle, index) =>\n        !tabTitle.closed ? [...tabTitleIndices, index] : tabTitleIndices,\n      [],\n    );\n    const totalVisibleTabTitles = visibleTabTitlesIndices.length;\n\n    if (totalVisibleTabTitles === 1 && tabTitles[visibleTabTitlesIndices[0]].closable) {\n      tabTitles[visibleTabTitlesIndices[0]].closable = false;\n      this.selectedTabId = visibleTabTitlesIndices[0];\n\n      if (selectionModified) {\n        tabTitles[visibleTabTitlesIndices[0]].activateTab();\n      }\n    } else if (totalVisibleTabTitles > 1) {\n      const closedTabTitleIndex = tabTitles.findIndex((el) => el === closedTabTitleEl);\n      const nextTabTitleIndex = visibleTabTitlesIndices.find(\n        (value) => value > closedTabTitleIndex,\n      );\n\n      if (this.selectedTabId === closedTabTitleIndex) {\n        this.selectedTabId = nextTabTitleIndex ? nextTabTitleIndex : totalVisibleTabTitles - 1;\n        tabTitles[this.selectedTabId].activateTab();\n      }\n    }\n\n    requestAnimationFrame(() => {\n      this.updateOffsetPosition();\n      this.updateActiveWidth();\n      tabTitles[this.selectedTabId].focus();\n    });\n  }\n}\n","export const CSS = {\n  closeButton: \"close-button\",\n  container: \"container\",\n  content: \"content\",\n  contentHasText: \"content--has-text\",\n  iconEnd: \"icon-end\",\n  iconPresent: \"icon-present\",\n  iconStart: \"icon-start\",\n  titleIcon: \"calcite-tab-title--icon\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n};\n",":host {\n  @apply block outline-none;\n  margin-inline-start: theme(\"margin.0\");\n}\n\n:host([layout=\"inline\"]) {\n  @apply flex-initial;\n}\n\n:host([layout=\"center\"]) {\n  @apply flex-auto;\n}\n\n:host([layout=\"center\"]) .scale-s,\n:host([layout=\"center\"]) .scale-m,\n:host([layout=\"center\"]) .scale-l {\n  @apply my-0 text-center;\n  flex-basis: theme(\"spacing.48\");\n  .content {\n    @apply m-auto;\n  }\n}\n\n// center the text visually and not affected by the x button so as to avoid moving when on or off\n:host([layout=\"center\"][closable]) {\n  .content {\n    padding-inline-start: 32px; //28px button width + 0.25rem padding\n  }\n}\n\n:host([layout=\"center\"][bordered][closable]) .scale-s {\n  .content {\n    padding-inline-start: 36px; //28px button width + 0.5rem padding\n  }\n}\n\n:host([layout=\"center\"][bordered][closable]) .scale-m {\n  .content {\n    padding-inline-start: 40px; //28px button width + 0.75rem padding\n  }\n}\n\n:host([layout=\"center\"][closable]) .scale-l {\n  .content {\n    padding-inline-start: 40px; //36px button width + .25 padding\n  }\n}\n\n:host([layout=\"center\"][closable][bordered]) .scale-s {\n  .content {\n    padding-inline-start: 52px; //36px button width + 1rem padding\n  }\n}\n\n:host([position=\"bottom\"]) .container {\n  @apply border-t-color-transparent\n    border-b-0\n    border-t-2;\n  border-block-start-style: solid;\n}\n\n:host([closed]) {\n  @apply hidden;\n}\n\n.container {\n  @apply focus-base;\n}\n\n:host(:focus) .container {\n  @apply focus-inset;\n\n  &:focus-within {\n    @apply focus-base;\n  }\n}\n\n:host(:active),\n:host(:focus),\n:host(:hover) {\n  a {\n    @apply text-color-1 border-color-2 no-underline;\n  }\n}\n\n:host([selected]) .container {\n  @apply text-color-1 border-color-transparent;\n}\n\n@include disabled() {\n  .container {\n    @apply pointer-events-none opacity-50;\n  }\n}\n\n.scale-s {\n  .content {\n    @apply text-n2h py-1;\n  }\n}\n\n.scale-m {\n  .content {\n    @apply text-n1h py-2;\n  }\n}\n\n.scale-l {\n  .content {\n    @apply text-0h py-2.5;\n  }\n}\n\n.container {\n  @apply border-b-2\n    border-b-color-transparent\n    box-border\n    content-center\n    cursor-pointer\n    flex\n    h-full\n    justify-between\n    px-0\n    text-color-3\n    text-n1h\n    transition-default\n    w-full;\n\n  border-block-end-style: solid;\n}\n\n.content {\n  @apply flex items-center justify-center;\n}\n\n.calcite-tab-title--icon {\n  @apply relative\n    m-0\n    inline-flex\n    self-center;\n  & svg {\n    @apply transition-default;\n  }\n}\n\n.content--has-text {\n  @apply p-1;\n}\n\n.content--has-text .calcite-tab-title--icon.icon-start {\n  margin-inline-end: theme(\"margin.2\");\n}\n\n.content--has-text .calcite-tab-title--icon.icon-end {\n  margin-inline-start: theme(\"margin.2\");\n}\n\n.close-button {\n  @apply appearance-none\n  bg-foreground-1\n  border-none\n  content-center\n  cursor-pointer\n  flex\n  focus-base\n  items-center\n  justify-center\n  self-center\n  text-color-3\n  transition-default;\n\n  block-size: calc(100% - 2px); // fit within top/bottom borders\n  background-color: var(--calcite-button-transparent-1);\n  margin-inline-start: auto;\n\n  &:focus {\n    @apply focus-inset;\n\n    // ⚠️overriding outline-offset should be avoided as it won't honor --calcite-color-focus-offset-invert\n    outline-offset: -1px;\n  }\n\n  &:focus,\n  &:hover {\n    @apply text-color-1;\n    background-color: var(--calcite-color-foreground-2);\n  }\n\n  &:active {\n    @apply text-color-1;\n    background-color: var(--calcite-color-foreground-3);\n  }\n\n  & calcite-icon {\n    color: inherit;\n  }\n}\n\n// compensate for spacing when no hastext and two icons\n:host([icon-start][icon-end]) {\n  .calcite-tab-title--icon:first-child {\n    margin-inline-end: theme(\"margin.2\");\n  }\n}\n\n// bordered styles\n:host([bordered]) {\n  margin-inline-end: 0;\n}\n\n:host([bordered][selected]) {\n  box-shadow: inset 0px -2px var(--calcite-color-foreground-1);\n}\n\n:host([bordered][selected][position=\"bottom\"]) {\n  box-shadow: inset 0 2px 0 var(--calcite-color-foreground-1);\n}\n\n:host([bordered]:hover),\n:host([bordered]:focus),\n:host([bordered]:active) {\n  .container {\n    @apply relative;\n  }\n}\n\n:host([bordered]:hover) {\n  .container {\n    background-color: var(--calcite-color-transparent-hover);\n  }\n}\n\n:host([closable]) .container,\n:host([bordered]) .container {\n  border-inline-start: 1px solid transparent;\n  border-inline-end: 1px solid transparent;\n  .close-button {\n    margin-inline: 0;\n  }\n}\n\n:host([closable]) .content {\n  @apply h-full box-border border-b-color-transparent;\n}\n\n:host([closable][position=\"bottom\"]) .container,\n:host([bordered][position=\"bottom\"]) .container {\n  border-block-start-style: unset;\n}\n\n:host([selected][bordered]) .container {\n  border-inline-start-color: var(--calcite-color-border-1);\n  border-inline-end-color: var(--calcite-color-border-1);\n}\n\n:host([bordered]) {\n  .content {\n    @apply px-3;\n  }\n}\n\n:host([bordered]) .scale-s {\n  .content {\n    @apply px-2;\n  }\n}\n\n:host([bordered]) .scale-l {\n  .content {\n    @apply px-4;\n  }\n}\n\n@media (forced-colors: active) {\n  :host {\n    outline-width: 0;\n    outline-offset: 0;\n  }\n\n  :host(:focus) .container {\n    outline-color: highlight;\n  }\n\n  :host([bordered]) .container {\n    border-block-end-style: solid;\n  }\n\n  :host([bordered][position=\"bottom\"]) .container {\n    border-block-start-style: solid;\n  }\n\n  :host([bordered][selected]) .container {\n    border-block-end-style: none;\n  }\n\n  :host([bordered][position=\"bottom\"][selected]) .container {\n    border-block-start-style: none;\n  }\n\n  .close-button {\n    /* in high contrast the tab title outline covers the close button outline without a z-index */\n    @apply z-default;\n  }\n}\n\n@include base-component();\n","import {\n  Build,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean, nodeListToArray } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { createObserver } from \"../../utils/observers\";\nimport { FlipContext, Scale } from \"../interfaces\";\nimport { TabChangeEventDetail, TabCloseEventDetail } from \"../tab/interfaces\";\nimport { CSS, ICONS } from \"./resources\";\nimport { TabID, TabLayout, TabPosition } from \"../tabs/interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { TabTitleMessages } from \"./assets/tab-title/t9n\";\nimport { getIconScale } from \"../../utils/component\";\n\n/**\n * Tab-titles are optionally individually closable.\n */\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-tab-title\",\n  styleUrl: \"tab-title.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TabTitle implements InteractiveComponent, LocalizedComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component and its respective `calcite-tab` contents are selected.\n   *\n   * Only one tab can be selected within the `calcite-tabs` parent.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  selectedHandler(): void {\n    if (this.selected) {\n      this.activateTab(false);\n    }\n  }\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** When `true`, does not display or position the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity.  */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: string;\n\n  /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) layout: TabLayout;\n\n  /**\n   * Specifies the position of `calcite-tab-nav` and `calcite-tab-title` components in relation to, and is inherited from the parent `calcite-tabs`, defaults to `top`.\n   *\n   *  @internal\n   */\n  @Prop() position: TabPosition = \"top\";\n\n  /**\n   * Specifies the size of the component inherited from the parent `calcite-tabs`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) bordered = false;\n\n  /**\n   * Specifies a unique name for the component.\n   *\n   * When specified, use the same value on the `calcite-tab`.\n   */\n  @Prop({ reflect: true }) tab: string;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TabTitleMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TabTitleMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.setupTextContentObserver();\n    this.parentTabNavEl = this.el.closest(\"calcite-tab-nav\");\n    this.parentTabsEl = this.el.closest(\"calcite-tabs\");\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    // Dispatching to body in order to be listened by other elements that are still connected to the DOM.\n    document.body?.dispatchEvent(\n      new CustomEvent(\"calciteTabTitleUnregister\", {\n        detail: this.el,\n      }),\n    );\n    this.resizeObserver?.disconnect();\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    if (Build.isBrowser) {\n      this.updateHasText();\n    }\n    if (this.tab && this.selected) {\n      this.activateTab(false);\n    }\n  }\n\n  componentWillRender(): void {\n    if (this.parentTabsEl) {\n      this.layout = this.parentTabsEl.layout;\n      this.bordered = this.parentTabsEl.bordered;\n    }\n  }\n\n  render(): VNode {\n    const { el, closed } = this;\n    const id = el.id || this.guid;\n\n    const iconStartEl = (\n      <calcite-icon\n        class={{ [CSS.titleIcon]: true, [CSS.iconStart]: true }}\n        flipRtl={this.iconFlipRtl === \"start\" || this.iconFlipRtl === \"both\"}\n        icon={this.iconStart}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const iconEndEl = (\n      <calcite-icon\n        class={{ [CSS.titleIcon]: true, [CSS.iconEnd]: true }}\n        flipRtl={this.iconFlipRtl === \"end\" || this.iconFlipRtl === \"both\"}\n        icon={this.iconEnd}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    return (\n      <Host\n        aria-controls={this.controls}\n        aria-selected={toAriaBoolean(this.selected)}\n        id={id}\n        role=\"tab\"\n        tabIndex={this.selected && !this.disabled ? 0 : -1}\n      >\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            class={{\n              container: true,\n              [CSS.iconPresent]: !!this.iconStart || !!this.iconEnd,\n              [`scale-${this.scale}`]: true,\n            }}\n            hidden={closed}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(el) => this.resizeObserver?.observe(el)}\n          >\n            <div class={{ [CSS.content]: true, [CSS.contentHasText]: this.hasText }}>\n              {this.iconStart ? iconStartEl : null}\n              <slot />\n              {this.iconEnd ? iconEndEl : null}\n            </div>\n            {this.renderCloseButton()}\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  renderCloseButton(): VNode {\n    const { closable, messages } = this;\n\n    return closable ? (\n      <button\n        aria-label={messages.close}\n        class={CSS.closeButton}\n        disabled={false}\n        key={CSS.closeButton}\n        onClick={this.closeClickHandler}\n        title={messages.close}\n        type=\"button\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.closeButtonEl = el)}\n      >\n        <calcite-icon icon={ICONS.close} scale={getIconScale(this.scale)} />\n      </button>\n    ) : null;\n  }\n\n  async componentDidLoad(): Promise<void> {\n    this.calciteInternalTabTitleRegister.emit(await this.getTabIdentifier());\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTabChange\", { target: \"body\" })\n  internalTabChangeHandler(event: CustomEvent<TabChangeEventDetail>): void {\n    const targetTabsEl = event\n      .composedPath()\n      .find((el: HTMLElement) => el.tagName === \"CALCITE-TABS\");\n\n    if (targetTabsEl !== this.parentTabsEl) {\n      return;\n    }\n\n    if (this.tab) {\n      this.selected = this.tab === event.detail.tab;\n    } else {\n      this.getTabIndex().then((index) => {\n        this.selected = index === event.detail.tab;\n      });\n    }\n\n    event.stopPropagation();\n  }\n\n  @Listen(\"click\")\n  onClick(): void {\n    this.activateTab();\n  }\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    switch (event.key) {\n      case \" \":\n      case \"Enter\":\n        if (!event.composedPath().includes(this.closeButtonEl)) {\n          this.activateTab();\n          event.preventDefault();\n        }\n        break;\n      case \"ArrowRight\":\n        event.preventDefault();\n        if (getElementDir(this.el) === \"ltr\") {\n          this.calciteInternalTabsFocusNext.emit();\n        } else {\n          this.calciteInternalTabsFocusPrevious.emit();\n        }\n        break;\n      case \"ArrowLeft\":\n        event.preventDefault();\n        if (getElementDir(this.el) === \"ltr\") {\n          this.calciteInternalTabsFocusPrevious.emit();\n        } else {\n          this.calciteInternalTabsFocusNext.emit();\n        }\n        break;\n      case \"Home\":\n        event.preventDefault();\n        this.calciteInternalTabsFocusFirst.emit();\n        break;\n      case \"End\":\n        event.preventDefault();\n        this.calciteInternalTabsFocusLast.emit();\n        break;\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when a `calcite-tab` is selected.\n   */\n  @Event({ cancelable: false }) calciteTabsActivate: EventEmitter<void>;\n\n  /**\n   * Fires when a `calcite-tab` is selected (`event.details`).\n   *\n   * @see [TabChangeEventDetail](https://github.com/Esri/calcite-design-system/blob/main/src/components/tab/interfaces.ts#L1)\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTabsActivate: EventEmitter<TabChangeEventDetail>;\n\n  /**\n   * Fires when a `calcite-tab` is closed.\n   */\n  @Event({ cancelable: false }) calciteTabsClose: EventEmitter<void>;\n\n  /**\n   * Fires when `calcite-tab` is closed (`event.details`).\n   *\n   * @see [TabChangeEventDetail](https://github.com/Esri/calcite-design-system/blob/main/src/components/tab/interfaces.ts)\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTabsClose: EventEmitter<TabCloseEventDetail>;\n  /**\n   * @internal\n   */\n\n  @Event({ cancelable: false }) calciteInternalTabsFocusNext: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTabsFocusPrevious: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTabsFocusFirst: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTabsFocusLast: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTabTitleRegister: EventEmitter<TabID>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTabIconChanged: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Returns the index of the title within the `calcite-tab-nav`.\n   */\n  @Method()\n  async getTabIndex(): Promise<number> {\n    return Array.prototype.indexOf.call(\n      nodeListToArray(this.el.parentElement.children).filter((el) =>\n        el.matches(\"calcite-tab-title\"),\n      ),\n      this.el,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  @Method()\n  async getTabIdentifier(): Promise<TabID> {\n    return this.tab ? this.tab : this.getTabIndex();\n  }\n\n  /**\n   * @param tabIds\n   * @param titleIds\n   * @internal\n   */\n  @Method()\n  async updateAriaInfo(tabIds: string[] = [], titleIds: string[] = []): Promise<void> {\n    this.controls = tabIds[titleIds.indexOf(this.el.id)] || null;\n  }\n\n  /**\n   * This activates a tab in order for it and its associated tab-title be selected.\n   *\n   * @param userTriggered - when `true`, user-interaction events will be emitted in addition to internal events\n   * @internal\n   */\n  @Method()\n  async activateTab(userTriggered = true): Promise<void> {\n    if (this.disabled || this.closed) {\n      return;\n    }\n    const payload = { tab: this.tab };\n    this.calciteInternalTabsActivate.emit(payload);\n\n    if (userTriggered) {\n      // emit in the next frame to let internal events sync up\n      requestAnimationFrame(() => this.calciteTabsActivate.emit());\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private closeClickHandler = (): void => {\n    this.closeTabTitleAndNotify();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabTitleElement;\n\n  /** watches for changing text content */\n  mutationObserver: MutationObserver = createObserver(\"mutation\", () => this.updateHasText());\n\n  @State() controls: string;\n\n  @State() defaultMessages: TabTitleMessages;\n\n  @State() effectiveLocale: \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  /** determine if there is slotted text for styling purposes */\n  @State() hasText = false;\n\n  closeButtonEl: HTMLButtonElement;\n\n  containerEl: HTMLDivElement;\n\n  parentTabNavEl: HTMLCalciteTabNavElement;\n\n  parentTabsEl: HTMLCalciteTabsElement;\n\n  resizeObserver = createObserver(\"resize\", () => {\n    this.calciteInternalTabIconChanged.emit();\n  });\n\n  updateHasText(): void {\n    this.hasText = this.el.textContent.trim().length > 0;\n  }\n\n  setupTextContentObserver(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  closeTabTitleAndNotify(): void {\n    this.closed = true;\n    this.calciteInternalTabsClose.emit({ tab: this.tab });\n    this.calciteTabsClose.emit();\n  }\n\n  guid = `calcite-tab-title-${guid()}`;\n}\n","export const SLOTS = {\n  titleGroup: \"title-group\",\n};\n",":host {\n  @apply flex flex-col;\n}\n\n:host([bordered]) {\n  box-shadow: inset 0 1px 0 var(--calcite-color-border-1);\n  background-color: var(--calcite-color-foreground-1);\n}\n\n:host([bordered]:not([position=\"bottom\"])) ::slotted(calcite-tab-nav) {\n  margin-block-end: -1px;\n}\n\n:host([bordered][position=\"bottom\"]) {\n  box-shadow:\n    inset 0 1px 0 var(--calcite-color-border-1),\n    inset 0 -1px 0 var(--calcite-color-border-1);\n}\n\n:host([bordered]) section {\n  @apply border-color-1 border border-solid;\n}\n\n:host([bordered][scale=\"s\"]) section {\n  @apply p-3;\n}\n\n:host([bordered][scale=\"m\"]) section {\n  @apply p-2;\n}\n\n:host([bordered][scale=\"l\"]) section {\n  @apply p-4;\n}\n\n:host([position=\"bottom\"]) {\n  @apply flex-col-reverse;\n}\n\nsection {\n  @apply border-t-color-1\n    flex\n    flex-grow\n    overflow-hidden\n    border-t;\n  border-block-start-style: solid;\n}\n\n:host([position=\"bottom\"]) section {\n  @apply border-b-color-1\n    flex-col-reverse\n    border-t-0\n    border-b;\n}\n\n:host([position=\"bottom\"]:not([bordered])) section {\n  border-block-end-style: solid;\n}\n\n@media (forced-colors: active) {\n  :host([bordered]) section {\n    @apply border-t-0\n      border-b;\n  }\n  :host([position=\"bottom\"][bordered]) section {\n    @apply border-t\n      border-b-0;\n  }\n}\n\n@include base-component();\n","import { Component, Element, Fragment, h, Listen, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { TabLayout, TabPosition } from \"./interfaces\";\nimport { SLOTS } from \"./resources\";\nimport { createObserver } from \"../../utils/observers\";\n\n/**\n * @slot - A slot for adding `calcite-tab`s.\n * @slot title-group - A slot for adding a `calcite-tab-nav`.\n */\n@Component({\n  tag: \"calcite-tabs\",\n  styleUrl: \"tabs.scss\",\n  shadow: true,\n})\nexport class Tabs {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies the layout of the `calcite-tab-nav`, justifying the `calcite-tab-title`s to the start (`\"inline\"`), or across and centered (`\"center\"`).\n   */\n  @Prop({ reflect: true }) layout: TabLayout = \"inline\";\n\n  /**\n   * Specifies the position of `calcite-tab-nav` and `calcite-tab-title` components in relation to the `calcite-tabs`.\n   */\n  @Prop({ reflect: true }) position: TabPosition = \"top\";\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"position\")\n  @Watch(\"scale\")\n  handleInheritableProps(): void {\n    this.updateItems();\n  }\n\n  /**\n   * When `true`, the component will display with a folder style menu.\n   */\n  @Prop() bordered = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.mutationObserver.observe(this.el, { childList: true });\n    this.updateItems();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    this.updateItems();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        <slot name={SLOTS.titleGroup} />\n        <section>\n          <slot />\n        </section>\n      </Fragment>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteInternalTabTitleRegister\")\n  calciteInternalTabTitleRegister(event: CustomEvent): void {\n    this.titles = [...this.titles, event.target as HTMLCalciteTabTitleElement];\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteTabTitleUnregister\", { target: \"body\" })\n  calciteTabTitleUnregister(event: CustomEvent): void {\n    this.titles = this.titles.filter((el) => el !== event.detail);\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteInternalTabRegister\")\n  calciteInternalTabRegister(event: CustomEvent): void {\n    this.tabs = [...this.tabs, event.target as HTMLCalciteTabElement];\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteTabUnregister\", { target: \"body\" })\n  calciteTabUnregister(event: CustomEvent): void {\n    this.tabs = this.tabs.filter((el) => el !== event.detail);\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabsElement;\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab-titles>`s to match up ARIA\n   * attributes.\n   */\n  @State() titles: HTMLCalciteTabTitleElement[] = [];\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab>`s to match up ARIA attributes.\n   */\n  @State() tabs: HTMLCalciteTabElement[] = [];\n\n  mutationObserver = createObserver(\"mutation\", (mutationsList: MutationRecord[]) => {\n    for (const mutation of mutationsList) {\n      const target = mutation.target as HTMLElement;\n      if (\n        target.nodeName === \"CALCITE-TAB-NAV\" ||\n        target.nodeName === \"CALCITE-TAB-TITLE\" ||\n        target.nodeName === \"CALCITE-TAB\"\n      ) {\n        this.updateItems();\n      }\n    }\n  });\n\n  private updateItems(): void {\n    const { position, scale } = this;\n\n    const nav = this.el.querySelector(\"calcite-tab-nav\");\n    if (nav) {\n      nav.position = position;\n      nav.scale = scale;\n    }\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab\")).forEach((tab: HTMLCalciteTabElement) => {\n      if (tab.parentElement === this.el) {\n        tab.scale = scale;\n      }\n    });\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab-nav > calcite-tab-title\")).forEach(\n      (title: HTMLCalciteTabTitleElement) => {\n        title.position = position;\n        title.scale = scale;\n      },\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   *\n   * Matches up elements from the internal `tabs` and `titles` to automatically\n   * update the ARIA attributes and link `<calcite-tab>` and\n   * `<calcite-tab-title>` components.\n   */\n  async registryHandler(): Promise<void> {\n    let tabIds;\n    let titleIds;\n\n    // determine if we are using `tab` based or `index` based tab identifiers.\n    if (this.tabs.some((el) => el.tab) || this.titles.some((el) => el.tab)) {\n      // if we are using `tab` based identifiers sort by `tab` to account for\n      // possible out of order tabs and get the id of each tab\n      tabIds = this.tabs.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n      titleIds = this.titles.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n    } else {\n      // if we are using index based tabs then the `<calcite-tab>` and\n      // `<calcite-tab-title>` might have been rendered out of order so the\n      // order of `this.tabs` and `this.titles` might not reflect the DOM state,\n      // and might not match each other so we need to get the index of all the\n      // tabs and titles in the DOM order to match them up as a source of truth\n      const tabDomIndexes = await Promise.all(this.tabs.map((el) => el.getTabIndex()));\n\n      const titleDomIndexes = await Promise.all(this.titles.map((el) => el.getTabIndex()));\n\n      // once we have the DOM order as a source of truth we can build the\n      // matching tabIds and titleIds arrays\n      tabIds = tabDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = this.tabs[registryIndex].id;\n        return ids;\n      }, []);\n\n      titleIds = titleDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = this.titles[registryIndex].id;\n        return ids;\n      }, []);\n    }\n\n    // pass all our new aria information to each `<calcite-tab>` and\n    // `<calcite-tab-title>` which will check if they can update their internal\n    // `controlled` or `labeledBy` states and re-render if necessary\n    this.tabs.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n    this.titles.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n  }\n}\n"],"mappings":"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"}