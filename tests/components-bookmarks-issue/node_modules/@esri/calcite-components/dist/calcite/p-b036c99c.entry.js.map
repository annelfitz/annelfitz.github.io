{"version":3,"names":["SLOTS","dropdownTrigger","dropdownCss","Dropdown","this","items","groups","mutationObserver","createObserver","updateItems","resizeObserver","entries","resizeObserverCallback","openTransitionProp","guid","defaultAssignedElements","slotChangeHandler","event","target","assignedElements","flatten","setFilteredPlacements","el","flipPlacements","filteredFlipPlacements","filterComputedPlacements","updateTriggers","triggers","reposition","map","group","Array","from","querySelectorAll","reduce","previousValue","currentValue","updateSelectedItems","forEach","item","scale","updateGroups","filter","matches","entry","referenceEl","setDropdownWidth","scrollerEl","setMaxScrollerHeight","referenceElWidth","clientWidth","style","minWidth","maxScrollerHeight","getMaxScrollerHeight","maxHeight","setScrollerAndTransitionEl","observe","transitionEl","setReferenceEl","connectFloatingUI","floatingEl","setFloatingEl","keyDownHandler","composedPath","includes","defaultPrevented","key","open","closeCalciteDropdown","preventDefault","shiftKey","isActivationKey","openCalciteDropdown","focusOnFirstActiveOrFirstItem","getFocusableElement","getTraversableItems","find","selected","toggleOpenEnd","removeEventListener","addEventListener","defaultMenuPlacement","openHandler","onToggleOpenCloseComponent","disabled","handleDisabledChange","value","flipPlacementsHandler","maxItemsHandler","overlayPositioningHandler","placementHandler","handlePropsChange","setFocus","componentFocusable","focus","connectedCallback","childList","subtree","connectInteractive","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnect","disconnectInteractive","disconnectFloatingUI","render","h","Host","InteractiveContainer","class","id","onClick","onKeyDown","ref","toAriaBoolean","name","onSlotchange","FloatingCSS","animation","animationActive","role","delayed","placement","overlayPositioning","type","closeCalciteDropdownOnClick","isPrimaryPointerButton","closeCalciteDropdownOnEvent","stopPropagation","closeCalciteDropdownOnOpenEvent","pointerEnterHandler","pointerLeaveHandler","hidden","calciteInternalDropdownItemKeyEvent","keyboardEvent","detail","traversableItems","updateTabIndexOfItems","focusElementInGroup","handleItemSelect","calciteDropdownSelect","emit","closeOnSelectDisabled","requestedDropdownGroup","selectionMode","onBeforeOpen","calciteDropdownBeforeOpen","onOpen","calciteDropdownOpen","onBeforeClose","calciteDropdownBeforeClose","onClose","calciteDropdownClose","selectedItems","maxItems","itemsToProcess","groupHeaderHeight","children","index","isNaN","offsetTop","offsetHeight","length","focusTrigger","focusElement","tabIndex","CSS","container","containerLink","containerMulti","containerSingle","containerNone","icon","iconEnd","iconStart","itemContent","link","dropdownGroupCss","DropdownGroup","groupPosition","getGroupPosition","groupTitle","dropdownSeparator","updateActiveItemOnChange","requestedDropdownItem","calciteInternalDropdownItemChange","prototype","indexOf","call","parentElement","dropdownItemCss","DropdownItem","initialize","href","label","iconFlipRtl","iconStartEl","flipRtl","getIconScale","contentNode","iconEndEl","slottedContent","contentEl","rel","childLink","itemRole","itemAria","emitRequestedItem","click","calciteInternalDropdownCloseRequest","parentEmittedChange","parentDropdownGroupEl","determineActiveItem","closest","calciteDropdownItemSelect","calciteInternalDropdownItemSelect"],"sources":["src/components/dropdown/resources.ts","src/components/dropdown/dropdown.scss?tag=calcite-dropdown&encapsulation=shadow","src/components/dropdown/dropdown.tsx","src/components/dropdown-item/resources.ts","src/components/dropdown-group/dropdown-group.scss?tag=calcite-dropdown-group&encapsulation=shadow","src/components/dropdown-group/dropdown-group.tsx","src/components/dropdown-item/dropdown-item.scss?tag=calcite-dropdown-item&encapsulation=shadow","src/components/dropdown-item/dropdown-item.tsx"],"sourcesContent":["export const SLOTS = {\n  dropdownTrigger: \"trigger\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-dropdown-width: Specifies the width of the component's wrapper.\n */\n\n:host {\n  @apply inline-block;\n}\n\n@include disabled();\n\n:host .calcite-dropdown-wrapper {\n  --calcite-floating-ui-z-index: theme(\"zIndex.dropdown\");\n  @include floatingUIContainer();\n  @include floatingUIWrapper();\n}\n\n@include floatingUIElemAnim(\".calcite-dropdown-wrapper\");\n:host([open]) .calcite-dropdown-wrapper {\n  @include floatingUIWrapperActive();\n}\n\n:host .calcite-dropdown-content {\n  @apply bg-foreground-1\n    w-auto\n    overflow-y-auto\n    overflow-x-hidden\n    max-h-menu;\n  inline-size: var(--calcite-dropdown-width);\n}\n.calcite-trigger-container {\n  @apply relative flex flex-auto h-full;\n  @include word-break;\n}\n\n@media (forced-colors: active) {\n  /* use real border since box-shadow is removed in high contrast mode */\n  :host([open]) .calcite-dropdown-wrapper {\n    border: 1px solid canvasText;\n  }\n}\n\n// width\n:host([width-scale=\"s\"]) {\n  --calcite-dropdown-width: theme(\"spacing.48\");\n}\n:host([width-scale=\"m\"]) {\n  --calcite-dropdown-width: theme(\"spacing.56\");\n}\n:host([width-scale=\"l\"]) {\n  --calcite-dropdown-width: theme(\"spacing.64\");\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { ItemKeyboardEvent } from \"./interfaces\";\n\nimport {\n  focusElement,\n  focusElementInGroup,\n  isPrimaryPointerButton,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultMenuPlacement,\n  disconnectFloatingUI,\n  EffectivePlacement,\n  filterComputedPlacements,\n  FloatingCSS,\n  FloatingUIComponent,\n  MenuPlacement,\n  OverlayPositioning,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { RequestedItem } from \"../dropdown-group/interfaces\";\nimport { Scale } from \"../interfaces\";\nimport { SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-dropdown-group` elements. Every `calcite-dropdown-item` must have a parent `calcite-dropdown-group`, even if the `groupTitle` property is not set.\n * @slot trigger - A slot for the element that triggers the `calcite-dropdown`.\n */\n@Component({\n  tag: \"calcite-dropdown\",\n  styleUrl: \"dropdown.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class Dropdown\n  implements InteractiveComponent, LoadableComponent, OpenCloseComponent, FloatingUIComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, displays and positions the component.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n\n    if (this.disabled) {\n      this.open = false;\n      return;\n    }\n\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, the component will remain open after a selection is made.\n   *\n   * If the `selectionMode` of the selected `calcite-dropdown-item`'s containing `calcite-dropdown-group` is `\"none\"`, the component will always close.\n   *\n   */\n  @Prop({ reflect: true }) closeOnSelectDisabled = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(value: boolean): void {\n    if (!value) {\n      this.open = false;\n    }\n  }\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: EffectivePlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the maximum number of `calcite-dropdown-item`s to display before showing a scroller.\n   * Value must be greater than `0`, and does not include `groupTitle`'s from `calcite-dropdown-group`.\n   */\n  @Prop({ reflect: true }) maxItems = 0;\n\n  @Watch(\"maxItems\")\n  maxItemsHandler(): void {\n    this.setMaxScrollerHeight();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Determines where the component will be positioned relative to the container element.\n   *\n   * @default \"bottom-start\"\n   */\n  @Prop({ reflect: true }) placement: MenuPlacement = defaultMenuPlacement;\n\n  @Watch(\"placement\")\n  placementHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteDropdownItemElement[] = [];\n\n  /**\n   * Specifies the action to open the component from the container element.\n   */\n  @Prop({ reflect: true }) type: \"hover\" | \"click\" = \"click\";\n\n  /**\n   * Specifies the width of the component.\n   */\n  @Prop({ reflect: true }) widthScale: Scale;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  handlePropsChange(): void {\n    this.updateItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.setFilteredPlacements();\n    this.reposition(true);\n    if (this.open) {\n      this.openHandler();\n      onToggleOpenCloseComponent(this);\n    }\n    connectInteractive(this);\n    this.updateItems();\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.reposition(true);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectInteractive(this);\n    disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  render(): VNode {\n    const { open, guid } = this;\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            class=\"calcite-trigger-container\"\n            id={`${guid}-menubutton`}\n            onClick={this.openCalciteDropdown}\n            onKeyDown={this.keyDownHandler}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.setReferenceEl}\n          >\n            <slot\n              aria-controls={`${guid}-menu`}\n              aria-expanded={toAriaBoolean(open)}\n              aria-haspopup=\"menu\"\n              name={SLOTS.dropdownTrigger}\n              onSlotchange={this.updateTriggers}\n            />\n          </div>\n          <div\n            aria-hidden={toAriaBoolean(!open)}\n            class=\"calcite-dropdown-wrapper\"\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.setFloatingEl}\n          >\n            <div\n              aria-labelledby={`${guid}-menubutton`}\n              class={{\n                [\"calcite-dropdown-content\"]: true,\n                [FloatingCSS.animation]: true,\n                [FloatingCSS.animationActive]: open,\n              }}\n              id={`${guid}-menu`}\n              role=\"menu\"\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.setScrollerAndTransitionEl}\n            >\n              <slot onSlotchange={this.updateGroups} />\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl,\n        referenceEl,\n        overlayPositioning,\n        placement,\n        flipPlacements: filteredFlipPlacements,\n        type: \"menu\",\n      },\n      delayed,\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when a `calcite-dropdown-item`'s selection changes. */\n  @Event({ cancelable: false }) calciteDropdownSelect: EventEmitter<void>;\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteDropdownBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteDropdownClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteDropdownBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteDropdownOpen: EventEmitter<void>;\n\n  @Listen(\"pointerdown\", { target: \"window\" })\n  closeCalciteDropdownOnClick(event: PointerEvent): void {\n    if (\n      this.disabled ||\n      !isPrimaryPointerButton(event) ||\n      !this.open ||\n      event.composedPath().includes(this.el)\n    ) {\n      return;\n    }\n\n    this.closeCalciteDropdown(false);\n  }\n\n  @Listen(\"calciteInternalDropdownCloseRequest\")\n  closeCalciteDropdownOnEvent(event: Event): void {\n    this.closeCalciteDropdown();\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteDropdownOpen\", { target: \"window\" })\n  closeCalciteDropdownOnOpenEvent(event: Event): void {\n    if (event.composedPath().includes(this.el)) {\n      return;\n    }\n\n    this.open = false;\n  }\n\n  @Listen(\"pointerenter\")\n  pointerEnterHandler(): void {\n    if (this.disabled || this.type !== \"hover\") {\n      return;\n    }\n\n    this.openCalciteDropdown();\n  }\n\n  @Listen(\"pointerleave\")\n  pointerLeaveHandler(): void {\n    if (this.disabled || this.type !== \"hover\") {\n      return;\n    }\n\n    this.closeCalciteDropdown();\n  }\n\n  private getTraversableItems(): HTMLCalciteDropdownItemElement[] {\n    return this.items.filter((item) => !item.disabled && !item.hidden);\n  }\n\n  @Listen(\"calciteInternalDropdownItemKeyEvent\")\n  calciteInternalDropdownItemKeyEvent(event: CustomEvent<ItemKeyboardEvent>): void {\n    const { keyboardEvent } = event.detail;\n    const target = keyboardEvent.target as HTMLCalciteDropdownItemElement;\n    const traversableItems = this.getTraversableItems();\n\n    switch (keyboardEvent.key) {\n      case \"Tab\":\n        this.open = false;\n        this.updateTabIndexOfItems(target);\n        break;\n      case \"ArrowDown\":\n        focusElementInGroup(traversableItems, target, \"next\");\n        break;\n      case \"ArrowUp\":\n        focusElementInGroup(traversableItems, target, \"previous\");\n        break;\n      case \"Home\":\n        focusElementInGroup(traversableItems, target, \"first\");\n        break;\n      case \"End\":\n        focusElementInGroup(traversableItems, target, \"last\");\n        break;\n    }\n\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalDropdownItemSelect\")\n  handleItemSelect(event: CustomEvent<RequestedItem>): void {\n    this.updateSelectedItems();\n    event.stopPropagation();\n    this.calciteDropdownSelect.emit();\n    if (\n      !this.closeOnSelectDisabled ||\n      event.detail.requestedDropdownGroup.selectionMode === \"none\"\n    ) {\n      this.closeCalciteDropdown();\n    }\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDropdownElement;\n\n  filteredFlipPlacements: EffectivePlacement[];\n\n  private items: HTMLCalciteDropdownItemElement[] = [];\n\n  private groups: HTMLCalciteDropdownGroupElement[] = [];\n\n  /** trigger elements */\n  private triggers: HTMLElement[];\n\n  floatingEl: HTMLDivElement;\n\n  referenceEl: HTMLDivElement;\n\n  private scrollerEl: HTMLDivElement;\n\n  mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n\n  resizeObserver = createObserver(\"resize\", (entries) => this.resizeObserverCallback(entries));\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  guid = `calcite-dropdown-${guid()}`;\n\n  defaultAssignedElements: Element[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  slotChangeHandler = (event: Event): void => {\n    this.defaultAssignedElements = (event.target as HTMLSlotElement).assignedElements({\n      flatten: true,\n    });\n\n    this.updateItems();\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterComputedPlacements(flipPlacements, el)\n      : null;\n  };\n\n  updateTriggers = (event: Event): void => {\n    this.triggers = (event.target as HTMLSlotElement).assignedElements({\n      flatten: true,\n    }) as HTMLElement[];\n\n    this.reposition(true);\n  };\n\n  updateItems = (): void => {\n    this.items = this.groups\n      .map((group) => Array.from(group?.querySelectorAll(\"calcite-dropdown-item\")))\n      .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n    this.updateSelectedItems();\n\n    this.reposition(true);\n\n    this.items.forEach((item) => (item.scale = this.scale));\n  };\n\n  updateGroups = (event: Event): void => {\n    const groups = (event.target as HTMLSlotElement)\n      .assignedElements({ flatten: true })\n      .filter((el) => el?.matches(\"calcite-dropdown-group\")) as HTMLCalciteDropdownGroupElement[];\n\n    this.groups = groups;\n\n    this.updateItems();\n  };\n\n  resizeObserverCallback = (entries: ResizeObserverEntry[]): void => {\n    entries.forEach((entry) => {\n      const { target } = entry;\n      if (target === this.referenceEl) {\n        this.setDropdownWidth();\n      } else if (target === this.scrollerEl) {\n        this.setMaxScrollerHeight();\n      }\n    });\n  };\n\n  setDropdownWidth = (): void => {\n    const { referenceEl, scrollerEl } = this;\n    const referenceElWidth = referenceEl?.clientWidth;\n\n    if (!referenceElWidth || !scrollerEl) {\n      return;\n    }\n\n    scrollerEl.style.minWidth = `${referenceElWidth}px`;\n  };\n\n  setMaxScrollerHeight = (): void => {\n    const { scrollerEl } = this;\n    if (!scrollerEl) {\n      return;\n    }\n\n    this.reposition(true);\n    const maxScrollerHeight = this.getMaxScrollerHeight();\n    scrollerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : \"\";\n    this.reposition(true);\n  };\n\n  setScrollerAndTransitionEl = (el: HTMLDivElement): void => {\n    this.resizeObserver.observe(el);\n    this.scrollerEl = el;\n\n    this.transitionEl = el;\n  };\n\n  onBeforeOpen(): void {\n    this.calciteDropdownBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteDropdownOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteDropdownBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteDropdownClose.emit();\n  }\n\n  setReferenceEl = (el: HTMLDivElement): void => {\n    this.referenceEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    this.resizeObserver.observe(el);\n  };\n\n  setFloatingEl = (el: HTMLDivElement): void => {\n    this.floatingEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (!event.composedPath().includes(this.referenceEl)) {\n      return;\n    }\n\n    const { defaultPrevented, key } = event;\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (this.open) {\n      if (key === \"Escape\") {\n        this.closeCalciteDropdown();\n        event.preventDefault();\n        return;\n      } else if (event.shiftKey && key === \"Tab\") {\n        this.closeCalciteDropdown();\n        event.preventDefault();\n        return;\n      }\n    }\n\n    if (isActivationKey(key)) {\n      this.openCalciteDropdown();\n      event.preventDefault();\n    } else if (key === \"Escape\") {\n      this.closeCalciteDropdown();\n      event.preventDefault();\n    }\n  };\n\n  private updateSelectedItems(): void {\n    this.selectedItems = this.items.filter((item) => item.selected);\n  }\n\n  private getMaxScrollerHeight(): number {\n    const { maxItems, items } = this;\n    let itemsToProcess = 0;\n    let maxScrollerHeight = 0;\n    let groupHeaderHeight: number;\n\n    this.groups.forEach((group) => {\n      if (maxItems > 0 && itemsToProcess < maxItems) {\n        Array.from(group.children).forEach((item: HTMLCalciteDropdownItemElement, index) => {\n          if (index === 0) {\n            if (isNaN(groupHeaderHeight)) {\n              groupHeaderHeight = item.offsetTop;\n            }\n\n            maxScrollerHeight += groupHeaderHeight;\n          }\n\n          if (itemsToProcess < maxItems) {\n            maxScrollerHeight += item.offsetHeight;\n            itemsToProcess += 1;\n          }\n        });\n      }\n    });\n\n    return items.length > maxItems ? maxScrollerHeight : 0;\n  }\n\n  private closeCalciteDropdown(focusTrigger = true) {\n    this.open = false;\n\n    if (focusTrigger) {\n      focusElement(this.triggers[0]);\n    }\n  }\n\n  private focusOnFirstActiveOrFirstItem = (): void => {\n    this.getFocusableElement(\n      this.getTraversableItems().find((item) => item.selected) || this.items[0],\n    );\n  };\n\n  private getFocusableElement(item: HTMLCalciteDropdownItemElement): void {\n    if (!item) {\n      return;\n    }\n\n    focusElement(item);\n  }\n\n  private toggleOpenEnd = (): void => {\n    this.focusOnFirstActiveOrFirstItem();\n    this.el.removeEventListener(\"calciteDropdownOpen\", this.toggleOpenEnd);\n  };\n\n  private openCalciteDropdown = () => {\n    this.open = !this.open;\n    if (this.open) {\n      this.el.addEventListener(\"calciteDropdownOpen\", this.toggleOpenEnd);\n    }\n  };\n\n  private updateTabIndexOfItems(target: HTMLCalciteDropdownItemElement): void {\n    this.items.forEach((item: HTMLCalciteDropdownItemElement) => {\n      item.tabIndex = target !== item ? -1 : 0;\n    });\n  }\n}\n","export const CSS = {\n  container: \"container\",\n  containerLink: \"container--link\",\n  containerMulti: \"container--multi-selection\",\n  containerSingle: \"container--single-selection\",\n  containerNone: \"container--none-selection\",\n  icon: \"dropdown-item-icon\",\n  iconEnd: \"dropdown-item-icon-end\",\n  iconStart: \"dropdown-item-icon-start\",\n  itemContent: \"dropdown-item-content\",\n  link: \"dropdown-link\",\n};\n",":host {\n  // we make the host relative, so items can consistently compute their offsetTop based on the group\n  @apply block relative;\n}\n\n.container {\n  text-align: start;\n}\n\n.container--s {\n  @apply text-n2h;\n  .dropdown-title {\n    @apply p-2;\n  }\n}\n\n.container--m {\n  @apply text-n1h;\n  .dropdown-title {\n    @apply p-3;\n  }\n}\n\n.container--l {\n  @apply text-0h;\n  .dropdown-title {\n    @apply p-4;\n  }\n}\n\n.dropdown-title {\n  @apply border-color-3\n  text-color-2\n  -mb-px\n  block\n  cursor-default\n  break-words\n  border-0\n  border-b\n  border-solid\n  font-bold;\n}\n\n.dropdown-separator {\n  @apply block h-px;\n  background-color: theme(\"borderColor.color.3\");\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport { RequestedItem } from \"./interfaces\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS } from \"../dropdown-item/resources\";\n\n/**\n * @slot - A slot for adding `calcite-dropdown-item`s.\n */\n@Component({\n  tag: \"calcite-dropdown-group\",\n  styleUrl: \"dropdown-group.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class DropdownGroup {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies and displays a group title. */\n  @Prop({ reflect: true }) groupTitle: string;\n\n  /**\n   * Specifies the size of the component inherited from the parent `calcite-dropdown`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection, and\n   *\n   * `\"none\"` does not allow any selections.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\"none\" | \"single\" | \"multiple\", SelectionMode> =\n    \"single\";\n\n  @Watch(\"selectionMode\")\n  handlePropsChange(): void {\n    this.updateItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDropdownItemChange: EventEmitter<RequestedItem>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.updateItems();\n    this.mutationObserver?.observe(this.el, { childList: true });\n  }\n\n  componentWillLoad(): void {\n    this.groupPosition = this.getGroupPosition();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  render(): VNode {\n    const groupTitle = this.groupTitle ? (\n      <span aria-hidden=\"true\" class=\"dropdown-title\">\n        {this.groupTitle}\n      </span>\n    ) : null;\n\n    const dropdownSeparator =\n      this.groupPosition > 0 ? <div class=\"dropdown-separator\" role=\"separator\" /> : null;\n\n    return (\n      <Host aria-label={this.groupTitle} role=\"group\">\n        <div\n          class={{\n            [CSS.container]: true,\n            [`${CSS.container}--${this.scale}`]: true,\n          }}\n        >\n          {dropdownSeparator}\n          {groupTitle}\n          <slot />\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalDropdownItemSelect\")\n  updateActiveItemOnChange(event: CustomEvent): void {\n    this.requestedDropdownGroup = event.detail.requestedDropdownGroup;\n    this.requestedDropdownItem = event.detail.requestedDropdownItem;\n    this.calciteInternalDropdownItemChange.emit({\n      requestedDropdownGroup: this.requestedDropdownGroup,\n      requestedDropdownItem: this.requestedDropdownItem,\n    });\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDropdownGroupElement;\n\n  /** position of group within a dropdown */\n  private groupPosition: number;\n\n  /** the requested group */\n  private requestedDropdownGroup: HTMLCalciteDropdownGroupElement;\n\n  /** the requested item */\n  private requestedDropdownItem: HTMLCalciteDropdownItemElement;\n\n  private updateItems = (): void => {\n    Array.from(this.el.querySelectorAll(\"calcite-dropdown-item\")).forEach(\n      (item) => (item.selectionMode = this.selectionMode),\n    );\n  };\n\n  mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private getGroupPosition(): number {\n    return Array.prototype.indexOf.call(\n      this.el.parentElement.querySelectorAll(\"calcite-dropdown-group\"),\n      this.el,\n    );\n  }\n}\n",".container--s {\n  @apply text-n2h py-1;\n  padding-inline-end: theme(\"padding.2\");\n  padding-inline-start: theme(\"padding.6\");\n}\n\n.container--m {\n  @apply text-n1h py-2;\n  padding-inline-end: theme(\"padding.3\");\n  padding-inline-start: theme(\"padding.8\");\n}\n\n.container--l {\n  @apply text-0h py-2.5;\n  padding-inline-end: theme(\"padding.4\");\n  padding-inline-start: theme(\"padding.10\");\n}\n\n// none-selection mode\n.container--s.container--none-selection {\n  padding-inline-start: theme(\"padding.1\");\n  & .dropdown-link {\n    padding-inline-start: theme(\"padding.0\");\n  }\n}\n\n.container--m.container--none-selection {\n  padding-inline-start: theme(\"padding.2\");\n  & .dropdown-link {\n    padding-inline-start: theme(\"padding.0\");\n  }\n}\n\n.container--l.container--none-selection {\n  padding-inline-start: theme(\"padding.3\");\n  & .dropdown-link {\n    padding-inline-start: theme(\"padding.0\");\n  }\n}\n\n@mixin itemStyling {\n  @apply text-color-3\n    relative\n    flex\n    flex-grow\n    cursor-pointer\n    items-center\n    no-underline\n    duration-150\n    ease-in-out;\n}\n\n:host {\n  @apply relative\n    flex\n    flex-grow\n    items-center;\n}\n\n.container {\n  @include itemStyling;\n  text-align: start;\n}\n\n.dropdown-item-content {\n  @apply flex-auto py-0.5;\n  padding-inline-end: theme(\"margin.auto\");\n  padding-inline-start: theme(\"margin.1\");\n}\n\n//focus\n:host,\n.container--link a {\n  @apply focus-base;\n}\n:host(:focus) {\n  @apply focus-inset outline-none;\n}\n\n// when used as link move styling anchor\n.container--link {\n  @apply p-0;\n  & a {\n    @include itemStyling;\n  }\n}\n\n.container--s .dropdown-link {\n  @apply text-n2h py-1;\n  padding-inline-end: theme(\"padding.2\");\n  padding-inline-start: theme(\"padding.6\");\n}\n\n.container--m .dropdown-link {\n  @apply text-n1h py-2;\n  padding-inline-end: theme(\"padding.3\");\n  padding-inline-start: theme(\"padding.8\");\n}\n\n.container--l .dropdown-link {\n  @apply text-0h py-3;\n  padding-inline-end: theme(\"padding.4\");\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host(:hover:not([disabled])),\n:host(:active:not([disabled])) {\n  .container {\n    @apply bg-foreground-2 text-color-1 no-underline;\n  }\n\n  .container--link .dropdown-link {\n    @apply text-color-1;\n  }\n}\n\n:host(:active:not([disabled])) .container {\n  @apply bg-foreground-3;\n}\n\n:host(:focus) .container {\n  @apply text-color-1 no-underline;\n}\n\n:host([selected]) .container:not(.container--none-selection),\n:host([selected]) .container--link .dropdown-link {\n  @apply text-color-1 font-medium;\n  & calcite-icon {\n    color: theme(\"backgroundColor.brand\");\n  }\n}\n\n// item icon\n.dropdown-item-icon {\n  @apply absolute\n    opacity-0\n    duration-150\n    ease-in-out;\n  transform: scale(0.9);\n}\n\n.container--s .dropdown-item-icon {\n  inset-inline-start: theme(\"spacing.1\");\n}\n\n.container--m .dropdown-item-icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n.container--l .dropdown-item-icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host(:hover:not([disabled])) .dropdown-item-icon {\n  color: theme(\"borderColor.color.1\");\n  @apply opacity-100;\n}\n\n:host([selected]) .dropdown-item-icon {\n  color: theme(\"backgroundColor.brand\");\n  @apply opacity-100;\n}\n\n// icon start & end\n.container--s {\n  .dropdown-item-icon-start {\n    margin-inline-end: theme(\"margin.2\");\n    margin-inline-start: theme(\"margin.1\");\n  }\n  .dropdown-item-icon-end {\n    margin-inline-start: theme(\"margin.2\");\n  }\n}\n\n.container--m {\n  .dropdown-item-icon-start {\n    margin-inline-end: theme(\"margin.3\");\n    margin-inline-start: theme(\"margin.1\");\n  }\n  .dropdown-item-icon-end {\n    margin-inline-start: theme(\"margin.3\");\n  }\n}\n\n.container--l {\n  .dropdown-item-icon-start {\n    margin-inline-end: theme(\"margin.4\");\n    margin-inline-start: theme(\"margin.1\");\n  }\n  .dropdown-item-icon-end {\n    margin-inline-start: theme(\"margin.4\");\n  }\n}\n\n@include base-component();\n@include disabled();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { ItemKeyboardEvent } from \"../dropdown/interfaces\";\nimport { RequestedItem } from \"../dropdown-group/interfaces\";\nimport { FlipContext, Scale, SelectionMode } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { getIconScale } from \"../../utils/component\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-dropdown-item\",\n  styleUrl: \"dropdown-item.scss\",\n  shadow: true,\n})\nexport class DropdownItem implements InteractiveComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   *  Specifies the URL of the linked resource, which can be set as an absolute or relative path.\n   *\n   * Determines if the component will render as an anchor.\n   */\n  @Prop({ reflect: true }) href: string;\n\n  /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: string;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: string;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** Specifies the relationship to the linked document defined in `href`. */\n  @Prop({ reflect: true }) rel: string;\n\n  /** When `true`, the component is selected. */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /** Specifies the frame or window to open the linked document. */\n  @Prop({ reflect: true }) target: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component is selected. */\n  @Event({ cancelable: false }) calciteDropdownItemSelect: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDropdownItemSelect: EventEmitter<RequestedItem>;\n\n  /** @internal */\n  @Event({ cancelable: false })\n  calciteInternalDropdownItemKeyEvent: EventEmitter<ItemKeyboardEvent>;\n\n  /** @internal */\n  @Event({ cancelable: false }) calciteInternalDropdownCloseRequest: EventEmitter<void>;\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.el?.focus();\n  }\n\n  /**\n   * Specifies the selection mode inherited from `calcite-dropdown-group`, defaults to `single`:\n   * - `multiple` allows any number of selected items,\n   * - `single` allows only one selection (default),\n   * - `none` doesn't allow for any selection.\n   *\n   * @internal\n   */\n  @Prop() selectionMode: Extract<\"none\" | \"single\" | \"multiple\", SelectionMode> = \"single\";\n\n  /**\n   * Specifies the size of the component inherited from `calcite-dropdown`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n    this.initialize();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    this.initialize();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    const { href, selectionMode, label, iconFlipRtl, scale } = this;\n\n    const iconStartEl = (\n      <calcite-icon\n        class={CSS.iconStart}\n        flipRtl={iconFlipRtl === \"start\" || iconFlipRtl === \"both\"}\n        icon={this.iconStart}\n        scale={getIconScale(this.scale)}\n      />\n    );\n    const contentNode = (\n      <span class={CSS.itemContent}>\n        <slot />\n      </span>\n    );\n    const iconEndEl = (\n      <calcite-icon\n        class={CSS.iconEnd}\n        flipRtl={iconFlipRtl === \"end\" || iconFlipRtl === \"both\"}\n        icon={this.iconEnd}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const slottedContent =\n      this.iconStart && this.iconEnd\n        ? [iconStartEl, contentNode, iconEndEl]\n        : this.iconStart\n          ? [iconStartEl, contentNode]\n          : this.iconEnd\n            ? [contentNode, iconEndEl]\n            : contentNode;\n\n    const contentEl = !href ? (\n      slottedContent\n    ) : (\n      <a\n        aria-label={label}\n        class={CSS.link}\n        href={href}\n        rel={this.rel}\n        tabIndex={-1}\n        target={this.target}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.childLink = el)}\n      >\n        {slottedContent}\n      </a>\n    );\n\n    const itemRole = href\n      ? null\n      : selectionMode === \"single\"\n        ? \"menuitemradio\"\n        : selectionMode === \"multiple\"\n          ? \"menuitemcheckbox\"\n          : \"menuitem\";\n\n    const itemAria = selectionMode !== \"none\" ? toAriaBoolean(this.selected) : null;\n    const { disabled } = this;\n\n    return (\n      <Host\n        aria-checked={itemAria}\n        aria-label={!href ? label : \"\"}\n        role={itemRole}\n        tabIndex={disabled ? -1 : 0}\n      >\n        <InteractiveContainer disabled={disabled}>\n          <div\n            class={{\n              [CSS.container]: true,\n              [CSS.containerLink]: !!href,\n              [`${CSS.container}--${scale}`]: true,\n              [CSS.containerMulti]: selectionMode === \"multiple\",\n              [CSS.containerSingle]: selectionMode === \"single\",\n              [CSS.containerNone]: selectionMode === \"none\",\n            }}\n          >\n            {selectionMode !== \"none\" ? (\n              <calcite-icon\n                class={CSS.icon}\n                icon={selectionMode === \"multiple\" ? \"check\" : \"bullet-point\"}\n                scale={getIconScale(this.scale)}\n              />\n            ) : null}\n            {contentEl}\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"click\") onClick(): void {\n    this.emitRequestedItem();\n  }\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    switch (event.key) {\n      case \" \":\n      case \"Enter\":\n        this.emitRequestedItem();\n        if (this.href) {\n          this.childLink.click();\n        }\n        event.preventDefault();\n        break;\n      case \"Escape\":\n        this.calciteInternalDropdownCloseRequest.emit();\n        event.preventDefault();\n        break;\n      case \"Tab\":\n        this.calciteInternalDropdownItemKeyEvent.emit({ keyboardEvent: event });\n        break;\n      case \"ArrowUp\":\n      case \"ArrowDown\":\n      case \"Home\":\n      case \"End\":\n        event.preventDefault();\n        this.calciteInternalDropdownItemKeyEvent.emit({ keyboardEvent: event });\n        break;\n    }\n  }\n\n  @Listen(\"calciteInternalDropdownItemChange\", { target: \"body\" })\n  updateActiveItemOnChange(event: CustomEvent): void {\n    const parentEmittedChange = event.composedPath().includes(this.parentDropdownGroupEl);\n\n    if (parentEmittedChange) {\n      this.requestedDropdownGroup = event.detail.requestedDropdownGroup;\n      this.requestedDropdownItem = event.detail.requestedDropdownItem;\n      this.determineActiveItem();\n    }\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDropdownItemElement;\n\n  /** id of containing group */\n  private parentDropdownGroupEl: HTMLCalciteDropdownGroupElement;\n\n  /** requested group */\n  private requestedDropdownGroup: HTMLCalciteDropdownGroupElement;\n\n  /** requested item */\n  private requestedDropdownItem: HTMLCalciteDropdownItemElement;\n\n  /** if href is requested, track the rendered child link*/\n  private childLink: HTMLAnchorElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private initialize(): void {\n    this.parentDropdownGroupEl = this.el.closest(\"calcite-dropdown-group\");\n    if (this.selectionMode === \"none\") {\n      this.selected = false;\n    }\n  }\n\n  private determineActiveItem(): void {\n    switch (this.selectionMode) {\n      case \"multiple\":\n        if (this.el === this.requestedDropdownItem) {\n          this.selected = !this.selected;\n        }\n        break;\n\n      case \"single\":\n        if (this.el === this.requestedDropdownItem) {\n          this.selected = true;\n        } else if (this.requestedDropdownGroup === this.parentDropdownGroupEl) {\n          this.selected = false;\n        }\n        break;\n\n      case \"none\":\n        this.selected = false;\n        break;\n    }\n  }\n\n  private emitRequestedItem(): void {\n    this.calciteDropdownItemSelect.emit();\n    this.calciteInternalDropdownItemSelect.emit({\n      requestedDropdownItem: this.el,\n      requestedDropdownGroup: this.parentDropdownGroupEl,\n    });\n  }\n}\n"],"mappings":"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"}