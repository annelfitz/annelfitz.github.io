{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","value","configurable","writable","_extends","assign","hasOwnProperty","call","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_objectWithoutProperties","sourceSymbolKeys","propertyIsEnumerable","version","userAgent","pattern","window","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","el","event","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","document","nodeType","parentNode","closest","ctx","includeCTX","R_SPACE","toggleClass","name","state","classList","className","replace","css","prop","val","style","defaultView","getComputedStyle","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","find","tagName","list","getElementsByTagName","n","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","d","getContentRect","rect","paddingLeft","paddingTop","paddingRight","paddingBottom","clientWidth","clientHeight","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","visible","getChild","childNum","options","includeDragEl","currentChild","children","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","indexOfObject","arr","Number","includeSelf","elem","gotSelf","scrollWidth","scrollHeight","elemCSS","overflowX","overflowY","body","extend","dst","src","isRectEqual","rect1","rect2","Math","round","_throttleTimeout","throttle","callback","ms","args","_this","setTimeout","cancelThrottle","clearTimeout","scrollBy","x","y","Polymer","$","jQuery","Zepto","dom","cloneNode","expando","Date","getTime","AnimationStateManager","animationStates","animationCallbackId","captureAnimationState","animation","slice","child","fromRect","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","splice","animateAll","animating","animationTime","time","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","calculateRealTime","animate","max","animationResetTimer","currentRect","duration","translateX","translateY","animatingX","animatingY","forRepaintDummy","repaint","easing","animated","offsetWidth","sqrt","pow","plugins","defaults","initializeByDefault","PluginManager","mount","plugin","option","p","pluginName","concat","pluginEvent","eventName","sortable","evt","eventCanceled","cancel","eventNameGlobal","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","dispatchEvent","_ref","rootEl","targetEl","cloneEl","toEl","fromEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","originalEvent","putSortable","extraEventProperties","onName","charAt","substr","CustomEvent","bubbles","cancelable","createEvent","initEvent","to","from","item","pullMode","lastPutMode","undefined","allEventProperties","_excluded","data","bind","dragEl","parentEl","ghostEl","nextEl","lastDownEl","cloneHidden","dragStarted","moved","activeSortable","active","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","activeGroup","awaitingDragStarted","ignoreNextClick","sortables","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","pastFirstInvertThresh","isCircumstantialInvert","targetMoveDistance","ghostRelativeParent","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","touchingSideChild2","clear","_dragElInRowColumn","dragRect","targetRect","vertical","dragElS1Opp","dragElS2Opp","dragElOppLength","targetS1Opp","targetS2Opp","targetOppLength","_detectNearestEmptySortable","ret","some","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_prepareGroup","toFn","pull","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","clientX","clientY","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","toString","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","contains","_getDirection","type","touch","pointerType","originalTarget","shadowRoot","path","composedPath","_saveInputCheckedState","button","isContentEditable","criteria","trim","_prepareDragStart","ownerDocument","dragStartFn","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDraggable","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","_nextTick","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","getRootNode","inserted","ghostMatrix","relativeScrollOffset","dx","dy","b","c","cssMatrix","appendChild","removeAttribute","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","isOwner","canSort","fromSortable","completedFired","dragOverEvent","extra","axis","completed","onMove","after","_onMove","changed","insertion","_showClone","_ignoreWhileAnimating","elLastChild","_ghostIsLast","_ghostIsFirst","firstChild","targetBeforeFirstSwap","differentLevel","differentRowCol","side1","scrolledPastTop","scrollBefore","_getSwapDirection","sibling","dragIndex","nextElementSibling","moveVector","_unsilent","_offMoveEvents","_offUpEvents","clearInterval","_cancelNextTick","removeChild","save","checked","handleEvent","_globalDragOver","toArray","order","getAttribute","_generateId","useAnimation","items","id","set","closest$1","destroy","Array","querySelectorAll","dropEffect","willInsertAfter","onMoveFn","retVal","draggedRect","related","relatedRect","firstElRect","sortableContentRect","spacer","lastElRect","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","_getInsertDirection","str","href","sum","charCodeAt","root","inputs","idx","utils","is","nextTick","cancelNextTick","detectDirection","element","_len","_key","create","autoScrolls","scrollEl","scrollRootEl","scrolling","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","AutoScrollPlugin","AutoScroll","scroll","forceAutoScrollFallback","scrollSensitivity","scrollSpeed","bubbleScroll","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","_ref2","dragOverBubble","drop","clearPointerElemChangedInterval","clearAutoScrolls","nulling","autoScroll","ogElemScroller","newElem","pid","isFallback","sens","speed","scrollThisInstance","scrollCustomFn","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","toSortable","changedTouches","onSpill","Revert","startIndex","dragStart","_ref3","Remove","_ref4","parentSortable","sortableComponentSet","Set","CSS","connectSortableComponent","component","disconnectSortableComponent","add","handleSelector","dragSelector","canPull","canPut","onStart","dragState","onGlobalDragStart","onDragStart","onEnd","onGlobalDragEnd","onDragEnd","onSort","onDragSort","delete","dragActive","dragEnabled"],"sources":["../../node_modules/sortablejs/modular/sortable.esm.js","src/utils/sortableComponent.ts"],"sourcesContent":["/**!\n * Sortable 1.15.1\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.15.1\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\nfunction matches( /**HTMLElement*/el, /**String*/selector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n  return false;\n}\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\nfunction closest( /**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n  return null;\n}\nvar R_SPACE = /\\s+/g;\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\nfunction css(el, prop, val) {\n  var style = el && el.style;\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n    } while (!selfOnly && (el = el.parentNode));\n  }\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n  return matrixFn && new matrixFn(appliedTransforms);\n}\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n      i = 0,\n      n = list.length;\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n    return list;\n  }\n  return [];\n}\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n\n/**\r\n * Returns the \"bounding client rect\" of given element\r\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n */\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode;\n\n    // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect();\n\n          // Set relative to edges of padding box of container\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n      } while (container = container.parentNode);\n    }\n  }\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n      scaleX = elMatrix && elMatrix.a,\n      scaleY = elMatrix && elMatrix.d;\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n/**\r\n * Returns the content rect of the element (bounding rect minus border and padding)\r\n * @param {HTMLElement} el \r\n */\nfunction getContentRect(el) {\n  var rect = getRect(el);\n  var paddingLeft = parseInt(css(el, 'padding-left')),\n    paddingTop = parseInt(css(el, 'padding-top')),\n    paddingRight = parseInt(css(el, 'padding-right')),\n    paddingBottom = parseInt(css(el, 'padding-bottom'));\n  rect.top += paddingTop + parseInt(css(el, 'border-top-width'));\n  rect.left += paddingLeft + parseInt(css(el, 'border-left-width'));\n  // Client Width/Height includes padding only\n  rect.width = el.clientWidth - paddingLeft - paddingRight;\n  rect.height = el.clientHeight - paddingTop - paddingBottom;\n  rect.bottom = rect.top + rect.height;\n  rect.right = rect.left + rect.width;\n  return rect;\n}\n\n/**\r\n * Checks if a side of an element is scrolled past a side of its parents\r\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n */\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n    elSideVal = getRect(el)[elSide];\n\n  /* jshint boss:true */\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n      visible = void 0;\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n  return false;\n}\n\n/**\r\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n * and non-draggable elements\r\n * @param  {HTMLElement} el       The parent element\r\n * @param  {Number} childNum      The index of the child\r\n * @param  {Object} options       Parent Sortable's options\r\n * @return {HTMLElement}          The child at index childNum, or null if not found\r\n */\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n    i = 0,\n    children = el.children;\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n      currentChild++;\n    }\n    i++;\n  }\n  return null;\n}\n\n/**\r\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n * @param  {HTMLElement} el       Parent element\r\n * @param  {selector} selector    Any other elements that should be ignored\r\n * @return {HTMLElement}          The last child, ignoring ghostEl\r\n */\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n  return last || null;\n}\n\n/**\r\n * Returns the index of an element within its parent for a selected set of\r\n * elements\r\n * @param  {HTMLElement} el\r\n * @param  {selector} selector\r\n * @return {number}\r\n */\nfunction index(el, selector) {\n  var index = 0;\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n\n  /* jshint boss:true */\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n  return index;\n}\n\n/**\r\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n * The value is returned in real pixels.\r\n * @param  {HTMLElement} el\r\n * @return {Array}             Offsets in the format of [left, top]\r\n */\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n    offsetTop = 0,\n    winScroller = getWindowScrollingElement();\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n        scaleX = elMatrix.a,\n        scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n  return [offsetLeft, offsetTop];\n}\n\n/**\r\n * Returns the index of the object within the given array\r\n * @param  {Array} arr   Array that may or may not hold the object\r\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n * @return {Number}      The index of the object in the array, or -1\r\n */\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n  return -1;\n}\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n  } while (elem = elem.parentNode);\n  return getWindowScrollingElement();\n}\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n  return dst;\n}\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\nvar _throttleTimeout;\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n        _this = this;\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n    animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect);\n\n        // If animating: compensate for current animation\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n      var animating = false,\n        animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n          target = state.target,\n          fromRect = target.fromRect,\n          toRect = getRect(target),\n          prevFromRect = target.prevFromRect,\n          prevToRect = target.prevToRect,\n          animatingRect = state.rect,\n          targetMatrix = matrix(target, true);\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n        target.toRect = toRect;\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) &&\n          // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        }\n\n        // if fromRect != toRect: animate\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n          if (!time) {\n            time = _this.options.animation;\n          }\n          _this.animate(target, animatingRect, toRect, time);\n        }\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n          scaleX = elMatrix && elMatrix.a,\n          scaleY = elMatrix && elMatrix.d,\n          translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n          translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\nfunction repaint(target) {\n  return target.offsetWidth;\n}\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n    this.eventCanceled = false;\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return;\n      // Fire global events if it exists in this sortable\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n\n      // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized;\n\n      // Add default options from plugin\n      _extends(defaults, initialized.defaults);\n    });\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return;\n\n      // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n    rootEl = _ref.rootEl,\n    name = _ref.name,\n    targetEl = _ref.targetEl,\n    cloneEl = _ref.cloneEl,\n    toEl = _ref.toEl,\n    fromEl = _ref.fromEl,\n    oldIndex = _ref.oldIndex,\n    newIndex = _ref.newIndex,\n    oldDraggableIndex = _ref.oldDraggableIndex,\n    newDraggableIndex = _ref.newDraggableIndex,\n    originalEvent = _ref.originalEvent,\n    putSortable = _ref.putSortable,\n    extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n    options = sortable.options,\n    onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    originalEvent = _ref.evt,\n    data = _objectWithoutProperties(_ref, _excluded);\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\nvar dragEl,\n  parentEl,\n  ghostEl,\n  rootEl,\n  nextEl,\n  lastDownEl,\n  cloneEl,\n  cloneHidden,\n  oldIndex,\n  newIndex,\n  oldDraggableIndex,\n  newDraggableIndex,\n  activeGroup,\n  putSortable,\n  awaitingDragStarted = false,\n  ignoreNextClick = false,\n  sortables = [],\n  tapEvt,\n  touchEvt,\n  lastDx,\n  lastDy,\n  tapDistanceLeft,\n  tapDistanceTop,\n  moved,\n  lastTarget,\n  lastDirection,\n  pastFirstInvertThresh = false,\n  isCircumstantialInvert = false,\n  targetMoveDistance,\n  // For positioning ghost absolutely\n  ghostRelativeParent,\n  ghostRelativeParentInitialScroll = [],\n  // (left, top)\n\n  _silent = false,\n  savedInputChecked = [];\n\n/** @const */\nvar documentExists = typeof document !== 'undefined',\n  PositionGhostAbsolutely = IOS,\n  CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n  // This will not pass for IE9, because IE9 DnD only works on anchors\n  supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n  supportCssPointerEvents = function () {\n    if (!documentExists) return;\n    // false when <= IE11\n    if (IE11OrLess) {\n      return false;\n    }\n    var el = document.createElement('x');\n    el.style.cssText = 'pointer-events:auto';\n    return el.style.pointerEvents === 'auto';\n  }(),\n  _detectDirection = function _detectDirection(el, options) {\n    var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n    if (elCSS.display === 'flex') {\n      return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n    }\n    if (elCSS.display === 'grid') {\n      return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n    }\n    if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n      var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n      return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n    }\n    return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n  },\n  _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n    var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n    return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n  },\n  /**\r\n   * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n   * @param  {Number} x      X position\r\n   * @param  {Number} y      Y position\r\n   * @return {HTMLElement}   Element of the first found nearest Sortable\r\n   */\n  _detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n    var ret;\n    sortables.some(function (sortable) {\n      var threshold = sortable[expando].options.emptyInsertThreshold;\n      if (!threshold || lastChild(sortable)) return;\n      var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n      if (insideHorizontally && insideVertically) {\n        return ret = sortable;\n      }\n    });\n    return ret;\n  },\n  _prepareGroup = function _prepareGroup(options) {\n    function toFn(value, pull) {\n      return function (to, from, dragEl, evt) {\n        var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n        if (value == null && (pull || sameGroup)) {\n          // Default pull value\n          // Default pull and put value if same group\n          return true;\n        } else if (value == null || value === false) {\n          return false;\n        } else if (pull && value === 'clone') {\n          return value;\n        } else if (typeof value === 'function') {\n          return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n        } else {\n          var otherGroup = (pull ? to : from).options.group.name;\n          return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n        }\n      };\n    }\n    var group = {};\n    var originalGroup = options.group;\n    if (!originalGroup || _typeof(originalGroup) != 'object') {\n      originalGroup = {\n        name: originalGroup\n      };\n    }\n    group.name = originalGroup.name;\n    group.checkPull = toFn(originalGroup.pull, true);\n    group.checkPut = toFn(originalGroup.put);\n    group.revertClone = originalGroup.revertClone;\n    options.group = group;\n  },\n  _hideGhostForTarget = function _hideGhostForTarget() {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, 'display', 'none');\n    }\n  },\n  _unhideGhostForTarget = function _unhideGhostForTarget() {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, 'display', '');\n    }\n  };\n\n// #1184 fix - Prevent click event on fallback if dragged but item not changed position\nif (documentExists && !ChromeForAndroid) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n\n/**\r\n * @class  Sortable\r\n * @param  {HTMLElement}  el\r\n * @param  {Object}       [options]\r\n */\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n  this.el = el; // root element\n  this.options = options = _extends({}, options);\n\n  // Export instance\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults);\n\n  // Set default options\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n  _prepareGroup(options);\n\n  // Bind all private methods\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  }\n\n  // Setup drag mode\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  }\n\n  // Bind events\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n  sortables.push(this.el);\n\n  // Restore sorting\n  options.store && options.store.get && this.sort(options.store.get(this) || []);\n\n  // Add animation state manager\n  _extends(this, AnimationStateManager());\n}\nSortable.prototype = /** @lends Sortable.prototype */{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart( /** Event|TouchEvent */evt) {\n    if (!evt.cancelable) return;\n    var _this = this,\n      el = this.el,\n      options = this.options,\n      preventOnFilter = options.preventOnFilter,\n      type = evt.type,\n      touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n      target = (touch || evt).target,\n      originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n      filter = options.filter;\n    _saveInputCheckedState(el);\n\n    // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n    if (dragEl) {\n      return;\n    }\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    }\n\n    // cancel dnd if original target is content editable\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    // Safari ignores further event handling after mousedown\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n    target = closest(target, options.draggable, el, false);\n    if (target && target.animated) {\n      return;\n    }\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    }\n\n    // Get the index of the dragged element within its parent\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable);\n\n    // Check filter\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    }\n\n    // Prepare `dragstart`\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart( /** Event */evt, /** Touch */touch, /** HTMLElement */target) {\n    var _this = this,\n      el = _this.el,\n      options = _this.options,\n      ownerDocument = el.ownerDocument,\n      dragStartFn;\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n          return;\n        }\n        // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n        _this._disableDelayedDragEvents();\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        }\n\n        // Bind the events: dragstart/dragend\n        _this._triggerDragStart(evt, touch);\n\n        // Drag start event\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        });\n\n        // Chosen item\n        toggleClass(dragEl, options.chosenClass, true);\n      };\n\n      // Disable \"draggable\"\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop);\n\n      // Make dragEl draggable (must be before delay for FireFox)\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n      pluginEvent('delayStart', this, {\n        evt: evt\n      });\n\n      // Delay is impossible for native DnD in Edge or IE\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n          return;\n        }\n        // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler( /** TouchEvent|PointerEvent **/e) {\n    var touch = e.touches ? e.touches[0] : e;\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart( /** Event */evt, /** Touch */touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n    awaitingDragStarted = false;\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n      var options = this.options;\n\n      // Apply effect\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost();\n\n      // Drag start event\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n      _hideGhostForTarget();\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        const host = target.getRootNode().host;\n        if (host) {\n          target = host;\n        }\n        if (target === parent) break;\n        parent = target;\n      }\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n          target = parent; // store last element\n        }\n        /* jshint boss:true */ while (parent = parent.parentNode);\n      }\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove( /**TouchEvent*/evt) {\n    if (tapEvt) {\n      var options = this.options,\n        fallbackTolerance = options.fallbackTolerance,\n        fallbackOffset = options.fallbackOffset,\n        touch = evt.touches ? evt.touches[0] : evt,\n        ghostMatrix = ghostEl && matrix(ghostEl, true),\n        scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n        scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n        relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n        dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n        dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1);\n\n      // only set the status to dragging, when we are actually dragging\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n        this._onDragStart(evt, true);\n      }\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n        rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n        options = this.options;\n\n      // Position absolutely\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl);\n\n      // Set transform-origin\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart( /**Event*/evt, /**boolean*/fallback) {\n    var _this = this;\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n      return;\n    }\n    pluginEvent('setupClone', this);\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.removeAttribute(\"id\");\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n      this._hideClone();\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    }\n\n    // #1143: IFrame support workaround\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n      _this._hideClone();\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true);\n\n    // Set proper drop events\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n      on(document, 'drop', _this);\n\n      // #1276 fix:\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver( /**Event*/evt) {\n    var el = this.el,\n      target = evt.target,\n      dragRect,\n      targetRect,\n      revert,\n      options = this.options,\n      group = options.group,\n      activeSortable = Sortable.active,\n      isOwner = activeGroup === group,\n      canSort = options.sort,\n      fromSortable = putSortable || activeSortable,\n      vertical,\n      _this = this,\n      completedFired = false;\n    if (_silent) return;\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    }\n\n    // Capture animation state\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n      _this.captureAnimationState();\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    }\n\n    // Return invocation when dragEl is inserted (or completed)\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        }\n\n        // Animation\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      }\n\n      // Null lastTarget if it is not inside a previously swapped element\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      }\n\n      // no bubbling and not fallback\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n\n        // Do not detect for empty insert if already inserted\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    }\n\n    // Call when dragEl has been inserted\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n    ignoreNextClick = false;\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n      if (revert) {\n        parentEl = rootEl; // actualization\n        capture();\n        this._hideClone();\n        dragOverEvent('revert');\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n        return completed(true);\n      }\n      var elLastChild = lastChild(el, options.draggable);\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        }\n\n        // if there is a last element, it is the target\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n        if (target) {\n          targetRect = getRect(target);\n        }\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          if (elLastChild && elLastChild.nextSibling) {\n            // the last draggable element is not the last node\n            el.insertBefore(dragEl, elLastChild.nextSibling);\n          } else {\n            el.appendChild(dragEl);\n          }\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n        target = firstChild;\n        targetRect = getRect(target);\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n          targetBeforeFirstSwap,\n          differentLevel = dragEl.parentNode !== el,\n          differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n          side1 = vertical ? 'top' : 'left',\n          scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n          scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        }\n        // If dragEl is already beside target: Do not insert\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n          after = false;\n        after = direction === 1;\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          }\n\n          // Undo chrome's scroll adjustment (has no effect on other browsers)\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n          parentEl = dragEl.parentNode; // actualization\n\n          // must be done before animation\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n          changed();\n          return completed(true);\n        }\n      }\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop( /**Event*/evt) {\n    var el = this.el,\n      options = this.options;\n\n    // Get the index of the dragged element within its parent\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode;\n\n    // Get again after plugin event\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    if (Sortable.eventCanceled) {\n      this._nulling();\n      return;\n    }\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n    _cancelNextTick(this.cloneId);\n    _cancelNextTick(this._dragStartId);\n\n    // Unbind events\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n    this._offMoveEvents();\n    this._offUpEvents();\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n    css(dragEl, 'transform', '');\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n        _disableDraggable(dragEl);\n        dragEl.style['will-change'] = '';\n\n        // Remove classes\n        // ghostClass is added in dragStarted\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n        toggleClass(dragEl, this.options.chosenClass, false);\n\n        // Drag stop event\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            // Remove event\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n\n            // drag from one list and drop into another\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          });\n\n          // Save sorting\n          this.save();\n        }\n      }\n    }\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent( /**Event*/evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n        break;\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n          _globalDragOver(evt);\n        }\n        break;\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n  /**\r\n   * Serializes the item into an array of string.\r\n   * @returns {String[]}\r\n   */\n  toArray: function toArray() {\n    var order = [],\n      el,\n      children = this.el.children,\n      i = 0,\n      n = children.length,\n      options = this.options;\n    for (; i < n; i++) {\n      el = children[i];\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n    return order;\n  },\n  /**\r\n   * Sorts the elements according to the array.\r\n   * @param  {String[]}  order  order of the items\r\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n      rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n  /**\r\n   * Save the current sorting\r\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n  /**\r\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n   * @param   {HTMLElement}  el\r\n   * @param   {String}       [selector]  default: `options.draggable`\r\n   * @returns {HTMLElement|null}\r\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n  /**\r\n   * Set/get option\r\n   * @param   {string} name\r\n   * @param   {*}      [value]\r\n   * @returns {*}\r\n   */\n  option: function option(name, value) {\n    var options = this.options;\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n  /**\r\n   * Destroy\r\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    }\n    // Remove draggable attributes\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n    this._onDrop();\n    this._disableDelayedDragEvents();\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n      return;\n    }\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return;\n\n      // show clone at dragEl or original position\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\nfunction _globalDragOver( /**Event*/evt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n  evt.cancelable && evt.preventDefault();\n}\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n    sortable = fromEl[expando],\n    onMoveFn = sortable.options.onMove,\n    retVal;\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n  return retVal;\n}\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\nfunction _unsilent() {\n  _silent = false;\n}\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var firstElRect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var sortableContentRect = getContentRect(sortable.el);\n  var spacer = 10;\n  return vertical ? evt.clientX < sortableContentRect.left - spacer || evt.clientY < firstElRect.top && evt.clientX < firstElRect.right : evt.clientY < sortableContentRect.top - spacer || evt.clientY < firstElRect.bottom && evt.clientX < firstElRect.left;\n}\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var lastElRect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var sortableContentRect = getContentRect(sortable.el);\n  var spacer = 10;\n  return vertical ? evt.clientX > sortableContentRect.right + spacer || evt.clientY > lastElRect.bottom && evt.clientX > lastElRect.left : evt.clientY > sortableContentRect.bottom + spacer || evt.clientX > lastElRect.right && evt.clientY > lastElRect.top;\n}\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n    targetLength = vertical ? targetRect.height : targetRect.width,\n    targetS1 = vertical ? targetRect.top : targetRect.left,\n    targetS2 = vertical ? targetRect.bottom : targetRect.right,\n    invert = false;\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n  invert = invert || invertSwap;\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n  return 0;\n}\n\n/**\r\n * Gets the direction dragEl must be swapped relative to target in order to make it\r\n * seem that dragEl has been \"inserted\" into that element's position\r\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n * @return {Number}                   Direction dragEl must be swapped\r\n */\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n\n/**\r\n * Generate id\r\n * @param   {HTMLElement} el\r\n * @returns {String}\r\n * @private\r\n */\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n    i = str.length,\n    sum = 0;\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n  return sum.toString(36);\n}\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n}\n\n// Fixed #973:\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n}\n\n// Export utils\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n\n/**\r\n * Get the Sortable instance of an element\r\n * @param  {HTMLElement} element The element\r\n * @return {Sortable|undefined}         The instance of Sortable\r\n */\nSortable.get = function (element) {\n  return element[expando];\n};\n\n/**\r\n * Mount a plugin to Sortable\r\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\r\n */\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n\n/**\r\n * Create sortable instance\r\n * @param {HTMLElement}  el\r\n * @param {Object}      [options]\r\n */\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n};\n\n// Export\nSortable.version = version;\n\nvar autoScrolls = [],\n  scrollEl,\n  scrollRootEl,\n  scrolling = false,\n  lastAutoScrollX,\n  lastAutoScrollY,\n  touchEvt$1,\n  pointerElemChangedInterval;\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    };\n\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n        y = (evt.touches ? evt.touches[0] : evt).clientY,\n        elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt;\n\n      // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback);\n\n        // Listener for pointer element change\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval();\n          // Detect for pointer elem change, emulating native DnD behaviour\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n    y = (evt.touches ? evt.touches[0] : evt).clientY,\n    sens = options.scrollSensitivity,\n    speed = options.scrollSpeed,\n    winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n    scrollCustomFn;\n\n  // New scroll root, set scrollEl\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n  var layersOut = 0;\n  var currentParent = scrollEl;\n  do {\n    var el = currentParent,\n      rect = getRect(el),\n      top = rect.top,\n      bottom = rect.bottom,\n      left = rect.left,\n      right = rect.right,\n      width = rect.width,\n      height = rect.height,\n      canScrollX = void 0,\n      canScrollY = void 0,\n      scrollWidth = el.scrollWidth,\n      scrollHeight = el.scrollHeight,\n      elCSS = css(el),\n      scrollPosX = el.scrollLeft,\n      scrollPosY = el.scrollTop;\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n          }\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n    putSortable = _ref.putSortable,\n    dragEl = _ref.dragEl,\n    activeSortable = _ref.activeSortable,\n    dispatchSortableEvent = _ref.dispatchSortableEvent,\n    hideGhostForTarget = _ref.hideGhostForTarget,\n    unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\nfunction Revert() {}\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n      putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n    this.sortable.animateAll();\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\nfunction Remove() {}\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n      putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n        target = _ref2.target,\n        onMove = _ref2.onMove,\n        activeSortable = _ref2.activeSortable,\n        changed = _ref2.changed,\n        cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n        options = this.options;\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n        putSortable = _ref3.putSortable,\n        dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n    p2 = n2.parentNode,\n    i1,\n    i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n  multiDragClones = [],\n  lastMultiDragSelect,\n  // for selection with modifier key down (SHIFT)\n  multiDragSortable,\n  initialFolding = false,\n  // Initial multi-drag fold when drag started\n  folding = false,\n  // Folding any other time\n  dragStarted = false,\n  dragEl$1,\n  clonesFromRect,\n  clonesHidden;\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n    if (!sortable.options.avoidImplicitDeselect) {\n      if (sortable.options.supportPointer) {\n        on(document, 'pointerup', this._deselectMultiDrag);\n      } else {\n        on(document, 'mouseup', this._deselectMultiDrag);\n        on(document, 'touchend', this._deselectMultiDrag);\n      }\n    }\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      avoidImplicitDeselect: false,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n        cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n      sortable._hideClone();\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n        rootEl = _ref3.rootEl,\n        dispatchSortableEvent = _ref3.dispatchSortableEvent,\n        cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n        rootEl = _ref4.rootEl,\n        cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n      var sortable = _ref5.sortable,\n        cloneNowHidden = _ref5.cloneNowHidden,\n        cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      });\n\n      // Sort multi-drag elements\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n\n        sortable.captureAnimationState();\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        }\n\n        // Remove all auxiliary multidrag items from el, if sorting enabled\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n        completed = _ref8.completed,\n        cancel = _ref8.cancel;\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n        rootEl = _ref9.rootEl,\n        sortable = _ref9.sortable,\n        dragRect = _ref9.dragRect;\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n        isOwner = _ref10.isOwner,\n        insertion = _ref10.insertion,\n        activeSortable = _ref10.activeSortable,\n        parentEl = _ref10.parentEl,\n        putSortable = _ref10.putSortable;\n      var options = this.options;\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n        initialFolding = false;\n        // If leaving sort:false root, or already folding - Fold to new location\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute);\n\n            // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        }\n\n        // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n            activeSortable._showClone(sortable);\n\n            // Unfold animation for clones if showing from hidden\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n        isOwner = _ref11.isOwner,\n        activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n        rootEl = _ref12.rootEl,\n        parentEl = _ref12.parentEl,\n        sortable = _ref12.sortable,\n        dispatchSortableEvent = _ref12.dispatchSortableEvent,\n        oldIndex = _ref12.oldIndex,\n        putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n        children = parentEl.children;\n\n      // Multi-drag selection\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          });\n\n          // Modifier activated, select from last to dragEl\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n              currentIndex = index(dragEl$1);\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvent: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          });\n        }\n      }\n\n      // Multi-drag drop\n      if (dragStarted && this.isMultiDrag) {\n        folding = false;\n        // Do not \"unfold\" after around dragEl if reverted\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n            multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect;\n\n                  // Prepare unfold animation\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            }\n\n            // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n              multiDragIndex++;\n            });\n\n            // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n              if (update) {\n                dispatchSortableEvent('update');\n                dispatchSortableEvent('sort');\n              }\n            }\n          }\n\n          // Must be done after capturing individual rects (scroll bar)\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n        multiDragSortable = toSortable;\n      }\n\n      // Remove clones if necessary\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return;\n\n      // Only deselect if selection is in this sortable\n      if (multiDragSortable !== this.sortable) return;\n\n      // Only deselect if target is not item in this sortable\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return;\n\n      // Only deselect if left click\n      if (evt && evt.button !== 0) return;\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvent: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n          multiDragSortable = sortable;\n        }\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n          index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n      var oldIndicies = [],\n        newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        });\n\n        // multiDragElements will already be sorted if folding\n        var newIndex;\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n        return key;\n      }\n    }\n  });\n}\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n","import Sortable from \"sortablejs\";\nconst sortableComponentSet = new Set<SortableComponent>();\n\nexport interface DragDetail {\n  toEl: HTMLElement;\n  fromEl: HTMLElement;\n  dragEl: HTMLElement;\n  newIndex: number;\n  oldIndex: number;\n}\n\nexport const CSS = {\n  ghostClass: \"calcite-sortable--ghost\",\n  chosenClass: \"calcite-sortable--chosen\",\n  dragClass: \"calcite-sortable--drag\",\n  fallbackClass: \"calcite-sortable--fallback\",\n};\n\n/**\n * Defines interface for components with sorting functionality.\n */\nexport interface SortableComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * When `true`, dragging is enabled.\n   */\n  dragEnabled: boolean;\n\n  /**\n   * Specifies which items inside the element should be draggable.\n   */\n  dragSelector?: string;\n\n  /**\n   * The list's group identifier.\n   */\n  group?: string;\n\n  /**\n   * The selector for the handle elements.\n   */\n  handleSelector: string;\n\n  /**\n   * The Sortable instance.\n   */\n  sortable: Sortable;\n\n  /**\n   * Whether the element can move from the list.\n   */\n  canPull: (detail: DragDetail) => boolean;\n\n  /**\n   * Whether the element can be added from another list.\n   */\n  canPut: (detail: DragDetail) => boolean;\n\n  /**\n   * Called when any sortable component drag starts. For internal use only. Any public drag events should emit within `onDragStart()`.\n   */\n  onGlobalDragStart: () => void;\n\n  /**\n   * Called when any sortable component drag ends. For internal use only. Any public drag events should emit within `onDragEnd()`.\n   */\n  onGlobalDragEnd: () => void;\n\n  /**\n   * Called when a component's dragging ends.\n   */\n  onDragEnd: (detail: DragDetail) => void;\n\n  /**\n   * Called when a component's dragging starts.\n   */\n  onDragStart: (detail: DragDetail) => void;\n\n  /**\n   * Called by any change to the list (add / update / remove).\n   */\n  onDragSort: (detail: DragDetail) => void;\n}\n\nexport interface SortableComponentItem {\n  /**\n   * When `true`, the item is not draggable.\n   *\n   *\n   * Notes:\n   *\n   * This property should use the @Prop decorator and reflect.\n   * This property should be used to set the `calcite-handle` disabled property.\n   */\n  dragDisabled: boolean;\n}\n\n/**\n * Helper to keep track of a SortableComponent. This should be called in the `connectedCallback` lifecycle method as well as any other method necessary to rebuild the sortable instance.\n *\n * @param {SortableComponent} component - The sortable component.\n */\nexport function connectSortableComponent(component: SortableComponent): void {\n  disconnectSortableComponent(component);\n  sortableComponentSet.add(component);\n\n  const dataIdAttr = \"id\";\n  const { group, handleSelector: handle, dragSelector: draggable } = component;\n\n  component.sortable = Sortable.create(component.el, {\n    dataIdAttr,\n    ...CSS,\n    ...(!!draggable && { draggable }),\n    ...(!!group && {\n      group: {\n        name: group,\n        ...(!!component.canPull && {\n          pull: (to, from, dragEl, { newIndex, oldIndex }) =>\n            component.canPull({ toEl: to.el, fromEl: from.el, dragEl, newIndex, oldIndex }),\n        }),\n        ...(!!component.canPut && {\n          put: (to, from, dragEl, { newIndex, oldIndex }) =>\n            component.canPut({ toEl: to.el, fromEl: from.el, dragEl, newIndex, oldIndex }),\n        }),\n      },\n    }),\n    handle,\n    filter: \"[drag-disabled]\",\n    onStart: ({ from: fromEl, item: dragEl, to: toEl, newIndex, oldIndex }) => {\n      dragState.active = true;\n      onGlobalDragStart();\n      component.onDragStart({ fromEl, dragEl, toEl, newIndex, oldIndex });\n    },\n    onEnd: ({ from: fromEl, item: dragEl, to: toEl, newIndex, oldIndex }) => {\n      dragState.active = false;\n      onGlobalDragEnd();\n      component.onDragEnd({ fromEl, dragEl, toEl, newIndex, oldIndex });\n    },\n    onSort: ({ from: fromEl, item: dragEl, to: toEl, newIndex, oldIndex }) => {\n      component.onDragSort({ fromEl, dragEl, toEl, newIndex, oldIndex });\n    },\n  });\n}\n\n/**\n * Helper to remove track of a SortableComponent. This should be called in the `disconnectedCallback` lifecycle method.\n *\n * @param {SortableComponent} component - The sortable component.\n */\nexport function disconnectSortableComponent(component: SortableComponent): void {\n  sortableComponentSet.delete(component);\n\n  component.sortable?.destroy();\n  component.sortable = null;\n}\n\nconst dragState: { active: boolean } = { active: false };\n\n/**\n * Helper to determine if dragging is currently active.\n *\n * @param component The sortable component.\n * @returns {boolean} a boolean value.\n */\nexport function dragActive(component: SortableComponent): boolean {\n  return component.dragEnabled && dragState.active;\n}\n\nfunction onGlobalDragStart(): void {\n  Array.from(sortableComponentSet).forEach((component) => component.onGlobalDragStart());\n}\n\nfunction onGlobalDragEnd(): void {\n  Array.from(sortableComponentSet).forEach((component) => component.onGlobalDragEnd());\n}\n"],"mappings":"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"}