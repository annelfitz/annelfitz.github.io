{"version":3,"names":["isFirefox","test","getUserAgentString","disabledElementToParent","WeakMap","interceptedClick","disabled","this","HTMLElement","prototype","click","call","onPointerDown","event","interactiveElement","target","get","preventDefault","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","updateHostInteraction","component","el","setAttribute","contains","document","activeElement","blur","blockInteraction","restoreInteraction","removeAttribute","currentParent","getParentElement","trackedParent","removeInteractionListeners","set","addInteractionListeners","element","addEventListener","forEach","parentElement","delete","removeEventListener","connectInteractive","disconnectInteractive","CSS","container","InteractiveContainer","children","h","class","inert"],"sources":["src/utils/interactive.tsx"],"sourcesContent":["import { getUserAgentString } from \"./browser\";\nimport { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\n// ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\nconst isFirefox = /firefox/i.test(getUserAgentString());\n\ntype ParentElement<T extends HTMLElement = HTMLElement> = T | null;\n\nconst disabledElementToParent: WeakMap<InteractiveHTMLElement, ParentElement> | null = isFirefox\n  ? new WeakMap()\n  : null;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  const { disabled } = interactiveElement;\n\n  if (disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n\n  if (isFirefox) {\n    const currentParent = getParentElement(component);\n    const trackedParent = disabledElementToParent.get(component.el);\n\n    if (trackedParent !== currentParent) {\n      removeInteractionListeners(trackedParent);\n      disabledElementToParent.set(component.el, currentParent);\n    }\n\n    addInteractionListeners(disabledElementToParent.get(component.el));\n    return;\n  }\n\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction getParentElement(component: InteractiveComponent): ParentElement {\n  return (\n    component.el.parentElement || component.el\n  ); /* assume element is host if it has no parent when connected */\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n\n  if (isFirefox) {\n    removeInteractionListeners(disabledElementToParent.get(component.el));\n    disabledElementToParent.delete(component.el);\n    return;\n  }\n\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\n/**\n * This utility helps disable components consistently in Firefox.\n *\n * It needs to be called in `connectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function connectInteractive(component: InteractiveComponent): void {\n  if (!component.disabled || !isFirefox) {\n    return;\n  }\n\n  blockInteraction(component);\n}\n\n/**\n * This utility restores interactivity to disabled components consistently in Firefox.\n *\n * It needs to be called in `disconnectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function disconnectInteractive(component: InteractiveComponent): void {\n  if (!isFirefox) {\n    return;\n  }\n\n  restoreInteraction(component);\n}\n\nexport interface InteractiveContainerOptions extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport function InteractiveContainer(\n  { disabled }: InteractiveContainerOptions,\n  children: VNode[],\n): FunctionalComponent {\n  return (\n    <div class={CSS.container} inert={disabled}>\n      {...children}\n    </div>\n  );\n}\n"],"mappings":";;;;;wEA6BA,MAAMA,EAAY,WAAWC,KAAKC,KAIlC,MAAMC,EAAiFH,EACnF,IAAII,QACJ,KAEJ,SAASC,IACP,MAAMC,SAAEA,GAAaC,KAErB,IAAKD,EAAU,CACbE,YAAYC,UAAUC,MAAMC,KAAKJ,K,CAErC,CAEA,SAASK,EAAcC,GACrB,MAAMC,EAAqBD,EAAME,OAEjC,GAAIf,IAAcG,EAAwBa,IAAIF,GAAqB,CACjE,M,CAGF,MAAMR,SAAEA,GAAaQ,EAErB,GAAIR,EAAU,CAEZO,EAAMI,gB,CAEV,CAEA,MAAMC,EAAqC,CAAC,YAAa,UAAW,SAEpE,SAASC,EAAoCN,GAC3C,MAAMC,EAAqBD,EAAME,OAEjC,GAAIf,IAAcG,EAAwBa,IAAIF,GAAqB,CACjE,M,CAKF,GAAIA,EAAmBR,SAAU,CAC/BO,EAAMO,2BACNP,EAAMI,gB,CAEV,CAEA,MAAMI,EAAqB,CAAEC,QAAS,M,SActBC,EAAsBC,GACpC,GAAIA,EAAUlB,SAAU,CACtBkB,EAAUC,GAAGC,aAAa,gBAAiB,QAE3C,GAAIF,EAAUC,GAAGE,SAASC,SAASC,eAAgB,CAChDD,SAASC,cAA8BC,M,CAG1CC,EAAiBP,GAEjB,M,CAGFQ,EAAmBR,GAEnBA,EAAUC,GAAGQ,gBAAgB,gBAC/B,CAEA,SAASF,EAAiBP,GACxBA,EAAUC,GAAGf,MAAQL,EAErB,GAAIL,EAAW,CACb,MAAMkC,EAAgBC,EAAiBX,GACvC,MAAMY,EAAgBjC,EAAwBa,IAAIQ,EAAUC,IAE5D,GAAIW,IAAkBF,EAAe,CACnCG,EAA2BD,GAC3BjC,EAAwBmC,IAAId,EAAUC,GAAIS,E,CAG5CK,EAAwBpC,EAAwBa,IAAIQ,EAAUC,KAC9D,M,CAGFc,EAAwBf,EAAUC,GACpC,CAEA,SAASc,EAAwBC,GAC/B,IAAKA,EAAS,CAEZ,M,CAGFA,EAAQC,iBAAiB,cAAe7B,EAAeS,GACvDH,EAAmCwB,SAAS7B,GAC1C2B,EAAQC,iBAAiB5B,EAAOM,EAAqCE,IAEzE,CAEA,SAASc,EAAiBX,GACxB,OACEA,EAAUC,GAAGkB,eAAiBnB,EAAUC,EAE5C,CAEA,SAASO,EAAmBR,UACnBA,EAAUC,GAAGf,MAEpB,GAAIV,EAAW,CACbqC,EAA2BlC,EAAwBa,IAAIQ,EAAUC,KACjEtB,EAAwByC,OAAOpB,EAAUC,IACzC,M,CAGFY,EAA2Bb,EAAUC,GACvC,CAEA,SAASY,EAA2BG,GAClC,IAAKA,EAAS,CAEZ,M,CAGFA,EAAQK,oBAAoB,cAAejC,EAAeS,GAC1DH,EAAmCwB,SAAS7B,GAC1C2B,EAAQK,oBAAoBhC,EAAOM,EAAqCE,IAE5E,C,SASgByB,EAAmBtB,GACjC,IAAKA,EAAUlB,WAAaN,EAAW,CACrC,M,CAGF+B,EAAiBP,EACnB,C,SASgBuB,EAAsBvB,GACpC,IAAKxB,EAAW,CACd,M,CAGFgC,EAAmBR,EACrB,CAMO,MAAMwB,EAAM,CACjBC,UAAW,yB,SAGGC,GACd5C,SAAEA,GACF6C,GAEA,OACEC,EAAA,OAAKC,MAAOL,EAAIC,UAAWK,MAAOhD,MAC5B6C,EAGV,Q"}