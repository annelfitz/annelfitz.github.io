{"file":"calcite-sortable-list.js","mappings":"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","names":[],"sources":["src/components/sortable-list/resources.ts","src/components/sortable-list/sortable-list.scss?tag=calcite-sortable-list&encapsulation=shadow","src/components/sortable-list/sortable-list.tsx"],"sourcesContent":["export const CSS = {\n  sortItem: \"sort-item\",\n  container: \"container\",\n  containerHorizontal: \"container--horizontal\",\n  containerVertical: \"container--vertical\",\n};\n",":host {\n  @apply flex;\n}\n\n@include disabled();\n\n.container {\n  @apply flex flex-auto;\n}\n\n.container--vertical {\n  @apply flex-col;\n}\n\n.container--horizontal {\n  @apply flex-row;\n}\n\n@include base-component();\n","import { Component, Element, Event, EventEmitter, h, Listen, Prop, VNode } from \"@stencil/core\";\nimport Sortable from \"sortablejs\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { createObserver } from \"../../utils/observers\";\nimport { HandleNudge } from \"../handle/interfaces\";\nimport { Layout } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport {\n  DragDetail,\n  connectSortableComponent,\n  disconnectSortableComponent,\n  SortableComponent,\n  dragActive,\n} from \"../../utils/sortableComponent\";\nimport { focusElement } from \"../../utils/dom\";\n\n/**\n * @slot - A slot for adding sortable items.\n */\n@Component({\n  tag: \"calcite-sortable-list\",\n  styleUrl: \"sortable-list.scss\",\n  shadow: true,\n})\nexport class SortableList implements InteractiveComponent, SortableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When provided, the method will be called to determine whether the element can  move from the list.\n   */\n  @Prop() canPull: (detail: DragDetail) => boolean;\n\n  /**\n   * When provided, the method will be called to determine whether the element can be added from another list.\n   */\n  @Prop() canPut: (detail: DragDetail) => boolean;\n\n  /**\n   * Specifies which items inside the element should be draggable.\n   */\n  @Prop({ reflect: true }) dragSelector?: string;\n\n  /**\n   * The list's group identifier.\n   *\n   * To drag elements from one list into another, both lists must have the same group value.\n   */\n  @Prop({ reflect: true }) group?: string;\n\n  /**\n   * The selector for the handle elements.\n   */\n  @Prop({ reflect: true }) handleSelector = \"calcite-handle\";\n\n  /**\n   * Indicates the horizontal or vertical orientation of the component.\n   */\n  @Prop({ reflect: true }) layout: Layout = \"vertical\";\n\n  /**\n   * When true, disabled prevents interaction. This state shows items with lower opacity/grayed.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When true, content is waiting to be loaded. This state shows a busy indicator.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSortableListElement;\n\n  items: Element[] = [];\n\n  mutationObserver = createObserver(\"mutation\", () => {\n    this.setUpSorting();\n  });\n\n  sortable: Sortable;\n\n  dragEnabled = true;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (dragActive(this)) {\n      return;\n    }\n\n    this.setUpSorting();\n    this.beginObserving();\n    connectInteractive(this);\n  }\n\n  disconnectedCallback(): void {\n    if (dragActive(this)) {\n      return;\n    }\n\n    disconnectInteractive(this);\n    disconnectSortableComponent(this);\n    this.endObserving();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Emitted when the order of the list has changed.\n   */\n  @Event({ cancelable: false }) calciteListOrderChange: EventEmitter<void>;\n\n  @Listen(\"calciteHandleNudge\")\n  calciteHandleNudgeNextHandler(event: CustomEvent<HandleNudge>): void {\n    this.handleNudgeEvent(event);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  onGlobalDragStart(): void {\n    this.endObserving();\n  }\n\n  onGlobalDragEnd(): void {\n    this.beginObserving();\n  }\n\n  onDragEnd(): void {}\n\n  onDragStart(): void {}\n\n  onDragSort(): void {\n    this.items = Array.from(this.el.children);\n    this.calciteListOrderChange.emit();\n  }\n\n  handleNudgeEvent(event: CustomEvent<HandleNudge>): void {\n    const { direction } = event.detail;\n\n    const handle = event\n      .composedPath()\n      .find((el: HTMLElement) => el.matches(this.handleSelector)) as HTMLElement;\n\n    const sortItem = this.items.find((item) => {\n      return item.contains(handle) || event.composedPath().includes(item);\n    });\n\n    const lastIndex = this.items.length - 1;\n    const startingIndex = this.items.indexOf(sortItem);\n    let appendInstead = false;\n    let buddyIndex: number;\n\n    if (direction === \"up\") {\n      if (startingIndex === 0) {\n        appendInstead = true;\n      } else {\n        buddyIndex = startingIndex - 1;\n      }\n    } else {\n      if (startingIndex === lastIndex) {\n        buddyIndex = 0;\n      } else if (startingIndex === lastIndex - 1) {\n        appendInstead = true;\n      } else {\n        buddyIndex = startingIndex + 2;\n      }\n    }\n\n    this.endObserving();\n\n    if (appendInstead) {\n      sortItem.parentElement.appendChild(sortItem);\n    } else {\n      sortItem.parentElement.insertBefore(sortItem, this.items[buddyIndex]);\n    }\n\n    this.items = Array.from(this.el.children);\n\n    this.beginObserving();\n    requestAnimationFrame(() => focusElement(handle));\n\n    if (\"selected\" in handle) {\n      handle.selected = true;\n    }\n  }\n\n  setUpSorting(): void {\n    this.items = Array.from(this.el.children);\n    connectSortableComponent(this);\n  }\n\n  beginObserving(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  endObserving(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { disabled, layout } = this;\n    const horizontal = layout === \"horizontal\" || false;\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        <div\n          class={{\n            [CSS.container]: true,\n            [CSS.containerVertical]: !horizontal,\n            [CSS.containerHorizontal]: horizontal,\n          }}\n        >\n          <slot />\n        </div>\n      </InteractiveContainer>\n    );\n  }\n}\n"],"version":3}