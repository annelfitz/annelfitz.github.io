{"file":"calcite-color-picker.js","mappings":"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","names":["color","Color"],"sources":["src/components/color-picker/color-picker.scss?tag=calcite-color-picker&encapsulation=shadow","src/components/color-picker/color-picker.tsx"],"sourcesContent":[":host {\n  @apply text-n2h inline-block font-normal;\n}\n\n@include disabled();\n\n:host([scale=\"s\"]) {\n  --calcite-color-picker-spacing: 8px;\n\n  .container {\n    inline-size: 160px;\n  }\n\n  .saved-colors {\n    @apply gap-1;\n    grid-template-columns: repeat(auto-fill, 20px);\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-color-picker-spacing: 12px;\n\n  .container {\n    inline-size: 272px;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-color-picker-spacing: 16px;\n\n  @apply text-n1h;\n\n  .container {\n    inline-size: 464px;\n  }\n\n  .section {\n    &:first-of-type {\n      padding-block-start: var(--calcite-color-picker-spacing);\n    }\n  }\n\n  .saved-colors {\n    grid-template-columns: repeat(auto-fill, 32px);\n  }\n\n  .control-section {\n    @apply flex-nowrap items-baseline;\n  }\n\n  .control-section {\n    @apply flex-wrap;\n  }\n\n  .color-hex-options {\n    @apply flex\n      flex-shrink\n      flex-col\n      justify-around;\n  }\n\n  .color-mode-container {\n    flex-shrink: 3;\n  }\n}\n\n.container {\n  @apply bg-foreground-1;\n  display: inline-block;\n  border: 1px solid var(--calcite-color-border-1);\n}\n\n.control-and-scope {\n  @apply flex relative cursor-pointer touch-none;\n}\n\n.scope {\n  @apply text-n1\n    focus-base\n    absolute\n    z-default\n    rounded-full\n    bg-transparent\n    w-px\n    h-px\n    pointer-events-none;\n  &:focus {\n    @apply focus-outset;\n    outline-offset: 11px;\n  }\n}\n\n.hex-and-channels-group {\n  @apply w-full;\n}\n\n.hex-and-channels-group,\n.control-section {\n  @apply flex flex-row flex-wrap;\n}\n\n.section {\n  padding-block: 0 var(--calcite-color-picker-spacing);\n  padding-inline: var(--calcite-color-picker-spacing);\n\n  &:first-of-type {\n    padding-block-start: var(--calcite-color-picker-spacing);\n  }\n}\n\n.sliders {\n  @apply flex flex-col justify-between;\n  margin-inline-start: var(--calcite-color-picker-spacing);\n}\n\n.preview-and-sliders {\n  @apply flex items-center;\n  padding: var(--calcite-color-picker-spacing);\n}\n\n.color-hex-options,\n.section--split {\n  flex-grow: 1;\n}\n\n.header {\n  @apply text-color-1\n    flex\n    items-center\n    justify-between;\n}\n\n.color-mode-container {\n  padding-block-start: var(--calcite-color-picker-spacing);\n}\n\n.channels {\n  @apply flex gap-y-0.5;\n}\n\n.channel {\n  &[data-channel-index=\"3\"] {\n    inline-size: 159px;\n  }\n}\n\n:host([scale=\"s\"]) {\n  .channels {\n    @apply flex-wrap;\n  }\n\n  .channel {\n    flex-basis: 30%;\n    flex-grow: 1;\n\n    &[data-channel-index=\"3\"] {\n      inline-size: unset;\n      margin-inline-start: unset;\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  .channel {\n    &[data-channel-index=\"3\"] {\n      inline-size: 131px;\n    }\n  }\n}\n\n.saved-colors {\n  @apply grid gap-2;\n  padding-block-start: var(--calcite-color-picker-spacing);\n  grid-template-columns: repeat(auto-fill, 24px);\n}\n\n.saved-colors-buttons {\n  display: flex;\n}\n\n.saved-color {\n  @include focus-style-base();\n\n  cursor: pointer;\n\n  &:focus {\n    @include focus-style-outset();\n  }\n\n  &:hover {\n    transition: outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;\n    outline: 2px solid var(--calcite-color-border-2);\n    outline-offset: 2px;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport Color from \"color\";\nimport { Channels, ColorMode, ColorValue, HSLA, HSVA, InternalColor, RGBA } from \"./interfaces\";\nimport { throttle } from \"lodash-es\";\nimport { Direction, getElementDir, isPrimaryPointerButton } from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport {\n  CSS,\n  DEFAULT_COLOR,\n  DEFAULT_STORAGE_KEY_PREFIX,\n  DIMENSIONS,\n  HSV_LIMITS,\n  HUE_LIMIT_CONSTRAINED,\n  OPACITY_LIMITS,\n  RGB_LIMITS,\n  SCOPE_SIZE,\n} from \"./resources\";\nimport {\n  alphaCompatible,\n  alphaToOpacity,\n  colorEqual,\n  CSSColorMode,\n  Format,\n  hexify,\n  normalizeAlpha,\n  normalizeColor,\n  normalizeHex,\n  opacityToAlpha,\n  parseMode,\n  SupportedMode,\n  toAlphaMode,\n  toNonAlphaMode,\n} from \"./utils\";\n\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n} from \"../../utils/locale\";\nimport { clamp, closeToRangeEdge, remap } from \"../../utils/math\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ColorPickerMessages } from \"./assets/color-picker/t9n\";\n\nconst throttleFor60FpsInMs = 16;\n\n@Component({\n  tag: \"calcite-color-picker\",\n  styleUrl: \"color-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class ColorPicker\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop({ reflect: true }) allowEmpty = false;\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  @Watch(\"alphaChannel\")\n  handleAlphaChannelChange(alphaChannel: boolean): void {\n    const { format } = this;\n\n    if (alphaChannel && format !== \"auto\" && !alphaCompatible(format)) {\n      console.warn(\n        `ignoring alphaChannel as the current format (${format}) does not support alpha`,\n      );\n      this.alphaChannel = false;\n    }\n  }\n\n  /** When `true`, hides the RGB/HSV channel inputs. */\n  @Prop() channelsDisabled = false;\n\n  /**\n   * Internal prop for advanced use-cases.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) color: InternalColor | null = DEFAULT_COLOR;\n\n  @Watch(\"color\")\n  handleColorChange(color: Color | null, oldColor: Color | null): void {\n    this.drawColorControls();\n    this.updateChannelsFromColor(color);\n    this.previousColor = oldColor;\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The format of `value`.\n   *\n   * When `\"auto\"`, the format will be inferred from `value` when set.\n   *\n   * @default \"auto\"\n   */\n  @Prop({ reflect: true }) format: Format = \"auto\";\n\n  @Watch(\"alphaChannel\")\n  @Watch(\"format\")\n  handleFormatOrAlphaChannelChange(): void {\n    this.setMode(this.format);\n    this.internalColorSet(this.color, false, \"internal\");\n  }\n\n  /**\n   * When `true`, hides the RGB/HSV channel inputs.\n   *\n   * @deprecated use `channelsDisabled` instead\n   */\n  @Prop({ reflect: true }) hideChannels = false;\n\n  /** When `true`, hides the hex input. */\n  @Prop() hexDisabled = false;\n\n  /**\n   * When `true`, hides the hex input.\n   *\n   * @deprecated use `hexDisabled` instead\n   */\n  @Prop({ reflect: true }) hideHex = false;\n\n  /**\n   * When `true`, hides the saved colors section.\n   *\n   * @deprecated use `savedDisabled` instead\n   */\n  @Prop({ reflect: true }) hideSaved = false;\n\n  /** When `true`, hides the saved colors section. */\n  @Prop({ reflect: true }) savedDisabled = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  handleScaleChange(scale: Scale = \"m\"): void {\n    this.updateDimensions(scale);\n    this.updateCanvasSize(\"all\");\n    this.drawColorControls();\n  }\n\n  /** Specifies the storage ID for colors. */\n  @Prop({ reflect: true }) storageId: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ColorPickerMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * The component's value, where the value can be a CSS color string, or a RGB, HSL or HSV object.\n   *\n   * The type will be preserved as the color is updated.\n   *\n   * @default \"#007ac2\"\n   * @see [CSS Color](https://developer.mozilla.org/en-US/docs/Web/CSS/color)\n   * @see [ColorValue](https://github.com/Esri/calcite-design-system/blob/main/src/components/color-picker/interfaces.ts#L10)\n   */\n  @Prop({ mutable: true }) value: ColorValue | null = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: ColorValue | null, oldValue: ColorValue | null): void {\n    const { allowEmpty, format } = this;\n    const checkMode = !allowEmpty || value;\n    let modeChanged = false;\n\n    if (checkMode) {\n      const nextMode = parseMode(value);\n\n      if (!nextMode || (format !== \"auto\" && nextMode !== format)) {\n        this.showIncompatibleColorWarning(value, format);\n        this.value = oldValue;\n        return;\n      }\n\n      modeChanged = this.mode !== nextMode;\n      this.setMode(nextMode, this.internalColorUpdateContext === null);\n    }\n\n    const dragging = this.activeCanvasInfo;\n\n    if (this.internalColorUpdateContext === \"initial\") {\n      return;\n    }\n\n    if (this.internalColorUpdateContext === \"user-interaction\") {\n      this.calciteColorPickerInput.emit();\n\n      if (!dragging) {\n        this.calciteColorPickerChange.emit();\n      }\n      return;\n    }\n\n    const color =\n      allowEmpty && !value\n        ? null\n        : Color(\n            value != null && typeof value === \"object\" && alphaCompatible(this.mode)\n              ? normalizeColor(value as RGBA | HSVA | HSLA)\n              : value,\n          );\n    const colorChanged = !colorEqual(color, this.color);\n\n    if (modeChanged || colorChanged) {\n      this.internalColorSet(\n        color,\n        this.alphaChannel && !(this.mode.endsWith(\"a\") || this.mode.endsWith(\"a-css\")),\n        \"internal\",\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Internal State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerElement;\n\n  private activeCanvasInfo: {\n    context: CanvasRenderingContext2D;\n    bounds: DOMRect;\n  };\n\n  private get baseColorFieldColor(): Color {\n    return this.color || this.previousColor || DEFAULT_COLOR;\n  }\n\n  private checkerPattern: HTMLCanvasElement;\n\n  private colorFieldRenderingContext: CanvasRenderingContext2D;\n\n  private colorFieldScopeNode: HTMLDivElement;\n\n  private hueSliderRenderingContext: CanvasRenderingContext2D;\n\n  private hueScopeNode: HTMLDivElement;\n\n  private internalColorUpdateContext: \"internal\" | \"initial\" | \"user-interaction\" | null = null;\n\n  private mode: SupportedMode = CSSColorMode.HEX;\n\n  private opacityScopeNode: HTMLDivElement;\n\n  private opacitySliderRenderingContext: CanvasRenderingContext2D;\n\n  private previousColor: InternalColor | null;\n\n  private shiftKeyChannelAdjustment = 0;\n\n  @State() defaultMessages: ColorPickerMessages;\n\n  @State() channelMode: ColorMode = \"rgb\";\n\n  @State() channels: Channels = this.toChannels(DEFAULT_COLOR);\n\n  @State() dimensions = DIMENSIONS.m;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ColorPickerMessages;\n\n  @State() savedColors: string[] = [];\n\n  @State() colorFieldScopeTop: number;\n\n  @State() colorFieldScopeLeft: number;\n\n  @State() hueScopeLeft: number;\n\n  @State() opacityScopeLeft: number;\n\n  @State() scopeOrientation: \"vertical\" | \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the color value has changed.\n   */\n  @Event({ cancelable: false }) calciteColorPickerChange: EventEmitter<void>;\n\n  /**\n   * Fires as the color value changes.\n   *\n   * Similar to the `calciteColorPickerChange` event with the exception of dragging. When dragging the color field or hue slider thumb, this event fires as the thumb is moved.\n   */\n  @Event({ cancelable: false }) calciteColorPickerInput: EventEmitter<void>;\n\n  private handleTabActivate = (event: Event): void => {\n    this.channelMode = (event.currentTarget as HTMLElement).getAttribute(\n      \"data-color-mode\",\n    ) as ColorMode;\n\n    this.updateChannelsFromColor(this.color);\n  };\n\n  private handleColorFieldScopeKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const arrowKeyToXYOffset = {\n      ArrowUp: { x: 0, y: -10 },\n      ArrowRight: { x: 10, y: 0 },\n      ArrowDown: { x: 0, y: 10 },\n      ArrowLeft: { x: -10, y: 0 },\n    };\n\n    if (arrowKeyToXYOffset[key]) {\n      event.preventDefault();\n      this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n      this.captureColorFieldColor(\n        this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0,\n        this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0,\n        false,\n      );\n    }\n  };\n\n  private handleHueScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 1,\n      ArrowRight: 1,\n      ArrowDown: -1,\n      ArrowLeft: -1,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const hue = this.baseColorFieldColor.hue();\n      const color = this.baseColorFieldColor.hue(hue + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private handleHexInputChange = (event: Event): void => {\n    event.stopPropagation();\n    const { allowEmpty, color } = this;\n    const input = event.target as HTMLCalciteColorPickerHexInputElement;\n    const hex = input.value;\n\n    if (allowEmpty && !hex) {\n      this.internalColorSet(null);\n      return;\n    }\n\n    const normalizedHex = color && normalizeHex(hexify(color, alphaCompatible(this.mode)));\n\n    if (hex !== normalizedHex) {\n      this.internalColorSet(Color(hex));\n    }\n  };\n\n  private handleSavedColorSelect = (event: Event): void => {\n    const swatch = event.currentTarget as HTMLCalciteColorPickerSwatchElement;\n    this.internalColorSet(Color(swatch.color));\n  };\n\n  private handleChannelInput = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const isAlphaChannel = channelIndex === 3;\n\n    const limit = isAlphaChannel\n      ? OPACITY_LIMITS.max\n      : this.channelMode === \"rgb\"\n        ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n        : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n\n    let inputValue: string;\n\n    if (this.allowEmpty && !input.value) {\n      inputValue = \"\";\n    } else {\n      const value = Number(input.value);\n      const adjustedValue = value + this.shiftKeyChannelAdjustment;\n      const clamped = clamp(adjustedValue, 0, limit);\n\n      inputValue = clamped.toString();\n    }\n\n    input.value = inputValue;\n\n    if (inputValue !== \"\" && this.shiftKeyChannelAdjustment !== 0) {\n      // we treat nudging as a change event since the input won't emit when modifying the value directly\n      this.handleChannelChange(event);\n    }\n  };\n\n  // using @Listen as a workaround for VDOM listener not firing\n  @Listen(\"keydown\", { capture: true })\n  @Listen(\"keyup\", { capture: true })\n  protected handleChannelKeyUpOrDown(event: KeyboardEvent): void {\n    this.shiftKeyChannelAdjustment = 0;\n    const { key } = event;\n\n    if (\n      (key !== \"ArrowUp\" && key !== \"ArrowDown\") ||\n      !event.composedPath().some((node: HTMLElement) => node.classList?.contains(CSS.channel))\n    ) {\n      return;\n    }\n\n    const { shiftKey } = event;\n    event.preventDefault();\n\n    if (!this.color) {\n      this.internalColorSet(this.previousColor);\n      event.stopPropagation();\n      return;\n    }\n\n    // this gets applied to the input's up/down arrow increment/decrement\n    const complementaryBump = 9;\n\n    this.shiftKeyChannelAdjustment =\n      key === \"ArrowUp\" && shiftKey\n        ? complementaryBump\n        : key === \"ArrowDown\" && shiftKey\n          ? -complementaryBump\n          : 0;\n  }\n\n  private handleChannelChange = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels] as this[\"channels\"];\n\n    const shouldClearChannels = this.allowEmpty && !input.value;\n\n    if (shouldClearChannels) {\n      this.channels = [null, null, null, null];\n      this.internalColorSet(null);\n      return;\n    }\n\n    const isAlphaChannel = channelIndex === 3;\n    const value = Number(input.value);\n\n    channels[channelIndex] = isAlphaChannel ? opacityToAlpha(value) : value;\n    this.updateColorFromChannels(channels);\n  };\n\n  private handleSavedColorKeyDown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.handleSavedColorSelect(event);\n    }\n  };\n\n  private handleColorFieldPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX, offsetY } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.colorFieldRenderingContext,\n      bounds: this.colorFieldRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureColorFieldColor(offsetX, offsetY);\n    this.colorFieldScopeNode.focus();\n  };\n\n  private handleHueSliderPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.hueSliderRenderingContext,\n      bounds: this.hueSliderRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureHueSliderColor(offsetX);\n    this.hueScopeNode.focus();\n  };\n\n  private handleOpacitySliderPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.opacitySliderRenderingContext,\n      bounds: this.opacitySliderRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureOpacitySliderValue(offsetX);\n    this.opacityScopeNode.focus();\n  };\n\n  private globalPointerUpHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const previouslyDragging = this.activeCanvasInfo;\n    this.activeCanvasInfo = null;\n    this.drawColorControls();\n\n    if (previouslyDragging) {\n      this.calciteColorPickerChange.emit();\n    }\n  };\n\n  private globalPointerMoveHandler = (event: PointerEvent): void => {\n    const { activeCanvasInfo, el } = this;\n\n    if (!el.isConnected || !activeCanvasInfo) {\n      return;\n    }\n\n    const { context, bounds } = activeCanvasInfo;\n\n    let samplingX: number;\n    let samplingY: number;\n\n    const { clientX, clientY } = event;\n\n    if (context.canvas.matches(\":hover\")) {\n      samplingX = clientX - bounds.x;\n      samplingY = clientY - bounds.y;\n    } else {\n      // snap x and y to the closest edge\n\n      if (clientX < bounds.x + bounds.width && clientX > bounds.x) {\n        samplingX = clientX - bounds.x;\n      } else if (clientX < bounds.x) {\n        samplingX = 0;\n      } else {\n        samplingX = bounds.width;\n      }\n\n      if (clientY < bounds.y + bounds.height && clientY > bounds.y) {\n        samplingY = clientY - bounds.y;\n      } else if (clientY < bounds.y) {\n        samplingY = 0;\n      } else {\n        samplingY = bounds.height;\n      }\n    }\n\n    if (context === this.colorFieldRenderingContext) {\n      this.captureColorFieldColor(samplingX, samplingY, false);\n    } else if (context === this.hueSliderRenderingContext) {\n      this.captureHueSliderColor(samplingX);\n    } else if (context === this.opacitySliderRenderingContext) {\n      this.captureOpacitySliderValue(samplingX);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n\n    const { allowEmpty, color, format, value } = this;\n\n    const willSetNoColor = allowEmpty && !value;\n    const parsedMode = parseMode(value);\n    const valueIsCompatible =\n      willSetNoColor || (format === \"auto\" && parsedMode) || format === parsedMode;\n    const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n\n    if (!valueIsCompatible) {\n      this.showIncompatibleColorWarning(value, format);\n    }\n\n    this.setMode(format, false);\n    this.internalColorSet(initialColor, false, \"initial\");\n\n    this.updateDimensions(this.scale);\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId && localStorage.getItem(storageKey)) {\n      this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n    }\n\n    await setUpMessages(this);\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    window.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      allowEmpty,\n      channelsDisabled,\n      color,\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n      dimensions: {\n        slider: { width: sliderWidth },\n        thumb: { radius: thumbRadius },\n      },\n      hexDisabled,\n      hideChannels,\n      hideHex,\n      hideSaved,\n      hueScopeLeft,\n      messages,\n      alphaChannel,\n      opacityScopeLeft,\n      savedColors,\n      savedDisabled,\n      scale,\n      scopeOrientation,\n    } = this;\n    const selectedColorInHex = color ? hexify(color, alphaChannel) : null;\n    const hueTop = thumbRadius;\n    const hueLeft = hueScopeLeft ?? (sliderWidth * DEFAULT_COLOR.hue()) / HSV_LIMITS.h;\n    const opacityTop = thumbRadius;\n    const opacityLeft =\n      opacityScopeLeft ??\n      (sliderWidth * alphaToOpacity(DEFAULT_COLOR.alpha())) / OPACITY_LIMITS.max;\n    const noColor = color === null;\n    const vertical = scopeOrientation === \"vertical\";\n    const noHex = hexDisabled || hideHex;\n    const noChannels = channelsDisabled || hideChannels;\n    const noSaved = savedDisabled || hideSaved;\n    const [adjustedColorFieldScopeLeft, adjustedColorFieldScopeTop] = this.getAdjustedScopePosition(\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n    );\n    const [adjustedHueScopeLeft, adjustedHueScopeTop] = this.getAdjustedScopePosition(\n      hueLeft,\n      hueTop,\n    );\n    const [adjustedOpacityScopeLeft, adjustedOpacityScopeTop] = this.getAdjustedScopePosition(\n      opacityLeft,\n      opacityTop,\n    );\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div class={CSS.container}>\n          <div class={CSS.controlAndScope}>\n            <canvas\n              class={CSS.colorField}\n              onPointerDown={this.handleColorFieldPointerDown}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.initColorField}\n            />\n            <div\n              aria-label={vertical ? messages.value : messages.saturation}\n              aria-valuemax={vertical ? HSV_LIMITS.v : HSV_LIMITS.s}\n              aria-valuemin=\"0\"\n              aria-valuenow={(vertical ? color?.saturationv() : color?.value()) || \"0\"}\n              class={{ [CSS.scope]: true, [CSS.colorFieldScope]: true }}\n              onKeyDown={this.handleColorFieldScopeKeyDown}\n              role=\"slider\"\n              style={{\n                top: `${adjustedColorFieldScopeTop || 0}px`,\n                left: `${adjustedColorFieldScopeLeft || 0}px`,\n              }}\n              tabindex=\"0\"\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.storeColorFieldScope}\n            />\n          </div>\n          <div class={CSS.previewAndSliders}>\n            <calcite-color-picker-swatch class={CSS.preview} color={selectedColorInHex} scale=\"l\" />\n            <div class={CSS.sliders}>\n              <div class={CSS.controlAndScope}>\n                <canvas\n                  class={{ [CSS.slider]: true, [CSS.hueSlider]: true }}\n                  onPointerDown={this.handleHueSliderPointerDown}\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={this.initHueSlider}\n                />\n                <div\n                  aria-label={messages.hue}\n                  aria-valuemax={HSV_LIMITS.h}\n                  aria-valuemin=\"0\"\n                  aria-valuenow={color?.round().hue() || DEFAULT_COLOR.round().hue()}\n                  class={{ [CSS.scope]: true, [CSS.hueScope]: true }}\n                  onKeyDown={this.handleHueScopeKeyDown}\n                  role=\"slider\"\n                  style={{\n                    top: `${adjustedHueScopeTop}px`,\n                    left: `${adjustedHueScopeLeft}px`,\n                  }}\n                  tabindex=\"0\"\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={this.storeHueScope}\n                />\n              </div>\n              {alphaChannel ? (\n                <div class={CSS.controlAndScope}>\n                  <canvas\n                    class={{ [CSS.slider]: true, [CSS.opacitySlider]: true }}\n                    onPointerDown={this.handleOpacitySliderPointerDown}\n                    // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                    ref={this.initOpacitySlider}\n                  />\n                  <div\n                    aria-label={messages.opacity}\n                    aria-valuemax={OPACITY_LIMITS.max}\n                    aria-valuemin={OPACITY_LIMITS.min}\n                    aria-valuenow={(color || DEFAULT_COLOR).round().alpha()}\n                    class={{ [CSS.scope]: true, [CSS.opacityScope]: true }}\n                    onKeyDown={this.handleOpacityScopeKeyDown}\n                    role=\"slider\"\n                    style={{\n                      top: `${adjustedOpacityScopeTop}px`,\n                      left: `${adjustedOpacityScopeLeft}px`,\n                    }}\n                    tabindex=\"0\"\n                    // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                    ref={this.storeOpacityScope}\n                  />\n                </div>\n              ) : null}\n            </div>\n          </div>\n          {noHex && noChannels ? null : (\n            <div\n              class={{\n                [CSS.controlSection]: true,\n                [CSS.section]: true,\n              }}\n            >\n              <div class={CSS.hexAndChannelsGroup}>\n                {noHex ? null : (\n                  <div class={CSS.hexOptions}>\n                    <calcite-color-picker-hex-input\n                      allowEmpty={allowEmpty}\n                      alphaChannel={alphaChannel}\n                      class={CSS.control}\n                      messages={messages}\n                      numberingSystem={this.numberingSystem}\n                      onCalciteColorPickerHexInputChange={this.handleHexInputChange}\n                      scale={scale}\n                      value={selectedColorInHex}\n                    />\n                  </div>\n                )}\n                {noChannels ? null : (\n                  <calcite-tabs\n                    class={{\n                      [CSS.colorModeContainer]: true,\n                      [CSS.splitSection]: true,\n                    }}\n                    scale={scale === \"l\" ? \"m\" : \"s\"}\n                  >\n                    <calcite-tab-nav slot=\"title-group\">\n                      {this.renderChannelsTabTitle(\"rgb\")}\n                      {this.renderChannelsTabTitle(\"hsv\")}\n                    </calcite-tab-nav>\n                    {this.renderChannelsTab(\"rgb\")}\n                    {this.renderChannelsTab(\"hsv\")}\n                  </calcite-tabs>\n                )}\n              </div>\n            </div>\n          )}\n          {noSaved ? null : (\n            <div class={{ [CSS.savedColorsSection]: true, [CSS.section]: true }}>\n              <div class={CSS.header}>\n                <label>{messages.saved}</label>\n                <div class={CSS.savedColorsButtons}>\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.deleteColor}\n                    disabled={noColor}\n                    iconStart=\"minus\"\n                    kind=\"neutral\"\n                    label={messages.deleteColor}\n                    onClick={this.deleteColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.saveColor}\n                    disabled={noColor}\n                    iconStart=\"plus\"\n                    kind=\"neutral\"\n                    label={messages.saveColor}\n                    onClick={this.saveColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                </div>\n              </div>\n              {savedColors.length > 0 ? (\n                <div class={CSS.savedColors}>\n                  {[\n                    ...savedColors.map((color) => (\n                      <calcite-color-picker-swatch\n                        class={CSS.savedColor}\n                        color={color}\n                        key={color}\n                        onClick={this.handleSavedColorSelect}\n                        onKeyDown={this.handleSavedColorKeyDown}\n                        scale={scale}\n                        tabIndex={0}\n                      />\n                    )),\n                  ]}\n                </div>\n              ) : null}\n            </div>\n          )}\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  private storeColorFieldScope = (node: HTMLDivElement): void => {\n    this.colorFieldScopeNode = node;\n  };\n\n  private storeHueScope = (node: HTMLDivElement): void => {\n    this.hueScopeNode = node;\n  };\n\n  private renderChannelsTabTitle = (channelMode: this[\"channelMode\"]): VNode => {\n    const { channelMode: activeChannelMode, messages } = this;\n    const selected = channelMode === activeChannelMode;\n    const label = channelMode === \"rgb\" ? messages.rgb : messages.hsv;\n\n    return (\n      <calcite-tab-title\n        class={CSS.colorMode}\n        data-color-mode={channelMode}\n        key={channelMode}\n        onCalciteTabsActivate={this.handleTabActivate}\n        selected={selected}\n      >\n        {label}\n      </calcite-tab-title>\n    );\n  };\n\n  private renderChannelsTab = (channelMode: this[\"channelMode\"]): VNode => {\n    const { allowEmpty, channelMode: activeChannelMode, channels, messages, alphaChannel } = this;\n    const selected = channelMode === activeChannelMode;\n    const isRgb = channelMode === \"rgb\";\n    const channelAriaLabels = isRgb\n      ? [messages.red, messages.green, messages.blue]\n      : [messages.hue, messages.saturation, messages.value];\n    const direction = getElementDir(this.el);\n    const channelsToRender = alphaChannel ? channels : channels.slice(0, 3);\n\n    return (\n      <calcite-tab class={CSS.control} key={channelMode} selected={selected}>\n        {/* channel order should not be mirrored */}\n        <div class={CSS.channels} dir=\"ltr\">\n          {channelsToRender.map((channelValue, index) => {\n            const isAlphaChannel = index === 3;\n\n            if (isAlphaChannel) {\n              channelValue =\n                allowEmpty && !channelValue ? channelValue : alphaToOpacity(channelValue);\n            }\n\n            /* the channel container is ltr, so we apply the host's direction */\n            return this.renderChannel(\n              channelValue,\n              index,\n              channelAriaLabels[index],\n              direction,\n              isAlphaChannel ? \"%\" : \"\",\n            );\n          })}\n        </div>\n      </calcite-tab>\n    );\n  };\n\n  private renderChannel = (\n    value: number | null,\n    index: number,\n    ariaLabel: string,\n    direction: Direction,\n    suffix?: string,\n  ): VNode => {\n    return (\n      <calcite-input-number\n        class={CSS.channel}\n        data-channel-index={index}\n        dir={direction}\n        key={index}\n        label={ariaLabel}\n        lang={this.effectiveLocale}\n        numberButtonType=\"none\"\n        numberingSystem={this.numberingSystem}\n        onCalciteInputNumberChange={this.handleChannelChange}\n        onCalciteInputNumberInput={this.handleChannelInput}\n        onKeyDown={this.handleKeyDown}\n        scale={this.scale === \"l\" ? \"m\" : \"s\"}\n        // workaround to ensure input borders overlap as desired\n        // this is because the build transforms margin-left to its\n        // logical-prop, which is undesired as channels are always ltr\n        style={{\n          marginLeft:\n            index > 0 && !(this.scale === \"s\" && this.alphaChannel && index === 3) ? \"-1px\" : \"\",\n        }}\n        suffixText={suffix}\n        value={value?.toString()}\n      />\n    );\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  handleKeyDown(event: KeyboardEvent): void {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  private showIncompatibleColorWarning(value: ColorValue, format: Format): void {\n    console.warn(\n      `ignoring color value (${value}) as it is not compatible with the current format (${format})`,\n    );\n  }\n\n  private setMode(format: ColorPicker[\"format\"], warn = true): void {\n    const mode = format === \"auto\" ? this.mode : format;\n    this.mode = this.ensureCompatibleMode(mode, warn);\n  }\n\n  private ensureCompatibleMode(mode: SupportedMode, warn): SupportedMode {\n    const { alphaChannel } = this;\n    const isAlphaCompatible = alphaCompatible(mode);\n\n    if (alphaChannel && !isAlphaCompatible) {\n      const alphaMode = toAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${alphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return alphaMode;\n    }\n\n    if (!alphaChannel && isAlphaCompatible) {\n      const nonAlphaMode = toNonAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${nonAlphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return nonAlphaMode;\n    }\n\n    return mode;\n  }\n\n  private captureHueSliderColor(x: number): void {\n    const {\n      dimensions: {\n        slider: { width },\n      },\n    } = this;\n    const hue = (HUE_LIMIT_CONSTRAINED / width) * x;\n\n    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n  }\n\n  private captureOpacitySliderValue(x: number): void {\n    const {\n      dimensions: {\n        slider: { width },\n      },\n    } = this;\n    const alpha = opacityToAlpha((OPACITY_LIMITS.max / width) * x);\n\n    this.internalColorSet(this.baseColorFieldColor.alpha(alpha), false);\n  }\n\n  private internalColorSet(\n    color: Color | null,\n    skipEqual = true,\n    context: ColorPicker[\"internalColorUpdateContext\"] = \"user-interaction\",\n  ): void {\n    if (skipEqual && colorEqual(color, this.color)) {\n      return;\n    }\n\n    this.internalColorUpdateContext = context;\n    this.color = color;\n    this.value = this.toValue(color);\n    this.internalColorUpdateContext = null;\n  }\n\n  private toValue(color: Color | null, format: SupportedMode = this.mode): ColorValue | null {\n    if (!color) {\n      return null;\n    }\n\n    const hexMode = \"hex\";\n\n    if (format.includes(hexMode)) {\n      const hasAlpha = format === CSSColorMode.HEXA;\n      return normalizeHex(hexify(color.round(), hasAlpha), hasAlpha);\n    }\n\n    if (format.includes(\"-css\")) {\n      const value = color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n\n      // Color omits alpha values when alpha is 1\n      const needToInjectAlpha =\n        (format.endsWith(\"a\") || format.endsWith(\"a-css\")) && color.alpha() === 1;\n      if (needToInjectAlpha) {\n        const model = value.slice(0, 3);\n        const values = value.slice(4, -1);\n        return `${model}a(${values}, ${color.alpha()})`;\n      }\n\n      return value;\n    }\n\n    const colorObject =\n      /* Color() does not support hsva, hsla nor rgba, so we use the non-alpha mode */\n      color[toNonAlphaMode(format)]().round().object();\n\n    if (format.endsWith(\"a\")) {\n      return normalizeAlpha(colorObject);\n    }\n\n    return colorObject;\n  }\n\n  private getSliderCapSpacing(): number {\n    const {\n      dimensions: {\n        slider: { height },\n        thumb: { radius },\n      },\n    } = this;\n\n    return radius * 2 - height;\n  }\n\n  private updateDimensions(scale: Scale = \"m\"): void {\n    this.dimensions = DIMENSIONS[scale];\n  }\n\n  private deleteColor = (): void => {\n    const colorToDelete = hexify(this.color, this.alphaChannel);\n    const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n\n    if (!inStorage) {\n      return;\n    }\n\n    const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private saveColor = (): void => {\n    const colorToSave = hexify(this.color, this.alphaChannel);\n    const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n\n    if (alreadySaved) {\n      return;\n    }\n\n    const savedColors = [...this.savedColors, colorToSave];\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private drawColorControls = throttle(\n    (type: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\"): void => {\n      if ((type === \"all\" || type === \"color-field\") && this.colorFieldRenderingContext) {\n        this.drawColorField();\n      }\n\n      if ((type === \"all\" || type === \"hue-slider\") && this.hueSliderRenderingContext) {\n        this.drawHueSlider();\n      }\n\n      if (\n        this.alphaChannel &&\n        (type === \"all\" || type === \"opacity-slider\") &&\n        this.opacitySliderRenderingContext\n      ) {\n        this.drawOpacitySlider();\n      }\n    },\n    throttleFor60FpsInMs,\n  );\n\n  private drawColorField(): void {\n    const context = this.colorFieldRenderingContext;\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n\n    context.fillStyle = this.baseColorFieldColor\n      .hsv()\n      .saturationv(100)\n      .value(100)\n      .alpha(1)\n      .string();\n    context.fillRect(0, 0, width, height);\n\n    const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n    whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n    whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    context.fillStyle = whiteGradient;\n    context.fillRect(0, 0, width, height);\n\n    const blackGradient = context.createLinearGradient(0, 0, 0, height);\n    blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n    blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n    context.fillStyle = blackGradient;\n    context.fillRect(0, 0, width, height);\n\n    this.drawActiveColorFieldColor();\n  }\n\n  private setCanvasContextSize(\n    canvas: HTMLCanvasElement,\n    { height, width }: { height: number; width: number },\n  ): void {\n    if (!canvas) {\n      return;\n    }\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.height = `${height}px`;\n    canvas.style.width = `${width}px`;\n\n    const context = canvas.getContext(\"2d\");\n    context.scale(devicePixelRatio, devicePixelRatio);\n  }\n\n  private captureColorFieldColor = (x: number, y: number, skipEqual = true): void => {\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n    const saturation = Math.round((HSV_LIMITS.s / width) * x);\n    const value = Math.round((HSV_LIMITS.v / height) * (height - y));\n\n    this.internalColorSet(\n      this.baseColorFieldColor.hsv().saturationv(saturation).value(value),\n      skipEqual,\n    );\n  };\n\n  private initColorField = (canvas: HTMLCanvasElement): void => {\n    this.colorFieldRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"color-field\");\n    this.drawColorControls();\n  };\n\n  private initHueSlider = (canvas: HTMLCanvasElement): void => {\n    this.hueSliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"hue-slider\");\n    this.drawHueSlider();\n  };\n\n  private initOpacitySlider = (canvas: HTMLCanvasElement): void => {\n    if (!canvas) {\n      return;\n    }\n\n    this.opacitySliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"opacity-slider\");\n    this.drawOpacitySlider();\n  };\n\n  private updateCanvasSize(\n    context: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\",\n  ): void {\n    const { dimensions } = this;\n\n    if (context === \"all\" || context === \"color-field\") {\n      this.setCanvasContextSize(this.colorFieldRenderingContext?.canvas, dimensions.colorField);\n    }\n\n    const adjustedSliderDimensions = {\n      width: dimensions.slider.width,\n      height:\n        dimensions.slider.height + (dimensions.thumb.radius - dimensions.slider.height / 2) * 2,\n    };\n\n    if (context === \"all\" || context === \"hue-slider\") {\n      this.setCanvasContextSize(this.hueSliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n\n    if (context === \"all\" || context === \"opacity-slider\") {\n      this.setCanvasContextSize(\n        this.opacitySliderRenderingContext?.canvas,\n        adjustedSliderDimensions,\n      );\n    }\n  }\n\n  private drawActiveColorFieldColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv();\n\n    const {\n      dimensions: {\n        colorField: { height, width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n\n    requestAnimationFrame(() => {\n      this.colorFieldScopeLeft = x;\n      this.colorFieldScopeTop = y;\n    });\n\n    this.drawThumb(this.colorFieldRenderingContext, radius, x, y, hsvColor, false);\n  }\n\n  private drawThumb(\n    context: CanvasRenderingContext2D,\n    radius: number,\n    x: number,\n    y: number,\n    color: Color,\n    applyAlpha: boolean,\n  ): void {\n    const startAngle = 0;\n    const endAngle = 2 * Math.PI;\n    const outlineWidth = 1;\n\n    context.beginPath();\n    context.arc(x, y, radius, startAngle, endAngle);\n    context.fillStyle = \"#fff\";\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = outlineWidth;\n    context.stroke();\n\n    if (applyAlpha && color.alpha() < 1) {\n      const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n      context.beginPath();\n      context.arc(x, y, radius - 3, startAngle, endAngle);\n      context.fillStyle = pattern;\n      context.fill();\n    }\n\n    context.globalCompositeOperation = \"source-atop\";\n\n    context.beginPath();\n    context.arc(x, y, radius - 3, startAngle, endAngle);\n    const alpha = applyAlpha ? color.alpha() : 1;\n    context.fillStyle = color.rgb().alpha(alpha).string();\n    context.fill();\n\n    context.globalCompositeOperation = \"source-over\";\n  }\n\n  private drawActiveHueSliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv().saturationv(100).value(100);\n\n    const {\n      dimensions: {\n        slider: { width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = hsvColor.hue() / (HUE_LIMIT_CONSTRAINED / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.hueScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.hueSliderRenderingContext, radius, sliderBoundX, y, hsvColor, false);\n  }\n\n  private drawHueSlider(): void {\n    const context = this.hueSliderRenderingContext;\n    const {\n      dimensions: {\n        slider: { height, width },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n\n    const gradient = context.createLinearGradient(0, 0, width, 0);\n\n    const hueSliderColorStopKeywords = [\n      \"red\",\n      \"yellow\",\n      \"lime\",\n      \"cyan\",\n      \"blue\",\n      \"magenta\",\n      \"#ff0004\" /* 1 unit less than #ff0 to avoid duplicate values within range */,\n    ];\n\n    const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n    let currentOffset = 0;\n\n    hueSliderColorStopKeywords.forEach((keyword) => {\n      gradient.addColorStop(currentOffset, Color(keyword).string());\n      currentOffset += offset;\n    });\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveHueSliderColor();\n  }\n\n  private drawOpacitySlider(): void {\n    const context = this.opacitySliderRenderingContext;\n    const {\n      baseColorFieldColor: previousColor,\n      dimensions: {\n        slider: { height, width },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    const gradient = context.createLinearGradient(0, y, width, 0);\n    const startColor = previousColor.rgb().alpha(0);\n    const midColor = previousColor.rgb().alpha(0.5);\n    const endColor = previousColor.rgb().alpha(1);\n\n    gradient.addColorStop(0, startColor.string());\n    gradient.addColorStop(0.5, midColor.string());\n    gradient.addColorStop(1, endColor.string());\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n    context.fillStyle = pattern;\n    context.fill();\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveOpacitySliderColor();\n  }\n\n  private drawSliderPath(\n    context: CanvasRenderingContext2D,\n    height: number,\n    width: number,\n    x: number,\n    y: number,\n  ): void {\n    const radius = height / 2 + 1;\n    context.beginPath();\n    context.moveTo(x + radius, y);\n    context.lineTo(x + width - radius, y);\n    context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    context.lineTo(x + width, y + height - radius);\n    context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    context.lineTo(x + radius, y + height);\n    context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    context.lineTo(x, y + radius);\n    context.quadraticCurveTo(x, y, x + radius, y);\n    context.closePath();\n  }\n\n  private getCheckeredBackgroundPattern(): HTMLCanvasElement {\n    if (this.checkerPattern) {\n      return this.checkerPattern;\n    }\n\n    const pattern = document.createElement(\"canvas\");\n    pattern.width = 10;\n    pattern.height = 10;\n    const patternContext = pattern.getContext(\"2d\");\n\n    patternContext.fillStyle = \"#ccc\";\n    patternContext.fillRect(0, 0, 10, 10);\n    patternContext.fillStyle = \"#fff\";\n    patternContext.fillRect(0, 0, 5, 5);\n    patternContext.fillRect(5, 5, 5, 5);\n\n    this.checkerPattern = pattern;\n\n    return pattern;\n  }\n\n  private drawActiveOpacitySliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color;\n\n    const {\n      dimensions: {\n        slider: { width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = alphaToOpacity(hsvColor.alpha()) / (OPACITY_LIMITS.max / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.opacityScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.opacitySliderRenderingContext, radius, sliderBoundX, y, hsvColor, true);\n  }\n\n  private getSliderBoundX(x: number, width: number, radius: number): number {\n    const closeToEdge = closeToRangeEdge(x, width, radius);\n\n    return closeToEdge === 0\n      ? x\n      : closeToEdge === -1\n        ? remap(x, 0, width, radius, radius * 2)\n        : remap(x, 0, width, width - radius * 2, width - radius);\n  }\n\n  private storeOpacityScope = (node: HTMLDivElement): void => {\n    this.opacityScopeNode = node;\n  };\n\n  private handleOpacityScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 0.01,\n      ArrowRight: 0.01,\n      ArrowDown: -0.01,\n      ArrowLeft: -0.01,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const alpha = this.baseColorFieldColor.alpha();\n      const color = this.baseColorFieldColor.alpha(alpha + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private updateColorFromChannels(channels: this[\"channels\"]): void {\n    this.internalColorSet(Color(channels, this.channelMode));\n  }\n\n  private updateChannelsFromColor(color: Color | null): void {\n    this.channels = color ? this.toChannels(color) : [null, null, null, null];\n  }\n\n  private toChannels(color: Color): Channels {\n    const { channelMode } = this;\n\n    const channels = color[channelMode]()\n      .array()\n      .map((value, index) => {\n        const isAlpha = index === 3;\n        return isAlpha ? value : Math.floor(value);\n      });\n\n    if (channels.length === 3) {\n      channels.push(1); // Color omits alpha when 1\n    }\n\n    return channels as Channels;\n  }\n\n  private getAdjustedScopePosition(left: number, top: number): [number, number] {\n    return [left - SCOPE_SIZE / 2, top - SCOPE_SIZE / 2];\n  }\n}\n"],"version":3}