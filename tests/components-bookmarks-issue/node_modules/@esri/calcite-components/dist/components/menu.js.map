{"file":"menu.js","mappings":"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","names":[],"sources":["src/components/menu/menu.scss?tag=calcite-menu&encapsulation=shadow","src/components/menu/menu.tsx"],"sourcesContent":[":host {\n  @apply flex;\n}\n\nul {\n  @apply inline-flex items-center h-full m-0 p-0;\n}\n\n:host([layout=\"vertical\"]) ul {\n  @apply flex flex-col w-full;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  Watch,\n  Method,\n  VNode,\n  forceUpdate,\n} from \"@stencil/core\";\nimport { focusElement, focusElementInGroup, slotChangeGetAssignedElements } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { MenuMessages } from \"./assets/menu/t9n\";\n\ntype Layout = \"horizontal\" | \"vertical\";\n\n@Component({\n  tag: \"calcite-menu\",\n  styleUrl: \"menu.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class CalciteMenu implements LocalizedComponent, T9nComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"role\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n    this.setMenuItemLayout(this.menuItems, this.layout);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Accessible name for the component.\n   */\n  @Prop() label!: string;\n\n  /**\n   * Specifies the layout of the component.\n   */\n  @Prop({ reflect: true }) layout: Layout = \"horizontal\";\n\n  @Watch(\"layout\")\n  handleLayoutChange(value: Layout): void {\n    this.setMenuItemLayout(this.menuItems, value);\n  }\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<MenuMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: MenuMessages;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteMenuElement;\n\n  @State() defaultMessages: MenuMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  menuItems: HTMLCalciteMenuItemElement[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalMenuItemKeyEvent\")\n  calciteInternalNavMenuItemKeyEvent(event: CustomEvent): void {\n    const target = event.target as HTMLCalciteMenuItemElement;\n    const submenuItems = event.detail.children;\n    const key = event.detail.event.key;\n    event.stopPropagation();\n\n    if (key === \"ArrowDown\") {\n      if (target.layout === \"vertical\") {\n        focusElementInGroup(this.menuItems, target, \"next\", false);\n      } else {\n        if (event.detail.isSubmenuOpen) {\n          submenuItems[0].setFocus();\n        }\n      }\n    } else if (key === \"ArrowUp\") {\n      if (this.layout === \"vertical\") {\n        focusElementInGroup(this.menuItems, target, \"previous\", false);\n      } else {\n        if (event.detail.isSubmenuOpen) {\n          submenuItems[submenuItems.length - 1].setFocus();\n        }\n      }\n    } else if (key === \"ArrowRight\") {\n      if (this.layout === \"horizontal\") {\n        focusElementInGroup(this.menuItems, target, \"next\", false);\n      } else {\n        if (event.detail.isSubmenuOpen) {\n          submenuItems[0].setFocus();\n        }\n      }\n    } else if (key === \"ArrowLeft\") {\n      if (this.layout === \"horizontal\") {\n        focusElementInGroup(this.menuItems, target, \"previous\", false);\n      } else {\n        if (event.detail.isSubmenuOpen) {\n          this.focusParentElement(event.target as HTMLCalciteMenuItemElement);\n        }\n      }\n    } else if (key === \"Escape\") {\n      this.focusParentElement(event.target as HTMLCalciteMenuItemElement);\n    }\n    event.preventDefault();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  handleMenuSlotChange = (event: Event): void => {\n    this.menuItems = slotChangeGetAssignedElements(event) as HTMLCalciteMenuItemElement[];\n    this.setMenuItemLayout(this.menuItems, this.layout);\n  };\n\n  focusParentElement(el: HTMLCalciteMenuItemElement): void {\n    const parentEl = el.parentElement as HTMLCalciteMenuItemElement;\n    if (parentEl) {\n      focusElement(parentEl);\n      parentEl.open = false;\n    }\n  }\n\n  setMenuItemLayout(items: HTMLCalciteMenuItemElement[], layout: Layout): void {\n    items.forEach((item) => {\n      item.layout = layout;\n      if (this.getEffectiveRole() === \"menubar\") {\n        item.isTopLevelItem = true;\n        item.topLevelMenuLayout = this.layout;\n      }\n    });\n  }\n\n  private getEffectiveRole(): string {\n    return this.el.getAttribute(\"role\") || \"menubar\";\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      <Host>\n        <ul aria-label={this.label} role={this.getEffectiveRole()}>\n          <slot onSlotchange={this.handleMenuSlotChange} />\n        </ul>\n      </Host>\n    );\n  }\n}\n"],"version":3}