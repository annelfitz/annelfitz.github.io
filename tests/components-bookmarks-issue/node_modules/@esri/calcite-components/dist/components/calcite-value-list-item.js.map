{"file":"calcite-value-list-item.js","mappings":";;;;;;;;;;;;;;;;;AAAO,MAAM,KAAK,GAAG;IACnB,IAAI,EAAE,MAAM;CACb,CAAC;AAEK,MAAM,KAAK,GAAG;IACnB,UAAU,EAAE,aAAa;IACzB,YAAY,EAAE,eAAe;CAC9B;;ACPD,MAAM,gBAAgB,GAAG,gqEAAgqE;;MC+C5qE,aAAa;;;;;;;;QA6ExB,iBAAY,GAAmC,IAAI,CAAC;QAIpD,SAAI,GAAG,2BAA2B,IAAI,EAAE,EAAE,CAAC;;;;;;QA8F3C,mBAAc,GAAG,CAAC,EAAkC,MACjD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;QAE3B,kBAAa,GAAG,CAAC,KAAoB;YACnC,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE;gBACrB,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;aAC9C;SACF,CAAC;QAEF,eAAU,GAAG;YACX,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,kCAAkC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SACxF,CAAC;QAEF,uBAAkB,GAAG,CAAC,KAAkB;YACtC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC;SACvC,CAAC;;wBA9KkC,KAAK;gCAKd,KAAK;8BAKU,KAAK;+BAKH,KAAK;oBAOG,IAAI;2BAGjB,KAAK;;;yBAeP,KAAK;wBAKS,KAAK;;;;;;;;IA2BxD,iBAAiB;QACf,+BAA+B,CAAC,IAAI,CAAC,CAAC;QACtC,kBAAkB,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,oBAAoB;QAClB,kCAAkC,CAAC,IAAI,CAAC,CAAC;QACzC,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC7B;IAED,iBAAiB;QACf,sBAAsB,CAAC,IAAI,CAAC,CAAC;KAC9B;IAED,gBAAgB;QACd,kBAAkB,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,kBAAkB;QAChB,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC7B;;;;;;;;;;;;IAeD,MAAM,cAAc,CAAC,MAAgB;QACnC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;KAC1C;;IAID,MAAM,QAAQ;QACZ,MAAM,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAE/B,OAAO,IAAI,CAAC,YAAY,EAAE,QAAQ,EAAE,CAAC;KACtC;IA8BD,4BAA4B,CAAC,KAAkB;;QAE7C,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;KAC7B;;;;;;IAgCD,gBAAgB;QACd,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;QACpB,MAAM,aAAa,GAAG,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;QAEvD,OAAO,aAAa,IAClB,YAAM,IAAI,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,EAAEA,OAAe,CAAC,UAAU,GAAI,IAChE,IAAI,CAAC;KACV;IAED,kBAAkB;QAChB,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;QACpB,MAAM,eAAe,GAAG,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QAE3D,OAAO,eAAe,IACpB,YAAM,IAAI,EAAE,KAAK,CAAC,YAAY,EAAE,IAAI,EAAEA,OAAe,CAAC,YAAY,GAAI,IACpE,IAAI,CAAC;KACV;IAED,YAAY;QACV,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;QACnC,IAAI,IAAI,KAAK,UAAU,CAAC,IAAI,EAAE;YAC5B,QACE,YACE,KAAK,EAAE;oBACL,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI;oBAClB,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe;iBAC5C,0BAED,MAAM,EAAE,IAAI,CAAC,UAAU,EACvB,SAAS,EAAE,IAAI,CAAC,aAAa,EAC7B,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAC,GAAG;;gBAEZ,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,QAAQ,GAAG,EAAqB,CAAC,IAEpD,oBAAc,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAC,GAAG,GAAG,CAC7D,EACP;SACH;KACF;IAED,MAAM;QACJ,QACE,EAAC,IAAI,IAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,IAC/B,EAAC,oBAAoB,IAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAC1C,IAAI,CAAC,YAAY,EAAE,EACpB,8BACE,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EACvC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,cAAc,EAAE,IAAI,CAAC,cAAc,EACnC,uBAAuB,EAAE,IAAI,CAAC,kBAAkB,EAChD,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,KAAK;;YAEjB,GAAG,EAAE,IAAI,CAAC,cAAc,IAEvB,IAAI,CAAC,kBAAkB,EAAE,EACzB,IAAI,CAAC,gBAAgB,EAAE,CACD,CACJ,CAClB,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["PICK_LIST_SLOTS"],"sources":["src/components/value-list-item/resources.ts","src/components/value-list-item/value-list-item.scss?tag=calcite-value-list-item&encapsulation=shadow","src/components/value-list-item/value-list-item.tsx"],"sourcesContent":["export const ICONS = {\n  drag: \"drag\",\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  actionsStart: \"actions-start\",\n};\n",":host {\n  @apply bg-foreground-1\n    text-color-2\n    text-n1\n    shadow-border-bottom\n    mb-px\n    box-border\n    flex;\n  transition:\n    background-color var(--calcite-animation-timing),\n    box-shadow var(--calcite-animation-timing);\n  * {\n    @apply box-border;\n  }\n}\n\ncalcite-pick-list-item {\n  @apply relative\n    m-0\n    flex-grow\n    shadow-none;\n}\n\n:host([active]),\n:host([selected]) {\n  @apply shadow-outline-active;\n}\n\n.handle {\n  @apply flex\n    cursor-move\n    items-center\n    justify-center\n    border-none\n    bg-transparent\n    py-0\n    px-1;\n  color: theme(\"borderColor.color.input\");\n  &:hover {\n    @apply bg-foreground-2 text-color-1;\n  }\n  @apply focus-base;\n  &:focus {\n    @apply focus-inset;\n  }\n  &--activated {\n    @apply bg-foreground-3 text-color-1;\n  }\n  calcite-icon {\n    color: inherit;\n  }\n}\n\n@include disabled();\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { CSS, SLOTS as PICK_LIST_SLOTS } from \"../pick-list-item/resources\";\nimport { ICON_TYPES } from \"../pick-list/resources\";\nimport { ListItemAndHandle } from \"./interfaces\";\nimport { ICONS, SLOTS } from \"./resources\";\n\n/**\n * @deprecated Use the `list` component instead.\n * @slot actions-end - A slot for adding `calcite-action`s or content to the end side of the component.\n * @slot actions-start - A slot for adding `calcite-action`s or content to the start side of the component.\n */\n@Component({\n  tag: \"calcite-value-list-item\",\n  styleUrl: \"value-list-item.scss\",\n  shadow: true,\n})\nexport class ValueListItem\n  implements ConditionalSlotComponent, InteractiveComponent, LoadableComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * A description for the component that displays below the label text.\n   */\n  @Prop({ reflect: true }) description?: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * @internal\n   */\n  @Prop() deselectDisabled = false;\n\n  /**\n   * When `true`, prevents the content of the component from user interaction.\n   */\n  @Prop({ reflect: true }) nonInteractive = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true }) handleActivated? = false;\n\n  /**\n   * Determines the icon SVG symbol that will be shown. Options are circle, square, grip or null.\n   *\n   * @see [ICON_TYPES](https://github.com/Esri/calcite-design-system/blob/main/src/components/pick-list/resources.ts#L5)\n   */\n  @Prop({ reflect: true }) icon?: ICON_TYPES | null = null;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Label and accessible name for the component. Appears next to the icon.\n   */\n  @Prop({ reflect: true }) label!: string;\n\n  /**\n   * Provides additional metadata to the component. Primary use is for a filter on the parent list.\n   */\n  @Prop() metadata?: Record<string, unknown>;\n\n  /**\n   * When `true`, adds an action to remove the component.\n   */\n  @Prop({ reflect: true }) removable = false;\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /**\n   * The component's value.\n   */\n  @Prop() value!: any;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteValueListItemElement;\n\n  pickListItem: HTMLCalcitePickListItemElement = null;\n\n  handleEl: HTMLSpanElement;\n\n  guid = `calcite-value-list-item-${guid()}`;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectInteractive(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n    disconnectInteractive(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Toggle the selection state. By default this won't trigger an event.\n   * The first argument allows the value to be coerced, rather than swapping values.\n   *\n   * @param coerce\n   */\n  @Method()\n  async toggleSelected(coerce?: boolean): Promise<void> {\n    this.pickListItem.toggleSelected(coerce);\n  }\n\n  /** Set focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return this.pickListItem?.setFocus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is selected or unselected.\n   */\n  @Event({ cancelable: false }) calciteListItemChange: EventEmitter<{\n    item: HTMLCalciteValueListItemElement;\n    value: any;\n    selected: boolean;\n    shiftPressed: boolean;\n  }>;\n\n  /**\n   * Fires when the remove button is pressed.\n   */\n  @Event({ cancelable: true }) calciteListItemRemove: EventEmitter<void>; // wrapped pick-list-item emits this\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteValueListItemDragHandleBlur: EventEmitter<ListItemAndHandle>;\n\n  @Listen(\"calciteListItemChange\")\n  calciteListItemChangeHandler(event: CustomEvent): void {\n    // adjust item payload from wrapped item before bubbling\n    event.detail.item = this.el;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  getPickListRef = (el: HTMLCalcitePickListItemElement): HTMLCalcitePickListItemElement =>\n    (this.pickListItem = el);\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    if (event.key === \" \") {\n      this.handleActivated = !this.handleActivated;\n    }\n  };\n\n  handleBlur = (): void => {\n    this.handleActivated = false;\n    this.calciteValueListItemDragHandleBlur.emit({ item: this.el, handle: this.handleEl });\n  };\n\n  handleSelectChange = (event: CustomEvent): void => {\n    this.selected = event.detail.selected;\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderActionsEnd(): VNode {\n    const { el } = this;\n    const hasActionsEnd = getSlotted(el, SLOTS.actionsEnd);\n\n    return hasActionsEnd ? (\n      <slot name={SLOTS.actionsEnd} slot={PICK_LIST_SLOTS.actionsEnd} />\n    ) : null;\n  }\n\n  renderActionsStart(): VNode {\n    const { el } = this;\n    const hasActionsStart = getSlotted(el, SLOTS.actionsStart);\n\n    return hasActionsStart ? (\n      <slot name={SLOTS.actionsStart} slot={PICK_LIST_SLOTS.actionsStart} />\n    ) : null;\n  }\n\n  renderHandle(): VNode {\n    const { icon, iconFlipRtl } = this;\n    if (icon === ICON_TYPES.grip) {\n      return (\n        <span\n          class={{\n            [CSS.handle]: true,\n            [CSS.handleActivated]: this.handleActivated,\n          }}\n          data-js-handle\n          onBlur={this.handleBlur}\n          onKeyDown={this.handleKeyDown}\n          role=\"button\"\n          tabindex=\"0\"\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(el) => (this.handleEl = el as HTMLSpanElement)}\n        >\n          <calcite-icon flipRtl={iconFlipRtl} icon={ICONS.drag} scale=\"s\" />\n        </span>\n      );\n    }\n  }\n\n  render(): VNode {\n    return (\n      <Host id={this.el.id || this.guid}>\n        <InteractiveContainer disabled={this.disabled}>\n          {this.renderHandle()}\n          <calcite-pick-list-item\n            description={this.description}\n            deselectDisabled={this.deselectDisabled}\n            disabled={this.disabled}\n            label={this.label}\n            metadata={this.metadata}\n            nonInteractive={this.nonInteractive}\n            onCalciteListItemChange={this.handleSelectChange}\n            removable={this.removable}\n            selected={this.selected}\n            value={this.value}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.getPickListRef}\n          >\n            {this.renderActionsStart()}\n            {this.renderActionsEnd()}\n          </calcite-pick-list-item>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"],"version":3}