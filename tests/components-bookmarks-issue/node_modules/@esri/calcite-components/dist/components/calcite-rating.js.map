{"file":"calcite-rating.js","mappings":"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","names":[],"sources":["src/components/rating/functional/star.tsx","src/components/rating/rating.scss?tag=calcite-rating&encapsulation=shadow","src/components/rating/rating.tsx"],"sourcesContent":["import { FunctionalComponent, h } from \"@stencil/core\";\n\nimport { StarIconProps } from \"../interfaces\";\n\nexport const StarIcon: FunctionalComponent<StarIconProps> = ({ full, scale, partial }) => (\n  <calcite-icon\n    {...{\n      class: partial ? undefined : \"icon\",\n      icon: full ? \"star-f\" : \"star\",\n      scale,\n    }}\n  />\n);\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-rating-spacing-unit: The amount of left and right margin spacing between each rating star.\n */\n\n:host {\n  @apply relative flex items-center;\n  inline-size: fit-content;\n}\n\n@include disabled();\n\n:host([scale=\"s\"]) {\n  @apply h-6;\n  --calcite-rating-spacing-unit: theme(\"spacing.1\");\n}\n\n:host([scale=\"m\"]) {\n  @apply h-8;\n  --calcite-rating-spacing-unit: theme(\"spacing.2\");\n}\n\n:host([scale=\"l\"]) {\n  @apply h-11;\n  --calcite-rating-spacing-unit: theme(\"spacing.3\");\n}\n\n:host([read-only]) {\n  @extend %non-interactive-host-contents;\n}\n\n.fieldset {\n  margin: 0;\n  display: flex;\n  border-width: 0;\n  padding: 0;\n  align-items: center;\n  gap: var(--calcite-rating-spacing-unit);\n}\n\n.wrapper {\n  display: inline-block;\n}\n\n.star {\n  @apply transition-default;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  color: theme(\"borderColor.color.input\");\n  &:focus {\n    @apply focus-outset;\n  }\n}\n\n.average,\n.fraction {\n  color: theme(\"colors.warning\");\n}\n\n.hovered,\n.selected {\n  color: theme(\"colors.brand\");\n}\n\n.fraction {\n  @apply transition-default;\n  position: absolute;\n  pointer-events: none;\n  inset-block-start: 0;\n  overflow: hidden;\n  inset-inline-start: 0;\n}\n\n// rating count\ncalcite-chip {\n  pointer-events: none;\n  cursor: default;\n}\n\n.number--average {\n  font-weight: bold;\n}\n\n.number--count {\n  color: var(--calcite-color-text-2);\n  font-style: italic;\n  &:not(:first-child) {\n    margin-inline-start: var(--calcite-rating-spacing-unit);\n  }\n}\n\n.visually-hidden {\n  @apply sr-only;\n}\n\n@include hidden-form-input();\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from \"@stencil/core\";\nimport { connectForm, disconnectForm, FormComponent, HiddenFormInputSlot } from \"../../utils/form\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Scale } from \"../interfaces\";\nimport { RatingMessages } from \"./assets/rating/t9n\";\nimport { StarIcon } from \"./functional/star\";\nimport { Star } from \"./interfaces\";\nimport { focusFirstTabbable } from \"../../utils/dom\";\n\n@Component({\n  tag: \"calcite-rating\",\n  styleUrl: \"rating.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Rating\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Specifies a cumulative average from previous ratings to display. */\n  @Prop({ reflect: true }) average: number;\n\n  /** Specifies the number of previous ratings to display. */\n  @Prop({ reflect: true }) count: number;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: RatingMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<RatingMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** When `true`, the component's value can be read, but cannot be modified. */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /**\n   * When `true`, the component must have a value in order for the form to submit.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** When `true`, and if available, displays the `average` and/or `count` data summary in a `calcite-chip`. */\n  @Prop({ reflect: true }) showChip = false;\n\n  /** The component's value. */\n  @Prop({ reflect: true, mutable: true }) value = 0;\n\n  @Watch(\"value\")\n  handleValueUpdate(newValue: number): void {\n    this.hoverValue = newValue;\n    if (this.emit) {\n      this.calciteRatingChange.emit();\n    }\n\n    this.emit = false;\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's value changes.\n   */\n  @Event({ cancelable: false }) calciteRatingChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Static\n  //\n  //--------------------------------------------------------------------------\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: RatingMessages;\n\n  @State() hoverValue: number;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentWillRender(): void {\n    this.starsMap = Array.from({ length: this.max }, (_, i) => {\n      const value = i + 1;\n      const average = !this.hoverValue && this.average && !this.value && value <= this.average;\n      const checked = value === this.value;\n      const fraction = this.average && this.average + 1 - value;\n      const hovered = value <= this.hoverValue;\n      const id = `${this.guid}-${value}`;\n      const partial = !this.hoverValue && !this.value && !hovered && fraction > 0 && fraction < 1;\n      const selected = this.value >= value;\n      const tabIndex = this.getTabIndex(value);\n      return {\n        average,\n        checked,\n        fraction,\n        hovered,\n        id,\n        partial,\n        selected,\n        value,\n        tabIndex,\n      };\n    });\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render() {\n    return (\n      <Host\n        onKeyDown={this.handleHostKeyDown}\n        onPointerOut={this.handleRatingPointerOut}\n        onPointerOver={this.handleRatingPointerOver}\n      >\n        <InteractiveContainer disabled={this.disabled}>\n          <span class=\"wrapper\">\n            <fieldset class=\"fieldset\" disabled={this.disabled}>\n              <legend class=\"visually-hidden\">{this.messages.rating}</legend>\n              {this.starsMap.map(\n                ({\n                  average,\n                  checked,\n                  fraction,\n                  hovered,\n                  id,\n                  partial,\n                  selected,\n                  value,\n                  tabIndex,\n                }) => {\n                  return (\n                    <label\n                      class={{\n                        star: true,\n                        selected,\n                        hovered,\n                        average,\n                        partial,\n                      }}\n                      data-value={value}\n                      htmlFor={id}\n                      onClick={this.handleLabelClick}\n                      onFocus={this.handleLabelFocus}\n                      onKeyDown={this.handleLabelKeyDown}\n                      onPointerDown={this.handleLabelPointerDown}\n                      onPointerOver={this.handleLabelPointerOver}\n                      tabIndex={tabIndex}\n                      // eslint-disable-next-line react/jsx-sort-props\n                      ref={this.setLabelEl}\n                    >\n                      <input\n                        checked={checked}\n                        class=\"visually-hidden\"\n                        disabled={this.disabled || this.readOnly}\n                        id={id}\n                        name={this.guid}\n                        onChange={this.handleInputChange}\n                        tabIndex={-1}\n                        type=\"radio\"\n                        value={value}\n                      />\n                      <StarIcon full={selected || average} scale={this.scale} />\n                      {partial && (\n                        <div class=\"fraction\" style={{ width: `${fraction * 100}%` }}>\n                          <StarIcon full partial scale={this.scale} />\n                        </div>\n                      )}\n                      <span class=\"visually-hidden\">\n                        {this.messages.stars.replace(\"{num}\", `${value}`)}\n                      </span>\n                    </label>\n                  );\n                },\n              )}\n\n              {(this.count || this.average) && this.showChip ? (\n                <calcite-chip scale={this.scale} value={this.count?.toString()}>\n                  {!!this.average && <span class=\"number--average\">{this.average.toString()}</span>}\n                  {!!this.count && <span class=\"number--count\">({this.count?.toString()})</span>}\n                </calcite-chip>\n              ) : null}\n            </fieldset>\n            <HiddenFormInputSlot component={this} />\n          </span>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private handleRatingPointerOver = () => {\n    this.isKeyboardInteraction = false;\n  };\n\n  private handleRatingPointerOut = () => {\n    this.isKeyboardInteraction = true;\n    this.hoverValue = null;\n  };\n\n  private handleHostKeyDown = () => {\n    this.isKeyboardInteraction = true;\n  };\n\n  private handleLabelKeyDown = (event: KeyboardEvent) => {\n    const inputValue = this.getValueFromLabelEvent(event);\n    const key = event.key;\n    const numberKey = key == \" \" ? undefined : Number(key);\n\n    this.emit = true;\n    if (isNaN(numberKey)) {\n      switch (key) {\n        case \"Enter\":\n        case \" \":\n          this.value = !this.required && this.value === inputValue ? 0 : inputValue;\n          break;\n        case \"ArrowLeft\":\n          this.value = this.getPreviousRatingValue(inputValue);\n          this.updateFocus();\n          event.preventDefault();\n          break;\n        case \"ArrowRight\":\n          this.value = this.getNextRatingValue(inputValue);\n          this.updateFocus();\n          event.preventDefault();\n          break;\n        case \"Tab\":\n          this.hoverValue = null;\n        default:\n          break;\n      }\n    } else {\n      if (!this.required && numberKey >= 0 && numberKey <= this.max) {\n        this.value = numberKey;\n      } else if (this.required && numberKey > 0 && numberKey <= this.max) {\n        this.value = numberKey;\n      }\n      this.updateFocus();\n    }\n  };\n\n  private handleInputChange = (event: InputEvent) => {\n    if (this.isKeyboardInteraction === true) {\n      const inputVal = Number(event.target[\"value\"]);\n      this.hoverValue = inputVal;\n      this.value = inputVal;\n    }\n  };\n\n  private handleLabelPointerOver = (event: PointerEvent) => {\n    this.hoverValue = this.getValueFromLabelEvent(event);\n  };\n\n  private handleLabelPointerDown = (event: PointerEvent) => {\n    const target = event.currentTarget as HTMLLabelElement;\n    const inputValue = this.getValueFromLabelEvent(event);\n    this.hoverValue = inputValue;\n    this.emit = true;\n    this.value = !this.required && this.value === inputValue ? 0 : inputValue;\n    target.focus();\n  };\n\n  private handleLabelClick = (event: Event) => {\n    //preventing pointerdown event will supress any compatability mouse events except for click event.\n    event.preventDefault();\n  };\n\n  private handleLabelFocus = (event: FocusEvent) => {\n    const inputValue = this.getValueFromLabelEvent(event);\n    this.hoverValue = inputValue;\n  };\n\n  private updateFocus(): void {\n    this.hoverValue = this.value;\n    this.labelElements[this.value - 1].focus();\n  }\n\n  private getTabIndex(value: number): number {\n    if (this.readOnly || (this.value !== value && (this.value || value !== 1))) {\n      return -1;\n    }\n    return 0;\n  }\n\n  private setLabelEl = (el: HTMLLabelElement): void => {\n    this.labelElements.push(el);\n  };\n\n  private getValueFromLabelEvent(event: FocusEvent | PointerEvent | KeyboardEvent): number {\n    const target = event.currentTarget as HTMLLabelElement;\n    return Number(target.getAttribute(\"data-value\"));\n  }\n\n  getNextRatingValue(currentValue: number): number {\n    return currentValue === 5 ? 1 : currentValue + 1;\n  }\n\n  getPreviousRatingValue(currentValue: number): number {\n    return currentValue === 1 ? 5 : currentValue - 1;\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private State / Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteRatingElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Rating[\"value\"];\n\n  private emit = false;\n\n  private guid = `calcite-ratings-${guid()}`;\n\n  private isKeyboardInteraction = true;\n\n  private labelElements: HTMLLabelElement[] = [];\n\n  private max = 5;\n\n  private starsMap: Star[];\n}\n"],"version":3}