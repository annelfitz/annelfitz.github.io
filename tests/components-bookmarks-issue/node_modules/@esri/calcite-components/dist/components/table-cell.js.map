{"file":"table-cell.js","mappings":"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","names":[],"sources":["src/components/table-cell/resources.ts","src/components/table-cell/table-cell.scss?tag=calcite-table-cell&encapsulation=shadow","src/components/table-cell/table-cell.tsx"],"sourcesContent":["export const CSS = {\n  numberCell: \"number-cell\",\n  footerCell: \"footer-cell\",\n  selectionCell: \"selection-cell\",\n  selectedCell: \"selected-cell\",\n  assistiveText: \"assistive-text\",\n  lastCell: \"last-cell\",\n  staticCell: \"static-cell\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-table-cell-background: Specifies the background color of the component.\n */\n\n:host {\n  --calcite-internal-table-cell-background: var(--calcite-table-cell-background, transparent);\n  @apply contents;\n}\n\n:host([alignment=\"center\"]) td {\n  @apply text-center;\n}\n\n:host([alignment=\"end\"]) td {\n  @apply text-end;\n}\n\n.assistive-text {\n  @apply sr-only;\n}\n\ntd {\n  @apply text-start  align-middle text-color-1 whitespace-normal;\n  background: var(--calcite-internal-table-cell-background);\n  font-size: var(--calcite-internal-table-cell-font-size);\n  border-inline-end: 1px solid var(--calcite-color-border-3);\n  padding: var(--calcite-internal-table-cell-padding);\n\n  &:not(.static-cell) {\n    @apply focus-base;\n    &:focus {\n      @apply focus-inset;\n    }\n  }\n}\n\ntd.last-cell {\n  border-inline-end: 0;\n}\n\n.number-cell {\n  @apply bg-foreground-2;\n}\n\n.footer-cell {\n  @apply bg-background font-medium text-color-1;\n  border-block-start: 1px solid var(--calcite-color-border-3);\n}\n\n.number-cell,\n.selection-cell {\n  border-inline-end: 1px solid var(--calcite-color-border-3);\n  inline-size: 2rem;\n  min-inline-size: 2rem;\n}\n\n.selection-cell {\n  @apply text-color-3;\n  inset-inline-start: 2rem;\n  &:not(.footer-cell) {\n    @apply cursor-pointer;\n  }\n}\n\n.selected-cell:not(.number-cell):not(.footer-cell) {\n  --calcite-internal-table-cell-background: var(--calcite-color-foreground-current);\n}\n\n.selection-cell.selected-cell {\n  box-shadow: inset 0.25rem 0 0 0 var(--calcite-color-brand);\n  color: var(--calcite-color-brand);\n  & calcite-icon {\n    color: var(--calcite-color-brand);\n  }\n}\n\n.calcite--rtl.selection-cell.selected-cell {\n  box-shadow: inset -0.25rem 0 0 0 var(--calcite-color-brand);\n}\n\n.selection-cell {\n  @apply align-middle;\n  & ::slotted(calcite-icon) {\n    @apply pointer-events-none mt-1;\n  }\n}\n\n@include disabled();\n","import {\n  Component,\n  Element,\n  Fragment,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { Alignment, Scale } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\n\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { TableCellMessages } from \"./assets/table-cell/t9n\";\nimport { CSS } from \"./resources\";\nimport { RowType, TableInteractionMode } from \"../table/interfaces\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\n\n/**\n * @slot - A slot for adding content, usually text content.\n */\n@Component({\n  tag: \"calcite-table-cell\",\n  styleUrl: \"table-cell.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TableCell\n  implements InteractiveComponent, LocalizedComponent, LoadableComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment = \"start\";\n\n  /** Specifies the number of columns the component should span. */\n  @Prop({ reflect: true }) colSpan: number;\n\n  /** Specifies the number of rows the component should span. */\n  @Prop({ reflect: true }) rowSpan: number;\n\n  /** @internal */\n  @Prop() disabled: boolean;\n\n  /** @internal */\n  @Prop() interactionMode: TableInteractionMode = \"interactive\";\n\n  /** @internal */\n  @Prop() lastCell: boolean;\n\n  /** @internal */\n  @Prop() numberCell: boolean;\n\n  /** @internal */\n  @Prop() parentRowIsSelected: boolean;\n\n  @Watch(\"parentRowIsSelected\")\n  onSelectedChange(): void {\n    this.updateScreenReaderSelectionText();\n  }\n\n  /** @internal */\n  @Prop() parentRowPositionLocalized: string;\n\n  /** @internal */\n  @Prop() parentRowType: RowType;\n\n  /** @internal */\n  @Prop() positionInRow: number;\n\n  /** @internal */\n  @Prop() readCellContentsToAT: boolean;\n\n  /** @internal */\n  @Prop() scale: Scale = \"m\";\n\n  /** @internal */\n  @Prop() selectionCell: boolean;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TableCellMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TableCellMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTableCellElement;\n\n  @State() contentsText = \"\";\n\n  @State() defaultMessages: TableCellMessages;\n\n  @State() focused = false;\n\n  @State() selectionText = \"\";\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  private containerEl: HTMLTableCellElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    this.updateScreenReaderContentsText();\n    this.updateScreenReaderSelectionText();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectInteractive(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.containerEl.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private updateScreenReaderSelectionText(): void {\n    const selectedText = `${this.messages?.row} ${this.parentRowPositionLocalized} ${this.messages?.selected} ${this.messages?.keyboardDeselect}`;\n    const unselectedText = `${this.messages?.row} ${this.parentRowPositionLocalized} ${this.messages?.unselected} ${this.messages?.keyboardSelect}`;\n    this.selectionText = this.parentRowIsSelected ? selectedText : unselectedText;\n  }\n\n  private updateScreenReaderContentsText = (): void => {\n    this.contentsText = this.el.textContent;\n  };\n\n  private onContainerBlur = (): void => {\n    this.focused = false;\n  };\n\n  private onContainerFocus = (): void => {\n    this.focused = true;\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const staticCell =\n      this.disabled ||\n      (this.interactionMode === \"static\" &&\n        (!this.selectionCell || (this.selectionCell && this.parentRowType === \"foot\")));\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <td\n            aria-disabled={this.disabled}\n            class={{\n              [CSS.footerCell]: this.parentRowType === \"foot\",\n              [CSS.numberCell]: this.numberCell,\n              [CSS.selectionCell]: this.selectionCell,\n              [CSS.selectedCell]: this.parentRowIsSelected,\n              [CSS.lastCell]: this.lastCell && (!this.rowSpan || (this.colSpan && !!this.rowSpan)),\n              [CSS_UTILITY.rtl]: dir === \"rtl\",\n              [CSS.staticCell]: staticCell,\n            }}\n            colSpan={this.colSpan}\n            onBlur={this.onContainerBlur}\n            onFocus={this.onContainerFocus}\n            role={this.interactionMode === \"interactive\" ? \"gridcell\" : \"cell\"}\n            rowSpan={this.rowSpan}\n            tabIndex={staticCell ? -1 : 0}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(el) => (this.containerEl = el)}\n          >\n            <span\n              aria-hidden={true}\n              aria-live={this.focused ? \"polite\" : \"off\"}\n              class={CSS.assistiveText}\n            >\n              {(this.selectionCell || this.readCellContentsToAT) && (\n                <Fragment>\n                  {this.selectionCell && this.selectionText}\n                  {this.readCellContentsToAT && !this.selectionCell && this.contentsText}\n                </Fragment>\n              )}\n            </span>\n            <slot onSlotchange={this.updateScreenReaderContentsText} />\n          </td>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"],"version":3}