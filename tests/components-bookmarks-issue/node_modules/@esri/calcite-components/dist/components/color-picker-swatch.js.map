{"file":"color-picker-swatch.js","mappings":"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","names":["color","Color"],"sources":["src/components/color-picker-swatch/resources.ts","src/components/color-picker-swatch/color-picker-swatch.scss?tag=calcite-color-picker-swatch&encapsulation=shadow","src/components/color-picker-swatch/color-picker-swatch.tsx"],"sourcesContent":["export const CSS = {\n  swatch: \"swatch\",\n  noColorSwatch: \"swatch--no-color\",\n  checker: \"checker\",\n};\n\nexport const COLORS = {\n  borderLight: \"rgba(0, 0, 0, 0.3)\",\n  borderDark: \"rgba(255, 255, 255, 0.15)\",\n};\n\nconst checkerSquareSize = 4;\n\nexport const CHECKER_DIMENSIONS = {\n  squareSize: checkerSquareSize,\n  size: checkerSquareSize * 2,\n};\n","$size-s: 20px;\n$size-m: 24px;\n$size-l: 28px;\n\n:host {\n  @apply relative inline-flex;\n}\n\n:host([scale=\"s\"]) {\n  @apply h-5 w-5;\n}\n\n:host([scale=\"m\"]) {\n  @apply h-6 w-6;\n}\n\n:host([scale=\"l\"]) {\n  @apply h-8 w-8;\n}\n\n.swatch {\n  @apply overflow-hidden;\n  block-size: inherit;\n  inline-size: inherit;\n\n  rect {\n    @apply transition-all duration-150 ease-in-out;\n  }\n}\n\n.swatch--no-color {\n  rect {\n    fill: var(--calcite-color-foreground-1);\n  }\n\n  line {\n    stroke: var(--calcite-color-status-danger);\n  }\n}\n\n.checker {\n  fill: #cacaca;\n}\n\n@include base-component();\n","import { Component, Element, Fragment, h, Prop, VNode, Watch } from \"@stencil/core\";\nimport Color from \"color\";\nimport { getModeName } from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport { hexify } from \"../color-picker/utils\";\nimport { CHECKER_DIMENSIONS, COLORS, CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-color-picker-swatch\",\n  styleUrl: \"color-picker-swatch.scss\",\n  shadow: true,\n})\nexport class ColorPickerSwatch {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is active.\n   */\n  @Prop({\n    reflect: true,\n  })\n  active = false;\n\n  /**\n   * The color value.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n   */\n  @Prop()\n  color: string | null;\n\n  @Watch(\"color\")\n  handleColorChange(color: string | null): void {\n    this.internalColor = color ? Color(color) : null;\n  }\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerSwatchElement;\n\n  private internalColor: Color;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.handleColorChange(this.color);\n  }\n\n  render(): VNode {\n    const isEmpty = !this.internalColor;\n    const classes = {\n      [CSS.swatch]: true,\n      [CSS.noColorSwatch]: isEmpty,\n    };\n\n    return (\n      <svg class={classes} xmlns=\"http://www.w3.org/2000/svg\">\n        {this.renderSwatch()}\n      </svg>\n    );\n  }\n\n  renderSwatch(): VNode {\n    const { active, el, internalColor } = this;\n    const borderRadius = active ? \"100%\" : \"0\";\n    const theme = getModeName(el);\n    const borderColor = theme === \"light\" ? COLORS.borderLight : COLORS.borderDark;\n    const commonSwatchProps = {\n      height: \"100%\",\n      rx: borderRadius,\n      stroke: borderColor,\n\n      // stroke-width and clip-path are needed to hide overflowing portion of stroke\n      // see https://stackoverflow.com/a/7273346/194216\n\n      // using attribute to work around Stencil using the prop name vs the attribute when rendering\n      [\"stroke-width\"]: \"2\",\n      width: \"100%\",\n    };\n\n    const isEmpty = !internalColor;\n\n    if (isEmpty) {\n      return (\n        <Fragment>\n          <clipPath id=\"shape\">\n            <rect height=\"100%\" rx={borderRadius} width=\"100%\" />\n          </clipPath>\n          <rect\n            clip-path={`inset(0 round ${borderRadius})`}\n            rx={borderRadius}\n            {...commonSwatchProps}\n          />\n          <line clip-path=\"url(#shape)\" stroke-width=\"3\" x1=\"100%\" x2=\"0\" y1=\"0\" y2=\"100%\" />\n        </Fragment>\n      );\n    }\n\n    const alpha = internalColor.alpha();\n    const hex = hexify(internalColor);\n    const hexa = hexify(internalColor, alpha < 1);\n\n    return (\n      <Fragment>\n        <title>{hexa}</title>\n        <defs>\n          <pattern\n            height={CHECKER_DIMENSIONS.size}\n            id=\"checker\"\n            patternUnits=\"userSpaceOnUse\"\n            width={CHECKER_DIMENSIONS.size}\n            x=\"0\"\n            y=\"0\"\n          >\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x=\"0\"\n              y=\"0\"\n            />\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x={CHECKER_DIMENSIONS.squareSize}\n              y={CHECKER_DIMENSIONS.squareSize}\n            />\n          </pattern>\n        </defs>\n        <rect fill=\"url(#checker)\" height=\"100%\" rx={borderRadius} width=\"100%\" />\n        <rect\n          fill={hex}\n          style={{\n            \"clip-path\":\n              alpha < 1 ? \"polygon(100% 0, 0 0, 0 100%)\" : `inset(0 round ${borderRadius})`,\n          }}\n          {...commonSwatchProps}\n        />\n        {alpha < 1 ? (\n          <rect\n            fill={hexa}\n            key=\"opacity-fill\"\n            style={{ \"clip-path\": \"polygon(100% 0, 100% 100%, 0 100%)\" }}\n            {...commonSwatchProps}\n          />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n"],"version":3}