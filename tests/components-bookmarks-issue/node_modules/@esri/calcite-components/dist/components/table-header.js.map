{"file":"table-header.js","mappings":"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","names":[],"sources":["src/components/table-header/resources.ts","src/components/table-header/table-header.scss?tag=calcite-table-header&encapsulation=shadow","src/components/table-header/table-header.tsx"],"sourcesContent":["export const CSS = {\n  numberCell: \"number-cell\",\n  selectionCell: \"selection-cell\",\n  bodyRow: \"body-row\",\n  footerRow: \"footer-row\",\n  heading: \"heading\",\n  description: \"description\",\n  multipleSelectionCell: \"cell--multiple-selection\",\n  assistiveText: \"assistive-text\",\n  active: \"active\",\n  selectedCell: \"selected-cell\",\n  lastCell: \"last-cell\",\n  staticCell: \"static-cell\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-table-header-background: Specifies the background color of the component.\n * @prop --calcite-table-header-border-color: Specifies the border color of the component.\n */\n\n:host {\n  --calcite-internal-table-header-background: var(--calcite-table-header-background, var(--calcite-color-foreground-2));\n  --calcite-internal-table-header-border-color: var(--calcite-table-border-color, var(--calcite-color-border-3));\n  @apply contents;\n}\n\n:host([alignment=\"center\"]) th {\n  @apply text-center;\n}\n\n:host([alignment=\"end\"]) th {\n  @apply text-end;\n}\n\n.assistive-text {\n  @apply sr-only;\n}\n\nth {\n  @apply text-color-1 text-start font-medium align-top whitespace-normal;\n  font-size: var(--calcite-internal-table-cell-font-size);\n  border-inline-end: 1px solid var(--calcite-internal-table-header-border-color);\n  border-block-end: 1px solid var(--calcite-internal-table-header-border-color);\n  padding-block: calc(var(--calcite-internal-table-cell-padding) * 1.5);\n  padding-inline: var(--calcite-internal-table-cell-padding);\n  background-color: var(--calcite-internal-table-header-background);\n\n  &:not(.static-cell) {\n    @apply focus-base;\n    &:not(.static-cell):focus-within {\n      @apply focus-inset;\n    }\n  }\n}\n\nth.last-cell {\n  border-inline-end: 0;\n}\n\nth.body-row,\nth.footer-row {\n  @apply align-middle;\n  border-block-end: 0;\n}\n\nth.footer-row {\n  border-block-start: 1px solid var(--calcite-internal-table-header-border-color);\n}\n\n.cell--multiple-selection {\n  @apply cursor-pointer align-middle text-color-3;\n}\n\n.selected-cell:not(.number-cell):not(.footer-cell) {\n  --calcite-internal-table-header-background: var(--calcite-color-foreground-current);\n}\n\n.number-cell,\n.selection-cell {\n  @apply text-color-2;\n  inline-size: 2rem;\n  min-inline-size: 2rem;\n}\n\n.selection-cell calcite-icon.active {\n  color: var(--calcite-color-brand);\n}\n.number-cell calcite-icon,\n.selection-cell calcite-icon {\n  @apply ms-auto me-auto align-middle;\n}\n\n.heading {\n  @apply text-color-1;\n}\n\n.description {\n  @apply text-color-3;\n  font-size: var(--calcite-internal-table-cell-font-size-secondary);\n}\n","import { Component, Element, h, Host, Method, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { Alignment, Scale, SelectionMode } from \"../interfaces\";\nimport { TableHeaderMessages } from \"./assets/table-header/t9n\";\nimport { CSS } from \"./resources\";\nimport { RowType, TableInteractionMode } from \"../table/interfaces\";\nimport { getIconScale } from \"../../utils/component\";\n\n@Component({\n  tag: \"calcite-table-header\",\n  styleUrl: \"table-header.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TableHeader implements LocalizedComponent, LoadableComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment = \"start\";\n\n  /** Specifies the number of columns the component should span. */\n  @Prop({ reflect: true }) colSpan: number;\n\n  /** A description to display beneath heading content. */\n  @Prop({ reflect: true }) description: string;\n\n  /** A heading to display above description content. */\n  @Prop({ reflect: true }) heading: string;\n\n  /** Specifies the number of rows the component should span. */\n  @Prop({ reflect: true }) rowSpan: number;\n\n  /** @internal */\n  @Prop() interactionMode: TableInteractionMode = \"interactive\";\n\n  /** @internal */\n  @Prop() lastCell: boolean;\n\n  /** @internal */\n  @Prop() numberCell = false;\n\n  /** @internal */\n  @Prop() parentRowIsSelected: boolean;\n\n  /** @internal */\n  @Prop() parentRowType: RowType;\n\n  /** @internal */\n  @Prop() positionInRow: number;\n\n  /** @internal */\n  @Prop() scale: Scale;\n\n  /** @internal */\n  @Prop() selectedRowCount: number;\n\n  /** @internal */\n  @Prop() selectedRowCountLocalized: string;\n\n  @Watch(\"selectedRowCount\")\n  @Watch(\"selectedRowCountLocalized\")\n  onSelectedChange(): void {\n    this.updateScreenReaderText();\n  }\n\n  /** @internal */\n  @Prop() selectionCell = false;\n\n  /** @internal */\n  @Prop() selectionMode: SelectionMode;\n\n  /** @internal */\n  @Prop() bodyRowCount: number;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TableHeaderMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TableHeaderMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    this.updateScreenReaderText();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n  @Element() el: HTMLCalciteTableHeaderElement;\n\n  @State() defaultMessages: TableHeaderMessages;\n\n  @State() focused = false;\n\n  @State() screenReaderText = \"\";\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  private containerEl: HTMLTableCellElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.containerEl.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private updateScreenReaderText(): void {\n    let text = \"\";\n    const sharedText = `${this.selectedRowCountLocalized} ${this.messages?.selected}`;\n    if (this.numberCell) {\n      text = this.messages?.rowNumber;\n    } else if (this.selectionMode === \"single\") {\n      text = `${this.messages?.selectionColumn}. ${sharedText}`;\n    } else if (this.bodyRowCount === this.selectedRowCount) {\n      text = `${this.messages?.selectionColumn}. ${this.messages?.all} ${sharedText} ${this.messages?.keyboardDeselectAll}`;\n    } else {\n      text = `${this.messages?.selectionColumn}. ${sharedText} ${this.messages?.keyboardSelectAll}`;\n    }\n    this.screenReaderText = text;\n  }\n\n  private onContainerBlur = (): void => {\n    this.focused = false;\n  };\n\n  private onContainerFocus = (): void => {\n    this.focused = true;\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const scope = this.rowSpan\n      ? \"rowgroup\"\n      : this.colSpan\n        ? \"colgroup\"\n        : this.parentRowType === \"body\"\n          ? \"row\"\n          : \"col\";\n\n    const allSelected = this.selectedRowCount === this.bodyRowCount;\n    const selectionIcon = allSelected ? \"check-square-f\" : \"check-square\";\n    const staticCell = this.interactionMode === \"static\" && !this.selectionCell;\n    return (\n      <Host>\n        <th\n          aria-colindex={this.parentRowType === \"head\" ? this.positionInRow : undefined}\n          class={{\n            [CSS.bodyRow]: this.parentRowType === \"body\",\n            [CSS.footerRow]: this.parentRowType === \"foot\",\n            [CSS.numberCell]: this.numberCell,\n            [CSS.selectionCell]: this.selectionCell,\n            [CSS.selectedCell]: this.parentRowIsSelected,\n            [CSS.multipleSelectionCell]: this.selectionMode === \"multiple\",\n            [CSS.staticCell]: staticCell,\n            [CSS.lastCell]: this.lastCell && (!this.rowSpan || (this.colSpan && !!this.rowSpan)),\n          }}\n          colSpan={this.colSpan}\n          onBlur={this.onContainerBlur}\n          onFocus={this.onContainerFocus}\n          role={this.parentRowType === \"head\" ? \"columnheader\" : \"rowheader\"}\n          rowSpan={this.rowSpan}\n          scope={scope}\n          tabIndex={this.selectionCell ? 0 : staticCell ? -1 : 0}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(el) => (this.containerEl = el)}\n        >\n          {this.heading && <div class={CSS.heading}>{this.heading}</div>}\n          {this.description && <div class={CSS.description}>{this.description}</div>}\n          {this.selectionCell && this.selectionMode === \"multiple\" && (\n            <calcite-icon\n              class={{ [CSS.active]: allSelected }}\n              icon={selectionIcon}\n              scale={getIconScale(this.scale)}\n            />\n          )}\n          <span\n            aria-hidden={true}\n            aria-live={this.focused ? \"polite\" : \"off\"}\n            class={CSS.assistiveText}\n          >\n            {(this.selectionCell || this.numberCell) && this.screenReaderText}\n          </span>\n        </th>\n      </Host>\n    );\n  }\n}\n"],"version":3}