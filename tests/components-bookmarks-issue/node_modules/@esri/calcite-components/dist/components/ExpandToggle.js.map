{"file":"ExpandToggle.js","mappings":"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","names":["ACTION_GROUP_SLOTS","ACTION_MENU_SLOTS"],"sources":["src/components/action-bar/utils.ts","src/components/functional/ExpandToggle.tsx"],"sourcesContent":["import { forceUpdate } from \"@stencil/core\";\nimport { SLOTS as ACTION_GROUP_SLOTS } from \"../action-group/resources\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Layout } from \"../interfaces\";\n\nexport const overflowActionsDebounceInMs = 150;\nconst groupBufferPx = 2;\n\nconst getAverage = (arr: number[]) => arr.reduce((p, c) => p + c, 0) / arr.length;\n\nexport const geActionDimensions = (\n  actions: HTMLCalciteActionElement[],\n): { actionWidth: number; actionHeight: number } => {\n  const actionsNotSlotted = actions.filter((action) => action.slot !== ACTION_GROUP_SLOTS.menuActions);\n  const actionLen = actionsNotSlotted?.length;\n  return {\n    actionWidth: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientWidth || 0)) : 0,\n    actionHeight: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientHeight || 0)) : 0,\n  };\n};\n\nconst getMaxActionCount = ({\n  width,\n  actionWidth,\n  layout,\n  height,\n  actionHeight,\n  groupCount,\n}: {\n  layout: Extract<\"horizontal\" | \"vertical\", Layout>;\n  height: number;\n  actionWidth: number;\n  width: number;\n  actionHeight: number;\n  groupCount: number;\n}): number => {\n  const maxContainerPx = layout === \"horizontal\" ? width : height;\n  const avgItemPx = layout === \"horizontal\" ? actionWidth : actionHeight;\n  return Math.floor((maxContainerPx - groupCount * groupBufferPx) / avgItemPx);\n};\n\nexport const getOverflowCount = ({\n  layout,\n  actionCount,\n  actionWidth,\n  width,\n  actionHeight,\n  height,\n  groupCount,\n}: {\n  layout: Extract<\"horizontal\" | \"vertical\", Layout>;\n  actionCount: number;\n  actionWidth: number;\n  width: number;\n  actionHeight: number;\n  height: number;\n  groupCount: number;\n}): number => {\n  return Math.max(actionCount - getMaxActionCount({ width, actionWidth, layout, height, actionHeight, groupCount }), 0);\n};\n\nexport const queryActions = (el: HTMLElement): HTMLCalciteActionElement[] => {\n  return Array.from(el.querySelectorAll(\"calcite-action\")).filter((action) =>\n    action.closest(\"calcite-action-menu\") ? action.slot === ACTION_MENU_SLOTS.trigger : true,\n  );\n};\n\nexport const overflowActions = ({\n  actionGroups,\n  expanded,\n  overflowCount,\n}: {\n  actionGroups: HTMLCalciteActionGroupElement[];\n  expanded: boolean;\n  overflowCount: number;\n}): void => {\n  let needToSlotCount = overflowCount;\n  actionGroups.reverse().forEach((group) => {\n    let slottedWithinGroupCount = 0;\n\n    const groupActions = queryActions(group).reverse();\n\n    groupActions.forEach((groupAction) => {\n      if (groupAction.slot === ACTION_GROUP_SLOTS.menuActions) {\n        groupAction.removeAttribute(\"slot\");\n        groupAction.textEnabled = expanded;\n      }\n    });\n\n    if (needToSlotCount > 0) {\n      groupActions.some((groupAction) => {\n        const unslottedActions = groupActions.filter((action) => !action.slot);\n\n        if (unslottedActions.length > 1 && groupActions.length > 2 && !groupAction.closest(\"calcite-action-menu\")) {\n          groupAction.textEnabled = true;\n          groupAction.setAttribute(\"slot\", ACTION_GROUP_SLOTS.menuActions);\n          slottedWithinGroupCount++;\n\n          if (slottedWithinGroupCount > 1) {\n            needToSlotCount--;\n          }\n        }\n\n        return needToSlotCount < 1;\n      });\n    }\n\n    forceUpdate(group);\n  });\n};\n","import { FunctionalComponent, h } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { queryActions } from \"../action-bar/utils\";\nimport { SLOTS as ACTION_GROUP_SLOTS } from \"../action-group/resources\";\nimport { Position, Scale } from \"../interfaces\";\n\ninterface ExpandToggleProps {\n  expanded: boolean;\n  expandText: string;\n  collapseText: string;\n  el: HTMLElement;\n  position: Position;\n  tooltip?: HTMLCalciteTooltipElement;\n  toggle: () => void;\n  ref?: (el: HTMLElement) => void;\n  scale?: Scale;\n}\n\nconst ICONS = {\n  chevronsLeft: \"chevrons-left\",\n  chevronsRight: \"chevrons-right\",\n};\n\nfunction getCalcitePosition(position: Position, el: HTMLElement): Position {\n  return position || el.closest(\"calcite-shell-panel\")?.position || \"start\";\n}\n\nexport function toggleChildActionText({\n  el,\n  expanded,\n}: {\n  el: HTMLElement;\n  expanded: boolean;\n}): void {\n  queryActions(el)\n    .filter((el) => el.slot !== ACTION_GROUP_SLOTS.menuActions)\n    .forEach((action) => (action.textEnabled = expanded));\n  el.querySelectorAll(\"calcite-action-group, calcite-action-menu\").forEach(\n    (el: HTMLCalciteActionMenuElement | HTMLCalciteActionGroupElement) => (el.expanded = expanded),\n  );\n}\n\nconst setTooltipReference = ({\n  tooltip,\n  referenceElement,\n  expanded,\n  ref,\n}: {\n  tooltip: HTMLCalciteTooltipElement;\n  referenceElement: HTMLCalciteActionElement;\n  expanded: boolean;\n  ref?: (el: HTMLElement) => void;\n}): HTMLCalciteActionElement => {\n  if (tooltip) {\n    tooltip.referenceElement = !expanded && referenceElement ? referenceElement : null;\n  }\n\n  if (ref) {\n    ref(referenceElement);\n  }\n\n  return referenceElement;\n};\n\nexport const ExpandToggle: FunctionalComponent<ExpandToggleProps> = ({\n  expanded,\n  expandText,\n  collapseText,\n  toggle,\n  el,\n  position,\n  tooltip,\n  ref,\n  scale,\n}) => {\n  const rtl = getElementDir(el) === \"rtl\";\n\n  const text = expanded ? collapseText : expandText;\n  const icons = [ICONS.chevronsLeft, ICONS.chevronsRight];\n\n  if (rtl) {\n    icons.reverse();\n  }\n\n  const end = getCalcitePosition(position, el) === \"end\";\n  const expandIcon = end ? icons[1] : icons[0];\n  const collapseIcon = end ? icons[0] : icons[1];\n\n  const actionNode = (\n    <calcite-action\n      icon={expanded ? expandIcon : collapseIcon}\n      onClick={toggle}\n      scale={scale}\n      text={text}\n      textEnabled={expanded}\n      title={!expanded && !tooltip ? text : null}\n      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n      ref={(referenceElement): HTMLCalciteActionElement =>\n        setTooltipReference({ tooltip, referenceElement, expanded, ref })\n      }\n    />\n  );\n\n  return actionNode;\n};\n"],"version":3}