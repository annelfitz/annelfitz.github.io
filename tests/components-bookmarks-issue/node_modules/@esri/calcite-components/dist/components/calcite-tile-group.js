/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.6.0
 */
import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client/index.js';
import { c as connectInteractive, u as updateHostInteraction, d as disconnectInteractive, I as InteractiveContainer } from './interactive.js';

const CSS = {
    container: "container",
};

const tileGroupCss = ":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{box-sizing:border-box;display:inline-block}:host ::slotted(calcite-tile){margin-block-end:var(--calcite-spacing-px);margin-inline-end:var(--calcite-spacing-px)}.container{display:grid;grid-auto-rows:minmax(auto, 1fr)}:host([scale=s]) .container{grid-template-columns:repeat(auto-fit, minmax(100px, 1fr))}:host([scale=m]) .container{grid-template-columns:repeat(auto-fit, minmax(140px, 1fr))}:host([scale=l]) .container{grid-template-columns:repeat(auto-fit, minmax(160px, 1fr))}:host([layout=vertical]) .container{display:flex;flex-direction:column}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([hidden]){display:none}[hidden]{display:none}";

const TileGroup = /*@__PURE__*/ proxyCustomElement(class TileGroup extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        //--------------------------------------------------------------------------
        //
        //  Private Methods
        //
        //--------------------------------------------------------------------------
        this.updateTiles = () => {
            this.el.querySelectorAll("calcite-tile").forEach((item) => (item.scale = this.scale));
        };
        this.disabled = false;
        this.layout = "horizontal";
        this.scale = "m";
    }
    scaleWatcher() {
        this.updateTiles();
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    connectedCallback() {
        connectInteractive(this);
        this.updateTiles();
    }
    componentDidRender() {
        updateHostInteraction(this);
    }
    disconnectedCallback() {
        disconnectInteractive(this);
    }
    render() {
        return (h(InteractiveContainer, { disabled: this.disabled }, h("div", { class: CSS.container }, h("slot", { onSlotchange: this.updateTiles }))));
    }
    get el() { return this; }
    static get watchers() { return {
        "scale": ["scaleWatcher"]
    }; }
    static get style() { return tileGroupCss; }
}, [1, "calcite-tile-group", {
        "disabled": [516],
        "layout": [513],
        "scale": [513]
    }, undefined, {
        "scale": ["scaleWatcher"]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["calcite-tile-group"];
    components.forEach(tagName => { switch (tagName) {
        case "calcite-tile-group":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, TileGroup);
            }
            break;
    } });
}
defineCustomElement$1();

const CalciteTileGroup = TileGroup;
const defineCustomElement = defineCustomElement$1;

export { CalciteTileGroup, defineCustomElement };

//# sourceMappingURL=calcite-tile-group.js.map