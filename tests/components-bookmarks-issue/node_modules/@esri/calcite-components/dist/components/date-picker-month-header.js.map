{"file":"date-picker-month-header.js","mappings":"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","names":[],"sources":["src/components/date-picker-month-header/resources.ts","src/components/date-picker-month-header/date-picker-month-header.scss?tag=calcite-date-picker-month-header&encapsulation=shadow","src/components/date-picker-month-header/date-picker-month-header.tsx"],"sourcesContent":["export const CSS = {\n  header: \"header\",\n  month: \"month\",\n  chevron: \"chevron\",\n  suffix: \"suffix\",\n  yearSuffix: \"year--suffix\",\n  yearWrap: \"year-wrap\",\n  textReverse: \"text--reverse\",\n};\n\nexport const ICON = {\n  chevronLeft: \"chevron-left\",\n  chevronRight: \"chevron-right\",\n};\n",":host {\n  @apply block;\n}\n\n.header {\n  @apply flex justify-between;\n  @apply py-0 px-1;\n}\n\n:host([scale=\"s\"]) {\n  .text {\n    @apply text-n1h my-2;\n  }\n  .chevron {\n    @apply h-9;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .text {\n    @apply text-0h my-3;\n  }\n  .chevron {\n    @apply h-12;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .text {\n    @apply text-1h my-4;\n  }\n  .chevron {\n    block-size: 3.5rem;\n  }\n}\n\n.chevron {\n  @apply text-color-3\n    bg-foreground-1\n    focus-base\n    -mx-1\n    box-content\n    flex\n    flex-grow-0\n    cursor-pointer\n    items-center\n    justify-center\n    border-none\n    px-1\n    outline-none\n    transition-default;\n  inline-size: calc(100% / 7);\n\n  &:focus {\n    @apply focus-inset;\n  }\n\n  &:hover,\n  &:focus {\n    @apply text-color-1 bg-foreground-2 fill-color-1;\n  }\n\n  &:active {\n    @apply bg-foreground-3;\n  }\n\n  &[aria-disabled=\"true\"] {\n    @apply pointer-events-none opacity-0;\n  }\n}\n\n.text {\n  @apply my-auto\n    w-full\n    flex\n    flex-auto\n    items-center\n    justify-center\n    text-center\n    leading-none;\n}\n\n.text--reverse {\n  @apply flex-row-reverse;\n}\n\n.month,\n.year,\n.suffix {\n  @apply text-color-1\n    bg-foreground-1\n    mx-1\n    my-auto\n    inline-block\n    font-medium\n    leading-tight;\n  font-size: inherit;\n}\n\n.year {\n  @apply font-inherit\n    focus-base\n    relative\n    w-10\n    border-none\n    bg-transparent\n    text-center;\n  &:hover {\n    @apply duration-100 ease-in-out;\n    transition-property: outline-color;\n    outline: 2px solid var(--calcite-color-border-2);\n    outline-offset: 2px;\n  }\n  &:focus {\n    @apply focus-outset;\n  }\n}\n\n.year--suffix {\n  @apply text-left;\n}\n\n.year-wrap {\n  @apply relative;\n}\n\n.suffix {\n  @apply top-0\n    whitespace-nowrap\n    text-start;\n  inset-inline-start: 0;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  dateFromRange,\n  parseCalendarYear,\n  getOrder,\n  nextMonth,\n  prevMonth,\n  formatCalendarYear,\n} from \"../../utils/date\";\n\nimport { closestElementCrossShadowBoundary } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { numberStringFormatter } from \"../../utils/locale\";\nimport { DatePickerMessages } from \"../date-picker/assets/date-picker/t9n\";\nimport { DateLocaleData } from \"../date-picker/utils\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Scale } from \"../interfaces\";\nimport { CSS, ICON } from \"./resources\";\nimport { getIconScale } from \"../../utils/component\";\n\n@Component({\n  tag: \"calcite-date-picker-month-header\",\n  styleUrl: \"date-picker-month-header.scss\",\n  shadow: true,\n})\nexport class DatePickerMonthHeader {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Already selected date. */\n  @Prop() selectedDate: Date;\n\n  /** The focused date is indicated and will become the selected date if the user proceeds. */\n  @Prop() activeDate: Date;\n\n  /**\n   * Specifies the number at which section headings should start.\n   */\n  @Prop() headingLevel: HeadingLevel;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() min: Date;\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() max: Date;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /** CLDR locale data for translated calendar info. */\n  @Prop() localeData: DateLocaleData;\n\n  /**\n   * This property specifies accessible strings for the component's previous month button ,next month button & year input elements.\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   * @readonly\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: DatePickerMessages;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /**\n   *  Fires to active date\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerSelect: EventEmitter<Date>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.parentDatePickerEl = closestElementCrossShadowBoundary(\n      this.el,\n      \"calcite-date-picker\",\n    ) as HTMLCalciteDatePickerElement;\n  }\n\n  connectedCallback(): void {\n    this.setNextPrevMonthDates();\n  }\n\n  render(): VNode {\n    return <div class={CSS.header}>{this.renderContent()}</div>;\n  }\n\n  renderContent(): VNode {\n    const { messages, localeData, activeDate } = this;\n    if (!activeDate || !localeData) {\n      return null;\n    }\n\n    if (this.parentDatePickerEl) {\n      const { numberingSystem, lang: locale } = this.parentDatePickerEl;\n\n      numberStringFormatter.numberFormatOptions = {\n        useGrouping: false,\n        ...(numberingSystem && { numberingSystem }),\n        ...(locale && { locale }),\n      };\n    }\n\n    const activeMonth = activeDate.getMonth();\n    const { months, unitOrder } = localeData;\n    const localizedMonth = (months.wide || months.narrow || months.abbreviated)[activeMonth];\n    const localizedYear = this.formatCalendarYear(activeDate.getFullYear());\n    const order = getOrder(unitOrder);\n    const reverse = order.indexOf(\"y\") < order.indexOf(\"m\");\n    const suffix = localeData.year?.suffix;\n    return (\n      <Fragment>\n        <a\n          aria-disabled={`${this.prevMonthDate.getMonth() === activeMonth}`}\n          aria-label={messages.prevMonth}\n          class={CSS.chevron}\n          href=\"#\"\n          onClick={this.prevMonthClick}\n          onKeyDown={this.prevMonthKeydown}\n          role=\"button\"\n          tabindex={this.prevMonthDate.getMonth() === activeMonth ? -1 : 0}\n        >\n          <calcite-icon flip-rtl icon={ICON.chevronLeft} scale={getIconScale(this.scale)} />\n        </a>\n        <div class={{ text: true, [CSS.textReverse]: reverse }}>\n          <Heading class={CSS.month} level={this.headingLevel}>\n            {localizedMonth}\n          </Heading>\n          <span class={CSS.yearWrap}>\n            <input\n              aria-label={messages.year}\n              class={{\n                year: true,\n                [CSS.yearSuffix]: !!suffix,\n              }}\n              inputmode=\"numeric\"\n              maxlength=\"4\"\n              minlength=\"1\"\n              onChange={this.onYearChange}\n              onInput={this.onYearInput}\n              onKeyDown={this.onYearKey}\n              pattern=\"\\d*\"\n              type=\"text\"\n              value={localizedYear}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={(el) => (this.yearInput = el)}\n            />\n            {suffix && <span class={CSS.suffix}>{suffix}</span>}\n          </span>\n        </div>\n        <a\n          aria-disabled={`${this.nextMonthDate.getMonth() === activeMonth}`}\n          aria-label={messages.nextMonth}\n          class={CSS.chevron}\n          href=\"#\"\n          onClick={this.nextMonthClick}\n          onKeyDown={this.nextMonthKeydown}\n          role=\"button\"\n          tabindex={this.nextMonthDate.getMonth() === activeMonth ? -1 : 0}\n        >\n          <calcite-icon flip-rtl icon={ICON.chevronRight} scale={getIconScale(this.scale)} />\n        </a>\n      </Fragment>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerMonthHeaderElement;\n\n  private yearInput: HTMLInputElement;\n\n  private parentDatePickerEl: HTMLCalciteDatePickerElement;\n\n  @State() nextMonthDate: Date;\n\n  @State() prevMonthDate: Date;\n\n  @Watch(\"min\")\n  @Watch(\"max\")\n  @Watch(\"activeDate\")\n  setNextPrevMonthDates(): void {\n    if (!this.activeDate) {\n      return;\n    }\n\n    this.nextMonthDate = dateFromRange(nextMonth(this.activeDate), this.min, this.max);\n    this.prevMonthDate = dateFromRange(prevMonth(this.activeDate), this.min, this.max);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Increment year on UP/DOWN keys\n   *\n   * @param event\n   */\n  private onYearKey = (event: KeyboardEvent): void => {\n    const localizedYear = this.parseCalendarYear((event.target as HTMLInputElement).value);\n    switch (event.key) {\n      case \"ArrowDown\":\n        event.preventDefault();\n        this.setYear({ localizedYear, offset: -1 });\n        break;\n      case \"ArrowUp\":\n        event.preventDefault();\n        this.setYear({ localizedYear, offset: 1 });\n        break;\n    }\n  };\n\n  private formatCalendarYear(year: number): string {\n    return numberStringFormatter.localize(`${formatCalendarYear(year, this.localeData)}`);\n  }\n\n  private parseCalendarYear(year: string): string {\n    return numberStringFormatter.localize(\n      `${parseCalendarYear(Number(numberStringFormatter.delocalize(year)), this.localeData)}`,\n    );\n  }\n\n  private onYearChange = (event: Event): void => {\n    this.setYear({\n      localizedYear: this.parseCalendarYear((event.target as HTMLInputElement).value),\n    });\n  };\n\n  private onYearInput = (event: Event): void => {\n    this.setYear({\n      localizedYear: this.parseCalendarYear((event.target as HTMLInputElement).value),\n      commit: false,\n    });\n  };\n\n  private prevMonthClick = (event: KeyboardEvent | MouseEvent): void => {\n    this.handleArrowClick(event, this.prevMonthDate);\n  };\n\n  private prevMonthKeydown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.prevMonthClick(event);\n    }\n  };\n\n  private nextMonthClick = (event: MouseEvent | KeyboardEvent): void => {\n    this.handleArrowClick(event, this.nextMonthDate);\n  };\n\n  private nextMonthKeydown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.nextMonthClick(event);\n    }\n  };\n\n  /*\n   * Update active month on clicks of left/right arrows\n   */\n  private handleArrowClick = (event: MouseEvent | KeyboardEvent, date: Date): void => {\n    event.preventDefault();\n    this.calciteInternalDatePickerSelect.emit(date);\n  };\n\n  private getInRangeDate({\n    localizedYear,\n    offset = 0,\n  }: {\n    localizedYear: string;\n    offset?: number;\n  }): Date {\n    const { min, max, activeDate } = this;\n    const parsedYear = Number(numberStringFormatter.delocalize(localizedYear));\n    const length = parsedYear.toString().length;\n    const year = isNaN(parsedYear) ? false : parsedYear + offset;\n    const inRange =\n      year && (!min || min.getFullYear() <= year) && (!max || max.getFullYear() >= year);\n    // if you've supplied a year and it's in range\n    if (year && inRange && length === localizedYear.length) {\n      const nextDate = new Date(activeDate);\n      nextDate.setFullYear(year as number);\n      return dateFromRange(nextDate, min, max);\n    }\n  }\n\n  /**\n   * Parse localized year string from input,\n   * set to active if in range\n   *\n   * @param root0\n   * @param root0.localizedYear\n   * @param root0.commit\n   * @param root0.offset\n   */\n  private setYear({\n    localizedYear,\n    commit = true,\n    offset = 0,\n  }: {\n    localizedYear: string;\n    commit?: boolean;\n    offset?: number;\n  }): void {\n    const { yearInput, activeDate } = this;\n    const inRangeDate = this.getInRangeDate({ localizedYear, offset });\n\n    // if you've supplied a year and it's in range, update active date\n    if (inRangeDate) {\n      this.calciteInternalDatePickerSelect.emit(inRangeDate);\n    }\n\n    if (commit) {\n      yearInput.value = this.formatCalendarYear((inRangeDate || activeDate).getFullYear());\n    }\n  }\n}\n"],"version":3}