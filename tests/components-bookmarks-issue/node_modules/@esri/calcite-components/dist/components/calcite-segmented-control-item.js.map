{"file":"calcite-segmented-control-item.js","mappings":";;;;;;;;;AAAO,MAAM,KAAK,GAAG;IACnB,KAAK,EAAE,OAAO;CACf,CAAC;AAEK,MAAM,GAAG,GAAG;IACjB,wBAAwB,EAAE,6BAA6B;CACxD;;ACND,MAAM,uBAAuB,GAAG,uhGAAuhG;;MCoB1iG,oBAAoB;;;;;;uBASmB,KAAK;2BAQhB,KAAK;;;;0BAoBoC,OAAO;sBAO9D,YAAY;qBAOd,GAAG;;IAvChB,mBAAmB;QAC3B,IAAI,CAAC,yCAAyC,CAAC,IAAI,EAAE,CAAC;KACvD;;;;;;IA6CD,MAAM;QACJ,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAE3D,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,IAChC,oBACE,KAAK,EAAE,GAAG,CAAC,wBAAwB,EACnC,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,IAAI,EAAE,IAAI,CAAC,SAAS,EACpB,GAAG,EAAC,YAAY,EAChB,KAAK,EAAC,GAAG,GACT,IACA,IAAI,CAAC;QAET,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,IAC5B,oBACE,KAAK,EAAE,GAAG,CAAC,wBAAwB,EACnC,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,IAAI,EAAE,IAAI,CAAC,OAAO,EAClB,GAAG,EAAC,UAAU,EACd,KAAK,EAAC,GAAG,GACT,IACA,IAAI,CAAC;QAET,QACE,EAAC,IAAI,oBAAe,aAAa,CAAC,OAAO,CAAC,gBAAc,KAAK,EAAE,IAAI,EAAC,OAAO,IACzE,aACE,KAAK,EAAE;gBACL,gBAAgB,EAAE,KAAK,KAAK,GAAG;gBAC/B,gBAAgB,EAAE,KAAK,KAAK,GAAG;gBAC/B,gBAAgB,EAAE,KAAK,KAAK,GAAG;gBAC/B,mBAAmB,EAAE,MAAM,KAAK,YAAY;gBAC5C,gBAAgB,EAAE,UAAU,KAAK,SAAS;gBAC1C,qBAAqB,EAAE,UAAU,KAAK,cAAc;aACrD,IAEA,IAAI,CAAC,SAAS,GAAG,WAAW,GAAG,IAAI,EACpC,gBAAO,KAAK,CAAQ,EACpB,YAAM,IAAI,EAAE,KAAK,CAAC,KAAK,GAAI,EAC1B,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,IAAI,CAC1B,CACH,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/segmented-control-item/resources.ts","src/components/segmented-control-item/segmented-control-item.scss?tag=calcite-segmented-control-item&encapsulation=shadow","src/components/segmented-control-item/segmented-control-item.tsx"],"sourcesContent":["export const SLOTS = {\n  input: \"input\",\n};\n\nexport const CSS = {\n  segmentedControlItemIcon: \"segmented-control-item-icon\",\n};\n",":host {\n  @apply flex\n    cursor-pointer\n    self-stretch\n    font-normal;\n  transition:\n    background-color var(--calcite-internal-animation-timing-fast) ease-in-out,\n    border-color var(--calcite-animation-timing) ease-in-out;\n}\n\n:host label {\n  @apply text-color-3\n    pointer-events-none\n    m-0.5\n    box-border\n    flex\n    flex-1\n    items-center;\n  transition:\n    background-color var(--calcite-internal-animation-timing-fast) ease-in-out,\n    border-color var(--calcite-internal-animation-timing-fast) ease-in-out,\n    color var(--calcite-internal-animation-timing-fast) ease-in-out;\n}\n\n.label--horizontal {\n  @apply justify-center;\n}\n\n// focus styles\n:host {\n  @apply focus-base;\n}\n:host(:focus) {\n  @apply focus-inset;\n  outline-offset: -1px;\n}\n\n.label--scale-s {\n  @apply text-n2h px-2;\n  padding-block: 0.125rem;\n}\n\n.label--scale-m {\n  @apply text-n1h px-3;\n  padding-block: 0.375rem;\n}\n\n.label--scale-l {\n  @apply text-0h px-4 py-2.5;\n}\n\n:host(:hover) label {\n  @apply bg-foreground-2 text-color-1;\n}\n\n:host(:active) label {\n  @apply bg-foreground-3;\n}\n\n:host([checked]) label {\n  @apply bg-brand border-color-brand cursor-default text-color-inverse;\n}\n\n:host([checked]) .label--outline,\n:host([checked]) .label--outline-fill {\n  @apply bg-foreground-1 border-color-brand;\n  box-shadow: inset 0 0 0 1px theme(\"backgroundColor.brand\");\n  color: theme(\"backgroundColor.brand\");\n}\n\n:host([checked]) .label--outline {\n  @apply bg-transparent;\n}\n\n::slotted(input) {\n  @apply hidden;\n}\n\n@media (forced-colors: active) {\n  :host([checked]) label {\n    background-color: highlight;\n  }\n  :host([checked]) .label--outline,\n  :host([checked]) .label--outline-fill {\n    @apply outline-none;\n  }\n  :host([checked]) label:not([class~=\"label--outline\"]) .segmented-control-item-icon {\n    color: highlightText;\n  }\n}\n\n// icon\n.segmented-control-item-icon {\n  @apply relative\n    m-0\n    inline-flex;\n  line-height: inherit;\n}\n\n:host([icon-start]) .label--scale-s .segmented-control-item-icon {\n  margin-inline-end: theme(\"margin.2\");\n}\n\n:host([icon-end]) .label--scale-s .segmented-control-item-icon {\n  margin-inline-start: theme(\"margin.2\");\n}\n\n:host([icon-start]) .label--scale-m .segmented-control-item-icon {\n  margin-inline-end: theme(\"margin.3\");\n}\n\n:host([icon-end]) .label--scale-m .segmented-control-item-icon {\n  margin-inline-start: theme(\"margin.3\");\n}\n\n:host([icon-start]) .label--scale-l .segmented-control-item-icon {\n  margin-inline-end: theme(\"margin.4\");\n}\n:host([icon-end]) .label--scale-l .segmented-control-item-icon {\n  margin-inline-start: theme(\"margin.4\");\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { Appearance, Layout, Scale } from \"../interfaces\";\nimport { CSS, SLOTS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-segmented-control-item\",\n  styleUrl: \"segmented-control-item.scss\",\n  shadow: true,\n})\nexport class SegmentedControlItem {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is checked. */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by form module\n  @Prop({ reflect: true, mutable: true }) checked = false;\n\n  @Watch(\"checked\")\n  protected handleCheckedChange(): void {\n    this.calciteInternalSegmentedControlItemChange.emit();\n  }\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: string;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: string;\n\n  /**\n   * The component's value.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by form module\n  @Prop({ mutable: true })\n  value: any | null;\n\n  /**\n   * Specifies the appearance style of the component inherited from parent `calcite-segmented-control`, defaults to `solid`.\n   *\n   * @internal\n   */\n  @Prop() appearance: Extract<\"outline\" | \"outline-fill\" | \"solid\", Appearance> = \"solid\";\n\n  /**\n   * Defines the layout of the component inherited from parent `calcite-segmented-control`, defaults to `horizontal`.\n   *\n   * @internal\n   */\n  @Prop() layout: Layout = \"horizontal\";\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-segmented-control`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const { appearance, checked, layout, scale, value } = this;\n\n    const iconStartEl = this.iconStart ? (\n      <calcite-icon\n        class={CSS.segmentedControlItemIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.iconStart}\n        key=\"icon-start\"\n        scale=\"s\"\n      />\n    ) : null;\n\n    const iconEndEl = this.iconEnd ? (\n      <calcite-icon\n        class={CSS.segmentedControlItemIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.iconEnd}\n        key=\"icon-end\"\n        scale=\"s\"\n      />\n    ) : null;\n\n    return (\n      <Host aria-checked={toAriaBoolean(checked)} aria-label={value} role=\"radio\">\n        <label\n          class={{\n            \"label--scale-s\": scale === \"s\",\n            \"label--scale-m\": scale === \"m\",\n            \"label--scale-l\": scale === \"l\",\n            \"label--horizontal\": layout === \"horizontal\",\n            \"label--outline\": appearance === \"outline\",\n            \"label--outline-fill\": appearance === \"outline-fill\",\n          }}\n        >\n          {this.iconStart ? iconStartEl : null}\n          <slot>{value}</slot>\n          <slot name={SLOTS.input} />\n          {this.iconEnd ? iconEndEl : null}\n        </label>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSegmentedControlItemElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the item has been selected.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalSegmentedControlItemChange: EventEmitter<void>;\n}\n"],"version":3}