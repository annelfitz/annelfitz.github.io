{"file":"calcite-shell.js","mappings":"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","names":[],"sources":["src/components/shell/resources.ts","src/components/shell/shell.scss?tag=calcite-shell&encapsulation=shadow","src/components/shell/shell.tsx"],"sourcesContent":["export const CSS = {\n  main: \"main\",\n  content: \"content\",\n  contentBehind: \"content--behind\",\n  contentNonInteractive: \"content--non-interactive\",\n  footer: \"footer\",\n  positionedSlotWrapper: \"positioned-slot-wrapper\",\n  container: \"container\",\n  contentBehindCenterContent: \"center-content\",\n};\n\nexport const SLOTS = {\n  centerRow: \"center-row\",\n  panelStart: \"panel-start\",\n  panelEnd: \"panel-end\",\n  panelTop: \"panel-top\",\n  panelBottom: \"panel-bottom\",\n  header: \"header\",\n  footer: \"footer\",\n  alerts: \"alerts\",\n  sheets: \"sheets\",\n  modals: \"modals\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-shell-tip-spacing: The left and right spacing of the `calcite-tip-manager` when slotted in the component.\n */\n\n:host {\n  @extend %component-host;\n  @apply absolute\n    inset-0\n    flex\n    h-full\n    w-full\n    flex-col\n    overflow-hidden;\n  --calcite-shell-tip-spacing: 26vw;\n}\n\n.main {\n  @apply relative\n    flex\n    h-full\n    w-full\n    flex-auto\n    flex-row\n    justify-between\n    overflow-hidden;\n}\n\n.content,\n.content--non-interactive {\n  @apply flex\n    h-full\n    w-full\n    flex-col\n    flex-nowrap;\n}\n\n.content {\n  @apply overflow-auto;\n}\n\n.content ::slotted(calcite-shell-center-row),\n.content ::slotted(calcite-panel),\n.content ::slotted(calcite-flow) {\n  @apply flex-auto self-stretch;\n  max-block-size: unset;\n}\n\n.content--behind {\n  @apply absolute\n    inset-0\n    border-0;\n  z-index: calc(theme(\"zIndex.default\") - 1);\n  display: initial;\n}\n\n.content--non-interactive {\n  @apply pointer-events-none;\n}\n\n::slotted(calcite-shell-center-row) {\n  inline-size: unset;\n}\n\n::slotted(.header .heading) {\n  @apply text-n2-wrap font-normal;\n}\n\nslot[name=\"panel-end\"]::slotted(calcite-shell-panel) {\n  margin-inline-start: auto;\n}\n\n::slotted(calcite-panel),\n::slotted(calcite-flow) {\n  @apply border-color-3\n  border\n  border-l-0\n  border-r-0\n  border-solid;\n}\n\nslot[name=\"center-row\"]::slotted(calcite-shell-center-row:not([detached])),\nslot[name=\"panel-top\"]::slotted(calcite-shell-center-row:not([detached])),\nslot[name=\"panel-bottom\"]::slotted(calcite-shell-center-row:not([detached])) {\n  @apply border-color-3 border-l border-r;\n}\n\n.center-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  block-size: 100%;\n  inline-size: 100%;\n  min-inline-size: 0;\n}\n\n::slotted(calcite-shell-center-row) {\n  flex: none;\n  align-self: stretch;\n}\n\n::slotted(calcite-tip-manager) {\n  @apply shadow-2\n  animate-in-up\n  absolute\n  box-border\n  rounded\n  z-toast;\n  inset-block-end: theme(\"spacing.2\");\n  inset-inline: var(--calcite-shell-tip-spacing);\n}\n\nslot[name=\"center-row\"]::slotted(calcite-shell-center-row),\nslot[name=\"panel-bottom\"]::slotted(calcite-shell-center-row) {\n  margin-block-start: auto;\n}\n\nslot[name=\"panel-top\"]::slotted(calcite-shell-center-row) {\n  margin-block-end: auto;\n}\n\n// positioning logic for expected slotted components\n.position-wrapper {\n  position: absolute;\n  pointer-events: none;\n  inset: 0;\n}\n\n@include base-component();\n","import { Component, Element, Fragment, h, Listen, Prop, State, VNode } from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { slotChangeGetAssignedElements, slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport { CSS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding custom content. This content will appear between any leading and trailing panels added to the component, such as a map.\n * @slot header - A slot for adding header content. This content will be positioned at the top of the component.\n * @slot footer - A slot for adding footer content. This content will be positioned at the bottom of the component.\n * @slot panel-start - A slot for adding the starting `calcite-shell-panel`.\n * @slot panel-end - A slot for adding the ending `calcite-shell-panel`.\n * @slot panel-top - A slot for adding the top `calcite-shell-center-row`.\n * @slot panel-bottom - A slot for adding the bottom `calcite-shell-center-row`.\n * @slot center-row - [Deprecated] Use the `\"panel-bottom\"` slot instead. A slot for adding the bottom `calcite-shell-center-row`.\n * @slot modals - A slot for adding `calcite-modal` components. When placed in this slot, the modal position will be constrained to the extent of the shell.\n * @slot alerts - A slot for adding `calcite-alert` components. When placed in this slot, the alert position will be constrained to the extent of the shell.\n * @slot sheets - A slot for adding `calcite-sheet` components. When placed in this slot, the sheet position will be constrained to the extent of the shell.\n */\n\n@Component({\n  tag: \"calcite-shell\",\n  styleUrl: \"shell.scss\",\n  shadow: true,\n})\nexport class Shell implements ConditionalSlotComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Positions the center content behind any `calcite-shell-panel`s.\n   */\n  @Prop({ reflect: true }) contentBehind = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalShellPanelResizeStart\")\n  handleCalciteInternalShellPanelResizeStart(event: CustomEvent<void>): void {\n    this.panelIsResizing = true;\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalShellPanelResizeEnd\")\n  handleCalciteInternalShellPanelResizeEnd(event: CustomEvent<void>): void {\n    this.panelIsResizing = false;\n    event.stopPropagation();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteShellElement;\n\n  @State() hasHeader = false;\n\n  @State() hasFooter = false;\n\n  @State() hasAlerts = false;\n\n  @State() hasModals = false;\n\n  @State() hasSheets = false;\n\n  @State() panelIsResizing = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleHeaderSlotChange = (event: Event): void => {\n    this.hasHeader = !!slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterSlotChange = (event: Event): void => {\n    this.hasFooter = !!slotChangeHasAssignedElement(event);\n  };\n\n  handleAlertsSlotChange = (event: Event): void => {\n    this.hasAlerts = !!slotChangeHasAssignedElement(event);\n    slotChangeGetAssignedElements(event)?.map((el) => {\n      if (el.nodeName === \"CALCITE-ALERT\") {\n        (el as HTMLCalciteAlertElement).slottedInShell = true;\n      }\n    });\n  };\n\n  handleSheetsSlotChange = (event: Event): void => {\n    this.hasSheets = !!slotChangeHasAssignedElement(event);\n    slotChangeGetAssignedElements(event)?.map((el) => {\n      if (el.nodeName === \"CALCITE-SHEET\") {\n        (el as HTMLCalciteSheetElement).slottedInShell = true;\n      }\n    });\n  };\n\n  handleModalsSlotChange = (event: Event): void => {\n    this.hasModals = !!slotChangeHasAssignedElement(event);\n    slotChangeGetAssignedElements(event)?.map((el) => {\n      if (el.nodeName === \"CALCITE-MODAL\") {\n        (el as HTMLCalciteModalElement).slottedInShell = true;\n      }\n    });\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderHeader(): VNode {\n    return (\n      <div hidden={!this.hasHeader}>\n        <slot key=\"header\" name={SLOTS.header} onSlotchange={this.handleHeaderSlotChange} />\n      </div>\n    );\n  }\n\n  renderFooter(): VNode {\n    return (\n      <div class={CSS.footer} hidden={!this.hasFooter} key=\"footer\">\n        <slot name={SLOTS.footer} onSlotchange={this.handleFooterSlotChange} />\n      </div>\n    );\n  }\n\n  renderAlerts(): VNode {\n    return (\n      <div hidden={!this.hasAlerts}>\n        <slot key=\"alerts\" name={SLOTS.alerts} onSlotchange={this.handleAlertsSlotChange} />\n      </div>\n    );\n  }\n\n  renderSheets(): VNode {\n    return (\n      <div hidden={!this.hasSheets}>\n        <slot key=\"sheets\" name={SLOTS.sheets} onSlotchange={this.handleSheetsSlotChange} />\n      </div>\n    );\n  }\n\n  renderModals(): VNode {\n    return (\n      <div hidden={!this.hasModals}>\n        <slot key=\"modals\" name={SLOTS.modals} onSlotchange={this.handleModalsSlotChange} />\n      </div>\n    );\n  }\n\n  renderContent(): VNode[] {\n    const { panelIsResizing } = this;\n    const defaultSlotNode: VNode = <slot key=\"default-slot\" />;\n    const defaultSlotContainerNode = panelIsResizing ? (\n      <div class={CSS.contentNonInteractive}>{defaultSlotNode}</div>\n    ) : (\n      defaultSlotNode\n    );\n    const deprecatedCenterRowSlotNode: VNode = (\n      <slot key=\"center-row-slot\" name={SLOTS.centerRow} />\n    );\n    const panelBottomSlotNode: VNode = <slot key=\"panel-bottom-slot\" name={SLOTS.panelBottom} />;\n    const panelTopSlotNode: VNode = <slot key=\"panel-top-slot\" name={SLOTS.panelTop} />;\n\n    const contentContainerKey = \"content-container\";\n\n    const content = !!this.contentBehind\n      ? [\n          <div\n            class={{\n              [CSS.content]: true,\n              [CSS.contentBehind]: true,\n            }}\n            key={contentContainerKey}\n          >\n            {defaultSlotContainerNode}\n          </div>,\n          <div class={CSS.contentBehindCenterContent}>\n            {panelTopSlotNode}\n            {panelBottomSlotNode}\n            {deprecatedCenterRowSlotNode}\n          </div>,\n        ]\n      : [\n          <div class={CSS.content} key={contentContainerKey}>\n            {panelTopSlotNode}\n            {defaultSlotContainerNode}\n            {panelBottomSlotNode}\n            {deprecatedCenterRowSlotNode}\n          </div>,\n        ];\n\n    return content;\n  }\n\n  renderMain(): VNode {\n    return (\n      <div class={CSS.main}>\n        <slot name={SLOTS.panelStart} />\n        {this.renderContent()}\n        <slot name={SLOTS.panelEnd} />\n      </div>\n    );\n  }\n\n  renderPositionedSlots(): VNode {\n    return (\n      <div class={CSS.positionedSlotWrapper}>\n        {this.renderAlerts()}\n        {this.renderModals()}\n        {this.renderSheets()}\n      </div>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        {this.renderHeader()}\n        {this.renderMain()}\n        {this.renderFooter()}\n        {this.renderPositionedSlots()}\n      </Fragment>\n    );\n  }\n}\n"],"version":3}