{"file":"calcite-shell-center-row.js","mappings":";;;;;;;;;AAAO,MAAM,GAAG,GAAG;IACjB,kBAAkB,EAAE,sBAAsB;IAC1C,OAAO,EAAE,SAAS;CACnB,CAAC;AAEK,MAAM,KAAK,GAAG;IACnB,SAAS,EAAE,YAAY;CACxB;;ACPD,MAAM,iBAAiB,GAAG,ogDAAogD;;MCmBjhD,cAAc;;;;;wBAUW,KAAK;2BAKK,GAAG;wBAKH,KAAK;;;;;;;IAgBnD,iBAAiB;QACf,+BAA+B,CAAC,IAAI,CAAC,CAAC;KACvC;IAED,oBAAoB;QAClB,kCAAkC,CAAC,IAAI,CAAC,CAAC;KAC1C;;;;;;IAQD,MAAM;QACJ,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;QAEpB,MAAM,WAAW,IACf,WAAK,KAAK,EAAE,GAAG,CAAC,OAAO,IACrB,eAAQ,CACJ,CACP,CAAC;QAEF,MAAM,SAAS,GAAG,UAAU,CAA8B,EAAE,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;QAE/E,MAAM,aAAa,GAAG,SAAS,IAC7B,WAAK,KAAK,EAAE,GAAG,CAAC,kBAAkB,EAAE,GAAG,EAAC,YAAY,IAClD,YAAM,IAAI,EAAE,KAAK,CAAC,SAAS,GAAI,CAC3B,IACJ,IAAI,CAAC;QAET,MAAM,QAAQ,GAAY,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAEvD,IAAI,SAAS,EAAE,QAAQ,KAAK,KAAK,EAAE;YACjC,QAAQ,CAAC,OAAO,EAAE,CAAC;SACpB;QAED,OAAO,EAAC,QAAQ,QAAE,QAAQ,CAAY,CAAC;KACxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/shell-center-row/resources.ts","src/components/shell-center-row/shell-center-row.scss?tag=calcite-shell-center-row&encapsulation=shadow","src/components/shell-center-row/shell-center-row.tsx"],"sourcesContent":["export const CSS = {\n  actionBarContainer: \"action-bar-container\",\n  content: \"content\",\n};\n\nexport const SLOTS = {\n  actionBar: \"action-bar\",\n};\n",":host {\n  @extend %component-host;\n  @apply flex\n    flex-auto\n    overflow-hidden\n    bg-transparent\n    z-default;\n}\n\n.content {\n  @apply m-0\n    flex\n    h-full\n    w-full\n    overflow-hidden;\n  flex: 1 0 0;\n}\n\n.action-bar-container {\n  @apply flex;\n}\n\n:host([detached]) {\n  @apply shadow-0\n  animate-in-up\n  mx-2\n  mt-2 mb-6 rounded\n  border-0;\n}\n\n:host([position=\"end\"]) {\n  @apply self-end;\n}\n\n:host([position=\"start\"]) {\n  @apply self-start;\n}\n\n:host([height-scale=\"s\"]) {\n  block-size: theme(\"width[1/3]\");\n}\n\n:host([height-scale=\"m\"]) {\n  block-size: 70%;\n}\n\n:host([height-scale=\"l\"]) {\n  @apply h-full;\n}\n\n:host([height-scale=\"l\"][detached]) {\n  block-size: calc(theme(\"height.full\") - theme(\"spacing.8\"));\n}\n\n::slotted(calcite-panel) {\n  @apply h-full w-full;\n}\n\n::slotted(calcite-action-bar),\n::slotted(calcite-action-bar[position=\"end\"]) {\n  border-inline-end: theme(\"borderWidth.DEFAULT\") solid;\n  @apply border-color-3;\n}\n\n@include base-component();\n","import { Component, Element, Fragment, h, Prop, VNode } from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted } from \"../../utils/dom\";\nimport { Position, Scale } from \"../interfaces\";\nimport { CSS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding content to the `calcite-shell-panel`.\n * @slot action-bar - A slot for adding a `calcite-action-bar` to the `calcite-shell-panel`.\n */\n@Component({\n  tag: \"calcite-shell-center-row\",\n  styleUrl: \"shell-center-row.scss\",\n  shadow: true,\n})\nexport class ShellCenterRow implements ConditionalSlotComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the content area displays like a floating panel.\n   */\n  @Prop({ reflect: true }) detached = false;\n\n  /**\n   * Specifies the maximum height of the component.\n   */\n  @Prop({ reflect: true }) heightScale: Scale = \"s\";\n\n  /**\n   * Specifies the component's position. Will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({ reflect: true }) position: Position = \"end\";\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteShellCenterRowElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { el } = this;\n\n    const contentNode = (\n      <div class={CSS.content}>\n        <slot />\n      </div>\n    );\n\n    const actionBar = getSlotted<HTMLCalciteActionBarElement>(el, SLOTS.actionBar);\n\n    const actionBarNode = actionBar ? (\n      <div class={CSS.actionBarContainer} key=\"action-bar\">\n        <slot name={SLOTS.actionBar} />\n      </div>\n    ) : null;\n\n    const children: VNode[] = [actionBarNode, contentNode];\n\n    if (actionBar?.position === \"end\") {\n      children.reverse();\n    }\n\n    return <Fragment>{children}</Fragment>;\n  }\n}\n"],"version":3}