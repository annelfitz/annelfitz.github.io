"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[6894],{54239:(e,t,i)=>{i.d(t,{A:()=>f});var r,o=i(31635),s=i(4576),n=i(66552),a=i(25482),l=i(83047),d=i(67076),h=i(10107),p=(i(44208),i(53966),i(36005)),g=i(40608),c=i(43937);const y=(0,n.O)()({orthometric:"gravity-related-height",gravity_related_height:"gravity-related-height",ellipsoidal:"ellipsoidal"}),u=y.jsonValues.slice();(0,s.Xy)(u,"orthometric");const v=(0,n.O)()({meter:"meters",foot:"feet","us-foot":"us-feet","clarke-foot":"clarke-feet","clarke-yard":"clarke-yards","clarke-link":"clarke-links","sears-yard":"sears-yards","sears-foot":"sears-feet","sears-chain":"sears-chains","benoit-1895-b-chain":"benoit-1895-b-chains","indian-yard":"indian-yards","indian-1937-yard":"indian-1937-yards","gold-coast-foot":"gold-coast-feet","sears-1922-truncated-chain":"sears-1922-truncated-chains","50-kilometers":"50-kilometers","150-kilometers":"150-kilometers"});let f=r=class extends a.o{constructor(e){super(e),this.heightModel="gravity-related-height",this.heightUnit="meters",this.vertCRS=null}writeHeightModel(e,t,i){return y.write(e,t,i)}readHeightModel(e,t,i){return y.read(e)||(i?.messages&&i.messages.push(function(e,t){return new d.A("height-model:unsupported",`Height model of value '${e}' is not supported`,t)}(e,{context:i})),null)}readHeightUnit(e,t,i){return v.read(e)||(i?.messages&&i.messages.push(m(e,{context:i})),null)}readHeightUnitService(e,t,i){return(0,l.LA)(e)||v.read(e)||(i?.messages&&i.messages.push(m(e,{context:i})),null)}readVertCRS(e,t){return t.vertCRS||t.ellipsoid||t.geoid}clone(){return new r({heightModel:this.heightModel,heightUnit:this.heightUnit,vertCRS:this.vertCRS})}equals(e){return!!e&&(this===e||this.heightModel===e.heightModel&&this.heightUnit===e.heightUnit&&this.vertCRS===e.vertCRS)}static deriveUnitFromSR(e,t){const i=(0,l.k1)(t);return new r({heightModel:e.heightModel,heightUnit:i??void 0,vertCRS:e.vertCRS})}write(e,t){return t={origin:"web-scene",...t},super.write(e,t)}static fromJSON(e){if(!e)return null;const t=new r;return t.read(e,{origin:"web-scene"}),t}};function m(e,t){return new d.A("height-unit:unsupported",`Height unit of value '${e}' is not supported`,t)}(0,o.Cg)([(0,h.MZ)({type:y.apiValues,constructOnly:!0,json:{origins:{"web-scene":{type:u,default:"ellipsoidal",write:{isRequired:!0}}}}})],f.prototype,"heightModel",void 0),(0,o.Cg)([(0,c.K)("web-scene","heightModel")],f.prototype,"writeHeightModel",null),(0,o.Cg)([(0,p.w)(["web-scene","service"],"heightModel")],f.prototype,"readHeightModel",null),(0,o.Cg)([(0,h.MZ)({type:v.apiValues,constructOnly:!0,json:{origins:{"web-scene":{type:v.jsonValues,write:{writer:v.write,isRequired:!0}}}}})],f.prototype,"heightUnit",void 0),(0,o.Cg)([(0,p.w)("web-scene","heightUnit")],f.prototype,"readHeightUnit",null),(0,o.Cg)([(0,p.w)("service","heightUnit")],f.prototype,"readHeightUnitService",null),(0,o.Cg)([(0,h.MZ)({type:String,constructOnly:!0,json:{origins:{"web-scene":{write:!0}}}})],f.prototype,"vertCRS",void 0),(0,o.Cg)([(0,p.w)("service","vertCRS",["vertCRS","ellipsoid","geoid"])],f.prototype,"readVertCRS",null),f=r=(0,o.Cg)([(0,g.$)("esri.geometry.HeightModelInfo")],f)},73179:(e,t,i)=>{i.d(t,{b:()=>l,h:()=>d});var r=i(4718),o=i(53966),s=i(84952),n=i(60694),a=i(10873);function l(e){const{nonStandardUrlAllowed:t=!1,separator:i}=e??{},s=(0,r.o8)(a.OZ),l=s.json?.write;return"object"==typeof l&&l&&(l.writer=function(e,t,r,o){(0,n.LS)(this,e,i,t,o)}),{...s,set:function(e){if(null==e)return void this._set("url",e);const i=(0,n.HZ)({layer:this,url:e,nonStandardUrlAllowed:t,logger:o.A.getLogger(this)});this._set("url",i.url),null!=i.layerId&&this._set("layerId",i.layerId)}}}function d(e,t){const{separator:i}=t??{},r=(0,s.An)(e.url);return null!=r&&(null!=e.dynamicDataSource?r.path=(0,s.fj)(r.path,"dynamicLayer"):null!=e.layerId&&(r.path=(0,s.fj)(r.path,i??"",e.layerId.toString()))),r}},74660:(e,t,i)=>{i.r(t),i.d(t,{default:()=>R});var r=i(31635),o=i(49186),s=i(53966),n=i(92071),a=i(74887),l=i(36708),d=i(10107),h=(i(44208),i(87811),i(36005)),p=i(40608),g=i(87024),c=i(4146),y=i(52136),u=i(18768),v=i(69208),f=i(16131),m=i(8303),w=i(25036),S=i(58947),C=i(10873),M=i(50805),b=i(58325),_=i(24212),A=i(97159);let I=class extends((0,S.w)((0,u.b)((0,f.q)((0,m.A)((0,w.j)((0,n.P)((0,v.d)((0,y.p)(c.A))))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles((0,l.on)(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,l.OH))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}readModifications(e,t,i){this._modificationsSource={url:(0,A.f)(e,i),context:i}}set elevationInfo(e){null!=e&&"absolute-height"!==e.mode||this._set("elevationInfo",e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e?.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(e){(0,a.QP)(e)}if(await this._fetchService(t),null!=this._modificationsSource){const t=await b.A.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",t,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(null!=this._modificationsSource)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(0,e)}validateLayer(e){if(e.layerType&&"IntegratedMesh"!==e.layerType)throw new o.A("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new o.A("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new o.A("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(e){const t="Integrated mesh layers";(0,_.XF)(s.A.getLogger(this),(0,_.B)(t,"absolute-height",e)),(0,_.XF)(s.A.getLogger(this),(0,_.tW)(t,e))}};(0,r.Cg)([(0,d.MZ)({type:String,readOnly:!0})],I.prototype,"geometryType",void 0),(0,r.Cg)([(0,d.MZ)({type:["show","hide"]})],I.prototype,"listMode",void 0),(0,r.Cg)([(0,d.MZ)({type:["IntegratedMeshLayer"]})],I.prototype,"operationalLayerType",void 0),(0,r.Cg)([(0,d.MZ)({json:{read:!1},readOnly:!0})],I.prototype,"type",void 0),(0,r.Cg)([(0,d.MZ)({type:M.W4,readOnly:!0})],I.prototype,"nodePages",void 0),(0,r.Cg)([(0,d.MZ)({type:[M.uV],readOnly:!0})],I.prototype,"materialDefinitions",void 0),(0,r.Cg)([(0,d.MZ)({type:[M.Ot],readOnly:!0})],I.prototype,"textureSetDefinitions",void 0),(0,r.Cg)([(0,d.MZ)({type:[M.L0],readOnly:!0})],I.prototype,"geometryDefinitions",void 0),(0,r.Cg)([(0,d.MZ)({readOnly:!0})],I.prototype,"serviceUpdateTimeStamp",void 0),(0,r.Cg)([(0,d.MZ)({type:b.A,clonable:e=>e.clone()}),(0,g.P)({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],I.prototype,"modifications",void 0),(0,r.Cg)([(0,h.w)(["web-scene","portal-item"],"modifications")],I.prototype,"readModifications",null),(0,r.Cg)([(0,d.MZ)(C.Yj)],I.prototype,"elevationInfo",null),(0,r.Cg)([(0,d.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],I.prototype,"path",void 0),I=(0,r.Cg)([(0,p.$)("esri.layers.IntegratedMeshLayer")],I);const R=I}}]);