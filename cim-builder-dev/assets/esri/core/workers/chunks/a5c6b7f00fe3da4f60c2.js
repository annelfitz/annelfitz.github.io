self.webpackChunkRemoteClient([26],{670:function(e,t,i){"use strict";i.r(t),i.d(t,"ElevationQuery",(function(){return _})),i.d(t,"GeometryDescriptor",(function(){return b})),i.d(t,"getFinestLodIndex",(function(){return O}));var n=i(14),s=i(2),o=i(92),l=i(60),a=i(101),r=i(78),c=i(134),u=i(87),h=i(83),p=(i(7),i(3)),m=i(242);i(58);const f=p.a.getLogger("esri.layers.support.ElevationSampler");class d{queryElevation(e){return function(e,t){const i=v(e,t.spatialReference);if(!i)return null;switch(e.type){case"point":!function(e,t,i){e.z=i.elevationAt(t)||0}(e,i,t);break;case"polyline":!function(e,t,i){T.spatialReference=t.spatialReference;const n=e.hasM&&!e.hasZ;for(let s=0;s<e.paths.length;s++){const o=e.paths[s],l=t.paths[s];for(let e=0;e<o.length;e++){const t=o[e],s=l[e];T.x=s[0],T.y=s[1];const a=i.elevationAt(T)||0;n&&(t[3]=t[2]),t[2]=a}}e.hasZ=!0}(e,i,t);break;case"multipoint":!function(e,t,i){T.spatialReference=t.spatialReference;const n=e.hasM&&!e.hasZ;for(let s=0;s<e.points.length;s++){const o=e.points[s],l=t.points[s];T.x=l[0],T.y=l[1];const a=i.elevationAt(T)||0;n&&(o[3]=o[2]),o[2]=a}e.hasZ=!0}(e,i,t)}return e}(e.clone(),this)}on(){return g}projectIfRequired(e,t){return v(e,t)}}class y extends d{constructor(e,t,i){super(),this.tile=e,this.noDataValue=i,this.extent=Object(h.k)(e.tile.extent,t.spatialReference);const n=Object(u.b)(t.spatialReference),s=t.lodAt(e.tile.level).resolution*n;this.demResolution={min:s,max:s}}get spatialReference(){return this.extent.spatialReference}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return Object(m.e)(this.extent,t)}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;if(!this.contains(e)){const t=this.extent,i=`${t.xmin}, ${t.ymin}, ${t.xmax}, ${t.ymax}`;f.warn("#elevationAt()",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler extent (${i})`)}return this.tile.sample(t.x,t.y)}}class x extends d{constructor(e,t,i){let n;super(),"number"==typeof t?(this.noDataValue=t,n=null):(n=t,this.noDataValue=i),this.samplers=n?e.map(e=>new y(e,n,this.noDataValue)):e;const s=this.samplers[0];if(s){this.extent=s.extent.clone();const{min:e,max:t}=s.demResolution;this.demResolution={min:e,max:t};for(let e=1;e<this.samplers.length;e++){const t=this.samplers[e];this.extent.union(t.extent),this.demResolution.min=Math.min(this.demResolution.min,t.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,t.demResolution.max)}}else this.extent=Object(h.k)(Object(h.c)(),n.spatialReference),this.demResolution={min:0,max:0}}get spatialReference(){return this.extent.spatialReference}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;for(const e of this.samplers)if(e.contains(t))return e.elevationAt(t);return f.warn("#elevationAt()",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler`),null}}function v(e,t){const i=e.spatialReference;return i.equals(t)?e:Object(o.a)(i,t)?Object(o.d)(e,t):(f.error(`Cannot project geometry spatial reference (wkid:${i.wkid}) to elevation sampler spatial reference (wkid:${t.wkid})`),null)}const T=new l.a,g={remove(){}};class R{constructor(e,t){if(this.tile=e,!t)return void(this.samplerData=null);const i=this.tile.extent;this.samplerData={pixelData:t.values,width:t.width,height:t.height,safeWidth:.99999999*(t.width-1),noDataValue:t.noDataValue,dx:(t.width-1)/(i[2]-i[0]),dy:(t.width-1)/(i[3]-i[1]),x0:i[0],y1:i[3]}}sample(e,t){if(this.samplerData)return function(e,t,i){const{safeWidth:n,width:s,pixelData:o,noDataValue:l}=e,a=w(e.dy*(e.y1-i),0,n),r=w(e.dx*(t-e.x0),0,n),c=Math.floor(a),u=Math.floor(r),h=c*s+u,p=h+s,m=o[h],f=o[p],d=o[h+1],y=o[p+1];if(m!==l&&f!==l&&d!==l&&y!==l){const e=r-u,t=m+(d-m)*e;return t+(f+(y-f)*e-t)*(a-c)}}(this.samplerData,e,t)}}function w(e,t,i){return e<t?t:e>i?i:e}class _{async queryAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter(e=>e.visible):e.slice()).length)return Object(s.r)(new n.a("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from"));const o=b.fromGeometry(t);let l=!1;i&&i.returnSampleInfo||(l=!0);const a={noDataValue:0,maximumAutoTileRequests:20,...i,returnSampleInfo:!0,demResolution:"auto"},r=await this.query(e[e.length-1],o,a),c=await this._queryAllContinue(e,r,a);return c.geometry=c.geometry.export(),l&&delete c.sampleInfo,c}async query(e,t,i){if(!e)return Object(s.r)(new n.a("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from"));if(!t||!(t instanceof b)&&"point"!==t.type&&"multipoint"!==t.type&&"polyline"!==t.type)return Object(s.r)(new n.a("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation"));i={noDataValue:0,demResolution:"auto",minDemResolution:0,maximumAutoTileRequests:20,returnSampleInfo:!1,...i};const o=new E(e,t.spatialReference,i);return await e.load(i),this._createGeometryDescriptor(o,t),await this._selectTiles(o),await this._populateElevationTiles(o),this._sampleGeometryWithElevation(o),this._createQueryResult(o)}async createSampler(e,t,i){return e?t&&"extent"===t.type?(i={noDataValue:0,demResolution:"auto",maximumAutoTileRequests:20,returnSampleInfo:!1,...i},this._createSampler(e,t,i)):Object(s.r)(new n.a("elevation-query:invalid-extent","Invalid or undefined extent")):Object(s.r)(new n.a("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from"))}async createSamplerAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter(e=>e.visible):e.slice()).length)return Object(s.r)(new n.a("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from"));if(!t||"extent"!==t.type)return Object(s.r)(new n.a("elevation-query:invalid-extent","Invalid or undefined extent"));const o={noDataValue:0,maximumAutoTileRequests:20,...i,returnSampleInfo:!0,demResolution:"auto"},l=await this._createSampler(e[e.length-1],t,o);return this._createSamplerAllContinue(e,t,l,o)}async _createSampler(e,t,i,l){await e.load();const a=t.spatialReference,r=e.tileInfo.spatialReference;if(!a.equals(r)){if(!Object(o.a)(a,r))return Object(s.r)(new n.a("elevation-query:invalid-extent",`Extent spatial reference (${a.wkid}) must be compatible with tile spatial reference (${r.wkid})`));t=Object(o.d)(t,r)}const c=new A(e,t,i,l);return await this._selectTiles(c),await this._populateElevationTiles(c),new x(c.elevationTiles,c.layer.tileInfo,c.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const s=i.samplers.map(e=>Object(h.g)(e.extent)),o=await this._createSampler(e[e.length-1],t,n,s);if(0===o.samplers.length)return i;const l=i.samplers.concat(o.samplers),a=new x(l,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,i){const n=e.pop();if(t.geometry.coordinates.forEach((e,i)=>{t.sampleInfo[i].demResolution>=0&&!t.sampleInfo[i].source&&(t.sampleInfo[i].source=n)}),!e.length)return t;const s=t.geometry.coordinates,o=[],l=[];for(let e=0;e<s.length;e++)t.sampleInfo[e].demResolution<0&&(o.push(s[e]),l.push(e));if(0===o.length)return t;const a=t.geometry.clone(o),r=await this.query(e[e.length-1],a,i);return l.forEach((e,i)=>{s[e].z=r.geometry.coordinates[i].z,t.sampleInfo[e].demResolution=r.sampleInfo[i].demResolution}),this._queryAllContinue(e,t,i)}_createQueryResult(e){let t;t=e.outSpatialReference.equals(e.geometry.spatialReference)?e.geometry:e.geometry.project(e.outSpatialReference);const i={geometry:t.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach(e=>{e.tile=null,e.elevationTile=null}),i}_createGeometryDescriptor(e,t){let i;const s=e.layer.tileInfo.spatialReference;if(i=t instanceof b?t.project(s):Object(o.d)(t,s),!i)throw new n.a("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${s.wkid}'`);e.geometry=b.fromGeometry(i)}async _selectTiles(e){const t=e.options.demResolution;if("geometry"===e.type&&this._preselectOutsideLayerExtent(e),"number"==typeof t)this._selectTilesClosestResolution(e);else if("finest-contiguous"===t)await this._selectTilesFinestContiguous(e);else{if("auto"!==t)throw new n.a("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${t}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e)}}_preselectOutsideLayerExtent(e){const t=new R(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach(e=>{const n=e.x,s=e.y;(n<i.xmin||n>i.xmax||s<i.ymin||s>i.ymax)&&(e.elevationTile=t)})}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/Object(u.b)(e.spatialReference);let n=e.lods[0],s=0;for(let t=1;t<e.lods.length;t++){const o=e.lods[t];Math.abs(o.resolution-i)<Math.abs(n.resolution-i)&&(n=o,s=t)}return s}async _selectTilesFinestContiguous(e){const t=O(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,t)}async _selectTilesFinestContiguousAt(e,t){const i=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const o=i.tilemapCache,l=e.getTilesToFetch();try{if(o)await Object(s.b)(l.map(t=>o.fetchAvailability(t.level,t.row,t.col,{signal:e.options.signal})));else if(await this._populateElevationTiles(e),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new n.a("elevation-query:has-unavailable-tiles")}catch(i){if(Object(s.l)(i))throw i;await this._selectTilesFinestContiguousAt(e,t-1)}}async _populateElevationTiles(e){const t=e.getTilesToFetch(),i={},n=t.map(t=>e.layer.fetchTile(t.level,t.row,t.col,{noDataValue:e.options.noDataValue,signal:e.options.signal}).then(e=>i[t.id]=new R(t,e)));await Object(s.i)(n),Object(s.u)(e.options.signal),e.populateElevationTiles(i)}async _selectTilesAuto(e){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const t=e.layer.tilemapCache;if(!t)return this._selectTilesAutoPrefetchUpsample(e);const i=e.getTilesToFetch(),n={},o=i.map(async i=>{const o={id:null,level:0,row:0,col:0,extent:Object(h.c)()},l=await Object(c.c)(t.fetchAvailabilityUpsample(i.level,i.row,i.col,o,{signal:e.options.signal}));if(!1===l.ok&&Object(s.l)(l.error))throw l.error;!0===l.ok&&(n[i.id]=o)});await Object(s.b)(o),e.remapTiles(n)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const n={},s=e=>{e.id in n?n[e.id]++:(n[e.id]=1,i++)},o=e=>{const t=n[e.id];1===t?(delete n[e.id],i--):n[e.id]=t-1};e.forEachTileToFetch(s,o);let l=!0;for(;l&&(l=!1,e.forEachTileToFetch(n=>{i<=e.options.maximumAutoTileRequests||(o(n),t.upsampleTile(n)&&(l=!0),s(n))},o),l););}_selectTilesAutoFinest(e){const t=O(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e){const t=e.layer.tileInfo;await this._populateElevationTiles(e);let i=!1;e.forEachTileToFetch((e,n)=>{t.upsampleTile(e)?i=!0:n()}),i&&await this._selectTilesAutoPrefetchUpsample(e)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach(t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);void 0!==e?n=e:t.elevationTile=null}t.z=n})}_extractSampleInfo(e){const t=e.layer.tileInfo,i=Object(u.b)(t.spatialReference);return e.geometry.coordinates.map(n=>{let s=-1;return n.elevationTile&&n.elevationTile!==e.outsideExtentTile&&(s=t.lodAt(n.elevationTile.tile.level).resolution*i),{demResolution:s}})}}class b{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new b;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(e=>this._cloneCoordinate(e)),t._exporter=this._exporter,t}project(e){if(this.spatialReference.equals(e))return this.clone();if(Object(o.a)(this.spatialReference,e)){const t=e.isWGS84?o.f:o.c,i=[0,0],n=this.coordinates.map(e=>{const n=this._cloneCoordinate(e);return t(n.x,n.y,i),n.x=i[0],n.y=i[1],n}),s=this.clone(n);return s.spatialReference=e,s}return null}_cloneCoordinate(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}}static fromGeometry(e){const t=new b;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof b)t.coordinates=e.coordinates.map(e=>t._cloneCoordinate(e)),t._exporter=(t,i)=>{const n=e.clone(t);return n.spatialReference=i,n};else switch(e.type){case"point":{const i=e;e.hasM?t.coordinates=[{x:i.x,y:i.y,m:i.m}]:t.coordinates=[{x:i.x,y:i.y}],t._exporter=(t,i)=>e.hasM?new l.a(t[0].x,t[0].y,t[0].z,t[0].m,i):new l.a(t[0].x,t[0].y,t[0].z,i);break}case"multipoint":{const i=e;t.coordinates=i.points.map(t=>{if(e.hasM){const i=e.hasZ?3:2;return{x:t[0],y:t[1],m:t[i]}}return{x:t[0],y:t[1]}}),t._exporter=(t,i)=>e.hasM?new a.a({points:t.map(e=>[e.x,e.y,e.z,e.m]),hasZ:!0,hasM:!0,spatiaReference:i}):new a.a(t.map(e=>[e.x,e.y,e.z]),i);break}case"polyline":{const i=[],n=[];let s=0;e.paths.forEach(t=>{n.push([s,s+t.length]),s+=t.length,i.push(...t.map(t=>{if(e.hasM){const i=e.hasZ?3:2;return{x:t[0],y:t[1],m:t[i]}}return{x:t[0],y:t[1]}}))}),t.coordinates=i,t._exporter=(t,i)=>{const s=e.hasM?t.map(e=>[e.x,e.y,e.z,e.m]):t.map(e=>[e.x,e.y,e.z]),o=n.map(e=>s.slice(e[0],e[1]));return new r.a({paths:o,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class q{constructor(e,t){this.layer=e,this.options=t}}class E extends q{constructor(e,t,i){super(e,i),this.type="geometry",this.outSpatialReference=t}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(e=>e.tile=null);else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach(e=>{e.tile=t.tileAt(i,e.x,e.y)})}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates)t.tile=e[t.tile.id]}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;i.elevationTile||!i.tile||e[n.id]||(e[n.id]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>t.tile=null)}}class A extends q{constructor(e,t,i,n){super(e,i),this.type="extent",this.elevationTiles=[],this.candidateTiles=[],this.fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;for(let n=t.lods.length-1;n>=0;n--){const s=t.lods[n],o=s.resolution*t.size[0],l=s.resolution*t.size[1];if(Math.ceil(i.width/o)*Math.ceil(i.height/l)<=e)return n}return-1}allElevationTilesFetched(){return this.candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this.fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this.candidateTiles){const i=e[t.id];i&&(this.fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this.candidateTiles}forEachTileToFetch(e,t){const i=this.candidateTiles;this.candidateTiles=[],i.forEach(i=>{if(this.fetchedCandidates.has(i))return void(t&&t(i));let n=!1;e(i,()=>n=!0),n?t&&t(i):this.candidateTiles.push(i)}),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},n=[];for(const s of e)i[s.id]?t&&t(s):(i[s.id]=s,n.push(s));const s=n.sort((e,t)=>e.level-t.level);return s.filter((e,i)=>{for(let n=0;n<i;n++)if(Object(h.b)(s[n].extent,e.extent))return t&&t(e),!1;return!0})}_selectCandidateTilesCoveringExtentAt(e){this.candidateTiles.length=0;const t=this.layer.tileInfo,i=t.lods[e],n=this.extent,s=t.tileAt(i.level,n.xmin,n.ymin),o=i.resolution*t.size[0],l=i.resolution*t.size[1],a=Math.ceil((n.xmax-s.extent[0])/o),r=Math.ceil((n.ymax-s.extent[1])/l);for(let e=0;e<r;e++)for(let i=0;i<a;i++){const n={id:null,level:s.level,row:s.row-e,col:s.col+i};t.updateTileInfo(n),this._tileIsMasked(n)||this.candidateTiles.push(n)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>Object(h.b)(t,e.extent))}}function O(e,t){let i=e.lods.length-1;if(t>0){const n=e.lods.findIndex(e=>e.resolution<t);0===n?i=0:n>0&&(i=n-1)}return i}t.default=_}});