"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[2772],{72772:(s,t,e)=>{e.r(t),e.d(t,{destroyWasm:()=>u,initialize:()=>a,process:()=>l});var n=e(2741);function i(s){return(0,n.s)(`esri/libs/lyr3d/${s}`)}let r,o;async function l(s){await a();const t={status:1,error:"",jobDescJson:"",data:new Uint8Array(0),missingInputUrls:[]};if(s.inputs.length<1)return{result:t,transferList:[]};const e={ptrs:[],sizes:[]};for(const t of s.inputs){const s=o._malloc(t.byteLength);new Uint8Array(o.HEAPU8.buffer,s,t.byteLength).set(new Uint8Array(t)),e.ptrs.push(s),e.sizes.push(t.byteLength)}const n=o.process(s.jobDescJson,s.id,e,s.isMissingResourceCase);t.status=n.status,t.missingInputUrls=n.missingInputUrls.slice();const i=0===n.status&&n.data,r=2===t.status&&t.missingInputUrls.length>0;t.jobDescJson=n.jobDescJson.slice(),t.error=n.error.slice(),i?t.data=n.data.slice():r&&(t.originalInputs=s.inputs.slice());for(let s=0;s<e.ptrs.length;++s)o._free(e.ptrs[s]);const l=[];if(i)l.push(t.data.buffer);else if(r)for(const t of s.inputs)l.push(t);return{result:t,transferList:l}}function u(){o&&(o.uninitialize_lyr3d_worker_wasm(),o=null)}function a(){return o?Promise.resolve():(r||(r=new Promise(s=>e.e(2343).then(e.bind(e,2343)).then(s=>s.l).then(({default:t})=>{const e=t({locateFile:i,onRuntimeInitialized:()=>s(e)})})).catch(s=>{throw s}).then(s=>{o=s,o.initialize_lyr3d_worker_wasm(),r=null})),r)}}}]);