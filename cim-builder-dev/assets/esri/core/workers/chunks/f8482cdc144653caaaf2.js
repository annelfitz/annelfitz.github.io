self.webpackChunkRemoteClient([194],{96:function(e,t,r){"use strict";var s=r(18),n=(r(7),r(3),r(4),r(20)),l=r(19),o=r(24),i=(r(34),r(35),r(25));let c=class extends i.a{constructor(...e){super(...e),this.requestOptions=null,this.url=null}normalizeCtorArgs(e,t){return"string"!=typeof e?e:{url:e,...t}}get parsedUrl(){return this._parseUrl(this.url)}_parseUrl(e){return e?Object(o.H)(e):null}_encode(e,t,r){const s={};for(const n in e){if("declaredClass"===n)continue;const l=e[n];if(null!=l&&"function"!=typeof l)if(Array.isArray(l)){s[n]=[];for(let e=0;e<l.length;e++)s[n][e]=this._encode(l[e])}else if("object"==typeof l)if(l.toJSON){const e=l.toJSON(r&&r[n]);s[n]=t?e:JSON.stringify(e)}else s[n]=t?l:JSON.stringify(l);else s[n]=l}return s}};Object(s.a)([Object(n.b)({readOnly:!0,dependsOn:["url"]})],c.prototype,"parsedUrl",null),Object(s.a)([Object(n.b)()],c.prototype,"requestOptions",void 0),Object(s.a)([Object(n.b)({type:String})],c.prototype,"url",void 0),c=Object(s.a)([Object(l.a)("esri.tasks.Task")],c);var a=c;t.a=a}});