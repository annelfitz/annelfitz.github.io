self.webpackChunkRemoteClient([184],{319:function(e,t,o){"use strict";o.r(t);var r=o(18),i=(o(7),o(16)),l=o(1),a=(o(3),o(4),o(20)),s=o(53),c=o(19),n=(o(24),o(34),o(35),o(2)),p=o(148),b=o(198),y=o(51),u=o(389),O=o(296),d=o(297),j=(o(113),o(80)),S=o(81),h=o(110),v=o(85),f=o(91),m=o(89),g=o(127),C=o(106);const R={base:p.a,key:"type",typeMap:{"simple-line":b.a},errorContext:"symbol"},k={base:p.a,key:"type",typeMap:{"picture-marker":u.a,"simple-marker":d.a},errorContext:"symbol"},F={base:p.a,key:"type",typeMap:{"simple-fill":O.a},errorContext:"symbol"};let x=class extends(Object(h.a)(Object(g.a)(Object(f.a)(Object(m.a)(Object(C.a)(Object(S.a)(j.a))))))){constructor(...e){super(...e),this.description=null,this.title=null,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}readFeatureCollections(e,t){return t.featureCollection.layers.forEach(e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline&&-1!==t.outline.style.indexOf("esriSFS")&&(t.outline.style="esriSLSSolid")}),t.featureCollection.layers}load(e){const t=Object(l.g)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).then(()=>this._fetchService(t),()=>this._fetchService(t))),Object(n.s)(this)}async _fetchService(e){const{data:t}=await Object(y.default)(i.a.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(t,{origin:"service"})}};Object(r.a)([Object(a.b)()],x.prototype,"description",void 0),Object(r.a)([Object(a.b)()],x.prototype,"title",void 0),Object(r.a)([Object(a.b)()],x.prototype,"featureCollections",void 0),Object(r.a)([Object(s.a)("service","featureCollections",["featureCollection.layers"])],x.prototype,"readFeatureCollections",null),Object(r.a)([Object(a.b)({types:R})],x.prototype,"lineSymbol",void 0),Object(r.a)([Object(a.b)({type:["show","hide"]})],x.prototype,"listMode",void 0),Object(r.a)([Object(a.b)({types:k})],x.prototype,"pointSymbol",void 0),Object(r.a)([Object(a.b)({types:F})],x.prototype,"polygonSymbol",void 0),Object(r.a)([Object(a.b)()],x.prototype,"outSpatialReference",void 0),Object(r.a)([Object(a.b)(v.j)],x.prototype,"url",void 0),Object(r.a)([Object(a.b)({readOnly:!0,json:{read:!1},value:"geo-rss"})],x.prototype,"type",void 0),x=Object(r.a)([Object(c.a)("esri.layers.GeoRSSLayer")],x);var M=x;t.default=M}});