"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[9554],{66577:(e,t,r)=>{r.d(t,{qM:()=>f});var n=r(75215),i=r(6570),o=r(9361),s=r(65091),a=r(13473),l=r(17332),u=r(58901);r(82971),r(86973),r(33955);const f={base:o.Z,key:"type",typeMap:{extent:i.Z,multipoint:s.Z,point:a.Z,polyline:u.Z,polygon:l.Z}};(0,n.N7)(f)},33955:(e,t,r)=>{r.d(t,{im:()=>m,q9:()=>_,Ji:()=>d,YX:()=>f,aW:()=>c,wp:()=>p,oU:()=>N,l9:()=>y});var n=r(70586),i=r(6570),o=r(9361),s=r(65091),a=r(13473),l=r(17332),u=r(58901);function f(e){return void 0!==e.xmin&&void 0!==e.ymin&&void 0!==e.xmax&&void 0!==e.ymax}function c(e){return void 0!==e.points}function p(e){return void 0!==e.x&&void 0!==e.y}function y(e){return void 0!==e.paths}function N(e){return void 0!==e.rings}function m(e){return(0,n.Wi)(e)?null:e instanceof o.Z?e:p(e)?a.Z.fromJSON(e):y(e)?u.Z.fromJSON(e):N(e)?l.Z.fromJSON(e):c(e)?s.Z.fromJSON(e):f(e)?i.Z.fromJSON(e):null}function d(e){return e?p(e)?"esriGeometryPoint":y(e)?"esriGeometryPolyline":N(e)?"esriGeometryPolygon":f(e)?"esriGeometryEnvelope":c(e)?"esriGeometryMultipoint":null:null}const g={esriGeometryPoint:a.Z,esriGeometryPolyline:u.Z,esriGeometryPolygon:l.Z,esriGeometryEnvelope:i.Z,esriGeometryMultipoint:s.Z};function _(e){return e&&g[e]||null}},86973:(e,t,r)=>{r.d(t,{Mk:()=>i,P$:()=>o});var n=r(35454);const i=(0,n.wY)()({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon"}),o=(0,n.wY)()({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh"})},11282:(e,t,r)=>{r.d(t,{lA:()=>i,cv:()=>s,en:()=>o});var n=r(17452);function i(e,t){return t?{...t,query:{...e,...t.query}}:{query:e}}function o(e){return"string"==typeof e?(0,n.mN)(e):e}function s(e,t,r){const n={};for(const i in e){if("declaredClass"===i)continue;const o=e[i];if(null!=o&&"function"!=typeof o)if(Array.isArray(o)){n[i]=[];for(let e=0;e<o.length;e++)n[i][e]=s(o[e])}else if("object"==typeof o)if(o.toJSON){const e=o.toJSON(r&&r[i]);n[i]=t?e:JSON.stringify(e)}else n[i]=t?o:JSON.stringify(o);else n[i]=o}return n}},29554:(e,t,r)=>{r.r(t),r.d(t,{default:()=>K});var n=r(43697),i=r(5600),o=(r(80442),r(75215)),s=(r(92604),r(52525)),a=r(3172),l=r(11282);r(66577);var u=r(33955);function f(e){return{geometryType:(0,u.Ji)(e[0]),geometries:e.map((e=>e.toJSON()))}}function c(e,t,r){const n=(0,u.q9)(t);return e.map((e=>{const t=n.fromJSON(e);return t.spatialReference=r,t}))}var p=r(17332);async function y(e,t,r,n){const i=t[0].spatialReference,o=(0,l.en)(e),s={...o.query,f:"json",sr:JSON.stringify(i.toJSON()),polygons:JSON.stringify(f(t).geometries),polylines:JSON.stringify(f(r).geometries)},u=(0,l.lA)(s,n);return(0,a.default)(o.path+"/autoComplete",u).then((({data:e})=>(e.geometries||[]).map((({rings:e})=>new p.Z({spatialReference:i,rings:e})))))}async function N(e,t,r){const n=t[0].spatialReference,i=(0,l.en)(e),o={...i.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(f(t))},s=(0,l.lA)(o,r);return(0,a.default)(i.path+"/convexHull",s).then((({data:e})=>(0,u.im)(e.geometry).set({spatialReference:n})))}async function m(e,t,r,n){const i=t[0].spatialReference,o=(0,l.en)(e);let s={query:{...o.query,f:"json",sr:JSON.stringify(i.toJSON()),geometries:JSON.stringify(f(t)),geometry:JSON.stringify({geometryType:(0,u.Ji)(r),geometry:r.toJSON()})}};return n&&(s={...n,...s}),(0,a.default)(o.path+"/difference",s).then((({data:e})=>(e.geometries||[]).map((e=>(0,u.im)(e).set({spatialReference:i})))))}var d=r(35454);const g=new d.Xn({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"});var _=r(10736);let S=class extends _.wq{constructor(e){super(e),this.deviationUnit=null,this.geometries=null,this.maxDeviation=null}};(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],S.prototype,"deviationUnit",void 0),(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,u.im)(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],S.prototype,"geometries",void 0),(0,n._)([(0,i.Cb)({type:Number,json:{write:!0}})],S.prototype,"maxDeviation",void 0),S=(0,n._)([(0,s.j)("esri.rest.support.GeneralizeParameters")],S),S.from=(0,o.se)(S);var T=S;const I=new d.Xn({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});async function O(e,t,r,n){const i=t[0].spatialReference,o=(0,l.en)(e),s={...o.query,f:"json",sr:JSON.stringify(i.toJSON()),geometries:JSON.stringify(f(t)),geometry:JSON.stringify({geometryType:(0,u.Ji)(r),geometry:r.toJSON()})},c=(0,l.lA)(s,n);return(0,a.default)(o.path+"/intersect",c).then((({data:e})=>(e.geometries||[]).map((e=>(0,u.im)(e).set({spatialReference:i})))))}var h=r(58901);let R=class extends _.wq{constructor(e){super(e),this.calculationType=null,this.geodesic=null,this.lengthUnit=null,this.polylines=null}};(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],R.prototype,"calculationType",void 0),(0,n._)([(0,i.Cb)({type:Boolean,json:{write:!0}})],R.prototype,"geodesic",void 0),(0,n._)([(0,i.Cb)({json:{write:!0}})],R.prototype,"lengthUnit",void 0),(0,n._)([(0,i.Cb)({type:[h.Z],json:{read:{reader:e=>e?e.map((e=>(0,u.im)(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],R.prototype,"polylines",void 0),R=(0,n._)([(0,s.j)("esri.rest.support.LengthsParameters")],R),R.from=(0,o.se)(R);var U=R;const J=new d.Xn({preserveShape:"preserve-shape"});function A(e){const{polylines:t,lengthUnit:r,geodesic:n,calculationType:i}=e.toJSON(),o={};o.polylines=JSON.stringify(t);const s=e.polylines[0].spatialReference;return o.sr=s.wkid?s.wkid:JSON.stringify(s.toJSON()),r&&(o.lengthUnit=r),n&&(o.geodesic=n),i&&(o.calculationType=J.toJSON(i)),o}let E=class extends _.wq{constructor(e){super(e),this.bevelRatio=null,this.geometries=null,this.offsetDistance=null,this.offsetHow=null,this.offsetUnit=null}};(0,n._)([(0,i.Cb)({type:Number,json:{write:!0}})],E.prototype,"bevelRatio",void 0),(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,u.im)(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],E.prototype,"geometries",void 0),(0,n._)([(0,i.Cb)({type:Number,json:{write:!0}})],E.prototype,"offsetDistance",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],E.prototype,"offsetHow",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],E.prototype,"offsetUnit",void 0),E=(0,n._)([(0,s.j)("esri.rest.support.OffsetParameters")],E),E.from=(0,o.se)(E);var v=E;const w=new d.Xn({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"}),C=new d.Xn({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});let j=class extends _.wq{constructor(e){super(e),this.geometries=null,this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map((function(e){return e.toJSON()})),t=this.geometries[0],r={};return r.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),r.inSR=t.spatialReference.wkid||JSON.stringify(t.spatialReference.toJSON()),r.geometries=JSON.stringify({geometryType:(0,u.Ji)(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),null!=this.transformForward&&(r.transformForward=this.transformForward),r}};(0,n._)([(0,i.Cb)()],j.prototype,"geometries",void 0),(0,n._)([(0,i.Cb)({json:{read:{source:"outSR"}}})],j.prototype,"outSpatialReference",void 0),(0,n._)([(0,i.Cb)()],j.prototype,"transformation",void 0),(0,n._)([(0,i.Cb)()],j.prototype,"transformForward",void 0),j=(0,n._)([(0,s.j)("esri.rest.support.ProjectParameters")],j);var G=j;const b=(0,o.se)(G);let M=class extends _.wq{constructor(e){super(e),this.geometries1=null,this.geometries2=null,this.relation=null,this.relationParameter=null}};(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,u.im)(e))):null},write:{writer:(e,t)=>{t.geometries1=e.map((e=>e.toJSON()))}}}})],M.prototype,"geometries1",void 0),(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,u.im)(e))):null},write:{writer:(e,t)=>{t.geometries2=e.map((e=>e.toJSON()))}}}})],M.prototype,"geometries2",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],M.prototype,"relation",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],M.prototype,"relationParameter",void 0),M=(0,n._)([(0,s.j)("esri.rest.support.RelationParameters")],M),M.from=(0,o.se)(M);var q=M;const D=new d.Xn({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});var L=r(17452);async function x(e,t,r){const n="string"==typeof e?(0,L.mN)(e):e,i=t[0].spatialReference,o=(0,u.Ji)(t[0]),s={...r,query:{...n.query,f:"json",sr:i.wkid?i.wkid:JSON.stringify(i),geometries:JSON.stringify(f(t))}},{data:l}=await(0,a.default)(n.path+"/simplify",s);return c(l.geometries,o,i)}let P=class extends _.wq{constructor(e){super(e),this.extendHow="default-curve-extension",this.polylines=null,this.trimExtendTo=null}};(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],P.prototype,"extendHow",void 0),(0,n._)([(0,i.Cb)({type:[h.Z],json:{read:{reader:e=>e?e.map((e=>(0,u.im)(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],P.prototype,"polylines",void 0),(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?(0,u.im)(e):null},write:{writer:(e,t)=>{t.trimExtendTo=e.toJSON()}}}})],P.prototype,"trimExtendTo",void 0),P=(0,n._)([(0,s.j)("esri.rest.support.TrimExtendParameters")],P),P.from=(0,o.se)(P);var k=P;const H=new d.Xn({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});async function Z(e,t,r){const n=t[0].spatialReference,i=(0,l.en)(e),o={...i.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(f(t))},s=(0,l.lA)(o,r);return(0,a.default)(i.path+"/union",s).then((({data:e})=>(0,u.im)(e.geometry).set({spatialReference:n})))}var Y=r(59633);let F=class extends Y.Z{constructor(e){super(e),this.url=null}areasAndLengths(e,t){return async function(e,t,r){const n=(0,l.en)(e),i={...n.query,f:"json",...t.toJSON()},o=(0,l.lA)(i,r);return(0,a.default)(n.path+"/areasAndLengths",o).then((e=>e.data))}(this.url,e,t)}autoComplete(e,t,r){return y(this.url,e,t,r)}buffer(e,t){return async function(e,t,r){const n=(0,l.en)(e),i={...n.query,f:"json",...t.toJSON()},o=t.outSpatialReference||t.geometries[0].spatialReference,s=(0,l.lA)(i,r);return(0,a.default)(n.path+"/buffer",s).then((e=>(e.data.geometries||[]).map((({rings:e})=>new p.Z({spatialReference:o,rings:e})))))}(this.url,e,t)}convexHull(e,t){return N(this.url,e,t)}cut(e,t,r){return async function(e,t,r,n){const i=(0,l.en)(e),o=t[0].spatialReference,s={...n,query:{...i.query,f:"json",sr:JSON.stringify(o),target:JSON.stringify({geometryType:(0,u.Ji)(t[0]),geometries:t}),cutter:JSON.stringify(r)}},f=await(0,a.default)(i.path+"/cut",s),{cutIndexes:c,geometries:p=[]}=f.data;return{cutIndexes:c,geometries:p.map((e=>{const t=(0,u.im)(e);return t.spatialReference=o,t}))}}(this.url,e,t,r)}densify(e,t){return async function(e,t,r){const n=t.geometries[0].spatialReference,i=(0,l.en)(e),o={...i.query,f:"json",...t.toJSON()},s=(0,l.lA)(o,r);return(0,a.default)(i.path+"/densify",s).then((({data:e})=>(e.geometries||[]).map((e=>(0,u.im)(e).set({spatialReference:n})))))}(this.url,e,t)}difference(e,t,r){return m(this.url,e,t,r)}distance(e,t){return async function(e,t,r){const n=(0,l.en)(e),i={...n.query,f:"json",...t.toJSON()},o=(0,l.lA)(i,r);return(0,a.default)(n.path+"/distance",o).then((({data:e})=>e&&e.distance))}(this.url,e,t)}fromGeoCoordinateString(e,t){return async function(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.strings=JSON.stringify(t.strings);const i=t.conversionType||"mgrs";n.conversionType=g.toJSON(i),n.conversionMode=t.conversionMode;const o=(0,l.en)(e),s={...o.query,f:"json",...n},u=(0,l.lA)(s,r);return(0,a.default)(o.path+"/fromGeoCoordinateString",u).then((({data:e})=>e.coordinates))}(this.url,e,t)}generalize(e,t){return async function(e,t,r){const n=(t=T.from(t)).toJSON(),i=function(e){const{geometries:t,deviationUnit:r,maxDeviation:n}=e.toJSON(),i={maxDeviation:n};return t&&t.length&&(i.geometries=JSON.stringify({geometryType:(0,u.Ji)(t[0]),geometries:t}),i.sr=JSON.stringify(t[0].spatialReference)),I.write(r,i,"deviationUnit"),i}(t),o=(0,l.en)(e),s={...o.query,f:"json",...i},f=n.geometries[0].spatialReference,c=(0,l.lA)(s,r);return(0,a.default)(o.path+"/generalize",c).then((({data:e})=>(e.geometries||[]).map((e=>(0,u.im)(e).set({spatialReference:f})))))}(this.url,e,t)}intersect(e,t,r){return O(this.url,e,t,r)}labelPoints(e,t){return function(e,t,r){const n=t.map((e=>e.toJSON())),i=t[0].spatialReference,o=(0,l.en)(e),s={...o.query,f:"json",sr:i.wkid?i.wkid:JSON.stringify(i.toJSON()),polygons:JSON.stringify(n)},f=(0,l.lA)(s,r);return(0,a.default)(o.path+"/labelPoints",f).then((({data:e})=>(e.labelPoints||[]).map((e=>(0,u.im)(e).set({spatialReference:i})))))}(this.url,e,t)}lengths(e,t){return async function(e,t,r){const n=A(t=U.from(t)),i=(0,l.en)(e),o={...i.query,f:"json",...n},s=(0,l.lA)(o,r);return(0,a.default)(i.path+"/lengths",s).then((({data:e})=>e))}(this.url,e,t)}offset(e,t){return async function(e,t,r){const n=function(e){const{geometries:t,bevelRatio:r,offsetDistance:n,offsetHow:i,offsetUnit:o}=e.toJSON(),s={bevelRatio:r,offsetDistance:n};return t&&t.length&&(s.geometries=JSON.stringify({geometryType:(0,u.Ji)(t[0]),geometries:t}),s.sr=JSON.stringify(t[0].spatialReference)),i&&(s.offsetHow=w.toJSON(i)),o&&(s.offsetUnit=C.toJSON(o)),s}(t=v.from(t)),i=(0,l.en)(e),o={...i.query,f:"json",...n},s=t.geometries[0].spatialReference,f=(0,l.lA)(o,r);return(0,a.default)(i.path+"/offset",f).then((({data:e})=>(e.geometries||[]).map((e=>(0,u.im)(e).set({spatialReference:s})))))}(this.url,e,t)}project(e,t){return async function(e,t,r){t=b(t);const n=(0,l.en)(e),i={...n.query,f:"json",...t.toJSON()},o=t.outSpatialReference,s=(0,u.Ji)(t.geometries[0]),f=(0,l.lA)(i,r);return(0,a.default)(n.path+"/project",f).then((({data:{geometries:e}})=>c(e,s,o)))}(this.url,e,t)}relation(e,t){return async function(e,t,r){const n=function(e){const{geometries1:t,geometries2:r,relation:n,relationParameter:i}=e.toJSON(),o={};if(t&&t.length){o.geometries1=JSON.stringify({geometryType:(0,u.Ji)(t[0]),geometries:t});const e=t[0].spatialReference;o.sr=e.wkid?e.wkid:JSON.stringify(e)}return r&&r.length>0&&(o.geometries2=JSON.stringify({geometryType:(0,u.Ji)(r[0]),geometries:r})),n&&(o.relation=D.toJSON(n)),i&&(o.relationParam=i),o}(t=q.from(t)),i=(0,l.en)(e),o={...i.query,f:"json",...n},s=(0,l.lA)(o,r);return(0,a.default)(i.path+"/relation",s).then((({data:e})=>e.relations))}(this.url,e,t)}reshape(e,t,r){return async function(e,t,r,n){const i=t.spatialReference,o=(0,l.en)(e),s={...o.query,f:"json",sr:JSON.stringify(i.toJSON()),target:JSON.stringify({geometryType:(0,u.Ji)(t),geometry:t.toJSON()}),reshaper:JSON.stringify(r.toJSON())},f=(0,l.lA)(s,n);return(0,a.default)(o.path+"/reshape",f).then((({data:e})=>(0,u.im)(e.geometry).set({spatialReference:i})))}(this.url,e,t,r)}simplify(e,t){return x(this.url,e,t)}toGeoCoordinateString(e,t){return async function(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.coordinates=JSON.stringify(t.coordinates);const i=t.conversionType||"mgrs";n.conversionType=g.toJSON(i),n.conversionMode=t.conversionMode,n.numOfDigits=t.numOfDigits,n.rounding=t.rounding,n.addSpaces=t.addSpaces;const o=(0,l.en)(e),s={...o.query,f:"json",...n},u=(0,l.lA)(s,r);return(0,a.default)(o.path+"/toGeoCoordinateString",u).then((({data:e})=>e.strings))}(this.url,e,t)}trimExtend(e,t){return async function(e,t,r){const n=function(e){const{extendHow:t,polylines:r,trimExtendTo:n}=e.toJSON(),i={};return i.extendHow=H.toJSON(t),r&&r.length&&(i.polylines=JSON.stringify(r),i.sr=JSON.stringify(r[0].spatialReference)),n&&(i.trimExtendTo=JSON.stringify(n)),i}(t=k.from(t)),i=(0,l.en)(e),o={...i.query,f:"json",...n},s=t.sr,u=(0,l.lA)(o,r);return(0,a.default)(i.path+"/trimExtend",u).then((({data:e})=>(e.geometries||[]).map((({paths:e})=>new h.Z({spatialReference:s,paths:e})))))}(this.url,e,t)}union(e,t){return Z(this.url,e,t)}};F.UNIT_METER=9001,F.UNIT_GERMAN_METER=9031,F.UNIT_FOOT=9002,F.UNIT_SURVEY_FOOT=9003,F.UNIT_CLARKE_FOOT=9005,F.UNIT_FATHOM=9014,F.UNIT_NAUTICAL_MILE=9030,F.UNIT_SURVEY_CHAIN=9033,F.UNIT_SURVEY_LINK=9034,F.UNIT_SURVEY_MILE=9035,F.UNIT_KILOMETER=9036,F.UNIT_CLARKE_YARD=9037,F.UNIT_CLARKE_CHAIN=9038,F.UNIT_CLARKE_LINK=9039,F.UNIT_SEARS_YARD=9040,F.UNIT_SEARS_FOOT=9041,F.UNIT_SEARS_CHAIN=9042,F.UNIT_SEARS_LINK=9043,F.UNIT_BENOIT_1895A_YARD=9050,F.UNIT_BENOIT_1895A_FOOT=9051,F.UNIT_BENOIT_1895A_CHAIN=9052,F.UNIT_BENOIT_1895A_LINK=9053,F.UNIT_BENOIT_1895B_YARD=9060,F.UNIT_BENOIT_1895B_FOOT=9061,F.UNIT_BENOIT_1895B_CHAIN=9062,F.UNIT_BENOIT_1895B_LINK=9063,F.UNIT_INDIAN_FOOT=9080,F.UNIT_INDIAN_1937_FOOT=9081,F.UNIT_INDIAN_1962_FOOT=9082,F.UNIT_INDIAN_1975_FOOT=9083,F.UNIT_INDIAN_YARD=9084,F.UNIT_INDIAN_1937_YARD=9085,F.UNIT_INDIAN_1962_YARD=9086,F.UNIT_INDIAN_1975_YARD=9087,F.UNIT_FOOT_1865=9070,F.UNIT_RADIAN=9101,F.UNIT_DEGREE=9102,F.UNIT_ARCMINUTE=9103,F.UNIT_ARCSECOND=9104,F.UNIT_GRAD=9105,F.UNIT_GON=9106,F.UNIT_MICRORADIAN=9109,F.UNIT_ARCMINUTE_CENTESIMAL=9112,F.UNIT_ARCSECOND_CENTESIMAL=9113,F.UNIT_MIL6400=9114,F.UNIT_BRITISH_1936_FOOT=9095,F.UNIT_GOLDCOAST_FOOT=9094,F.UNIT_INTERNATIONAL_CHAIN=109003,F.UNIT_INTERNATIONAL_LINK=109004,F.UNIT_INTERNATIONAL_YARD=109001,F.UNIT_STATUTE_MILE=9093,F.UNIT_SURVEY_YARD=109002,F.UNIT_50KILOMETER_LENGTH=109030,F.UNIT_150KILOMETER_LENGTH=109031,F.UNIT_DECIMETER=109005,F.UNIT_CENTIMETER=109006,F.UNIT_MILLIMETER=109007,F.UNIT_INTERNATIONAL_INCH=109008,F.UNIT_US_SURVEY_INCH=109009,F.UNIT_INTERNATIONAL_ROD=109010,F.UNIT_US_SURVEY_ROD=109011,F.UNIT_US_NAUTICAL_MILE=109012,F.UNIT_UK_NAUTICAL_MILE=109013,F.UNIT_SQUARE_INCHES="esriSquareInches",F.UNIT_SQUARE_FEET="esriSquareFeet",F.UNIT_SQUARE_YARDS="esriSquareYards",F.UNIT_ACRES="esriAcres",F.UNIT_SQUARE_MILES="esriSquareMiles",F.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",F.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",F.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",F.UNIT_SQUARE_METERS="esriSquareMeters",F.UNIT_ARES="esriAres",F.UNIT_HECTARES="esriHectares",F.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",(0,n._)([(0,i.Cb)()],F.prototype,"url",void 0),F=(0,n._)([(0,s.j)("esri.tasks.GeometryService")],F);var K=F},59633:(e,t,r)=>{r.d(t,{Z:()=>u});var n=r(43697),i=r(18855),o=r(17452),s=r(5600),a=(r(80442),r(75215),r(92604),r(52525));let l=class extends i.Z{constructor(...e){super(...e),this.requestOptions=null,this.url=null}normalizeCtorArgs(e,t){return"string"!=typeof e?e:{url:e,...t}}get parsedUrl(){return this._parseUrl(this.url)}_parseUrl(e){return e?(0,o.mN)(e):null}_encode(e,t,r){const n={};for(const i in e){if("declaredClass"===i)continue;const o=e[i];if(null!=o&&"function"!=typeof o)if(Array.isArray(o)){n[i]=[];for(let e=0;e<o.length;e++)n[i][e]=this._encode(o[e])}else if("object"==typeof o)if(o.toJSON){const e=o.toJSON(r&&r[i]);n[i]=t?e:JSON.stringify(e)}else n[i]=t?o:JSON.stringify(o);else n[i]=o}return n}};(0,n._)([(0,s.Cb)({readOnly:!0})],l.prototype,"parsedUrl",null),(0,n._)([(0,s.Cb)()],l.prototype,"requestOptions",void 0),(0,n._)([(0,s.Cb)({type:String})],l.prototype,"url",void 0),l=(0,n._)([(0,a.j)("esri.tasks.Task")],l);var u=l}}]);