(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[164],{805:function(e,s,t){"use strict";t.r(s);t(56);var r=t(528),o=t(672),i=t(529),l=t(747),a=t(37);s.default=class{async decode(e){const s=await Object(o.a)(e.data,e.options);return s&&s.toJSON()}symbolize(e){e.pixelBlock=r.a.fromJSON(e.pixelBlock),e.extent=e.extent?a.a.fromJSON(e.extent):null;const s=this.symbolizer.symbolize(e);return Promise.resolve(s&&s.toJSON())}async updateSymbolizer(e){var s;this.symbolizer=l.a.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===(null==(s=this.symbolizer)?void 0:s.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)}stretch(e){const s=this.symbolizer.simpleStretch(r.a.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(s&&s.toJSON())}estimateStatisticsHistograms(e){const s=Object(i.g)(r.a.fromJSON(e.srcPixelBlock));return Promise.resolve(s)}split(e){const s=Object(i.n)(r.a.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return s&&s.forEach((e,t)=>{s.set(t,null==e?void 0:e.toJSON())}),Promise.resolve(s)}async mosaicAndTransform(e){const s=e.srcPixelBlocks.map(e=>e?new r.a(e):null),t=Object(i.j)(s,e.srcMosaicSize,null,null,e.alignmentInfo);if(!e.coefs)return t&&t.toJSON();const o=Object(i.a)(t,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation);return o&&o.toJSON()}}}}]);
//# sourceMappingURL=164.090e67af.chunk.js.map