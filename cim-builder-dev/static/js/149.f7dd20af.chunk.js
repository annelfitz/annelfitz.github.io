(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[149],{622:function(e,t,o){"use strict";o.r(t);var r=o(0),i=(o(6),o(52)),a=o(3),l=(o(5),o(7),o(1)),s=o(17),c=o(2),n=o(4),p=(o(8),o(9),o(53)),b=o(71),y=o(50),u=o(161),d=o(102),j=o(122),O=(o(43),o(193)),S=o(314),h=o(89),v=o(317),f=o(320),m=o(316),g=o(325),C=o(318);const R=["atom","xml"],k={base:p.a,key:"type",typeMap:{"simple-line":b.a},errorContext:"symbol"},w={base:p.a,key:"type",typeMap:{"picture-marker":u.a,"simple-marker":j.a},errorContext:"symbol"},F={base:p.a,key:"type",typeMap:{"simple-fill":d.a},errorContext:"symbol"};let x=class extends(Object(f.a)(Object(g.a)(Object(v.a)(Object(m.a)(Object(C.a)(Object(S.a)(O.a))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?Object(n.k)(this.url,R)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,t){return t.featureCollection.layers.forEach(e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline&&-1!==t.outline.style.indexOf("esriSFS")&&(t.outline.style="esriSLSSolid")}),t.featureCollection.layers}load(e){const t=Object(a.i)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).then(()=>this._fetchService(t),()=>this._fetchService(t))),Promise.resolve(this)}async _fetchService(e){const{data:t}=await Object(y.default)(i.a.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(t,{origin:"service"})}};Object(r.a)([Object(l.b)()],x.prototype,"description",void 0),Object(r.a)([Object(l.b)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],x.prototype,"title",null),Object(r.a)([Object(l.b)()],x.prototype,"featureCollections",void 0),Object(r.a)([Object(s.a)("service","featureCollections",["featureCollection.layers"])],x.prototype,"readFeatureCollections",null),Object(r.a)([Object(l.b)(h.c)],x.prototype,"id",void 0),Object(r.a)([Object(l.b)(h.e)],x.prototype,"legendEnabled",void 0),Object(r.a)([Object(l.b)({types:k,json:{write:!0}})],x.prototype,"lineSymbol",void 0),Object(r.a)([Object(l.b)({type:["show","hide"]})],x.prototype,"listMode",void 0),Object(r.a)([Object(l.b)({types:w,json:{write:!0}})],x.prototype,"pointSymbol",void 0),Object(r.a)([Object(l.b)({types:F,json:{write:!0}})],x.prototype,"polygonSymbol",void 0),Object(r.a)([Object(l.b)({type:["GeoRSS"]})],x.prototype,"operationalLayerType",void 0),Object(r.a)([Object(l.b)()],x.prototype,"outSpatialReference",void 0),Object(r.a)([Object(l.b)(h.n)],x.prototype,"url",void 0),Object(r.a)([Object(l.b)({readOnly:!0,json:{read:!1},value:"geo-rss"})],x.prototype,"type",void 0),x=Object(r.a)([Object(c.a)("esri.layers.GeoRSSLayer")],x);var M=x;t.default=M}}]);
//# sourceMappingURL=149.f7dd20af.chunk.js.map