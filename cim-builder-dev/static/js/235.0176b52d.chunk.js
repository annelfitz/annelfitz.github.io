(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[235],{1015:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return o}));var i=t(0),r=t(1),s=(t(5),t(6),t(4),t(2)),l=t(843),n=t(9);const c=e=>{let a=class extends e{initialize(){const{layer:e,view:a}=this;e.source.supportsSpatialReference(a.spatialReference)||this.addResolvingPromise(Promise.reject(new n.a("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map(e=>e.name)}};return Object(i.a)([Object(r.b)()],a.prototype,"layer",void 0),Object(i.a)([Object(r.b)({readOnly:!0})],a.prototype,"availableFields",null),a=Object(i.a)([Object(s.a)("esri.views.layers.OGCFeatureLayerView")],a),a};let p=class extends(c(l.default)){};p=Object(i.a)([Object(s.a)("esri.views.2d.layers.OGCFeatureLayerView2D")],p);var o=p}}]);
//# sourceMappingURL=235.0176b52d.chunk.js.map