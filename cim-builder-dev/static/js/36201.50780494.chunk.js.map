{"version":3,"file":"static/js/36201.50780494.chunk.js","mappings":"8GAIA,SAASA,IAAI,OAAO,IAAIC,aAAa,EAAE,CAAC,SAASC,EAAEF,GAAG,MAAME,EAAE,IAAID,aAAa,GAAG,OAAOC,EAAE,GAAGF,EAAE,GAAGE,EAAE,GAAGF,EAAE,GAAGE,EAAE,GAAGF,EAAE,GAAGE,CAAC,CAAC,SAASC,EAAEH,EAAEE,EAAEC,GAAG,MAAMC,EAAE,IAAIH,aAAa,GAAG,OAAOG,EAAE,GAAGJ,EAAEI,EAAE,GAAGF,EAAEE,EAAE,GAAGD,EAAEC,CAAC,CAAC,SAASA,IAAI,OAAOJ,GAAG,CAAC,SAASK,IAAI,OAAOF,EAAE,EAAE,EAAE,EAAE,CAAC,SAASG,IAAI,OAAOH,EAAE,EAAE,EAAE,EAAE,CAAC,SAASI,IAAI,OAAOJ,EAAE,EAAE,EAAE,EAAE,CAAC,SAASK,IAAI,OAAOL,EAAE,EAAE,EAAE,EAAE,C,oCAAC,MAAMM,EAAEL,IAAIM,EAAEL,IAAIM,EAAEL,IAAIM,EAAEL,IAAIM,EAAEL,IAAMM,OAAOC,OAAOD,OAAOE,eAAe,CAACC,UAAU,KAAKC,KAAKR,EAAES,OAAOR,EAAES,OAAOR,EAAES,OAAOR,EAAES,MAAMb,EAAEc,MAAMrB,EAAEsB,OAAOxB,EAAEyB,WAAWtB,EAAEuB,KAAKrB,EAAEsB,MAAMrB,EAAEsB,MAAMrB,EAAEsB,MAAMrB,EAAEsB,MAAM1B,GAAG2B,OAAOC,YAAY,CAACC,MAAM,W,kBCArjB,SAASjC,IAAI,OAAO,IAAIC,aAAa,EAAE,CAA4F,SAASE,EAAEH,EAAEE,EAAEC,EAAEC,GAAG,MAAMC,EAAE,IAAIJ,aAAa,GAAG,OAAOI,EAAE,GAAGL,EAAEK,EAAE,GAAGH,EAAEG,EAAE,GAAGF,EAAEE,EAAE,GAAGD,EAAEC,CAAC,CAAC,SAASD,IAAI,OAAOJ,GAAG,CAAC,SAASK,IAAI,OAAOF,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,SAASG,IAAI,OAAOH,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,SAASI,IAAI,OAAOJ,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,SAASK,IAAI,OAAOL,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,SAASO,IAAI,OAAOP,EAAE,EAAE,EAAE,EAAE,EAAE,C,2BAAC,MAAMM,EAAEL,IAAIO,EAAEN,IAAIQ,EAAEP,IAAIM,EAAEL,IAAI2B,EAAE1B,IAAI2B,EAAEzB,IAAMI,OAAOC,OAAOD,OAAOE,eAAe,CAACC,UAAU,KAAKC,KAAKP,EAAEyB,OAAOD,EAAEhB,OAAON,EAAEO,OAAOR,EAAES,OAAOa,EAAEZ,MAAMb,EAAEc,MAAtf,SAAWvB,GAAG,MAAME,EAAE,IAAID,aAAa,GAAG,OAAOC,EAAE,GAAGF,EAAE,GAAGE,EAAE,GAAGF,EAAE,GAAGE,EAAE,GAAGF,EAAE,GAAGE,EAAE,GAAGF,EAAE,GAAGE,CAAC,EAAoasB,OAAOxB,EAAEyB,WAAWtB,EAAEuB,KAAKrB,EAAEgC,MAAM3B,EAAEiB,MAAMrB,EAAEsB,MAAMrB,EAAEsB,MAAMrB,EAAEsB,MAAM1B,GAAG2B,OAAOC,YAAY,CAACC,MAAM,W,wGCAzM,MAAMtB,UAAUT,EAAAA,EAAEoC,WAAAA,GAAcC,SAASC,WAAWC,KAAKC,QAAOtC,EAAAA,EAAAA,IAAE,EAAE,EAAE,EAAE,EAAE,CAACuC,OAAAA,GAAUF,KAAKG,UAAUH,KAAKG,SAASD,SAAS,CAACE,YAAAA,EAAcC,QAAQ1C,IAAIA,EAAE2C,uBAAsB,GAAI3C,EAAE4C,oBAAmB,GAAI5C,EAAE6C,uBAAsB,GAAI7C,EAAE8C,cAAa,GAAG,GAAG,GAAG,GAAI9C,EAAE+C,aAAa,KAAK,KAAK,MAAM/C,EAAEgD,oBAAoB,KAAKhD,EAAEiD,mBAAmB,IAAI,EAAE,IAAI,CAACC,IAAAA,CAAKlD,EAAED,GAAG,MAAM2C,QAAQ5C,EAAEqD,MAAM5C,EAAE6C,cAAcC,EAAEC,mBAAmBC,GAAGvD,EAAEG,GAAleJ,EAAAA,EAAAA,IAAE,OAAO,CAAC,CAACyD,SAAS,EAAEC,KAAK,QAAQC,MAAM,EAAEC,KAAKvD,EAAAA,GAAEwD,SAAsbC,EAAE9D,EAAE+D,OAAOhE,EAAES,EAAEJ,EAAE4D,cAAc,MAAMF,EAAEG,cAAc3B,KAAKG,YAAWnC,EAAAA,EAAAA,GAAEP,EAAEG,EAAAA,EAAE4D,EAAEI,YAAYV,GAAG,MAAMF,GAAGhB,KAAKG,SAAS0B,UAAUpE,EAAEqE,WAAW9B,KAAKG,UAAUH,KAAKG,SAAS4B,cAAc,gBAAgB,CAAC,EAAE,IAAI/B,KAAKG,SAAS6B,cAAc,UAAUhC,KAAKC,QAAQD,KAAKG,SAAS8B,oBAAoB,YAAY/D,EAAEgE,aAAazE,EAAE0E,QAAQX,GAAG/D,EAAE2E,aAAajE,EAAAA,GAAEkE,UAAUb,EAAEG,YAAYW,KAAKvE,EAAAA,GAAEwE,aAAa,GAAG9E,EAAE0E,QAAQ,OAAOnB,IAAI,E,qGCApmB,MAAM/C,UAAUD,EAAAA,EAAE6B,WAAAA,GAAcC,SAASC,WAAWC,KAAKC,QAAOrC,EAAAA,EAAAA,IAAE,EAAE,EAAE,EAAE,GAAGoC,KAAKwC,gBAAe7E,EAAAA,EAAAA,MAAIqC,KAAKyC,gBAAgB,CAACC,IAAG,EAAGC,SAAQ,EAAG,CAACzC,OAAAA,GAAUF,KAAK4C,MAAKlF,EAAAA,EAAAA,IAAEsC,KAAK4C,KAAK,CAACC,QAAAA,CAASnF,EAAEC,GAAG,MAAM0C,QAAQzC,EAAEkF,QAAQ9E,EAAE+C,cAAcxD,EAAE0D,mBAAmB/C,GAAGR,EAAEsC,KAAK+C,kBAAkBrF,GAAG,MAAMsD,EAAEtD,EAAEsF,aAAa/E,EAAEP,EAAEuF,WAAWpF,EAAEI,EAAEiF,mBAAmBhC,EAAElD,EAAEmF,2BAA2B/E,EAAEH,EAAEmF,cAAc,mBAAmBpC,GAAGQ,EAAEvD,EAAEmF,cAAc,qBAAqBpC,GAAGqC,EAAEpF,EAAEmF,cAAc,qBAAqBpC,GAAGsC,OAAE,IAASD,EAAEE,EAAE,EAAEC,OAAOC,iBAAiBC,EAAEhG,EAAEiG,aAAa,IAAIlE,EAAEmE,EAAE,MAAMC,EAAEN,EAAEpF,EAAAA,GAAE,EAAE,EAAE2F,EAAE9D,KAAKyC,gBAAgBqB,EAAEnB,QAAQW,EAAE,MAAMS,EAAE7C,EAAE8C,mBAAmBpG,EAAEC,EAAEiG,GAAG,IAAI5F,GAAG,MAAMX,GAAGwG,EAAElC,SAAS,CAAC,GAAGjE,EAAEuE,QAAQnC,KAAK4C,MAAMhF,EAAEkE,WAAWiC,GAAGT,EAAE,CAAC,MAAM7F,EAAEiG,EAAEO,sBAAsBZ,GAAE,GAAI,GAAG,MAAM5F,EAAE,CAAC,MAAMyG,GAAGxG,EAAEyG,GAAGxG,EAAEyG,KAAKjG,GAAGV,EAAEgC,EAAE9B,EAAE,GAAGD,EAAE,GAAGkG,EAAEjG,EAAE,GAAGD,EAAE,GAAG,MAAMM,EAAE0F,EAAEW,YAAYlG,GAAG,MAAMH,IAAI0F,EAAEY,KAAK1G,EAAE,KAAKO,EAAEJ,EAAAA,IAAGgG,EAAEQ,aAAa,SAAS7G,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,IAAIoG,EAAEhC,cAAc,eAAe/D,GAAG+F,EAAES,aAAa,YAAYzG,EAAAA,IAAG,CAACgG,EAAEU,aAAa,YAAYjD,EAAE,KAAK,CAAC,MAAM/D,EAAEW,EAAE,GAAGoD,EAAExB,KAAKC,OAAO,GAAGxC,EAAEW,EAAE,GAAG4B,KAAKC,OAAO,GAAGxC,EAAEW,EAAE,GAAG4B,KAAKC,OAAO,GAAGxC,EAAEW,EAAE,GAAG4B,KAAKC,OAAO,GAAGxC,EAAEsG,EAAE/B,cAAc,UAAUhC,KAAKC,OAAO,CAAC8D,EAAEU,aAAa,UAAUxG,EAAEyG,GAAG,GAAG,IAAI,MAAMhH,KAAKC,EAAE,CAAC,GAAGoG,EAAEU,aAAa,gBAAgB/G,EAAEiH,QAAQZ,EAAE9B,oBAAoB,YAAYvE,EAAEkH,WAAWC,uBAAuBvB,EAAE,CAAC,MAAM3F,EAAEmH,KAAKC,IAAI,IAAID,KAAKE,MAAMhE,GAAGtD,EAAEuH,IAAIC,OAAO,GAAGtH,EAAEiG,EAAEnG,EAAEyH,MAAMxH,EAAEI,EAAEH,GAAEH,EAAAA,EAAAA,IAAEgC,GAAGtB,EAAEP,GAAEH,EAAAA,EAAAA,IAAEmG,GAAG5D,KAAKwC,eAAe,GAAGzE,EAAEiC,KAAKwC,eAAe,GAAGrE,EAAE4F,EAAE9B,oBAAoB,mBAAmBjC,KAAKwC,eAAe,CAAC5E,EAAEgD,mBAAmB,IAAI,EAAE,KAAKhD,EAAEwH,WAAWtH,EAAAA,GAAEuH,eAAe,EAAE,EAAE,CAAC,MAAM9H,GAAG,CAACwF,iBAAAA,CAAkBtF,GAAG,GAAGuC,KAAK4C,KAAK,OAAO,MAAMvC,QAAQ3C,EAAEuF,WAAWtF,GAAGF,EAAEG,EAAED,EAAEuF,mBAAmBnF,EAAE,IAAIuH,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAInH,EAAEZ,EAAAA,EAAEgI,aAAa7H,EAAE,MAAMK,GAAGiC,KAAK4C,KAAK,IAAI1E,EAAAA,EAAER,EAAE,IAAIsD,EAAAA,EAAEpD,EAAE4H,eAAerH,GAAG,ECAn0E,MAAMH,UAAUL,EAAAA,EAAEkC,WAAAA,GAAcC,SAASC,WAAWC,KAAKyC,gBAAgB,CAACC,IAAG,EAAG,CAACxC,OAAAA,GAAU,CAAC2C,QAAAA,CAASlF,EAAEK,GAAG,MAAMqC,QAAQtC,EAAEiF,aAAazF,EAAEkI,cAAcvH,EAAE4C,MAAM3C,EAAE2E,QAAQlF,EAAE+F,aAAa7F,EAAE4H,cAAc7H,EAAEkD,cAAcS,EAAEP,mBAAmBhD,GAAGN,EAAE,IAAIK,EAAE2H,MAAKhI,GAAGA,EAAEiI,UAAUC,IAAIhI,IAAIiI,mBAAkB,IAAI,OAAO,MAAM5E,EAAEvD,EAAEsF,WAAWjC,EAAEE,EAAE6E,eAAetG,EAAE7B,EAAEuF,2BAAiCS,EAAE1C,EAAEkC,cAAc,mBAAmB7F,GAAGsG,EAAE3C,EAAEkC,cAAc,0BAA0B7F,GAAGgG,EAAEvD,KAAKyC,gBAAgBrE,EAAEqB,EAAEuE,mBAAmBjG,EAAEiD,EAAEuC,GAAG,GAAGtF,GAAG,MAAMuD,IAAIpD,EAAEyD,SAAS,YAAYL,IAAIzD,EAAE+D,WAAW1D,GAAGA,EAAE6D,oBAAoB,gBAAgB,IAAI4B,EAAE1F,EAAE+D,YAAY/D,EAAE6H,iBAAiB5H,EAAE2D,cAAc,sBAAsB6B,GAAGxF,EAAEqG,aAAa,UAAUvD,EAAEwD,GAAGtG,EAAEqG,aAAa,sBAA9W,KAAuY,IAAIwB,GAAG,EAAE,IAAI,MAAMC,KAAKlI,EAAE,CAAC,IAAIkI,EAAEN,UAAUO,IAAItI,GAAG,SAASqI,EAAEjB,IAAIC,QAAQe,IAAIA,EAAEC,EAAEjB,IAAIC,MAAMlE,EAAEoF,gBAAgBhI,EAAEb,EAAE2D,EAAE+E,EAAEnI,IAAI,MAAMH,EAAEuI,EAAEN,UAAUC,IAAIhI,GAAG,IAAIF,EAAEmI,iBAAiB,SAASnI,EAAE0I,oBAAoBtI,GAAG,MAAMC,EAAEL,EAAE2I,IAAI,MAAMtI,IAAID,EAAEoE,QAAQnE,GAAGI,EAAE6D,oBAAoB,YAAYiE,EAAEtB,WAAWC,uBAAuB3G,IAAIgI,EAAEjB,IAAIC,MAAMnH,EAAE6C,mBAAmB,IAAIsF,EAAEK,WAAW,KAAKxI,EAAE6C,mBAAmB,IAAI,IAAI,KAAK7C,EAAEqE,aAAa3E,EAAAA,GAAE4E,UAAU1E,EAAEmI,iBAAiBpI,EAAAA,GAAE6E,aAAaiE,YAAYC,kBAAkB9I,EAAE+I,kBAAkBR,EAAES,eAAehJ,EAAEmI,iBAAiB,EAAE,CAAC,ECArtC,MAAM5H,EAAE,EAAE,MAAM,MAAMR,UAAUK,EAAAA,EAAE8B,WAAAA,GAAcC,SAASC,WAAWC,KAAK4G,oBAAoB,CAAClE,IAAG,EAAGC,SAAQ,GAAI3C,KAAK6G,uBAAuB,CAACnE,IAAG,EAAG,CAACxC,OAAAA,GAAU,CAAC2C,QAAAA,CAASpF,EAAEE,GAAG,MAAMqF,aAAajF,EAAE+I,WAAWvJ,EAAEoG,aAAa3F,EAAE0H,cAAcxH,GAAGT,EAAE,IAAIC,GAAE,EAAG,IAAI,MAAMU,KAAKT,EAAE,GAAGS,EAAEwH,UAAUO,IAAIjI,GAAG,CAAC,MAAMT,EAAEW,EAAEwH,UAAUC,IAAI3H,GAAG,GAAGT,EAAEsJ,eAAe,GAAGtJ,EAAEuJ,kBAAkB,EAAE,CAACtJ,GAAE,EAAG,KAAK,CAAC,CAAC,IAAIA,EAAE,OAAO,MAAME,EAAEH,EAAEwF,WAAW9E,EAAEP,EAAEqJ,iBAAiB,gBAAgBhJ,OAAE,IAASE,EAAEN,EAAEI,GAAGE,EAAE+I,aAAa,IAAIpJ,EAAE,GAAGG,IAAIJ,EAAE,CAAC,MAAMJ,EAAEU,EAAEgJ,SAASpJ,GAAGD,EAAEE,EAAEiG,sBAAsBxG,GAAE,EAAG,CAAC,MAAM+D,GAAGvD,GAAGL,EAAEwF,cAAc,iBAAiBrF,GAAG,IAAImD,GAAE,EAAGF,EAAE,EAAE,IAAI/C,EAAE,CAAC,MAAMR,EAAEG,EAAEqJ,iBAAiB,cAActJ,EAAEC,EAAEqJ,iBAAiB,gBAAgB,IAAIxJ,GAAGyJ,eAAevJ,GAAGuJ,aAAa,CAAC,MAAMzJ,EAAEG,EAAEwF,cAAc,aAAarF,GAAGiD,EAAEpD,EAAEwF,cAAc,eAAerF,GAAGN,EAAE,GAAGuD,GAAG,IAAIE,GAAE,EAAG,CAAC,CAAC,GAAGA,GAAG,WAAW3D,EAAE,OAAO,MAAMkC,EAAE7B,EAAEwF,cAAc,iBAAiBrF,GAAGsF,EAAEzF,EAAEwF,cAAc,wBAAwBrF,IAAImD,GAAG,gBAAgB3D,IAAIyC,KAAKoH,UAAU3J,EAAES,EAAEN,EAAED,EAAE8B,EAAE4D,EAAEpF,EAAEH,EAAED,GAAG,MAAM+F,GAAGhG,EAAEyJ,2BAA2BzJ,EAAE0J,sBAAsBtG,EAAE,EAAEQ,GAAG,WAAWjE,IAAIqG,GAAG5D,KAAKuH,aAAa9J,EAAES,EAAEN,EAAED,EAAE8B,EAAE4D,EAAE,CAAC+D,SAAAA,CAAUrJ,EAAEL,EAAEE,EAAEO,EAAEF,EAAEJ,EAAEC,EAAE0D,EAAEN,GAAG,GAAGpD,IAAIoD,GAAG,MAAMM,EAAE,OAAO,MAAMnB,QAAQW,EAAEgC,aAAavD,EAAEqB,MAAMuC,EAAEP,QAAQc,EAAE4D,WAAWpJ,EAAEuF,aAAaE,EAAE9C,cAAc0G,EAAExG,mBAAmByG,GAAG3J,EAAEmI,EAAEtI,EAAE+J,aAAapE,EAAEK,EAAET,2BAA2ByE,EAAExJ,EAAET,EAAAA,GAAE,EAAE,EAAEsI,EAAEjG,KAAK4G,oBAAoBX,EAAEtD,QAAQ7E,EAAE,MAAM+J,EAAEtE,EAAES,mBAAmBhD,EAAEkF,EAAED,GAAG,GAAGyB,GAAG,MAAMD,IAAII,EAAEhG,SAAS,YAAY4F,IAAI,GAAGzG,EAAEc,WAAW+F,GAAG,MAAMrG,EAAE,CAAC,MAAM4C,KAAKzG,GAAG6D,EAAEzD,EAAE8F,EAAEQ,YAAY1G,GAAG,MAAMI,IAAI8F,EAAES,KAAKtD,EAAE,KAAKrD,EAAEF,EAAAA,IAAGoK,EAAE9F,cAAc,eAAehE,GAAG8J,EAAErD,aAAa,YAAY/G,EAAAA,IAAG,CAACoK,EAAE5F,oBAAoB,gBAAgB,IAAIpE,EAAEwF,EAAEnB,YAAYmB,EAAE2C,iBAAiB6B,EAAE9F,cAAc,oBAAoB9D,GAAG4J,EAAEpD,aAAa,UAAU7G,EAAE8G,EAAExG,GAAG,IAAIoF,GAAG,EAAE,IAAI,MAAM3F,KAAKQ,EAAE,CAAC,IAAIR,EAAEiI,UAAUO,IAAIzI,GAAG,SAASC,EAAEsH,IAAIC,QAAQ5B,IAAIA,EAAE3F,EAAEsH,IAAIC,MAAMgB,EAAEE,gBAAgByB,EAAEpI,EAAE7B,EAAE0F,EAAEO,IAAI,MAAM9F,EAAEJ,EAAEiI,UAAUC,IAAInI,GAAG,IAAIK,EAAEgJ,eAAe,SAAShJ,EAAEsI,oBAAoBrF,GAAG,MAAM9C,EAAEH,EAAE+J,QAAQ,GAAG,MAAM5J,EAAE,CAAC,GAAG8C,EAAEmB,QAAQjE,GAAG2J,EAAE5F,oBAAoB,YAAYtE,EAAEiH,WAAWC,uBAAuB7D,EAAEJ,mBAAmB,IAAIjD,EAAE4I,WAAW,KAAKzI,EAAE,CAAC,MAAML,EAAEqH,KAAKC,IAAI,IAAID,KAAKE,MAAMvF,GAAG9B,EAAEsH,IAAIC,OAAO,GAAGnH,EAAEJ,EAAEgH,QAAQiD,EAAEjK,EAAEwH,MAAM1H,GAAGoK,EAAEpD,aAAa,kBAAkB1G,EAAE,CAAC,GAAGmD,EAAE,CAAC,MAAMvD,EAAEI,EAAEgK,WAAW,IAAIpK,EAAE,SAAS,IAAI,MAAMI,EAAEG,KAAKP,EAAE,CAAC,MAAMA,EAAEkG,EAAEQ,YAAYtG,GAAG,MAAMJ,IAAIkG,EAAES,KAAKtD,EAAE,KAAKjD,EAAEN,EAAAA,IAAGoK,EAAE9F,cAAc,eAAepE,GAAGkK,EAAErD,aAAa,YAAY/G,EAAAA,IAAGuD,EAAEoB,aAAa7E,EAAAA,GAAE8E,UAAUnE,EAAE,GAAGF,EAAAA,GAAEuE,aAAaiE,YAAYC,kBAAkBvI,EAAE,IAAI,CAAC,MAAM8C,EAAEoB,aAAa7E,EAAAA,GAAE8E,UAAUtE,EAAEgJ,eAAe/I,EAAAA,GAAEuE,aAAaiE,YAAYC,kBAAkB1I,EAAEiK,gBAAgBrK,EAAEgJ,eAAe5I,EAAEgJ,eAAe,CAAC,CAAC,CAAC,CAACQ,YAAAA,CAAa9J,EAAEE,EAAEI,EAAEL,EAAEE,EAAEO,GAAG,MAAMkC,QAAQpC,EAAE+E,aAAanF,EAAEiD,MAAMhD,EAAEgF,QAAQtB,EAAEgG,WAAWtG,EAAEyC,aAAa3C,EAAED,cAActB,EAAEwB,mBAAmBoC,GAAG5F,EAAEmG,EAAE7F,EAAEkK,gBAAgB7J,EAAEoD,EAAE2B,2BAA2BU,EAAE,IAAI3C,EAAEuG,EAAEzH,KAAK6G,uBAAuBa,EAAEtJ,EAAE4F,mBAAmB/F,EAAE2F,EAAE6D,GAAG,GAAGpE,GAAG,MAAM5D,IAAIiI,EAAE7F,SAAS,YAAYpC,IAAIxB,EAAE6D,WAAW4F,GAAGA,EAAEzF,oBAAoB,gBAAgB,IAAI9D,EAAEL,EAAEoE,YAAYpE,EAAEkI,iBAAiB0B,EAAE3F,cAAc,oBAAoBnE,GAAG8J,EAAEjD,aAAa,UAAU1G,EAAE2G,EAAExG,GAAGwJ,EAAEjD,aAAa,kBAAkBZ,GAAG,IAAIqC,GAAG,EAAE,IAAI,MAAMhI,KAAKR,EAAE,CAAC,IAAIQ,EAAE0H,UAAUO,IAAIxI,GAAG,SAASO,EAAE+G,IAAIC,QAAQgB,IAAIA,EAAEhI,EAAE+G,IAAIC,MAAMtB,EAAEwC,gBAAgBsB,EAAE7J,EAAEE,EAAEmI,EAAElF,IAAI,MAAMvD,EAAES,EAAE0H,UAAUC,IAAIlI,GAAG,GAAGF,EAAE4I,oBAAoBpI,IAAIR,EAAEuJ,kBAAkB,SAAS,MAAMtJ,EAAED,EAAEyK,WAAW,MAAMxK,IAAIO,EAAEkE,QAAQzE,GAAGgK,EAAEzF,oBAAoB,YAAY/D,EAAE0G,WAAWC,uBAAuB5G,EAAE2C,mBAAmB,IAAI1C,EAAEqI,WAAW,KAAKtI,EAAEmE,aAAa7E,EAAAA,GAAE8E,UAAU5E,EAAEuJ,kBAAkBhJ,EAAAA,GAAEuE,aAAaiE,YAAYC,kBAAkBhJ,EAAE0K,mBAAmBjK,EAAEyI,eAAelJ,EAAEuJ,kBAAkB,EAAE,CAAC,ECA3nH,MAAMhJ,UAAUP,EAAAA,EAAEoC,WAAAA,GAAcC,SAASC,WAAWC,KAAKyC,gBAAgB,CAACC,IAAG,EAAGC,SAAQ,EAAGyF,KAAI,EAAG,CAAClI,OAAAA,GAAU,CAAC2C,QAAAA,CAASpF,EAAEO,GAAG,MAAMqC,QAAQ3C,EAAEsF,aAAapF,EAAEkD,MAAM3C,EAAE2E,QAAQ5E,EAAEsJ,WAAWvJ,EAAE0F,aAAa9F,EAAE6H,cAAc5H,EAAEiD,cAAcS,EAAEP,mBAAmBD,GAAGvD,EAAE,IAAIO,EAAE2H,MAAKhI,GAAGA,EAAEiI,UAAUC,IAAI/H,IAAIuK,iBAAgB,IAAI,OAAO,MAAMnH,EAAEzD,EAAEwF,WAAWI,EAAEnC,EAAEoH,aAAa7I,EAAEvB,EAAEiF,2BAA2BS,EAAE1C,EAAEkC,cAAc,iBAAiBxF,GAAGQ,EAAE8C,EAAEkC,cAAc,wBAAwBxF,GAAGiG,EAAE3C,EAAE+F,iBAAiB,gBAAgBf,OAAE,IAASrC,EAAE6D,EAAExB,GAAGrC,EAAEqD,aAAa,IAAI3D,EAAE0C,EAAE,GAAGC,IAAIwB,EAAE,CAAC,MAAM/J,EAAEkG,EAAEsD,SAASvJ,GAAG2F,EAAE1F,EAAEoG,sBAAsBtG,EAAE,CAAC,IAAI8J,GAAE,EAAG,IAAIvB,EAAE,CAAC,MAAMvI,EAAEuD,EAAE+F,iBAAiB,kBAAkB,GAAGhB,OAAE,IAAStI,EAAE8J,EAAExB,GAAGtI,EAAEuJ,aAAajB,IAAIwB,EAAE,CAAC,MAAMhK,EAAEE,EAAEwJ,SAASvJ,GAAGG,EAAEmD,EAAEqH,WAAW9K,EAAEyD,EAAEsH,eAAe,WAAW5K,IAAI2F,EAAE1F,EAAEoG,sBAAsBlG,EAAE,CAAC,CAAC,MAAM6J,EAAE,EAAE3J,EAAE4J,EAAE7H,KAAKyC,gBAAgBoF,EAAElF,QAAQuD,EAAE2B,EAAEO,IAAInC,EAAE,MAAMvG,EAAED,EAAEuE,mBAAmBtG,EAAE2F,EAAEwE,GAAG,GAAG7G,GAAG,MAAMQ,IAAI9B,EAAEmC,SAAS,YAAYL,IAAI,GAAG9D,EAAEoE,WAAWpC,GAAGA,EAAEuC,oBAAoB,oBAAoB9D,EAAE6H,iBAAiBtG,EAAEuC,oBAAoB,gBAAgB,IAAI7D,EAAED,EAAE+D,YAAY/D,EAAE6H,iBAAiBtG,EAAEqC,cAAc,oBAAoB6B,GAAGlE,EAAE+E,aAAa,UAAUvD,EAAEwD,GAAGhF,EAAE+E,aAAa,iBAAiBmD,GAAGrE,GAAG,MAAMA,EAAE,CAAC,MAAMa,KAAK3G,GAAG8F,EAAExF,EAAEF,EAAEwG,YAAY5G,GAAG,MAAMM,IAAIF,EAAEyG,KAAK5G,EAAE,KAAKD,EAAEE,EAAAA,IAAG+B,EAAEqC,cAAc,eAAehE,GAAG2B,EAAE8E,aAAa,YAAY7G,EAAAA,IAAG,CAAC,IAAI8K,GAAG,EAAE,IAAI,MAAMC,KAAK1K,EAAE,CAAC,IAAI0K,EAAE9C,UAAUO,IAAIrI,GAAG,SAAS4K,EAAEzD,IAAIC,QAAQuD,IAAIA,EAAEC,EAAEzD,IAAIC,MAAM7B,EAAE+C,gBAAgB1G,EAAE9B,EAAEsD,EAAEuH,EAAE5K,IAAI,MAAMJ,EAAE,IAAIG,EAAE6K,GAAGxK,EAAEyB,EAAE+E,aAAa,eAAehH,GAAG,MAAMO,EAAE0K,EAAE9C,UAAUC,IAAI/H,GAAG,IAAIE,EAAEqK,eAAe,SAASrK,EAAEqI,oBAAoB3I,GAAG,MAAMS,EAAEH,EAAEsI,IAAI,GAAG,MAAMnI,EAAE,CAAC,GAAGT,EAAEyE,QAAQhE,GAAGuB,EAAEuC,oBAAoB,YAAYyG,EAAE9D,WAAWC,uBAAuBnH,EAAEkD,mBAAmB,IAAI8H,EAAEnC,WAAW,KAAKmB,GAAGD,EAAE,CAAC,MAAMhK,EAAEO,EAAE+J,WAAW,IAAItK,EAAE,SAAS,IAAI,MAAMO,EAAEJ,KAAKH,EAAE,CAAC,MAAMA,EAAEI,EAAEwG,YAAYrG,GAAG,MAAMP,IAAII,EAAEyG,KAAK5G,EAAE,KAAKM,EAAEL,EAAAA,IAAG+B,EAAEqC,cAAc,eAAetE,GAAGiC,EAAE8E,aAAa,YAAY7G,EAAAA,IAAGD,EAAE0E,aAAarE,EAAAA,GAAEsE,UAAUzE,EAAE,GAAGL,EAAAA,GAAEgF,aAAaiE,YAAYC,kBAAkB7I,EAAE,IAAI,CAAC,MAAMF,EAAE0E,aAAarE,EAAAA,GAAEsE,UAAUrE,EAAEqK,eAAe9K,EAAAA,GAAEgF,aAAaiE,YAAYC,kBAAkBzI,EAAE2K,gBAAgBD,EAAE/B,eAAe3I,EAAEqK,eAAe,CAAC,CAAC,CAAC,E,qCCAl4D,MAAMpK,EAAE,EAAE,MAAM,MAAMH,UAAUK,EAAAA,EAAE0B,WAAAA,GAAcC,SAASC,WAAWC,KAAK4I,oBAAoB,CAAClG,IAAG,EAAG0F,KAAI,GAAIpI,KAAK6I,mBAAmB,CAACnG,IAAG,GAAI1C,KAAK8I,qBAAoBnL,EAAAA,EAAAA,KAAG,CAACuC,OAAAA,GAAU,CAAC2C,QAAAA,CAASlF,EAAEF,GAAG,MAAMM,EAAEJ,EAAEsF,WAAWjD,KAAK+I,WAAWpL,EAAEI,EAAEN,GAAGuC,KAAKgJ,UAAUrL,EAAEI,EAAEN,EAAE,CAACsL,UAAAA,CAAWpL,EAAEF,EAAEC,GAAG,MAAM2C,QAAQlC,EAAE6E,aAAapF,EAAEkF,QAAQ5E,EAAEyF,aAAa1F,EAAE6C,MAAMhD,EAAE4H,cAAc7H,EAAEkD,cAAcG,EAAED,mBAAmBD,GAAGrD,EAAE0F,EAAE5F,EAAEwL,aAAazH,EAAEtD,EAAEiF,2BAA2B,IAAI1D,EAAErB,GAAE,EAAG,IAAI,MAAML,KAAKL,EAAE,GAAGK,EAAE6H,UAAUO,IAAItI,KAAK4B,EAAE1B,EAAE6H,UAAUC,IAAIhI,GAAG4B,EAAEyJ,uBAAuB5G,KAAK,GAAG,CAAClE,GAAE,EAAG,KAAK,CAAC,IAAIA,EAAE,OAAO,MAAMkF,EAAE7F,EAAE2F,cAAc,iBAAiBxF,GAAGgG,EAAEnG,EAAE2F,cAAc,wBAAwBxF,GAAG,IAAIsI,EAAEzI,EAAE+K,eAAe,0BAA0B5K,GAAG,IAAIsI,IAAIA,EAAE,IAAIzI,EAAE+K,eAAe,mBAAmB5K,GAAG,EAAE,GAAG,MAAM2F,EAAE,IAAI2C,EAAEuB,EAAEhK,EAAE+K,eAAe,oBAAoB5K,IAAI2F,EAAEsE,EAAEpI,EAAE0J,UAAUzB,EAAE1H,KAAK4I,oBAAoBlB,EAAEU,IAAIP,EAAE,MAAMhE,EAAErC,EAAEwC,mBAAmB7F,EAAEkF,EAAEqE,GAAG,GAAG1G,GAAG,MAAME,IAAI2C,EAAEhC,SAAS,YAAYX,IAAI/C,EAAE2D,WAAW+B,GAAGA,EAAE5B,oBAAoB,oBAAoB,IAAIiE,EAAEpI,EAAEkI,gBAAgBlI,EAAEoE,aAAa2B,EAAE5B,oBAAoB,gBAAgB,IAAI2B,EAAE9F,EAAEoE,YAAYpE,EAAEkI,iBAAiBnC,EAAE9B,cAAc,oBAAoBuB,GAAGO,EAAEY,aAAa,UAAUhH,EAAEiH,GAAGb,EAAEY,aAAa,iBAAgBlH,EAAAA,EAAAA,IAAEO,EAAEsL,WAAWvF,EAAEY,aAAa,gBAAgBgD,EAAE,EAAE,GAAG5D,EAAEY,aAAa,UAAU,GAAG7G,GAAGiG,EAAEW,aAAa,YAAYxG,EAAAA,IAAG6F,EAAEY,aAAa,iBAAiB1G,EAAAA,GAAE,KAAK,IAAI6J,GAAG,EAAE,IAAI,MAAM7J,KAAKL,EAAE,CAAC,IAAIK,EAAE6H,UAAUO,IAAItI,GAAG,SAAS,GAAGE,EAAEkH,IAAIC,QAAQ0C,IAAIA,EAAE7J,EAAEkH,IAAIC,MAAM7B,EAAE+C,gBAAgBvC,EAAEjG,EAAEH,EAAEmK,EAAE3J,IAAIwB,EAAE1B,EAAE6H,UAAUC,IAAIhI,GAAG,IAAI4B,EAAEyJ,uBAAuB5G,KAAK,SAAS7C,EAAE4G,oBAAoBlI,GAAGsB,EAAE4J,oBAAoB,MAAMrL,EAAEyB,EAAE6J,QAAQ,GAAG,MAAMtL,EAAE,CAACG,EAAEgE,QAAQnE,GAAG6F,EAAE5B,oBAAoB,YAAYlE,EAAE6G,WAAWC,uBAAuBhB,EAAEY,aAAa,UAAU8E,YAAYC,MAAM/J,EAAEgK,mBAAmB,KAAK,IAAI,MAAMhM,EAAEO,KAAKyB,EAAEyJ,uBAAuBlJ,KAAK0J,iBAAiB/L,EAAEkG,EAAE7F,EAAEP,EAAEM,EAAE,CAAC,CAAC,CAAC2L,gBAAAA,CAAiB/L,EAAEF,EAAEM,EAAEL,EAAEH,GAAG,MAAM8C,QAAQlC,EAAEwF,aAAa1F,GAAGN,EAAEqC,KAAK8I,oBAAoB,GAAG7K,EAAE0L,SAASjM,GAAG,EAAEsC,KAAK8I,oBAAoB,GAAG7K,EAAE2L,UAAUlM,GAAG,EAAED,EAAEsE,cAAc,eAAe/B,KAAK8I,qBAAqB7K,EAAEqG,KAAKnG,EAAE,KAAKT,EAAEM,EAAAA,IAAGgC,KAAK6J,iBAAiBlM,EAAEJ,GAAGY,EAAEiE,aAAaxE,EAAAA,GAAEyE,UAAUtE,EAAE,GAAGG,EAAAA,GAAEqE,aAAaiE,YAAYC,kBAAkB1I,EAAE,IAAIR,EAAEoJ,eAAe5I,EAAE,GAAG,CAAC,CAACiL,SAAAA,CAAUrL,EAAEK,EAAEG,GAAG,MAAMkC,QAAQzC,EAAEoF,aAAa9E,EAAE4L,YAAYhM,EAAEgF,QAAQjF,EAAE2J,WAAWtG,EAAEyC,aAAa3C,EAAEF,MAAMuC,EAAEqC,cAAclE,EAAET,cAActB,EAAEwB,mBAAmB7C,GAAGT,EAAE2F,EAAEtF,EAAE+L,aAAanG,EAAE/F,EAAEsF,2BAA2B,IAAI+C,EAAE3C,GAAE,EAAG,IAAI,MAAM9F,KAAKU,EAAE,GAAGV,EAAEmI,UAAUO,IAAI3E,KAAK0E,EAAEzI,EAAEmI,UAAUC,IAAIrE,GAAG0E,EAAE8D,wBAAwB1H,KAAK,GAAG,CAACiB,GAAE,EAAG,KAAK,CAAC,IAAIA,EAAE,OAAO,MAAMkE,EAAEzJ,EAAEiJ,iBAAiB,gBAAgB,GAAGQ,IAAIA,EAAEP,cAAc,IAAIO,EAAEN,SAASjJ,GAAG,OAAO,MAAM2J,EAAE7J,EAAEiJ,iBAAiB,cAAcS,GAAGG,GAAGA,EAAEX,cAAcW,EAAEV,SAASjJ,GAAG,GAAG,EAAE2F,EAAE7F,EAAEiJ,iBAAiB,mBAAmBW,EAAE5J,EAAEiJ,iBAAiB,mBAAmBwB,IAAI5E,GAAGA,EAAEqD,cAAcrD,EAAEsD,SAASjJ,GAAG,MAAM0J,GAAGA,EAAEV,cAAcU,EAAET,SAASjJ,GAAG,GAAG,GAAG,IAAIwJ,IAAIe,EAAE,OAAoB,IAAI3E,EAAE9F,EAAEwK,eAAe,0BAA0BtK,GAAG,IAAI4F,IAAIA,EAAE,IAAI9F,EAAEwK,eAAe,mBAAmBtK,GAAG,EAAE,GAAG,MAAM+L,EAAE,IAAInG,EAAEmC,EAAEjI,EAAEwK,eAAe,oBAAoBtK,IAAI+L,EAAEC,EAAE,GAAhL,EAAqLhJ,EAAElB,KAAKmK,oBAAoBnK,KAAKmK,mBAAkB1M,EAAAA,EAAAA,IAAEK,EAAEqH,MAAM,EAAErH,EAAEsM,OAAO,IAAI,MAAM1F,EAAE1G,EAAEoF,cAAc,iBAAiBlF,GAAGwB,EAAE1B,EAAEoF,cAAc,wBAAwBlF,GAAGwF,EAAE1D,KAAK6I,mBAAmBwB,EAAEzG,EAAEI,mBAAmBpG,EAAE0F,EAAEI,GAAG,GAAGtF,GAAG,MAAMqB,IAAI4K,EAAExI,SAAS,YAAYpC,IAAI7B,EAAEkE,WAAWuI,GAAGA,EAAEpI,oBAAoB,oBAAoB,IAAI6B,EAAET,EAAE2C,gBAAgB3C,EAAEnB,aAAamI,EAAEpI,oBAAoB,gBAAgB,IAAIvC,EAAE2D,EAAEnB,YAAYmB,EAAE2C,iBAAiBqE,EAAEtI,cAAc,oBAAoB2C,GAAG2F,EAAE5F,aAAa,UAAUzG,EAAE0G,EAAEzG,GAAGoM,EAAEtI,cAAc,eAAe/B,KAAKmK,mBAAmBE,EAAE5F,aAAa,iBAAgBlH,EAAAA,EAAAA,IAAE8F,EAAE+F,WAAWiB,EAAE5F,aAAa,gBAAgBwB,EAAE,EAAE,GAAGoE,EAAE5F,aAAa,UAAU,GAAGvG,GAAGmM,EAAE7F,aAAa,YAAY9G,EAAAA,IAAG2M,EAAE5F,aAAa,sBAAsByF,GAAGG,EAAE5F,aAAa,iBAAiB1G,EAAAA,GAAE,KAAK,IAAIuM,GAAG,EAAE,IAAI,MAAM7M,KAAKU,EAAE,CAAC,IAAIV,EAAEmI,UAAUO,IAAI3E,GAAG,SAAS,GAAG/D,EAAEwH,IAAIC,QAAQoF,IAAIA,EAAE7M,EAAEwH,IAAIC,MAAM5B,EAAE8C,gBAAgBiE,EAAEnM,EAAEF,EAAEsM,EAAEtJ,IAAIkF,EAAEzI,EAAEmI,UAAUC,IAAIrE,GAAG,IAAI0E,EAAE8D,wBAAwB1H,KAAK,SAAS4D,EAAEG,oBAAoBzI,GAAGsI,EAAEmD,oBAAoB,MAAMtL,EAAEmI,EAAEqE,QAAQ,GAAG,MAAMxM,EAAE,SAASH,EAAEuE,QAAQpE,GAAGsM,EAAEpI,oBAAoB,YAAYxE,EAAEmH,WAAWC,uBAAuB7E,KAAK6J,iBAAiBlM,EAAEF,GAAG,MAAMC,GAAG6L,YAAYC,MAAMtD,EAAEuD,mBAAmB,IAAIY,EAAE5F,aAAa,SAAS/G,GAAGwI,EAAE8D,wBAAwBQ,SAAQ,CAAC7M,EAAEI,KAAKiC,KAAKyK,kBAAkB7M,EAAED,EAAEI,EAAED,EAAEuM,EAAE5B,EAAEf,EAAEjK,EAAE,GAAE,CAAC,CAACgN,iBAAAA,CAAkB9M,EAAEF,EAAEM,EAAEC,EAAET,EAAEY,EAAEF,EAAEH,GAAGE,EAAEsG,KAAK3G,EAAE,KAAKI,EAAEL,EAAAA,IAAGS,IAAIZ,EAAEkH,aAAa,SAAS,GAAG9G,EAAEyE,aAAaxE,EAAAA,GAAEyE,UAAU5E,EAAE,GAAGS,EAAAA,GAAEqE,aAAaiE,YAAYC,kBAAkBhJ,EAAE,IAAIK,EAAE6I,eAAelJ,EAAE,GAAG,GAAGQ,IAAIV,EAAEkH,aAAa,SAAS,GAAG9G,EAAEyE,aAAaxE,EAAAA,GAAEyE,UAAU5E,EAAE,GAAGS,EAAAA,GAAEqE,aAAaiE,YAAYC,kBAAkBhJ,EAAE,IAAIK,EAAE6I,eAAelJ,EAAE,GAAG,EAAE,CAACoM,gBAAAA,CAAiBlM,EAAEF,GAAG,MAAM4C,QAAQtC,EAAE2M,KAAK1M,EAAE2M,eAAejN,GAAGC,EAAE,GAAGI,EAAEuC,uBAAsB,GAAI5C,EAAE,OAAOK,EAAE4C,oBAAoB,UAAU5C,EAAE6C,mBAAmB,IAAInD,EAAE8I,WAAW,KAAKxI,EAAE4C,oBAAoB,GAAG3C,EAAED,EAAE6C,mBAAmB,IAAInD,EAAE8I,WAAW,KAAKxI,EAAE6C,mBAAmB,IAAI,IAAI,IAAI,ECAx3J,MAAMI,EAAE,CAAC4J,KAAKlN,EAAEmN,QAAQ1M,EAAAA,EAAE2M,cAAcnN,EAAAA,EAAEoN,cAAc7M,EAAE8M,QAAQtH,EAAEuH,QAAQlN,EAAEmN,UAAUtN,EAAEuN,UAAUtN,E,+DCAvmB,MAAMD,GAAE,EAAGH,EAAE,GAAGK,EAAE,IAAIH,EAAE,G,8HCAgmB,MAAM4F,GAAEzF,EAAAA,EAAAA,MAAI8F,GAAE1C,EAAAA,EAAAA,MAAI,MAAMmC,UAAUxF,EAAAA,EAAEgC,WAAAA,CAAYpC,EAAEU,EAAEJ,EAAEL,GAAGoC,MAAMrC,EAAEU,EAAEJ,EAAEL,EAAE8D,EAAAA,GAAEA,EAAAA,GAAE,CAAC4J,OAAAA,GAAUtL,MAAMsL,SAAS,CAACC,YAAAA,CAAarK,GAAG,MAAMlD,EAAEkC,KAAKsL,WAAWtK,EAAEsK,WAAWhI,EAAEtD,KAAK4E,WAAW2G,UAAUtN,EAAEiD,GAAGF,EAAEwK,mBAAmB,CAAC,EAAE,GAAG,CAACxL,KAAKuD,EAAEvD,KAAKP,IAAI+B,EAAExB,KAAKmF,MAAMnF,KAAK2E,OAAO7G,EAAED,EAAEmC,KAAKoK,OAAOpK,KAAKyL,OAAO3N,GAAEJ,EAAAA,EAAAA,IAAE4F,EAAE9B,EAAE,EAAE,EAAE,EAAE3D,EAAE,EAAEI,EAAEiD,EAAE,IAAGtD,EAAAA,EAAAA,IAAEoC,KAAK4E,WAAWC,sBAAsB7D,EAAEgF,gBAAgB1C,GAAG,MAAMC,GAAE9F,EAAAA,EAAAA,KAAEM,EAAAA,EAAAA,MAAIyD,EAAE,EAAE,EAAE3D,EAAEI,EAAEiD,IAAG/C,EAAAA,EAAAA,IAAE6B,KAAK4E,WAAW8G,WAAW1K,EAAE2K,UAAUpI,GAAG,MAAMK,EAAE,CAAC,EAAE,GAAG5C,EAAE4K,SAAShI,EAAE,CAAC5D,KAAKuD,EAAEvD,KAAKP,IAAI,MAAM4D,EAAErD,KAAK4E,WAAWiH,mBAAkBlO,EAAAA,EAAAA,IAAE0F,IAAGrF,EAAAA,EAAAA,IAAEqF,EAAEA,EAAEO,IAAGrG,EAAAA,EAAAA,IAAE8F,EAAEA,EAAEyB,KAAKgH,GAAG9K,EAAEoI,SAAS,MAAKlL,EAAAA,EAAAA,IAAEmF,EAAEA,EAAE,CAAC7B,EAAE3D,EAAE,GAAG,CAACkO,iBAAAA,GAAoB,MAAM,CAACL,YAAW3N,EAAAA,EAAAA,MAAIwN,UAASzN,EAAAA,EAAAA,MAAI+G,uBAAsB/G,EAAAA,EAAAA,MAAI+N,mBAAkB/N,EAAAA,EAAAA,MAAI,CAACkO,mBAAAA,CAAoBvO,EAAEU,EAAEJ,GAAG,MAAML,GAAEE,EAAAA,EAAAA,IAAE2F,EAAE9F,EAAEwO,SAASjM,KAAK4E,WAAW2G,UAAU5N,GAAEqD,EAAAA,EAAAA,IAAEuC,EAAE7F,GAAG,GAAG,MAAMC,EAAE,OAAM,GAAG2F,EAAAA,EAAAA,GAAEM,KAAKzF,EAAE,GAAG,MAAMH,GAAEC,EAAAA,EAAAA,GAAE2F,EAAEA,EAAEjG,GAAGJ,EAAEQ,GAAGiC,KAAKsL,WAAW7N,EAAE6N,YAAY,OAAOtN,EAAE,KAAKT,GAAGS,EAAE,GAAGgC,KAAKmF,MAAM5H,GAAGS,EAAE,KAAKT,GAAGS,EAAE,GAAGgC,KAAKoK,OAAO7M,CAAC,E,oJCAjzC,SAASS,EAAEP,EAAEE,GAAG,OAAOF,GAAG,GAAG,IAAIE,CAAC,CAA4B,MAAMD,EAAEmC,WAAAA,CAAYpC,EAAEE,EAAEJ,EAAEQ,EAAEC,GAAGgC,KAAKkM,SAASzO,EAAEuC,KAAKmM,YAAYxO,EAAEqC,KAAKoM,OAAO7O,EAAEyC,KAAKqM,MAAMtO,EAAEiC,KAAKqB,MAAMrD,CAAC,CAAC,cAAIsO,GAAa,OAAjI,IAA0ItM,KAAKmM,WAAY,CAAC,YAAII,GAAW,OAAOvM,KAAKqM,MAAMrM,KAAKqB,KAAK,CAACmL,MAAAA,CAAO/O,GAAGuC,KAAKqB,OAAO5D,CAAC,CAACgP,MAAAA,CAAOhP,GAAGuC,KAAKkM,SAASQ,aAAaD,OAAOhP,EAAEuC,KAAK,CAAC,OAAIiF,GAAM,OAAOjF,KAAKoM,OAAOnH,GAAG,CAAC0H,mBAAAA,GAAsB,OAAO3M,KAAKoM,OAAO7F,UAAU,CAACqG,gCAAAA,GAAmC,MAAMnP,EAAEuC,KAAKkM,SAASW,WAAW,OAAO7M,KAAKoM,OAAOU,QAAQrP,GAAGmP,kCAAkC,CAAC/L,IAAAA,CAAKpD,EAAEF,IAAGI,EAAAA,EAAAA,IAAEF,GAAGuC,KAAK+M,YAAYtP,EAAE4C,QAAQ9C,GAAGyC,KAAKgN,aAAavP,EAAE4C,QAAQ9C,EAAE,CAACwP,WAAAA,CAAYtP,EAAEE,GAAG,MAAMK,EAAEgC,KAAKkM,SAASW,WAAW1O,EAAE6B,KAAKoM,OAAOU,QAAQ9O,GAAGiP,cAAcxP,EAAEE,GAAGD,EAAEsC,KAAKqM,MAAM7F,YAAYC,kBAAkB,EAAEhJ,EAAE0E,QAAQhE,EAAER,EAAEiE,WAAWnE,EAAE2E,aAAa7E,EAAAA,GAAE2P,OAAOlN,KAAKqB,MAAM,EAAEtD,EAAAA,GAAEwE,aAAa7E,GAAGD,EAAE0E,QAAQ,KAAK,CAAC6K,YAAAA,CAAavP,EAAEE,GAAG,MAAMK,EAAEgC,KAAKkM,SAASW,WAAW1O,EAAE6B,KAAKoM,OAAOU,QAAQ9O,GAAGmP,eAAe1P,EAAEE,GAAGD,EAAEsC,KAAKqM,MAAM7F,YAAYC,kBAAkBhJ,EAAE0E,QAAQhE,EAAER,EAAEiE,WAAWnE,EAAE2E,aAAa7E,EAAAA,GAAE8E,UAAUrC,KAAKqB,MAAMtD,EAAAA,GAAEwE,aAAa7E,GAAGD,EAAE0E,QAAQ,KAAK,EAAE,MAAMX,EAAE3B,WAAAA,GAAcG,KAAKoN,QAAQ,EAAEpN,KAAKqN,kBAAkB,EAAErN,KAAKsN,cAAc,IAAIC,GAAG,CAAC,0BAAOC,CAAoB/P,EAAEE,EAAEJ,EAAEQ,GAAG,MAAMI,EAAE,IAAIqD,EAAE,IAAI,MAAM9D,KAAKD,EAAEgQ,SAAS,IAAI,MAAMhQ,KAAKC,EAAEgQ,QAAQ,CAAC,MAAMhQ,EAAEH,EAAEoQ,YAAYlQ,EAAEoP,YAAYrL,EAAExD,EAAEN,EAAEmP,WAAWpP,EAAE6O,YAAYnO,EAAEyP,UAAUlQ,EAAE8D,EAAE/D,EAAEoQ,WAAWpQ,EAAEqQ,WAAWrQ,EAAEsQ,YAAYtQ,EAAEuQ,YAAYrQ,EAAEI,EAAE,CAAC,OAAOI,CAAC,CAAC,UAAI8P,GAAS,OAAOjO,KAAKoN,OAAO,CAAC,oBAAIc,GAAmB,OAAOlO,KAAKqN,iBAAiB,CAAC,sBAAIc,GAAqB,OAAOnO,KAAKsN,cAAchL,IAAI,CAACmK,MAAAA,CAAOhP,EAAEE,GAAG,MAAMyQ,UAAU7Q,GAAGE,EAAE,IAAI,MAAMM,KAAKiC,KAAKqO,QAAQ,CAAC,MAAMrQ,EAAED,EAAEmO,SAASQ,aAAa1O,EAAEoQ,UAAU7Q,IAAI,MAAMI,GAAGK,EAAEsD,OAAO3D,IAAII,EAAE0O,OAAOhP,EAAE,CAAC,CAACmQ,SAAAA,CAAUjQ,EAAEJ,EAAEQ,EAAEC,EAAEG,EAAEqD,EAAE8B,EAAEpF,GAAG,IAAIN,EAAEG,EAAED,EAAEE,EAAE,GAAGF,IAAIF,EAAEO,EAAEL,EAAE0D,IAAI1D,EAAE,OAAO,GAAG,MAAMkC,KAAKsO,MAAM,CAAC,MAAMvQ,EAAE,IAAIL,EAAEC,EAAEJ,EAAE+F,EAAE1F,EAAEE,GAAG,OAAOkC,KAAKsO,MAAM,IAAI7Q,EAAAA,EAAEM,GAAGiC,KAAKuO,MAAMvO,KAAKsO,MAAMtO,KAAKoN,eAAepN,KAAKqN,mBAAmB,CAAC,GAAG,IAAInP,EAAE,OAAO8B,KAAKwO,QAAQ7Q,EAAEJ,EAAE+F,EAAE1F,EAAEE,EAAEkC,KAAKuO,MAAM,MAAM,IAAI1Q,EAAE,KAAKO,EAAE4B,KAAKsO,MAAM,MAAMjL,EAAE1F,EAAEkP,WAAW7L,EAAErD,EAAE+O,aAAa+B,eAAe,GAAG,IAAIvQ,IAAI,IAAI8C,GAAG,IAAIA,GAAG,OAAOhB,KAAKwO,QAAQ7Q,EAAEJ,EAAE+F,EAAE1F,EAAEE,EAAEkC,KAAKuO,MAAM,MAAM,KAAKnQ,GAAG,CAAC,MAAMX,EAAEW,EAAEsQ,KAAKxC,SAASnO,EAAEN,EAAEoP,WAAW7O,EAAEP,EAAEiP,aAAa+B,eAAetQ,EAAEN,GAAG6Q,KAAKxC,SAASW,WAAW,GAAG7L,EAAEhD,GAAGqF,IAAIlF,GAAGkF,IAAItF,EAAE,OAAOiC,KAAKwO,QAAQ7Q,EAAEJ,EAAE+F,EAAE1F,EAAEE,EAAED,EAAEO,GAAGP,EAAEO,EAAEA,EAAEA,EAAEuQ,IAAI,CAAC3O,KAAKwO,QAAQ7Q,EAAEJ,EAAE+F,EAAE1F,EAAEE,EAAED,EAAE,KAAK,CAAC,MAACwQ,GAAQ,GAAG,MAAMrO,KAAKsO,MAAM,IAAI,MAAM7Q,KAAKuC,KAAKsO,MAAMb,eAAehQ,CAAC,CAAC+Q,OAAAA,CAAQ7Q,EAAEJ,EAAEQ,EAAEC,EAAEG,EAAEqD,EAAE8B,GAAG,GAAG,MAAM9B,GAAG,MAAM8B,EAAE,CAAC,MAAM9B,EAAE,IAAI9D,EAAEC,EAAEJ,EAAEQ,EAAEC,EAAEG,GAAG,OAAO6B,KAAKsO,MAAM,IAAI7Q,EAAAA,EAAE+D,GAAGxB,KAAKuO,MAAMvO,KAAKsO,MAAMtO,KAAKoN,eAAepN,KAAKqN,mBAAmB,CAAC,OAAO9P,IAAIyC,KAAKuO,MAAMG,KAAKvC,aAAanM,KAAKqN,oBAAoBrN,KAAKsN,cAAcsB,IAAIrR,GAAG,MAAMiE,GAAG,MAAM8B,EAAEtD,KAAK6O,cAAclR,EAAEJ,EAAEQ,EAAEC,EAAEG,EAAEmF,GAAG,MAAM9B,GAAG,MAAM8B,EAAEtD,KAAK8O,aAAanR,EAAEJ,EAAEQ,EAAEC,EAAEG,EAAEqD,GAAG,MAAMA,GAAG,MAAM8B,EAAEtD,KAAK+O,gBAAgBpR,EAAEJ,EAAEQ,EAAEC,EAAEG,EAAEqD,EAAE8B,QAAG,CAAM,CAACuL,aAAAA,CAAclR,EAAEJ,EAAEQ,EAAEC,EAAEG,EAAEqD,GAAG,MAAM8B,EAAEtF,EAAEG,EAAE,GAAGZ,IAAIiE,EAAEkN,KAAKvC,aAAapO,IAAIyD,EAAEkN,KAAKtC,QAAQ9I,IAAI9B,EAAEkN,KAAKrC,MAAM7K,EAAEkN,KAAKrC,MAAMrO,EAAEwD,EAAEkN,KAAKrN,OAAOlD,MAAM,CAAC,MAAMmF,EAAE,IAAI5F,EAAEC,EAAEJ,EAAEQ,EAAEC,EAAEG,GAAG6B,KAAKsO,MAAM,IAAI7Q,EAAAA,EAAE6F,GAAGtD,KAAKsO,MAAMK,KAAKnN,EAAExB,KAAKoN,SAAS,CAAC,CAAC0B,YAAAA,CAAanR,EAAEJ,EAAEQ,EAAEC,EAAEG,EAAEqD,GAAG,GAAGA,EAAEkN,KAAKvC,cAAc5O,GAAGiE,EAAEkN,KAAKnC,WAAWvO,EAAEwD,EAAEkN,KAAKrN,OAAOlD,MAAM,CAAC,MAAMmF,EAAE,IAAI5F,EAAEC,EAAEJ,EAAEQ,EAAEC,EAAEG,GAAG6B,KAAKuO,MAAM,IAAI9Q,EAAAA,EAAE6F,GAAG9B,EAAEmN,KAAK3O,KAAKuO,MAAMvO,KAAKoN,SAAS,CAAC,CAAC2B,eAAAA,CAAgBpR,EAAEJ,EAAEQ,EAAEC,EAAEG,EAAEqD,EAAE8B,GAAG,MAAMpF,EAAEF,EAAEG,EAAE,GAAGqD,EAAEkN,KAAKvC,cAAc5O,GAAGiE,EAAEkN,KAAKtC,SAASrO,GAAGyD,EAAEkN,KAAKnC,WAAWvO,EAAEwD,EAAEkN,KAAKrN,OAAOlD,EAAEqD,EAAEkN,KAAKvC,cAAc7I,EAAEoL,KAAKvC,aAAa3K,EAAEkN,KAAKtC,SAAS9I,EAAEoL,KAAKtC,QAAQ5K,EAAEkN,KAAKnC,WAAWjJ,EAAEoL,KAAKrC,QAAQ7K,EAAEkN,KAAKrN,OAAOiC,EAAEoL,KAAKrN,MAAMG,EAAEmN,KAAKrL,EAAEqL,KAAK3O,KAAKoN,gBAAgB,GAAG7P,IAAI+F,EAAEoL,KAAKvC,aAAapO,IAAIuF,EAAEoL,KAAKtC,QAAQlO,IAAIoF,EAAEoL,KAAKrC,MAAM/I,EAAEoL,KAAKrC,MAAMrO,EAAEsF,EAAEoL,KAAKrN,OAAOlD,MAAM,CAAC,MAAMD,EAAE,IAAIR,EAAEC,EAAEJ,EAAEQ,EAAEC,EAAEG,GAAGP,EAAE,IAAIH,EAAAA,EAAES,GAAGsD,EAAEmN,KAAK/Q,EAAEA,EAAE+Q,KAAKrL,EAAEtD,KAAKoN,SAAS,CAAC,ECAn0H,MAAM3P,EAAEoC,WAAAA,CAAYpC,GAAGuC,KAAKgP,WAAWvR,EAAEuC,KAAKiP,OAAO,CAAC5N,MAAM,EAAE6N,WAAW,IAAIlP,KAAKmP,MAAM,CAAC9N,MAAM,EAAE6N,WAAW,GAAG,CAACE,UAAAA,CAAW3R,GAAG,IAAIE,EAAE,EAAEqC,KAAKgP,aAAarR,EAAEqC,KAAKiP,OAAO5N,MAAM5D,EAAEsQ,YAAY/N,KAAKiP,OAAOC,WAAWG,KAAK,CAACC,QAAQ7R,EAAEsQ,YAAYwB,QAAQvP,KAAKiP,OAAO5N,MAAMA,MAAM5D,EAAEuQ,YAAYwB,OAAO,IAAI/R,EAAEsQ,YAAY/N,KAAKiP,OAAO5N,MAAMrB,KAAKiP,OAAO5N,OAAO5D,EAAEuQ,aAAa,IAAIzQ,GAAE,EAAG,GAAGyC,KAAKgP,YAAYhP,KAAKmP,MAAMD,WAAWjB,QAAQ,EAAE,CAAC,MAAMtQ,EAAEqC,KAAKmP,MAAMD,WAAWlP,KAAKmP,MAAMD,WAAWjB,OAAO,GAAGtQ,EAAE2R,QAAQ3R,EAAE0D,QAAQ5D,EAAEoQ,aAAalQ,EAAE0D,OAAO5D,EAAEqQ,WAAWvQ,GAAE,EAAG,CAACA,GAAGyC,KAAKmP,MAAMD,WAAWG,KAAK,CAACC,QAAQ7R,EAAEoQ,WAAW0B,QAAQvP,KAAKmP,MAAM9N,MAAMA,MAAM5D,EAAEqQ,WAAW0B,OAAO7R,IAAIF,EAAEoQ,WAAW7N,KAAKmP,MAAM9N,MAAMrB,KAAKmP,MAAM9N,OAAO5D,EAAEqQ,UAAU,E,qCCA1sB,MAAMrQ,EAAEoC,WAAAA,CAAYpC,GAAGuC,KAAKyP,KAAK,EAAEzP,KAAK0P,QAAQjS,EAAEuC,KAAK2P,SAAS,IAAIC,WAAW5P,KAAK0P,SAAS1P,KAAK6P,SAAS,IAAIrS,aAAawC,KAAK0P,QAAQ,CAACI,SAAAA,GAAY,OAAO9P,KAAK2P,SAAS3P,KAAKyP,OAAO,CAACM,OAAAA,GAAU,OAAO/P,KAAK6P,SAAS7P,KAAKyP,OAAO,E,eCA6C,SAAStR,EAAER,GAAG,OAAIA,EAAoB,CAACqS,UAASpS,EAAAA,EAAAA,GAAE,IAAIF,EAAEC,EAAEqS,UAAUvS,EAAAA,GAAGwS,WAAWtS,EAAE+Q,KAAKwB,IAAIlS,IAAlE,IAAqE,CAAC,SAASA,EAAEP,GAAG,MAAMU,EAAEV,EAAE0S,OAAOC,OAAOpS,EAAE,IAAIqS,SAAS5S,EAAE6S,UAAU/S,EAAE,GAAGO,EAAEL,EAAE6S,SAASC,WAAWpS,EAAE,IAAID,EAAE,EAAE,IAAI,IAAIP,EAAE,EAAEA,EAAEG,EAAEH,IAAI,CAAC,MAAMA,EAAE,CAAC,EAAE,IAAI,MAAMD,KAAKD,EAAE0S,OAAOK,WAAW,CAAC,IAAI/S,EAAE,GAAGC,EAAE+S,UAAU/S,EAAE0D,OAAOxD,GAAEG,EAAAA,EAAAA,GAAEC,EAAEN,EAAEQ,GAAG,GAAGR,EAAEgT,oBAAoB,GAAGjT,GAAG,gBAAgBC,EAAEgT,uBAAuB,iBAAiB9S,EAAEA,GAAGF,EAAEgT,yBAAyB,IAAI,IAAI/S,EAAE,EAAEA,EAAEC,EAAEqQ,OAAOtQ,IAAIC,EAAED,IAAID,EAAEgT,oBAAoB/S,EAAEF,GAAGG,CAAC,CAACM,GAAGC,EAAEZ,EAAE8R,KAAK1R,EAAE,CAAC,MAAMM,EAAER,EAAEkT,SAAQ/S,EAAAA,EAAAA,GAAE,IAAIF,EAAED,EAAEkT,SAAShT,EAAAA,IAAI,GAAG,GAAG,MAAM,CAAC2S,SAAS/S,EAAE4S,OAAO1S,EAAE0S,OAAOQ,QAAQ1S,EAAE,CCA8F,IAAIyF,EAAE,EAAE,MAAML,UAAUtF,EAAAA,EAAE8B,WAAAA,CAAYlC,EAAEI,EAAEL,EAAEE,EAAE4D,EAAEjE,EAAE+F,GAAE,GAAIxD,MAAMnC,EAAEI,EAAEL,EAAEE,GAAGoC,KAAK4Q,OAAOpP,EAAExB,KAAK6Q,iBAAiBtT,EAAEyC,KAAK8Q,QAAQ,IAAIC,IAAI/Q,KAAKgR,UAAU,GAAGhR,KAAKiR,aAAa,IAAIF,IAAI/Q,KAAKkR,cAAa,EAAGlR,KAAKmR,oBAAmB,EAAGnR,KAAKoR,QAAQ1N,IAAI1D,KAAKqR,SAAS,GAAGrR,KAAKsR,mBAAmB,IAAI/D,IAAIvN,KAAKuR,WAAW,IAAIhE,IAAIvN,KAAKwR,qBAAqB,IAAIjE,IAAIvN,KAAKyR,gBAAgB,EAAEzR,KAAK0R,iBAAgB,EAAG1R,KAAK2R,YAAW,EAAG3R,KAAK4R,WAAU,EAAG5R,KAAK6R,cAAa,EAAG7R,KAAK8R,aAAa,KAAK9R,KAAK+R,SAAQ,EAAG/R,KAAK4E,WAAW8G,YAAWjO,EAAAA,EAAAA,MAAIuC,KAAK4E,WAAWiH,mBAAkB1N,EAAAA,EAAAA,MAAI6B,KAAKgS,sBAAsB1O,CAAC,CAAC8H,OAAAA,GAAUtL,MAAMsL,UAAUpL,KAAKiS,OAAO,CAACA,KAAAA,GAAQ,IAAI,MAAMtU,KAAKqC,KAAK8Q,QAAQrD,SAAS9P,EAAEyN,UAAUpL,KAAK8Q,QAAQmB,QAAQjS,KAAKgR,UAAU,GAAGhR,KAAK4Q,QAAQsB,yBAAyBlS,KAAKA,KAAKqR,UAAUrR,KAAKqR,SAAS,GAAGrR,KAAKmS,aAAa,KAAKnS,KAAKkR,cAAa,EAAGlR,KAAKuR,WAAWU,QAAQjS,KAAKmR,oBAAmB,CAAE,CAACiB,YAAAA,CAAazU,GAAGmC,MAAMsS,aAAazU,GAAGqC,KAAKqS,iBAAiB1U,EAAE2U,iBAAiBC,SAASvS,KAAK,CAACwS,QAAAA,CAAS7U,GAAG,MAAMF,EAAEuC,KAAKkR,eAAelR,KAAKyS,eAAe,QAAQzS,KAAK0S,SAASjV,IAAIuC,KAAK0R,mBAAmB/T,GAAGqC,KAAKyR,qBAAoBtL,EAAAA,EAAAA,GAAI,yBAAyBwM,QAAQC,MAAM,QAAQ5S,KAAKiF,IAAIvC,gCAAgC/E,MAAMqC,KAAK6S,QAAQ7S,KAAKe,gBAAgBf,KAAK8S,aAAY,GAAG,EAAG,CAAC,WAAIC,GAAU,MAAMpV,EAAE,IAAIoT,IAAI,IAAI,MAAMtT,KAAKuC,KAAKqR,SAAS1T,EAAEkI,IAAIpI,EAAEuV,eAAerV,EAAEsV,IAAIxV,EAAEuV,aAAa,IAAIrV,EAAEkI,IAAIpI,EAAEuV,cAAc3D,KAAK5R,GAAG,OAAOE,CAAC,CAAC,eAAImV,GAAc,OAAO9S,KAAK6R,YAAY,CAAC,eAAIiB,CAAYnV,GAAGqC,KAAK6R,aAAalU,EAAEqC,KAAKe,eAAe,CAAC,MAAI2B,GAAK,OAAO1C,KAAKiF,IAAIvC,EAAE,CAAC,WAAIwQ,GAAU,QAAQlT,KAAK8Q,QAAQxO,IAAI,CAAC,iBAAI6Q,GAAgB,QAAQnT,KAAK8R,YAAY,CAAC,eAAIsB,GAAc,OAAOpT,KAAKkR,YAAY,CAAC,kBAAIuB,GAAiB,OAAOzS,KAAKgS,uBAAuBhS,KAAKmR,kBAAkB,CAAC,eAAIkC,GAAc,OAAOrT,KAAKqR,SAASpD,OAAO,CAAC,CAACqF,MAAAA,GAAStT,KAAKmR,oBAAmB,CAAE,CAACoC,cAAAA,CAAe5V,EAAEF,GAAG,GAAGuC,KAAKyS,gBAAgBzS,KAAKkR,aAAa,CAAClR,KAAKgR,UAAUwC,MAAK,CAAC7V,EAAEF,KAAK,MAAMU,EAAEV,EAAEgW,QAAQ1V,EAAEJ,EAAE8V,QAAQ,OAAO1V,IAAII,EAAER,EAAE+E,GAAGjF,EAAEiF,GAAG3E,EAAEI,CAAC,IAAG,IAAIV,GAAGuC,KAAK0T,WAAU,GAAI1T,KAAKmS,aAAajU,EAAEsP,oBAAoBxN,KAAKgR,UAAUhR,KAAKrC,EAAEF,GAAG,IAAI,MAAME,KAAKqC,KAAK8Q,QAAQrD,SAAS9P,EAAE2V,SAAStT,KAAK2T,UAAUC,QAAQ3F,OAAOjO,KAAKmS,aAAalE,OAAOjO,KAAK2T,UAAUC,QAAQ1F,iBAAiBlO,KAAKmS,aAAajE,iBAAiBlO,KAAK2T,UAAUC,QAAQzF,mBAAmBnO,KAAKmS,aAAahE,mBAAmBnO,KAAKe,gBAAgBf,KAAKkR,cAAa,EAAGlR,KAAKmR,oBAAmB,CAAE,CAAC,OAAOnR,KAAKmS,YAAY,CAACrF,OAAAA,CAAQnP,GAAG,IAAIqC,KAAK8Q,QAAQ3K,IAAIxI,GAAG,MAAM,IAAIkW,MAAM,mDAAmDlW,KAAK,OAAOqC,KAAK8Q,QAAQjL,IAAIlI,EAAE,CAACmW,WAAAA,CAAYnW,GAAG,MAAMF,EAAE,IAAIsT,IAAI,IAAI,MAAMrO,GAAGvE,EAAEsV,QAAQ1V,KAAKiC,KAAKgR,UAAU,GAAGrT,EAAEwI,IAAIhI,IAAIV,EAAEwV,IAAI9U,EAAEJ,GAAGN,EAAE6E,OAAO3E,EAAE2E,KAAK,MAAM,OAAO7E,CAAC,CAACsW,SAAAA,CAAUpW,GAAG,GAAGA,EAAEqW,YAAY,IAAI,MAAMvW,KAAKE,EAAEqW,YAAYhU,KAAK8R,eAAe9R,KAAK8R,aAAa,CAAC,GAAG9R,KAAK8R,aAAarU,GAAGE,EAAEqW,YAAYvW,GAAG,OAAOE,EAAE2D,MAAM,IAAI,SAAStB,KAAKiU,iBAAiBtW,GAAG,MAAM,IAAI,SAASqC,KAAKkU,iBAAiBvW,GAAG,GAAGqC,KAAKmU,wBAAwBnU,KAAKe,gBAAgBpD,EAAEyW,IAAI,CAAC,IAAGjO,EAAAA,EAAAA,GAAI,yBAAyBwM,QAAQC,MAAM,QAAQ5S,KAAKiF,IAAIvC,8BAA8B/E,EAAE0W,oBAAoB1W,EAAE0W,eAAe,MAAM,IAAIR,MAAM,+CAA+C7T,KAAKyR,gBAAgB9T,EAAE0W,eAAerU,KAAK0R,iBAAgB,CAAE,CAAC1R,KAAKsU,6BAA6B,CAACL,gBAAAA,CAAiBtW,GAAG,IAAGwI,EAAAA,EAAAA,GAAI,yBAAyBwM,QAAQC,MAAM,QAAQ5S,KAAKiF,IAAIvC,yBAAyB,CAAC6R,OAAO1W,EAAEF,GAAG4W,UAAU5W,EAAEsU,OAAOjS,KAAKiS,SAAStU,EAAE4W,OAAO,OAAO,MAAM9W,GAAEyD,EAAAA,EAAAA,GAAE,IAAIF,EAAErD,EAAE4W,OAAOvE,UAAUhS,EAAAA,GAAGgC,KAAKwO,QAAQ/Q,EAAEE,EAAE4W,OAAO7F,MAAK,EAAG,CAACwF,gBAAAA,CAAiBvW,IAAGwI,EAAAA,EAAAA,GAAI,yBAAyBwM,QAAQC,MAAM,QAAQ5S,KAAKiF,IAAIvC,yBAAyB,CAAC8R,cAAc7W,EAAE6W,cAAcC,OAAO5W,EAAEF,EAAE8W,QAAQC,OAAO/W,EAAE+W,SAAS,MAAMjX,GAAEyD,EAAAA,EAAAA,GAAE,IAAIF,EAAErD,EAAE8W,OAAOzE,UAAUhS,EAAAA,GAAGG,EAAEV,EAAEyS,KAAIvS,GAAGA,EAAE+E,KAAI3E,EAAEJ,EAAE6W,gBAAe,EAAG9W,EAAE,IAAIC,EAAE+W,UAAUvW,GAAGJ,EAAEiC,KAAK2U,uBAAuBjX,GAAGsC,KAAK4U,aAAalX,GAAGsC,KAAKwO,QAAQ/Q,EAAEE,EAAE8W,OAAO/F,KAAK3Q,EAAE,CAAC2V,SAAAA,CAAU/V,GAAE,GAAI,GAAGqC,KAAK6U,UAAU,OAAO,MAAMpX,EAAE,IAAIsT,IAAI,IAAI,MAAM5S,KAAK6B,KAAKgR,UAAU,IAAI,MAAMjT,KAAKI,EAAEuP,QAAQ,CAAC,MAAMvP,EAAE6B,KAAK8Q,QAAQjL,IAAI9H,EAAE8O,YAAY,IAAInP,EAAED,EAAEoI,IAAI1H,GAAGT,IAAIA,EAAE,IAAII,EAAEH,GAAGF,EAAEwV,IAAI9U,EAAET,IAAIA,EAAE0R,WAAWrR,EAAE,CAAC,IAAI,MAAMI,EAAEJ,KAAKN,EAAEU,EAAEuV,UAAU3V,GAAGiC,KAAKkR,cAAa,EAAGlR,KAAKmU,yBAAwBhO,EAAAA,EAAAA,GAAI,yBAAppIxI,EAAAA,EAAEmX,UAAU,0CAAqqIC,KAAK,QAAQ/U,KAAKiF,IAAIvC,qBAAqB,CAACsS,4BAAAA,CAA6BrX,EAAEF,EAAEU,EAAEJ,GAAG,MAAML,EAAES,EAAEmF,EAAAA,GAAE1F,EAAEG,EAAEuF,EAAAA,GAAE,IAAI,MAAM9B,KAAK7D,EAAEqT,UAAU,CAAC,IAAI7S,EAAE,KAAK,IAAI,MAAMJ,KAAKyD,EAAEkM,QAAQ,GAAG3P,EAAEkX,SAASxX,EAAE,CAAC,MAAMA,EAAEE,EAAEmP,QAAQ/O,EAAE8O,YAAYtP,EAAEyC,KAAKkV,YAAYnX,EAAE8O,WAAWpP,EAAE0S,OAAO1S,EAAE0X,eAAeC,eAAe3X,EAAEM,EAAEL,EAAEE,GAAGO,IAAIA,EAAE,IAAIH,EAAAA,EAAEwD,EAAEkB,GAAGlB,EAAEiS,SAASzT,KAAKwR,qBAAqB5C,IAAIpN,EAAEkB,IAAI1C,KAAKiR,aAAagC,IAAI9U,EAAEuE,GAAGvE,GAAG6B,KAAKgR,UAAU3B,KAAKlR,IAAIA,EAAEuP,QAAQ2B,KAAK9R,EAAE,CAAC,CAACyC,KAAKkR,cAAa,CAAE,CAAC,qBAAImE,GAAoB,OAAOrV,KAAKsR,kBAAkB,CAACgE,qBAAAA,CAAsB3X,GAAG,IAAI,MAAMF,KAAKE,EAAEqC,KAAKsR,mBAAmB1C,IAAInR,GAAGuC,KAAKsU,6BAA6B,CAACiB,qBAAAA,GAAwBvV,KAAKsR,mBAAmBW,QAAQ,IAAI,MAAMtU,KAAKqC,KAAKqR,SAAU1T,EAAE6X,aAAaC,MAAM9X,EAAE+X,sBAAsB1V,KAAKsR,mBAAmB1C,IAAIjR,EAAEgY,MAAM3V,KAAKsU,6BAA6B,CAACA,2BAAAA,GAA8B,MAAM3W,EAAEqC,KAAK8Q,QAAQjL,IAAI7F,KAAK6Q,kBAAkB,GAAGlT,GAAGqC,KAAKqT,YAAY,CAAC,IAAI,MAAM5V,KAAKuC,KAAKqR,SAAS,CAAC,MAAMlT,EAAE6B,KAAKiR,aAAapL,IAAIpI,EAAEiF,IAAI,IAAIvE,EAAE,SAAS,MAAMJ,EAAEiC,KAAKsR,mBAAmBnL,IAAI1I,EAAEkY,MAAMhY,EAAEiY,+BAA+BzX,EAAEuP,QAAQjQ,EAAEoY,YAAYpY,EAAEqY,YAAY/X,EAAE,EAAE,IAAI,CAACiC,KAAKkR,cAAa,CAAE,CAAC,CAACgE,WAAAA,CAAYvX,EAAEF,EAAEU,GAAG,OAAO6B,KAAK8Q,QAAQ3K,IAAIxI,IAAIqC,KAAK8Q,QAAQmC,IAAItV,EAAE,IAAIS,EAAAA,EAAE4B,KAAK+V,OAAOC,WAAWvY,EAAEU,IAAI6B,KAAK8Q,QAAQjL,IAAIlI,EAAE,CAAC6Q,OAAAA,CAAQ7Q,EAAEF,EAAEU,GAAG,IAAIR,EAAEsQ,OAAO,OAAOjO,KAAKiW,iCAAiCtY,GAAG,MAAMI,EAAEiC,KAAKkW,kBAAkBzY,GAAG,IAAI,MAAMC,KAAKC,EAAE,CAAC,IAAI,MAAMA,KAAKD,EAAEgQ,QAAQ/P,EAAEwY,kBAAkBpY,EAAE8H,IAAIlI,EAAEkP,aAAa1O,EAAE6B,KAAKoW,yBAAyB1Y,GAAGsC,KAAKqW,cAAc3Y,EAAE,CAACsC,KAAKkR,cAAa,CAAE,CAACoF,cAAAA,CAAe3Y,GAAG,IAAI,MAAMF,KAAKE,EAAEF,EAAE8Y,KAAKvW,KAAKA,KAAKqR,SAAShC,QAAQ1R,GAAGqC,KAAK4Q,QAAQ4F,yBAAyBxW,KAAKrC,EAAE,CAACuY,iBAAAA,CAAkBvY,GAAG,MAAMF,EAAE,IAAIsT,IAAI,IAAI,MAAM5S,KAAKR,EAAE,CAAC,MAAMkP,WAAWlP,EAAEwS,OAAOpS,GAAGI,EAAET,EAAEK,EAAEyS,WAAW7K,MAAKhI,GAAG,eAAeA,EAAEyD,OAAMxD,EAAEoC,KAAKkV,YAAYvX,EAAEI,EAAEL,GAAG6W,OAAOpW,GAAG,GAAGA,EAAEwS,QAAQ,CAAC,MAAMhT,GAAEuD,EAAAA,EAAAA,GAAE,IAAIF,EAAE7C,EAAEwS,SAAS1S,EAAAA,IAAI,GAAG+B,KAAKsW,eAAe3Y,EAAE,CAACF,EAAEwV,IAAItV,EAAEC,EAAE,CAAC,OAAOH,CAAC,CAAC4Y,aAAAA,CAAc1Y,IAAGwI,EAAAA,EAAAA,GAAI,yBAAyBnG,KAAKuR,WAAWpL,IAAIxI,EAAE+E,KAAKiQ,QAAQ8D,MAAM,QAAQzW,KAAKiF,IAAIvC,0CAA0C/E,EAAE+E,MAAM1C,KAAKuR,WAAW3C,IAAIjR,EAAE+E,IAAI1C,KAAKiR,aAAagC,IAAItV,EAAE+E,GAAG/E,GAAGqC,KAAKgR,UAAU3B,KAAK1R,EAAE,CAACyY,wBAAAA,CAAyBzY,GAAGqC,KAAKuR,WAAWpL,IAAIxI,EAAE+E,IAAI1C,KAAK0W,uBAAuB/Y,EAAE+P,UAAU1N,KAAKwR,qBAAqB5C,IAAIjR,EAAE+E,IAAI1C,KAAKiR,aAAagC,IAAItV,EAAE+E,GAAG/E,GAAGqC,KAAKgR,UAAU3B,KAAK1R,GAAG,CAACsY,gCAAAA,CAAiCtY,GAAG,IAAIqC,KAAKwR,qBAAqBlP,KAAK,OAAO,MAAM7E,EAAE,GAAG,IAAI,MAAMU,KAAKR,EAAEqC,KAAKwR,qBAAqBrL,IAAIhI,EAAEuE,KAAKjF,EAAE4R,KAAKlR,EAAEuE,IAAI1C,KAAK4U,aAAanX,EAAE,CAACkX,sBAAAA,CAAuBhX,GAAGqC,KAAK4U,aAAajX,EAAEgZ,QAAOhZ,GAAGqC,KAAKwR,qBAAqBrL,IAAIxI,KAAI,CAACiX,YAAAA,CAAajX,GAAG,GAAG,IAAIA,EAAEsQ,OAAO,OAAO,MAAMxQ,EAAE,IAAI8P,IAAI5P,GAAGQ,EAAE,GAAG,IAAI,MAAMT,KAAKsC,KAAKgR,UAAUvT,EAAE0I,IAAIzI,EAAEgF,KAAK1C,KAAK4W,QAAQlZ,GAAGsC,KAAKiR,aAAa4F,OAAOnZ,EAAEgF,KAAKvE,EAAEkR,KAAK3R,GAAGsC,KAAKgR,UAAU7S,EAAE,MAAMJ,EAAEiC,KAAKqR,SAASsF,QAAOhZ,GAAGF,EAAE0I,IAAIxI,EAAEmZ,aAAY9W,KAAKqR,SAASrR,KAAKqR,SAASsF,QAAOhZ,IAAIF,EAAE0I,IAAIxI,EAAEmZ,aAAY9W,KAAK4Q,QAAQsB,yBAAyBlS,KAAKjC,GAAGiC,KAAKkR,cAAa,CAAE,CAAC0F,OAAAA,CAAQjZ,GAAGqC,KAAK0W,uBAAuB/Y,EAAE+P,SAAS1N,KAAKuR,WAAWsF,OAAOlZ,EAAE+E,IAAI1C,KAAKwR,qBAAqBqF,OAAOlZ,EAAE+E,GAAG,CAACgU,sBAAAA,CAAuB/Y,GAAG,IAAI,MAAMF,KAAKE,EAAE,CAAC,MAAMkP,WAAWlP,EAAEkQ,WAAW1P,EAAE2P,WAAW/P,EAAEgQ,YAAYrQ,EAAEsQ,YAAYpQ,GAAGH,EAAEuC,KAAK8Q,QAAQjL,IAAIlI,IAAI+W,OAAOvW,EAAEJ,EAAEL,EAAEE,EAAE,CAAC,CAACuW,qBAAAA,GAAwBnU,KAAK2T,UAAUoD,OAAOC,UAAU,EAAEhX,KAAK2T,UAAUoD,OAAOE,cAAc,EAAE,IAAI,MAAMtZ,KAAKqC,KAAK8Q,QAAQrD,SAASzN,KAAK2T,UAAUoD,OAAOC,WAAWrZ,EAAEuZ,YAAYF,UAAUhX,KAAK2T,UAAUoD,OAAOE,eAAetZ,EAAEuZ,YAAYD,aAAa,CAAC,mBAAI5E,GAAkB,GAAGrS,KAAK6U,UAAU,OAAM,EAAG,MAAMmC,UAAUrZ,EAAEsZ,cAAcxZ,GAAGuC,KAAK2T,UAAUoD,OAAO5Y,EAAER,EAAEF,GAAGyQ,iBAAiBnQ,EAAEkQ,OAAO3K,GAAGtD,KAAK2T,UAAUC,QAAQ,OAAOnW,EAAEC,EAAAA,IAAGS,EAAEP,EAAAA,IAAG0F,EAAE9B,EAAAA,IAAGzD,EAAEuF,EAAE/F,EAAAA,EAAC,CAAC,aAAI4Z,GAAY,OAAOnX,KAAK8R,aAAa9R,KAAKgR,UAAUd,KAAI,EAAExN,GAAG/E,MAAE,CAAKyZ,SAASpX,KAAK8R,aAAanU,GAAGmZ,UAAUnZ,MAAK,EAAE,E,6CCAhxRmH,KAAKgH,GAAjB,MAAoBrO,EAAE,IAAI,IAAIC,EAAE,EAAEoH,KAAKuS,IAAI,SAASxZ,EAAEN,EAAEE,GAAG,OAAOF,GAAGE,IAAI,EAAEF,EAAEA,EAAEE,CAAC,CAAiC,SAASK,EAAEP,GAAG,OAAOM,EAAEN,EAAEE,EAAE,IAAI,CAAC,SAASE,EAAEJ,GAAG,OAAOuH,KAAKwS,IAAI/Z,GAAGG,CAAC,C,gFCA9B,MAAMA,GAAEyI,EAAAA,EAAAA,GAAI,2BAA2B,MAAMhI,EAAE,aAAOY,CAAOtB,EAAEE,GAAG,MAAMD,EAAEC,EAAE4Z,mBAAmB9Z,GAAG,OAAO,IAAIU,EAAET,EAAEC,EAAE,CAACkC,WAAAA,CAAYpC,EAAEE,GAAGqC,KAAKwX,OAAO/Z,EAAEuC,KAAKyX,MAAM9Z,CAAC,CAAC,SAAI+Z,GAAQ,OAAO1X,KAAKwX,MAAM,CAAC,UAAIvJ,GAAS,OAAOjO,KAAKwX,OAAOvJ,MAAM,CAAC0J,aAAAA,CAAcla,EAAEE,GAAG,OAAO,IAAI6I,YAAYxG,KAAKwX,OAAOI,OAAOna,EAAEuC,KAAKwX,OAAOK,WAAWla,EAAE,CAACma,MAAAA,CAAOra,GAAG,GAAGA,GAAGuC,KAAKwX,OAAOjH,WAAW,OAAO,MAAM5S,EAAEqC,KAAKyX,MAAMF,mBAAmB9Z,GAAGE,EAAEsV,IAAIjT,KAAKwX,QAAQxX,KAAKyX,MAAMM,mBAAmB/X,KAAKwX,QAAQxX,KAAKwX,OAAO7Z,CAAC,CAACyN,OAAAA,GAAUpL,KAAKyX,MAAMM,mBAAmB/X,KAAKwX,OAAO,EAAE,MAAMxZ,EAAE6B,WAAAA,GAAcG,KAAKgY,MAAM,IAAIC,YAAYja,EAAEka,aAAalY,KAAKmY,UAAU,IAAIxa,EAAAA,EAAE,CAAC0O,MAAM,EAAE+H,IAAIpU,KAAKgY,MAAMzH,YAAY,CAAC,sBAAW2H,GAAc,OAAO,IAAI,CAAC,UAAIN,GAAS,OAAO5X,KAAKgY,KAAK,CAACT,kBAAAA,CAAmB9Z,GAAG,MAAME,EAAEqC,KAAKmY,UAAUC,SAAS3a,GAAG,OAAO,MAAME,EAAE,KAAK,IAAI6I,YAAYxG,KAAKgY,MAAMra,EAAEF,EAAE+I,YAAYC,kBAAkB,CAACsR,kBAAAA,CAAmBta,GAAGuC,KAAKmY,UAAUE,KAAK5a,EAAEoa,WAAWpa,EAAE8S,WAAW,EAAE,MAAMxS,EAAE8B,WAAAA,GAAcG,KAAKsY,OAAO,GAAGtY,KAAKuY,eAAe,IAAIxH,IAAI/Q,KAAKwY,gBAAgB,CAAC,CAACpN,OAAAA,GAAUpL,KAAKsY,OAAO,GAAGtY,KAAKuY,eAAe,IAAI,CAAC,eAAIE,GAAc,OAAOzY,KAAKsY,OAAOrK,OAAOjQ,EAAEka,WAAW,CAACX,kBAAAA,CAAmB5Z,GAAG,GAAGqC,KAAKwY,iBAAiB7a,EAAED,GAAGiV,QAAQ2E,IAAI,cAAc3Z,OAAOqC,KAAKwY,qBAAqBxY,KAAKyY,gBAAgB9a,GAAGK,EAAEka,YAAY,OAAO,IAAI1R,YAAY7I,EAAE6I,YAAYC,mBAAmB,IAAI,MAAMhJ,KAAKuC,KAAKsY,OAAO,CAAC,MAAM5a,EAAED,EAAE8Z,mBAAmB5Z,GAAG,GAAG,MAAMD,EAAE,OAAOA,CAAC,CAAC,MAAMS,EAAE6B,KAAK0Y,WAAWnB,mBAAmB5Z,GAAG,OAAOF,EAAAA,EAAAA,IAAEU,EAAE,6BAA6BA,CAAC,CAAC4Z,kBAAAA,CAAmBta,GAAGuC,KAAKwY,iBAAiB/a,EAAE8S,WAAW7S,GAAGiV,QAAQ2E,IAAI,WAAW7Z,EAAE8S,gBAAgBvQ,KAAKwY,qBAAqBxY,KAAKyY,gBAAgB,MAAM9a,EAAEqC,KAAKuY,eAAe1S,IAAIpI,EAAEma,QAAQja,GAAGA,EAAEoa,mBAAmBta,EAAE,CAACib,QAAAA,GAAW,MAAMjb,EAAE,IAAIO,EAAE,OAAOgC,KAAKsY,OAAOjJ,KAAK5R,GAAGuC,KAAKuY,eAAetF,IAAIxV,EAAEma,OAAOna,GAAGA,CAAC,E,uECAzvD,MAAMC,UAAUS,EAAAA,EAAE0B,WAAAA,CAAYpC,EAAEE,EAAEQ,EAAET,EAAEE,EAAEL,EAAE+F,EAAE1F,EAAE4D,EAAEjE,GAAGuC,QAAQE,KAAK2Y,qBAAqB,KAAK3Y,KAAK2T,UAAU,CAACC,QAAQ,CAAC3F,OAAO,EAAEC,iBAAiB,EAAEC,mBAAmB,EAAExH,cAAc,GAAGoQ,OAAO,CAACC,UAAU,EAAEC,cAAc,IAAIjX,KAAK4Y,YAAW,EAAG5Y,KAAKiF,IAAI,IAAIlH,EAAAA,EAAEN,GAAGuC,KAAKsL,WAAW3N,EAAEqC,KAAKuD,EAAEpF,EAAE6B,KAAKP,EAAE/B,EAAEsC,KAAKmF,MAAMvH,EAAEoC,KAAKoK,OAAO7M,EAAEyC,KAAK2E,OAAOrB,EAAEtD,KAAKyL,OAAOjK,CAAC,CAAC4J,OAAAA,GAAUtL,MAAMsL,UAAUpL,KAAK2Y,uBAAuB3Y,KAAK2Y,qBAAqBzY,UAAUF,KAAK2Y,qBAAqB,MAAM3Y,KAAK4Y,YAAW,CAAE,CAAC,aAAIC,GAAY,IAAIpb,EAAEuC,KAAK,KAAKvC,EAAEqb,SAAS9Y,KAAK+V,QAAQ,CAAC,IAAItY,EAAEqb,OAAO,OAAO,EAAErb,EAAEA,EAAEqb,MAAM,CAAC,OAAO9Y,KAAK+V,OAAOgD,SAASC,QAAQvb,EAAE,CAAC4N,YAAAA,CAAalN,GAAG,MAAMJ,EAAEiC,KAAKsL,YAAYnN,EAAEmN,WAAWnN,EAAEqJ,YAAY9J,EAAEsC,KAAK4E,WAAW2G,UAAU3N,EAAEL,GAAGY,EAAEqN,mBAAmB,CAAC,EAAE,GAAG,CAACxL,KAAKuD,EAAEvD,KAAKP,IAAI6D,EAAEtD,KAAKmF,MAAMnF,KAAK2E,OAAO5G,EAAEyD,EAAExB,KAAKoK,OAAOpK,KAAKyL,OAAO1N,GAAEN,EAAAA,EAAAA,IAAEC,EAAE4F,EAAE,EAAE,EAAE,EAAE9B,EAAE,EAAE5D,EAAEL,EAAE,IAAGI,EAAAA,EAAAA,IAAEqC,KAAK4E,WAAWC,sBAAsB1G,EAAE6H,gBAAgBtI,EAAE,CAAC,aAAImX,GAAY,OAAO7U,KAAK4Y,UAAU,E,6NCA7a,MAAM1a,EAAEA,CAACP,EAAED,EAAED,EAAEG,KAAK,IAAIL,EAAE,EAAE,IAAI,IAAIY,EAAE,EAAEA,EAAEV,EAAEU,IAAI,CAAC,MAAMV,EAAEE,EAAE,GAAGD,EAAES,EAAE,IAAIP,EAAED,EAAE,GAAGD,EAAES,EAAE,GAAG,GAAGZ,IAAII,EAAE,GAAGD,EAAES,IAAIV,IAAIE,EAAE,GAAGD,EAAES,GAAG,GAAGP,EAAE,CAAC,OAAOA,EAAEL,EAAE,EAAEA,EAAE,CAAC,EAAEM,EAAEA,EAAEob,OAAOtb,EAAEub,QAAQxb,GAAGE,KAAK,MAAML,EAAE,GAAG,IAAI,IAAIY,EAAE,EAAEJ,EAAE,EAAEI,EAAET,EAAEuQ,OAAOlQ,GAAGL,EAAES,GAAGA,GAAG,EAAE,CAAC,MAAML,EAAEC,EAAEE,EAAE,GAAG,KAAKE,EAAET,EAAEuQ,OAAO,GAAG/P,EAAEP,EAAEI,EAAEL,EAAES,GAAGT,EAAES,EAAE,GAAGP,GAAGO,GAAG,EAAEJ,GAAGL,EAAES,GAAGF,EAAEoR,KAAKtR,EAAEL,EAAES,GAAGL,GAAG,MAAME,EAAEL,EAAEwb,MAAM,EAAErb,EAAE,GAAGC,EAAEL,EAAES,KAAK6C,GAAEvD,EAAAA,EAAAA,GAAEO,EAAEC,EAAE,GAAG,IAAI,MAAMN,KAAKqD,EAAEzD,EAAE8R,KAAK1R,EAAEG,EAAE,CAAC,OAAOP,CAAC,EAAE,MAAMgG,EAAE1D,WAAAA,CAAYlC,EAAED,EAAED,EAAEG,GAAE,GAAIoC,KAAKsQ,SAAS3S,EAAEqC,KAAKoZ,QAAQ1b,EAAEsC,KAAKqZ,cAAc5b,EAAEuC,KAAKsZ,WAAW1b,EAAEoC,KAAKuZ,OAAO,CAAC,CAAC,CAAC,eAAOC,CAAS7b,GAAG,MAAMD,GAAES,EAAAA,EAAAA,IAAE,IAAIL,EAAAA,EAAEH,EAAE8b,MAAK,GAAG,GAAIhc,EAAEC,EAAEub,OAAOrb,EAAE,IAAI4I,YAAY3I,EAAEH,GAAE,IAAKH,EAAE,IAAIiJ,YAAY/I,EAAEwQ,OAAO,GAAG,IAAI,IAAI9P,EAAE,EAAEA,EAAEZ,EAAE0Q,OAAO9P,IAAIZ,EAAEY,IAAGF,EAAAA,EAAAA,IAAE6G,KAAK4U,MAAMjc,EAAE,EAAEU,IAAI2G,KAAK4U,MAAMjc,EAAE,EAAEU,EAAE,KAAK,OAAO,IAAIoF,EAAEhG,EAAEK,EAAEoD,EAAAA,GAAEqB,UAAU,CAAC,mBAAOsX,CAAalc,EAAEG,GAAG,MAAML,EAAEK,EAAEgc,UAAUtY,KAAK,OAAO/D,GAAG,IAAI,UAAU,OAAOgG,EAAEsW,YAAYpc,EAAEG,EAAEgc,UAAU,IAAI,SAAS,OAAOrW,EAAEuW,cAAcrc,EAAEG,EAAEgc,UAAU,QAAQ,OAAOlc,EAAAA,EAAEoX,UAAU,qCAAqC2B,MAAM,IAAI9Y,EAAAA,EAAE,mBAAmB,qCAAqCJ,IAAIK,IAAI2F,EAAEwW,iBAAiB,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,IAAI,CAAC,kBAAON,CAAYlc,EAAED,GAAG,MAAMD,GAAEM,EAAAA,EAAAA,IAAE,IAAID,EAAAA,EAAEJ,GAAE,GAAG,GAAIS,EAAEV,EAAEwb,OAAOjb,EAAE,IAAIwI,YAAY3I,EAAEJ,GAAE,IAAK6F,EAAE,IAAIkD,YAAYrI,EAAE8P,OAAO,GAAG/P,GAAEX,EAAAA,EAAAA,MAAI2D,GAAE3D,EAAAA,EAAAA,MAAI,IAAI,IAAIA,EAAE,EAAEA,EAAE+F,EAAE2K,OAAO1Q,KAAIK,EAAAA,EAAAA,IAAEM,EAAEC,EAAE,EAAEZ,GAAGY,EAAE,EAAEZ,EAAE,IAAII,EAAEiO,SAAS1K,EAAEhD,GAAGoF,EAAE/F,IAAGU,EAAAA,EAAAA,IAAE6G,KAAK4U,MAAMxY,EAAE,IAAI4D,KAAK4U,MAAMxY,EAAE,KAAK,OAAO,IAAIqC,EAAED,EAAEtF,EAAEgD,EAAAA,GAAEqB,WAAU,EAAG,CAAC,uBAAO0X,EAAkBC,KAAKrc,EAAEuc,KAAKxc,EAAEuc,KAAKxc,EAAE0c,KAAKvc,IAAI,MAAML,EAAE,IAAIiJ,YAAY,EAACvI,EAAAA,EAAAA,IAAEN,EAAEF,IAAGQ,EAAAA,EAAAA,IAAEP,EAAED,IAAGQ,EAAAA,EAAAA,IAAEN,EAAEC,IAAGK,EAAAA,EAAAA,IAAEN,EAAEC,IAAGK,EAAAA,EAAAA,IAAEP,EAAED,IAAGQ,EAAAA,EAAAA,IAAEP,EAAEE,KAAKO,EAAE,IAAIqI,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,OAAO,IAAIjD,EAAEhG,EAAEY,EAAE6C,EAAAA,GAAEqB,UAAU,CAAC,oBAAOyX,CAAcnc,EAAED,GAAG,MAAMD,EAAEG,GAAGD,EAAEiO,SAAS,CAAC,EAAE,GAAG,CAAClO,EAAEsc,KAAKtc,EAAEuc,QAAQ1c,EAAEY,GAAGR,EAAEiO,SAAS,CAAC,EAAE,GAAG,CAAClO,EAAEwc,KAAKxc,EAAEyc,OAAOpc,EAAE,IAAIyI,YAAY,EAACvI,EAAAA,EAAAA,IAAER,EAAEG,IAAGK,EAAAA,EAAAA,IAAEV,EAAEK,IAAGK,EAAAA,EAAAA,IAAER,EAAEU,IAAGF,EAAAA,EAAAA,IAAER,EAAEU,IAAGF,EAAAA,EAAAA,IAAEV,EAAEK,IAAGK,EAAAA,EAAAA,IAAEV,EAAEY,KAAKL,EAAE,IAAI0I,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,OAAO,IAAIjD,EAAExF,EAAED,EAAEkD,EAAAA,GAAEqB,UAAU,CAAC+I,OAAAA,GAAU,MAAMpL,KAAKuZ,OAAO5X,aAAa3B,KAAKuZ,OAAO5X,YAAYzB,UAAUF,KAAKuZ,OAAOa,cAAcxC,OAAO1X,UAAUF,KAAKuZ,OAAO5X,YAAY3B,KAAKuZ,OAAOa,aAAa,IAAI,CAACC,cAAAA,CAAe1c,EAAED,EAAE,OAAO,OAAOsC,KAAKuZ,OAAO5X,cAAc3D,EAAAA,EAAEsc,YAAY3c,EAAED,EAAEsC,KAAKoZ,SAASpZ,KAAKuZ,OAAO5X,WAAW,CAAC4Y,gBAAAA,CAAiB5c,EAAED,GAAG,OAAOsC,KAAKuZ,OAAOa,eAAe,IAAI9W,EAAAA,EAAE5F,EAAEM,EAAAA,EAAEuH,aAAa5H,EAAE,MAAMqC,KAAKsQ,WAAWtQ,KAAKuZ,OAAOa,YAAY,E,0BCA33E,MAAMtc,UAAUC,EAAAA,EAAE8B,WAAAA,CAAYlC,EAAEF,GAAGqC,QAAQE,KAAKwa,MAAM/c,EAAEuC,KAAKuZ,OAAO,CAAC,EAAEvZ,KAAKya,MAAM9c,EAAEqC,KAAK0a,SAAQhd,EAAAA,EAAAA,KAAE,IAAID,EAAEkd,UAAQ,IAAI3a,KAAK4a,gBAAe5a,KAAK6S,OAAO,CAAC,mBAAOgI,CAAald,EAAEF,GAAG,OAAO,IAAIK,EAAEH,EAAEF,EAAE,CAACqd,UAAAA,GAAa,MAAM9a,KAAKuZ,OAAOwB,OAAO/a,KAAKuZ,OAAOwB,KAAK3P,UAAUpL,KAAKuZ,OAAOwB,KAAK,MAAM,MAAM/a,KAAKuZ,OAAOjT,MAAMtG,KAAKuZ,OAAOjT,IAAIpG,UAAUF,KAAKuZ,OAAOjT,IAAI,KAAK,CAAC8E,OAAAA,GAAUtL,MAAMsL,UAAUpL,KAAK8a,aAAa9a,KAAK0a,QAAQhG,QAAQ,CAACjT,MAAAA,CAAO9D,EAAEF,EAAEC,GAAG,MAAMS,EAAEJ,GAAGN,EAAE6E,KAAK,GAAG,aAAatC,KAAKwa,MAAMlZ,MAAMtB,KAAKgb,aAAa7c,GAAG6B,KAAKib,cAAcld,IAAIiC,KAAKgb,WAAW7c,EAAE6B,KAAKib,YAAYld,EAAEiC,KAAK8a,cAAc,MAAM9a,KAAKuZ,OAAOjT,IAAI,CAAC,MAAMnI,EAAE6B,KAAKkb,YAAYzd,EAAEuC,KAAKwa,OAAOzc,EAAEI,EAAEkc,eAAe1c,GAAGC,EAAEO,EAAEoc,iBAAiB5c,EAAED,GAAGsC,KAAKuZ,OAAOwB,KAAK5c,EAAE6B,KAAKuZ,OAAOjT,IAAI,IAAIhD,EAAAA,EAAE3F,EAAEC,EAAEG,EAAE,CAAC,OAAOiC,KAAKuZ,OAAOjT,GAAG,CAACyF,iBAAAA,GAAoB,MAAM,CAAClH,uBAAsB1G,EAAAA,EAAAA,MAAI,CAACyc,WAAAA,GAAc5a,KAAK8a,aAAa9a,KAAKe,eAAe,CAACma,WAAAA,CAAYxd,EAAES,GAAG,OAAOA,EAAEmD,MAAM,IAAI,OAAO,OAAO1D,EAAEmc,kBAAiB/b,EAAAA,EAAAA,GAAEG,EAAET,EAAE4E,KAAK,GAAG5E,EAAE4E,KAAK,KAAK,IAAI,OAAO,OAAO1E,EAAE4b,SAASrb,GAAG,IAAI,WAAW,OAAOP,EAAE+b,aAAajc,EAAES,GAAG,QAAQ,OAAOV,EAAAA,EAAEqX,UAAU,2CAA2C2B,MAAM,IAAI9Y,EAAAA,EAAE,mBAAmB,uEAAuEC,EAAEmc,iBAAiB,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,IAAI,ECAlhD,MAAMpc,UAAUI,EAAAA,EAAE,SAAIgd,CAAMxd,GAAGmC,MAAMqb,MAAMxd,EAAEqC,KAAKob,oBAAoBzd,EAAE,CAAC0d,cAAAA,CAAe1d,GAAGA,EAAEmF,QAAQwY,iBAAiB,MAAM,MAAMtb,KAAKub,gBAAgBvb,KAAKub,cAAcvb,KAAKwb,oBAAoB7d,EAAEmF,UAAU,IAAI,MAAMpF,KAAKsC,KAAKub,cAAc,IAAI7d,EAAE+O,OAAO9O,EAAE,CAAC,MAAMQ,GAAG,CAAC,CAACqd,mBAAAA,CAAoBrd,GAAG,MAAM,CAACA,EAAEsd,mBAAmB,CAACra,KAAK,OAAOsa,QAAQ,CAAC/d,EAAAA,EAAEiN,MAAMwB,OAAOA,IAAIpM,KAAK2b,eAAevN,UAAU,KAAK,CAACgN,mBAAAA,CAAoBzd,GAAG,MAAMqC,KAAK2b,iBAAiB3b,KAAK2b,eAAenR,SAAQ7M,GAAGA,EAAEyN,YAAWpL,KAAK2b,eAAe,MAAM,MAAMhe,GAAGA,EAAEsQ,SAASjO,KAAK2b,eAAehe,EAAEie,MAAM1L,KAAIvS,GAAGD,EAAEmd,aAAa7a,KAAKya,MAAM9c,MAAKqC,KAAKe,eAAe,E,kCCApwB,MAAMtD,EAAEoC,WAAAA,GAAcG,KAAKoB,KAAKpB,KAAKH,YAAYuB,MAAM,eAAepB,KAAK6b,YAAY,IAAI,CAACzb,YAAAA,CAAa3C,EAAEC,GAAG,CAACmD,IAAAA,CAAKpD,EAAEC,EAAES,GAAG,CAAC0E,QAAAA,CAASpF,EAAEC,EAAES,GAAG,IAAI,MAAMH,KAAKN,EAAEM,EAAE+T,SAAS/R,KAAKa,KAAKpD,EAAEO,EAAEG,EAAE,E,uICA2Y,MAAMqD,UAAU9D,EAAAA,EAAEmC,WAAAA,GAAcC,SAASC,WAAWC,KAAKC,QAAOtC,EAAAA,EAAAA,IAAE,EAAE,EAAE,EAAE,GAAGqC,KAAK8b,cAAa,CAAE,CAAC5b,OAAAA,GAAUF,KAAK+b,gBAAgB/b,KAAK+b,cAAc7b,UAAUF,KAAK+b,cAAc,MAAM/b,KAAKgc,0BAA0Bhc,KAAKgc,wBAAwB9b,UAAUF,KAAKgc,wBAAwB,KAAK,CAAC5b,YAAAA,EAAcC,QAAQ1C,IAAIA,EAAEse,sBAAqB,GAAIte,EAAEue,qBAAoB,GAAIve,EAAE2C,uBAAsB,GAAI3C,EAAE4C,oBAAmB,GAAI5C,EAAE8C,cAAa,GAAG,GAAG,GAAG,GAAI9C,EAAE+C,aAAa,KAAK,KAAK,MAAM/C,EAAEgD,oBAAoB,IAAI,CAACE,IAAAA,CAAKlD,EAAED,GAAG,MAAM2C,QAAQ5C,EAAEsD,cAAchD,EAAEkD,mBAAmBrD,GAAGD,EAAEqC,KAAK8b,cAAc9b,KAAKmc,YAAY1e,IAAIG,GAAG,MAAMG,GAAGiC,KAAK+b,cAAcla,UAAUpE,EAAE2e,2BAA2B,KAAK,IAAI1e,EAAE6I,WAAW,KAAK9I,EAAE0E,QAAQnC,KAAKgc,yBAAyBve,EAAEqE,WAAW9B,KAAK+b,eAAe/b,KAAK+b,cAAc9Z,oBAAoB,YAAYvE,EAAEkH,WAAWC,uBAAuB7E,KAAK+b,cAAcha,cAAc,gBAAgB,CAACrE,EAAEiH,OAAOjH,EAAE+N,SAASzL,KAAK+b,cAActX,aAAa,UAAU,GAAGzE,KAAK+b,cAAc/Z,cAAc,UAAUhC,KAAKC,QAAQxC,EAAE2H,WAAWjH,EAAAA,GAAEkH,eAAe,EAAE,GAAG5H,EAAE0E,QAAQ,OAAOpE,GAAG,CAACoe,WAAAA,CAAYxe,GAAG,GAAGqC,KAAK8b,aAAa,OAAM,EAAG,MAAMpe,EAAE,IAAI4H,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAInH,EAAEJ,EAAAA,EAAEwH,aAAa5H,EAAE,MAAMD,GAAG8D,EAAE,IAAIxD,EAAAA,EAAEL,EAAE,IAAIJ,EAAAA,EAAEW,EAAAA,GAAEC,IAAI,OAAO6B,KAAK+b,eAAcne,EAAAA,EAAAA,GAAED,EAAEF,EAAAA,EAAE+D,EAAEI,WAAW5B,KAAKgc,wBAAwBxa,EAAExB,KAAK8b,cAAa,GAAG,CAAE,E,mLCArkC,MAAkBzY,EAAE,GAAmB,MAAMK,UAAUhG,EAAAA,EAAEmC,WAAAA,GAAcC,SAASC,WAAWC,KAAKC,QAAOtC,EAAAA,EAAAA,IAAE,EAAE,EAAE,EAAE,EAAE,CAACuC,OAAAA,GAAUF,KAAKqc,iBAAiBnc,UAAUF,KAAKqc,gBAAgB,KAAKrc,KAAKsc,kBAAkBpc,UAAUF,KAAKsc,iBAAiB,KAAKtc,KAAKuc,2BAA2Brc,UAAUF,KAAKuc,0BAA0B,KAAKvc,KAAKwc,4BAA4Btc,UAAUF,KAAKwc,2BAA2B,KAAKxc,KAAKyc,KAAK,IAAI,CAACrc,YAAAA,EAAcC,QAAQ1C,IAAIA,EAAE4C,oBAAmB,GAAI5C,EAAE+e,yBAAyB,EAAE,IAAI,EAAE,KAAK/e,EAAE8C,cAAa,GAAG,GAAG,GAAG,GAAI9C,EAAEgD,oBAAoB,GAAGhD,EAAE2C,uBAAsB,EAAG,CAACO,IAAAA,CAAKlD,EAAED,GAAG,MAAM2C,QAAQzC,EAAEmD,cAAchD,EAAEkD,mBAAmB9C,GAAGR,EAAE,IAAID,EAAEgV,SAAShV,aAAaD,EAAAA,GAAGC,EAAEwV,QAAQ,OAAO,GAAGlT,KAAK+C,kBAAkBnF,GAAGO,GAAG,MAAMJ,KAAKiC,KAAKqc,gBAAgBxa,WAAW7B,KAAKsc,iBAAiBza,UAAU,YAAY9D,IAAIH,EAAEuE,QAAQnC,KAAKuc,2BAA2B3e,EAAEkE,WAAW9B,KAAKqc,iBAAiBrc,KAAKqc,gBAAgBpa,oBAAoB,YAAYvE,EAAEkH,WAAWC,uBAAuB7E,KAAKqc,gBAAgBM,aAAa,gBAAgBjf,EAAEiH,OAAOjH,EAAE+N,QAAQzL,KAAKqc,gBAAgB5X,aAAa,UAAU,GAAGzE,KAAKqc,gBAAgBra,cAAc,UAAUhC,KAAKC,QAAQrC,EAAEwH,WAAW7H,EAAAA,GAAEqf,WAAW,EAAE,GAAG,MAAM1e,EAAE8B,KAAK6c,YAAYjf,EAAEF,GAAGQ,GAAGN,EAAEuE,QAAQnC,KAAKwc,4BAA4B5e,EAAEkE,WAAW9B,KAAKsc,kBAAkB1e,EAAEkf,YAAY5e,EAAE,GAAG8B,KAAKsc,iBAAiBra,oBAAoB,YAAYvE,EAAEkH,WAAWC,uBAAuB7E,KAAKsc,iBAAiB7X,aAAa,UAAU,GAAGzE,KAAKsc,iBAAiBK,aAAa,gBAAgBjf,EAAEiH,OAAOjH,EAAEyH,MAAMzH,EAAE+N,OAAO/N,EAAE0M,QAAQpK,KAAKsc,iBAAiBK,aAAa,UAAU,EAAE,GAAG3c,KAAKsc,iBAAiBK,aAAa,eAAeze,EAAE6e,WAAW5X,MAAMjH,EAAE6e,WAAW3S,QAAQxM,EAAEwH,WAAW7H,EAAAA,GAAE8H,eAAe,EAAE,GAAGzH,EAAEuE,QAAQ,OAAOvE,EAAEuE,QAAQ,KAAK,CAACY,iBAAAA,CAAkBpF,GAAG,GAAGqC,KAAKqc,iBAAiBrc,KAAKsc,iBAAiB,OAAO,MAAM7e,EAAE,IAAI6H,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI5H,EAAES,EAAAA,EAAEoH,aAAa5H,EAAE,MAAMF,GAAGuC,KAAKuc,0BAA0B,IAAIvb,EAAAA,EAAErD,EAAE,IAAIE,EAAAA,EAAEC,EAAAA,GAAEJ,IAAIsC,KAAKqc,iBAAgBne,EAAAA,EAAAA,GAAEP,EAAEC,EAAAA,EAAEoC,KAAKuc,0BAA0B3a,WAAW,MAAMrE,EAAE,IAAI+H,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAItH,EAAEG,EAAAA,EAAEoH,aAAa5H,EAAE,MAAMJ,GAAGyC,KAAKwc,2BAA2B,IAAIxb,EAAAA,EAAErD,EAAE,IAAIE,EAAAA,EAAEC,EAAAA,GAAEE,IAAIgC,KAAKsc,kBAAiBpe,EAAAA,EAAAA,GAAEP,EAAEI,EAAAA,EAAEiC,KAAKwc,2BAA2B5a,UAAU,CAACib,WAAAA,CAAYlf,EAAEF,GAAG,IAAIuC,KAAKyc,KAAK,CAAC,MAAM9e,EAAEqf,SAASC,cAAc,UAAUtf,EAAEwH,MAA1uE,IAAkvExH,EAAEyM,OAA9uE,IAAuvEpK,KAAKyc,KAAK9e,EAAEuf,WAAW,KAAK,CAAC,IAAIzf,EAAEkb,qBAAqB,CAAC,MAAMjb,EAAE,IAAIO,EAAAA,EAAl0E,IAAM,KAAm0EP,EAAEyf,SAAS,MAAMzf,EAAE0f,aAAa,KAAK1f,EAAE2f,aAAY,EAAG5f,EAAEkb,qBAAqB,IAAI3a,EAAAA,EAAEL,EAAED,EAAE,CAAC,MAAMA,EAAEsC,KAAKyc,KAAK/e,EAAE4f,UAAU,EAAE,EAAE5f,EAAE6f,OAAOpY,MAAMzH,EAAE6f,OAAOnT,QAAQ1M,EAAE8f,UAAU,OAAO9f,EAAE+f,aAAa,MAAM/f,EAAEggB,KAAKra,kBAAoB3F,EAAEigB,UAAU,EAAEjgB,EAAEkgB,UAAU,QAAQlgB,EAAEmgB,YAAY,QAAQ,MAAMhF,UAAUjb,GAAGH,EAAE,IAAIM,EAAtmF,EAAI,KAAwmFH,EAAE,MAAMO,EAAE,GAAGP,MAAMH,EAAEwH,IAAIvC,OAAOjF,EAAEoC,YAAYuB,QAAQ1D,EAAEogB,WAAW3f,EAA/qF,EAAmrFJ,GAAGL,EAAEqgB,SAAS5f,EAAjsF,EAAqsFJ,GAAGA,GAAGsF,EAAE,MAAMsQ,UAAUpW,GAAGE,EAAE,GAAGF,EAAE,CAAC,MAAM0Q,OAAOtQ,EAAEuQ,iBAAiBzQ,EAAE0Q,mBAAmBvQ,EAAE+I,cAAcxI,GAAGZ,EAAEqW,QAAQ,GAAGjW,EAAE,EAAE,CAAC,MAAMF,EAAE,WAAWE,IAAID,EAAEogB,WAAWrgB,EAAt2F,EAA02FM,GAAGL,EAAEqgB,SAAStgB,EAAx3F,EAA43FM,GAAGA,GAAGsF,CAAC,CAAC,GAAG5F,EAAE,CAAC,MAAME,EAAE,uBAAuBF,IAAIC,EAAEogB,WAAWngB,EAA17F,EAA87FI,GAAGL,EAAEqgB,SAASpgB,EAA58F,EAAg9FI,GAAGA,GAAGsF,CAAC,CAAC,GAAGzF,EAAE,CAAC,MAAMD,EAAE,yBAAyBC,IAAIF,EAAEogB,WAAWngB,EAAhhG,EAAohGI,GAAGL,EAAEqgB,SAASpgB,EAAliG,EAAsiGI,GAAGA,GAAGsF,CAAC,CAAC,GAAGlF,EAAE,EAAE,CAACA,EAAE,MAAMT,EAAEkgB,UAAU,MAAMlgB,EAAEmgB,YAAY,SAAS,MAAMlgB,EAAE,mBAAmBQ,IAAIT,EAAEogB,WAAWngB,EAAnpG,EAAupGI,GAAGL,EAAEqgB,SAASpgB,EAArqG,EAAyqGI,GAAGA,GAAGsF,CAAC,CAAC,MAAM2T,UAAU9Y,EAAE+Y,cAAcjZ,GAAGT,EAAEwZ,OAAO,GAAGrZ,EAAEkgB,UAAU,QAAQlgB,EAAEmgB,YAAY,QAAQ3f,EAAE,GAAGF,EAAE,EAAE,CAAC,MAAML,EAAE,iBAAiBO,QAAQF,UAAUN,EAAEogB,WAAWngB,EAA50G,EAAg1GI,GAAGL,EAAEqgB,SAASpgB,EAA91G,EAAk2GI,GAAGA,GAAGsF,CAAC,CAAC,CAAC,OAAO5F,EAAEkb,qBAAqBqF,QAAQtgB,EAAE6f,QAAQ9f,EAAEkb,oBAAoB,E,2CCAzvI,MAAMlb,EAAEoC,WAAAA,CAAY7B,GAAG,GAAGgC,KAAK2O,KAAK,MAAMsP,MAAMC,QAAQlgB,GAAG,YAAYgC,KAAK0O,KAAK1Q,GAAGgC,KAAK0O,KAAK1Q,EAAE,GAAG,IAAIL,EAAEqC,KAAK,IAAI,IAAIzC,EAAE,EAAEA,EAAES,EAAEiQ,OAAO1Q,IAAII,EAAEgR,KAAK,IAAIlR,EAAE,CAACO,EAAET,KAAKI,EAAEA,EAAEgR,IAAI,CAAC,OAAClB,GAAS,IAAIhQ,EAAEuC,KAAK,KAAKvC,SAASA,EAAEiR,KAAKjR,EAAEA,EAAEkR,IAAI,CAACnE,OAAAA,CAAQ/M,GAAG,IAAIO,EAAEgC,KAAK,KAAKhC,GAAGP,EAAEO,EAAE0Q,MAAM1Q,EAAEA,EAAE2Q,IAAI,CAAC,QAAIwP,GAAO,OAAOne,KAAK2O,KAAK3O,KAAK2O,KAAKwP,KAAKne,IAAI,EAAE,MAAMhC,EAAE6B,WAAAA,CAAY7B,GAAGgC,KAAKsO,MAAM,KAAK,MAAMtQ,IAAIgC,KAAKsO,MAAM,IAAI7Q,EAAEO,GAAG,CAAC,QAAIogB,GAAO,OAAOpe,KAAKsO,KAAK,CAAC+P,iBAAAA,GAAoB,GAAG,MAAMre,KAAKsO,MAAM,OAAO,EAAE,IAAI7Q,EAAE,EAAE,OAAOuC,KAAKsO,MAAM9D,SAAQxM,IAAI,MAAML,EAAEK,EAAEoW,IAAIpW,EAAEqO,MAAM5O,EAAEqH,KAAKC,IAAItH,EAAEE,EAAE,IAAGF,CAAC,CAAC2a,QAAAA,CAAS3a,GAAG,GAAG,MAAMuC,KAAKsO,MAAM,OAAO,KAAK,IAAItQ,EAAE,KAAKL,EAAEqC,KAAKsO,MAAM,KAAK3Q,GAAG,CAAC,MAAMJ,EAAEI,EAAE+Q,KAAK0F,IAAIzW,EAAE+Q,KAAKrC,MAAM,GAAG9O,IAAIE,EAAE,OAAOO,EAAEA,EAAE2Q,KAAKhR,EAAEgR,KAAK3O,KAAKsO,MAAM3Q,EAAEgR,KAAKhR,EAAE+Q,KAAKrC,MAAM,GAAG9O,EAAEE,EAAE,CAAC,MAAMO,EAAEL,EAAE+Q,KAAKrC,MAAM,OAAO1O,EAAE+Q,KAAKrC,OAAO5O,EAAEO,CAAC,CAACA,EAAEL,EAAEA,EAAEA,EAAEgR,IAAI,CAAC,OAAO,IAAI,CAAC0J,IAAAA,CAAKra,EAAEL,GAAG,MAAMJ,EAAES,EAAEL,EAAE,GAAG,MAAMqC,KAAKsO,MAAM,CAAC,MAAM3Q,EAAE,IAAIF,EAAE,CAAC4O,MAAMrO,EAAEoW,IAAI7W,IAAI,YAAYyC,KAAKsO,MAAM3Q,EAAE,CAAC,GAAGJ,GAAGyC,KAAKsO,MAAMI,KAAKrC,MAAM,CAAC,GAAG9O,IAAIyC,KAAKsO,MAAMI,KAAKrC,MAAM,YAAYrM,KAAKsO,MAAMI,KAAKrC,OAAO1O,GAAG,MAAMD,EAAE,IAAID,EAAE,CAAC4O,MAAMrO,EAAEoW,IAAI7W,IAAI,OAAOG,EAAEiR,KAAK3O,KAAKsO,WAAWtO,KAAKsO,MAAM5Q,EAAE,CAAC,IAAIA,EAAEsC,KAAKsO,MAAM9M,EAAE9D,EAAEiR,KAAK,KAAKnN,GAAG,CAAC,GAAGA,EAAEkN,KAAKrC,OAAO9O,EAAE,CAAC,GAAGG,EAAEgR,KAAK0F,MAAMpW,EAAE,CAAC,GAAGN,EAAEgR,KAAK0F,KAAKzW,EAAED,EAAEgR,KAAK0F,MAAM5S,EAAEkN,KAAKrC,MAAM,CAAC,MAAM5O,EAAE+D,EAAEkN,KAAK0F,IAAI5S,EAAEkN,KAAKrC,MAAM,OAAO3O,EAAEgR,KAAK0F,KAAK3W,OAAOC,EAAEiR,KAAKnN,EAAEmN,KAAK,CAAC,MAAM,CAAC,GAAGnN,EAAEkN,KAAKrC,QAAQ9O,EAAE,YAAYiE,EAAEkN,KAAKrC,OAAO1O,GAAG,MAAMQ,EAAE,IAAIV,EAAE,CAAC4O,MAAMrO,EAAEoW,IAAI7W,IAAI,OAAOY,EAAEwQ,KAAKjR,EAAEiR,UAAUjR,EAAEiR,KAAKxQ,EAAE,CAACT,EAAE8D,EAAEA,EAAEA,EAAEmN,IAAI,CAAC,GAAG3Q,IAAIN,EAAEgR,KAAK0F,IAAI,YAAY1W,EAAEgR,KAAK0F,KAAKzW,GAAG,MAAMQ,EAAE,IAAIV,EAAE,CAAC4O,MAAMrO,EAAEoW,IAAI7W,IAAIG,EAAEiR,KAAKxQ,CAAC,CAAC8T,KAAAA,GAAQjS,KAAKsO,MAAM,IAAI,E,oHCAloC,MAAMzQ,EAAEgC,WAAAA,CAAYpC,EAAEM,EAAEL,EAAES,GAAG6B,KAAKyX,MAAMtZ,EAAE,MAAMZ,EAAEI,EAAAA,EAAEoB,OAAOhB,EAAEL,EAAE8I,YAAYC,kBAAkBzG,KAAKyX,OAAOzX,KAAKsC,KAAKvE,EAAEiC,KAAKse,UAAU5gB,EAAEsC,KAAKue,WAAW9gB,EAAEuC,KAAKwe,MAAM,CAACnS,MAAM,IAAI+H,IAAI,GAAGpU,KAAKkX,YAAY,CAACF,UAAU,EAAEC,cAAclZ,EAAEL,EAAE8I,YAAYC,mBAAmBzG,KAAKye,KAAK,KAAKze,KAAK0e,KAAKnhB,EAAEyC,KAAKiS,OAAO,CAAC,eAAI0M,GAAc,OAAO3e,KAAK0e,KAAKzQ,OAAOjO,KAAKse,SAAS,CAAC,WAAIM,GAAU,OAAO5e,KAAK6e,YAAY7e,KAAKse,SAAS,CAAC,YAAIQ,GAAW,OAAO9e,KAAK4e,QAAQpY,YAAYC,iBAAiB,CAAC,eAAIsY,GAAc,OAAO/e,KAAKgf,WAAW,IAAIhf,KAAKye,IAAI,CAAC,4BAAIQ,GAA2B,OAAOjf,KAAKgf,WAAW,IAAIhf,KAAKkf,oBAAoB,CAACC,UAAAA,GAAanf,KAAKof,4BAA4Bpf,KAAKye,MAAMve,UAAUF,KAAKye,KAAK,IAAI,CAACW,yBAAAA,GAA4Bpf,KAAKkf,sBAAsBhf,UAAUF,KAAKkf,qBAAqB,IAAI,CAAC9T,OAAAA,GAAUpL,KAAKye,MAAMve,UAAUF,KAAKkf,sBAAsBhf,UAAUF,KAAK0e,MAAMtT,SAAS,CAAC6G,KAAAA,GAAQjS,KAAKwe,MAAMnS,MAAM,IAAIrM,KAAKwe,MAAMpK,IAAI,EAAEpU,KAAKqf,SAAS,IAAIlhB,EAAAA,EAAE,CAACkO,MAAM,EAAE+H,IAAIpU,KAAK0e,KAAKzQ,OAAOjO,KAAKse,YAAYte,KAAK6e,YAAY,CAAC,CAACS,MAAAA,CAAO7hB,GAAG,KAAGuC,KAAKqe,qBAAqB5gB,IAAYA,EAAEuC,KAAKse,UAAUte,KAAK0e,KAAKzQ,OAAOjO,KAAK6e,YAAY,CAAC7e,KAAKmf,aAAa,MAAMphB,EAAEiC,KAAK0e,KAAKzQ,OAAOjO,KAAKse,UAAU5gB,EAAEoH,KAAKE,MAAprC,MAA2rCjH,EAAEN,IAAME,EAAED,EAAEsC,KAAKse,UAAUte,KAAK0e,KAAK5G,OAAOna,EAAE6I,YAAYC,mBAAmBzG,KAAKqf,SAAShH,KAAKta,EAAEL,EAAEK,GAAGiC,KAAKkX,YAAYD,gBAAgBvZ,EAAEK,GAAGiC,KAAKse,UAAU9X,YAAYC,iBAAiB,CAAC,CAAC8Y,MAAAA,CAAO9hB,EAAEM,GAAGiC,KAAK0e,KAAKhH,MAAMja,KAAKM,IAAIiC,KAAK0e,KAAKhH,MAAMja,GAAGM,EAAEiC,KAAKwe,MAAMnS,MAAMvH,KAAK0a,IAAI/hB,EAAEuC,KAAKwe,MAAMnS,OAAOrM,KAAKwe,MAAMpK,IAAItP,KAAKC,IAAItH,EAAE,EAAEuC,KAAKwe,MAAMpK,KAAK,CAACqL,MAAAA,CAAOhiB,EAAEC,GAAGsC,KAAKuf,OAAO9hB,GAAEM,EAAAA,EAAAA,IAAEL,GAAG,CAACgiB,WAAAA,CAAYjiB,EAAEC,EAAEC,GAAG,MAAMQ,GAAEJ,EAAAA,EAAAA,IAAEJ,GAAGqC,KAAK0e,KAAKhH,MAAMiI,KAAKxhB,EAAEV,EAAEC,GAAGsC,KAAKwe,MAAMnS,MAAMvH,KAAK0a,IAAI/hB,EAAEuC,KAAKwe,MAAMnS,OAAOrM,KAAKwe,MAAMpK,IAAItP,KAAKC,IAAIrH,EAAEsC,KAAKwe,MAAMpK,IAAI,CAACwL,MAAAA,CAAOniB,GAAG,OAAOC,EAAAA,EAAAA,IAAEsC,KAAK0e,KAAKhH,MAAMja,GAAG,CAACoiB,YAAAA,CAAapiB,EAAEM,GAAE,GAAI,IAAIiC,KAAKgf,WAAW,OAAO,KAAK,GAAGjhB,EAAE,CAAC,GAAG,UAAUiC,KAAKue,WAAW,MAAM,IAAI1K,MAAM,mEAAmE,OAAO,MAAM7T,KAAKkf,uBAAuBlf,KAAKkf,qBAAqBlf,KAAK8f,qBAAqBriB,IAAIuC,KAAKkf,oBAAoB,CAAC,OAAO,MAAMlf,KAAKye,OAAOze,KAAKye,KAAKze,KAAK+f,cAActiB,IAAIuC,KAAKye,IAAI,CAACuB,OAAAA,CAAQviB,EAAEM,GAAG,OAAOiC,KAAK0e,KAAK/G,cAAcla,EAAEM,EAAEyI,YAAYC,kBAAkB,CAAC,cAAIuY,GAAa,OAAOhf,KAAK0e,KAAKzQ,OAAOjO,KAAKse,SAAS,CAACD,iBAAAA,GAAoB,OAAOre,KAAKqf,SAAShB,mBAAmB,CAAC4B,MAAAA,CAAOliB,EAAEL,EAAEC,EAAEQ,GAAG,MAAMZ,EAAEI,EAAEqC,KAAKse,UAAU,IAAI/gB,EAAE,OAAO,EAAE,MAAM+F,EAAE5F,EAAEsC,KAAKse,UAAU9X,YAAYC,kBAAkBzI,EAAE,IAAIwI,YAAYzI,EAAEuF,EAAE/F,GAAGiE,EAAExB,KAAKqf,SAASjH,SAASza,IAAGF,EAAAA,EAAAA,IAAE+D,EAAE,oCAAoC,MAAM3D,EAAE2D,EAAExB,KAAKse,UAAU1gB,EAAEL,EAAE,GAAGyC,KAAK0e,KAAKhH,MAAMzE,IAAIjV,EAAEH,GAAG,IAAIM,EAAE,IAAI,IAAIV,EAAE,EAAEA,EAAEO,EAAEiQ,OAAOxQ,IAAIuC,KAAK0e,KAAKhH,MAAMja,EAAEI,IAAIM,EAAE,OAAO6B,KAAKwe,MAAMnS,MAAMvH,KAAK0a,IAAIxf,KAAKwe,MAAMnS,MAAMxO,GAAGmC,KAAKwe,MAAMpK,IAAItP,KAAKC,IAAI/E,KAAKwe,MAAMpK,IAAIvW,EAAED,GAAGoC,KAAK6e,YAAY/Z,KAAKC,IAAI/E,KAAK6e,YAAYhhB,EAAED,GAAGoC,KAAKkX,YAAYF,WAAWrZ,EAAEqC,KAAKse,UAAU9X,YAAYC,kBAAkBjF,CAAC,CAAC0e,QAAAA,CAASniB,EAAEL,EAAEC,EAAEQ,EAAEZ,GAAG,MAAM+F,EAAE3F,EAAEqC,KAAKse,UAAU,IAAIhb,EAAE,OAAO,EAAE,MAAMtF,EAAEN,EAAEsC,KAAKse,UAAU9X,YAAYC,kBAAkBjF,EAAEzD,EAAE2gB,KAAK/G,cAAc3Z,EAAEsF,GAAGzF,EAAEmC,KAAKqf,SAASjH,SAASza,IAAGF,EAAAA,EAAAA,IAAEI,EAAE,oCAAoC,MAAMD,EAAEC,EAAEmC,KAAKse,UAAUrgB,EAAEqF,EAAE,GAAGtD,KAAK0e,KAAKhH,MAAMzE,IAAIzR,EAAE5D,GAAG,IAAIO,EAAE,IAAI,IAAIV,EAAE,EAAEA,EAAE6F,EAAE7F,IAAIuC,KAAK0e,KAAKhH,MAAM9Z,EAAEH,EAAEuC,KAAKse,UAAU/gB,IAAIY,EAAE,OAAO6B,KAAKwe,MAAMnS,MAAMvH,KAAK0a,IAAIxf,KAAKwe,MAAMnS,MAAMzO,GAAGoC,KAAKwe,MAAMpK,IAAItP,KAAKC,IAAI/E,KAAKwe,MAAMpK,IAAIxW,EAAEK,GAAG+B,KAAK6e,YAAY/Z,KAAKC,IAAI/E,KAAK6e,YAAYjhB,EAAEK,GAAG+B,KAAKkX,YAAYF,WAAWrZ,EAAEqC,KAAKse,UAAU9X,YAAYC,kBAAkB5I,CAAC,CAACwa,IAAAA,CAAK5a,EAAEM,EAAEL,GAAG,MAAMC,EAAEF,EAAEuC,KAAKse,UAAUngB,GAAGV,EAAEM,GAAGiC,KAAKse,UAAU,IAAG,IAAK5gB,EAAE,IAAI,IAAIH,EAAEE,EAAEF,IAAIE,EAAEM,EAAER,IAAIyC,KAAK0e,KAAKhH,MAAMna,EAAEyC,KAAKse,WAAn8GtgB,WAAg9GgC,KAAKwe,MAAMnS,MAAMvH,KAAK0a,IAAIxf,KAAKwe,MAAMnS,MAAM1O,GAAGqC,KAAKwe,MAAMpK,IAAItP,KAAKC,IAAI/E,KAAKwe,MAAMpK,IAAIjW,GAAG6B,KAAKqf,SAAShH,KAAK5a,EAAEM,GAAGiC,KAAKkX,YAAYF,WAAWjZ,EAAEiC,KAAKse,UAAU9X,YAAYC,iBAAiB,CAAC6M,MAAAA,GAAS,GAAGtT,KAAKwe,MAAMpK,IAAI,CAAC,GAAGpU,KAAKof,4BAA4B,MAAMpf,KAAKye,KAAK,OAAOze,KAAKwe,MAAMnS,MAAM,SAASrM,KAAKwe,MAAMpK,IAAI,GAAGpU,KAAKye,KAAK0B,WAAWngB,KAAK0e,KAAKhH,MAAM1X,KAAKwe,MAAMnS,MAAMrM,KAAKwe,MAAMnS,MAAMrM,KAAKwe,MAAMpK,KAAKpU,KAAKwe,MAAMnS,MAAM,IAAIrM,KAAKwe,MAAMpK,IAAI,CAAC,CAAC,CAACV,SAAAA,CAAUjW,EAAEM,GAAG,GAAG,IAAIA,EAAEkQ,OAAO,OAAO,MAAMvQ,EAAEsC,KAAK8e,SAAS3gB,EAAEV,EAAEuC,KAAKse,UAAU9X,YAAYC,kBAAkBlJ,EAAEG,EAAES,EAAEmF,EAAEtD,KAAK0e,KAAK1gB,EAAEL,EAAAA,EAAEoB,OAAOZ,EAAE6B,KAAKyX,OAAOla,GAAGS,EAAE0Z,MAAMzE,IAAIjT,KAAK0e,KAAK/G,cAAc,EAAE3X,KAAK4e,UAAU,IAAI,MAAMjhB,KAAKI,EAAE,GAAGR,GAAGI,EAAE2R,UAAU3R,EAAE4R,SAAS,IAAI5R,EAAE6R,OAAO,CAACxP,KAAKwe,MAAMnS,MAAMvH,KAAK0a,IAAIxf,KAAKwe,MAAMnS,MAAM1O,EAAE4R,QAAQvP,KAAKse,WAAWte,KAAKwe,MAAMpK,IAAItP,KAAKC,IAAI/E,KAAKwe,MAAMpK,KAAKzW,EAAE4R,QAAQ5R,EAAE0D,OAAOrB,KAAKse,WAAW,IAAI,IAAI7gB,EAAE,EAAEA,EAAEE,EAAE0D,MAAM5D,IAAI,CAAC,MAAMM,GAAGJ,EAAE4R,QAAQ9R,GAAGuC,KAAKse,UAAU5gB,GAAGC,EAAE2R,QAAQ7R,GAAGuC,KAAKse,UAAU,IAAI,IAAI7gB,EAAE,EAAEA,EAAEuC,KAAKse,UAAU7gB,IAAIO,EAAE0Z,MAAM3Z,EAAEN,GAAG6F,EAAEoU,MAAMha,EAAED,GAAGE,EAAE6R,MAAM,CAAC,CAACxP,KAAK0e,KAAKtT,UAAUpL,KAAK0e,KAAK1gB,EAAET,GAAGyC,KAAKmf,aAAanf,KAAKqf,SAASpN,QAAQjS,KAAKkX,YAAYF,UAAUhX,KAAKkX,YAAYD,cAAc9Y,CAAC,CAAC4hB,aAAAA,CAActiB,GAAiB,MAAM,UAAUuC,KAAKue,WAAWhhB,EAAAA,EAAE+c,YAAY7c,EAApD,MAAwDuC,KAAK0e,KAAKhH,OAAOna,EAAAA,EAAEgI,aAAa9H,EAAxF,MAA4FuC,KAAK0e,KAAKhH,MAAM,CAACoI,oBAAAA,CAAqBriB,GAAG,MAAcC,EAAE,IAAI8I,YAAYxG,KAAK6e,YAAY,GAAG,IAAI,IAAIlhB,EAAE,EAAEA,EAAEqC,KAAK6e,YAAYlhB,GAAG,EAAED,EAAEC,EAAE,GAAGqC,KAAK0e,KAAKhH,MAAM/Z,GAAG,OAAOJ,EAAAA,EAAE+c,YAAY7c,EAA/H,MAAmIC,EAAE,E,0DCArpJ,MAAM4F,EAAE,IAAQlF,EAAE,CAAC,CAACgD,KAAK,aAAaqP,OAAO,EAAEnP,KAAK/D,EAAAA,GAAE6iB,MAAM/e,MAAM,IAAIG,EAAE,CAACmU,MAAK1X,EAAAA,EAAAA,IAAEG,GAAGoS,WAAWpS,EAAEgS,OAAlF,GAA4F,SAASpP,EAAEvD,EAAEM,GAAG,OAAOJ,EAAAA,EAAAA,IAAEF,EAAE+S,YAAW,CAAC7S,EAAEF,IAAIE,EAAEyD,OAAO3D,EAAE2D,OAAMuV,QAAOhZ,GAAGI,EAAE6D,UAAUuE,IAAIxI,EAAEyD,QAAO8O,KAAIvS,IAAC,CAAIyD,KAAKzD,EAAEyD,KAAKE,KAAK3D,EAAE2D,KAAKD,MAAM1D,EAAE0D,MAAMgf,QAAQ,EAAEC,WAAW3iB,EAAE2iB,aAAY,EAAG7P,OAAO9S,EAAE8S,OAAOL,OAAO3S,EAAE2S,WAAUoD,MAAK,CAAC7V,EAAEF,IAAIM,EAAE6D,UAAUiE,IAAIlI,EAAEyD,MAAMrD,EAAE6D,UAAUiE,IAAIpI,EAAE2D,OAAM,CAAC,SAAS3B,EAAEhC,EAAEM,GAAG,MAAML,EAAE,GAAGS,GAAER,EAAAA,EAAAA,IAAEF,EAAE+S,YAAW,CAAC7S,EAAEF,IAAIE,EAAEyD,OAAO3D,EAAE2D,OAAMuV,QAAOhZ,GAAGI,EAAE6D,UAAUuE,IAAIxI,EAAEyD,QAAO,IAAI,MAAMzD,KAAKQ,EAAE,CAACT,EAAE2R,KAAK,CAACjO,KAAKzD,EAAEyD,KAAKE,KAAK3D,EAAE2D,KAAKD,MAAM1D,EAAE0D,MAAMgf,QAAQ,EAAEC,WAAW3iB,EAAE2iB,aAAY,EAAG7P,OAAO9S,EAAE8S,OAAOL,OAAO3S,EAAE2S,SAAS,MAAMjS,EAAEJ,EAAEwiB,oBAAoB5iB,EAAEyD,MAAM,MAAMjD,GAAG,IAAIA,EAAE8P,SAASvQ,EAAE2R,KAAK,CAACjO,KAAKjD,EAAE,GAAGkD,MAAM1D,EAAE0D,MAAMgf,QAAQ,EAAE/e,KAAK3D,EAAE2D,KAAKgf,WAAW3iB,EAAE2iB,aAAY,EAAG7P,OAAO9S,EAAE8S,OAAOhT,EAAE2S,OAAOA,OAAO3S,EAAE2S,SAAS1S,EAAE2R,KAAK,CAACjO,KAAKjD,EAAE,GAAGkD,MAAM1D,EAAE0D,MAAMgf,QAAQ,EAAE/e,KAAK3D,EAAE2D,KAAKgf,WAAW3iB,EAAE2iB,aAAY,EAAG7P,OAAO9S,EAAE8S,OAAO,EAAEhT,EAAE2S,OAAOA,OAAO3S,EAAE2S,SAAS,CAAC,OAAO1S,EAAE8V,MAAK,CAAC7V,EAAEF,IAAIM,EAAE6D,UAAUiE,IAAIlI,EAAEyD,MAAMrD,EAAE6D,UAAUiE,IAAIpI,EAAE2D,OAAM,CAAC,MAAMtD,EAAE+B,WAAAA,CAAYlC,EAAEF,EAAEM,GAAG,GAAGiC,KAAKwgB,YAAY7iB,EAAEqC,KAAKygB,QAAQhjB,EAAEuC,KAAKmV,cAAcpX,EAAEiC,KAAK0gB,sBAAqB,EAAG1gB,KAAK2gB,qBAAoB,EAAG3gB,KAAK4gB,UAAU5gB,KAAKygB,QAAQjQ,WAAWqQ,MAAKljB,GAAG,QAAQA,EAAEyD,MAAM,aAAazD,EAAEyD,QAAOpB,KAAK4gB,UAAU,MAAM,IAAI/M,MAAM,mDAAmD,CAACzI,OAAAA,GAAUpL,KAAK8gB,cAAarjB,EAAAA,EAAAA,IAAEuC,KAAK8gB,cAAc9gB,KAAK+gB,eAActjB,EAAAA,EAAAA,IAAEuC,KAAK+gB,eAAe/gB,KAAKghB,mBAAkBvjB,EAAAA,EAAAA,IAAEuC,KAAKghB,mBAAmBhhB,KAAKihB,aAAaC,iBAAiBlhB,KAAKmhB,cAAcD,gBAAgB,CAAC,UAAI/Q,GAAS,OAAOnQ,KAAKygB,OAAO,CAACW,WAAAA,CAAYzjB,EAAEF,EAAEM,EAAEL,GAAG,OAAOA,EAAE,CAAC2jB,UAAUzjB,EAAAA,GAAEsP,OAAO7L,MAAM5D,EAAE,EAAEgT,OAAO1S,EAAE,GAAG,CAACsjB,UAAU1jB,EAAE0D,MAAM5D,EAAEgT,OAAO1S,EAAE,CAAC6O,gCAAAA,GAAmC,MAAMjP,EAAE,CAAC,EAAE,IAAI,MAAMF,KAAKuC,KAAKmQ,OAAOK,WAAW/S,EAAEiT,sBAAsB/S,EAAEF,EAAE2D,MAAM3D,EAAEiT,qBAAqB,OAAO/S,CAAC,CAAC2jB,kBAAAA,CAAmB3jB,GAAE,EAAGF,GAAG,IAAIuC,KAAK+gB,cAAc,OAAO,KAAK,MAAMhjB,EAAEiC,KAAKygB,QAAQ/iB,EAAEK,EAAEqS,OAAOnS,EAAE+B,KAAK+gB,cAAcf,QAAQ,EAAEhgB,KAAK+gB,cAAcjC,UAAUlhB,EAAE,GAAG,GAAGD,EAAE,GAAG,MAAMF,EAAEkV,QAAQ2E,IAAI,6DAA6D,IAAI,MAAMnZ,KAAKJ,EAAEyS,WAAW,CAAC,MAAM7S,EAAEF,EAAE8iB,oBAAoBpiB,EAAEiD,MAAM,MAAMzD,GAAG,IAAIA,EAAEsQ,SAASrQ,EAAEyR,KAAK,IAAIlR,EAAEiD,KAAKzD,EAAE,GAAG8S,OAAOtS,EAAEsS,OAAO/S,IAAIE,EAAEyR,KAAK,IAAIlR,EAAEiD,KAAKzD,EAAE,GAAG8S,OAAOtS,EAAEsS,OAAO,EAAE/S,IAAI,CAAC,MAAMH,EAAE,IAAI8S,SAASpS,EAAEkb,QAAQvB,QAAQ,IAAI/Z,EAAEI,EAAEsS,WAAW7S,EAAEC,IAAIE,EAAEmC,KAAK8gB,aAAajC,YAAY,GAAG,MAAM7gB,EAAEgC,KAAK8gB,aAAad,QAAQ,EAAEhgB,KAAK8gB,aAAahC,UAAU,IAAIxb,EAAE,EAAE,MAAMpF,EAAE,GAAG,IAAI,IAAIE,EAAE,EAAEA,EAAEP,EAAEO,IAAI,CAAIT,IAAG2F,EAAEtF,EAAE,EAAEI,GAAGV,GAAE,MAAMD,EAAE,CAAC,EAAE,IAAI,MAAME,IAAI,IAAII,EAAEyS,cAAc5S,GAAG,CAAC,IAAIG,EAAE,GAAGJ,EAAE8S,UAAU9S,EAAEyD,OAAO1D,GAAES,EAAAA,EAAAA,GAAEZ,EAAEI,EAAE2F,GAAG,GAAG3F,EAAE+S,oBAAoB,GAAG3S,GAAG,gBAAgBJ,EAAE+S,uBAAuB,iBAAiBhT,EAAEA,GAAGC,EAAE+S,yBAAyB,IAAI,IAAIjT,EAAE,EAAEA,EAAEC,EAAEuQ,OAAOxQ,IAAIC,EAAED,IAAIE,EAAE+S,oBAAoBjT,EAAEM,GAAGL,CAAC,CAAC4F,GAAG5F,EAAEQ,EAAEmR,KAAK5R,EAAE,CAAC,MAAM,CAAC6S,SAASpS,EAAEiS,OAAOpS,EAAE,CAACwjB,OAAAA,CAAQ5jB,EAAEF,GAAG,GAAGuC,KAAK+gB,eAAe/gB,KAAK8gB,aAAa9gB,KAAK8gB,aAAaxB,OAAOxa,KAAKC,IAAIpH,EAAE2F,IAAItD,KAAK+gB,cAAczB,OAAOxa,KAAKC,IAAItH,EAAE6F,IAAItD,KAAKghB,mBAAmBhhB,KAAKghB,kBAAkB1B,OAAOxa,KAAKC,IAAItH,EAAE6F,QAAQ,CAAC,MAAMvF,EAAEiC,KAAKygB,QAAQrQ,OAAO5J,YAAYC,kBAAkBzG,KAAK8gB,aAAa,IAAIpjB,EAAE,QAAQoH,KAAKC,IAAIpH,EAAE2F,GAAG,EAAEtD,KAAKwgB,aAAaxgB,KAAK+gB,cAAc,IAAIrjB,EAAE,SAASoH,KAAKC,IAAItH,EAAE6F,GAAGvF,EAAEiC,KAAKwgB,aAAaxgB,KAAKmV,gBAAgBnV,KAAKghB,kBAAkB,IAAItjB,EAAE,SAASoH,KAAKC,IAAItH,EAAE6F,GAAnqG,EAAwqGkD,YAAYC,kBAAkBzG,KAAKwgB,aAAa,CAAC,CAACjM,MAAAA,CAAO5W,GAAG,MAAMF,EAAEE,EAAEwS,OAAOC,OAAOrS,EAAEJ,EAAEyb,QAAQ7I,WAAW/J,YAAYC,kBAAkB/I,EAAEC,EAAE2S,SAASC,WAAW9S,EAAEuC,KAAKuhB,QAAQxjB,EAAEL,GAAG,MAAM4S,SAASnS,EAAEib,QAAQnb,GAAGN,EAAEC,EAAEoC,KAAK+gB,cAAcd,OAAO9hB,EAAE,EAAEA,EAAEoS,WAAW9S,EAAE,GAAGF,EAAE,IAAIiJ,YAAY9I,GAAoH,OAAjH,IAAIF,aAAaD,EAAEqa,QAAQ+H,KAAK,KAAK3f,KAAKghB,mBAAmBhhB,KAAKghB,kBAAkBf,OAAO1iB,EAAE,EAAEA,EAAEgT,WAAniH,EAAgjH,GAAS,CAACiR,WAAW5jB,EAAE6jB,UAAUzhB,KAAK8gB,aAAab,OAAOhiB,EAAE,EAAEA,EAAEsS,WAAW,EAAE3S,GAAG,CAACgY,8BAAAA,CAA+BjY,EAAEF,EAAEM,EAAEL,GAAG,IAAI,IAAIS,EAAEV,EAAEU,EAAEV,EAAEM,EAAEI,IAAI,CAAC,MAAM4P,YAAYtQ,EAAEuQ,YAAYjQ,GAAGJ,EAAEQ,GAAG6B,KAAKghB,kBAAkBtB,YAAYjiB,EAAEA,EAAEM,EAAEL,EAAE,CAAC,CAACgkB,yBAAAA,CAA0B/jB,EAAEF,GAAG,MAAMM,EAAEJ,EAAE+P,QAAQjQ,GAAG,OAAOuC,KAAKghB,kBAAkBpB,OAAO7hB,EAAEgQ,YAAY,CAACqH,cAAAA,CAAezX,EAAEF,EAAEC,EAAES,GAAG,MAAM0P,WAAW5P,EAAE6P,WAAWlQ,EAAEmQ,YAAYxQ,EAAEyQ,YAAYnQ,GAAGJ,EAAEuC,KAAKuhB,QAAQ3jB,EAAEC,GAAG,MAAMG,EAAEL,EAAEijB,UAAUtd,EAAE5F,GAAGM,EAAE0S,qBAAqB,GAAGxS,EAAEC,GAAGH,EAAE0S,qBAAqB,GAAGtS,EAAEJ,EAAEyS,OAAOjP,GAAEzD,EAAAA,EAAAA,IAAEuF,EAAEpF,GAAG8C,EAAEhB,KAAK+gB,cAAcb,SAASviB,EAAEojB,cAAcxjB,EAAEM,EAAE2D,EAAEpD,GAAG4B,KAAKghB,mBAAmBrjB,EAAEqjB,mBAAmBhhB,KAAKghB,kBAAkBd,SAASviB,EAAEqjB,kBAAkBzjB,EAAEM,EAAE,EAAE,GAAG,MAAM4B,EAAEO,KAAK8gB,aAAaZ,SAASviB,EAAEmjB,aAAa7iB,EAAEL,EAAEoD,EAAEzD,EAAE,GAAGO,EAAEL,EAAEqB,QAAQ,OAAOhB,EAAEiQ,YAAY/M,EAAElD,EAAE+P,WAAWpO,EAAE3B,EAAEmX,SAAS,EAAEnX,CAAC,CAAC4W,MAAAA,CAAO/W,EAAEF,EAAEM,EAAEL,GAAGsC,KAAK8gB,aAAazI,KAAK1a,EAAEF,GAAGuC,KAAK+gB,cAAc1I,KAAKta,EAAEL,GAAGsC,KAAKghB,mBAAmBhhB,KAAKghB,kBAAkB3I,KAAKta,EAAEL,EAAE,CAAC4V,MAAAA,GAAStT,KAAK0gB,sBAAqB,EAAG1gB,KAAK2gB,qBAAoB,CAAE,CAACxT,cAAAA,CAAexP,EAAEF,GAAG,IAAIuC,KAAK+gB,gBAAgB/gB,KAAK8gB,eAAe9gB,KAAK+gB,cAAc/B,WAAW,OAAO,KAAK,GAAGhf,KAAK0gB,qBAAqB,CAAC,IAAI1gB,KAAK+gB,cAAchC,aAAa/e,KAAK8gB,aAAa/B,aAAa/e,KAAKghB,mBAAmBjC,eAAe/e,KAAK+gB,cAAc5B,aAAanf,KAAK8gB,aAAa3B,aAAanf,KAAKghB,mBAAmBhhB,KAAKghB,kBAAkB7B,aAAanf,KAAKmhB,cAAcD,iBAAiBlhB,KAAKmhB,aAAa,MAAMnhB,KAAK+gB,cAAczN,SAAStT,KAAK8gB,aAAaxN,SAAStT,KAAKghB,mBAAmBhhB,KAAKghB,kBAAkB1N,UAAUtT,KAAKmhB,aAAa,CAAC,MAAMpjB,EAAEiC,KAAK8gB,aAAajB,aAAaliB,GAAE,GAAID,EAAE,IAAIqT,IAAI,CAAC,CAAC,WAAW,IAAI/S,EAAAA,EAAEgD,EAAEhB,KAAKmQ,OAAO1S,GAAGuC,KAAK+gB,cAAclB,aAAaliB,OAAOqC,KAAKghB,mBAAmBtjB,EAAEuV,IAAI,aAAa,IAAIjV,EAAAA,EAAEgD,EAAEQ,EAAE/D,GAAGuC,KAAKghB,kBAAkBnB,aAAaliB,KAAKqC,KAAKmhB,aAAa,IAAItjB,EAAAA,EAAEF,EAAED,EAAEK,EAAE,CAACiC,KAAK0gB,sBAAqB,CAAE,CAAC,OAAO1gB,KAAKmhB,YAAY,CAAClU,aAAAA,CAActP,EAAEF,GAAG,IAAIuC,KAAK+gB,gBAAgB/gB,KAAK8gB,eAAe9gB,KAAK+gB,cAAc/B,WAAW,OAAO,KAAK,GAAGhf,KAAK2gB,uBAAuB3gB,KAAK+gB,cAAchC,aAAa/e,KAAK8gB,aAAa7B,4BAA4Bjf,KAAK+gB,cAAc5B,aAAanf,KAAK8gB,aAAa3B,aAAanf,KAAKghB,mBAAmB7B,aAAanf,KAAKihB,aAAaC,iBAAiBlhB,KAAKihB,YAAY,MAAMjhB,KAAK+gB,cAAczN,SAAStT,KAAK8gB,aAAaxN,SAAStT,KAAKghB,mBAAmB1N,UAAUtT,KAAKihB,aAAa,CAAC,MAAMljB,EAAEiC,KAAK8gB,aAAajB,aAAaliB,GAAE,GAAID,EAAE,IAAIqT,IAAI,CAAC,CAAC,WAAW,IAAI/S,EAAAA,EAAEyB,EAAEO,KAAKmQ,OAAO1S,GAAGuC,KAAK+gB,cAAclB,aAAaliB,OAAOqC,KAAKghB,mBAAmBtjB,EAAEuV,IAAI,aAAa,IAAIjV,EAAAA,EAAEgD,EAAEQ,EAAE/D,GAAGuC,KAAKghB,kBAAkBnB,aAAaliB,KAAKqC,KAAKihB,YAAY,IAAIpjB,EAAAA,EAAEF,EAAED,EAAEK,GAAGiC,KAAK2gB,qBAAoB,CAAE,CAAC,OAAO3gB,KAAKihB,WAAW,CAAC,eAAI/J,GAAc,MAAM,CAACF,UAAUhX,KAAK+gB,cAAc7J,YAAYF,UAAUhX,KAAK8gB,aAAa5J,YAAYF,UAAUC,cAAcjX,KAAK+gB,cAAc7J,YAAYD,cAAcjX,KAAK8gB,aAAa5J,YAAYD,cAAchI,OAAOjP,KAAK+gB,cAAc7J,YAAY/H,MAAMnP,KAAK8gB,aAAa5J,YAAY,CAACxD,SAAAA,CAAU/V,GAAGqC,KAAK+gB,eAAe/gB,KAAK+gB,cAAcrN,UAAU/V,EAAEsR,OAAO5N,MAAM1D,EAAEsR,OAAOC,YAAYlP,KAAK8gB,cAAc9gB,KAAK8gB,aAAapN,UAAU/V,EAAEwR,MAAM9N,MAAM1D,EAAEwR,MAAMD,YAAYlP,KAAKghB,mBAAmBhhB,KAAKghB,kBAAkBtN,UAAU/V,EAAEsR,OAAO5N,MAAM1D,EAAEsR,OAAOC,WAAW,E,kDCAjvO,MAAMvR,EAAE,CAACgkB,cAAajkB,EAAAA,EAAAA,GAAE,8BAA8BkkB,gBAAelkB,EAAAA,EAAAA,GAAE,8B,kDCAvE,MAAMA,EAAE,CAACikB,cAAahkB,EAAAA,EAAAA,GAAE,0BAA0BikB,gBAAejkB,EAAAA,EAAAA,GAAE,0B,mCCA4E,MAAMF,EAAE,I,SAAIE,IAA3FD,ECAhH,CAACmkB,WAAW,CAAC,kBAAkB,wEAAwE,kBAAkB,oPAAoPC,QAAQ,CAAC,eAAe,2LAA2L,eAAe,wJAAwJlP,MAAM,CAACmP,QAAQ,CAAC,eAAe,iGAAiG,eAAe,8oBAA8oBC,IAAI,CAACA,IAAI,CAAC,WAAW,8UAA8U,WAAW,i6BAAi6BC,UAAU,CAAC,eAAe,i2CAAi2C,gBAAgB,o1BAAo1B,WAAW,wpCAAwpCC,QAAQ,CAACC,eAAe,CAAC,sBAAsB,onBAAonB,sBAAsB,uJAAuJC,UAAU,CAAC,YAAY,ikCAAikC,iBAAiB,2tBAA2tB,gBAAgB,uMAAuMC,UAAU,CAAC,qBAAqB,g3DAAg3D,mBAAmB,ohBAAohB,iBAAiB,s7CAAs7C1C,KAAK,CAAC,cAAc,uyBAAuyB,YAAY,szFAAszF,YAAY,24KAA24K,eAAe,svBAAsvB2C,QAAQ,CAAC,cAAc,20CAA20CC,KAAK,CAAC,cAAc,29CAA29CC,kBAAkB,CAAC,cAAc,kHAAkH,yBAAyB,mmBAAmmB,yBAAyB,4lCAA4lC,eAAe,owFAAowF,YAAY,6VAA6V,YAAY,w6EAAw6EC,MAAM,CAAC,cAAc,yUAAyU,aAAa,sCAAsC,aAAa,4tFAA4tFC,KAAK,CAAC,cAAc,gZAAgZ,eAAe,q0BAAq0B,YAAY,urBAAurB,YAAY,48DAA48DC,IAAI,CAAC,kBAAkB,6cAA6c,WAAW,62HAA62H,WAAW,+vIAA+vIC,OAAO,CAACF,KAAK,CAAC,cAAc,+hBAA+hB,YAAY,8rEAA8rE,YAAY,k4EAAk4E,0BAA0B,qTAAqTG,KAAK,CAAC,cAAc,6SAA6S,eAAe,2CAA2C,YAAY,kmBAAkmB,YAAY,k0EAAk0E,aAAa,61CAA61C,eAAe,s7FAAs7F,UAAU,8vJAA8vJ,kBAAkB,CAACC,KAAK,CAAC,YAAY,4IAA4IC,MAAM,CAACC,UAAU,CAAC,iBAAiB,wmCAAwmCC,aAAa,CAAC,oBAAoB,u2BAAu2BC,mBAAmB,CAAC,0BAA0B,miBAAmiBC,KAAK,CAACF,aAAa,CAAC,oBAAoB,o2BAAo2B,cAAc,CAAC,mBAAmB,gxBAAgxBG,IAAI,CAAC,WAAW,2mBAA2mB,UAAU,CAAC,eAAe,kwBAAkwB,cAAc,CAACJ,UAAU,CAAC,iBAAiB,yfAAyf,cAAc,CAAC,YAAY,CAAC,iBAAiB,kkEAAkkEK,MAAM,CAAC,aAAa,u0BAAu0B,eAAe,CAAC,oBAAoB,o1BAAo1BC,aAAa,CAAC,oBAAoB,uUAAuUC,GAAG,CAAC,UAAU,4KAA4KC,OAAO,CAACC,OAAO,CAAC,cAAc,0hCAA0hC,kBAAkB,i3CAAi3CC,KAAK,CAAC,sBAAsB,oNAAoN,wBAAwB,mRAAmRC,QAAQ,CAAC,eAAe,2gBAA2gB,eAAe,mPAAmPC,UAAU,CAAC,iBAAiB,qSAAqS,iBAAiB,sgHAAsgHC,YAAY,CAAC,mBAAmB,ywBAAywB,mBAAmB,84BAA84B,UAAU,+9DAA+9DC,OAAO,CAAC,cAAc,wIAAwI,cAAc,0mCAA0mCC,UAAU,CAAC,iBAAiB,gXAAgX,iBAAiB,8LAA8LC,OAAO,CAAC,cAAc,85BAA85B,cAAc,q3BAAq3BnZ,QAAQ,CAAC,eAAe,6DAA6D,eAAe,oIAAoIoZ,KAAK,CAAC,yBAAyB,4FAA4F,kBAAkB,oRAAoR,kBAAkB,6vCAA6vCC,SAAS,CAAC,gBAAgB,wLAAwL,gBAAgB,kaAAkaC,KAAK,CAAC,aAAa,kfAAkf,gBAAgB,8ODAx79F,SAASxmB,GAAG,IAAIC,EAAEF,EAAE,OAAOC,EAAEymB,MAAM,KAAK5Z,SAAQ9M,IAAIE,IAAIA,EAAEA,EAAEF,GAAG,IAAGE,CAAC,IAAxF,IAAWF,EAAmG,SAASH,EAAEG,GAAG,OAAOD,EAAE4mB,gBAAgB3mB,EAAE,C,mGEA5F,MAAMA,EAAE,CAAC,IAAID,EAAAA,EAAE,WAAW,EAAEE,EAAAA,GAAE2mB,eAAe,EAAE,IAAInmB,EAAE,CAAC,IAAIV,EAAAA,EAAE,QAAQ,EAAEE,EAAAA,GAAE4mB,KAAK,EAAE,IAAIhnB,EAAE,CAAC,IAAIE,EAAAA,EAAE,QAAQ,EAAEE,EAAAA,GAAE4mB,KAAK,EAAE,GAAG,IAAI9mB,EAAAA,EAAE,QAAQ,EAAEE,EAAAA,GAAE4mB,KAAK,EAAE,IAAIxmB,GAAEH,EAAAA,EAAAA,IAAEF,E,kCCA3T,MAAMD,EAAEoC,WAAAA,CAAYpC,EAAEU,GAAG6B,KAAKmQ,OAAO1S,EAAEuC,KAAK4X,OAAOzZ,CAAC,E","sources":["../node_modules/@arcgis/core/core/libs/gl-matrix-2/factories/vec3f32.js","../node_modules/@arcgis/core/core/libs/gl-matrix-2/factories/vec4f32.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js","../node_modules/@arcgis/core/views/2d/engine/brushes.js","../node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/config.js","../node_modules/@arcgis/core/views/2d/engine/webgl/AFeatureTile.js","../node_modules/@arcgis/core/views/2d/engine/webgl/FeatureDisplayList.js","../node_modules/@arcgis/core/views/2d/engine/webgl/ReshufflePlan.js","../node_modules/@arcgis/core/views/2d/engine/webgl/util/Reader.js","../node_modules/@arcgis/core/views/2d/engine/webgl/mesh/meshDebugUtils.js","../node_modules/@arcgis/core/views/2d/engine/webgl/FeatureTile.js","../node_modules/@arcgis/core/views/2d/engine/webgl/GeometryUtils.js","../node_modules/@arcgis/core/views/2d/engine/webgl/PooledUint32Array.js","../node_modules/@arcgis/core/views/2d/engine/webgl/TiledDisplayObject.js","../node_modules/@arcgis/core/views/2d/engine/webgl/Mesh2D.js","../node_modules/@arcgis/core/views/2d/engine/webgl/ClippingInfo.js","../node_modules/@arcgis/core/views/2d/engine/webgl/WGLContainer.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushTileDebugInfo.js","../node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/FreeList.js","../node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/Buffer.js","../node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/MappedMesh.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js","../node_modules/@arcgis/core/views/webgl/VertexAttributeLayouts.js","../node_modules/@arcgis/core/views/webgl/VertexBuffer.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nfunction n(){return new Float32Array(3)}function t(n){const t=new Float32Array(3);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t}function r(n,t,r){const e=new Float32Array(3);return e[0]=n,e[1]=t,e[2]=r,e}function e(){return n()}function o(){return r(1,1,1)}function u(){return r(1,0,0)}function c(){return r(0,1,0)}function i(){return r(0,0,1)}const a=e(),f=o(),l=u(),s=c(),_=i(),y=Object.freeze(Object.defineProperty({__proto__:null,ONES:f,UNIT_X:l,UNIT_Y:s,UNIT_Z:_,ZEROS:a,clone:t,create:n,fromValues:r,ones:o,unitX:u,unitY:c,unitZ:i,zeros:e},Symbol.toStringTag,{value:\"Module\"}));export{f as ONES,l as UNIT_X,s as UNIT_Y,_ as UNIT_Z,a as ZEROS,t as clone,n as create,r as fromValues,o as ones,u as unitX,c as unitY,i as unitZ,y as v,e as zeros};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nfunction n(){return new Float32Array(4)}function t(n){const t=new Float32Array(4);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function r(n,t,r,e){const o=new Float32Array(4);return o[0]=n,o[1]=t,o[2]=r,o[3]=e,o}function e(){return n()}function o(){return r(1,1,1,1)}function u(){return r(1,0,0,0)}function c(){return r(0,1,0,0)}function i(){return r(0,0,1,0)}function f(){return r(0,0,0,1)}const a=e(),l=o(),_=u(),s=c(),y=i(),N=f(),T=Object.freeze(Object.defineProperty({__proto__:null,ONES:l,UNIT_W:N,UNIT_X:_,UNIT_Y:s,UNIT_Z:y,ZEROS:a,clone:t,create:n,fromValues:r,ones:o,unitW:f,unitX:u,unitY:c,unitZ:i,zeros:e},Symbol.toStringTag,{value:\"Module\"}));export{l as ONES,N as UNIT_W,_ as UNIT_X,s as UNIT_Y,y as UNIT_Z,a as ZEROS,t as clone,n as create,r as fromValues,o as ones,f as unitW,u as unitX,c as unitY,i as unitZ,T as v,e as zeros};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{fromValues as e}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{createProgramDescriptor as r}from\"../Utils.js\";import t from\"./WGLBrush.js\";import{background as o}from\"../shaders/BackgroundPrograms.js\";import{PrimitiveType as s,DataType as i}from\"../../../../webgl/enums.js\";import{createProgram as a}from\"../../../../webgl/ProgramTemplate.js\";const n=()=>r(\"clip\",[{location:0,name:\"a_pos\",count:2,type:i.SHORT}]);class l extends t{constructor(){super(...arguments),this._color=e(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:e}){e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setFaceCullingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(7680,7680,7681),e.setStencilWriteMask(255),e.setStencilFunction(519,0,255)}draw(e,r){const{context:t,state:l,requestRender:m,allowDelayedRender:p}=e,c=n(),d=r.getVAO(t,l,c.bufferLayout);null!=d.indexBuffer&&(this._program??=a(t,o,d.locations),!p||null==m||this._program.compiled?(t.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",l.displayMat3),t.bindVAO(d),t.drawElements(s.TRIANGLES,d.indexBuffer.size,i.UNSIGNED_INT,0),t.bindVAO(null)):m())}}export{l as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{nextPowerOfTwo as t}from\"../../../../../core/mathUtils.js\";import{disposeMaybe as r}from\"../../../../../core/maybe.js\";import{create as e}from\"../../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{fromValues as o}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{vtlTextureBindingUnitSprites as i,vtlHighResCutoff as s}from\"../definitions.js\";import a from\"./WGLBrush.js\";import{BufferObject as n}from\"../../../../webgl/BufferObject.js\";import{PrimitiveType as c}from\"../../../../webgl/enums.js\";import{VertexArrayObject as l}from\"../../../../webgl/VertexArrayObject.js\";import{VertexBuffer as m}from\"../../../../webgl/VertexBuffer.js\";class f extends a{constructor(){super(...arguments),this._color=o(1,0,0,1),this._patternMatrix=e(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao=r(this._vao)}drawMany(r,e){const{context:o,painter:a,requestRender:n,allowDelayedRender:l}=r;this._loadWGLResources(r);const m=r.displayLevel,f=r.styleLayer,u=f.backgroundMaterial,p=a.vectorTilesMaterialManager,_=f.getPaintValue(\"background-color\",m),d=f.getPaintValue(\"background-opacity\",m),g=f.getPaintValue(\"background-pattern\",m),h=void 0!==g,x=1|window.devicePixelRatio,b=r.spriteMosaic;let y,M;const v=x>s?2:1,w=this._programOptions;w.pattern=h;const j=p.getMaterialProgram(o,u,w);if(!l||null==n||j.compiled){if(o.bindVAO(this._vao),o.useProgram(j),h){const t=b.getMosaicItemPosition(g,!0);if(null!=t){const{tl:r,br:e,page:s}=t;y=e[0]-r[0],M=e[1]-r[1];const a=b.getPageSize(s);null!=a&&(b.bind(o,9729,s,i),j.setUniform4f(\"u_tlbr\",r[0],r[1],e[0],e[1]),j.setUniform2fv(\"u_mosaicSize\",a),j.setUniform1i(\"u_texture\",i))}j.setUniform1f(\"u_opacity\",d)}else{const t=_[3]*d;this._color[0]=t*_[0],this._color[1]=t*_[1],this._color[2]=t*_[2],this._color[3]=t,j.setUniform4fv(\"u_color\",this._color)}j.setUniform1f(\"u_depth\",f.z||0);for(const r of e){if(j.setUniform1f(\"u_coord_range\",r.rangeX),j.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.displayViewScreenMat3),h){const e=Math.max(2**(Math.round(m)-r.key.level),1),o=v*r.width*e,i=o/t(y),s=o/t(M);this._patternMatrix[0]=i,this._patternMatrix[4]=s,j.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}o.setStencilFunction(514,0,255),o.drawArrays(c.TRIANGLE_STRIP,0,4)}}else n()}_loadWGLResources(t){if(this._vao)return;const{context:r,styleLayer:e}=t,o=e.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),s=n.createVertex(r,35044,i);this._vao=new l(r,new m(o.geometryLayout,s))}}export{f as WGLBrushVTLBackground};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport e from\"./WGLBrush.js\";import{PrimitiveType as t,DataType as r}from\"../../../../webgl/enums.js\";class a extends e{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(e,a){const{context:i,displayLevel:n,requiredLevel:l,state:s,painter:o,spriteMosaic:c,styleLayerUID:u,requestRender:d,allowDelayedRender:f}=e;if(!a.some(e=>e.layerData.get(u)?.circleIndexCount??!1))return;const p=e.styleLayer,m=p.circleMaterial,y=o.vectorTilesMaterialManager,g=1.2,M=p.getPaintValue(\"circle-translate\",n),v=p.getPaintValue(\"circle-translate-anchor\",n),x=this._programOptions,_=y.getMaterialProgram(i,m,x);if(f&&null!=d&&!_.compiled)return void d();i.useProgram(_),_.setUniformMatrix3fv(\"u_displayMat3\",1===v?s.displayMat3:s.displayViewMat3),_.setUniform2fv(\"u_circleTranslation\",M),_.setUniform1f(\"u_depth\",p.z),_.setUniform1f(\"u_antialiasingWidth\",g);let I=-1;for(const U of a){if(!U.layerData.has(u))continue;U.key.level!==I&&(I=U.key.level,m.setDataUniforms(_,n,p,I,c));const e=U.layerData.get(u);if(!e.circleIndexCount)continue;e.prepareForRendering(i);const a=e.vao;null!=a&&(i.bindVAO(a),_.setUniformMatrix3fv(\"u_dvsMat3\",U.transforms.displayViewScreenMat3),l!==U.key.level?i.setStencilFunction(514,U.stencilRef,255):i.setStencilFunction(516,255,255),i.drawElements(t.TRIANGLES,e.circleIndexCount,r.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.circleIndexStart),U.triangleCount+=e.circleIndexCount/3)}}}export{a as WGLBrushVTLCircle};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{vtlTextureBindingUnitSprites as t,vtlHighResCutoff as e}from\"../definitions.js\";import i from\"./WGLBrush.js\";import{PrimitiveType as n,DataType as a}from\"../../../../webgl/enums.js\";const l=1/65536;class r extends i{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(t,e){const{displayLevel:i,renderPass:n,spriteMosaic:a,styleLayerUID:l}=t;let r=!1;for(const _ of e)if(_.layerData.has(l)){const t=_.layerData.get(l);if(t.fillIndexCount>0||t.outlineIndexCount>0){r=!0;break}}if(!r)return;const o=t.styleLayer,s=o.getPaintProperty(\"fill-pattern\"),f=void 0!==s,u=f&&s.isDataDriven;let c;if(f&&!u){const t=s.getValue(i);c=a.getMosaicItemPosition(t,!0)}const d=!f&&o.getPaintValue(\"fill-antialias\",i);let p=!0,m=1;if(!f){const t=o.getPaintProperty(\"fill-color\"),e=o.getPaintProperty(\"fill-opacity\");if(!t?.isDataDriven&&!e?.isDataDriven){const t=o.getPaintValue(\"fill-color\",i);m=o.getPaintValue(\"fill-opacity\",i)*t[3],m>=1&&(p=!1)}}if(p&&\"opaque\"===n)return;const y=o.getPaintValue(\"fill-translate\",i),g=o.getPaintValue(\"fill-translate-anchor\",i);(p||\"translucent\"!==n)&&this._drawFill(t,l,o,e,y,g,f,c,u);const M=!o.hasDataDrivenOutlineColor&&o.outlineUsesFillColor&&m<1;d&&\"opaque\"!==n&&!M&&this._drawOutline(t,l,o,e,y,g)}_drawFill(i,r,o,s,f,u,c,d,p){if(c&&!p&&null==d)return;const{context:m,displayLevel:y,state:g,painter:M,pixelRatio:_,spriteMosaic:v,requestRender:P,allowDelayedRender:E}=i,U=o.fillMaterial,x=M.vectorTilesMaterialManager,D=_>e?2:1,I=this._fillProgramOptions;I.pattern=c;const S=x.getMaterialProgram(m,U,I);if(E&&null!=P&&!S.compiled)return void P();if(m.useProgram(S),null!=d){const{page:e}=d,i=v.getPageSize(e);null!=i&&(v.bind(m,9729,e,t),S.setUniform2fv(\"u_mosaicSize\",i),S.setUniform1i(\"u_texture\",t))}S.setUniformMatrix3fv(\"u_displayMat3\",1===u?g.displayMat3:g.displayViewMat3),S.setUniform2fv(\"u_fillTranslation\",f),S.setUniform1f(\"u_depth\",o.z+l);let h=-1;for(const e of s){if(!e.layerData.has(r))continue;e.key.level!==h&&(h=e.key.level,U.setDataUniforms(S,y,o,h,v));const i=e.layerData.get(r);if(!i.fillIndexCount)continue;i.prepareForRendering(m);const l=i.fillVAO;if(null!=l){if(m.bindVAO(l),S.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),m.setStencilFunction(514,e.stencilRef,255),c){const t=Math.max(2**(Math.round(y)-e.key.level),1),i=e.rangeX/(D*e.width*t);S.setUniform1f(\"u_patternFactor\",i)}if(p){const e=i.patternMap;if(!e)continue;for(const[i,l]of e){const e=v.getPageSize(i);null!=e&&(v.bind(m,9729,i,t),S.setUniform2fv(\"u_mosaicSize\",e),S.setUniform1i(\"u_texture\",t),m.drawElements(n.TRIANGLES,l[1],a.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*l[0]))}}else m.drawElements(n.TRIANGLES,i.fillIndexCount,a.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i.fillIndexStart);e.triangleCount+=i.fillIndexCount/3}}}_drawOutline(t,e,i,r,o,s){const{context:f,displayLevel:u,state:c,painter:d,pixelRatio:p,spriteMosaic:m,requestRender:y,allowDelayedRender:g}=t,M=i.outlineMaterial,_=d.vectorTilesMaterialManager,v=.75/p,P=this._outlineProgramOptions,E=_.getMaterialProgram(f,M,P);if(g&&null!=y&&!E.compiled)return void y();f.useProgram(E),E.setUniformMatrix3fv(\"u_displayMat3\",1===s?c.displayMat3:c.displayViewMat3),E.setUniform2fv(\"u_fillTranslation\",o),E.setUniform1f(\"u_depth\",i.z+l),E.setUniform1f(\"u_outline_width\",v);let U=-1;for(const l of r){if(!l.layerData.has(e))continue;l.key.level!==U&&(U=l.key.level,M.setDataUniforms(E,u,i,U,m));const t=l.layerData.get(e);if(t.prepareForRendering(f),!t.outlineIndexCount)continue;const r=t.outlineVAO;null!=r&&(f.bindVAO(r),E.setUniformMatrix3fv(\"u_dvsMat3\",l.transforms.displayViewScreenMat3),f.setStencilFunction(514,l.stencilRef,255),f.drawElements(n.TRIANGLES,t.outlineIndexCount,a.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t.outlineIndexStart),l.triangleCount+=t.outlineIndexCount/3)}}}export{r as WGLBrushVTLFill};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{vtlTextureBindingUnitSprites as e}from\"../definitions.js\";import t from\"./WGLBrush.js\";import{PrimitiveType as i,DataType as n}from\"../../../../webgl/enums.js\";class a extends t{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(t,a){const{context:r,displayLevel:o,state:s,painter:l,pixelRatio:f,spriteMosaic:u,styleLayerUID:c,requestRender:d,allowDelayedRender:m}=t;if(!a.some(e=>e.layerData.get(c)?.lineIndexCount??!1))return;const p=t.styleLayer,g=p.lineMaterial,y=l.vectorTilesMaterialManager,M=p.getPaintValue(\"line-translate\",o),_=p.getPaintValue(\"line-translate-anchor\",o),v=p.getPaintProperty(\"line-pattern\"),U=void 0!==v,E=U&&v.isDataDriven;let x,I;if(U&&!E){const e=v.getValue(o);x=u.getMosaicItemPosition(e)}let P=!1;if(!U){const e=p.getPaintProperty(\"line-dasharray\");if(I=void 0!==e,P=I&&e.isDataDriven,I&&!P){const t=e.getValue(o),i=p.getDashKey(t,p.getLayoutValue(\"line-cap\",o));x=u.getMosaicItemPosition(i)}}const D=1/f,S=this._programOptions;S.pattern=U,S.sdf=I;const N=y.getMaterialProgram(r,g,S);if(m&&null!=d&&!N.compiled)return void d();if(r.useProgram(N),N.setUniformMatrix3fv(\"u_displayViewMat3\",s.displayViewMat3),N.setUniformMatrix3fv(\"u_displayMat3\",1===_?s.displayMat3:s.displayViewMat3),N.setUniform2fv(\"u_lineTranslation\",M),N.setUniform1f(\"u_depth\",p.z),N.setUniform1f(\"u_antialiasing\",D),x&&null!=x){const{page:t}=x,i=u.getPageSize(t);null!=i&&(u.bind(r,9729,t,e),N.setUniform2fv(\"u_mosaicSize\",i),N.setUniform1i(\"u_texture\",e))}let T=-1;for(const V of a){if(!V.layerData.has(c))continue;V.key.level!==T&&(T=V.key.level,g.setDataUniforms(N,o,p,T,u));const t=2**(o-T)/f;N.setUniform1f(\"u_zoomFactor\",t);const a=V.layerData.get(c);if(!a.lineIndexCount)continue;a.prepareForRendering(r);const s=a.vao;if(null!=s){if(r.bindVAO(s),N.setUniformMatrix3fv(\"u_dvsMat3\",V.transforms.displayViewScreenMat3),r.setStencilFunction(514,V.stencilRef,255),E||P){const t=a.patternMap;if(!t)continue;for(const[a,o]of t){const t=u.getPageSize(a);null!=t&&(u.bind(r,9729,a,e),N.setUniform2fv(\"u_mosaicSize\",t),N.setUniform1i(\"u_texture\",e),r.drawElements(i.TRIANGLES,o[1],n.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*o[0]))}}else r.drawElements(i.TRIANGLES,a.lineIndexCount,n.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*a.lineIndexStart);V.triangleCount+=a.lineIndexCount/3}}}}export{a as WGLBrushVTLLine};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{create as e,fromValues as t}from\"../../../../../core/libs/gl-matrix-2/factories/vec2f32.js\";import{fadeDuration as i}from\"../../vectorTiles/decluttering/config.js\";import{vtlTextureBindingUnitSprites as a,vtlTextureBindingUnitGlyphs as r}from\"../definitions.js\";import{degToByte as n}from\"../GeometryUtils.js\";import s from\"./WGLBrush.js\";import{PrimitiveType as o,DataType as l}from\"../../../../webgl/enums.js\";const f=1/65536;class c extends s{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=e()}dispose(){}drawMany(e,t){const i=e.styleLayer;this._drawIcons(e,i,t),this._drawText(e,i,t)}_drawIcons(e,t,r){const{context:s,displayLevel:o,painter:l,spriteMosaic:f,state:c,styleLayerUID:u,requestRender:p,allowDelayedRender:m}=e,g=t.iconMaterial,d=l.vectorTilesMaterialManager;let y,_=!1;for(const i of r)if(i.layerData.has(u)&&(y=i.layerData.get(u),y.iconPerPageElementsMap.size>0)){_=!0;break}if(!_)return;const h=t.getPaintValue(\"icon-translate\",o),M=t.getPaintValue(\"icon-translate-anchor\",o);let U=t.getLayoutValue(\"icon-rotation-alignment\",o);2===U&&(U=0===t.getLayoutValue(\"symbol-placement\",o)?1:0);const x=0===U,P=t.getLayoutValue(\"icon-keep-upright\",o)&&x,S=y.isIconSDF,E=this._iconProgramOptions;E.sdf=S;const v=d.getMaterialProgram(s,g,E);if(m&&null!=p&&!v.compiled)return void p();s.useProgram(v),v.setUniformMatrix3fv(\"u_displayViewMat3\",0===U?c.displayViewMat3:c.displayMat3),v.setUniformMatrix3fv(\"u_displayMat3\",1===M?c.displayMat3:c.displayViewMat3),v.setUniform2fv(\"u_iconTranslation\",h),v.setUniform1f(\"u_depth\",t.z),v.setUniform1f(\"u_mapRotation\",n(c.rotation)),v.setUniform1f(\"u_keepUpright\",P?1:0),v.setUniform1f(\"u_level\",10*o),v.setUniform1i(\"u_texture\",a),v.setUniform1f(\"u_fadeDuration\",i/1e3);let D=-1;for(const i of r){if(!i.layerData.has(u))continue;if(i.key.level!==D&&(D=i.key.level,g.setDataUniforms(v,o,t,D,f)),y=i.layerData.get(u),0===y.iconPerPageElementsMap.size)continue;y.prepareForRendering(s),y.updateOpacityInfo();const a=y.iconVAO;if(null!=a){s.bindVAO(a),v.setUniformMatrix3fv(\"u_dvsMat3\",i.transforms.displayViewScreenMat3),v.setUniform1f(\"u_time\",(performance.now()-y.lastOpacityUpdate)/1e3);for(const[t,a]of y.iconPerPageElementsMap)this._renderIconRange(e,v,a,t,i)}}}_renderIconRange(e,t,i,r,n){const{context:s,spriteMosaic:f}=e;this._spritesTextureSize[0]=f.getWidth(r)/4,this._spritesTextureSize[1]=f.getHeight(r)/4,t.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),f.bind(s,9729,r,a),this._setStencilState(e,n),s.drawElements(o.TRIANGLES,i[1],l.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]),n.triangleCount+=i[1]/3}_drawText(e,a,s){const{context:o,displayLevel:l,glyphMosaic:c,painter:u,pixelRatio:p,spriteMosaic:m,state:g,styleLayerUID:d,requestRender:y,allowDelayedRender:_}=e,h=a.textMaterial,M=u.vectorTilesMaterialManager;let U,x=!1;for(const t of s)if(t.layerData.has(d)&&(U=t.layerData.get(d),U.glyphPerPageElementsMap.size>0)){x=!0;break}if(!x)return;const P=a.getPaintProperty(\"text-opacity\");if(P&&!P.isDataDriven&&0===P.getValue(l))return;const S=a.getPaintProperty(\"text-color\"),E=!S||S.isDataDriven||S.getValue(l)[3]>0,v=a.getPaintProperty(\"text-halo-width\"),D=a.getPaintProperty(\"text-halo-color\"),T=(!v||v.isDataDriven||v.getValue(l)>0)&&(!D||D.isDataDriven||D.getValue(l)[3]>0);if(!E&&!T)return;const V=24/8;let w=a.getLayoutValue(\"text-rotation-alignment\",l);2===w&&(w=0===a.getLayoutValue(\"symbol-placement\",l)?1:0);const R=0===w,I=a.getLayoutValue(\"text-keep-upright\",l)&&R,L=.8*V/p;this._glyphTextureSize||(this._glyphTextureSize=t(c.width/4,c.height/4));const z=a.getPaintValue(\"text-translate\",l),N=a.getPaintValue(\"text-translate-anchor\",l),b=this._sdfProgramOptions,k=M.getMaterialProgram(o,h,b);if(_&&null!=y&&!k.compiled)return void y();o.useProgram(k),k.setUniformMatrix3fv(\"u_displayViewMat3\",0===w?g.displayViewMat3:g.displayMat3),k.setUniformMatrix3fv(\"u_displayMat3\",1===N?g.displayMat3:g.displayViewMat3),k.setUniform2fv(\"u_textTranslation\",z),k.setUniform1f(\"u_depth\",a.z+f),k.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),k.setUniform1f(\"u_mapRotation\",n(g.rotation)),k.setUniform1f(\"u_keepUpright\",I?1:0),k.setUniform1f(\"u_level\",10*l),k.setUniform1i(\"u_texture\",r),k.setUniform1f(\"u_antialiasingWidth\",L),k.setUniform1f(\"u_fadeDuration\",i/1e3);let O=-1;for(const t of s){if(!t.layerData.has(d))continue;if(t.key.level!==O&&(O=t.key.level,h.setDataUniforms(k,l,a,O,m)),U=t.layerData.get(d),0===U.glyphPerPageElementsMap.size)continue;U.prepareForRendering(o),U.updateOpacityInfo();const i=U.textVAO;if(null==i)continue;o.bindVAO(i),k.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),this._setStencilState(e,t);const r=(performance.now()-U.lastOpacityUpdate)/1e3;k.setUniform1f(\"u_time\",r),U.glyphPerPageElementsMap.forEach((e,i)=>{this._renderGlyphRange(o,e,i,c,k,T,E,t)})}}_renderGlyphRange(e,t,i,a,n,s,f,c){a.bind(e,9729,i,r),s&&(n.setUniform1f(\"u_halo\",1),e.drawElements(o.TRIANGLES,t[1],l.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),c.triangleCount+=t[1]/3),f&&(n.setUniform1f(\"u_halo\",0),e.drawElements(o.TRIANGLES,t[1],l.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),c.triangleCount+=t[1]/3)}_setStencilState(e,t){const{context:i,is3D:a,stencilSymbols:r}=e;if(i.setStencilTestEnabled(!0),r)return i.setStencilWriteMask(255),void i.setStencilFunction(519,t.stencilRef,255);i.setStencilWriteMask(0),a?i.setStencilFunction(514,t.stencilRef,255):i.setStencilFunction(516,255,255)}}export{c as WGLBrushVTLSymbol};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport r from\"./webgl/brushes/BrushClip.js\";import s from\"./webgl/brushes/WGLBrushStencil.js\";import e from\"./webgl/brushes/WGLBrushTileDebugInfo.js\";import{WGLBrushVTLBackground as l}from\"./webgl/brushes/WGLBrushVTLBackground.js\";import{WGLBrushVTLCircle as o}from\"./webgl/brushes/WGLBrushVTLCircle.js\";import{WGLBrushVTLFill as b}from\"./webgl/brushes/WGLBrushVTLFill.js\";import{WGLBrushVTLLine as i}from\"./webgl/brushes/WGLBrushVTLLine.js\";import{WGLBrushVTLSymbol as u}from\"./webgl/brushes/WGLBrushVTLSymbol.js\";const m={clip:r,stencil:s,tileDebugInfo:e,vtlBackground:l,vtlFill:b,vtlLine:i,vtlCircle:o,vtlSymbol:u};export{m as brushes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nconst o=!0,t=32,c=1.5,e=200;export{t as collisionGridCellSize,c as declutterBudget,o as declutterTiles,e as fadeDuration};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{set as t,multiply as s}from\"../../../../core/libs/gl-matrix-2/math/mat2d.js\";import{create as i}from\"../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";import{set as r,multiply as o,identity as e,translate as a,rotate as n,scale as l,invert as m}from\"../../../../core/libs/gl-matrix-2/math/mat3.js\";import{create as c}from\"../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{i as h,o as f}from\"../../../../chunks/vec32.js\";import{create as p}from\"../../../../core/libs/gl-matrix-2/factories/vec3f32.js\";import{tileSize as d}from\"./definitions.js\";import{TiledDisplayObject as u}from\"./TiledDisplayObject.js\";const x=c(),M=p();class g extends u{constructor(t,s,i,r){super(t,s,i,r,d,d)}destroy(){super.destroy()}setTransform(m){const c=this.resolution/m.resolution,h=this.transforms.tileMat3,[f,p]=m.toScreenNoRotation([0,0],[this.x,this.y]),d=this.width/this.rangeX*c,u=this.height/this.rangeY*c;r(h,d,0,0,0,u,0,f,p,1),o(this.transforms.displayViewScreenMat3,m.displayViewMat3,h);const x=t(i(),d,0,0,u,f,p);s(this.transforms.labelMat2d,m.viewMat2d,x);const M=[0,0];m.toScreen(M,[this.x,this.y]);const g=this.transforms.tileUnitsToPixels;e(g),a(g,g,M),n(g,g,Math.PI*m.rotation/180),l(g,g,[d,u,1])}_createTransforms(){return{labelMat2d:i(),tileMat3:c(),displayViewScreenMat3:c(),tileUnitsToPixels:c()}}containsScreenPoint(t,s,i){const r=o(x,t.viewMat3,this.transforms.tileMat3),e=m(x,r);if(null==e)return!0;h(M,...s,1);const a=f(M,M,e),n=i*(this.resolution/t.resolution);return a[0]>=-n&&a[0]<this.width+n&&a[1]>=-n&&a[1]<this.height+n}}export{g as AFeatureTile};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{List as t}from\"./cpuMapped/FreeList.js\";import{isHittest as e}from\"./shaderGraph/techniques/featureTechniqueUtils.js\";import{PrimitiveType as n,DataType as i}from\"../../../webgl/enums.js\";function a(t,e){return t<<16|255&e}function s(t){return 255&t}class r{constructor(t,e,n,i,a){this.instance=t,this.materialKey=e,this.target=n,this.start=i,this.count=a}get textureKey(){return s(this.materialKey)}get indexEnd(){return this.start+this.count}extend(t){this.count+=t}render(t){this.instance.techniqueRef.render(t,this)}get key(){return this.target.key}getStencilReference(){return this.target.stencilRef}getAttributePrecisionPackFactors(){const t=this.instance.instanceId;return this.target.getMesh(t).getAttributePrecisionPackFactors()}draw(t,n){e(t)?this.drawCompute(t.context,n):this.drawGeometry(t.context,n)}drawCompute(t,e){const a=this.instance.instanceId,s=this.target.getMesh(a).getComputeVAO(t,e),r=this.start*Uint32Array.BYTES_PER_ELEMENT/3;t.bindVAO(s,e.locations),t.drawElements(n.POINTS,this.count/3,i.UNSIGNED_INT,r),t.bindVAO(null)}drawGeometry(t,e){const a=this.instance.instanceId,s=this.target.getMesh(a).getGeometryVAO(t,e),r=this.start*Uint32Array.BYTES_PER_ELEMENT;t.bindVAO(s,e.locations),t.drawElements(n.TRIANGLES,this.count,i.UNSIGNED_INT,r),t.bindVAO(null)}}class d{constructor(){this._length=0,this._minOrderedLength=0,this._materialKeys=new Set}static fromDisplayEntities(t,e,n,i){const s=new d;for(const r of t.values())for(const t of r.records){const r=n.getInstance(t.instanceId),d=a(r.instanceId,t.textureKey);s.addRecord(r,d,t.indexStart,t.indexCount,t.vertexStart,t.vertexCount,e,i)}return s}get length(){return this._length}get minOrderedLength(){return this._minOrderedLength}get minUnorderedLength(){return this._materialKeys.size}render(t,e){const{drawPhase:n}=t;for(const i of this.infos()){const a=i.instance.techniqueRef;a.drawPhase&n&&(null==e||a.type===e)&&i.render(t)}}addRecord(e,n,i,a,s,d,h,l){let o=i,c=a;if(c||(o=s,c=d),!c)return;if(null==this._head){const i=new r(e,n,h,o,c);return this._head=new t(i),this._tail=this._head,this._length++,void this._minOrderedLength++}if(1===l)return this._insert(e,n,h,o,c,this._tail,null);let u=null,_=this._head;const g=e.instanceId,m=e.techniqueRef.symbologyPlane;if(2===l&&(2===m||3===m))return this._insert(e,n,h,o,c,this._tail,null);for(;_;){const t=_.data.instance,i=t.instanceId,a=t.techniqueRef.symbologyPlane,s=u?.data.instance.instanceId;if(m<a||g===s&&g!==i)return this._insert(e,n,h,o,c,u,_);u=_,_=_.next}this._insert(e,n,h,o,c,u,null)}*infos(){if(null!=this._head)for(const t of this._head.values())yield t}_insert(e,n,i,a,s,d,h){if(null==d&&null==h){const d=new r(e,n,i,a,s);return this._head=new t(d),this._tail=this._head,this._length++,void this._minOrderedLength++}return n!==this._tail.data.materialKey&&this._minOrderedLength++,this._materialKeys.add(n),null==d&&null!=h?this._insertAtHead(e,n,i,a,s,h):null!=d&&null==h?this._insertAtEnd(e,n,i,a,s,d):null!=d&&null!=h?this._insertAtMiddle(e,n,i,a,s,d,h):void 0}_insertAtHead(e,n,i,a,s,d){const h=a+s;if(n===d.data.materialKey&&i===d.data.target&&h===d.data.start)d.data.start=a,d.data.count+=s;else{const h=new r(e,n,i,a,s);this._head=new t(h),this._head.next=d,this._length++}}_insertAtEnd(e,n,i,a,s,d){if(d.data.materialKey===n&&d.data.indexEnd===a)d.data.count+=s;else{const h=new r(e,n,i,a,s);this._tail=new t(h),d.next=this._tail,this._length++}}_insertAtMiddle(e,n,i,a,s,d,h){const l=a+s;if(d.data.materialKey===n&&d.data.target===i&&d.data.indexEnd===a)d.data.count+=s,d.data.materialKey===h.data.materialKey&&d.data.target===h.data.target&&d.data.indexEnd===h.data.start&&(d.data.count+=h.data.count,d.next=h.next,this._length--);else if(n===h.data.materialKey&&i===h.data.target&&l===h.data.start)h.data.start=a,h.data.count+=s;else{const l=new r(e,n,i,a,s),o=new t(l);d.next=o,o.next=h,this._length++}}}export{d as DisplayList,r as DisplayListInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nclass t{constructor(t){this._indexOnly=t,this.vertex={count:0,operations:[]},this.index={count:0,operations:[]}}copyRecord(t){let e=0;this._indexOnly||(e=this.vertex.count-t.vertexStart,this.vertex.operations.push({srcFrom:t.vertexStart,dstFrom:this.vertex.count,count:t.vertexCount,mutate:0}),t.vertexStart=this.vertex.count,this.vertex.count+=t.vertexCount);let n=!1;if(this._indexOnly&&this.index.operations.length>=1){const e=this.index.operations[this.index.operations.length-1];e.srcFrom+e.count===t.indexStart&&(e.count+=t.indexCount,n=!0)}n||this.index.operations.push({srcFrom:t.indexStart,dstFrom:this.index.count,count:t.indexCount,mutate:e}),t.indexStart=this.index.count,this.index.count+=t.indexCount}}export{t as ReshufflePlan};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nclass t{constructor(t){this._pos=0,this._buffer=t,this._i32View=new Int32Array(this._buffer),this._f32View=new Float32Array(this._buffer)}readInt32(){return this._i32View[this._pos++]}readF32(){return this._f32View[this._pos++]}}export{t as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport t from\"../DisplayEntity.js\";import{LabelMetric as e}from\"../collisions/LabelMetric.js\";import{unpackDataView as i}from\"../shaderGraph/techniques/mesh/dataViewUtils.js\";import r from\"../util/Reader.js\";import{deserializeList as o}from\"../util/serializationUtils.js\";function s(e){if(!e)return null;return{entities:o(new r(e.entities),t),vertexData:e.data.map(a)}}function a(t){const s=t.layout.stride,a=new DataView(t.vertices),n=[],c=t.vertices.byteLength/s;let l=0;for(let e=0;e<c;e++){const e={};for(const r of t.layout.attributes){let t=`${r.offset} ${r.name}`,o=i(a,r,l);if(r.packPrecisionFactor)if(t+=` (precision: ${r.packPrecisionFactor})`,\"number\"==typeof o)o/=r.packPrecisionFactor;else for(let e=0;e<o.length;e++)o[e]/=r.packPrecisionFactor;e[t]=o}l+=s,n.push(e)}const f=t.metrics?o(new r(t.metrics),e)??[]:[];return{vertices:n,layout:t.layout,metrics:f}}export{s as debugMeshDataInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import e from\"../../../../core/Logger.js\";import{create as t}from\"../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";import{create as s}from\"../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{AFeatureTile as i}from\"./AFeatureTile.js\";import{RESHUFFLING_EXEMPT_MEMORY_BYTES as r,RESHUFFLING_TARGET_MEMORY_EFFICIENCY as o,RESHUFFLING_EXEMPT_DRAW_CALLS as d,RESHUFFLING_TARGET_DRAW_EFFICIENCY as n,tileSize as h}from\"./definitions.js\";import a from\"./DisplayEntity.js\";import{DisplayList as l}from\"./FeatureDisplayList.js\";import{ReshufflePlan as c}from\"./ReshufflePlan.js\";import{LabelMetric as f}from\"./collisions/LabelMetric.js\";import{MappedMesh as _}from\"./cpuMapped/MappedMesh.js\";import{debugMeshDataInfo as u}from\"./mesh/meshDebugUtils.js\";import m from\"./util/Reader.js\";import{deserializeList as p}from\"./util/serializationUtils.js\";const y=()=>e.getLogger(\"esri.views.2d.engine.webgl.FeatureTile\");let b=0;class g extends i{constructor(e,i,r,o,d,n,h=!1){super(e,i,r,o),this._fader=d,this._labelInstanceId=n,this._meshes=new Map,this._entities=[],this._entityIndex=new Map,this._invalidated=!1,this._nextUploadAllowed=!1,this.tileAge=b++,this._metrics=[],this._metricsVisibility=new Set,this._entityIds=new Set,this._entityIdsFromBuffer=new Set,this._attributeEpoch=0,this._encounteredEnd=!1,this.isCoverage=!1,this.rendering=!1,this._decluttered=!1,this._objectIdMap=null,this.visible=!0,this.transforms.labelMat2d=t(),this.transforms.tileUnitsToPixels=s(),this.enableDeferredUploads=h}destroy(){super.destroy(),this.clear()}clear(){for(const e of this._meshes.values())e.destroy();this._meshes.clear(),this._entities=[],this._fader?.removeFeatureTileMetrics(this,this._metrics),this._metrics=[],this._displayList=null,this._invalidated=!0,this._entityIds.clear(),this._nextUploadAllowed=!0}beforeRender(e){super.beforeRender(e),this._needsReshuffle&&e.reshuffleManager.schedule(this)}tryReady(e){const t=this._invalidated&&!this._uploadAllowed;return!(this.isReady||t||!this._encounteredEnd||!(e>=this._attributeEpoch))&&(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.ready [epoch=${e}]`),this.ready(),this.requestRender(),this.decluttered=!1,!0)}get symbols(){const e=new Map;for(const t of this._metrics)e.get(t.labelClassId)||e.set(t.labelClassId,[]),e.get(t.labelClassId).push(t);return e}get decluttered(){return this._decluttered}set decluttered(e){this._decluttered=e,this.requestRender()}get id(){return this.key.id}get hasData(){return!!this._meshes.size}get hasAnimations(){return!!this._objectIdMap}get needsUpload(){return this._invalidated}get _uploadAllowed(){return!this.enableDeferredUploads||this._nextUploadAllowed}get _hasMetrics(){return this._metrics.length>0}upload(){this._nextUploadAllowed=!0}getDisplayList(e,t){if(this._uploadAllowed&&this._invalidated){this._entities.sort((e,t)=>{const s=t.sortKey,i=e.sortKey;return i===s?e.id-t.id:i-s}),0===t&&this.reshuffle(!0),this._displayList=l.fromDisplayEntities(this._entities,this,e,t);for(const e of this._meshes.values())e.upload();this.debugInfo.display.length=this._displayList.length,this.debugInfo.display.minOrderedLength=this._displayList.minOrderedLength,this.debugInfo.display.minUnorderedLength=this._displayList.minUnorderedLength,this.requestRender(),this._invalidated=!1,this._nextUploadAllowed=!1}return this._displayList}getMesh(e){if(!this._meshes.has(e))throw new Error(`InternalError: Unable to find VAO for instance: ${e}`);return this._meshes.get(e)}getSortKeys(e){const t=new Map;for(const{id:s,sortKey:i}of this._entities)if(e.has(s)&&t.set(s,i),t.size===e.size)break;return t}onMessage(e){if(e.objectIdMap)for(const t in e.objectIdMap)this._objectIdMap||(this._objectIdMap={}),this._objectIdMap[t]=e.objectIdMap[t];switch(e.type){case\"append\":this._onAppendMessage(e);break;case\"update\":this._onUpdateMessage(e)}if(this._aggregateMemoryStats(),this.requestRender(),e.end){if(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.end [epoch=${e.attributeEpoch}]`),!e.attributeEpoch)throw new Error(\"InternalError: Attribute epoch not defined.\");this._attributeEpoch=e.attributeEpoch,this._encounteredEnd=!0}this._writeLabelVisibilityToMesh()}_onAppendMessage(e){if(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.append`,{append:u(e?.append)}),e.clear&&this.clear(),!e.append)return;const t=p(new m(e.append.entities),a);this._insert(t,e.append.data,!1)}_onUpdateMessage(e){has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.update`,{isPixelBuffer:e.isPixelBuffer,modify:u(e.modify),remove:e.remove});const t=p(new m(e.modify.entities),a),s=t.map(e=>e.id),i=e.isPixelBuffer??!1,r=[...e.remove,...s];i?this._removeByIdsFromBuffer(r):this._removeByIds(r),this._insert(t,e.modify.data,i)}reshuffle(e=!1){if(this.destroyed)return;const t=new Map;for(const s of this._entities)for(const i of s.records){const s=this._meshes.get(i.instanceId);let r=t.get(s);r||(r=new c(e),t.set(s,r)),r.copyRecord(i)}for(const[s,i]of t)s.reshuffle(i);this._invalidated=!0,this._aggregateMemoryStats(),has(\"esri-2d-update-debug\")&&y().info(`Tile ${this.key.id} was reshuffled.`)}copyPixelBufferedEntitesFrom(e,t,s,i){const r=s*h,o=i*h;for(const d of e._entities){let s=null;for(const i of d.records)if(i.overlaps&t){const t=e.getMesh(i.instanceId),n=this._ensureMesh(i.instanceId,t.layout,t.useVisibility).copyRecordFrom(t,i,r,o);s||(s=new a(d.id,d.sortKey),this._entityIdsFromBuffer.add(d.id),this._entityIndex.set(s.id,s),this._entities.push(s)),s.records.push(n)}}this._invalidated=!0}get metricsVisibility(){return this._metricsVisibility}copyMetricsVisibility(e){for(const t of e)this._metricsVisibility.add(t);this._writeLabelVisibilityToMesh()}updateLabelVisibility(){this._metricsVisibility.clear();for(const e of this._metrics){e.uniqueSymbol.show&&e.selectedForRendering&&this._metricsVisibility.add(e.hash)}this._writeLabelVisibilityToMesh()}_writeLabelVisibilityToMesh(){const e=this._meshes.get(this._labelInstanceId);if(e&&this._hasMetrics){for(const t of this._metrics){const s=this._entityIndex.get(t.id);if(!s)continue;const i=this._metricsVisibility.has(t.hash);e.setEntityRecordRangeVisibility(s.records,t.recordStart,t.recordCount,i?0:255)}this._invalidated=!0}}_ensureMesh(e,t,s){return this._meshes.has(e)||this._meshes.set(e,new _(this._stage.bufferPool,t,s)),this._meshes.get(e)}_insert(e,t,s){if(!e.length)return;this._removeDuplicatedBufferedEntites(e);const i=this._insertVertexData(t);for(const r of e){for(const e of r.records)e.updateBaseOffsets(i.get(e.instanceId));s?this._tryInsertBufferedEntity(r):this._insertEntity(r)}this._invalidated=!0}_insertMetrics(e){for(const t of e)t.tile=this;this._metrics.push(...e),this._fader?.insertFeatureTileMetrics(this,e)}_insertVertexData(e){const t=new Map;for(const s of e){const{instanceId:e,layout:i}=s,r=i.attributes.some(e=>\"visibility\"===e.name),o=this._ensureMesh(e,i,r).append(s);if(s.metrics){const e=p(new m(s.metrics),f)??[];this._insertMetrics(e)}t.set(e,o)}return t}_insertEntity(e){has(\"esri-2d-update-debug\")&&this._entityIds.has(e.id)&&console.error(`Tile ${this.key.id} insertEntity: Already have entityId ${e.id}`),this._entityIds.add(e.id),this._entityIndex.set(e.id,e),this._entities.push(e)}_tryInsertBufferedEntity(e){this._entityIds.has(e.id)?this._removeRecordsFromMesh(e.records):(this._entityIdsFromBuffer.add(e.id),this._entityIndex.set(e.id,e),this._entities.push(e))}_removeDuplicatedBufferedEntites(e){if(!this._entityIdsFromBuffer.size)return;const t=[];for(const s of e)this._entityIdsFromBuffer.has(s.id)&&t.push(s.id);this._removeByIds(t)}_removeByIdsFromBuffer(e){this._removeByIds(e.filter(e=>this._entityIdsFromBuffer.has(e)))}_removeByIds(e){if(0===e.length)return;const t=new Set(e),s=[];for(const r of this._entities)t.has(r.id)?(this._remove(r),this._entityIndex.delete(r.id)):s.push(r);this._entities=s;const i=this._metrics.filter(e=>t.has(e.displayId));this._metrics=this._metrics.filter(e=>!t.has(e.displayId)),this._fader?.removeFeatureTileMetrics(this,i),this._invalidated=!0}_remove(e){this._removeRecordsFromMesh(e.records),this._entityIds.delete(e.id),this._entityIdsFromBuffer.delete(e.id)}_removeRecordsFromMesh(e){for(const t of e){const{instanceId:e,indexStart:s,indexCount:i,vertexStart:r,vertexCount:o}=t;this._meshes.get(e)?.remove(s,i,r,o)}}_aggregateMemoryStats(){this.debugInfo.memory.bytesUsed=0,this.debugInfo.memory.bytesReserved=0;for(const e of this._meshes.values())this.debugInfo.memory.bytesUsed+=e.memoryStats.bytesUsed,this.debugInfo.memory.bytesReserved+=e.memoryStats.bytesReserved}get _needsReshuffle(){if(this.destroyed)return!1;const{bytesUsed:e,bytesReserved:t}=this.debugInfo.memory,s=e/t,{minOrderedLength:i,length:h}=this.debugInfo.display;return t>r&&s<o||h>d&&i/h<n}get entityIds(){return this._objectIdMap?this._entities.map(({id:e})=>({objectId:this._objectIdMap[e],displayId:e})):[]}}export{g as FeatureTile};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nconst n=128/Math.PI,t=256/360,r=1/Math.LN2;function u(n,t){return(n%=t)>=0?n:n+t}function o(t){return u(t*n,256)}function c(n){return u(n*t,256)}function e(n){return Math.log(n)*r}function f(n,t,r){return n*(1-r)+t*r}function i(n,t,r){return n>=t&&n<=r||n>=r&&n<=t}export{i as between,c as degToByte,f as interpolate,e as log2,u as positiveMod,o as radToByte};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import{assertIsSome as t}from\"../../../../core/maybe.js\";import{FreeList as e}from\"./cpuMapped/FreeList.js\";const r=has(\"esri-2d-log-allocations\");class s{static create(t,e){const r=e.acquireUint32Array(t);return new s(r,e)}constructor(t,e){this._array=t,this._pool=e}get array(){return this._array}get length(){return this._array.length}getUint32View(t,e){return new Uint32Array(this._array.buffer,t+this._array.byteOffset,e)}expand(t){if(t<=this._array.byteLength)return;const e=this._pool.acquireUint32Array(t);e.set(this._array),this._pool.releaseUint32Array(this._array),this._array=e}destroy(){this._pool.releaseUint32Array(this._array)}}class a{constructor(){this._data=new ArrayBuffer(a.BYTE_LENGTH),this._freeList=new e({start:0,end:this._data.byteLength})}static get BYTE_LENGTH(){return 16e6}get buffer(){return this._data}acquireUint32Array(t){const e=this._freeList.firstFit(t);return null==e?null:new Uint32Array(this._data,e,t/Uint32Array.BYTES_PER_ELEMENT)}releaseUint32Array(t){this._freeList.free(t.byteOffset,t.byteLength)}}class i{constructor(){this._pages=[],this._pagesByBuffer=new Map,this._bytesAllocated=0}destroy(){this._pages=[],this._pagesByBuffer=null}get _bytesTotal(){return this._pages.length*a.BYTE_LENGTH}acquireUint32Array(e){if(this._bytesAllocated+=e,r&&console.log(`Allocating ${e}, (${this._bytesAllocated} / ${this._bytesTotal})`),e>=a.BYTE_LENGTH)return new Uint32Array(e/Uint32Array.BYTES_PER_ELEMENT);for(const t of this._pages){const r=t.acquireUint32Array(e);if(null!=r)return r}const s=this._addPage().acquireUint32Array(e);return t(s,\"Expected to allocate page\"),s}releaseUint32Array(t){this._bytesAllocated-=t.byteLength,r&&console.log(`Freeing ${t.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const e=this._pagesByBuffer.get(t.buffer);e&&e.releaseUint32Array(t)}_addPage(){const t=new a;return this._pages.push(t),this._pagesByBuffer.set(t.buffer,t),t}}export{i as ArrayBufferPool,s as PooledUint32Array};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{set as t,multiply as e}from\"../../../../core/libs/gl-matrix-2/math/mat3.js\";import{DisplayObject as s}from\"../DisplayObject.js\";import i from\"../../tiling/TileKey.js\";class r extends s{constructor(t,e,s,r,o,n,h=o,d=n){super(),this.tileDebugInfoTexture=null,this.debugInfo={display:{length:0,minOrderedLength:0,minUnorderedLength:0,triangleCount:0},memory:{bytesUsed:0,bytesReserved:0}},this._destroyed=!1,this.key=new i(t),this.resolution=e,this.x=s,this.y=r,this.width=o,this.height=n,this.rangeX=h,this.rangeY=d}destroy(){super.destroy(),this.tileDebugInfoTexture&&(this.tileDebugInfoTexture.dispose(),this.tileDebugInfoTexture=null),this._destroyed=!0}get debugSlot(){let t=this;for(;t.parent!==this._stage;){if(!t.parent)return 0;t=t.parent}return this._stage.children.indexOf(t)}setTransform(s){const i=this.resolution/(s.resolution*s.pixelRatio),r=this.transforms.tileMat3,[o,n]=s.toScreenNoRotation([0,0],[this.x,this.y]),h=this.width/this.rangeX*i,d=this.height/this.rangeY*i;t(r,h,0,0,0,d,0,o,n,1),e(this.transforms.displayViewScreenMat3,s.displayViewMat3,r)}get destroyed(){return this._destroyed}}export{r as TiledDisplayObject};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import r from\"../../../../core/Logger.js\";import{e as t}from\"../../../../chunks/earcut.js\";import{set as o}from\"../../../../core/libs/gl-matrix-2/math/vec2.js\";import{create as n}from\"../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{convertFromNestedArray as s,convertFromPolygon as i}from\"../../../../layers/graphics/featureConversionUtils.js\";import c from\"../../../../layers/graphics/OptimizedGeometry.js\";import{i1616to32 as f}from\"./number.js\";import{BufferObject as a}from\"../../../webgl/BufferObject.js\";import{PrimitiveType as m}from\"../../../webgl/enums.js\";import{VertexBuffer as h}from\"../../../webgl/VertexBuffer.js\";const l=(e,r,t,o)=>{let n=0;for(let s=1;s<t;s++){const t=e[2*(r+s-1)],o=e[2*(r+s-1)+1];n+=(e[2*(r+s)]-t)*(e[2*(r+s)+1]+o)}return o?n>0:n<0},u=({coords:e,lengths:r},o)=>{const n=[];for(let s=0,i=0;s<r.length;i+=r[s],s+=1){const c=i,f=[];for(;s<r.length-1&&l(e,i+r[s],r[s+1],o);s+=1,i+=r[s])f.push(i+r[s]-c);const a=e.slice(2*c,2*(i+r[s])),m=t(a,f,2);for(const e of m)n.push(e+c)}return n};class x{constructor(e,r,t,o=!1){this.vertices=e,this.indices=r,this.primitiveType=t,this.isMapSpace=o,this._cache={}}static fromPath(e){const r=s(new c,e.path,!1,!1),t=r.coords,o=new Uint32Array(u(r,!0)),n=new Uint32Array(t.length/2);for(let s=0;s<n.length;s++)n[s]=f(Math.floor(t[2*s]),Math.floor(t[2*s+1]));return new x(n,o,m.TRIANGLES)}static fromGeometry(t,o){const n=o.geometry?.type;switch(n){case\"polygon\":return x.fromPolygon(t,o.geometry);case\"extent\":return x.fromMapExtent(t,o.geometry);default:return r.getLogger(\"esri.views.2d.engine.webgl.Mesh2D\").error(new e(\"mapview-bad-type\",`Unable to create a mesh from type ${n}`,o)),x.fromScreenExtent({xmin:0,ymin:0,xmax:1,ymax:1})}}static fromPolygon(e,r){const t=i(new c,r,!1,!1),s=t.coords,a=new Uint32Array(u(t,!1)),h=new Uint32Array(s.length/2),l=n(),p=n();for(let n=0;n<h.length;n++)o(l,s[2*n],s[2*n+1]),e.toScreen(p,l),h[n]=f(Math.floor(p[0]),Math.floor(p[1]));return new x(h,a,m.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:r,ymin:t,ymax:o}){const n=new Uint32Array([f(e,t),f(r,t),f(e,o),f(e,o),f(r,t),f(r,o)]),s=new Uint32Array([0,1,2,3,4,5]);return new x(n,s,m.TRIANGLES)}static fromMapExtent(e,r){const[t,o]=e.toScreen([0,0],[r.xmin,r.ymin]),[n,s]=e.toScreen([0,0],[r.xmax,r.ymax]),i=new Uint32Array([f(t,o),f(n,o),f(t,s),f(t,s),f(n,o),f(n,s)]),c=new Uint32Array([0,1,2,3,4,5]);return new x(i,c,m.TRIANGLES)}destroy(){null!=this._cache.indexBuffer&&this._cache.indexBuffer.dispose(),this._cache.vertexBuffer?.buffer.dispose(),this._cache.indexBuffer=this._cache.vertexBuffer=null}getIndexBuffer(e,r=35044){return this._cache.indexBuffer??=a.createIndex(e,r,this.indices),this._cache.indexBuffer}getVertexBuffers(e,r){return this._cache.vertexBuffer??=new h(r,a.createVertex(e,35044,this.vertices)),this._cache.vertexBuffer}}export{x as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import t from\"../../../../core/Logger.js\";import{watch as r}from\"../../../../core/reactiveUtils.js\";import{create as s}from\"../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{DisplayObject as i}from\"../DisplayObject.js\";import o from\"./Mesh2D.js\";import{createScreenExtent as a}from\"../../support/clippingUtils.js\";import{VertexArrayObject as h}from\"../../../webgl/VertexArrayObject.js\";class c extends i{constructor(e,t){super(),this._clip=t,this._cache={},this.stage=e,this._handle=r(()=>t.version,()=>this._invalidate()),this.ready()}static fromClipArea(e,t){return new c(e,t)}_destroyGL(){null!=this._cache.mesh&&(this._cache.mesh.destroy(),this._cache.mesh=null),null!=this._cache.vao&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){super.destroy(),this._destroyGL(),this._handle.remove()}getVAO(e,t,r){const[s,i]=t.size;if(\"geometry\"!==this._clip.type&&this._lastWidth===s&&this._lastHeight===i||(this._lastWidth=s,this._lastHeight=i,this._destroyGL()),null==this._cache.vao){const s=this._createMesh(t,this._clip),i=s.getIndexBuffer(e),o=s.getVertexBuffers(e,r);this._cache.mesh=s,this._cache.vao=new h(e,o,i)}return this._cache.vao}_createTransforms(){return{displayViewScreenMat3:s()}}_invalidate(){this._destroyGL(),this.requestRender()}_createMesh(r,s){switch(s.type){case\"rect\":return o.fromScreenExtent(a(s,r.size[0],r.size[1]));case\"path\":return o.fromPath(s);case\"geometry\":return o.fromGeometry(r,s);default:return t.getLogger(\"esri.views.2d.engine.webgl.ClippingInfo\").error(new e(\"mapview-bad-type\",\"Unable to create ClippingInfo mesh from clip of type: ${clip.type}\")),o.fromScreenExtent({xmin:0,ymin:0,xmax:1,ymax:1})}}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{brushes as e}from\"../brushes.js\";import{Container as s}from\"../Container.js\";import r from\"./ClippingInfo.js\";class i extends s{set clips(e){super.clips=e,this._updateClippingInfo(e)}renderChildren(e){e.painter.setPipelineState(null),null==this._renderPasses&&(this._renderPasses=this.prepareRenderPasses(e.painter));for(const r of this._renderPasses)try{r.render(e)}catch(s){}}prepareRenderPasses(s){return[s.registerRenderPass({name:\"clip\",brushes:[e.clip],target:()=>this._clippingInfos,drawPhase:87})]}_updateClippingInfo(e){null!=this._clippingInfos&&(this._clippingInfos.forEach(e=>e.destroy()),this._clippingInfos=null),null!=e&&e.length&&(this._clippingInfos=e.items.map(e=>r.fromClipArea(this.stage,e))),this.requestRender()}}export{i as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nclass t{constructor(){this.name=this.constructor.name||\"UnnamedBrush\",this.brushEffect=null}prepareState(t,r){}draw(t,r,s){}drawMany(t,r,s){for(const a of r)a.visible&&this.draw(t,a,s)}}export{t as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{fromValues as e}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import r from\"./WGLBrush.js\";import{background as t}from\"../shaders/BackgroundPrograms.js\";import{BufferObject as i}from\"../../../../webgl/BufferObject.js\";import{PrimitiveType as s}from\"../../../../webgl/enums.js\";import{createProgram as o}from\"../../../../webgl/ProgramTemplate.js\";import{VertexArrayObject as a}from\"../../../../webgl/VertexArrayObject.js\";import{Pos2b as l}from\"../../../../webgl/VertexAttributeLayouts.js\";import{VertexBuffer as n}from\"../../../../webgl/VertexBuffer.js\";class d extends r{constructor(){super(...arguments),this._color=e(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:e}){e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(7680,7680,7681),e.setStencilWriteMask(255)}draw(e,r){const{context:t,requestRender:i,allowDelayedRender:o}=e;this._initialized||this._initialize(t),!o||null==i||this._solidProgram.compiled?(t.setStencilFunctionSeparate(1032,516,r.stencilRef,255),t.bindVAO(this._solidVertexArrayObject),t.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.displayViewScreenMat3),this._solidProgram.setUniform2fv(\"u_coord_range\",[r.rangeX,r.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),t.drawArrays(s.TRIANGLE_STRIP,0,4),t.bindVAO(null)):i()}_initialize(e){if(this._initialized)return!0;const r=new Int8Array([0,0,1,0,0,1,1,1]),s=i.createVertex(e,35044,r),d=new a(e,new n(l,s));return this._solidProgram=o(e,t,d.locations),this._solidVertexArrayObject=d,this._initialized=!0,!0}}export{d as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{fromValues as e}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{FeatureTile as t}from\"../FeatureTile.js\";import r from\"./WGLBrush.js\";import{background as o}from\"../shaders/BackgroundPrograms.js\";import{tileInfo as i}from\"../shaders/TileInfoPrograms.js\";import{BufferObject as s}from\"../../../../webgl/BufferObject.js\";import{PrimitiveType as n}from\"../../../../webgl/enums.js\";import{createProgram as l}from\"../../../../webgl/ProgramTemplate.js\";import{Texture as a}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as f}from\"../../../../webgl/TextureDescriptor.js\";import{VertexArrayObject as m}from\"../../../../webgl/VertexArrayObject.js\";import{Pos2b as c}from\"../../../../webgl/VertexAttributeLayouts.js\";import{VertexBuffer as u}from\"../../../../webgl/VertexBuffer.js\";const d=512,h=512,g=16,_=8,x=(h-2*_)/5;class b extends r{constructor(){super(...arguments),this._color=e(1,0,0,1)}dispose(){this._outlineProgram?.dispose(),this._outlineProgram=null,this._tileInfoProgram?.dispose(),this._tileInfoProgram=null,this._outlineVertexArrayObject?.dispose(),this._outlineVertexArrayObject=null,this._tileInfoVertexArrayObject?.dispose(),this._tileInfoVertexArrayObject=null,this._ctx=null}prepareState({context:e}){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(1,771,1,771),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!1)}draw(e,r){const{context:o,requestRender:i,allowDelayedRender:s}=e;if(!r.isReady&&r instanceof t&&r.hasData)return;if(this._loadWGLResources(o),s&&null!=i&&(!this._outlineProgram.compiled||!this._tileInfoProgram.compiled))return void i();o.bindVAO(this._outlineVertexArrayObject),o.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.displayViewScreenMat3),this._outlineProgram.setUniform2f(\"u_coord_range\",r.rangeX,r.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),o.drawArrays(n.LINE_STRIP,0,4);const l=this._getTexture(o,r);l?(o.bindVAO(this._tileInfoVertexArrayObject),o.useProgram(this._tileInfoProgram),o.bindTexture(l,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.displayViewScreenMat3),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",r.rangeX/r.width,r.rangeY/r.height),this._tileInfoProgram.setUniform2f(\"u_delta\",0,0),this._tileInfoProgram.setUniform2f(\"u_dimensions\",l.descriptor.width,l.descriptor.height),o.drawArrays(n.TRIANGLE_STRIP,0,4),o.bindVAO(null)):o.bindVAO(null)}_loadWGLResources(e){if(this._outlineProgram&&this._tileInfoProgram)return;const t=new Int8Array([0,0,1,0,1,1,0,1]),r=s.createVertex(e,35044,t);this._outlineVertexArrayObject=new m(e,new u(c,r)),this._outlineProgram=l(e,o,this._outlineVertexArrayObject.locations);const n=new Int8Array([0,0,1,0,0,1,1,1]),a=s.createVertex(e,35044,n);this._tileInfoVertexArrayObject=new m(e,new u(c,a)),this._tileInfoProgram=l(e,i,this._tileInfoVertexArrayObject.locations)}_getTexture(e,t){if(!this._ctx){const e=document.createElement(\"canvas\");e.width=d,e.height=h,this._ctx=e.getContext(\"2d\")}if(!t.tileDebugInfoTexture){const r=new f(d,h);r.wrapMode=33071,r.samplingMode=9729,r.isImmutable=!0,t.tileDebugInfoTexture=new a(e,r)}const r=this._ctx;r.clearRect(0,0,r.canvas.width,r.canvas.height),r.textAlign=\"left\",r.textBaseline=\"top\",r.font=g-2+\"px sans-serif\",r.lineWidth=2,r.fillStyle=\"white\",r.strokeStyle=\"black\";const{debugSlot:o}=t;let i=_+x*o;const s=`${o}) ${t.key.id} (${t.constructor.name})`;r.strokeText(s,_,i),r.fillText(s,_,i),i+=g;const{debugInfo:n}=t;if(n){const{length:e,minOrderedLength:t,minUnorderedLength:o,triangleCount:s}=n.display;if(e>0){const t=`Length: ${e}`;r.strokeText(t,_,i),r.fillText(t,_,i),i+=g}if(t){const e=`Min ordered length: ${t}`;r.strokeText(e,_,i),r.fillText(e,_,i),i+=g}if(o){const e=`Min unordered length: ${o}`;r.strokeText(e,_,i),r.fillText(e,_,i),i+=g}if(s>0){s>1e5&&(r.fillStyle=\"red\",r.strokeStyle=\"white\");const e=`Triangle count: ${s}`;r.strokeText(e,_,i),r.fillText(e,_,i),i+=g}const{bytesUsed:l,bytesReserved:a}=n.memory;if(r.fillStyle=\"white\",r.strokeStyle=\"black\",l>0||a>0){const e=`Memory usage: ${l} of ${a} bytes`;r.strokeText(e,_,i),r.fillText(e,_,i),i+=g}}return t.tileDebugInfoTexture.setData(r.canvas),t.tileDebugInfoTexture}}export{b as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nclass t{constructor(a){if(this.next=null,!Array.isArray(a))return void(this.data=a);this.data=a[0];let e=this;for(let n=1;n<a.length;n++)e.next=new t([a[n]]),e=e.next}*values(){let t=this;for(;t;)yield t.data,t=t.next}forEach(t){let a=this;for(;a;)t(a.data),a=a.next}get last(){return this.next?this.next.last:this}}class a{constructor(a){this._head=null,null!=a&&(this._head=new t(a))}get head(){return this._head}maxAvailableSpace(){if(null==this._head)return 0;let t=0;return this._head.forEach(a=>{const e=a.end-a.start;t=Math.max(t,e)}),t}firstFit(t){if(null==this._head)return null;let a=null,e=this._head;for(;e;){const n=e.data.end-e.data.start;if(n===t)return a?a.next=e.next:this._head=e.next,e.data.start;if(n>t){const a=e.data.start;return e.data.start+=t,a}a=e,e=e.next}return null}free(a,e){const n=a+e;if(null==this._head){const e=new t({start:a,end:n});return void(this._head=e)}if(n<=this._head.data.start){if(n===this._head.data.start)return void(this._head.data.start-=e);const r=new t({start:a,end:n});return r.next=this._head,void(this._head=r)}let r=this._head,d=r.next;for(;d;){if(d.data.start>=n){if(r.data.end===a){if(r.data.end+=e,r.data.end===d.data.start){const t=d.data.end-d.data.start;return r.data.end+=t,void(r.next=d.next)}return}if(d.data.start===n)return void(d.data.start-=e);const s=new t({start:a,end:n});return s.next=r.next,void(r.next=s)}r=d,d=d.next}if(a===r.data.end)return void(r.data.end+=e);const s=new t({start:a,end:n});r.next=s}clear(){this._head=null}}export{a as FreeList,t as List};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport\"../../../../../core/has.js\";import{assertIsSome as t}from\"../../../../../core/maybe.js\";import{toUint32 as i,toFloat32 as r}from\"../number.js\";import{PooledUint32Array as e}from\"../PooledUint32Array.js\";import{FreeList as s}from\"./FreeList.js\";import{BufferObject as n}from\"../../../../webgl/BufferObject.js\";const h=1.25,a=32767,d=a<<16|a;class u{constructor(t,i,r,s){this._pool=s;const n=e.create(i*r*Uint32Array.BYTES_PER_ELEMENT,this._pool);this.size=i,this.strideInt=r,this.bufferType=t,this.dirty={start:1/0,end:0},this.memoryStats={bytesUsed:0,bytesReserved:i*r*Uint32Array.BYTES_PER_ELEMENT},this._gpu=null,this._cpu=n,this.clear()}get elementSize(){return this._cpu.length/this.strideInt}get intSize(){return this.fillPointer*this.strideInt}get byteSize(){return this.intSize*Uint32Array.BYTES_PER_ELEMENT}get invalidated(){return this.bufferSize>0&&!this._gpu}get invalidatedComputeBuffer(){return this.bufferSize>0&&!this._gpuComputeTriangles}invalidate(){this._invalidateTriangleBuffer(),this._gpu?.dispose(),this._gpu=null}_invalidateTriangleBuffer(){this._gpuComputeTriangles?.dispose(),this._gpuComputeTriangles=null}destroy(){this._gpu?.dispose(),this._gpuComputeTriangles?.dispose(),this._cpu?.destroy()}clear(){this.dirty.start=1/0,this.dirty.end=0,this.freeList=new s({start:0,end:this._cpu.length/this.strideInt}),this.fillPointer=0}ensure(t){if(this.maxAvailableSpace()>=t)return;if(t*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const i=this._cpu.length/this.strideInt,r=Math.round((i+t)*h),e=r*this.strideInt;this._cpu.expand(e*Uint32Array.BYTES_PER_ELEMENT),this.freeList.free(i,r-i),this.memoryStats.bytesReserved+=(r-i)*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}}setU32(t,i){this._cpu.array[t]!==i&&(this._cpu.array[t]=i,this.dirty.start=Math.min(t,this.dirty.start),this.dirty.end=Math.max(t+1,this.dirty.end))}setF32(t,r){this.setU32(t,i(r))}setF32Range(t,r,e){const s=i(e);this._cpu.array.fill(s,t,r),this.dirty.start=Math.min(t,this.dirty.start),this.dirty.end=Math.max(r,this.dirty.end)}getF32(t){return r(this._cpu.array[t])}getGPUBuffer(t,i=!1){if(!this.bufferSize)return null;if(i){if(\"index\"!==this.bufferType)throw new Error(\"Tired to get triangle buffer, but target is not an index buffer\");return null==this._gpuComputeTriangles&&(this._gpuComputeTriangles=this._createComputeBuffer(t)),this._gpuComputeTriangles}return null==this._gpu&&(this._gpu=this._createBuffer(t)),this._gpu}getView(t,i){return this._cpu.getUint32View(t,i/Uint32Array.BYTES_PER_ELEMENT)}get bufferSize(){return this._cpu.length/this.strideInt}maxAvailableSpace(){return this.freeList.maxAvailableSpace()}insert(i,r,e,s){const n=e*this.strideInt;if(!n)return 0;const h=r*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,a=new Uint32Array(i,h,n),d=this.freeList.firstFit(e);t(d,\"First fit region must be defined\");const u=d*this.strideInt,o=n;if(this._cpu.array.set(a,u),0!==s)for(let t=0;t<a.length;t++)this._cpu.array[t+u]+=s;return this.dirty.start=Math.min(this.dirty.start,u),this.dirty.end=Math.max(this.dirty.end,u+o),this.fillPointer=Math.max(this.fillPointer,u+o),this.memoryStats.bytesUsed+=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,d}copyFrom(i,r,e,s,n){const h=e*this.strideInt;if(!h)return 0;const a=r*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,d=i._cpu.getUint32View(a,h),u=this.freeList.firstFit(e);t(u,\"First fit region must be defined\");const o=u*this.strideInt,f=h;if(this._cpu.array.set(d,o),0!==s)for(let t=0;t<h;t++)this._cpu.array[o+t*this.strideInt+n]+=s;return this.dirty.start=Math.min(this.dirty.start,o),this.dirty.end=Math.max(this.dirty.end,o+f),this.fillPointer=Math.max(this.fillPointer,o+f),this.memoryStats.bytesUsed+=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,u}free(t,i,r){const e=t*this.strideInt,s=(t+i)*this.strideInt;if(!0===r)for(let n=t;n!==t+i;n++)this._cpu.array[n*this.strideInt]=d;this.dirty.start=Math.min(this.dirty.start,e),this.dirty.end=Math.max(this.dirty.end,s),this.freeList.free(t,i),this.memoryStats.bytesUsed-=i*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}upload(){if(this.dirty.end){if(this._invalidateTriangleBuffer(),null==this._gpu)return this.dirty.start=1/0,void(this.dirty.end=0);this._gpu.setSubData(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=1/0,this.dirty.end=0}}reshuffle(t,i){if(0===i.length)return;const r=this.byteSize,s=t*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,n=r>s,h=this._cpu,a=e.create(s,this._pool);n||a.array.set(this._cpu.getUint32View(0,this.intSize));for(const e of i)if(n||e.srcFrom!==e.dstFrom||0!==e.mutate){this.dirty.start=Math.min(this.dirty.start,e.dstFrom*this.strideInt),this.dirty.end=Math.max(this.dirty.end,(e.dstFrom+e.count)*this.strideInt);for(let t=0;t<e.count;t++){const i=(e.dstFrom+t)*this.strideInt,r=(e.srcFrom+t)*this.strideInt;for(let t=0;t<this.strideInt;t++)a.array[i+t]=h.array[r+t]+e.mutate}}this._cpu.destroy(),this._cpu=a,n&&this.invalidate(),this.freeList.clear(),this.memoryStats.bytesUsed=this.memoryStats.bytesReserved=s}_createBuffer(t){const i=35048;return\"index\"===this.bufferType?n.createIndex(t,i,this._cpu.array):n.createVertex(t,i,this._cpu.array)}_createComputeBuffer(t){const i=35048,r=new Uint32Array(this.fillPointer/3);for(let e=0;e<this.fillPointer;e+=3)r[e/3]=this._cpu.array[e];return n.createIndex(t,i,r)}}export{u as MappedBuffer};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{unique as e}from\"../../../../../core/arrayUtils.js\";import{destroyMaybe as t}from\"../../../../../core/maybe.js\";import{i1616to32 as i}from\"../number.js\";import{MappedBuffer as r}from\"./Buffer.js\";import{unpackDataView as s}from\"../shaderGraph/techniques/mesh/dataViewUtils.js\";import{vertexLayoutHash as f}from\"../shaderGraph/techniques/mesh/utils.js\";import{PrimitiveType as o,DataType as n}from\"../../../../webgl/enums.js\";import{VertexArrayObject as u}from\"../../../../webgl/VertexArrayObject.js\";import{VertexBuffer as a}from\"../../../../webgl/VertexBuffer.js\";const h=1e3,l=4,_=[{name:\"visibility\",offset:0,type:n.FLOAT,count:1}],d={hash:f(_),attributes:_,stride:l};function m(t,i){return e(t.attributes,(e,t)=>e.name===t.name).filter(e=>i.locations.has(e.name)).map(e=>({name:e.name,type:e.type,count:e.count,divisor:0,normalized:e.normalized??!1,offset:e.offset,stride:t.stride})).sort((e,t)=>i.locations.get(e.name)-i.locations.get(t.name))}function y(t,i){const r=[],s=e(t.attributes,(e,t)=>e.name===t.name).filter(e=>i.locations.has(e.name));for(const e of s){r.push({name:e.name,type:e.type,count:e.count,divisor:0,normalized:e.normalized??!1,offset:e.offset,stride:t.stride});const s=i.computeAttributeMap[e.name];null!=s&&2===s.length&&(r.push({name:s[0],count:e.count,divisor:0,type:e.type,normalized:e.normalized??!1,offset:e.offset+t.stride,stride:t.stride}),r.push({name:s[1],count:e.count,divisor:0,type:e.type,normalized:e.normalized??!1,offset:e.offset+2*t.stride,stride:t.stride}))}return r.sort((e,t)=>i.locations.get(e.name)-i.locations.get(t.name))}class c{constructor(e,t,i){if(this._bufferPool=e,this._layout=t,this.useVisibility=i,this._invalidatedGeometry=!1,this._invalidatedCompute=!1,this._position=this._layout.attributes.find(e=>\"pos\"===e.name||\"position\"===e.name),!this._position)throw new Error(\"InternalError: Unable to find position attribute\")}destroy(){this._indexBuffer=t(this._indexBuffer),this._vertexBuffer=t(this._vertexBuffer),this._visibilityBuffer=t(this._visibilityBuffer),this._computeVAO?.disposeVAOOnly(),this._geometryVAO?.disposeVAOOnly()}get layout(){return this._layout}getDrawArgs(e,t,i,r){return r?{primitive:o.POINTS,count:t/3,offset:i/3}:{primitive:e,count:t,offset:i}}getAttributePrecisionPackFactors(){const e={};for(const t of this.layout.attributes)t.packPrecisionFactor&&(e[t.name]=t.packPrecisionFactor);return e}getDebugVertexInfo(e=!1,t){if(!this._vertexBuffer)return null;const i=this._layout,r=i.stride,f=this._vertexBuffer.getView(0,this._vertexBuffer.byteSize),o=[];if(e)if(null==t)console.log(\"must provide location info to see compute attributes\");else for(const s of i.attributes){const e=t.computeAttributeMap[s.name];null!=e&&2===e.length&&(o.push({...s,name:e[0],offset:s.offset+r}),o.push({...s,name:e[1],offset:s.offset+2*r}))}const n=new DataView(f.slice().buffer);let u=f.byteLength/r;e&&(u=this._indexBuffer.fillPointer/3);const a=this._indexBuffer.getView(0,this._indexBuffer.byteSize);let h=0;const l=[];for(let _=0;_<u;_++){if(e){h=a[3*_]*r}const t={};for(const e of[...i.attributes,...o]){let i=`${e.offset} ${e.name}`,r=s(n,e,h);if(e.packPrecisionFactor)if(i+=` (precision: ${e.packPrecisionFactor})`,\"number\"==typeof r)r/=e.packPrecisionFactor;else for(let t=0;t<r.length;t++)r[t]/=e.packPrecisionFactor;t[i]=r}h+=r,l.push(t)}return{vertices:l,layout:i}}_ensure(e,t){if(this._vertexBuffer&&this._indexBuffer)this._indexBuffer.ensure(Math.max(e,h)),this._vertexBuffer.ensure(Math.max(t,h)),this._visibilityBuffer&&this._visibilityBuffer.ensure(Math.max(t,h));else{const i=this._layout.stride/Uint32Array.BYTES_PER_ELEMENT;this._indexBuffer=new r(\"index\",Math.max(e,h),1,this._bufferPool),this._vertexBuffer=new r(\"vertex\",Math.max(t,h),i,this._bufferPool),this.useVisibility&&(this._visibilityBuffer=new r(\"vertex\",Math.max(t,h),l/Uint32Array.BYTES_PER_ELEMENT,this._bufferPool))}}append(e){const t=e.layout.stride,i=e.indices.byteLength/Uint32Array.BYTES_PER_ELEMENT,r=e.vertices.byteLength/t;this._ensure(i,r);const{vertices:s,indices:f}=e,o=this._vertexBuffer.insert(s,0,s.byteLength/t,0),n=new Uint32Array(r);new Float32Array(n.buffer).fill(255),this._visibilityBuffer&&this._visibilityBuffer.insert(n,0,n.byteLength/l,0);return{vertexFrom:o,indexFrom:this._indexBuffer.insert(f,0,f.byteLength/4,o)}}setEntityRecordRangeVisibility(e,t,i,r){for(let s=t;s<t+i;s++){const{vertexStart:t,vertexCount:i}=e[s];this._visibilityBuffer.setF32Range(t,t+i,r)}}getEntityRecordVisibility(e,t){const i=e.records[t];return this._visibilityBuffer.getF32(i.vertexStart)}copyRecordFrom(e,t,r,s){const{indexStart:f,indexCount:o,vertexStart:n,vertexCount:u}=t;this._ensure(o,u);const a=e._position,h=r*(a.packPrecisionFactor??1),l=s*(a.packPrecisionFactor??1),_=a.offset,d=i(h,l),m=this._vertexBuffer.copyFrom(e._vertexBuffer,n,u,d,_);this._visibilityBuffer&&e._visibilityBuffer&&this._visibilityBuffer.copyFrom(e._visibilityBuffer,n,u,0,0);const y=this._indexBuffer.copyFrom(e._indexBuffer,f,o,m-n,0),c=t.clone();return c.vertexStart=m,c.indexStart=y,c.overlaps=0,c}remove(e,t,i,r){this._indexBuffer.free(e,t),this._vertexBuffer.free(i,r),this._visibilityBuffer&&this._visibilityBuffer.free(i,r)}upload(){this._invalidatedGeometry=!0,this._invalidatedCompute=!0}getGeometryVAO(e,t){if(!this._vertexBuffer||!this._indexBuffer||!this._vertexBuffer.bufferSize)return null;if(this._invalidatedGeometry){if((this._vertexBuffer.invalidated||this._indexBuffer.invalidated||this._visibilityBuffer?.invalidated)&&(this._vertexBuffer.invalidate(),this._indexBuffer.invalidate(),this._visibilityBuffer&&this._visibilityBuffer.invalidate(),this._geometryVAO?.disposeVAOOnly(),this._geometryVAO=null),this._vertexBuffer.upload(),this._indexBuffer.upload(),this._visibilityBuffer&&this._visibilityBuffer.upload(),!this._geometryVAO){const i=this._indexBuffer.getGPUBuffer(e,!1),r=new Map([[\"geometry\",new a(m(this.layout,t),this._vertexBuffer.getGPUBuffer(e))]]);this._visibilityBuffer&&r.set(\"visibility\",new a(m(d,t),this._visibilityBuffer.getGPUBuffer(e))),this._geometryVAO=new u(e,r,i)}this._invalidatedGeometry=!1}return this._geometryVAO}getComputeVAO(e,t){if(!this._vertexBuffer||!this._indexBuffer||!this._vertexBuffer.bufferSize)return null;if(this._invalidatedCompute&&((this._vertexBuffer.invalidated||this._indexBuffer.invalidatedComputeBuffer)&&(this._vertexBuffer.invalidate(),this._indexBuffer.invalidate(),this._visibilityBuffer?.invalidate(),this._computeVAO?.disposeVAOOnly(),this._computeVAO=null),this._vertexBuffer.upload(),this._indexBuffer.upload(),this._visibilityBuffer?.upload(),!this._computeVAO)){const i=this._indexBuffer.getGPUBuffer(e,!0),r=new Map([[\"geometry\",new a(y(this.layout,t),this._vertexBuffer.getGPUBuffer(e))]]);this._visibilityBuffer&&r.set(\"visibility\",new a(m(d,t),this._visibilityBuffer.getGPUBuffer(e))),this._computeVAO=new u(e,r,i),this._invalidatedCompute=!1}return this._computeVAO}get memoryStats(){return{bytesUsed:this._vertexBuffer.memoryStats.bytesUsed+this._indexBuffer.memoryStats.bytesUsed,bytesReserved:this._vertexBuffer.memoryStats.bytesReserved+this._indexBuffer.memoryStats.bytesReserved,vertex:this._vertexBuffer.memoryStats,index:this._indexBuffer.memoryStats}}reshuffle(e){this._vertexBuffer&&this._vertexBuffer.reshuffle(e.vertex.count,e.vertex.operations),this._indexBuffer&&this._indexBuffer.reshuffle(e.index.count,e.index.operations),this._visibilityBuffer&&this._visibilityBuffer.reshuffle(e.vertex.count,e.vertex.operations)}}export{c as MappedMesh};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as r}from\"./sources/resolver.js\";const e={vertexShader:r(\"background/background.vert\"),fragmentShader:r(\"background/background.frag\")};export{e as background};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as e}from\"./sources/resolver.js\";const r={vertexShader:e(\"tileInfo/tileInfo.vert\"),fragmentShader:e(\"tileInfo/tileInfo.frag\")};export{r as tileInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport r from\"./shaderRepository.js\";import{ShaderCompiler as e}from\"../../../../../webgl/ShaderCompiler.js\";function o(r){return function(e){let o=r;return e.split(\"/\").forEach(r=>{o&&(o=o[r])}),o}}const t=new e(o(r));function n(r){return t.resolveIncludes(r)}export{n as resolveIncludes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nconst e={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color * u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos , 0.0, 1.0);\\nv_uv = a_tex;\\n}\"},debug:{overlay:{\"overlay.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvoid main(void) {\\ngl_FragColor = v_color;\\n}\",\"overlay.vert\":\"attribute vec3 a_PositionAndFlags;\\nuniform mat3 u_dvsMat3;\\nuniform vec4 u_colors[4];\\nuniform float u_opacities[4];\\nvarying vec4 v_color;\\nvoid main(void) {\\nvec2 position = a_PositionAndFlags.xy;\\nfloat flags = a_PositionAndFlags.z;\\nint colorIndex = int(mod(flags, 4.0));\\nvec4 color;\\nfor (int i = 0; i < 4; i++) {\\ncolor = u_colors[i];\\nif (i == colorIndex) {\\nbreak;\\n}\\n}\\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\\nfloat opacity;\\nfor (int i = 0; i < 4; i++) {\\nopacity = u_opacities[i];\\nif (i == opacityIndex) {\\nbreak;\\n}\\n}\\nv_color = color * opacity;\\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\\n}\"}},dot:{dot:{\"dot.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nuniform highp float u_tileZoomFactor;\\nvoid main()\\n{\\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\\ngl_FragColor = v_color * alpha;\\n}\",\"dot.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform sampler2D u_texture;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp float u_tileZoomFactor;\\nuniform highp float u_dotSize;\\nuniform highp float u_pixelRatio;\\nvarying vec2 v_pos;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nconst float EPSILON = 0.000001;\\nvoid main()\\n{\\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\\n0., -1., 0.,\\n0., 1., 1.  );\\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\\nv_color = texture2D(u_texture, texCoords.xy);\\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\\nfloat z = 0.;\\nz += 2.0 * step(v_color.a, EPSILON);\\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\\nv_dotRatio = u_dotSize / gl_PointSize;\\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\\n}\"}},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}\"},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":\"precision highp float;\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 4.0\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform sampler2D u_texture;\\nuniform sampler2D u_gradient;\\nuniform vec2 u_densityMinAndInvRange;\\nuniform float u_densityNormalization;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 data = texture2D(u_texture, v_uv);\\nfloat density = data.r * COMPRESSION_FACTOR;\\ndensity *= u_densityNormalization;\\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\\ngl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\",\"heatmapResolve.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nvarying vec2 v_uv;\\nvoid main() {\\nv_uv = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D filterFlags;\\nuniform highp sampler2D animation;\\nuniform highp sampler2D gpgpu;\\nuniform highp sampler2D visualVariableData;\\nuniform highp sampler2D dataDriven0;\\nuniform highp sampler2D dataDriven1;\\nuniform highp sampler2D dataDriven2;\\nuniform float size;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(size));\\n}\\nhighp vec4 getFilterData(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(filterFlags, coords);\\n}\\nhighp vec4 getAnimation(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(animation, coords);\\n}\\nhighp vec4 getVisualVariableData(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(visualVariableData, coords);\\n}\\nhighp vec4 getDataDriven0(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(dataDriven0, coords);\\n}\\nhighp vec4 getDataDriven1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(dataDriven1, coords);\\n}\\nhighp vec4 getGPGPU(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(gpgpu, coords);\\n}\\nhighp vec4 getDataDriven2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(dataDriven2, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"barycentric.glsl\":\"float inTriangle(vec3 bary) {\\nvec3 absBary = abs(bary);\\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\\n}\\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\\nmat3 xyToBarycentricMat3 = mat3(\\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\\n);\\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.00001;\\nconst float EPSILON_HITTEST = 0.05;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\\nconst int BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR = 3;\\nconst int BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR = 5;\\nconst int BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR = 6;\\nconst int BITSET_LINE_SCALE_DASH = 2;\",fill:{\"common.glsl\":\"#include <materials/symbologyTypeUtils.glsl>\\n#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvarying lowp float v_isOutline;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef HITTEST\\nout_color = v_color;\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\nout_color = v_opacity * v_color * color;\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}\",\"fill.vert\":\"#include <materials/symbologyTypeUtils.glsl>\\n#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\nuniform vec2 u_maxIntNumOfCrossing;\\n#include <util/encoding.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#include <materials/fill/hittest.glsl>\\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\\nconst float MAX_REPRESENTABLE_INT = 16777216.0;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\\n0., -2. / 512.,  0.,\\n-1.,  1.,  1.  );\\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\\n#else\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#endif\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR) > 0.5) {\\na_width *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR) > 0.5) {\\na_height *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\\nfloat width = u_zoomFactor * a_width * scale.x;\\nfloat height = u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nfloat dx = 0.0;\\nfloat dy = 0.0;\\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\\nfloat id = rgba2float(vec4(a_id, 0.0));\\ndx = rand(vec2(id, 0.0));\\ndy = rand(vec2(0.0, id));\\n}\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\ndx,            dy,           1);\\nvec2 patternSize = vec2(a_width, a_height);\\nvec2 numPatternsPerMaxInt = vec2(MAX_REPRESENTABLE_INT) / patternSize;\\nvec2 maxIntCrossingOffsetCorrection = patternSize * fract(u_maxIntNumOfCrossing * numPatternsPerMaxInt);\\nvec2 tileOffset = u_tileOffset + maxIntCrossingOffsetCorrection - 0.5 * patternSize;\\ntileOffset = vec2(tileOffset.x * cosA - tileOffset.y * sinA, tileOffset.x * sinA + tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, patternSize);\\nvec2 symbolOffset = u_zoomFactor * scale * vec2(a_offset - tileOffset) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\nif (getBit(a_bitSet, BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR) > 0.5) {\\n#ifdef VV_COLOR\\nv_sampleAlphaOnly *= (1.0 - float(isNan(VV_ADATA[ATTR_VV_COLOR]))) * (1.0 - getBit(a_bitSet, BITSET_GENERIC_LOCK_COLOR));\\n#else\\nv_sampleAlphaOnly = 0.0;\\n#endif\\n}\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\n#ifdef HITTEST\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\\nout_pos = vec3(0., 0., 2.);\\nreturn;\\n}\\n#endif\\nhittestFill(out_color, out_pos);\\ngl_PointSize = 1.0;\\n}\\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(out_color, out_pos);\\n} else {\\ndrawFill(out_color, out_pos);\\n}\\n}\\n#else\\n#define draw drawFill\\n#endif\\nvoid main()\\n{\\nINIT;\\nhighp vec3 pos  = vec3(0.);\\nhighp vec4 color  = vec4(0.);\\ndraw(color, pos);\\nv_color = color;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\",\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestFill(\\nout lowp vec4 out_color,\\nout highp vec3 out_pos\\n) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\\nfloat hittestDist = u_hittestDist;\\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist < 0. || dist >= hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\\n}\\n#endif\"},hittest:{\"common.glsl\":\"#ifdef HITTEST\\nuniform float hittestDist;\\nuniform highp vec2 hittestPos;\\nfloat projectScalar(vec2 a, vec2 b) {\\nreturn dot(a, normalize(b));\\n}\\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\\nvec2 L = p2 - p1;\\nvec2 A = p0 - p1;\\nfloat projAL = projectScalar(A, L);\\nfloat t = clamp(projAL / length(L), 0., 1.);\\nreturn distance(p0, p1 + t * (p2 - p1));\\n}\\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\\nfloat dist = distance(pos, vec3(hittestPos, 1.));\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif ((dist - size) > hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\\n}\\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\\nreturn inTriangle(xyToBarycentric(p, a, b, c));\\n}\\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\\nvec2 ba = b - a;\\nvec2 ca = c - a;\\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\\nif (isParallel) {\\nreturn -1.;\\n}\\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\\nreturn 0.;\\n}\\nfloat distAB = distPointSegment(p, a, b);\\nfloat distBC = distPointSegment(p, b, c);\\nfloat distCA = distPointSegment(p, c, a);\\nreturn min(min(distAB, distBC), distCA);\\n}\\n#endif\"},icon:{\"common.glsl\":\"#include <util/encoding.glsl>\\nuniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nuniform lowp sampler2D u_texture;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\\n#ifdef SDF\\nvec4 getColor(vec2 v_size, vec2 v_tex) {\\n#ifdef HITTEST\\nlowp vec4 fillPixelColor = vec4(1.0);\\n#else\\nlowp vec4 fillPixelColor = v_color;\\n#endif\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nreturn v_opacity * fillPixelColor;\\n}\\n#else\\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\nreturn v_opacity * texColor * v_color;\\n}\\n#endif\",heatmapAccumulate:{\"common.glsl\":\"varying lowp vec4 v_hittestResult;\\nvarying mediump vec2 v_offsetFromCenter;\\nvarying highp float v_fieldValue;\",\"heatmapAccumulate.frag\":\"precision mediump float;\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 0.25\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform lowp sampler2D u_texture;\\nvoid main() {\\n#ifdef HITTEST\\ngl_FragColor = v_hittestResult;\\n#else\\nfloat radius = length(v_offsetFromCenter);\\nfloat shapeWeight = step(radius, 1.0);\\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\\n#endif\\n}\",\"heatmapAccumulate.vert\":\"precision highp float;\\nattribute vec2 a_vertexOffset;\\nvec4 a_color = vec4(0.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\nuniform float u_radius;\\nuniform float u_isFieldActive;\\n#include <materials/vcommon.glsl>\\n#include <materials/hittest/common.glsl>\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\nvoid main() {\\nfloat filterFlags = getFilterFlags();\\n#ifdef HITTEST\\nhighp vec4 out_hittestResult = vec4(0.);\\nhighp vec3 out_pos = vec3(0.);\\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\\nv_hittestResult = out_hittestResult;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\nv_offsetFromCenter = sign(a_vertexOffset);\\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_vertexOffset1;\\nattribute vec2 a_vertexOffset2;\\nattribute vec2 a_texCoords1;\\nattribute vec2 a_texCoords2;\\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\\n}\\nvoid hittestIcon(\\ninout lowp vec4 out_color,\\nout highp vec3 out_pos,\\nin vec3 pos,\\nin vec3 offset,\\nin vec2 size,\\nin float scaleFactor,\\nin float isMapAligned\\n) {\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec2 tex0 = a_texCoords  / u_mosaicSize;\\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\\nfloat alphaSum = 0.;\\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\\nout_pos.z += step(alphaSum, .05) * 2.0;\\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\\n}\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvoid main()\\n{\\n#ifdef HITTEST\\nvec4 color = v_color;\\n#else\\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\\n#endif\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/icon/hittest.glsl>\\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat f = getSize(size.y) / size.y;\\nfloat sizeFactor = size.y / referenceSize;\\nreturn getSize(referenceSize) / referenceSize;\\n#else\\nreturn 1.;\\n#endif\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\\nsize.xy     *= scaleFactor;\\noffset.xy   *= scaleFactor;\\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\\nvec2 v_tex   = a_texCoords / u_mosaicSize;\\nfloat filterFlags = getFilterFlags();\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\\nv_sizeTex  = vec4(size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 128.0;\\n#endif\\n#ifdef HITTEST\\nhighp vec4 out_color = vec4(0.);\\nhighp vec3 out_pos   = vec3(0.);\\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\\nv_color = out_color;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_isBackground  = a_glyphData.w;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor = (isBackground + isText) * a_color;\\nv_color     = animation * ((1.0 - u_isHaloPass) * nonHaloColor + (u_isHaloPass * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHaloPass * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\ngl_Position = vec4(v_pos, 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist >= u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\\n}\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\n#ifdef HITTEST\\nvoid main() {\\ngl_FragColor = v_color;\\n}\\n#else\\nvoid main() {\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\\n#endif\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/line/hittest.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\n#ifdef HITTEST\\nvoid draw() {\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\\nfloat a_cimHalfWidth = a_aux.x / 16. ;\\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nhighp vec3 pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestLine(v_color, pos, halfWidth);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#else\\nvoid draw()\\n{\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#endif\\nvoid main() {\\nINIT;\\ndraw();\\n}\"},pie:{\"pie.common.glsl\":\"uniform float outlineWidth;\\nuniform mediump float sectorThreshold;\\nvarying vec3  v_id;\\nvarying vec3  v_pos;\\nvarying vec2  v_offset;\\nvarying vec4  v_color;\\nvarying float v_size;\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nvarying vec2  v_filteredSectorToColorId[numberOfFields];\\nvarying vec2  v_texCoords;\\nvarying float v_outlineWidth;\\nvarying float v_opacity;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\",\"pie.frag\":\"precision highp float;\\n#include <util/atan2.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/pie/pie.common.glsl>\\nuniform lowp vec4 colors[numberOfFields];\\nuniform lowp vec4 defaultColor;\\nuniform lowp vec4 othersColor;\\nuniform lowp vec4 outlineColor;\\nuniform float donutRatio;\\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[numberOfFields]) {\\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\\nreturn colors[colorIndex];\\n}\\nconst int OTHER_SECTOR_ID = 255;\\n#ifdef HITTEST\\nvec4 getColor() {\\nfloat distanceSize = length(v_offset) * v_size;\\nfloat donutSize = donutRatio * v_size;\\nfloat alpha = step(donutSize, distanceSize) * (1.0 - step(v_size, distanceSize));\\nreturn v_color;\\n}\\n#else\\nvec4 getColor() {\\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\\nif (angle < 0.0) {\\nangle += 360.0;\\n} else if (angle > 360.0) {\\nangle = mod(angle, 360.0);\\n}\\nint numOfEntries = int(v_numOfEntries);\\nfloat maxSectorAngle = v_maxSectorAngle;\\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || sectorThreshold > 0.0) ? othersColor : defaultColor;\\nlowp vec4 prevColor = vec4(0.0);\\nlowp vec4 nextColor = vec4(0.0);\\nfloat startSectorAngle = 0.0;\\nfloat endSectorAngle = 0.0;\\nif (angle < maxSectorAngle) {\\nfor (int index = 0; index < numberOfFields; ++index) {\\nstartSectorAngle = endSectorAngle;\\nendSectorAngle = v_filteredSectorToColorId[index].x;\\nif (endSectorAngle > angle) {\\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\\nprevColor = sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? othersColor :\\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? othersColor :\\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\\nbreak;\\n}\\nif (index == numOfEntries - 1) {\\nbreak;\\n}\\n}\\n} else {\\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\\nstartSectorAngle = maxSectorAngle;\\nendSectorAngle = 360.0;\\n}\\nlowp vec4 outlineColor = outlineColor;\\nfloat offset = length(v_offset);\\nfloat distanceSize = offset * v_size;\\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\\nfloat distanceToStartSector = (angle - startSectorAngle);\\nfloat distanceToEndSector = (endSectorAngle - angle);\\nfloat sectorThreshold = 0.6;\\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\\nif (endSectorAlpha > 0.0) {\\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\\n} else if (beginSectorAlpha > 0.0) {\\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\\n}\\n}\\nfloat donutSize = donutRatio * (v_size - v_outlineWidth);\\nfloat endOfDonut = donutSize - v_outlineWidth;\\nfloat aaThreshold = 0.75;\\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\\nfloat startOfOutline = v_size - v_outlineWidth;\\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\\n}\\nreturn v_opacity * circleAlpha * fillColor;\\n}\\n#endif\\nvoid main()\\n{\\nvec4 color = getColor();\\n#ifdef highlight\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"pie.vert\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/barycentric.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/pie/pie.common.glsl>\\n#include <materials/hittest/common.glsl>\\nattribute float a_bitSet;\\nattribute vec2  a_offset;\\nattribute vec2  a_texCoords;\\nattribute vec2  a_size;\\nattribute float a_referenceSize;\\nattribute vec2  a_zoomRange;\\nint filterValue(in float sectorAngle,\\nin int currentIndex,\\ninout FilteredChartInfo filteredInfo,\\ninout vec2 filteredSectorToColorId[numberOfFields]) {\\nif (sectorAngle > sectorThreshold * 360.0) {\\nfilteredInfo.endSectorAngle += sectorAngle;\\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n++filteredInfo.colorId;\\n}\\nreturn 0;\\n}\\nint filterValues(inout vec2 filteredSectorToColorId[numberOfFields],\\ninout FilteredChartInfo filteredInfo,\\nin float sectorAngles[numberOfFields]) {\\nfor (int index = 0; index < numberOfFields; ++index) {\\nfloat sectorValue = sectorAngles[index];\\nfilterValue(sectorValue, index, filteredInfo, filteredSectorToColorId);\\n}\\nreturn filteredInfo.colorId;\\n}\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float a_referenceSize, in float bitSet) {\\nvec2 outSize = baseSize;\\n#ifdef VV_SIZE\\nfloat r = getSize(a_referenceSize, currentScale) / a_referenceSize;\\noutSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn outSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nfloat filterNaNValues(in float value) {\\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_size;\\nvec2  a_offset = a_offset / 16.0;\\nfloat outlineSize = outlineWidth;\\nfloat a_bitSet = a_bitSet;\\nfloat a_referenceSize = a_referenceSize;\\nvec2 a_texCoords = a_texCoords / 4.0;\\nvec2 markerSize = getMarkerSize(a_offset, a_size, outlineSize, a_referenceSize, a_bitSet);\\nfloat filterFlags = getFilterFlags();\\nvec3  pos         = vec3(a_pos / 10.0, 1.0);\\nv_opacity      = getOpacity();\\nv_id           = norm(a_id);\\nv_pos          = displayViewScreenMat3 * pos + getOffset(a_offset, a_bitSet);\\nv_offset       = sign(a_texCoords - 0.5);\\nv_size         = max(markerSize.x, markerSize.y);\\nv_outlineWidth = outlineSize;\\nfloat attributeData[10];\\nvec4 attributeData3 = getDataDriven0(a_id);\\nattributeData[0] = filterNaNValues(attributeData3.x);\\nattributeData[1] = filterNaNValues(attributeData3.y);\\nattributeData[2] = filterNaNValues(attributeData3.z);\\nattributeData[3] = filterNaNValues(attributeData3.w);\\n#if (numberOfFields > 4)\\nvec4 attributeData4 = getDataDriven1(a_id);\\nattributeData[4] = filterNaNValues(attributeData4.x);\\nattributeData[5] = filterNaNValues(attributeData4.y);\\nattributeData[6] = filterNaNValues(attributeData4.z);\\nattributeData[7] = filterNaNValues(attributeData4.w);\\n#endif\\n#if (numberOfFields > 8)\\nvec4 attributeData5 = getDataDriven2(a_id);\\nattributeData[8] = filterNaNValues(attributeData5.x);\\nattributeData[9] = filterNaNValues(attributeData5.y);\\n#endif\\nfloat sum = 0.0;\\nfor (int i = 0; i < numberOfFields; ++i) {\\nsum += attributeData[i];\\n}\\nfloat sectorAngles[numberOfFields];\\nfor (int i = 0; i < numberOfFields; ++i) {\\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\\n}\\nvec2 filteredSectorToColorId[numberOfFields];\\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\\nv_numOfEntries = float(numOfEntries);\\nv_maxSectorAngle = filteredInfo.endSectorAngle;\\nv_filteredSectorToColorId = filteredSectorToColorId;\\n#ifdef HITTEST\\nhighp vec3 out_pos = vec3(0.0);\\nv_color            = vec4(0.0);\\nhittestMarker(v_color, out_pos, viewMat3 * tileMat3 *  pos, v_size);\\ngl_PointSize = 1.0;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},shared:{line:{\"common.glsl\":\"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};\",\"line.frag\":\"uniform lowp float u_blur;\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}\",\"line.vert\":\"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat refLineWidth = 2.0 * referenceHalfWidth;\\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}\"}},\"symbologyTypeUtils.glsl\":\"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\n#endif\",text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\nreturn alpha * v_color * v_opacity;\\n}\\n#endif\\nvoid main()\\n{\\ngl_FragColor = getColor();\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\n#include <materials/text/hittest.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_isBackground  = a_aux.y;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor  = (isBackground * a_color) + (isText * getColor(a_color, a_bitSet, 1));\\nv_color   = u_isHaloPass * a_haloColor + (1.0 - u_isHaloPass) * nonHaloColor;\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\nv_edgeDistanceOffset = u_isHaloPass * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n#ifdef HITTEST\\nhighp vec3 out_pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\\n+ u_tileMat3 * offset, fontSize / 2.);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#else\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#endif\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nconst int maxHighlightReasons = 6;\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + maxHighlightReasons);\\n}\\nfloat getHighlightBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}\\nhighp float rand(in vec2 co) {\\nhighp float a = 12.9898;\\nhighp float b = 78.233;\\nhighp float c = 43758.5453;\\nhighp float dt = dot(co, vec2(a,b));\\nhighp float sn = mod(dt, 3.14);\\nreturn fract(sin(sn) * c);\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/barycentric.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 displayViewScreenMat3;\\nuniform highp mat3 displayViewMat3;\\nuniform highp mat3 displayMat3;\\nuniform highp mat3 tileMat3;\\nuniform highp mat3 viewMat3;\\nuniform highp float pixelRatio;\\nuniform mediump float zoomFactor;\\nuniform mediump float antialiasing;\\nuniform mediump float currentScale;\\nuniform mediump float currentZoom;\\nuniform mediump float metersPerSRUnit;\\nuniform mediump float activeReasons;\\nuniform mediump float highlightAll;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\ntarget.rgba = getVisualVariableData(a_id);\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size, in float currentScale) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE], currentScale);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getFilterData(a_id).x * 255.0);\\n#else\\nreturn getFilterData(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAnimation(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getFilterData(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrixNoDisplay(float isMapAligned) {\\nreturn isMapAligned * viewMat3 * tileMat3 + (1.0 - isMapAligned) * tileMat3;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * displayViewMat3 + (1.0 - isMapAligned) * displayMat3;\\n}\\nfloat checkHighlightBit(float filterFlags, int index) {\\nreturn getHighlightBit(filterFlags, index) * getBit(activeReasons, index);\\n}\\nfloat checkHighlight(float filterFlags) {\\nfloat result = checkHighlightBit(filterFlags, 0);\\nfor (int i = 1; i < maxHighlightReasons; i++) {\\nresult = result + checkHighlightBit(filterFlags, i);\\n}\\nreturn step(0.1, result + highlightAll);\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef inside\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(outside)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(highlight)\\npos.z += 2.0 * (1.0 - checkHighlight(filterFlags));\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, currentZoom) + (1.0 - step(minMaxZoom.x, currentZoom)));\\nreturn pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float colorValues[8];\\nuniform vec4 colors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 minMaxValueAndSize;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float values[8];\\nuniform float sizes[8];\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float values[8];\\nuniform float sizes[8];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float unitMeterRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float opacityValues[8];\\nuniform float opacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float rotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - minMaxValueAndSize.x) / (minMaxValueAndSize.y - minMaxValueAndSize.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn minMaxValueAndSize.z + interpolationRatio * (minMaxValueAndSize.w - minMaxValueAndSize.z);\\n}\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nfloat getVVScaleStopsSize(float currentScale) {\\nfloat outSize;\\nif (currentScale <= values[0]) {\\noutSize = sizes[0];\\n} else {\\nif (currentScale >= values[7]) {\\noutSize = sizes[7];\\n} else {\\nint index;\\nindex = -1;\\nfor (int i = 0; i < 8; i++) {\\nif (values[i] > currentScale) {\\nindex = i;\\nbreak;\\n}\\n}\\nint prevIndex = index - 1;\\nfloat a = currentScale - values[prevIndex];\\nfloat b = values[index] - values[prevIndex];\\noutSize = mix(sizes[prevIndex], sizes[index], a / b);\\n}\\n}\\nreturn outSize;\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 8;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= values[0]) {\\nreturn sizes[0];\\n}\\nif (sizeValue >= values[VV_SIZE_N - 1]) {\\nreturn sizes[VV_SIZE_N - 1];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (values[i] >= sizeValue) {\\nfloat f = (sizeValue - values[i-1]) / (values[i] - values[i-1]);\\nreturn mix(sizes[i-1], sizes[i], f);\\n}\\n}\\nreturn sizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn sizeValue * (metersPerSRUnit / unitMeterRatio);\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= opacityValues[0]) {\\nreturn opacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (opacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - opacityValues[i-1]) / (opacityValues[i] - opacityValues[i-1]);\\nreturn mix(opacities[i-1], opacities[i], f);\\n}\\n}\\nreturn opacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (rotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (rotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= colorValues[0]) {\\nreturn colors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (colorValues[i] >= colorValue) {\\nfloat f = (colorValue - colorValues[i-1]) / (colorValues[i] - colorValues[i-1]);\\nreturn mix(colors[i-1], colors[i], f);\\n}\\n}\\nreturn colors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize, in float currentScale)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nfloat outSize = getVVScaleStopsSize(currentScale);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}\"},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\nvec4 color = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\ngl_FragColor = clamp(color, 0.0, 1.0);\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nuniform vec2 u_shadowOffset;\\nuniform highp mat3 u_displayViewMat3;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n#ifdef LOOKUP_PROJECTION\\nvec4 pv = texture2D(u_transformGrid, coords);\\nreturn vec2(pv.r, pv.g);\\n#endif\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}\"},flow:{\"getFadeOpacity.glsl\":\"uniform float u_decayRate;\\nuniform float u_fadeToZero;\\nfloat getFadeOpacity(float x) {\\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\\n}\",\"getFragmentColor.glsl\":\"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\\nif (dist > featheringStart) {\\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\\n}\\nreturn color;\\n}\",imagery:{\"imagery.frag\":\"precision highp float;\\nvarying vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform float u_Min;\\nuniform float u_Max;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nfloat getIntensity(float v) {\\nreturn u_Min + v * (u_Max - u_Min);\\n}\\nvoid main(void) {\\nvec4 sampled = texture2D(u_texture, v_texcoord);\\nfloat intensity = getIntensity(sampled.r);\\ngl_FragColor = getColor(intensity);\\ngl_FragColor.a *= getOpacity(sampled.r);\\ngl_FragColor.a *= sampled.a;\\ngl_FragColor.rgb *= gl_FragColor.a;\\n}\",\"imagery.vert\":\"attribute vec2 a_position;\\nattribute vec2 a_texcoord;\\nuniform mat3 u_dvsMat3;\\nvarying vec2 v_texcoord;\\nvoid main(void) {\\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},particles:{\"particles.frag\":\"precision highp float;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/getFragmentColor.glsl>\\nvoid main(void) {\\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\\n}\",\"particles.vert\":\"attribute vec4 a_xyts0;\\nattribute vec4 a_xyts1;\\nattribute vec4 a_typeIdDurationSeed;\\nattribute vec4 a_extrudeInfo;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/vv.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nvec2 position0 = a_xyts0.xy;\\nfloat t0 = a_xyts0.z;\\nfloat speed0 = a_xyts0.w;\\nvec2 position1 = a_xyts1.xy;\\nfloat t1 = a_xyts1.z;\\nfloat speed1 = a_xyts1.w;\\nfloat type = a_typeIdDurationSeed.x;\\nfloat id = a_typeIdDurationSeed.y;\\nfloat duration = a_typeIdDurationSeed.z;\\nfloat seed = a_typeIdDurationSeed.w;\\nvec2 e0 = a_extrudeInfo.xy;\\nvec2 e1 = a_extrudeInfo.zw;\\nfloat animationPeriod = duration + u_trailLength;\\nfloat scaledTime = u_time * u_flowSpeed;\\nfloat randomizedTime = scaledTime + seed * animationPeriod;\\nfloat t = mod(randomizedTime, animationPeriod);\\nfloat fUnclamped = (t - t0) / (t1 - t0);\\nfloat f = clamp(fUnclamped, 0.0, 1.0);\\nfloat clampedTime = mix(t0, t1, f);\\nfloat speed = mix(speed0, speed1, f);\\nvec2 extrude;\\nvec2 position;\\nfloat fadeOpacity;\\nfloat introOpacity;\\nif (type == 2.0) {\\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nvec2 ortho = mix(e0, e1, f);\\nvec2 parallel;\\nparallel = normalize(position1 - position0) * 0.5;\\nif (id == 1.0) {\\nextrude = ortho;\\nv_texcoord = vec2(0.5, 0.0);\\n} else if (id == 2.0) {\\nextrude = -ortho;\\nv_texcoord = vec2(0.5, 1.0);\\n} else if (id == 3.0) {\\nextrude = ortho + parallel;\\nv_texcoord = vec2(1.0, 0.0);\\n} else if (id == 4.0) {\\nextrude = -ortho + parallel;\\nv_texcoord = vec2(1.0, 1.0);\\n}\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else {\\nif (fUnclamped < 0.0) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nif (id == 1.0) {\\nextrude = e0;\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 2.0) {\\nextrude = -e0;\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 3.0) {\\nextrude = mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else if (id == 4.0) {\\nextrude = -mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n}\\n}\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_color.a *= fadeOpacity;\\nv_color.a *= mix(1.0, introOpacity, u_introFade);\\nv_color.rgb *= v_color.a;\\n}\"},streamlines:{\"streamlines.frag\":\"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_size;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/getFragmentColor.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\\n}\",\"streamlines.vert\":\"attribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nattribute float a_speed;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_side;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nvoid main(void) {\\nvec4 lineColor = getColor(a_speed);\\nfloat lineOpacity = getOpacity(a_speed);\\nfloat lineSize = getSize(a_speed);\\nvec2 position = a_positionAndSide.xy;\\nv_side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\nv_color = lineColor;\\nv_color.a *= lineOpacity;\\nv_color.rgb *= v_color.a;\\nv_size = lineSize;\\n}\"},\"vv.glsl\":\"#define MAX_STOPS 8\\n#ifdef VV_COLOR\\nuniform float u_color_stops[MAX_STOPS];\\nuniform vec4 u_color_values[MAX_STOPS];\\nuniform int u_color_count;\\n#else\\nuniform vec4 u_color;\\n#endif\\n#ifdef VV_OPACITY\\nuniform float u_opacity_stops[MAX_STOPS];\\nuniform float u_opacity_values[MAX_STOPS];\\nuniform int u_opacity_count;\\n#else\\nuniform float u_opacity;\\n#endif\\n#ifdef VV_SIZE\\nuniform float u_size_stops[MAX_STOPS];\\nuniform float u_size_values[MAX_STOPS];\\nuniform int u_size_count;\\n#else\\nuniform float u_size;\\n#endif\\nuniform float u_featheringOffset;\\nvec4 getColor(float x) {\\n#ifdef VV_COLOR\\nvec4 color = u_color_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_color_count) {\\nbreak;\\n}\\nfloat x1 = u_color_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_color_stops[i];\\nvec4 y2 = u_color_values[i];\\nif (x < x2) {\\nvec4 y1 = u_color_values[i - 1];\\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\ncolor = y2;\\n}\\n}\\n}\\n#else\\nvec4 color = u_color;\\n#endif\\nreturn color;\\n}\\nfloat getOpacity(float x) {\\n#ifdef VV_OPACITY\\nfloat opacity = u_opacity_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_opacity_count) {\\nbreak;\\n}\\nfloat x1 = u_opacity_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_opacity_stops[i];\\nfloat y2 = u_opacity_values[i];\\nif (x < x2) {\\nfloat y1 = u_opacity_values[i - 1];\\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nopacity = y2;\\n}\\n}\\n}\\n#else\\nfloat opacity = u_opacity;\\n#endif\\nreturn opacity;\\n}\\nfloat getSize(float x) {\\n#ifdef VV_SIZE\\nfloat size = u_size_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_size_count) {\\nbreak;\\n}\\nfloat x1 = u_size_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_size_stops[i];\\nfloat y2 = u_size_values[i];\\nif (x < x2) {\\nfloat y1 = u_size_values[i - 1];\\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nsize = y2;\\n}\\n}\\n}\\n#else\\nfloat size = u_size;\\n#endif\\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\\n}\"},magdir:{\"magdir.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}\",\"magdir.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},reproject:{\"reproject.frag\":\"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}\",\"reproject.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}\"},scalar:{\"scalar.frag\":\"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}\",\"scalar.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nuniform mat3 u_worldExtent;\\nvoid main() {\\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\\n}\"},test:{\"TestShader.common.glsl\":\"#ifndef RETURN_RED\\nvarying    vec4      v_color;\\n#endif\\nvarying    vec2      v_offset;\",\"TestShader.frag\":\"precision highp float;\\n#include <test/TestShader.common.glsl>\\nvoid main() {\\nif (v_offset.x > -.5 && v_offset.y > -.5 && v_offset.x < .5 && v_offset.y < .5) {\\ndiscard;\\n}\\n#ifdef RETURN_RED\\ngl_FragColor = vec4(1., 0., 0., 1.);\\n#else\\ngl_FragColor = v_color;\\n#endif\\n}\",\"TestShader.vert\":\"const float POS_PRECISION_FACTOR = 10.;\\nconst float OFFSET_PRECISION_FACTOR = 10.;\\nconst float SIZE_PRECISION_FACTOR = 10.;\\nattribute  vec2      a_pos_packed;\\nattribute  vec2      a_offset_packed;\\nattribute  float     a_size_packed;\\n#ifdef DATA_DRIVEN_COLOR\\nconst float u_dataDrivenColor_validValues[4] = float[4](0., 0., 1., 0.);\\nuniform    vec4      u_dataDrivenColor_colorFallback;\\nuniform    vec4      u_dataDrivenColor_color;\\n#endif\\nuniform    float     u_view_zoomLevel;\\n#include <test/TestShader.common.glsl>\\n#ifdef DATA_DRIVEN_COLOR\\nvec4 getColor(float value) {\\nint index = -1;\\nfor (int i = 0; i < 4; i++) {\\nif (u_dataDrivenColor_validValues[i] == value) {\\nindex = i;\\nbreak;\\n}\\n}\\nif (index == -1) {\\nreturn u_dataDrivenColor_colorFallback;\\n}\\nreturn u_dataDrivenColor_color;\\n}\\n#endif\\nvoid main() {\\nvec2  a_pos = a_pos_packed / POS_PRECISION_FACTOR;\\nvec2  a_offset = a_offset_packed / OFFSET_PRECISION_FACTOR;\\nfloat a_size = a_size_packed / SIZE_PRECISION_FACTOR;\\nvec4 color = vec4(1., 0., 0., 1.);\\n#ifdef DATA_DRIVEN_COLOR\\ncolor = getColor(1.);\\n#endif\\nvec2 offsetScaled = a_offset * a_size;\\nvec4 pos = vec4(a_pos.xy + offsetScaled, 0., 1.);\\ngl_Position = pos;\\n#ifndef RETURN_RED\\nv_color = color;\\n#endif\\nv_offset = a_offset;\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ncolor.rgb *= color.a;\\ngl_FragColor = color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}\"},util:{\"atan2.glsl\":\"float atan2(in float y, in float x) {\\nfloat t0, t1, t2, t3, t4;\\nt3 = abs(x);\\nt1 = abs(y);\\nt0 = max(t3, t1);\\nt1 = min(t3, t1);\\nt3 = 1.0 / t0;\\nt3 = t1 * t3;\\nt4 = t3 * t3;\\nt0 =         - 0.013480470;\\nt0 = t0 * t4 + 0.057477314;\\nt0 = t0 * t4 - 0.121239071;\\nt0 = t0 * t4 + 0.195635925;\\nt0 = t0 * t4 - 0.332994597;\\nt0 = t0 * t4 + 0.999995630;\\nt3 = t0 * t3;\\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\\nt3 = y < 0.0 ? -t3 : t3;\\nreturn t3;\\n}\",\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\"}};export{e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{DataType as e}from\"./enums.js\";import{fromLayout as o}from\"./VertexAttributeLocations.js\";import{VertexElementDescriptor as t}from\"./VertexElementDescriptor.js\";const r=[new t(\"position\",2,e.UNSIGNED_SHORT,0,4)],s=[new t(\"a_pos\",2,e.BYTE,0,2)],n=[new t(\"a_pos\",2,e.BYTE,0,4),new t(\"a_tex\",2,e.BYTE,2,4)],i=o(r);export{s as Pos2b,r as Pos2us,i as Pos2usLocations,n as PosTex2b};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nclass t{constructor(t,s){this.layout=t,this.buffer=s}}export{t as VertexBuffer};\n"],"names":["n","Float32Array","t","r","e","o","u","c","i","a","f","l","s","_","Object","freeze","defineProperty","__proto__","ONES","UNIT_X","UNIT_Y","UNIT_Z","ZEROS","clone","create","fromValues","ones","unitX","unitY","unitZ","zeros","Symbol","toStringTag","value","y","N","UNIT_W","unitW","constructor","super","arguments","this","_color","dispose","_program","prepareState","context","setStencilTestEnabled","setBlendingEnabled","setFaceCullingEnabled","setColorMask","setStencilOp","setStencilWriteMask","setStencilFunction","draw","state","requestRender","m","allowDelayedRender","p","location","name","count","type","SHORT","d","getVAO","bufferLayout","indexBuffer","locations","compiled","useProgram","setUniform2fv","setUniform4fv","setUniformMatrix3fv","displayMat3","bindVAO","drawElements","TRIANGLES","size","UNSIGNED_INT","_patternMatrix","_programOptions","id","pattern","_vao","drawMany","painter","_loadWGLResources","displayLevel","styleLayer","backgroundMaterial","vectorTilesMaterialManager","getPaintValue","g","h","x","window","devicePixelRatio","b","spriteMosaic","M","v","w","j","getMaterialProgram","getMosaicItemPosition","tl","br","page","getPageSize","bind","setUniform4f","setUniform1i","setUniform1f","z","rangeX","transforms","displayViewScreenMat3","Math","max","round","key","level","width","drawArrays","TRIANGLE_STRIP","Int8Array","createVertex","geometryLayout","requiredLevel","styleLayerUID","some","layerData","get","circleIndexCount","circleMaterial","displayViewMat3","I","U","has","setDataUniforms","prepareForRendering","vao","stencilRef","Uint32Array","BYTES_PER_ELEMENT","circleIndexStart","triangleCount","_fillProgramOptions","_outlineProgramOptions","renderPass","fillIndexCount","outlineIndexCount","getPaintProperty","isDataDriven","getValue","_drawFill","hasDataDrivenOutlineColor","outlineUsesFillColor","_drawOutline","pixelRatio","P","E","fillMaterial","D","S","fillVAO","patternMap","fillIndexStart","outlineMaterial","outlineVAO","outlineIndexStart","sdf","lineIndexCount","lineMaterial","getDashKey","getLayoutValue","T","V","lineIndexStart","_iconProgramOptions","_sdfProgramOptions","_spritesTextureSize","_drawIcons","_drawText","iconMaterial","iconPerPageElementsMap","isIconSDF","rotation","updateOpacityInfo","iconVAO","performance","now","lastOpacityUpdate","_renderIconRange","getWidth","getHeight","_setStencilState","glyphMosaic","textMaterial","glyphPerPageElementsMap","R","L","_glyphTextureSize","height","k","O","textVAO","forEach","_renderGlyphRange","is3D","stencilSymbols","clip","stencil","tileDebugInfo","vtlBackground","vtlFill","vtlLine","vtlCircle","vtlSymbol","destroy","setTransform","resolution","tileMat3","toScreenNoRotation","rangeY","labelMat2d","viewMat2d","toScreen","tileUnitsToPixels","PI","_createTransforms","containsScreenPoint","viewMat3","instance","materialKey","target","start","textureKey","indexEnd","extend","render","techniqueRef","getStencilReference","getAttributePrecisionPackFactors","instanceId","getMesh","drawCompute","drawGeometry","getComputeVAO","POINTS","getGeometryVAO","_length","_minOrderedLength","_materialKeys","Set","fromDisplayEntities","values","records","getInstance","addRecord","indexStart","indexCount","vertexStart","vertexCount","length","minOrderedLength","minUnorderedLength","drawPhase","infos","_head","_tail","_insert","symbologyPlane","data","next","add","_insertAtHead","_insertAtEnd","_insertAtMiddle","_indexOnly","vertex","operations","index","copyRecord","push","srcFrom","dstFrom","mutate","_pos","_buffer","_i32View","Int32Array","_f32View","readInt32","readF32","entities","vertexData","map","layout","stride","DataView","vertices","byteLength","attributes","offset","packPrecisionFactor","metrics","_fader","_labelInstanceId","_meshes","Map","_entities","_entityIndex","_invalidated","_nextUploadAllowed","tileAge","_metrics","_metricsVisibility","_entityIds","_entityIdsFromBuffer","_attributeEpoch","_encounteredEnd","isCoverage","rendering","_decluttered","_objectIdMap","visible","enableDeferredUploads","clear","removeFeatureTileMetrics","_displayList","beforeRender","_needsReshuffle","reshuffleManager","schedule","tryReady","_uploadAllowed","isReady","console","debug","ready","decluttered","symbols","labelClassId","set","hasData","hasAnimations","needsUpload","_hasMetrics","upload","getDisplayList","sort","sortKey","reshuffle","debugInfo","display","Error","getSortKeys","onMessage","objectIdMap","_onAppendMessage","_onUpdateMessage","_aggregateMemoryStats","end","attributeEpoch","_writeLabelVisibilityToMesh","append","isPixelBuffer","modify","remove","_removeByIdsFromBuffer","_removeByIds","destroyed","getLogger","info","copyPixelBufferedEntitesFrom","overlaps","_ensureMesh","useVisibility","copyRecordFrom","metricsVisibility","copyMetricsVisibility","updateLabelVisibility","uniqueSymbol","show","selectedForRendering","hash","setEntityRecordRangeVisibility","recordStart","recordCount","_stage","bufferPool","_removeDuplicatedBufferedEntites","_insertVertexData","updateBaseOffsets","_tryInsertBufferedEntity","_insertEntity","_insertMetrics","tile","insertFeatureTileMetrics","error","_removeRecordsFromMesh","filter","_remove","delete","displayId","memory","bytesUsed","bytesReserved","memoryStats","entityIds","objectId","LN2","log","acquireUint32Array","_array","_pool","array","getUint32View","buffer","byteOffset","expand","releaseUint32Array","_data","ArrayBuffer","BYTE_LENGTH","_freeList","firstFit","free","_pages","_pagesByBuffer","_bytesAllocated","_bytesTotal","_addPage","tileDebugInfoTexture","_destroyed","debugSlot","parent","children","indexOf","coords","lengths","slice","indices","primitiveType","isMapSpace","_cache","fromPath","path","floor","fromGeometry","geometry","fromPolygon","fromMapExtent","fromScreenExtent","xmin","ymin","xmax","ymax","vertexBuffer","getIndexBuffer","createIndex","getVertexBuffers","_clip","stage","_handle","version","_invalidate","fromClipArea","_destroyGL","mesh","_lastWidth","_lastHeight","_createMesh","clips","_updateClippingInfo","renderChildren","setPipelineState","_renderPasses","prepareRenderPasses","registerRenderPass","brushes","_clippingInfos","items","brushEffect","_initialized","_solidProgram","_solidVertexArrayObject","setDepthWriteEnabled","setDepthTestEnabled","_initialize","setStencilFunctionSeparate","_outlineProgram","_tileInfoProgram","_outlineVertexArrayObject","_tileInfoVertexArrayObject","_ctx","setBlendFunctionSeparate","setUniform2f","LINE_STRIP","_getTexture","bindTexture","descriptor","document","createElement","getContext","wrapMode","samplingMode","isImmutable","clearRect","canvas","textAlign","textBaseline","font","lineWidth","fillStyle","strokeStyle","strokeText","fillText","setData","Array","isArray","last","head","maxAvailableSpace","strideInt","bufferType","dirty","_gpu","_cpu","elementSize","intSize","fillPointer","byteSize","invalidated","bufferSize","invalidatedComputeBuffer","_gpuComputeTriangles","invalidate","_invalidateTriangleBuffer","freeList","ensure","setU32","min","setF32","setF32Range","fill","getF32","getGPUBuffer","_createComputeBuffer","_createBuffer","getView","insert","copyFrom","setSubData","FLOAT","divisor","normalized","computeAttributeMap","_bufferPool","_layout","_invalidatedGeometry","_invalidatedCompute","_position","find","_indexBuffer","_vertexBuffer","_visibilityBuffer","_computeVAO","disposeVAOOnly","_geometryVAO","getDrawArgs","primitive","getDebugVertexInfo","_ensure","vertexFrom","indexFrom","getEntityRecordVisibility","vertexShader","fragmentShader","background","bitBlit","overlay","dot","filtering","heatmap","heatmapResolve","highlight","materials","hittest","icon","heatmapAccumulate","label","line","pie","shared","text","blit","bloom","composite","gaussianBlur","luminosityHighPass","blur","dra","sobel","filterEffect","pp","raster","common","flow","imagery","particles","streamlines","magdir","reproject","scalar","test","tileInfo","util","split","resolveIncludes","UNSIGNED_SHORT","BYTE"],"sourceRoot":""}