(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[70],{524:function(e,t,i){"use strict";i.d(t,"a",(function(){return S}));var a=i(0),r=(i(6),i(5)),l=i(1),s=i(32),n=i(2),o=i(12),c=i(4),h=(i(8),i(9),i(133)),p=i(15),u=i(63),b=i(19),d=i(50),v=i(46),f=i(18),m=i(324),y=i(10),O=i(107);class j{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),a=i%8,r=i>>3,l=this._tileAvailabilityBitSet;return r<0||r>l.length?"unknown":l[r]&1<<a?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let a=!0,r=!0;const l=Math.ceil(t*i/8),s=new Uint8Array(l);let n=0;for(let o=0;o<e.length;o++){const t=o%8;e[o]?(r=!1,s[n]|=1<<t):a=!1,7===t&&++n}r?this._allAvailability="unavailable":a?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const i=e.service.request||d.default,{row:a,col:r,width:l,height:s}=e,n={query:{f:"json"}};return t=t?{...n,...t}:n,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then(e=>e.data).catch(e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:a,left:r,width:l,height:s},valid:!0,data:Object(O.b)(l*s,0)};throw e}).then(e=>{if(e.location&&(e.location.top!==a||e.location.left!==r||e.location.width!==l||e.location.height!==s))throw new o.a("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:a,left:r,width:l,height:s}});return j.fromJSON(e)})}static fromJSON(e){j.validateJSON(e);const t=new j;return t.location=Object.freeze(Object(y.a)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static validateJSON(e){if(!e||!e.location)throw new o.a("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new o.a("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new o.a("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new o.a("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new o.a("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function g(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}var _;const w=r.a.getLogger("esri.layers.support.TilemapCache");let S=_=class extends b.a{constructor(e){super(e),this._handles=new v.a,this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2097152,this.request=d.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new m.a(this.cacheByteSize),this._handles.add([this.watch(["layer.parsedUrl","layer.tileServers?"],()=>this._initializeTilemapDefinition()),Object(f.a)(this,"layer.tileInfo.lods",e=>this._initializeAvailableLevels(e),!0)]),this._initializeTilemapDefinition()}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}castLevels(e){return e<=2?(w.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,a){if(!this._availableLevels[e])return Promise.reject(new o.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const r=this._tmpTilemapDefinition,l=this._tilemapFromCache(e,t,i,r);if(l)return Promise.resolve(l);const s=a&&a.signal;return a={...a,signal:null},new Promise((e,t)=>{Object(p.p)(s,()=>t(Object(p.e)()));const i=g(r);let l=this._pendingTilemapRequests[i];if(!l){l=j.fromDefinition(r,a).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=l,l.then(e,e)}l.then(e,t)})}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const a=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return a?a.getAvailability(t,i):"unknown"}getAvailabilityUpsample(e,t,i,a){a.level=e,a.row=t,a.col=i;const r=this.layer.tileInfo;for(r.updateTileInfo(a);;){const e=this.getAvailability(a.level,a.row,a.col);if("unavailable"!==e)return e;if(!r.upsampleTile(a))return"unavailable"}}fetchAvailability(e,t,i,a){return this._availableLevels[e]?this.fetchTilemap(e,t,i,a).catch(e=>e).then(a=>{if(a instanceof j){const r=a.getAvailability(t,i);return"unavailable"===r?Promise.reject(new o.a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):r}if(Object(p.m)(a))throw a;return"unknown"}):Promise.reject(new o.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,a,r){a.level=e,a.row=t,a.col=i;const l=this.layer.tileInfo;l.updateTileInfo(a);const s=this.fetchAvailability(e,t,i,r).catch(e=>{if(Object(p.m)(e))throw e;if(l.upsampleTile(a))return this.fetchAvailabilityUpsample(a.level,a.row,a.col,a);throw e});return this._fetchAvailabilityUpsamplePrefetch(a.id,e,t,i,r,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,a,r,l){if(!this._prefetchingEnabled)return;const s="prefetch-"+e;if(this._handles.has(s))return;const n=Object(p.d)();l.then(()=>n.abort(),()=>n.abort());let o=!1;const c={remove(){o||(o=!0,n.abort())}};if(this._handles.add(c,s),await Object(u.c)(10,n.signal).catch(()=>{}),o||(o=!0,this._handles.remove(s)),Object(p.n)(n))return;const h={id:e,level:t,row:i,col:a},b={...r,signal:n.signal},d=this.layer.tileInfo;for(let p=0;_._prefetches.length<_._maxPrefetch&&d.upsampleTile(h);++p){const e=this.fetchAvailability(h.level,h.row,h.col,b);_._prefetches.push(e);const t=()=>{_._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const e=this.layer.parsedUrl,t=e.query;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:t?Object(c.D)(t):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,a){a.level=e,a.row=t-t%this.size,a.col=i-i%this.size;const r=g(a);return this._tilemapCache.get(r)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach(e=>this._availableLevels[e.level]=!0)}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,a)=>!!e._tilemapFromCache(t,i,a,e._tmpTilemapDefinition)}}};S._maxPrefetch=4,S._prefetches=new h.a({initialSize:_._maxPrefetch}),Object(a.a)([Object(l.b)({constructOnly:!0,type:Number})],S.prototype,"levels",void 0),Object(a.a)([Object(s.a)("levels")],S.prototype,"castLevels",null),Object(a.a)([Object(l.b)({readOnly:!0,type:Number})],S.prototype,"size",null),Object(a.a)([Object(l.b)({constructOnly:!0,type:Number})],S.prototype,"cacheByteSize",void 0),Object(a.a)([Object(l.b)({constructOnly:!0})],S.prototype,"layer",void 0),Object(a.a)([Object(l.b)({constructOnly:!0})],S.prototype,"request",void 0),S=_=Object(a.a)([Object(n.a)("esri.layers.support.TilemapCache")],S)},542:function(e,t,i){"use strict";i.d(t,"a",(function(){return l})),i.d(t,"b",(function(){return r}));var a=i(312);const r={type:a.a,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:l}}}}};function l(e,t,i,r){if(!e)return null;const{minScale:l,maxScale:s,minLOD:n,maxLOD:o}=t;if(null!=n&&null!=o)return r&&r.ignoreMinMaxLOD?a.a.fromJSON(e):a.a.fromJSON({...e,lods:e.lods.filter(({level:e})=>null!=e&&e>=n&&e<=o)});if(0!==l&&0!==s){const t=e=>Math.round(1e4*e)/1e4,i=l?t(l):1/0,r=s?t(s):-1/0;return a.a.fromJSON({...e,lods:e.lods.filter(e=>{const a=t(e.scale);return a<=i&&a>=r})})}return a.a.fromJSON(e)}},586:function(e,t,i){"use strict";i.d(t,"a",(function(){return h}));var a=i(0),r=(i(6),i(5),i(7),i(1)),l=i(17),s=i(2),n=(i(4),i(8),i(9),i(28)),o=(i(61),i(542)),c=i(524);const h=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t){return t.capabilities&&t.capabilities.indexOf("Tilemap")>-1?new c.a({layer:this}):null}};return Object(a.a)([Object(r.b)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(a.a)([Object(r.b)()],t.prototype,"minScale",void 0),Object(a.a)([Object(l.a)("service","minScale")],t.prototype,"readMinScale",null),Object(a.a)([Object(r.b)()],t.prototype,"maxScale",void 0),Object(a.a)([Object(l.a)("service","maxScale")],t.prototype,"readMaxScale",null),Object(a.a)([Object(r.b)({type:n.a})],t.prototype,"spatialReference",void 0),Object(a.a)([Object(r.b)({readOnly:!0})],t.prototype,"supportsBlankTile",null),Object(a.a)([Object(r.b)(o.b)],t.prototype,"tileInfo",void 0),Object(a.a)([Object(r.b)()],t.prototype,"tilemapCache",void 0),Object(a.a)([Object(l.a)("service","tilemapCache",["capabilities"])],t.prototype,"readTilemapCache",null),Object(a.a)([Object(r.b)()],t.prototype,"version",void 0),t=Object(a.a)([Object(s.a)("esri.layers.mixins.ArcGISCachedService")],t),t}},631:function(e,t,i){"use strict";i.r(t);var a=i(0),r=(i(6),i(3)),l=(i(5),i(1)),s=i(32),n=i(17),o=i(2),c=i(16),h=i(12),p=i(4),u=(i(8),i(9),i(28)),b=(i(61),i(50)),d=i(193),v=i(314),f=i(119),m=i(89),y=i(317),O=i(326),j=i(320),g=i(345),_=i(316),w=i(325),S=i(318),T=i(131),A=i(586),L=i(737),D=i(705),$=i(738);const C=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let z=class extends(Object(j.a)(Object($.a)(Object(S.a)(Object(w.a)(Object(y.a)(Object(_.a)(Object(A.a)(Object(L.a)(Object(O.a)(Object(v.a)(Object(T.b)(Object(g.a)(d.a))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(r.i)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).then(()=>this._fetchService(t),()=>this._fetchService(t))),Promise.resolve(this)}get attributionDataUrl(){var e;const t=null==(e=this.parsedUrl)?void 0:e.path.toLowerCase();return t&&this._getDefaultAttribution(this._getMapName(t))}readSpatialReference(e,t){return(e=e||t.tileInfo&&t.tileInfo.spatialReference)&&u.a.fromJSON(e)}writeSublayers(e,t,i,a){if(!this.loaded||!e)return;const r=e.slice().reverse().flatten(({sublayers:e})=>e&&e.toArray().reverse()).toArray(),l=[],s={writeSublayerStructure:!1,...a};r.forEach(e=>{const t=e.write({},s);l.push(t)}),l.some(e=>Object.keys(e).length>1)&&(t.layers=l)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(e){return Array.isArray(e)?e.map(e=>Object(p.J)(e).path):null}fetchTile(e,t,i,a={}){const{signal:r,timestamp:l}=a,s=this.getTileUrl(e,t,i),n={responseType:"image",signal:r};return null!=l&&(n.query={_ts:a.timestamp}),Object(b.default)(s,n).then(e=>e.data)}getTileUrl(e,t,i){const a=!this.tilemapCache&&this.supportsBlankTile,r=Object(p.D)({...this.parsedUrl.query,blankTile:!a&&null,...this.customParameters}),l=this.tileServers;return`${l&&l.length?l[t%l.length]:this.parsedUrl.path}/tile/${e}/${t}/${i}${r?"?"+r:""}`}_fetchService(e){return new Promise((t,i)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new h.a("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void t({data:this.sourceJSON})}if(!this.parsedUrl)throw new h.a("tile-layer:undefined-url","layer's url is not defined");const a=Object(f.e)(this.parsedUrl.path);if(Object(r.i)(a)&&"ImageServer"===a.serverType)throw new h.a("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");Object(b.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters},responseType:"json",signal:e}).then(t,i)}).then(t=>{if(t.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!Object(f.c)(this.url))return this._fetchServerVersion(this.url,e).then(e=>{this.read({currentVersion:e})}).catch(()=>{})})}_fetchServerVersion(e,t){if(!Object(f.b)(e))return Promise.reject();const i=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return Object(b.default)(i,{query:{f:"json",...this.customParameters},responseType:"json",signal:t}).then(e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new h.a("tile-layer:version-not-available")})}_getMapName(e){const t=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return t&&t[2]}_getDefaultAttribution(e){if(!e)return;let t;e=e.toLowerCase();for(let i=0,a=C.length;i<a;i++)if(t=C[i],t.toLowerCase().indexOf(e)>-1)return Object(p.z)("//static.arcgis.com/attribution/"+t)}_getDefaultTileServers(e){const t=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),i=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return t||i?[e,e.replace(t?/server\.arcgisonline/i:/services\.arcgisonline/i,t?"services.arcgisonline":"server.arcgisonline")]:[]}};Object(a.a)([Object(l.b)({readOnly:!0})],z.prototype,"attributionDataUrl",null),Object(a.a)([Object(l.b)({type:["show","hide","hide-children"]})],z.prototype,"listMode",void 0),Object(a.a)([Object(l.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],z.prototype,"isReference",void 0),Object(a.a)([Object(l.b)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],z.prototype,"operationalLayerType",void 0),Object(a.a)([Object(l.b)({type:Boolean})],z.prototype,"resampling",void 0),Object(a.a)([Object(l.b)()],z.prototype,"sourceJSON",void 0),Object(a.a)([Object(l.b)({type:u.a})],z.prototype,"spatialReference",void 0),Object(a.a)([Object(n.a)("spatialReference",["spatialReference","tileInfo"])],z.prototype,"readSpatialReference",null),Object(a.a)([Object(l.b)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],z.prototype,"path",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],z.prototype,"sublayers",void 0),Object(a.a)([Object(c.a)("sublayers",{layers:{type:[D.a]}})],z.prototype,"writeSublayers",null),Object(a.a)([Object(l.b)({json:{read:!1,write:!1}})],z.prototype,"popupEnabled",void 0),Object(a.a)([Object(l.b)()],z.prototype,"tileServers",null),Object(a.a)([Object(s.a)("tileServers")],z.prototype,"castTileServers",null),Object(a.a)([Object(l.b)({readOnly:!0,json:{read:!1}})],z.prototype,"type",void 0),Object(a.a)([Object(l.b)(m.n)],z.prototype,"url",void 0),z=Object(a.a)([Object(o.a)("esri.layers.TileLayer")],z);var x=z;t.default=x}}]);
//# sourceMappingURL=70.8215be93.chunk.js.map