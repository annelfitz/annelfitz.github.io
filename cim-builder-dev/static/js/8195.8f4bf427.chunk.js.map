{"version":3,"file":"static/js/8195.8f4bf427.chunk.js","mappings":";gKAQA,MAAMA,EAAW,IAAIC,IACrB,IAAIC,EACJ,MAAMC,EAAkB,CAAEC,WAAW,GAWrC,SAASC,EAAgCC,GAClCJ,IACHA,GAAmBK,EAAAA,EAAAA,GAAe,WAAYC,IAEhDN,EAAiBO,QAAQH,EAAUI,GAAIP,GAYzC,SAASQ,EAAmCL,GAC1CN,EAASY,OAAON,EAAUI,IAI1BF,EAAiBN,EAAiBW,eAClCX,EAAiBY,aACjB,IAAK,MAAOC,KAAYf,EAASgB,UAC/Bd,EAAiBO,QAAQM,EAASZ,GAGtC,SAASK,EAAiBS,GACxBA,EAAUC,SAAQ,IAAgB,IAAf,OAAEC,GAAa,GAChCC,EAAAA,EAAAA,GAAYD,wBC7ChB,SAASE,EAAgBC,GACvB,MAAe,UAARA,GAA2B,MAARA,2BAE5B,MAAMC,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,4ICCjE,MAAMC,EAAwB,IAAIC,OAAO,IAAK,KACxCC,EAA0B,IAAID,OAAO,WAE3C,MAAME,EACJC,YAAYC,GAKV,GAJAC,KAAKC,IAAOC,GAAQL,EAAWM,WAAWH,KAAKI,MAAQ,IAAIP,EAAWK,GAAKE,OAC3EJ,KAAKK,SAAYH,GAAQL,EAAWM,WAAWH,KAAKI,MAAQ,IAAIP,EAAWK,GAAKE,OAChFJ,KAAKM,SAAYJ,GAAQL,EAAWU,UAAUP,KAAKI,MAAQ,IAAIP,EAAWK,GAAKE,MAAOP,EAAWW,OACjGR,KAAKS,OAAUP,GAAQL,EAAWU,UAAUP,KAAKI,MAAQP,EAAWW,MAAO,IAAIX,EAAWK,GAAKE,OAC3FL,aAAiBF,EACnB,OAAOE,EAET,MAAOW,EAAUC,GAAYC,OAAOb,GAAOc,MAAM,KAAKC,OAAO,IAC7Dd,KAAKI,MACHW,OAAOL,EAAWC,EAASK,OAAOnB,EAAWoB,SAAU,KAAKC,MAAM,EAAGrB,EAAWoB,WAC9EF,OAAOlB,EAAWsB,SAAWR,EAASd,EAAWoB,WAAa,KAClEjB,KAAKoB,WAAiC,MAApBrB,EAAMsB,OAAO,GAEjCC,yBACE,MAAMC,EAAIvB,KAAKI,MACZoB,WACAC,QAAQ/B,EAAuB,IAC/BgC,SAAS7B,EAAWoB,SAAW,EAAG,KAGrC,MAAO,CAAEP,SAFQa,EAAEL,MAAM,GAAIrB,EAAWoB,UAErBN,SADFY,EAAEL,OAAOrB,EAAWoB,UAAUQ,QAAQ7B,EAAyB,KAGlF4B,WACE,MAAM,SAAEd,EAAF,SAAYC,GAAaX,KAAKsB,yBACpC,MAAQ,GAAEtB,KAAKoB,WAAa,IAAM,KAAKV,IAAWC,EAASgB,OAAS,IAAMhB,EAAW,KAEvFiB,cAAcC,GACZ,MAAM,SAAEnB,EAAF,SAAYC,GAAaX,KAAKsB,yBAC9BQ,EAAQD,EAAUE,gBAAgBH,cAAcb,OAAOL,IAM7D,OALAV,KAAKoB,YAAcU,EAAME,QAAQ,CAAEC,KAAM,YAAa7B,MAAOyB,EAAUK,YACnEvB,EAASgB,SACXG,EAAMK,KAAK,CAAEF,KAAM,UAAW7B,MAAOyB,EAAUO,UAC/CzB,EAASE,MAAM,IAAIzB,SAASiD,GAASP,EAAMK,KAAK,CAAEF,KAAM,WAAY7B,MAAOiC,OAEtEP,EAETQ,OAAOT,GACL,MAAM,SAAEnB,EAAF,SAAYC,GAAaX,KAAKsB,yBAQpC,MAAQ,GAPmB,GAAEtB,KAAKoB,WAAaS,EAAUK,UAAY,KAAKL,EAAUE,gBAAgBO,OAAOvB,OAAOL,QACxFC,EAASgB,OAC9B,GAAEE,EAAUO,UAAUzB,EACtBE,MAAM,IACN0B,KAAKF,GAASR,EAAUE,gBAAgBO,OAAOE,OAAOH,MACtDI,KAAK,MACN,MAUR,SAASC,EAAcC,GACrB,SAAUA,GAAgBC,MAAMJ,OAAOG,KAEzC,SAASE,EAAkBF,GACzB,OAAKA,IAsDwBG,EAtDeH,EAuDrClD,EAAAA,EAAAA,MAAiBsD,GAAWD,EAAOE,SAASD,MApD5CE,EAAgCN,GAAeO,IACpD,IAAIC,GAAkB,EACtB,MAAMC,EAASF,EACZrC,MAAM,IACNwC,QAAO,CAACjD,EAAOkD,IACZlD,EAAMmD,MAAM,SAAWJ,GACzBA,GAAkB,GACX,MAEL/C,EAAMmD,MAAM,QAAgB,IAAND,IAGnB7D,EAAAA,EAAAA,SAAoBW,KAE1BoD,QAAO,CAACV,EAAQW,IAASX,EAASW,IACrC,OAAOf,EAAcU,GAAU,IAAIvD,EAAWuD,GAAQ5B,WAAa,MAjB5D,GAqDX,IAA+BsB,EA/D/BjD,EAAWoB,SAAW,IACtBpB,EAAWsB,SAAU,EACrBtB,EAAWW,MAAQO,OAAO,IAAM,IAAI2C,OAAO7D,EAAWoB,WACtDpB,EAAWU,UAAY,CAACoD,EAAUC,IAAY/D,EAAWM,WAAWwD,EAAWC,GAAW/D,EAAWsB,QAAYwC,EAAW5C,OAAO,GAAM6C,EAAW7C,OAAO,GAAKA,OAAO,KACvKlB,EAAWM,WAAc0D,GAAWC,OAAOC,OAAOD,OAAOE,OAAOnE,EAAWoE,WAAY,CAAE7D,MAAOyD,IA2BhG,MAAMK,EAAoC,kBACpCC,EAA2B,aAC3BC,EAA2B,WAC3BC,EAA6B,gBAC7BC,EAAwB3B,GAAiBM,EAAgCN,GAAeO,IAC5F,MAAMqB,EAAiBrB,EACpBzB,QAAQ2C,EAA0B,IAClC3C,QAAQ0C,EAA0B,IAClC1C,QAAQyC,EAAmC,MAC9C,OAAOxB,EAAc6B,GACjBF,EAA2BG,KAAKD,GAC9BA,EACA,IAAI1E,EAAW0E,GAAgB/C,WACjC0B,KAEN,SAASD,EAAgCN,EAAc8B,GACrD,IAAK9B,EACH,OAAOA,EAET,MAAM+B,EAAS/B,EAAagC,cAAcC,QAAQ,KAAO,EACzD,OAAKF,EAGE/B,EACJlB,QAAQ,UAAW,IACnBoD,UAAU,EAAGH,GACb5D,OAAO6B,EAAazB,MAAMwD,GAAQjD,QAAQ,QAAS,KACnDZ,MAAM,QACN0B,KAAI,CAACuC,EAASxB,IAAiBmB,EAAJ,IAANnB,EAAewB,EAAQrD,QAAQ,MAAO,IAAYqD,KACvErC,KAAK,KACLhB,QAAQ,KAAM,MATRgD,EAAK9B,GAehB,MAAMoC,EAAgB,KAChBC,EAAa,CACjB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACAD,EACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,QACA,SAEIE,EAAU,CACd,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,KACAF,EACA,QACA,QACA,QACA,KACA,QACA,KACA,KACA,KACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,QACA,SAEIG,EAAmB,CACvB,OACA,UACA,OACA,OACA,OACA,WACA,OACA,OACA,UACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,UACA,OACA,OACA,QAEIC,EAA8BC,GAAoBF,EAAiBlC,SAASoC,GAC5EC,GAAyB,IAAIC,KAAKC,cAAeC,kBAAkBJ,gBACnEK,EAAoD,SAA3BJ,GAAsCF,EAA2BE,GAE5FA,EADA,OAEEK,EAA+BN,GAAoBD,EAA2BC,GAAmBA,EAAkBK,EAOzH,SAASE,EAAmBC,GAA0B,IAAlBC,EAAkB,uDAAR,OAC5C,MAAMC,EAAgC,SAAZD,EAAqBZ,EAAUD,EACzD,OAAKY,EAGDE,EAAkB9C,SAAS4C,GACtBA,EAIM,QAFfA,EAASA,EAAOjB,eAGP,KAGO,QAAZkB,GAAgC,OAAXD,EAChB,SAELA,EAAO5C,SAAS,OAClB4C,EAASA,EAAOnE,QAAQ,eAAe,CAACsE,EAAQC,EAAUC,IAAY,GAAED,KAAYC,EAAOC,kBACtFJ,EAAkB9C,SAAS4C,KAC9BA,EAASA,EAAO/E,MAAM,KAAK,KAIhB,OAAX+E,EACK,QAEJE,EAAkB9C,SAAS4C,GAIzBA,GAHLO,QAAQC,KAAM,yBAAwBR,gFAC/Bb,IA1BAA,EA8BX,MAAMsB,EAAsB,IAAIlI,IAQhC,SAASmI,EAAiB9H,IAkB1B,SAA+BA,GAC7BA,EAAU+H,gBAyCZ,SAAmB/H,GACjB,OAAQA,EAAUI,GAAG4H,OACnBC,EAAAA,EAAAA,GAAkCjI,EAAUI,GAAI,WAAW4H,MAC3DE,SAASC,gBAAgBH,MACzBzB,EA7C0B6B,CAAUpI,GAlBtCqI,CAAsBrI,GACW,IAA7B6H,EAAoBS,MACtB1I,GAAkBO,QAAQ+H,SAASC,gBAAiB,CAClDI,YAAY,EACZC,gBAAiB,CAAC,QAClBC,SAAS,IAGbZ,EAAoBpG,IAAIzB,GAmB1B,SAAS0I,EAAoB1I,GAC3B6H,EAAoBvH,OAAON,GACM,IAA7B6H,EAAoBS,MACtB1I,EAAiBY,aAGrB,MAAMZ,GAAmBK,EAAAA,EAAAA,GAAe,YAAa0I,IACnDA,EAAQ/H,SAASgI,IACf,MAAMxI,EAAKwI,EAAO/H,OAClBgH,EAAoBjH,SAASZ,IAE3B,KAD4B6I,EAAAA,EAAAA,GAA4BzI,EAAIJ,EAAUI,IAEpE,OAEF,MAAM0I,GAAgBb,EAAAA,EAAAA,GAAkCjI,EAAUI,GAAI,UACtE,IAAK0I,EAEH,YADA9I,EAAU+H,gBAAkBxB,GAG9B,MAAMwC,EAAcD,EAAcd,KAClChI,EAAU+H,gBAERe,EAAcE,aAAa,SAA2B,KAAhBD,EAAqBxC,EAAgBwC,WA+FnF,MAAME,EAAwB,IA5E9B,MACE3H,cACEE,KAAK0H,WAAc/E,GAInB3C,KAAK2H,qBACD1E,EAAgCN,GAAeO,GAAqBA,EACnE0E,OACAnG,QAAQ,IAAI9B,OAAQ,IAAGK,KAAK6H,cAAe,KAAM,KACjDpG,QAAQ,IAAI9B,OAAQ,IAAGK,KAAK8H,UAAW,KAAM,IAC7CrG,QAAQ,IAAI9B,OAAQ,IAAGK,KAAK+H,YAAa,KAAM,KAC/CtG,QAAQ,IAAI9B,OAAQ,IAAGK,KAAKgI,QAAQvF,KAAK,OAAQ,KAAMzC,KAAKiI,kBAC7DtF,EACJ3C,KAAKkI,SAAYvF,GAAiB3C,KAAK2H,qBACnC1E,EAAgCN,GAAeO,GAAqBR,EAAcQ,EAAiB0E,QACjG,IAAI/H,EAAWqD,EAAiB0E,QAC/BtF,OAAOtC,MACPyB,QAAQ,IAAI9B,OAAQ,IAAGK,KAAKmI,gBAAiB,KAAMnI,KAAK8H,QACzD5E,IACFP,EAEFyF,YACF,OAAOpI,KAAK8H,OAEV1F,cACF,OAAOpC,KAAK+H,SAEV7F,gBACF,OAAOlC,KAAK6H,WAEVQ,aACF,OAAOrI,KAAKgI,QAEVjG,sBACF,OAAO/B,KAAKsI,iBAEVC,0BACF,OAAOvI,KAAK2H,qBAKVY,wBAAoBC,GAGtB,GAFAA,EAAQ5C,OAASD,EAAmB6C,GAAS5C,QAC7C4C,EAAQpD,gBAAkBM,EAA4B8C,GAASpD,kBAI7DpF,KAAK2H,sBACLa,EAAQ5C,SAAWb,GACnByD,EAAQpD,kBAAoBK,GAEI,IAAhC3B,OAAO2E,KAAKD,GAAS7G,QAErB+G,KAAKC,UAAU3I,KAAK2H,wBAA0Be,KAAKC,UAAUH,GAC7D,OAEFxI,KAAK2H,qBAAuBa,EAC5BxI,KAAKsI,iBAAmB,IAAIhD,KAAKC,aAAavF,KAAK2H,qBAAqB/B,OAAQ5F,KAAK2H,sBACrF3H,KAAKgI,QAAU,IACV,IAAI1C,KAAKC,aAAavF,KAAK2H,qBAAqB/B,OAAQ,CACzDgD,aAAa,EACbxD,gBAAiBpF,KAAK2H,qBAAqBvC,kBAC1C9C,OAAO,aACVuG,UACF,MAAMC,EAAQ,IAAIC,IAAI/I,KAAKgI,QAAQzF,KAAI,CAACyG,EAAG1F,IAAM,CAAC0F,EAAG1F,MAC/CxB,EAAQ,IAAIwD,KAAKC,aAAavF,KAAK2H,qBAAqB/B,QAAQhE,eAAe,YACrF5B,KAAKmI,aAAerG,EAAMmH,MAAMD,GAAiB,UAAXA,EAAE/G,OAAkB7B,MAE1DJ,KAAK8H,OAA6C,IAApC9H,KAAKmI,aAAaP,OAAOjG,OAAe,IAAM3B,KAAKmI,aACjEnI,KAAK+H,SAAWjG,EAAMmH,MAAMD,GAAiB,YAAXA,EAAE/G,OAAoB7B,MACxDJ,KAAK6H,WAAa/F,EAAMmH,MAAMD,GAAiB,cAAXA,EAAE/G,OAAsB7B,MAC5DJ,KAAKiI,eAAkBe,GAAMF,EAAMI,IAAIF,sBC/a3C,SAASvK,EAAewD,EAAMkH,EAAUX,GACtC,MAAMY,EAGR,SAAqBnH,GAEnB,MAAMoH,UAAiCC,OAAOC,iBAC5CzJ,YAAYqJ,GACVK,MAAML,GACNnJ,KAAKyJ,cAAgB,GACrBzJ,KAAKmJ,SAAWA,EAElBxK,QAAQU,EAAQmJ,GAEd,OADAxI,KAAKyJ,cAActH,KAAK,CAAE9C,SAAQmJ,YAC3BgB,MAAM7K,QAAQU,EAAQmJ,GAE/BkB,UAAUrK,GACR,MAAMsK,EAAqB3J,KAAKyJ,cAAcpG,QAAQnF,GAAaA,EAASmB,SAAWA,IACvFW,KAAKyJ,cAAgB,GACrBzJ,KAAKmJ,SAASK,MAAMzK,cAAeiB,MACnCA,KAAKhB,aACL2K,EAAmBvK,SAASlB,GAAa8B,KAAKrB,QAAQT,EAASmB,OAAQnB,EAASsK,YAGpF,MACmB,iBAATvG,EACJqH,OAAOM,qBACE,aAAT3H,EACEoH,EACAC,OAAOO,eA5BEC,CAAY7H,GAC7B,OAAO,IAAImH,EAASD,EAAUX,8DCThC,MAAMuB,EAAQ,CACZC,YAAa,eACbC,YAAa,gBAETC,EAAQ,CACZC,KAAM,6DCLR,MAAMC,EAAM,CACVD,KAAM,OACNE,eAAgB,mBAEZN,EAAQ,CACZO,QAAS,UACTC,QAAS,WAELL,EAAQ,CACZC,KAAM,gGCNR,MAAMK,EAAoC,GAgB1C,SAASC,IACP,MAAM,IAAIC,MAAM,4CAElB,SAASC,EAAcnM,GACrBA,EAAUoM,SAAW,IAChBpM,EAAUqM,mBACVrM,EAAUsM,kBAQjBC,eAAeC,EAAcxM,GAC3BA,EAAUqM,sBAAwBI,EAAczM,EAAWA,EAAU+H,iBACrEoE,EAAcnM,GAEhBuM,eAAeE,EAAczM,EAAWgI,GACtC,MAAM,GAAE5H,GAAOJ,EAET0M,EADMtM,EAAGuM,QAAQxG,cACGlD,QAAQ,WAAY,IAC9C,OArCFsJ,eAAgCvE,EAAMhI,GACpC,MAAMgB,EAAO,GAAEhB,KAAagI,IAC5B,OAAIgE,EAAkChL,KAGtCgL,EAAkChL,GAAO4L,OAAMC,EAAAA,EAAAA,GAAc,YAAW7M,kBAA0BgI,WAC/F8E,MAAMC,IACFA,EAAKC,IACRf,IAEKc,EAAKE,UAEXC,OAAM,IAAMjB,OATND,EAAkChL,GAkCpCmM,EAAiBhG,EAAAA,EAAAA,GAAmBa,EAAM,OAAQ0E,GAa3DH,eAAea,EAAepN,EAAWgI,GACvChI,EAAUqM,sBAAwBI,EAAczM,EAAWgI,GAC3DmE,EAAcnM,GAWhB,SAASqN,EAAgBrN,GACvBA,EAAUsN,iBAAmBC,EAS/B,SAASC,EAAmBxN,GAC1BA,EAAUsN,sBAAmBG,EAE/B,SAASF,IACPpB,EAAc3K","sources":["../node_modules/@esri/calcite-components/dist/esm/conditionalSlot-0d04f0c7.js","../node_modules/@esri/calcite-components/dist/esm/key-d26d2bfe.js","../node_modules/@esri/calcite-components/dist/esm/locale-5313c9c2.js","../node_modules/@esri/calcite-components/dist/esm/observers-3d5b9a3f.js","../node_modules/@esri/calcite-components/dist/esm/resources-0990b53c.js","../node_modules/@esri/calcite-components/dist/esm/resources-e4f0db38.js","../node_modules/@esri/calcite-components/dist/esm/t9n-4c805851.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\nimport { f as forceUpdate } from './index-88b94637.js';\nimport { c as createObserver } from './observers-3d5b9a3f.js';\n\nconst observed = new Set();\nlet mutationObserver;\nconst observerOptions = { childList: true };\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nfunction connectConditionalSlotComponent(component) {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n  mutationObserver.observe(component.el, observerOptions);\n}\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nfunction disconnectConditionalSlotComponent(component) {\n  observed.delete(component.el);\n  // we explicitly process queued mutations and disconnect and reconnect\n  // the observer until MutationObserver gets an `unobserve` method\n  // see https://github.com/whatwg/dom/issues/126\n  processMutations(mutationObserver.takeRecords());\n  mutationObserver.disconnect();\n  for (const [element] of observed.entries()) {\n    mutationObserver.observe(element, observerOptions);\n  }\n}\nfunction processMutations(mutations) {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n\nexport { connectConditionalSlotComponent as c, disconnectConditionalSlotComponent as d };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\nfunction isActivationKey(key) {\n  return key === \"Enter\" || key === \" \";\n}\nconst numberKeys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n\nexport { isActivationKey as i, numberKeys as n };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\nimport { c as closestElementCrossShadowBoundary, a as containsCrossShadowBoundary } from './dom-0e4fb5f9.js';\nimport { n as numberKeys } from './key-d26d2bfe.js';\nimport { c as createObserver } from './observers-3d5b9a3f.js';\n\nconst defaultMinusSignRegex = new RegExp(\"-\", \"g\");\nconst unnecessaryDecimalRegex = new RegExp(\"\\\\.?0+$\");\n// adopted from https://stackoverflow.com/a/66939244\nclass BigDecimal {\n  constructor(input) {\n    this.add = (num) => BigDecimal.fromBigInt(this.value + new BigDecimal(num).value);\n    this.subtract = (num) => BigDecimal.fromBigInt(this.value - new BigDecimal(num).value);\n    this.multiply = (num) => BigDecimal._divRound(this.value * new BigDecimal(num).value, BigDecimal.SHIFT);\n    this.divide = (num) => BigDecimal._divRound(this.value * BigDecimal.SHIFT, new BigDecimal(num).value);\n    if (input instanceof BigDecimal) {\n      return input;\n    }\n    const [integers, decimals] = String(input).split(\".\").concat(\"\");\n    this.value =\n      BigInt(integers + decimals.padEnd(BigDecimal.DECIMALS, \"0\").slice(0, BigDecimal.DECIMALS)) +\n        BigInt(BigDecimal.ROUNDED && decimals[BigDecimal.DECIMALS] >= \"5\");\n    this.isNegative = input.charAt(0) === \"-\";\n  }\n  getIntegersAndDecimals() {\n    const s = this.value\n      .toString()\n      .replace(defaultMinusSignRegex, \"\")\n      .padStart(BigDecimal.DECIMALS + 1, \"0\");\n    const integers = s.slice(0, -BigDecimal.DECIMALS);\n    const decimals = s.slice(-BigDecimal.DECIMALS).replace(unnecessaryDecimalRegex, \"\");\n    return { integers, decimals };\n  }\n  toString() {\n    const { integers, decimals } = this.getIntegersAndDecimals();\n    return `${this.isNegative ? \"-\" : \"\"}${integers}${decimals.length ? \".\" + decimals : \"\"}`;\n  }\n  formatToParts(formatter) {\n    const { integers, decimals } = this.getIntegersAndDecimals();\n    const parts = formatter.numberFormatter.formatToParts(BigInt(integers));\n    this.isNegative && parts.unshift({ type: \"minusSign\", value: formatter.minusSign });\n    if (decimals.length) {\n      parts.push({ type: \"decimal\", value: formatter.decimal });\n      decimals.split(\"\").forEach((char) => parts.push({ type: \"fraction\", value: char }));\n    }\n    return parts;\n  }\n  format(formatter) {\n    const { integers, decimals } = this.getIntegersAndDecimals();\n    const integersFormatted = `${this.isNegative ? formatter.minusSign : \"\"}${formatter.numberFormatter.format(BigInt(integers))}`;\n    const decimalsFormatted = decimals.length\n      ? `${formatter.decimal}${decimals\n        .split(\"\")\n        .map((char) => formatter.numberFormatter.format(Number(char)))\n        .join(\"\")}`\n      : \"\";\n    return `${integersFormatted}${decimalsFormatted}`;\n  }\n}\n// Configuration: constants\nBigDecimal.DECIMALS = 100; // number of decimals on all instances\nBigDecimal.ROUNDED = true; // numbers are truncated (false) or rounded (true)\nBigDecimal.SHIFT = BigInt(\"1\" + \"0\".repeat(BigDecimal.DECIMALS)); // derived constant\nBigDecimal._divRound = (dividend, divisor) => BigDecimal.fromBigInt(dividend / divisor + (BigDecimal.ROUNDED ? ((dividend * BigInt(2)) / divisor) % BigInt(2) : BigInt(0)));\nBigDecimal.fromBigInt = (bigint) => Object.assign(Object.create(BigDecimal.prototype), { value: bigint });\nfunction isValidNumber(numberString) {\n  return !(!numberString || isNaN(Number(numberString)));\n}\nfunction parseNumberString(numberString) {\n  if (!numberString || !stringContainsNumbers(numberString)) {\n    return \"\";\n  }\n  return sanitizeExponentialNumberString(numberString, (nonExpoNumString) => {\n    let containsDecimal = false;\n    const result = nonExpoNumString\n      .split(\"\")\n      .filter((value, i) => {\n      if (value.match(/\\./g) && !containsDecimal) {\n        containsDecimal = true;\n        return true;\n      }\n      if (value.match(/\\-/g) && i === 0) {\n        return true;\n      }\n      return numberKeys.includes(value);\n    })\n      .reduce((string, part) => string + part);\n    return isValidNumber(result) ? new BigDecimal(result).toString() : \"\";\n  });\n}\n// regex for number sanitization\nconst allLeadingZerosOptionallyNegative = /^([-0])0+(?=\\d)/;\nconst decimalOnlyAtEndOfString = /(?!^\\.)\\.$/;\nconst allHyphensExceptTheStart = /(?!^-)-/g;\nconst isNegativeDecimalOnlyZeros = /^-\\b0\\b\\.?0*$/;\nconst sanitizeNumberString = (numberString) => sanitizeExponentialNumberString(numberString, (nonExpoNumString) => {\n  const sanitizedValue = nonExpoNumString\n    .replace(allHyphensExceptTheStart, \"\")\n    .replace(decimalOnlyAtEndOfString, \"\")\n    .replace(allLeadingZerosOptionallyNegative, \"$1\");\n  return isValidNumber(sanitizedValue)\n    ? isNegativeDecimalOnlyZeros.test(sanitizedValue)\n      ? sanitizedValue\n      : new BigDecimal(sanitizedValue).toString()\n    : nonExpoNumString;\n});\nfunction sanitizeExponentialNumberString(numberString, func) {\n  if (!numberString) {\n    return numberString;\n  }\n  const firstE = numberString.toLowerCase().indexOf(\"e\") + 1;\n  if (!firstE) {\n    return func(numberString);\n  }\n  return numberString\n    .replace(/[eE]*$/g, \"\")\n    .substring(0, firstE)\n    .concat(numberString.slice(firstE).replace(/[eE]/g, \"\"))\n    .split(/[eE]/)\n    .map((section, i) => (i === 1 ? func(section.replace(/\\./g, \"\")) : func(section)))\n    .join(\"e\")\n    .replace(/^e/, \"1e\");\n}\nfunction stringContainsNumbers(string) {\n  return numberKeys.some((number) => string.includes(number));\n}\n\nconst defaultLocale = \"en\";\nconst t9nLocales = [\n  \"ar\",\n  \"bg\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"da\",\n  \"de\",\n  \"el\",\n  defaultLocale,\n  \"es\",\n  \"et\",\n  \"fi\",\n  \"fr\",\n  \"he\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"ja\",\n  \"ko\",\n  \"lt\",\n  \"lv\",\n  \"no\",\n  \"nl\",\n  \"pl\",\n  \"pt-BR\",\n  \"pt-PT\",\n  \"ro\",\n  \"ru\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"th\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-CN\",\n  \"zh-HK\",\n  \"zh-TW\"\n];\nconst locales = [\n  \"ar\",\n  \"bg\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"da\",\n  \"de\",\n  \"de-CH\",\n  \"el\",\n  defaultLocale,\n  \"en-AU\",\n  \"en-CA\",\n  \"en-GB\",\n  \"es\",\n  \"es-MX\",\n  \"et\",\n  \"fi\",\n  \"fr\",\n  \"fr-CH\",\n  \"he\",\n  \"hi\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"it-CH\",\n  \"ja\",\n  \"ko\",\n  \"lt\",\n  \"lv\",\n  \"mk\",\n  \"no\",\n  \"nl\",\n  \"pl\",\n  \"pt\",\n  \"pt-PT\",\n  \"ro\",\n  \"ru\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"th\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-CN\",\n  \"zh-HK\",\n  \"zh-TW\"\n];\nconst numberingSystems = [\n  \"arab\",\n  \"arabext\",\n  \"bali\",\n  \"beng\",\n  \"deva\",\n  \"fullwide\",\n  \"gujr\",\n  \"guru\",\n  \"hanidec\",\n  \"khmr\",\n  \"knda\",\n  \"laoo\",\n  \"latn\",\n  \"limb\",\n  \"mlym\",\n  \"mong\",\n  \"mymr\",\n  \"orya\",\n  \"tamldec\",\n  \"telu\",\n  \"thai\",\n  \"tibt\"\n];\nconst isNumberingSystemSupported = (numberingSystem) => numberingSystems.includes(numberingSystem);\nconst browserNumberingSystem = new Intl.NumberFormat().resolvedOptions().numberingSystem;\nconst defaultNumberingSystem = browserNumberingSystem === \"arab\" || !isNumberingSystemSupported(browserNumberingSystem)\n  ? \"latn\"\n  : browserNumberingSystem;\nconst getSupportedNumberingSystem = (numberingSystem) => isNumberingSystemSupported(numberingSystem) ? numberingSystem : defaultNumberingSystem;\n/**\n * Gets the locale that best matches the context.\n *\n * @param locale – the BCP 47 locale code\n * @param context - specifies whether the locale code should match in the context of CLDR or T9N (translation)\n */\nfunction getSupportedLocale(locale, context = \"cldr\") {\n  const contextualLocales = context === \"cldr\" ? locales : t9nLocales;\n  if (!locale) {\n    return defaultLocale;\n  }\n  if (contextualLocales.includes(locale)) {\n    return locale;\n  }\n  locale = locale.toLowerCase();\n  // we support both 'nb' and 'no' (BCP 47) for Norwegian but only `no` has corresponding bundle\n  if (locale === \"nb\") {\n    return \"no\";\n  }\n  // we use `pt-BR` as it will have the same translations as `pt`, which has no corresponding bundle\n  if (context === \"t9n\" && locale === \"pt\") {\n    return \"pt-BR\";\n  }\n  if (locale.includes(\"-\")) {\n    locale = locale.replace(/(\\w+)-(\\w+)/, (_match, language, region) => `${language}-${region.toUpperCase()}`);\n    if (!contextualLocales.includes(locale)) {\n      locale = locale.split(\"-\")[0];\n    }\n  }\n  // we can `zh-CN` as base translation for chinese locales which has no corresponding bundle.\n  if (locale === \"zh\") {\n    return \"zh-CN\";\n  }\n  if (!contextualLocales.includes(locale)) {\n    console.warn(`Translations for the \"${locale}\" locale are not available and will fall back to the default, English (en).`);\n    return defaultLocale;\n  }\n  return locale;\n}\nconst connectedComponents = new Set();\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback` before any logic that depends on locale\n *\n * @param component\n */\nfunction connectLocalized(component) {\n  updateEffectiveLocale(component);\n  if (connectedComponents.size === 0) {\n    mutationObserver?.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: [\"lang\"],\n      subtree: true\n    });\n  }\n  connectedComponents.add(component);\n}\n/**\n * This is only exported for components that implemented the now deprecated `locale` prop.\n *\n * Do not use this utils for new components.\n *\n * @param component\n */\nfunction updateEffectiveLocale(component) {\n  component.effectiveLocale = getLocale(component);\n}\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nfunction disconnectLocalized(component) {\n  connectedComponents.delete(component);\n  if (connectedComponents.size === 0) {\n    mutationObserver.disconnect();\n  }\n}\nconst mutationObserver = createObserver(\"mutation\", (records) => {\n  records.forEach((record) => {\n    const el = record.target;\n    connectedComponents.forEach((component) => {\n      const inUnrelatedSubtree = !containsCrossShadowBoundary(el, component.el);\n      if (inUnrelatedSubtree) {\n        return;\n      }\n      const closestLangEl = closestElementCrossShadowBoundary(component.el, \"[lang]\");\n      if (!closestLangEl) {\n        component.effectiveLocale = defaultLocale;\n        return;\n      }\n      const closestLang = closestLangEl.lang;\n      component.effectiveLocale =\n        // user set lang=\"\" means unknown language, so we use default\n        closestLangEl.hasAttribute(\"lang\") && closestLang === \"\" ? defaultLocale : closestLang;\n    });\n  });\n});\n/**\n * This util helps resolve a component's locale.\n * It will also fall back on the deprecated `locale` if a component implemented this previously.\n *\n * @param component\n */\nfunction getLocale(component) {\n  return (component.el.lang ||\n    closestElementCrossShadowBoundary(component.el, \"[lang]\")?.lang ||\n    document.documentElement.lang ||\n    defaultLocale);\n}\n/**\n * This util formats and parses numbers for localization\n */\nclass NumberStringFormat {\n  constructor() {\n    this.delocalize = (numberString) => \n    // For performance, (de)localization is skipped if the formatter isn't initialized.\n    // In order to localize/delocalize, e.g. when lang/numberingSystem props are not default values,\n    // `numberFormatOptions` must be set in a component to create and cache the formatter.\n    this._numberFormatOptions\n      ? sanitizeExponentialNumberString(numberString, (nonExpoNumString) => nonExpoNumString\n        .trim()\n        .replace(new RegExp(`[${this._minusSign}]`, \"g\"), \"-\")\n        .replace(new RegExp(`[${this._group}]`, \"g\"), \"\")\n        .replace(new RegExp(`[${this._decimal}]`, \"g\"), \".\")\n        .replace(new RegExp(`[${this._digits.join(\"\")}]`, \"g\"), this._getDigitIndex))\n      : numberString;\n    this.localize = (numberString) => this._numberFormatOptions\n      ? sanitizeExponentialNumberString(numberString, (nonExpoNumString) => isValidNumber(nonExpoNumString.trim())\n        ? new BigDecimal(nonExpoNumString.trim())\n          .format(this)\n          .replace(new RegExp(`[${this._actualGroup}]`, \"g\"), this._group)\n        : nonExpoNumString)\n      : numberString;\n  }\n  get group() {\n    return this._group;\n  }\n  get decimal() {\n    return this._decimal;\n  }\n  get minusSign() {\n    return this._minusSign;\n  }\n  get digits() {\n    return this._digits;\n  }\n  get numberFormatter() {\n    return this._numberFormatter;\n  }\n  get numberFormatOptions() {\n    return this._numberFormatOptions;\n  }\n  /**\n   * numberFormatOptions needs to be set before localize/delocalize is called to ensure the options are up to date\n   */\n  set numberFormatOptions(options) {\n    options.locale = getSupportedLocale(options?.locale);\n    options.numberingSystem = getSupportedNumberingSystem(options?.numberingSystem);\n    if (\n    // No need to create the formatter if `locale` and `numberingSystem`\n    // are the default values and `numberFormatOptions` has not been set\n    (!this._numberFormatOptions &&\n      options.locale === defaultLocale &&\n      options.numberingSystem === defaultNumberingSystem &&\n      // don't skip initialization if any options besides locale/numberingSystem are set\n      Object.keys(options).length === 2) ||\n      // cache formatter by only recreating when options change\n      JSON.stringify(this._numberFormatOptions) === JSON.stringify(options)) {\n      return;\n    }\n    this._numberFormatOptions = options;\n    this._numberFormatter = new Intl.NumberFormat(this._numberFormatOptions.locale, this._numberFormatOptions);\n    this._digits = [\n      ...new Intl.NumberFormat(this._numberFormatOptions.locale, {\n        useGrouping: false,\n        numberingSystem: this._numberFormatOptions.numberingSystem\n      }).format(9876543210)\n    ].reverse();\n    const index = new Map(this._digits.map((d, i) => [d, i]));\n    const parts = new Intl.NumberFormat(this._numberFormatOptions.locale).formatToParts(-12345678.9);\n    this._actualGroup = parts.find((d) => d.type === \"group\").value;\n    // change whitespace group characters that don't render correctly\n    this._group = this._actualGroup.trim().length === 0 ? \" \" : this._actualGroup;\n    this._decimal = parts.find((d) => d.type === \"decimal\").value;\n    this._minusSign = parts.find((d) => d.type === \"minusSign\").value;\n    this._getDigitIndex = (d) => index.get(d);\n  }\n}\nconst numberStringFormatter = new NumberStringFormat();\n\nexport { defaultNumberingSystem as a, getSupportedNumberingSystem as b, connectLocalized as c, disconnectLocalized as d, getSupportedLocale as g, isValidNumber as i, numberStringFormatter as n, parseNumberString as p, sanitizeNumberString as s };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nfunction createObserver(type, callback, options) {\n  const Observer = getObserver(type);\n  return new Observer(callback, options);\n}\nfunction getObserver(type) {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver {\n    constructor(callback) {\n      super(callback);\n      this.observedEntry = [];\n      this.callback = callback;\n    }\n    observe(target, options) {\n      this.observedEntry.push({ target, options });\n      return super.observe(target, options);\n    }\n    unobserve(target) {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n  return (function () {\n    return (type === \"intersection\"\n      ? window.IntersectionObserver\n      : type === \"mutation\"\n        ? ExtendedMutationObserver\n        : window.ResizeObserver);\n  })();\n}\n\nexport { createObserver as c };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\nconst SLOTS = {\n  menuActions: \"menu-actions\",\n  menuTooltip: \"menu-tooltip\"\n};\nconst ICONS = {\n  menu: \"ellipsis\"\n};\n\nexport { ICONS as I, SLOTS as S };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\nconst CSS = {\n  menu: \"menu\",\n  defaultTrigger: \"default-trigger\"\n};\nconst SLOTS = {\n  tooltip: \"tooltip\",\n  trigger: \"trigger\"\n};\nconst ICONS = {\n  menu: \"ellipsis\"\n};\n\nexport { CSS as C, ICONS as I, SLOTS as S };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\nimport { a as getAssetPath } from './index-88b94637.js';\nimport { g as getSupportedLocale } from './locale-5313c9c2.js';\n\nconst componentLangToMessageBundleCache = {};\nasync function getMessageBundle(lang, component) {\n  const key = `${component}_${lang}`;\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n    if (!resp.ok) {\n      throwMessageFetchError();\n    }\n    return resp.json();\n  })\n    .catch(() => throwMessageFetchError());\n  return componentLangToMessageBundleCache[key];\n}\nfunction throwMessageFetchError() {\n  throw new Error(\"could not fetch component message bundle\");\n}\nfunction mergeMessages(component) {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides\n  };\n}\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nasync function setUpMessages(component) {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\nasync function fetchMessages(component, lang) {\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nasync function updateMessages(component, lang) {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nfunction connectMessages(component) {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nfunction disconnectMessages(component) {\n  component.onMessagesChange = undefined;\n}\nfunction defaultOnMessagesChange() {\n  mergeMessages(this);\n}\n\nexport { connectMessages as c, disconnectMessages as d, setUpMessages as s, updateMessages as u };\n"],"names":["observed","Set","mutationObserver","observerOptions","childList","connectConditionalSlotComponent","component","createObserver","processMutations","observe","el","disconnectConditionalSlotComponent","delete","takeRecords","disconnect","element","entries","mutations","forEach","target","forceUpdate","isActivationKey","key","numberKeys","defaultMinusSignRegex","RegExp","unnecessaryDecimalRegex","BigDecimal","constructor","input","this","add","num","fromBigInt","value","subtract","multiply","_divRound","SHIFT","divide","integers","decimals","String","split","concat","BigInt","padEnd","DECIMALS","slice","ROUNDED","isNegative","charAt","getIntegersAndDecimals","s","toString","replace","padStart","length","formatToParts","formatter","parts","numberFormatter","unshift","type","minusSign","push","decimal","char","format","map","Number","join","isValidNumber","numberString","isNaN","parseNumberString","string","number","includes","sanitizeExponentialNumberString","nonExpoNumString","containsDecimal","result","filter","i","match","reduce","part","repeat","dividend","divisor","bigint","Object","assign","create","prototype","allLeadingZerosOptionallyNegative","decimalOnlyAtEndOfString","allHyphensExceptTheStart","isNegativeDecimalOnlyZeros","sanitizeNumberString","sanitizedValue","test","func","firstE","toLowerCase","indexOf","substring","section","defaultLocale","t9nLocales","locales","numberingSystems","isNumberingSystemSupported","numberingSystem","browserNumberingSystem","Intl","NumberFormat","resolvedOptions","defaultNumberingSystem","getSupportedNumberingSystem","getSupportedLocale","locale","context","contextualLocales","_match","language","region","toUpperCase","console","warn","connectedComponents","connectLocalized","effectiveLocale","lang","closestElementCrossShadowBoundary","document","documentElement","getLocale","updateEffectiveLocale","size","attributes","attributeFilter","subtree","disconnectLocalized","records","record","containsCrossShadowBoundary","closestLangEl","closestLang","hasAttribute","numberStringFormatter","delocalize","_numberFormatOptions","trim","_minusSign","_group","_decimal","_digits","_getDigitIndex","localize","_actualGroup","group","digits","_numberFormatter","numberFormatOptions","options","keys","JSON","stringify","useGrouping","reverse","index","Map","d","find","get","callback","Observer","ExtendedMutationObserver","window","MutationObserver","super","observedEntry","unobserve","newObservedEntries","IntersectionObserver","ResizeObserver","getObserver","SLOTS","menuActions","menuTooltip","ICONS","menu","CSS","defaultTrigger","tooltip","trigger","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","messages","defaultMessages","messageOverrides","async","setUpMessages","fetchMessages","componentName","tagName","fetch","getAssetPath","then","resp","ok","json","catch","getMessageBundle","updateMessages","connectMessages","onMessagesChange","defaultOnMessagesChange","disconnectMessages","undefined"],"sourceRoot":""}