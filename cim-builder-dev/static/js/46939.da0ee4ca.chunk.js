"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[46939],{46533:(t,e,n)=>{n.d(e,{CW:()=>h,DE:()=>d,pH:()=>g,qH:()=>m});var r=n(81806),o=n(76460),l=n(15941),a=n(50346),i=n(47249),s=n(76797),c=n(80963);const u=()=>o.A.getLogger("esri.views.2d.engine.flow.dataUtils"),f=10;async function h(t,e,n,o){const l=performance.now(),s=d(e,n),c=performance.now(),h=m(e,s,n.width,n.height),w=performance.now(),p=function(t,e){const n=new i.A,r=t.reduce(((t,e)=>t+e.length),0),o=new Float32Array(4*r),l=new Array(t.length);let a=0,s=0;for(const i of t){const t=a;for(const e of i)o[4*a]=e.x,o[4*a+1]=e.y,o[4*a+2]=e.t,o[4*a+3]=e.speed,a++;l[s++]={startVertex:t,numberOfVertices:i.length,totalTime:i[i.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:o,lineDescriptors:l}}(h,!0),g=performance.now(),y="Streamlines"===t?function(t,e){const n=9,{lineVertices:r,lineDescriptors:o}=t;let l=0,a=0;for(const d of o)l+=2*d.numberOfVertices,a+=6*(d.numberOfVertices-1);const i=new Float32Array(l*n),s=new Uint32Array(a);let c=0,u=0;function f(){s[u++]=c-2,s[u++]=c,s[u++]=c-1,s[u++]=c,s[u++]=c+1,s[u++]=c-1}function h(t,e,r,o,l,a,s,u){const f=c*n;let h=0;i[f+h++]=t,i[f+h++]=e,i[f+h++]=1,i[f+h++]=r,i[f+h++]=a,i[f+h++]=s,i[f+h++]=o/2,i[f+h++]=l/2,i[f+h++]=u,c++,i[f+h++]=t,i[f+h++]=e,i[f+h++]=-1,i[f+h++]=r,i[f+h++]=a,i[f+h++]=s,i[f+h++]=-o/2,i[f+h++]=-l/2,i[f+h++]=u,c++}for(const d of o){const{totalTime:t,timeSeed:n}=d;let o=null,l=null,a=null,i=null,s=null,c=null;for(let u=0;u<d.numberOfVertices;u++){const w=r[4*(d.startVertex+u)],m=r[4*(d.startVertex+u)+1],p=r[4*(d.startVertex+u)+2],g=r[4*(d.startVertex+u)+3];let y=null,x=null,M=null,A=null;if(u>0){y=w-o,x=m-l;const r=Math.sqrt(y*y+x*x);if(y/=r,x/=r,u>1){let t=y+s,n=x+c;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const o=Math.min(1/(t*y+n*x),e);t*=o,n*=o,M=-n,A=t}else M=-x,A=y;null!==M&&null!==A&&(h(o,l,a,M,A,t,n,g),f())}o=w,l=m,a=p,s=y,c=x,i=g}h(o,l,a,-c,s,t,n,i)}return{vertexData:i,indexData:s}}(p,f):function(t){const e=16,n=1,r=2,{lineVertices:o,lineDescriptors:l}=t;let a=0,i=0;for(const L of l){const t=L.numberOfVertices-1;a+=4*t*2,i+=6*t*2}const s=new Float32Array(a*e),c=new Uint32Array(i);let u,f,h,d,w,m,p,g,y,x,M,A,D,V,b=0,k=0;function F(){c[k++]=b-8,c[k++]=b-7,c[k++]=b-6,c[k++]=b-7,c[k++]=b-5,c[k++]=b-6,c[k++]=b-4,c[k++]=b-3,c[k++]=b-2,c[k++]=b-3,c[k++]=b-1,c[k++]=b-2}function I(t,o,l,a,i,c,u,f,h,d,w,m,p,g){const y=b*e;let x=0;for(const e of[n,r])for(const n of[1,2,3,4])s[y+x++]=t,s[y+x++]=o,s[y+x++]=l,s[y+x++]=a,s[y+x++]=u,s[y+x++]=f,s[y+x++]=h,s[y+x++]=d,s[y+x++]=e,s[y+x++]=n,s[y+x++]=p,s[y+x++]=g,s[y+x++]=i/2,s[y+x++]=c/2,s[y+x++]=w/2,s[y+x++]=m/2,b++}function v(t,e){let n=y+M,r=x+A;const o=Math.sqrt(n*n+r*r);n/=o,r/=o;const l=y*n+x*r;n/=l,r/=l;let a=M+D,i=A+V;const s=Math.sqrt(a*a+i*i);a/=s,i/=s;const c=M*a+A*i;a/=c,i/=c,I(u,f,h,d,-r,n,w,m,p,g,-i,a,t,e),F()}function S(t,e,n,r,o,l){if(y=M,x=A,M=D,A=V,null==y&&null==x&&(y=M,x=A),null!=w&&null!=m){D=t-w,V=e-m;const n=Math.sqrt(D*D+V*V);D/=n,V/=n}null!=y&&null!=x&&v(o,l),u=w,f=m,h=p,d=g,w=t,m=e,p=n,g=r}function T(t,e){y=M,x=A,M=D,A=V,null==y&&null==x&&(y=M,x=A),null!=y&&null!=x&&v(t,e)}for(const L of l){u=null,f=null,h=null,d=null,w=null,m=null,p=null,g=null,y=null,x=null,M=null,A=null,D=null,V=null;const{totalTime:t,timeSeed:e}=L;for(let n=0;n<L.numberOfVertices;n++)S(o[4*(L.startVertex+n)],o[4*(L.startVertex+n)+1],o[4*(L.startVertex+n)+2],o[4*(L.startVertex+n)+3],t,e);T(t,e)}return{vertexData:s,indexData:c}}(p),x=performance.now();return(0,r.A)("esri-2d-profiler")&&(u().info("I.1","_createFlowFieldFromData (ms)",Math.round(c-l)),u().info("I.2","_getStreamlines (ms)",Math.round(w-c)),u().info("I.3","createAnimatedLinesData (ms)",Math.round(g-w)),u().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(x-g)),u().info("I.5","createFlowMesh (ms)",Math.round(x-l)),u().info("I.6","Mesh size (bytes)",y.vertexData.buffer.byteLength+y.indexData.buffer.byteLength)),await Promise.resolve(),(0,a.Te)(o),y}function d(t,e){const n=function(t,e,n,r){if(0===r)return t;const o=Math.round(3*r),l=new Array(2*o+1);let a=0;for(let c=-o;c<=o;c++){const t=Math.exp(-c*c/(r*r));l[c+o]=t,a+=t}for(let c=-o;c<=o;c++)l[c+o]/=a;const i=new Float32Array(t.length);for(let c=0;c<n;c++)for(let n=0;n<e;n++){let r=0,a=0;for(let i=-o;i<=o;i++){if(n+i<0||n+i>=e)continue;const s=l[i+o];r+=s*t[2*(c*e+(n+i))],a+=s*t[2*(c*e+(n+i))+1]}i[2*(c*e+n)]=r,i[2*(c*e+n)+1]=a}const s=new Float32Array(t.length);for(let c=0;c<e;c++)for(let t=0;t<n;t++){let r=0,a=0;for(let s=-o;s<=o;s++){if(t+s<0||t+s>=n)continue;const u=l[s+o];r+=u*i[2*((t+s)*e+c)],a+=u*i[2*((t+s)*e+c)+1]}s[2*(t*e+c)]=r,s[2*(t*e+c)+1]=a}return s}(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,r)=>{const o=Math.floor(t),l=Math.floor(r);if(o<0||o>=e.width)return[0,0];if(l<0||l>=e.height)return[0,0];const a=t-o,i=r-l,s=o,c=l,u=o<e.width-1?o+1:o,f=l<e.height-1?l+1:l,h=n[2*(c*e.width+s)],d=n[2*(c*e.width+u)],w=n[2*(f*e.width+s)],m=n[2*(f*e.width+u)],p=n[2*(c*e.width+s)+1],g=n[2*(c*e.width+u)+1];return[(h*(1-i)+w*i)*(1-a)+(d*(1-i)+m*i)*a,(p*(1-i)+n[2*(f*e.width+s)+1]*i)*(1-a)+(g*(1-i)+n[2*(f*e.width+u)+1]*i)*a]}:(t,r)=>{const o=Math.round(t),l=Math.round(r);return o<0||o>=e.width||l<0||l>=e.height?[0,0]:[n[2*(l*e.width+o)],n[2*(l*e.width+o)+1]]}}function w(t,e,n,r,o,l,a,i,s){const c=[];let u=n,f=r,h=0,[d,w]=e(u,f);d*=t.velocityScale,w*=t.velocityScale;const m=Math.sqrt(d*d+w*w);let p,g;c.push({x:u,y:f,t:h,speed:m});for(let y=0;y<t.verticesPerLine;y++){let[n,r]=e(u,f);n*=t.velocityScale,r*=t.velocityScale;const d=Math.sqrt(n*n+r*r);if(d<t.minSpeedThreshold)return c;const w=n/d,m=r/d;if(u+=w*t.segmentLength,f+=m*t.segmentLength,h+=t.segmentLength/d,Math.acos(w*p+m*g)>t.maxTurnAngle)return c;if(t.collisions){const t=Math.round(u*s),e=Math.round(f*s);if(t<0||t>a-1||e<0||e>i-1)return c;const n=l[e*a+t];if(-1!==n&&n!==o)return c;l[e*a+t]=o}c.push({x:u,y:f,t:h,speed:d}),p=w,g=m}return c}function m(t,e,n,r){const o=[],l=new i.A,a=1/Math.max(t.lineCollisionWidth,1),s=Math.round(n*a),c=Math.round(r*a),u=new Int32Array(s*c);for(let i=0;i<u.length;i++)u[i]=-1;const f=[];for(let i=0;i<r;i+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)f.push({x:e,y:i,sort:l.getFloat()});f.sort(((t,e)=>t.sort-e.sort));for(const{x:i,y:h}of f)if(l.getFloat()<t.density){const n=w(t,e,i,h,o.length,u,s,c,a);if(n.length<2)continue;o.push(n)}return o}function p(t,e){const n=e.pixels,{width:r,height:o}=e,a=new Float32Array(r*o*2),i=e.mask||new Uint8Array(r*o*2);if(e.mask||i.fill(255),"vector-uv"===t)for(let l=0;l<r*o;l++)a[2*l]=n[0][l],a[2*l+1]=-n[1][l];else if("vector-magdir"===t)for(let s=0;s<r*o;s++){const t=n[0][s],e=(0,l.kU)(n[1][s]),r=Math.cos(e-Math.PI/2),o=Math.sin(e-Math.PI/2);a[2*s]=r*t,a[2*s+1]=o*t}return{data:a,mask:i,width:r,height:o}}async function g(t,e,n,o,l,a){const i=performance.now(),f=(0,c.Vp)(e.spatialReference);if(!f){const s=await y(t,e,n,o,l,a);return(0,r.A)("esri-2d-profiler")&&u().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-i)),(0,r.A)("esri-2d-profiler")&&u().info("I.9","Number of parts",1),s}const[h,d]=f.valid,w=d-h,m=Math.ceil(e.width/w),p=e.width/m,g=Math.round(n/m);let x=e.xmin;const M=[],A=performance.now();for(let r=0;r<m;r++){const n=new s.A({xmin:x,xmax:x+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});M.push(y(t,n,g,o,l,a)),x+=p}const D=await Promise.all(M);(0,r.A)("esri-2d-profiler")&&u().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-A)),(0,r.A)("esri-2d-profiler")&&u().info("I.9","Number of parts",D.length);const V={data:new Float32Array(n*o*2),mask:new Uint8Array(n*o),width:n,height:o};let b=0;for(const r of D){for(let t=0;t<r.height;t++)for(let e=0;e<r.width;e++)b+e>=n||(V.data[2*(t*n+b+e)]=r.data[2*(t*r.width+e)],V.data[2*(t*n+b+e)+1]=r.data[2*(t*r.width+e)+1],V.mask[t*n+b+e]=r.mask[t*r.width+e]);b+=r.width}return(0,r.A)("esri-2d-profiler")&&u().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-i)),V}async function y(t,e,n,r,o,l){const a={requestProjectedLocalDirections:!0,signal:l};if(null!=o&&(a.timeExtent=o),"imagery"===t.type){await t.load({signal:l});const o=await t.internalFetchImage(e,n,r,a);return null==o?.pixelData?.pixelBlock?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:p(t.rasterInfo.dataType,o.pixelData.pixelBlock)}await t.load({signal:l});const i=await t.fetchPixels(e,n,r,a);return null==i?.pixelBlock?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:p(t.serviceRasterInfo.dataType,i.pixelBlock)}},46939:(t,e,n)=>{n.r(e),n.d(e,{default:()=>s});var r=n(6326),o=(n(76460),n(81806),n(47249),n(50076),n(85842)),l=n(46533),a=n(2413);let i=class{constructor(){this._tileData=new Map}async generateStreamlines(t){const{flowData:e,simulationSettings:n,size:r}=t,o=c((0,l.DE)(n,e),n,r);return{result:{streamlines:o},transferList:o?.map((t=>t.buffer))}}async generateTiledStreamlines(t){const{simulationSettings:e,size:n,reset:r,flowDataTiles:o,extent:i,pixelSize:s}=t;this._updateTileData(o,r);const u=c(function(t,e,n,r,o){const[i,s]=n;let c=null;const u=new Map;e.forEach((e=>{u.set(e.lij,(0,l.DE)(t,e))}));const f=(t,e,n)=>(0,a.Rj)(t.extent,e,n);return(t,n)=>{const l=Math.round(t),h=Math.round(n);if(l<0||l>=i||h<0||h>=s)return[0,0];const d=t/i*(0,a.VL)(r)+r[0],w=(s-n)/s*(0,a.uJ)(r)+r[1];if(null==c||!f(c,d,w)){c=null;for(const[t,n]of e)if(f(n,d,w)){c=n;break}}if(null==c?.data)return[0,0];const m=u.get(c.lij);if(null==m)return[0,0];const p=c.extent;return m((d-p[0])/(0,a.VL)(p)*o,o-(w-p[1])/(0,a.uJ)(p)*o)}}(e,this._tileData,n,i,s),e,n);return{result:{streamlines:u},transferList:u?.map((t=>t.buffer))??[]}}_updateTileData(t,e){e&&this._tileData.forEach(((e,n)=>{null==t.get(n)&&this._tileData.delete(n)})),t.forEach(((t,e)=>{"delete"===t?this._tileData.delete(e):"on-worker"!==t&&this._tileData.set(e,t)}))}};i=(0,r.Cg)([(0,o.$)("esri.views.3d.support.flow.FlowWorker")],i);const s=i;function c(t,e,n){if(null==t)return;const r=(0,l.qH)(e,t,n[0],n[1]),o=[];for(const l of r){const t=new Float32Array(3*l.length);for(let e=0;e<l.length;e++)t[3*e]=l[e].x,t[3*e+1]=l[e].y,t[3*e+2]=l[e].t;o.push(t)}return o}}}]);
//# sourceMappingURL=46939.da0ee4ca.chunk.js.map