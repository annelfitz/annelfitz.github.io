(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[176],{972:function(e,a,t){"use strict";t.r(a);var i=t(0),s=t(1),r=(t(5),t(6),t(4),t(2)),l=t(741),c=t(9);const p=e=>{let a=class extends e{initialize(){const{layer:e,view:a}=this;e.source.supportsSpatialReference(a.spatialReference)||this.addResolvingPromise(Promise.reject(new c.a("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map(e=>e.name)}};return Object(i.a)([Object(s.b)()],a.prototype,"layer",void 0),Object(i.a)([Object(s.b)({readOnly:!0})],a.prototype,"availableFields",null),a=Object(i.a)([Object(r.a)("esri.views.layers.OGCFeatureLayerView")],a),a};let n=class extends(p(l.default)){};n=Object(i.a)([Object(r.a)("esri.views.2d.layers.OGCFeatureLayerView2D")],n);var o=n;a.default=o}}]);
//# sourceMappingURL=176.b0fb2202.chunk.js.map