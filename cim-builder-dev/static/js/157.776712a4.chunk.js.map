{"version":3,"sources":["../node_modules/@arcgis/core/layers/support/labelFormatUtils.js"],"names":["c","e","getLogger","f","type","evaluate","m","getAttribute","t","field","async","d","a","o","symbol","i","where","l","u","g","r","expression","$feature","repurposeFeature","repurposeAdapter","toString","error","feature","needsHydrationToEvaluate","p","replace","slice","n","attributes","name","y","WhereClause","create","s","b","testFeature","domain","codedValues","code","range","minValue","maxValue"],"mappings":"0GAAA,4KAI+c,MAAMA,EAAEC,IAAEC,UAAU,wCAAwCC,EAAE,CAACC,KAAK,SAASC,SAAS,IAAI,MAAMC,EAAE,CAACC,aAAa,CAACN,EAAEO,IAAIP,EAAEQ,MAAMD,IAAIE,eAAeC,EAAEV,EAAEW,EAAEC,GAAG,IAAIZ,IAAIA,EAAEa,OAAO,OAAOX,EAAE,MAAMY,EAAEd,EAAEe,MAAMC,EAAEC,YAAEjB,GAAGU,EAAEI,QAAQ,8BAAwC,KAAK,IAAII,EAAE,GAAG,WAAWF,EAAEb,KAAK,CAAC,MAAMH,QAAQmB,YAAEH,EAAEI,WAAWR,EAAED,GAAGO,EAAE,CAACf,KAAK,SAASC,SAASe,GAAG,IAAI,MAAMZ,EAAEP,EAAEI,SAAS,CAACiB,SAAS,eAAeF,EAAEnB,EAAEsB,iBAAiBH,GAAGnB,EAAEuB,iBAAiBJ,KAAK,GAAG,MAAMZ,EAAE,OAAOA,EAAEiB,WAAW,MAAMb,GAAGZ,EAAE0B,MAAM,IAAIlB,IAAE,wBAAwB,oEAAoE,CAACmB,QAAQP,EAAEC,WAAWJ,KAAK,OAAO,MAAMW,yBAAyB,IAAI,MAAMC,YAAEZ,EAAEI,kBAAkBF,EAAE,CAACf,KAAK,SAASC,SAASJ,GAAGgB,EAAEI,WAAWS,QAAQ,WAAYtB,IAAI,MAAMY,EAAEZ,EAAEuB,MAAM,GAAG,GAAGlB,EAAEmB,YAAEpB,EAAEQ,GAAG,IAAIP,EAAE,OAAOL,EAAE,IAAIO,EAAE,KAA2F,MAAnF,eAAed,EAAGA,GAAGA,EAAEgC,aAAalB,EAAEd,EAAEgC,WAAWpB,EAAEqB,OAAYnB,EAAEd,EAAEQ,MAAMI,EAAEqB,MAAa,MAAMnB,EAAE,GAAGoB,EAAEpB,EAAEF,MAAO,GAAGE,EAAE,CAAC,IAAId,EAAE,IAAIA,EAAEU,EAAEyB,YAAYC,OAAOtB,EAAE,IAAIuB,IAAE1B,IAAI,MAAM2B,GAAG,OAAOpC,EAAE,MAAMK,EAAEW,EAAEd,SAASc,EAAEd,SAASe,IAAI,MAAMR,EAAE,eAAeQ,OAAE,EAAOd,EAAE,OAAOL,EAAEuC,YAAYpB,EAAER,GAAGJ,EAAEY,GAAG,MAAM,OAAOD,EAAE,SAASgB,EAAElC,EAAEO,GAAG,GAAG,MAAMP,EAAE,MAAM,GAAG,MAAMmB,EAAEZ,EAAEiC,OAAO,GAAGrB,EAAE,GAAG,eAAeA,EAAEhB,MAAM,gBAAgBgB,EAAEhB,KAAK,CAAC,MAAMI,EAAEP,EAAE,IAAI,MAAMA,KAAKmB,EAAEsB,YAAY,GAAGzC,EAAE0C,OAAOnC,EAAE,OAAOP,EAAEiC,UAAU,GAAG,UAAUd,EAAEhB,KAAK,CAAC,MAAMI,GAAGP,EAAEW,EAAE,UAAUQ,EAAEA,EAAEwB,MAAM,GAAGxB,EAAEyB,SAASb,EAAE,UAAUZ,EAAEA,EAAEwB,MAAM,GAAGxB,EAAE0B,SAAS,GAAGlC,GAAGJ,GAAGA,GAAGwB,EAAE,OAAOZ,EAAEc,KAAK,IAAIF,EAAE/B,EAAE,MAAM,SAASO,EAAEJ,MAAM,sBAAsBI,EAAEJ,KAAK4B,EAAEnB,YAAEmB,EAAEjB,YAAE,eAAeH,YAAEJ,KAAKwB,EAAEf,aAAGe,IAAIA,GAAG","file":"static/js/157.776712a4.chunk.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport e from\"../../core/Logger.js\";import t from\"../../core/Error.js\";import{createLabelExpression as r}from\"../../support/arcadeOnDemand.js\";import{isNumericField as a,getField as n}from\"./fieldUtils.js\";import{formatDate as o,convertDateFormatToIntlOptions as i}from\"../../intl/date.js\";import{formatNumber as l}from\"../../intl/number.js\";import s from\"./FieldsIndex.js\";import{getLabelExpression as u,getSingleFieldArcadeExpression as p}from\"./labelUtils.js\";const c=e.getLogger(\"esri.layers.support.labelFormatUtils\"),f={type:\"simple\",evaluate:()=>null},m={getAttribute:(e,t)=>e.field(t)};async function d(e,a,o){if(!e||!e.symbol)return f;const i=e.where,l=u(e),d=i?await import(\"../../core/sql/WhereClause.js\"):null;let g;if(\"arcade\"===l.type){const e=await r(l.expression,o,a);g={type:\"arcade\",evaluate(r){try{const t=e.evaluate({$feature:\"attributes\"in r?e.repurposeFeature(r):e.repurposeAdapter(r)});if(null!=t)return t.toString()}catch(a){c.error(new t(\"bad-arcade-expression\",\"Encountered an error when evaluating label expression for feature\",{feature:r,expression:l}))}return null},needsHydrationToEvaluate:()=>null==p(l.expression)}}else g={type:\"simple\",evaluate:e=>l.expression.replace(/{[^}]*}/g,(t=>{const r=t.slice(1,-1),o=n(a,r);if(!o)return t;let i=null;if(\"attributes\"in e){e&&e.attributes&&(i=e.attributes[o.name])}else i=e.field(o.name);return null==i?\"\":y(i,o)}))};if(i){let e;try{e=d.WhereClause.create(i,new s(a))}catch(b){return f}const t=g.evaluate;g.evaluate=r=>{const a=\"attributes\"in r?void 0:m;return e.testFeature(r,a)?t(r):null}}return g}function y(e,t){if(null==e)return\"\";const r=t.domain;if(r)if(\"codedValue\"===r.type||\"coded-value\"===r.type){const t=e;for(const e of r.codedValues)if(e.code===t)return e.name}else if(\"range\"===r.type){const t=+e,a=\"range\"in r?r.range[0]:r.minValue,n=\"range\"in r?r.range[1]:r.maxValue;if(a<=t&&t<=n)return r.name}let n=e;return\"date\"===t.type||\"esriFieldTypeDate\"===t.type?n=o(n,i(\"short-date\")):a(t)&&(n=l(+n)),n||\"\"}export{d as createLabelFunction,y as formatField};\n"],"sourceRoot":""}