{"version":3,"file":"static/js/46745.591f1f5c.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/libs/basisu/BasisUEncoder.js","../node_modules/@arcgis/core/libs/dxtEncoder/DXTEncoder.js","../node_modules/@arcgis/core/views/support/TextureCompressionWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{getAssetUrl as i}from\"../../assets.js\";function s(){return t??=(async()=>{const s=await import(\"../../chunks/basis_encoder.js\"),t=await s.default({locateFile:s=>i(`esri/libs/basisu/${s}`)});return t.initializeBasis(),t})(),t}let t;function a(){t=null}export{a as destroyBasisEncoder,s as getBasisEncoder};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{getAssetUrl as t}from\"../../assets.js\";function e(){return n??=(async()=>{const e=await import(\"../../chunks/dxt_encoder.js\");return await e.default({locateFile:e=>t(`esri/libs/dxtEncoder/${e}`)})})(),n}let n;function r(){n=null}export{r as destroyDXTEncoder,e as getDXTEncoder};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{getBasisEncoder as e,destroyBasisEncoder as t}from\"../../libs/basisu/BasisUEncoder.js\";import{getDXTEncoder as n,destroyDXTEncoder as r}from\"../../libs/dxtEncoder/DXTEncoder.js\";import{CompressedTextureFormat as a}from\"../webgl/enums.js\";let l,s,i=null,u=null;class o{constructor(e,t){this.internalFormat=e,this.compressedTexture=t}}function c(){i=null,l=null,u=null,s=null,t(),r()}async function h(e){let t;if(t=e.data instanceof ImageBitmap?m(e.data):y(e.data,e.width,e.height,e.components,e.needsFlip),e.hasS3TC){u||await f();const n=new Uint8Array(t.length);if(u?.encode(t,e.width,e.height,e.preMultiplyAlpha,n)){const e=U(n,!0),t=[n.buffer];return{result:new o(e?.internalFormat??null,e?.textureData??null),transferList:t}}return{result:new o(null,null)}}if(e.hasETC){if(i||await d(),e.preMultiplyAlpha&&!u&&await f(),e.preMultiplyAlpha){const n=new Uint8ClampedArray(t.length);u?.premultiply(new Uint8Array(t),e.width,e.height,n),t=n}const n=await p(t,e.width,e.height,e.hasMipmap),r=n?await w(n):null,a=r?.compressedTexture?.levels.map(e=>e.buffer)||[];return{result:new o(r?.internalFormat??null,r?.compressedTexture??null),transferList:a}}return{result:new o(null,null)}}async function d(){i||(i=await(l??=e()),l=null)}async function f(){u||(u=await(s??=n()),s=null)}async function p(e,t,n,r,a=255,l=0,s=!1,u=!1){if(!i)return null;const o=new i.BasisEncoder;o.setPerceptual(!u),o.setCheckForAlpha(!0),o.setForceAlpha(!1),o.setRenormalize(u),o.setMipGen(r),o.setMipSRGB(!u),o.setCreateKTX2File(!0),o.setKTX2SRGBTransferFunc(!u),o.setQualityLevel(a),o.setCompressionLevel(l);const c=new Uint8Array(e.byteLength);o.setSliceSourceImage(0,new Uint8Array(e),t,n,s);const h=o.encode(c),d=new Uint8Array(c.buffer,0,h),f=new i.KTX2File(new Uint8Array(d));return f.isValid()?(o.delete(),d):(f.close(),f.delete(),o.delete(),null)}async function w(e){if(!i)return new o(null,null);const t=new i.KTX2File(new Uint8Array(e));t.startTranscoding();const[n,r]=t.getHasAlpha()?[1,a.COMPRESSED_RGBA8_ETC2_EAC]:[0,a.COMPRESSED_RGB8_ETC2],l=t.getLevels(),s=[];for(let a=0;a<l;a++)s.push(new Uint8Array(t.getImageTranscodedSizeInBytes(a,0,0,n))),t.transcodeImage(s[a],a,0,0,n,0,-1,-1);return t.close(),t.delete(),{internalFormat:r,compressedTexture:{type:\"compressed\",levels:s}}}function m(e){const t=new OffscreenCanvas(e.width,e.height),n=t.getContext(\"2d\");n.drawImage(e,0,0);return n.getImageData(0,0,t.width,t.height).data}function y(e,t,n,r,a){const l=new Uint8ClampedArray(e).subarray(0,t*n*r);if(!a)return l;const s=new Uint8ClampedArray(l.length),i=t*r;for(let u=0;u<n;u++){const e=u*i,t=(n-u-1)*i;s.set(l.subarray(e,e+i),t)}return s}const T=31,A=1,C=2,g=3,E=4,S=7,b=21,_=131072;function D(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}const M=D(\"DXT1\"),X=D(\"DXT3\"),R=D(\"DXT5\");function U(e,t){const n=new Int32Array(e.buffer,e.byteOffset,T);let r,l;switch(n[b]){case M:r=8,l=a.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case X:r=16,l=a.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case R:r=16,l=a.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let s=1,i=n[E],u=n[g];(3&i||3&u)&&(i=i+3&-4,u=u+3&-4);const o=i,c=u;let h,d;n[C]&_&&!1!==t&&(s=Math.max(1,n[S]));let f=e.byteOffset+n[A]+4;const p=[];for(let a=0;a<s;++a)d=(i+3>>2)*(u+3>>2)*r,h=new Uint8Array(e.buffer,f,d),p.push(h),f+=d,i=Math.max(1,i>>1),u=Math.max(1,u>>1);return{textureData:{type:\"compressed\",levels:p},internalFormat:l,width:o,height:c}}export{o as TextureCompressionWorkerOutput,h as compress,p as compressRGBADataToKTX2,w as createTextureDataKTX2,c as destroy,d as initializeBasisEncoder,f as initializeDXTEncoder};\n"],"names":["t","n","l","s","i","u","o","constructor","e","this","internalFormat","compressedTexture","c","async","h","data","ImageBitmap","OffscreenCanvas","width","height","getContext","drawImage","getImageData","m","r","a","Uint8ClampedArray","subarray","length","set","y","components","needsFlip","hasS3TC","f","Uint8Array","encode","preMultiplyAlpha","Int32Array","buffer","byteOffset","T","b","M","COMPRESSED_RGB_S3TC_DXT1_EXT","X","COMPRESSED_RGBA_S3TC_DXT3_EXT","R","COMPRESSED_RGBA_S3TC_DXT5_EXT","E","g","d","C","_","Math","max","S","A","p","push","textureData","type","levels","U","result","transferList","hasETC","premultiply","hasMipmap","w","map","default","locateFile","initializeBasis","BasisEncoder","setPerceptual","setCheckForAlpha","setForceAlpha","setRenormalize","setMipGen","setMipSRGB","setCreateKTX2File","setKTX2SRGBTransferFunc","setQualityLevel","setCompressionLevel","byteLength","setSliceSourceImage","KTX2File","isValid","delete","close","startTranscoding","getHasAlpha","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGB8_ETC2","getLevels","getImageTranscodedSizeInBytes","transcodeImage","D","charCodeAt"],"sourceRoot":""}