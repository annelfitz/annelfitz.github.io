(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[1],{600:function(t,e,i){"use strict";i.d(e,"a",(function(){return B})),i.d(e,"b",(function(){return a})),i.d(e,"c",(function(){return o})),i.d(e,"d",(function(){return u})),i.d(e,"e",(function(){return f})),i.d(e,"f",(function(){return c})),i.d(e,"g",(function(){return h})),i.d(e,"h",(function(){return r})),i.d(e,"i",(function(){return l})),i.d(e,"j",(function(){return x})),i.d(e,"k",(function(){return y})),i.d(e,"l",(function(){return d})),i.d(e,"m",(function(){return m})),i.d(e,"n",(function(){return w})),i.d(e,"o",(function(){return j})),i.d(e,"p",(function(){return p}));var n=i(3),s=i(618);function l(t){return Object(n.j)(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function r(t,e){if(null==e||!e.length||!l(t))return t;const i=t.pixels.length;return e&&e.some(t=>t>=i)||1===i&&1===e.length&&0===e[0]?t:i!==e.length||e.some((t,e)=>t!==e)?new s.a({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map(e=>t.pixels[e]),statistics:t.statistics&&e.map(e=>t.statistics[e])}):t}function o(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const i=e.sort((t,e)=>t[0]-e[0]);let n=0;i[0][0]<0&&(n=i[0][0]);const s=Math.max(256,i[i.length-1][0]-n+1),l=new Uint8Array(4*s),r=[];let o,a=0,h=0;const c=5===i[0].length;if(s>65536)return i.forEach(t=>{r[t[0]-n]=c?t.slice(1):t.slice(1).concat([255])}),{indexed2DColormap:r,offset:n,alphaSpecified:c};if(t.fillUnspecified)for(o=i[h],a=o[0]-n;a<s;a++)l[4*a]=o[1],l[4*a+1]=o[2],l[4*a+2]=o[3],l[4*a+3]=c?o[4]:255,a===o[0]-n&&(o=h===i.length-1?o:i[++h]);else for(a=0;a<i.length;a++)o=i[a],h=4*(o[0]-n),l[h]=o[1],l[h+1]=o[2],l[h+2]=o[3],l[h+3]=c?o[4]:255;return{indexedColormap:l,offset:n,alphaSpecified:c}}function a(t,e){if(!l(t))return t;if(!e&&(e.indexedColormap||e.indexed2DColormap))return t;const i=t.clone(),n=i.pixels;let s=i.mask;const r=i.width*i.height;if(1!==n.length)return t;const{indexedColormap:o,indexed2DColormap:a,offset:h,alphaSpecified:c}=e,f=o.length-1;let u=0;const p=n[0],x=new Uint8Array(p.length),m=new Uint8Array(p.length),d=new Uint8Array(p.length);let g,y=0;if(o)if(s)for(u=0;u<r;u++)s[u]&&(y=4*(p[u]-h),y<h||y>f?s[u]=0:(x[u]=o[y],m[u]=o[y+1],d[u]=o[y+2],s[u]=o[y+3]));else{for(s=new Uint8Array(r),u=0;u<r;u++)y=4*(p[u]-h),y<h||y>f?s[u]=0:(x[u]=o[y],m[u]=o[y+1],d[u]=o[y+2],s[u]=o[y+3]);i.mask=s}else if(s)for(u=0;u<r;u++)s[u]&&(g=a[p[u]],x[u]=g[0],m[u]=g[1],d[u]=g[2],s[u]=g[3]);else{for(s=new Uint8Array(r),u=0;u<r;u++)g=a[p[u]],x[u]=g[0],m[u]=g[1],d[u]=g[2],s[u]=g[3];i.mask=s}return i.pixels=[x,m,d],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=c,i}function h(t){if(!l(t))return null;t.statistics||t.updateStatistics();const{pixels:e,mask:i,pixelType:n,statistics:s}=t,r=t.width*t.height,o=e.length;let a,h,c,f,u;const p=[],x=[];let m,d,g,y,w,k,A,b,M,v;const U=256;for(f=0;f<o;f++){if(m=new Uint32Array(U),g=e[f],"u8"===n)if(a=-.5,h=255.5,i)for(u=0;u<r;u++)i[u]&&m[g[u]]++;else for(u=0;u<r;u++)m[g[u]]++;else{if(a=s[f].minValue,h=s[f].maxValue,c=(h-a)/U,d=new Uint32Array(257),i)for(u=0;u<r;u++)i[u]&&d[Math.floor((g[u]-a)/c)]++;else for(u=0;u<r;u++)d[Math.floor((g[u]-a)/c)]++;for(u=0;u<255;u++)m[u]=d[u];m[255]=d[255]+d[256]}for(p.push({min:a,max:h,size:U,counts:m}),y=0,w=0,b=0,u=0;u<U;u++)y+=m[u],w+=u*m[u];for(M=w/y,u=0;u<U;u++)b+=m[u]*(u-M)**2;v=Math.sqrt(b/(y-1)),c=(h-a)/U,k=(M+.5)*c+a,A=v*c,x.push({min:a,max:h,avg:k,stddev:A})}return{statistics:x,histograms:p}}function c(t){const e=[];for(let i=0;i<t.length;i++){const{min:n,max:s,size:l,counts:r}=t[i];let o=0,a=0;for(let t=0;t<l;t++)o+=r[t],a+=t*r[t];const h=a/o;let c=0;for(let t=0;t<l;t++)c+=r[t]*(t-h)**2;const f=(s-n)/l,u=(h+.5)*f+n,p=Math.sqrt(c/(o-1))*f;e.push({min:n,max:s,avg:u,stddev:p})}return e}function f(t){const{minCutOff:e,maxCutOff:i,gamma:n,pixelType:s}=t,l=t.outMin||0,r=t.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(s))return null;const o=e.length;let a,h,c=0;"s8"===s?c=-127:"s16"===s&&(c=-32767);let f=256;["u16","s16"].indexOf(s)>-1&&(f=65536);const u=[],p=[],x=r-l;for(a=0;a<o;a++)p[a]=i[a]-e[a],u[a]=x/(i[a]-e[a]);const m=n&&n.length>=o,d=[];if(m)for(a=0;a<o;a++)n[a]>1?n[a]>2?d[a]=6.5+(n[a]-2)**2.5:d[a]=6.5+100*(2-n[a])**4:d[a]=1;let g;const y=[];let w,k,A;if(m)for(a=0;a<o;a++){for(A=[],h=0;h<f;h++)w=h+c,g=(w-e[a])/p[a],k=1,n[a]>1&&(k-=(1/x)**(g*d[a])),w<i[a]&&w>e[a]?A[h]=Math.floor(k*x*g**(1/n[a]))+l:w>=i[a]?A[h]=r:A[h]=l;y[a]=A}else for(a=0;a<o;a++){for(A=[],h=0;h<f;h++)w=h+c,w<=e[a]?A[h]=l:w>=i[a]?A[h]=r:A[h]=Math.floor((w-e[a])/p[a]*x)+l;y[a]=A}if(null!=t.contrastOffset){const e=function(t,e){const i=Math.min(Math.max(t,-100),100),n=Math.min(Math.max(e,-100),100),s=255;let l,r;const o=new Uint8Array(256);for(l=0;l<256;l++)i>0&&i<100?r=(200*l-25500+510*n)/(2*(100-i))+128:i<=0&&i>-100?r=(200*l-25500+510*n)*(100+i)/2e4+128:100===i?(r=200*l-25500+256*(100-i)+510*n,r=r>0?s:0):-100===i&&(r=128),o[l]=r>s?s:r<0?0:r;return o}(t.contrastOffset,t.brightnessOffset);for(a=0;a<o;a++)for(A=y[a],h=0;h<f;h++)A[h]=e[A[h]]}return{lut:y,offset:c}}function u(t,e=256){e=Math.min(e,256);const{size:i,counts:n}=t,s=new Uint8Array(i),l=n.reduce((t,i)=>t+i/e,0);let r=0,o=0,a=0,h=l;for(let c=0;c<i;c++)if(a+=n[c],!(c<i-1&&a+n[c+1]<h)){for(;r<e-1&&h<a;)r++,h+=l;for(let t=o;t<=c;t++)s[t]=r;o=c+1}for(let c=o;c<i;c++)s[c]=e-1;return s}function p(t,e){if(!l(t))return null;const i=t.clone(),{pixels:n,mask:s}=i,{minCutOff:r,maxCutOff:o,gamma:a}=e,h=e.outMin||0,c=e.outMax||255,f=i.width*i.height,u=n.length;let p,x,m,d,g;const y=c-h,w=[],k=[];for(p=0;p<u;p++)k[p]=o[p]-r[p],w[p]=y/(o[p]-r[p]);const A=a&&a.length>=u,b=[];if(A)for(p=0;p<u;p++)a[p]>1?a[p]>2?b[p]=6.5+(a[p]-2)**2.5:b[p]=6.5+100*(2-a[p])**4:b[p]=1;if(A)if(null!=s){for(x=0;x<f;x++)if(s[x])for(p=0;p<u;p++)m=n[p][x],g=(m-r[p])/k[p],d=1,a[p]>1&&(d-=(1/y)**(g*b[p])),m<o[p]&&m>r[p]?n[p][x]=Math.floor(d*y*g**(1/a[p]))+h:m>=o[p]?n[p][x]=c:n[p][x]=h}else for(x=0;x<f;x++)for(p=0;p<u;p++)m=n[p][x],g=(m-r[p])/k[p],d=1,a[p]>1&&(d-=(1/y)**(g*b[p])),m<o[p]&&m>r[p]?n[p][x]=Math.floor(d*y*g**(1/a[p]))+h:m>=o[p]?n[p][x]=c:n[p][x]=h;else if(null!=s){for(x=0;x<f;x++)if(s[x])for(p=0;p<u;p++)m=n[p][x],m<o[p]&&m>r[p]?n[p][x]=Math.floor((m-r[p])/k[p]*y)+h:m>=o[p]?n[p][x]=c:n[p][x]=h}else for(x=0;x<f;x++)for(p=0;p<u;p++)m=n[p][x],m<o[p]&&m>r[p]?n[p][x]=Math.floor((m-r[p])/k[p]*y)+h:m>=o[p]?n[p][x]=c:n[p][x]=h;return i.pixelType="u8",i.updateStatistics(),i}function x(t,e){if(!l(t))return null;const{pixels:i,mask:n}=t,r=t.width*t.height,o=i.length;let a=e.lut;const{offset:h}=e;let c,f;a&&1===a[0].length&&(a=i.map(()=>a));const u=[];let p,x,m;if(h)if(null==n)for(c=0;c<o;c++){for(p=i[c],x=a[c],m=new Uint8Array(r),f=0;f<r;f++)m[f]=x[p[f]-h];u.push(m)}else for(c=0;c<o;c++){for(p=i[c],x=a[c],m=new Uint8Array(r),f=0;f<r;f++)n[f]&&(m[f]=x[p[f]-h]);u.push(m)}else if(null==n)for(c=0;c<o;c++){for(p=i[c],x=a[c],m=new Uint8Array(r),f=0;f<r;f++)m[f]=x[p[f]];u.push(m)}else for(c=0;c<o;c++){for(p=i[c],x=a[c],m=new Uint8Array(r),f=0;f<r;f++)n[f]&&(m[f]=x[p[f]]);u.push(m)}const d=new s.a({width:t.width,height:t.height,pixels:u,mask:n,pixelType:"u8"});return d.updateStatistics(),d}function m(t,e){if(!l(t))return null;const i=t.clone(),{pixels:n}=i,s=i.width*i.height,r=e.length,o=Math.floor(r/2),a=e[Math.floor(o)],h=n[0];let c,f,u,p,x,m,d=!1;const g=new Uint8Array(s),y=new Uint8Array(s),w=new Uint8Array(s);let k=i.mask;const A=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(s),k.fill(A?255:1),i.mask=k),x=0;x<s;x++)if(k[x]){for(c=h[x],d=!1,m=o,f=a,u=0,p=r-1;p-u>1;){if(c===f.value){d=!0;break}c>f.value?u=m:p=m,m=Math.floor((u+p)/2),f=e[Math.floor(m)]}d||(c===e[u].value?(f=e[u],d=!0):c===e[p].value?(f=e[p],d=!0):c<e[u].value?(d=!1,f=null):c>e[u].value&&(c<e[p].value?(f=e[u],d=!0):p===r-1?(d=!1,f=null):(f=e[p],d=!0))),d?(g[x]=f.mappedColor[0],y[x]=f.mappedColor[1],w[x]=f.mappedColor[2],k[x]=f.mappedColor[3]):g[x]=y[x]=w[x]=k[x]=0}return i.pixels=[g,y,w],i.mask=k,i.pixelType="u8",i.maskIsAlpha=A,i}function d(t,e){if(!t||0===t.length)return null;const i=t.filter(t=>t.pixelBlock)[0];if(!i||Object(n.i)(i.pixelBlock))return null;const s=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,l=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,r=.01*Math.min(s,l),o=t.sort((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0),a=Math.min.apply(null,o.map(t=>t.extent.xmin)),h=Math.min.apply(null,o.map(t=>t.extent.ymin)),c=Math.max.apply(null,o.map(t=>t.extent.xmax)),f=Math.max.apply(null,o.map(t=>t.extent.ymax)),u={x:Math.round((e.xmin-a)/s),y:Math.round((f-e.ymax)/l)},p={width:Math.round((c-a)/s),height:Math.round((f-h)/l)},x={width:Math.round((e.xmax-e.xmin)/s),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(p.width/i.pixelBlock.width)*Math.round(p.height/i.pixelBlock.height)!==o.length||u.x<0||u.y<0||p.width<x.width||p.height<x.height?null:{extent:e,pixelBlock:y(o.map(t=>t.pixelBlock),p,u,x)}}function g(t,e,i,n,s,l){const{width:r,height:o}=i.block,{x:a,y:h}=i.offset,{width:c,height:f}=i.mosaic,u=function(t,e,i,n,s,l,r,o){return{xmin:s<=i*t?0:s<i*t+t?s-i*t:t,ymin:l<=n*e?0:l<n*e+e?l-n*e:e,xmax:s+r<=i*t?0:s+r<i*t+t?s+r-i*t:t,ymax:l+o<=n*e?0:l+o<n*e+e?l+o-n*e:e}}(r,o,n,s,a,h,c,f);let p=0,x=0;if(l){const t=l.hasGCSSShiftTransform?360:l.halfWorldWidth,e=r*l.resolutionX,i=l.startX+n*e,s=i+e;i<t&&s>t?x=l.rightPadding:i>=t&&(p=l.leftMargin-l.rightPadding,x=0)}if(u.xmax-=x,"number"!=typeof e)for(let m=u.ymin;m<u.ymax;m++){const i=(s*o+m-h)*c+(n*r-a)+p,l=m*r;for(let n=u.xmin;n<u.xmax;n++)t[i+n]=e[l+n]}else for(let m=u.ymin;m<u.ymax;m++){const i=(s*o+m-h)*c+(n*r-a)+p;for(let n=u.xmin;n<u.xmax;n++)t[i+n]=e}}function y(t,e,i,r,o){const a=t.filter(t=>l(t))[0];if(Object(n.i)(a))return null;const h=r?r.width:e.width,c=r?r.height:e.height,f=a.width,u=a.height,p=e.width/f,x=e.height/u,m={offset:i||{x:0,y:0},mosaic:r||e,block:{width:f,height:u}},d=a.pixelType,y=s.a.getPixelArrayConstructor(d),w=a.pixels.length,k=[];let A,b,M;for(let n=0;n<w;n++){b=new y(h*c);for(let e=0;e<x;e++)for(let i=0;i<p;i++){const s=t[e*p+i];l(s)&&(A=s.pixels[n],g(b,A,m,i,e,o))}k.push(b)}if(t.some(t=>Object(n.i)(t)||t.mask&&t.mask.length>0)){M=new Uint8Array(h*c);for(let e=0;e<x;e++)for(let i=0;i<p;i++){const s=t[e*p+i];g(M,(Object(n.j)(s)?s.mask:null)||(s?1:0),m,i,e,o)}}const v=new s.a({width:h,height:c,pixels:k,pixelType:d,mask:M});return v.updateStatistics(),v}function w(t,e,i){if(!l(t))return null;const{width:n,height:s}=t,r=e.x,o=e.y,a=i.width+r,h=i.height+o;if(r<0||o<0||a>n||h>s)return t;if(0===r&&0===o&&a===n&&h===s)return t;t.mask||(t.mask=new Uint8Array(n*s));const c=t.mask;for(let l=0;l<s;l++){const t=l*n;for(let e=0;e<n;e++)c[t+e]=l<o||l>=h||e<r||e>=a?0:1}return t.updateStatistics(),t}function k(t){if(!l(t))return null;const e=t.clone(),{width:i,height:n,pixels:s,mask:r}=t,o=s[0],a=e.pixels[0];for(let l=2;l<n-1;l++){const t=new Map;for(let n=l-2;n<l+2;n++)for(let e=0;e<4;e++){const s=n*i+e;M(t,o[s],r?r[s]:1)}a[l*i]=A(t),a[l*i+1]=a[l*i+2]=a[l*i];let e=3;for(;e<i-1;e++){let n=(l-2)*i+e+1;M(t,o[n],r?r[n]:1),n=(l-1)*i+e+1,M(t,o[n],r?r[n]:1),n=l*i+e+1,M(t,o[n],r?r[n]:1),n=(l+1)*i+e+1,M(t,o[n],r?r[n]:1),n=(l-2)*i+e-3,b(t,o[n],r?r[n]:1),n=(l-1)*i+e-3,b(t,o[n],r?r[n]:1),n=l*i+e-3,b(t,o[n],r?r[n]:1),n=(l+1)*i+e-3,b(t,o[n],r?r[n]:1),a[l*i+e]=A(t)}a[l*i+e+1]=a[l*i+e]}for(let l=0;l<i;l++)a[l]=a[i+l]=a[2*i+l],a[(n-1)*i+l]=a[(n-2)*i+l];return e.updateStatistics(),e}function A(t){if(0===t.size)return 0;let e=0,i=-1,n=0;const s=t.keys();let l=s.next();for(;!l.done;)n=t.get(l.value),n>e&&(i=l.value,e=n),l=s.next();return i}function b(t,e,i){if(0===i)return;const n=t.get(e);1===n?t.delete(e):t.set(e,n-1)}function M(t,e,i){0!==i&&t.set(e,t.has(e)?t.get(e)+1:1)}function v(t,e,i){let{x:n,y:r}=e;const{width:o,height:a}=i;if(0===n&&0===r&&a===t.height&&o===t.width)return t;const{width:h,height:c}=t,f=Math.max(0,r),u=Math.max(0,n),p=Math.min(n+o,h),x=Math.min(r+a,c);if(p<0||x<0||!l(t))return null;n=Math.max(0,-n),r=Math.max(0,-r);const{pixels:m,mask:d}=t,g=o*a,y=m.length,w=[];for(let l=0;l<y;l++){const e=m[l],i=s.a.createEmptyBand(t.pixelType,g);for(let t=f;t<x;t++){const s=t*h;let l=(t+r-f)*o+n;for(let t=u;t<p;t++)i[l++]=e[s+t]}w.push(i)}const k=new Uint8Array(g);for(let s=f;s<x;s++){const t=s*h;let e=(s+r-f)*o+n;for(let i=u;i<p;i++)k[e++]=d?d[t+i]:1}const A=new s.a({width:i.width,height:i.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function U(t,e=!0){if(!l(t))return null;const{pixels:i,width:n,height:r,mask:o,pixelType:a}=t,h=[],c=Math.round(n/2),f=Math.round(r/2),u=r-1,p=n-1;for(let l=0;l<i.length;l++){const t=i[l],o=s.a.createEmptyBand(a,c*f);let x=0;for(let i=0;i<r;i+=2)for(let s=0;s<n;s+=2){const l=t[i*n+s];if(e){const e=s===p?l:t[i*n+s+1],r=i===u?l:t[i*n+s+n],a=s===p?r:i===u?e:t[i*n+s+n+1];o[x++]=(l+e+r+a)/4}else o[x++]=l}h.push(o)}let x=null;if(o){x=new Uint8Array(c*f);let t=0;for(let i=0;i<r;i+=2)for(let s=0;s<n;s+=2){const l=o[i*n+s];if(e){const e=s===p?l:o[i*n+s+1],r=i===u?l:o[i*n+s+n],a=s===p?r:i===u?e:o[i*n+s+n+1];x[t++]=l*e*r*a?1:0}else x[t++]=l}}return new s.a({width:c,height:f,pixelType:a,pixels:h,mask:x})}function j(t,e,i){if(!l(t))return null;const{width:n,height:s}=e;let{width:r,height:o}=t;const a=new Map,h={x:0,y:0},c=null==i?1:1+i;let f=t;for(let l=0;l<c;l++){const t=Math.ceil(r/n),i=Math.ceil(o/s);for(let r=0;r<i;r++){h.y=r*s;for(let i=0;i<t;i++){h.x=i*n;const t=v(f,h,e);a.set(`${l}/${r}/${i}`,t)}}l<c-1&&(f=U(f)),r=Math.round(r/2),o=Math.round(o/2)}return a}function B(t,e,i,n,r="nearest"){if(!l(t))return null;"majority"===r&&(t=k(t));const{pixels:o,mask:a,pixelType:h}=t,c=t.width,f=t.height,u=s.a.getPixelArrayConstructor(h),p=o.length,{width:x,height:m}=e,d=n.cols,g=n.rows,y=Math.ceil(x/d-.1/d),w=Math.ceil(m/g-.1/g);let A,b,M,v,U,j,B,O=!1;for(let s=0;s<i.length;s+=3)-1===i[s]&&-1===i[s+1]&&-1===i[s+2]&&(O=!0);const T=y*d,C=T*w*g,P=new Float32Array(C),S=new Float32Array(C);let F,G,I=0;const R="majority"===r?0:.5;for(let s=0;s<w;s++)for(let t=0;t<y;t++){A=12*(s*y+t),b=i[A],M=i[A+1],v=i[A+2],U=i[A+3],j=i[A+4],B=i[A+5];for(let e=0;e<g;e++){I=(s*g+e)*T+t*d,G=(e+.5)/g;for(let t=0;t<e;t++)F=(t+.5)/d,P[I+t]=Math.round((b*F+M*G+v)*c-R),S[I+t]=Math.round((U*F+j*G+B)*f-R)}A+=6,b=i[A],M=i[A+1],v=i[A+2],U=i[A+3],j=i[A+4],B=i[A+5];for(let e=0;e<g;e++){I=(s*g+e)*T+t*d,G=(e+.5)/g;for(let t=e;t<d;t++)F=(t+.5)/d,P[I+t]=Math.round((b*F+M*G+v)*c-R),S[I+t]=Math.round((U*F+j*G+B)*f-R)}}const V=(t,e)=>{for(let i=0;i<m;i++){A=i*T;for(let n=0;n<x;n++)P[A]<0||S[A]<0?t[i*x+n]=0:t[i*x+n]=e[P[A]+S[A]*c],A++}},_=[];let E;for(let s=0;s<p;s++)E=new u(x*m),V(E,o[s]),_.push(E);const z=new s.a({width:x,height:m,pixelType:h,pixels:_});if(a)z.mask=new Uint8Array(x*m),V(z.mask,a);else if(O){z.mask=new Uint8Array(x*m);for(let t=0;t<x*m;t++)z.mask[t]=P[t]<0||S[t]<0?0:1}return z.updateStatistics(),z}},618:function(t,e,i){"use strict";i.d(e,"a",(function(){return m}));var n,s=i(0),l=(i(5),i(9)),r=i(10),o=i(7),a=i(4),h=i(3),c=i(1),f=i(30),u=i(2);const p=a.a.getLogger("esri.layers.support.PixelBlock");let x=n=class extends r.a{constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.pixels=null,this.statistics=null}static createEmptyBand(t,e){return new(n.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"u32":e=Uint32Array;break;case"f32":e=Float32Array;break;case"f64":e=Float64Array;break;case"c64":case"c128":case"unknown":e=Float32Array}return e}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].indexOf(e)>-1?e="u8":-1===["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].indexOf(e)&&(e="f32"),e}getPlaneCount(){return this.pixels&&this.pixels.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new l.a("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics||{minValue:null,maxValue:null})}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){this.statistics=this.pixels.map(t=>this._calculateBandStatistics(t,this.mask));const t=this.mask;let e=0;if(t)for(let i=0;i<t.length;i++)t[i]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t)return;let e;switch(t){case"u8":e=[0,255];break;case"u16":e=[0,65535];break;case"u32":e=[0,4294967295];break;case"s8":e=[-128,127];break;case"s16":e=[-32768,32767];break;case"s32":e=[-2147483648,2147483647];break;default:e=[-34e38,34e38]}const[i,s]=e,l=this.pixels,r=this.width*this.height,o=l.length;let a,h,c;const f=[];for(let u=0;u<o;u++){c=n.createEmptyBand(t,r),a=l[u];for(let t=0;t<r;t++)h=a[t],c[t]=h>s?s:h<i?i:h;f.push(c)}this.pixels=f,this.pixelType=t}extractBands(t){if(Object(h.i)(t)||0===t.length||null==this.pixels||0===this.pixels.length)return this;const e=this.pixels.length,i=t.some(t=>t>=this.pixels.length),s=e===t.length&&!t.some((t,e)=>t!==e);return i||s?this:new n({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map(t=>this.pixels[t]),statistics:this.statistics&&t.map(t=>this.statistics[t])})}clone(){const t=new n({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const i=n.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const n=this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=n?this.pixels[e].slice(0,this.pixels[e].length):new i(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=Object(o.a)(this.statistics[e]);return t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:i,pixels:n}=this;if(!t||!n||!n.length)return void p.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,l,r,o;s=l=r=n[0],n.length>=3?(l=n[1],r=n[2]):2===n.length&&(l=n[1]);const a=new Uint32Array(t),h=this.width*this.height;if(s.length===h)if(e&&e.length===h)if(i)for(o=0;o<h;o++)e[o]&&(a[o]=e[o]<<24|r[o]<<16|l[o]<<8|s[o]);else for(o=0;o<h;o++)e[o]&&(a[o]=255<<24|r[o]<<16|l[o]<<8|s[o]);else for(o=0;o<h;o++)a[o]=255<<24|r[o]<<16|l[o]<<8|s[o];else p.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:i,statistics:n}=this;if(!t||!e||!e.length)return void p.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const s=this.pixelType;let l=1,r=0,o=1;if(n&&n.length>0)r=n.map(t=>t.minValue).reduce((t,e)=>Math.min(t,e)),o=n.map(t=>t.maxValue-t.minValue).reduce((t,e)=>Math.max(t,e)),l=255/o;else{let t=255;"s8"===s?(r=-128,t=127):"u16"===s?t=65535:"s16"===s?(r=-32768,t=32767):"u32"===s?t=4294967295:"s32"===s?(r=-2147483648,t=2147483647):"f32"===s?(r=-34e38,t=34e38):"f64"===s&&(r=-Number.MAX_VALUE,t=Number.MAX_VALUE),l=255/(t-r)}const a=new Uint32Array(t),h=this.width*this.height;let c,f,u,x,m;if(c=f=u=e[0],c.length!==h)return p.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(f=e[1],e.length>=3&&(u=e[2]),i&&i.length===h)for(x=0;x<h;x++)i[x]&&(a[x]=255<<24|(u[x]-r)*l<<16|(f[x]-r)*l<<8|(c[x]-r)*l);else for(x=0;x<h;x++)a[x]=255<<24|(u[x]-r)*l<<16|(f[x]-r)*l<<8|(c[x]-r)*l;else if(i&&i.length===h)for(x=0;x<h;x++)m=(c[x]-r)*l,i[x]&&(a[x]=255<<24|m<<16|m<<8|m);else for(x=0;x<h;x++)m=(c[x]-r)*l,a[x]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:i}=this;if(!t||!e||!e.length)return p.error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let n,s,l,r;n=s=l=e[0],e.length>=3?(s=e[1],l=e[2]):2===e.length&&(s=e[1]);const o=this.width*this.height;if(n.length!==o)return p.error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let a=0;if(i&&i.length===o)for(r=0;r<o;r++)t[a++]=n[r],t[a++]=s[r],t[a++]=l[r],t[a++]=1&i[r];else for(r=0;r<o;r++)t[a++]=n[r],t[a++]=s[r],t[a++]=l[r],t[a++]=1}_calculateBandStatistics(t,e){let i=1/0,n=-1/0;const s=t.length;let l,r=0;if(e)for(l=0;l<s;l++)e[l]&&(r=t[l],i=r<i?r:i,n=r>n?r:n);else for(l=0;l<s;l++)r=t[l],i=r<i?r:i,n=r>n?r:n;return{minValue:i,maxValue:n}}};Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"width",void 0),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"height",void 0),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"pixelType",void 0),Object(s.a)([Object(f.a)("pixelType")],x.prototype,"castPixelType",null),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"validPixelCount",void 0),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"mask",void 0),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"maskIsAlpha",void 0),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"pixels",void 0),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"statistics",void 0),x=n=Object(s.a)([Object(u.a)("esri.layers.support.PixelBlock")],x);var m=x}}]);
//# sourceMappingURL=1.8e34872a.chunk.js.map