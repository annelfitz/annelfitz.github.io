{"version":3,"file":"static/js/9838.f06344bd.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/key-d26d2bfe.js","../node_modules/@esri/calcite-components/dist/esm/loadable-48424264.js","../node_modules/@esri/calcite-components/dist/esm/locale-5313c9c2.js","../node_modules/@esri/calcite-components/dist/esm/observers-3d5b9a3f.js","../node_modules/@esri/calcite-components/dist/esm/resources-d3e9339d.js","../node_modules/@esri/calcite-components/dist/esm/t9n-4c805851.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\nfunction isActivationKey(key) {\n  return key === \"Enter\" || key === \" \";\n}\nconst numberKeys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n\nexport { isActivationKey as i, numberKeys as n };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\nconst resolveMap = new WeakMap();\nconst promiseMap = new WeakMap();\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nfunction setUpLoadableComponent(component) {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nfunction setComponentLoaded(component) {\n  resolveMap.get(component)();\n}\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" stencil lifecycle method has been called).\n *\n * Requires \"setUpLoadableComponent\" and \"setComponentLoaded\" to be called first.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nfunction componentLoaded(component) {\n  return promiseMap.get(component);\n}\n\nexport { setComponentLoaded as a, componentLoaded as c, setUpLoadableComponent as s };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\nimport { c as closestElementCrossShadowBoundary, a as containsCrossShadowBoundary } from './dom-0e4fb5f9.js';\nimport { n as numberKeys } from './key-d26d2bfe.js';\nimport { c as createObserver } from './observers-3d5b9a3f.js';\n\nconst defaultMinusSignRegex = new RegExp(\"-\", \"g\");\nconst unnecessaryDecimalRegex = new RegExp(\"\\\\.?0+$\");\n// adopted from https://stackoverflow.com/a/66939244\nclass BigDecimal {\n  constructor(input) {\n    this.add = (num) => BigDecimal.fromBigInt(this.value + new BigDecimal(num).value);\n    this.subtract = (num) => BigDecimal.fromBigInt(this.value - new BigDecimal(num).value);\n    this.multiply = (num) => BigDecimal._divRound(this.value * new BigDecimal(num).value, BigDecimal.SHIFT);\n    this.divide = (num) => BigDecimal._divRound(this.value * BigDecimal.SHIFT, new BigDecimal(num).value);\n    if (input instanceof BigDecimal) {\n      return input;\n    }\n    const [integers, decimals] = String(input).split(\".\").concat(\"\");\n    this.value =\n      BigInt(integers + decimals.padEnd(BigDecimal.DECIMALS, \"0\").slice(0, BigDecimal.DECIMALS)) +\n        BigInt(BigDecimal.ROUNDED && decimals[BigDecimal.DECIMALS] >= \"5\");\n    this.isNegative = input.charAt(0) === \"-\";\n  }\n  getIntegersAndDecimals() {\n    const s = this.value\n      .toString()\n      .replace(defaultMinusSignRegex, \"\")\n      .padStart(BigDecimal.DECIMALS + 1, \"0\");\n    const integers = s.slice(0, -BigDecimal.DECIMALS);\n    const decimals = s.slice(-BigDecimal.DECIMALS).replace(unnecessaryDecimalRegex, \"\");\n    return { integers, decimals };\n  }\n  toString() {\n    const { integers, decimals } = this.getIntegersAndDecimals();\n    return `${this.isNegative ? \"-\" : \"\"}${integers}${decimals.length ? \".\" + decimals : \"\"}`;\n  }\n  formatToParts(formatter) {\n    const { integers, decimals } = this.getIntegersAndDecimals();\n    const parts = formatter.numberFormatter.formatToParts(BigInt(integers));\n    this.isNegative && parts.unshift({ type: \"minusSign\", value: formatter.minusSign });\n    if (decimals.length) {\n      parts.push({ type: \"decimal\", value: formatter.decimal });\n      decimals.split(\"\").forEach((char) => parts.push({ type: \"fraction\", value: char }));\n    }\n    return parts;\n  }\n  format(formatter) {\n    const { integers, decimals } = this.getIntegersAndDecimals();\n    const integersFormatted = `${this.isNegative ? formatter.minusSign : \"\"}${formatter.numberFormatter.format(BigInt(integers))}`;\n    const decimalsFormatted = decimals.length\n      ? `${formatter.decimal}${decimals\n        .split(\"\")\n        .map((char) => formatter.numberFormatter.format(Number(char)))\n        .join(\"\")}`\n      : \"\";\n    return `${integersFormatted}${decimalsFormatted}`;\n  }\n}\n// Configuration: constants\nBigDecimal.DECIMALS = 100; // number of decimals on all instances\nBigDecimal.ROUNDED = true; // numbers are truncated (false) or rounded (true)\nBigDecimal.SHIFT = BigInt(\"1\" + \"0\".repeat(BigDecimal.DECIMALS)); // derived constant\nBigDecimal._divRound = (dividend, divisor) => BigDecimal.fromBigInt(dividend / divisor + (BigDecimal.ROUNDED ? ((dividend * BigInt(2)) / divisor) % BigInt(2) : BigInt(0)));\nBigDecimal.fromBigInt = (bigint) => Object.assign(Object.create(BigDecimal.prototype), { value: bigint });\nfunction isValidNumber(numberString) {\n  return !(!numberString || isNaN(Number(numberString)));\n}\nfunction parseNumberString(numberString) {\n  if (!numberString || !stringContainsNumbers(numberString)) {\n    return \"\";\n  }\n  return sanitizeExponentialNumberString(numberString, (nonExpoNumString) => {\n    let containsDecimal = false;\n    const result = nonExpoNumString\n      .split(\"\")\n      .filter((value, i) => {\n      if (value.match(/\\./g) && !containsDecimal) {\n        containsDecimal = true;\n        return true;\n      }\n      if (value.match(/\\-/g) && i === 0) {\n        return true;\n      }\n      return numberKeys.includes(value);\n    })\n      .reduce((string, part) => string + part);\n    return isValidNumber(result) ? new BigDecimal(result).toString() : \"\";\n  });\n}\n// regex for number sanitization\nconst allLeadingZerosOptionallyNegative = /^([-0])0+(?=\\d)/;\nconst decimalOnlyAtEndOfString = /(?!^\\.)\\.$/;\nconst allHyphensExceptTheStart = /(?!^-)-/g;\nconst isNegativeDecimalOnlyZeros = /^-\\b0\\b\\.?0*$/;\nconst sanitizeNumberString = (numberString) => sanitizeExponentialNumberString(numberString, (nonExpoNumString) => {\n  const sanitizedValue = nonExpoNumString\n    .replace(allHyphensExceptTheStart, \"\")\n    .replace(decimalOnlyAtEndOfString, \"\")\n    .replace(allLeadingZerosOptionallyNegative, \"$1\");\n  return isValidNumber(sanitizedValue)\n    ? isNegativeDecimalOnlyZeros.test(sanitizedValue)\n      ? sanitizedValue\n      : new BigDecimal(sanitizedValue).toString()\n    : nonExpoNumString;\n});\nfunction sanitizeExponentialNumberString(numberString, func) {\n  if (!numberString) {\n    return numberString;\n  }\n  const firstE = numberString.toLowerCase().indexOf(\"e\") + 1;\n  if (!firstE) {\n    return func(numberString);\n  }\n  return numberString\n    .replace(/[eE]*$/g, \"\")\n    .substring(0, firstE)\n    .concat(numberString.slice(firstE).replace(/[eE]/g, \"\"))\n    .split(/[eE]/)\n    .map((section, i) => (i === 1 ? func(section.replace(/\\./g, \"\")) : func(section)))\n    .join(\"e\")\n    .replace(/^e/, \"1e\");\n}\nfunction stringContainsNumbers(string) {\n  return numberKeys.some((number) => string.includes(number));\n}\n\nconst defaultLocale = \"en\";\nconst t9nLocales = [\n  \"ar\",\n  \"bg\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"da\",\n  \"de\",\n  \"el\",\n  defaultLocale,\n  \"es\",\n  \"et\",\n  \"fi\",\n  \"fr\",\n  \"he\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"ja\",\n  \"ko\",\n  \"lt\",\n  \"lv\",\n  \"no\",\n  \"nl\",\n  \"pl\",\n  \"pt-BR\",\n  \"pt-PT\",\n  \"ro\",\n  \"ru\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"th\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-CN\",\n  \"zh-HK\",\n  \"zh-TW\"\n];\nconst locales = [\n  \"ar\",\n  \"bg\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"da\",\n  \"de\",\n  \"de-CH\",\n  \"el\",\n  defaultLocale,\n  \"en-AU\",\n  \"en-CA\",\n  \"en-GB\",\n  \"es\",\n  \"es-MX\",\n  \"et\",\n  \"fi\",\n  \"fr\",\n  \"fr-CH\",\n  \"he\",\n  \"hi\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"it-CH\",\n  \"ja\",\n  \"ko\",\n  \"lt\",\n  \"lv\",\n  \"mk\",\n  \"no\",\n  \"nl\",\n  \"pl\",\n  \"pt\",\n  \"pt-PT\",\n  \"ro\",\n  \"ru\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"th\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-CN\",\n  \"zh-HK\",\n  \"zh-TW\"\n];\nconst numberingSystems = [\n  \"arab\",\n  \"arabext\",\n  \"bali\",\n  \"beng\",\n  \"deva\",\n  \"fullwide\",\n  \"gujr\",\n  \"guru\",\n  \"hanidec\",\n  \"khmr\",\n  \"knda\",\n  \"laoo\",\n  \"latn\",\n  \"limb\",\n  \"mlym\",\n  \"mong\",\n  \"mymr\",\n  \"orya\",\n  \"tamldec\",\n  \"telu\",\n  \"thai\",\n  \"tibt\"\n];\nconst isNumberingSystemSupported = (numberingSystem) => numberingSystems.includes(numberingSystem);\nconst browserNumberingSystem = new Intl.NumberFormat().resolvedOptions().numberingSystem;\nconst defaultNumberingSystem = browserNumberingSystem === \"arab\" || !isNumberingSystemSupported(browserNumberingSystem)\n  ? \"latn\"\n  : browserNumberingSystem;\nconst getSupportedNumberingSystem = (numberingSystem) => isNumberingSystemSupported(numberingSystem) ? numberingSystem : defaultNumberingSystem;\n/**\n * Gets the locale that best matches the context.\n *\n * @param locale – the BCP 47 locale code\n * @param context - specifies whether the locale code should match in the context of CLDR or T9N (translation)\n */\nfunction getSupportedLocale(locale, context = \"cldr\") {\n  const contextualLocales = context === \"cldr\" ? locales : t9nLocales;\n  if (!locale) {\n    return defaultLocale;\n  }\n  if (contextualLocales.includes(locale)) {\n    return locale;\n  }\n  locale = locale.toLowerCase();\n  // we support both 'nb' and 'no' (BCP 47) for Norwegian but only `no` has corresponding bundle\n  if (locale === \"nb\") {\n    return \"no\";\n  }\n  // we use `pt-BR` as it will have the same translations as `pt`, which has no corresponding bundle\n  if (context === \"t9n\" && locale === \"pt\") {\n    return \"pt-BR\";\n  }\n  if (locale.includes(\"-\")) {\n    locale = locale.replace(/(\\w+)-(\\w+)/, (_match, language, region) => `${language}-${region.toUpperCase()}`);\n    if (!contextualLocales.includes(locale)) {\n      locale = locale.split(\"-\")[0];\n    }\n  }\n  // we can `zh-CN` as base translation for chinese locales which has no corresponding bundle.\n  if (locale === \"zh\") {\n    return \"zh-CN\";\n  }\n  if (!contextualLocales.includes(locale)) {\n    console.warn(`Translations for the \"${locale}\" locale are not available and will fall back to the default, English (en).`);\n    return defaultLocale;\n  }\n  return locale;\n}\nconst connectedComponents = new Set();\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback` before any logic that depends on locale\n *\n * @param component\n */\nfunction connectLocalized(component) {\n  updateEffectiveLocale(component);\n  if (connectedComponents.size === 0) {\n    mutationObserver?.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: [\"lang\"],\n      subtree: true\n    });\n  }\n  connectedComponents.add(component);\n}\n/**\n * This is only exported for components that implemented the now deprecated `locale` prop.\n *\n * Do not use this utils for new components.\n *\n * @param component\n */\nfunction updateEffectiveLocale(component) {\n  component.effectiveLocale = getLocale(component);\n}\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nfunction disconnectLocalized(component) {\n  connectedComponents.delete(component);\n  if (connectedComponents.size === 0) {\n    mutationObserver.disconnect();\n  }\n}\nconst mutationObserver = createObserver(\"mutation\", (records) => {\n  records.forEach((record) => {\n    const el = record.target;\n    connectedComponents.forEach((component) => {\n      const inUnrelatedSubtree = !containsCrossShadowBoundary(el, component.el);\n      if (inUnrelatedSubtree) {\n        return;\n      }\n      const closestLangEl = closestElementCrossShadowBoundary(component.el, \"[lang]\");\n      if (!closestLangEl) {\n        component.effectiveLocale = defaultLocale;\n        return;\n      }\n      const closestLang = closestLangEl.lang;\n      component.effectiveLocale =\n        // user set lang=\"\" means unknown language, so we use default\n        closestLangEl.hasAttribute(\"lang\") && closestLang === \"\" ? defaultLocale : closestLang;\n    });\n  });\n});\n/**\n * This util helps resolve a component's locale.\n * It will also fall back on the deprecated `locale` if a component implemented this previously.\n *\n * @param component\n */\nfunction getLocale(component) {\n  return (component.el.lang ||\n    closestElementCrossShadowBoundary(component.el, \"[lang]\")?.lang ||\n    document.documentElement.lang ||\n    defaultLocale);\n}\n/**\n * This util formats and parses numbers for localization\n */\nclass NumberStringFormat {\n  constructor() {\n    this.delocalize = (numberString) => \n    // For performance, (de)localization is skipped if the formatter isn't initialized.\n    // In order to localize/delocalize, e.g. when lang/numberingSystem props are not default values,\n    // `numberFormatOptions` must be set in a component to create and cache the formatter.\n    this._numberFormatOptions\n      ? sanitizeExponentialNumberString(numberString, (nonExpoNumString) => nonExpoNumString\n        .trim()\n        .replace(new RegExp(`[${this._minusSign}]`, \"g\"), \"-\")\n        .replace(new RegExp(`[${this._group}]`, \"g\"), \"\")\n        .replace(new RegExp(`[${this._decimal}]`, \"g\"), \".\")\n        .replace(new RegExp(`[${this._digits.join(\"\")}]`, \"g\"), this._getDigitIndex))\n      : numberString;\n    this.localize = (numberString) => this._numberFormatOptions\n      ? sanitizeExponentialNumberString(numberString, (nonExpoNumString) => isValidNumber(nonExpoNumString.trim())\n        ? new BigDecimal(nonExpoNumString.trim())\n          .format(this)\n          .replace(new RegExp(`[${this._actualGroup}]`, \"g\"), this._group)\n        : nonExpoNumString)\n      : numberString;\n  }\n  get group() {\n    return this._group;\n  }\n  get decimal() {\n    return this._decimal;\n  }\n  get minusSign() {\n    return this._minusSign;\n  }\n  get digits() {\n    return this._digits;\n  }\n  get numberFormatter() {\n    return this._numberFormatter;\n  }\n  get numberFormatOptions() {\n    return this._numberFormatOptions;\n  }\n  /**\n   * numberFormatOptions needs to be set before localize/delocalize is called to ensure the options are up to date\n   */\n  set numberFormatOptions(options) {\n    options.locale = getSupportedLocale(options?.locale);\n    options.numberingSystem = getSupportedNumberingSystem(options?.numberingSystem);\n    if (\n    // No need to create the formatter if `locale` and `numberingSystem`\n    // are the default values and `numberFormatOptions` has not been set\n    (!this._numberFormatOptions &&\n      options.locale === defaultLocale &&\n      options.numberingSystem === defaultNumberingSystem &&\n      // don't skip initialization if any options besides locale/numberingSystem are set\n      Object.keys(options).length === 2) ||\n      // cache formatter by only recreating when options change\n      JSON.stringify(this._numberFormatOptions) === JSON.stringify(options)) {\n      return;\n    }\n    this._numberFormatOptions = options;\n    this._numberFormatter = new Intl.NumberFormat(this._numberFormatOptions.locale, this._numberFormatOptions);\n    this._digits = [\n      ...new Intl.NumberFormat(this._numberFormatOptions.locale, {\n        useGrouping: false,\n        numberingSystem: this._numberFormatOptions.numberingSystem\n      }).format(9876543210)\n    ].reverse();\n    const index = new Map(this._digits.map((d, i) => [d, i]));\n    const parts = new Intl.NumberFormat(this._numberFormatOptions.locale).formatToParts(-12345678.9);\n    this._actualGroup = parts.find((d) => d.type === \"group\").value;\n    // change whitespace group characters that don't render correctly\n    this._group = this._actualGroup.trim().length === 0 ? \" \" : this._actualGroup;\n    this._decimal = parts.find((d) => d.type === \"decimal\").value;\n    this._minusSign = parts.find((d) => d.type === \"minusSign\").value;\n    this._getDigitIndex = (d) => index.get(d);\n  }\n}\nconst numberStringFormatter = new NumberStringFormat();\n\nexport { defaultNumberingSystem as a, getSupportedNumberingSystem as b, connectLocalized as c, disconnectLocalized as d, getSupportedLocale as g, isValidNumber as i, numberStringFormatter as n, parseNumberString as p, sanitizeNumberString as s };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nfunction createObserver(type, callback, options) {\n  const Observer = getObserver(type);\n  return new Observer(callback, options);\n}\nfunction getObserver(type) {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver {\n    constructor(callback) {\n      super(callback);\n      this.observedEntry = [];\n      this.callback = callback;\n    }\n    observe(target, options) {\n      this.observedEntry.push({ target, options });\n      return super.observe(target, options);\n    }\n    unobserve(target) {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n  return (function () {\n    return (type === \"intersection\"\n      ? window.IntersectionObserver\n      : type === \"mutation\"\n        ? ExtendedMutationObserver\n        : window.ResizeObserver);\n  })();\n}\n\nexport { createObserver as c };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\nvar KindIcons;\n(function (KindIcons) {\n  KindIcons[\"brand\"] = \"lightbulb\";\n  KindIcons[\"danger\"] = \"exclamationMarkTriangle\";\n  KindIcons[\"info\"] = \"information\";\n  KindIcons[\"success\"] = \"checkCircle\";\n  KindIcons[\"warning\"] = \"exclamationMarkTriangle\";\n})(KindIcons || (KindIcons = {}));\n\nexport { KindIcons as K };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.3\n */\nimport { a as getAssetPath } from './index-88b94637.js';\nimport { g as getSupportedLocale } from './locale-5313c9c2.js';\n\nconst componentLangToMessageBundleCache = {};\nasync function getMessageBundle(lang, component) {\n  const key = `${component}_${lang}`;\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n    if (!resp.ok) {\n      throwMessageFetchError();\n    }\n    return resp.json();\n  })\n    .catch(() => throwMessageFetchError());\n  return componentLangToMessageBundleCache[key];\n}\nfunction throwMessageFetchError() {\n  throw new Error(\"could not fetch component message bundle\");\n}\nfunction mergeMessages(component) {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides\n  };\n}\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nasync function setUpMessages(component) {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\nasync function fetchMessages(component, lang) {\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nasync function updateMessages(component, lang) {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nfunction connectMessages(component) {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nfunction disconnectMessages(component) {\n  component.onMessagesChange = undefined;\n}\nfunction defaultOnMessagesChange() {\n  mergeMessages(this);\n}\n\nexport { connectMessages as c, disconnectMessages as d, setUpMessages as s, updateMessages as u };\n"],"names":["isActivationKey","key","numberKeys","resolveMap","WeakMap","promiseMap","setUpLoadableComponent","component","set","Promise","resolve","setComponentLoaded","get","componentLoaded","defaultMinusSignRegex","RegExp","unnecessaryDecimalRegex","BigDecimal","constructor","input","this","add","num","fromBigInt","value","subtract","multiply","_divRound","SHIFT","divide","integers","decimals","String","split","concat","BigInt","padEnd","DECIMALS","slice","ROUNDED","isNegative","charAt","getIntegersAndDecimals","s","toString","replace","padStart","length","formatToParts","formatter","parts","numberFormatter","unshift","type","minusSign","push","decimal","forEach","char","format","map","Number","join","isValidNumber","numberString","isNaN","parseNumberString","string","number","includes","sanitizeExponentialNumberString","nonExpoNumString","containsDecimal","result","filter","i","match","reduce","part","repeat","dividend","divisor","bigint","Object","assign","create","prototype","allLeadingZerosOptionallyNegative","decimalOnlyAtEndOfString","allHyphensExceptTheStart","isNegativeDecimalOnlyZeros","sanitizeNumberString","sanitizedValue","test","func","firstE","toLowerCase","indexOf","substring","section","defaultLocale","t9nLocales","locales","numberingSystems","isNumberingSystemSupported","numberingSystem","browserNumberingSystem","Intl","NumberFormat","resolvedOptions","defaultNumberingSystem","getSupportedNumberingSystem","getSupportedLocale","locale","context","contextualLocales","_match","language","region","toUpperCase","console","warn","connectedComponents","Set","connectLocalized","effectiveLocale","el","lang","closestElementCrossShadowBoundary","document","documentElement","getLocale","updateEffectiveLocale","size","mutationObserver","observe","attributes","attributeFilter","subtree","disconnectLocalized","delete","disconnect","createObserver","records","record","target","containsCrossShadowBoundary","closestLangEl","closestLang","hasAttribute","numberStringFormatter","delocalize","_numberFormatOptions","trim","_minusSign","_group","_decimal","_digits","_getDigitIndex","localize","_actualGroup","group","digits","_numberFormatter","numberFormatOptions","options","keys","JSON","stringify","useGrouping","reverse","index","Map","d","find","callback","Observer","ExtendedMutationObserver","window","MutationObserver","super","observedEntry","unobserve","newObservedEntries","observed","takeRecords","IntersectionObserver","ResizeObserver","getObserver","KindIcons","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","messages","defaultMessages","messageOverrides","async","setUpMessages","fetchMessages","componentName","tagName","fetch","getAssetPath","then","resp","ok","json","catch","getMessageBundle","updateMessages","connectMessages","onMessagesChange","defaultOnMessagesChange","disconnectMessages","undefined"],"sourceRoot":""}