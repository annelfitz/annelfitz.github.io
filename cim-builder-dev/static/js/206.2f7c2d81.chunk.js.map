{"version":3,"sources":["../node_modules/@arcgis/core/core/workers/request.js"],"names":["s","a","n","o","responseType","i","r","signal","t","invokeStaticMessage","url","options","then","async","l","u","c","f","data","ArrayBuffer","Blob","FileReaderSync","readAsText","JSON","parse","b","requestOptions","e","message","error","fetch","ssl"],"mappings":"0GAAA,yEAI4F,IAAIA,EAAE,SAASC,EAAEA,EAAEC,EAAE,IAAI,IAAIC,EAAED,EAAEE,aAAaD,EAAE,iBAAiBA,GAAG,SAASA,GAAG,SAASA,GAAG,WAAWA,GAAG,wBAAwBA,GAAG,SAASA,IAAIA,EAAE,QAAQA,EAAE,OAAO,MAAME,EAAEC,YAAEJ,EAAEK,QAAQ,cAAcL,EAAEK,OAAOC,IAAEC,oBAAoB,UAAU,CAACC,IAAIT,EAAEU,QAAQT,GAAG,CAACK,OAAOF,IAAIO,KAAMC,UAAU,IAAIP,EAAEQ,EAAEC,EAAEC,EAAEC,EAAE,GAAGT,EAAEU,KAAK,GAAGV,EAAEU,gBAAgBC,aAAa,KAAK,SAAShB,GAAG,SAASA,GAAG,SAASA,IAAIG,EAAE,IAAIc,KAAK,CAACZ,EAAEU,OAAO,SAASf,GAAG,SAASA,IAAIH,IAAIA,EAAE,IAAIqB,gBAAgBL,EAAEhB,EAAEsB,WAAWhB,GAAG,SAASH,KAAK,CAAC,IAAIW,EAAES,KAAKC,MAAMR,GAAG,MAAM,MAAMS,GAAG,MAAMjB,EAAE,IAAIiB,EAAEf,IAAIT,EAAEyB,eAAexB,GAAG,MAAM,IAAIyB,IAAE,iBAAiBF,EAAEG,QAAQpB,GAAG,GAAGM,EAAEe,MAAM,CAAC,MAAMrB,EAAE,IAAIM,EAAEe,MAAMnB,IAAIT,EAAEyB,eAAexB,GAAG,MAAM,IAAIyB,IAAE,iBAAiBb,EAAEe,MAAMD,QAAQpB,SAAS,WAAWL,IAAIK,EAAEU,KAAKX,OAAOF,EAAEU,QAAQe,MAAMtB,EAAEU,KAAKR,IAAIF,EAAEU,OAAO,OAAOf,GAAG,IAAI,OAAOc,EAAEX,EAAE,MAAM,IAAI,OAAOW,EAAEH,EAAE,MAAM,IAAI,SAASG,EAAEF,EAAE,MAAM,IAAI,OAAOE,EAAED,EAAE,MAAM,QAAQC,EAAET,EAAEU,KAAK,MAAM,CAACA,KAAKD,EAAES,eAAexB,EAAE6B,IAAIvB,EAAEuB,IAAIrB,IAAIT","file":"static/js/206.2f7c2d81.chunk.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.21/esri/copyright.txt for details.\n*/\nimport e from\"../Error.js\";import t from\"../global.js\";import{unwrap as r}from\"../maybe.js\";let s;function a(a,n={}){let o=n.responseType;o?\"array-buffer\"!==o&&\"blob\"!==o&&\"json\"!==o&&\"native\"!==o&&\"native-request-init\"!==o&&\"text\"!==o&&(o=\"text\"):o=\"json\";const i=r(n.signal);return delete n.signal,t.invokeStaticMessage(\"request\",{url:a,options:n},{signal:i}).then((async t=>{let r,l,u,c,f;if(t.data)if(t.data instanceof ArrayBuffer){if(!(\"json\"!==o&&\"text\"!==o&&\"blob\"!==o||(r=new Blob([t.data]),\"json\"!==o&&\"text\"!==o||(s||(s=new FileReaderSync),c=s.readAsText(r),\"json\"!==o)))){try{l=JSON.parse(c||null)}catch(b){const t={...b,url:a,requestOptions:n};throw new e(\"request:server\",b.message,t)}if(l.error){const t={...l.error,url:a,requestOptions:n};throw new e(\"request:server\",l.error.message,t)}}}else\"native\"===o&&(t.data.signal=i,u=await fetch(t.data.url,t.data));switch(o){case\"blob\":f=r;break;case\"json\":f=l;break;case\"native\":f=u;break;case\"text\":f=c;break;default:f=t.data}return{data:f,requestOptions:n,ssl:t.ssl,url:a}}))}export{a as execute};\n"],"sourceRoot":""}