"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[46745],{46745:(e,t,n)=>{n.r(t),n.d(t,{TextureCompressionWorkerOutput:()=>h,compress:()=>p,compressRGBADataToKTX2:()=>y,createTextureDataKTX2:()=>m,destroy:()=>d,initializeBasisEncoder:()=>w,initializeDXTEncoder:()=>f});var a=n(28899);let r,l;var s=n(93345);let i,u,c=null,o=null;class h{constructor(e,t){this.internalFormat=e,this.compressedTexture=t}}function d(){c=null,i=null,o=null,u=null,r=null,l=null}async function p(e){let t;if(t=e.data instanceof ImageBitmap?function(e){const t=new OffscreenCanvas(e.width,e.height),n=t.getContext("2d");return n.drawImage(e,0,0),n.getImageData(0,0,t.width,t.height).data}(e.data):function(e,t,n,a,r){const l=new Uint8ClampedArray(e).subarray(0,t*n*a);if(!r)return l;const s=new Uint8ClampedArray(l.length),i=t*a;for(let u=0;u<n;u++){const e=u*i,t=(n-u-1)*i;s.set(l.subarray(e,e+i),t)}return s}(e.data,e.width,e.height,e.components,e.needsFlip),e.hasS3TC){o||await f();const n=new Uint8Array(t.length);if(o?.encode(t,e.width,e.height,e.preMultiplyAlpha,n)){const e=function(e,t){const n=new Int32Array(e.buffer,e.byteOffset,T);let a,r;switch(n[S]){case X:a=8,r=s.CQ.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case F:a=16,r=s.CQ.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case M:a=16,r=s.CQ.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let l=1,i=n[b],u=n[g];(3&i||3&u)&&(i=i+3&-4,u=u+3&-4);const c=i,o=u;let h,d;n[A]&_&&!1!==t&&(l=Math.max(1,n[E]));let p=e.byteOffset+n[C]+4;const w=[];for(let s=0;s<l;++s)d=(i+3>>2)*(u+3>>2)*a,h=new Uint8Array(e.buffer,p,d),w.push(h),p+=d,i=Math.max(1,i>>1),u=Math.max(1,u>>1);return{textureData:{type:"compressed",levels:w},internalFormat:r,width:c,height:o}}(n,!0),t=[n.buffer];return{result:new h(e?.internalFormat??null,e?.textureData??null),transferList:t}}return{result:new h(null,null)}}if(e.hasETC){if(c||await w(),e.preMultiplyAlpha&&!o&&await f(),e.preMultiplyAlpha){const n=new Uint8ClampedArray(t.length);o?.premultiply(new Uint8Array(t),e.width,e.height,n),t=n}const n=await y(t,e.width,e.height,e.hasMipmap),a=n?await m(n):null,r=a?.compressedTexture?.levels.map((e=>e.buffer))||[];return{result:new h(a?.internalFormat??null,a?.compressedTexture??null),transferList:r}}return{result:new h(null,null)}}async function w(){c||(c=await(i??=(r??=(async()=>{const e=await n.e(56378).then(n.bind(n,56378)),t=await e.default({locateFile:e=>(0,a.s)(`esri/libs/basisu/${e}`)});return t.initializeBasis(),t})(),r)),i=null)}async function f(){o||(o=await(u??=(l??=(async()=>{const e=await n.e(53996).then(n.bind(n,53996));return await e.default({locateFile:e=>(0,a.s)(`esri/libs/dxtEncoder/${e}`)})})(),l)),u=null)}async function y(e,t,n,a,r=255,l=0,s=!1,i=!1){if(!c)return null;const u=new c.BasisEncoder;u.setPerceptual(!i),u.setCheckForAlpha(!0),u.setForceAlpha(!1),u.setRenormalize(i),u.setMipGen(a),u.setMipSRGB(!i),u.setCreateKTX2File(!0),u.setKTX2SRGBTransferFunc(!i),u.setQualityLevel(r),u.setCompressionLevel(l);const o=new Uint8Array(e.byteLength);u.setSliceSourceImage(0,new Uint8Array(e),t,n,s);const h=u.encode(o),d=new Uint8Array(o.buffer,0,h),p=new c.KTX2File(new Uint8Array(d));return p.isValid()?(u.delete(),d):(p.close(),p.delete(),u.delete(),null)}async function m(e){if(!c)return new h(null,null);const t=new c.KTX2File(new Uint8Array(e));t.startTranscoding();const[n,a]=t.getHasAlpha()?[1,s.CQ.COMPRESSED_RGBA8_ETC2_EAC]:[0,s.CQ.COMPRESSED_RGB8_ETC2],r=t.getLevels(),l=[];for(let s=0;s<r;s++)l.push(new Uint8Array(t.getImageTranscodedSizeInBytes(s,0,0,n))),t.transcodeImage(l[s],s,0,0,n,0,-1,-1);return t.close(),t.delete(),{internalFormat:a,compressedTexture:{type:"compressed",levels:l}}}const T=31,C=1,A=2,g=3,b=4,E=7,S=21,_=131072;function D(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}const X=D("DXT1"),F=D("DXT3"),M=D("DXT5")}}]);
//# sourceMappingURL=46745.591f1f5c.chunk.js.map