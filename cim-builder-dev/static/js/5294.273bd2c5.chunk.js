"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[5294],{62801:(e,t,r)=>{r.d(t,{A:()=>f});var s,i=r(6326),o=r(91967),n=r(46053),l=(r(81806),r(76460),r(47249),r(85842)),a=r(31163);let f=s=class extends o.A{constructor(e){super(e),this.steps=[]}getInverse(){const e=new s;for(let t=this.steps.length-1;t>=0;t--){const r=this.steps[t];e.steps.push(r.getInverse())}return e}};(0,i.Cg)([(0,n.MZ)({type:[a.A],nonNullable:!0})],f.prototype,"steps",void 0),f=s=(0,i.Cg)([(0,l.$)("esri.geometry.operators.support.GeographicTransformation")],f)},31163:(e,t,r)=>{r.d(t,{A:()=>a});var s,i=r(6326),o=r(91967),n=r(46053),l=(r(81806),r(76460),r(47249),r(85842));let a=s=class extends o.A{constructor(e){super(e),this.isInverse=!1,this.wkt=null,this.wkid=null}getInverse(){return new s({isInverse:!this.isInverse,wkid:this.wkid,wkt:this.wkt})}};(0,i.Cg)([(0,n.MZ)()],a.prototype,"isInverse",void 0),(0,i.Cg)([(0,n.MZ)()],a.prototype,"wkt",void 0),(0,i.Cg)([(0,n.MZ)()],a.prototype,"wkid",void 0),a=s=(0,i.Cg)([(0,l.$)("esri.geometry.operators.support.GeographicTransformationStep")],a)},5294:(e,t,r)=>{r.r(t),r.d(t,{default:()=>P});var s,i=r(76797),o=r(19247),n=r(62801),l=r(66486),a=r(37267),f=r(52494),c=r(81633),p=r(59844),u=r(86866),m=r(99846),h=r(26855),y=r(6326),d=(r(76460),r(81806),r(47249),r(50076),r(6409)),x=r(85842),g=r(75116);let v=s=class extends g.A{constructor(){super(...arguments),this.type="identity"}clone(){return new s}};(0,y.Cg)([(0,d.e)({IdentityXform:"identity"})],v.prototype,"type",void 0),v=s=(0,y.Cg)([(0,x.$)("esri.layers.support.rasterTransforms.IdentityTransform")],v);var C=r(29754);const w={GCSShiftXform:h.A,IdentityXform:v,PolynomialXform:C.A};function S(e){const t=e?.type;if(!t)return null;const r=w[e?.type];if(r){const t=new r;return t.read(e),t}return null}var k=r(20118),O=r(46533);function A(e){if(!e)return{result:null,transferList:[]};const{pixelBlock:t,transferList:r}=e.getTransferableObject();return{result:t,transferList:r}}class P{convertVectorFieldData(e){const t=l.A.fromJSON(e.pixelBlock),r=A((0,m.FI)(t,e.type));return Promise.resolve(r)}convertPixelBlockToFeatures(e){const t=(0,f.L)({pixelBlock:l.A.fromJSON(e.pixelBlock),extent:i.A.fromJSON(e.extent),fieldNames:e.fieldNames,skipFactor:e.skipFactor,skipSpatialReference:!0,pixelIdOffset:e.pixelIdOffset,imageRowSize:e.imageRowSize});return Promise.resolve(t)}computeStatisticsHistograms(e){const t=l.A.fromJSON(e.pixelBlock),r=(0,u.eH)(t,{histogramSize:e.histogramSize,includeSkewnessKurtosis:e.includeSkewnessKurtosis});return Promise.resolve(r)}async decode(e){return A(await(0,a.D)(e.data,e.options))}symbolize(e){e.pixelBlock=l.A.fromJSON(e.pixelBlock),e.extent=e.extent?i.A.fromJSON(e.extent):null;const t=A(this.symbolizer.symbolize(e));return Promise.resolve(t)}highlightPixels(e){const t=l.A.fromJSON(e.pixelBlock),r=l.A.fromJSON(e.renderedPixelBlock);return(0,f._F)(t,r,e.highlightOptions),Promise.resolve(r.toJSON())}async updateSymbolizer(e){this.symbolizer=k.A.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=(0,c.vt)(e.rasterFunctionJSON)}async process(e){return A(this.rasterFunction.process({extent:i.A.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map((e=>null!=e?l.A.fromJSON(e):null)),primaryPixelSizes:e.primaryPixelSizes?.map((e=>null!=e?o.A.fromJSON(e):null)),primaryRasterIds:e.primaryRasterIds}))}stretch(e){const t=A(this.symbolizer.simpleStretch(l.A.fromJSON(e.srcPixelBlock),e.stretchParams));return Promise.resolve(t)}estimateStatisticsHistograms(e){const t=(0,u.f4)(l.A.fromJSON(e.srcPixelBlock));return Promise.resolve(t)}split(e){const t=(0,f.lD)(l.A.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel??0,!1===e.useBilinear),r=[];let s;return t&&(s=new Map,t.forEach(((e,t)=>{if(e){const{pixelBlock:i,transferList:o}=e.getTransferableObject();s.set(t,i),o.forEach((e=>{r.includes(e)||r.push(e)}))}}))),Promise.resolve({result:s,transferList:r})}clipTile(e){const t=l.A.fromJSON(e.pixelBlock),r=A((0,f.J$)({...e,pixelBlock:t}));return Promise.resolve(r)}async mosaicAndTransform(e){const t=e.srcPixelBlocks.map((e=>e?new l.A(e):null)),r=(0,f.z7)(t,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let s,i=r;e.coefs&&(i=(0,f.$i)(r,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(s=(0,f.QF)(e.destDimension,e.gcsGrid),i=(0,m.Y2)(i,e.isUV?"vector-uv":"vector-magdir",s));const{result:o,transferList:n}=A(i);return{result:{pixelBlock:o,localNorthDirections:s},transferList:n}}async createFlowMesh(e,t){const r={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:s,indexData:i}=await(0,O.CW)(e.meshType,e.simulationSettings,r,t.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:i.buffer},transferList:[s.buffer,i.buffer]}}async getProjectionOffsetGrid(e){const t=i.A.fromJSON(e.projectedExtent),r=i.A.fromJSON(e.srcBufferExtent);let s=null;e.datumTransformationSteps?.length&&(s=new n.A({steps:e.datumTransformationSteps})),await(0,p.Hh)();const o=e.rasterTransform?S(e.rasterTransform):null;return(0,p.l0)({...e,projectedExtent:t,srcBufferExtent:r,datumTransformation:s,rasterTransform:o})}}},75116:(e,t,r)=>{r.d(t,{A:()=>l});var s=r(6326),i=r(42553),o=r(46053),n=(r(81806),r(76460),r(47249),r(85842));let l=class extends i.o{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,s.Cg)([(0,o.MZ)()],l.prototype,"affectsPixelSize",null),(0,s.Cg)([(0,o.MZ)({json:{write:!0}})],l.prototype,"spatialReference",void 0),l=(0,s.Cg)([(0,n.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],l)},26855:(e,t,r)=>{r.d(t,{A:()=>f});var s,i=r(6326),o=r(46053),n=(r(81806),r(76460),r(47249),r(6409)),l=r(85842),a=r(75116);let f=s=class extends a.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new s({tolerance:this.tolerance})}};(0,i.Cg)([(0,n.e)({GCSShiftXform:"gcs-shift"})],f.prototype,"type",void 0),(0,i.Cg)([(0,o.MZ)()],f.prototype,"tolerance",void 0),f=s=(0,i.Cg)([(0,l.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],f)},29754:(e,t,r)=>{r.d(t,{A:()=>y});var s,i=r(6326),o=r(46053),n=(r(81806),r(76460),r(47249),r(6409)),l=r(28379),a=r(85842),f=r(17707),c=r(76797),p=r(19247),u=r(75116);function m(e,t,r){const{x:s,y:i}=t;if(r<2)return{x:e[0]+s*e[2]+i*e[4],y:e[1]+s*e[3]+i*e[5]};if(2===r){const t=s*s,r=i*i,o=s*i;return{x:e[0]+s*e[2]+i*e[4]+t*e[6]+o*e[8]+r*e[10],y:e[1]+s*e[3]+i*e[5]+t*e[7]+o*e[9]+r*e[11]}}const o=s*s,n=i*i,l=s*i,a=o*s,f=o*i,c=s*n,p=i*n;return{x:e[0]+s*e[2]+i*e[4]+o*e[6]+l*e[8]+n*e[10]+a*e[12]+f*e[14]+c*e[16]+p*e[18],y:e[1]+s*e[3]+i*e[5]+o*e[7]+l*e[9]+n*e[11]+a*e[13]+f*e[15]+c*e[17]+p*e[19]}}function h(e,t,r){const{xmin:s,ymin:i,xmax:o,ymax:n,spatialReference:l}=t;let a=[];if(r<2)a.push({x:s,y:n}),a.push({x:o,y:n}),a.push({x:s,y:i}),a.push({x:o,y:i});else{let e=10;for(let t=0;t<e;t++)a.push({x:s,y:i+(n-i)*t/(e-1)}),a.push({x:o,y:i+(n-i)*t/(e-1)});e=8;for(let t=1;t<=e;t++)a.push({x:s+(o-s)*t/e,y:i}),a.push({x:s+(o-s)*t/e,y:n})}a=a.map((t=>m(e,t,r)));const f=a.map((e=>e.x)),p=a.map((e=>e.y));return new c.A({xmin:Math.min.apply(null,f),xmax:Math.max.apply(null,f),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:l})}let y=s=class extends u.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:r,coeffY:s}=t;if(!r?.length||!s?.length||r.length!==s.length)return null;const i=[];for(let o=0;o<r.length;o++)i.push(r[o]),i.push(s[o]);return i}writeForwardCoefficients(e,t,r){const s=[],i=[];for(let o=0;o<e?.length;o++)o%2==0?s.push(e[o]):i.push(e[o]);t.coeffX=s,t.coeffY=i}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,r,s,i,o,n]=e,l=s*n-o*i,a=o*i-s*n;return[(o*r-t*n)/l,(s*r-t*i)/a,n/l,i/a,-o/l,-s/a]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:r,inverseCoeffY:s}=t;if(!r?.length||!s?.length||r.length!==s.length)return null;const i=[];for(let o=0;o<r.length;o++)i.push(r[o]),i.push(s[o]);return i}writeInverseCoefficients(e,t,r){const s=[],i=[];for(let o=0;o<e?.length;o++)o%2==0?s.push(e[o]):i.push(e[o]);t.inverseCoeffX=s,t.inverseCoeffY=i}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const t=m(this.forwardCoefficients,e,this.polynomialOrder);return new p.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return h(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=m(this.inverseCoefficients,e,this.polynomialOrder);return new p.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return h(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new s({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,i.Cg)([(0,o.MZ)({json:{write:!0}})],y.prototype,"polynomialOrder",void 0),(0,i.Cg)([(0,o.MZ)()],y.prototype,"forwardCoefficients",void 0),(0,i.Cg)([(0,l.w)("forwardCoefficients",["coeffX","coeffY"])],y.prototype,"readForwardCoefficients",null),(0,i.Cg)([(0,f.K)("forwardCoefficients")],y.prototype,"writeForwardCoefficients",null),(0,i.Cg)([(0,o.MZ)({json:{write:!0}})],y.prototype,"inverseCoefficients",null),(0,i.Cg)([(0,l.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],y.prototype,"readInverseCoefficients",null),(0,i.Cg)([(0,f.K)("inverseCoefficients")],y.prototype,"writeInverseCoefficients",null),(0,i.Cg)([(0,o.MZ)()],y.prototype,"affectsPixelSize",null),(0,i.Cg)([(0,n.e)({PolynomialXform:"polynomial"})],y.prototype,"type",void 0),y=s=(0,i.Cg)([(0,a.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],y)}}]);
//# sourceMappingURL=5294.273bd2c5.chunk.js.map