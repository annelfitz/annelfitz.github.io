(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[30],{627:function(e,t,r){"use strict";r.r(t);var a=r(0),s=(r(6),r(3)),i=(r(5),r(7)),o=r(1),n=r(17),l=r(2),c=r(16),y=r(12),b=(r(4),r(8),r(72)),p=(r(9),r(15)),u=r(39),h=r(50),m=r(249),d=r(193),O=r(120),j=r(314),g=r(89),f=r(317),v=r(326),S=r(320),x=r(345),w=r(316),L=r(325),E=r(318),P=r(333),D=r(131),N=r(704),I=r(737),J=r(705),q=r(590),M=r(738),F=r(694);let R=class extends(Object(S.a)(Object(P.a)(Object(E.a)(Object(L.a)(Object(M.a)(Object(I.a)(Object(v.a)(Object(f.a)(Object(w.a)(Object(j.a)(Object(x.a)(Object(D.b)(d.a))))))))))))){constructor(...e){super(...e),this.alwaysRefetch=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(s.i)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).then(()=>this._fetchService(t),()=>this._fetchService(t))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,a){if(!this.loaded||!e)return;const s=e.slice().reverse().flatten(({sublayers:e})=>e&&e.toArray().reverse()).toArray();let i=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=Object(b.d)(a.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;i=Object(q.c)(s,e,2)}else if(e>3){const e=this.createSublayersForOrigin("portal-item");i=Object(q.c)(s,e.sublayers,Object(b.d)(e.origin))}}const o=[],n={writeSublayerStructure:i,...a};let l=i;s.forEach(e=>{const t=e.write({},n);o.push(t),l=l||"user"===e.originOf("visible")}),o.some(e=>Object.keys(e).length>1)&&(t.layers=o),l&&(t.visibleLayers=s.filter(e=>e.visible).map(e=>e.id))}createExportImageParameters(e,t,r,a){const s=a&&a.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const i=new F.a({layer:this,scale:Object(N.a)({extent:e,width:t})*s}),o=i.toJSON();i.destroy();const n=!a||!a.rotation||this.version<10.3?{}:{rotation:-a.rotation},l=e&&e.spatialReference,c=l.wkid||JSON.stringify(l.toJSON());o.dpi*=s;const y={};if(null!=a&&a.timeExtent){const{start:e,end:t}=a.timeExtent.toJSON();y.time=e&&t&&e===t?""+e:`${null==e?"null":e},${null==t?"null":t}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(y.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:c,imageSR:c,size:t+","+r,...o,...n,...y}}async fetchImage(e,t,r,a){const s={responseType:"image"};a&&a.timestamp&&(s.query={...s.query,_ts:a.timestamp}),a&&a.signal&&(s.signal=a.signal),this.customParameters&&Object.keys(this.customParameters).length&&(s.query={...this.customParameters,...s.query});const i=this.parsedUrl.path+"/export",o={...this.parsedUrl.query,...this.createExportImageParameters(e,t,r,a),f:"image",_ts:this.alwaysRefetch?Date.now():null};return null==o.dynamicLayers||this.capabilities.exportMap.supportsDynamicLayers?(s.query?s.query={...o,...s.query}:s.query=o,Object(h.default)(i,s).then(e=>e.data).catch(e=>{if(Object(p.m)(e))throw e;throw new y.a("mapimagelayer:image-fetch-error","Unable to load image: "+i,{error:e})})):Promise.reject(new y.a("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:o}))}async fetchRecomputedExtents(e={}){const t={...e,query:{returnUpdates:!0,f:"json"}},{data:r}=await Object(h.default)(this.url,t),{extent:a,fullExtent:s,timeExtent:i}=r,o=a||s;return{fullExtent:o&&u.a.fromJSON(o),timeExtent:i&&O.a.fromJSON({start:i[0],end:i[1]})}}loadAll(){return Object(m.a)(this,e=>{e(this.allSublayers)})}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await Object(h.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters},signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};Object(a.a)([Object(o.b)()],R.prototype,"alwaysRefetch",void 0),Object(a.a)([Object(o.b)()],R.prototype,"dpi",void 0),Object(a.a)([Object(o.b)()],R.prototype,"gdbVersion",void 0),Object(a.a)([Object(o.b)()],R.prototype,"imageFormat",void 0),Object(a.a)([Object(n.a)("imageFormat",["supportedImageFormatTypes"])],R.prototype,"readImageFormat",null),Object(a.a)([Object(o.b)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],R.prototype,"imageMaxHeight",void 0),Object(a.a)([Object(o.b)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],R.prototype,"imageMaxWidth",void 0),Object(a.a)([Object(o.b)()],R.prototype,"imageTransparency",void 0),Object(a.a)([Object(o.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],R.prototype,"isReference",void 0),Object(a.a)([Object(o.b)({json:{read:!1,write:!1}})],R.prototype,"labelsVisible",void 0),Object(a.a)([Object(o.b)({type:["ArcGISMapServiceLayer"]})],R.prototype,"operationalLayerType",void 0),Object(a.a)([Object(o.b)({json:{read:!1,write:!1}})],R.prototype,"popupEnabled",void 0),Object(a.a)([Object(o.b)()],R.prototype,"sourceJSON",void 0),Object(a.a)([Object(o.b)({json:{write:{ignoreOrigin:!0}}})],R.prototype,"sublayers",void 0),Object(a.a)([Object(c.a)("sublayers",{layers:{type:[J.a]},visibleLayers:{type:[i.a]}})],R.prototype,"writeSublayers",null),Object(a.a)([Object(o.b)({type:["show","hide","hide-children"]})],R.prototype,"listMode",void 0),Object(a.a)([Object(o.b)({json:{read:!1},readOnly:!0,value:"map-image"})],R.prototype,"type",void 0),Object(a.a)([Object(o.b)(g.n)],R.prototype,"url",void 0),R=Object(a.a)([Object(l.a)("esri.layers.MapImageLayer")],R);var T=R;t.default=T},694:function(e,t,r){"use strict";r.d(t,"a",(function(){return b}));var a=r(0),s=(r(6),r(5),r(7),r(1)),i=r(2),o=(r(4),r(8),r(9),r(19)),n=r(89),l=r(131),c=r(590);const y={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let b=class extends(Object(l.b)(o.a)){constructor(e){super(e),this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map(e=>e.toExportImageJSON());return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&Object(c.a)(this.visibleSublayers,this.layer.serviceSublayers,this.layer)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.allSublayers.on("change",()=>this.notifyChange("visibleSublayers")),e.on("sublayer-update",e=>this.notifyChange(y[e.propertyName]))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map(e=>e.id).join(","):"show:-1":null}get layerDefs(){const e=this.visibleSublayers.filter(e=>null!=e.definitionExpression);return e.length?JSON.stringify(e.reduce((e,t)=>(e[t.id]=t.definitionExpression,e),{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers"),this.commitProperty("timeExtent");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const t=this.layer.sublayers,r=t=>{const a=this.scale,s=0===a,i=0===t.minScale||a<=t.minScale,o=0===t.maxScale||a>=t.maxScale;t.visible&&(s||i&&o)&&(t.sublayers?t.sublayers.forEach(r):e.unshift(t))};t&&t.forEach(r);const a=this._get("visibleSublayers");return!a||a.length!==e.length||a.some((t,r)=>e[r]!==t)?e:a}toJSON(){const e=this.layer;let t={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?t.dynamicLayers=this.dynamicLayers:t={...t,layers:this.layers,layerDefs:this.layerDefs},t}};Object(a.a)([Object(s.b)({readOnly:!0})],b.prototype,"dynamicLayers",null),Object(a.a)([Object(s.b)({readOnly:!0})],b.prototype,"hasDynamicLayers",null),Object(a.a)([Object(s.b)()],b.prototype,"layer",null),Object(a.a)([Object(s.b)({readOnly:!0})],b.prototype,"layers",null),Object(a.a)([Object(s.b)({readOnly:!0})],b.prototype,"layerDefs",null),Object(a.a)([Object(s.b)({type:Number})],b.prototype,"scale",void 0),Object(a.a)([Object(s.b)(n.a)],b.prototype,"timeExtent",void 0),Object(a.a)([Object(s.b)({readOnly:!0})],b.prototype,"version",null),Object(a.a)([Object(s.b)({readOnly:!0})],b.prototype,"visibleSublayers",null),b=Object(a.a)([Object(i.a)("esri.layers.mixins.ExportImageParameters")],b)},704:function(e,t,r){"use strict";r.d(t,"a",(function(){return s}));var a=r(40);function s(e,t){const r=t||e.extent,s=e.width,i=Object(a.d)(r&&r.spatialReference);return r&&s?r.width/s*i*a.h*96:0}}}]);
//# sourceMappingURL=30.97895f59.chunk.js.map